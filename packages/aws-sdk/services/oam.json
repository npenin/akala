{
    "name": "oam",
    "commands": [
        {
            "name": "CreateLink",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CreateLink"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLinkOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateLinkInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "LabelTemplate": {},
                        "ResourceTypes": {},
                        "SinkIdentifier": {},
                        "Tags": {},
                        "LinkConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "CreateSink",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CreateSink"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSinkOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSinkInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "DeleteLink",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteLink"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLinkOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteLinkInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Identifier": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSink",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteSink"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSinkOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteSinkInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Identifier": {}
                    }
                }
            }
        },
        {
            "name": "GetLink",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetLink"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLinkOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetLinkInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Identifier": {}
                    }
                }
            }
        },
        {
            "name": "GetSink",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetSink"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSinkOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSinkInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Identifier": {}
                    }
                }
            }
        },
        {
            "name": "GetSinkPolicy",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetSinkPolicy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSinkPolicyOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSinkPolicyInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SinkIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "ListAttachedLinks",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListAttachedLinks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAttachedLinksOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListAttachedLinksInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {},
                        "SinkIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "ListLinks",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListLinks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListLinksOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListLinksInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListSinks",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListSinks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSinksOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListSinksInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceOutput"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "PutSinkPolicy",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/PutSinkPolicy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutSinkPolicyOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutSinkPolicyInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SinkIdentifier": {},
                        "Policy": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceOutput"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceOutput"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "TagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateLink",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateLink"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateLinkOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateLinkInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Identifier": {},
                        "ResourceTypes": {},
                        "LinkConfiguration": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateLinkInput": {
            "type": "object",
            "properties": {
                "LabelTemplate": {
                    "$ref": "#/$defs/LabelTemplate"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/ResourceTypesInput"
                },
                "SinkIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMapInput"
                },
                "LinkConfiguration": {
                    "$ref": "#/$defs/LinkConfiguration"
                }
            }
        },
        "LabelTemplate": {
            "type": "string"
        },
        "ResourceTypesInput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceType"
            }
        },
        "ResourceType": {
            "enum": [
                "AWS_CLOUDWATCH_METRIC",
                "AWS_LOGS_LOGGROUP",
                "AWS_XRAY_TRACE",
                "AWS_APPLICATIONINSIGHTS_APPLICATION",
                "AWS_INTERNETMONITOR_MONITOR",
                "AWS_APPLICATION_SIGNALS_SERVICE",
                "AWS_APPLICATION_SIGNALS_SLO"
            ]
        },
        "ResourceIdentifier": {
            "type": "string"
        },
        "TagMapInput": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "LinkConfiguration": {
            "type": "object",
            "properties": {
                "LogGroupConfiguration": {
                    "$ref": "#/$defs/LogGroupConfiguration"
                },
                "MetricConfiguration": {
                    "$ref": "#/$defs/MetricConfiguration"
                }
            }
        },
        "LogGroupConfiguration": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/LogsFilter"
                }
            }
        },
        "LogsFilter": {
            "type": "string"
        },
        "MetricConfiguration": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/MetricsFilter"
                }
            }
        },
        "MetricsFilter": {
            "type": "string"
        },
        "CreateLinkOutput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Id": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Label": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "LabelTemplate": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/ResourceTypesOutput"
                },
                "SinkArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMapOutput"
                },
                "LinkConfiguration": {
                    "$ref": "#/$defs/LinkConfiguration"
                }
            }
        },
        "ResourceTypesOutput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "TagMapOutput": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "CreateSinkInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/SinkName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMapInput"
                }
            }
        },
        "SinkName": {
            "type": "string"
        },
        "CreateSinkOutput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Id": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Name": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMapOutput"
                }
            }
        },
        "DeleteLinkInput": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                }
            }
        },
        "DeleteLinkOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteSinkInput": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                }
            }
        },
        "DeleteSinkOutput": {
            "type": "object",
            "properties": {}
        },
        "GetLinkInput": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                }
            }
        },
        "GetLinkOutput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Id": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Label": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "LabelTemplate": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/ResourceTypesOutput"
                },
                "SinkArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMapOutput"
                },
                "LinkConfiguration": {
                    "$ref": "#/$defs/LinkConfiguration"
                }
            }
        },
        "GetSinkInput": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                }
            }
        },
        "GetSinkOutput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Id": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Name": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMapOutput"
                }
            }
        },
        "GetSinkPolicyInput": {
            "type": "object",
            "properties": {
                "SinkIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                }
            }
        },
        "GetSinkPolicyOutput": {
            "type": "object",
            "properties": {
                "SinkArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "SinkId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Policy": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListAttachedLinksInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListAttachedLinksMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "SinkIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                }
            }
        },
        "ListAttachedLinksMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "NextToken": {
            "type": "string"
        },
        "ListAttachedLinksOutput": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/ListAttachedLinksItems"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListAttachedLinksItems": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListAttachedLinksItem"
            }
        },
        "ListAttachedLinksItem": {
            "type": "object",
            "properties": {
                "Label": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "LinkArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/ResourceTypesOutput"
                }
            }
        },
        "ListLinksInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListLinksMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListLinksMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListLinksOutput": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/ListLinksItems"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListLinksItems": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListLinksItem"
            }
        },
        "ListLinksItem": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Id": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Label": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/ResourceTypesOutput"
                },
                "SinkArn": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListSinksInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListSinksMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListSinksMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListSinksOutput": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/ListSinksItems"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListSinksItems": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListSinksItem"
            }
        },
        "ListSinksItem": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Id": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Name": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListTagsForResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "Arn": {
            "type": "string"
        },
        "ListTagsForResourceOutput": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagMapOutput"
                }
            }
        },
        "PutSinkPolicyInput": {
            "type": "object",
            "properties": {
                "SinkIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "Policy": {
                    "$ref": "#/$defs/SinkPolicy"
                }
            }
        },
        "SinkPolicy": {
            "type": "string"
        },
        "PutSinkPolicyOutput": {
            "type": "object",
            "properties": {
                "SinkArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "SinkId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Policy": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "TagResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMapInput"
                }
            }
        },
        "TagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "TagKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UntagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateLinkInput": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/ResourceTypesInput"
                },
                "LinkConfiguration": {
                    "$ref": "#/$defs/LinkConfiguration"
                }
            }
        },
        "UpdateLinkOutput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Id": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Label": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "LabelTemplate": {
                    "$ref": "#/$defs/LabelTemplate"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/ResourceTypesOutput"
                },
                "SinkArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMapOutput"
                },
                "LinkConfiguration": {
                    "$ref": "#/$defs/LinkConfiguration"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://oam-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://oam-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://oam.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://oam.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                }
            ]
        }
    }
}
