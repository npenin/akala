{
    "name": "health",
    "commands": [
        {
            "name": "DescribeAffectedAccountsForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DescribeAffectedAccountsForOrganization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAffectedAccountsForOrganizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAffectedAccountsForOrganizationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAffectedEntities",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DescribeAffectedEntities"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAffectedEntitiesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAffectedEntitiesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAffectedEntitiesForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DescribeAffectedEntitiesForOrganization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAffectedEntitiesForOrganizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAffectedEntitiesForOrganizationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEntityAggregates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DescribeEntityAggregates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEntityAggregatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEntityAggregatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEntityAggregatesForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DescribeEntityAggregatesForOrganization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEntityAggregatesForOrganizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEntityAggregatesForOrganizationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEventAggregates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DescribeEventAggregates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEventAggregatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEventAggregatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEventDetails",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DescribeEventDetails"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEventDetailsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEventDetailsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEventDetailsForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DescribeEventDetailsForOrganization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEventDetailsForOrganizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEventDetailsForOrganizationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEvents",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DescribeEvents"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEventsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEventsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEventsForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DescribeEventsForOrganization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEventsForOrganizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEventsForOrganizationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEventTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DescribeEventTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEventTypesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEventTypesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeHealthServiceStatusForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DescribeHealthServiceStatusForOrganization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeHealthServiceStatusForOrganizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableHealthServiceAccessForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.DisableHealthServiceAccessForOrganization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableHealthServiceAccessForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHealth_20160804.EnableHealthServiceAccessForOrganization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "DescribeAffectedAccountsForOrganizationResponse": {
            "type": "object",
            "properties": {
                "affectedAccounts": {
                    "$ref": "#/$defs/affectedAccountsList"
                },
                "eventScopeCode": {
                    "$ref": "#/$defs/eventScopeCode"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                }
            }
        },
        "affectedAccountsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/accountId"
            }
        },
        "accountId": {
            "type": "string"
        },
        "eventScopeCode": {
            "enum": [
                "PUBLIC",
                "ACCOUNT_SPECIFIC",
                "NONE"
            ]
        },
        "nextToken": {
            "type": "string"
        },
        "DescribeAffectedAccountsForOrganizationRequest": {
            "type": "object",
            "properties": {
                "eventArn": {
                    "$ref": "#/$defs/eventArn"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/maxResults"
                }
            }
        },
        "eventArn": {
            "type": "string"
        },
        "maxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeAffectedEntitiesResponse": {
            "type": "object",
            "properties": {
                "entities": {
                    "$ref": "#/$defs/EntityList"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                }
            }
        },
        "EntityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AffectedEntity"
            }
        },
        "AffectedEntity": {
            "type": "object",
            "properties": {
                "entityArn": {
                    "$ref": "#/$defs/entityArn"
                },
                "eventArn": {
                    "$ref": "#/$defs/eventArn"
                },
                "entityValue": {
                    "$ref": "#/$defs/entityValue"
                },
                "entityUrl": {
                    "$ref": "#/$defs/entityUrl"
                },
                "awsAccountId": {
                    "$ref": "#/$defs/accountId"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "statusCode": {
                    "$ref": "#/$defs/entityStatusCode"
                },
                "tags": {
                    "$ref": "#/$defs/tagSet"
                },
                "entityMetadata": {
                    "$ref": "#/$defs/entityMetadata"
                }
            }
        },
        "entityArn": {
            "type": "string"
        },
        "entityValue": {
            "type": "string"
        },
        "entityUrl": {
            "type": "string"
        },
        "timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "entityStatusCode": {
            "enum": [
                "IMPAIRED",
                "UNIMPAIRED",
                "UNKNOWN",
                "PENDING",
                "RESOLVED"
            ]
        },
        "tagSet": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/tagValue"
            }
        },
        "tagValue": {
            "type": "string"
        },
        "entityMetadata": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/entityMetadataValue"
            }
        },
        "entityMetadataValue": {
            "type": "string"
        },
        "DescribeAffectedEntitiesRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/$defs/EntityFilter"
                },
                "locale": {
                    "$ref": "#/$defs/locale"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/maxResults"
                }
            }
        },
        "EntityFilter": {
            "type": "object",
            "properties": {
                "eventArns": {
                    "$ref": "#/$defs/eventArnList"
                },
                "entityArns": {
                    "$ref": "#/$defs/entityArnList"
                },
                "entityValues": {
                    "$ref": "#/$defs/entityValueList"
                },
                "lastUpdatedTimes": {
                    "$ref": "#/$defs/dateTimeRangeList"
                },
                "tags": {
                    "$ref": "#/$defs/tagFilter"
                },
                "statusCodes": {
                    "$ref": "#/$defs/entityStatusCodeList"
                }
            }
        },
        "eventArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/eventArn"
            }
        },
        "entityArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/entityArn"
            }
        },
        "entityValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/entityValue"
            }
        },
        "dateTimeRangeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DateTimeRange"
            }
        },
        "DateTimeRange": {
            "type": "object",
            "properties": {
                "from": {
                    "$ref": "#/$defs/timestamp"
                },
                "to": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "tagFilter": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/tagSet"
            }
        },
        "entityStatusCodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/entityStatusCode"
            }
        },
        "locale": {
            "type": "string"
        },
        "DescribeAffectedEntitiesForOrganizationResponse": {
            "type": "object",
            "properties": {
                "entities": {
                    "$ref": "#/$defs/EntityList"
                },
                "failedSet": {
                    "$ref": "#/$defs/DescribeAffectedEntitiesForOrganizationFailedSet"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                }
            }
        },
        "DescribeAffectedEntitiesForOrganizationFailedSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationAffectedEntitiesErrorItem"
            }
        },
        "OrganizationAffectedEntitiesErrorItem": {
            "type": "object",
            "properties": {
                "awsAccountId": {
                    "$ref": "#/$defs/accountId"
                },
                "eventArn": {
                    "$ref": "#/$defs/eventArn"
                },
                "errorName": {
                    "$ref": "#/$defs/string"
                },
                "errorMessage": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "string": {
            "type": "string"
        },
        "DescribeAffectedEntitiesForOrganizationRequest": {
            "type": "object",
            "properties": {
                "organizationEntityFilters": {
                    "$ref": "#/$defs/OrganizationEntityFiltersList"
                },
                "locale": {
                    "$ref": "#/$defs/locale"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/maxResultsLowerRange"
                },
                "organizationEntityAccountFilters": {
                    "$ref": "#/$defs/OrganizationEntityAccountFiltersList"
                }
            }
        },
        "OrganizationEntityFiltersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventAccountFilter"
            }
        },
        "EventAccountFilter": {
            "type": "object",
            "properties": {
                "eventArn": {
                    "$ref": "#/$defs/eventArn"
                },
                "awsAccountId": {
                    "$ref": "#/$defs/accountId"
                }
            }
        },
        "maxResultsLowerRange": {
            "type": "integer",
            "format": "int32"
        },
        "OrganizationEntityAccountFiltersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EntityAccountFilter"
            }
        },
        "EntityAccountFilter": {
            "type": "object",
            "properties": {
                "eventArn": {
                    "$ref": "#/$defs/eventArn"
                },
                "awsAccountId": {
                    "$ref": "#/$defs/accountId"
                },
                "statusCodes": {
                    "$ref": "#/$defs/entityStatusCodeList"
                }
            }
        },
        "DescribeEntityAggregatesResponse": {
            "type": "object",
            "properties": {
                "entityAggregates": {
                    "$ref": "#/$defs/EntityAggregateList"
                }
            }
        },
        "EntityAggregateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EntityAggregate"
            }
        },
        "EntityAggregate": {
            "type": "object",
            "properties": {
                "eventArn": {
                    "$ref": "#/$defs/eventArn"
                },
                "count": {
                    "$ref": "#/$defs/count"
                },
                "statuses": {
                    "$ref": "#/$defs/entityStatuses"
                }
            }
        },
        "count": {
            "type": "integer",
            "format": "int32"
        },
        "entityStatuses": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/count"
            }
        },
        "DescribeEntityAggregatesRequest": {
            "type": "object",
            "properties": {
                "eventArns": {
                    "$ref": "#/$defs/EventArnsList"
                }
            }
        },
        "EventArnsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/eventArn"
            }
        },
        "DescribeEntityAggregatesForOrganizationResponse": {
            "type": "object",
            "properties": {
                "organizationEntityAggregates": {
                    "$ref": "#/$defs/OrganizationEntityAggregatesList"
                }
            }
        },
        "OrganizationEntityAggregatesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationEntityAggregate"
            }
        },
        "OrganizationEntityAggregate": {
            "type": "object",
            "properties": {
                "eventArn": {
                    "$ref": "#/$defs/eventArn"
                },
                "count": {
                    "$ref": "#/$defs/count"
                },
                "statuses": {
                    "$ref": "#/$defs/entityStatuses"
                },
                "accounts": {
                    "$ref": "#/$defs/AccountEntityAggregatesList"
                }
            }
        },
        "AccountEntityAggregatesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountEntityAggregate"
            }
        },
        "AccountEntityAggregate": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/eventArn"
                },
                "count": {
                    "$ref": "#/$defs/count"
                },
                "statuses": {
                    "$ref": "#/$defs/entityStatuses"
                }
            }
        },
        "DescribeEntityAggregatesForOrganizationRequest": {
            "type": "object",
            "properties": {
                "eventArns": {
                    "$ref": "#/$defs/OrganizationEventArnsList"
                },
                "awsAccountIds": {
                    "$ref": "#/$defs/OrganizationAccountIdsList"
                }
            }
        },
        "OrganizationEventArnsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/eventArn"
            }
        },
        "OrganizationAccountIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/accountId"
            }
        },
        "DescribeEventAggregatesResponse": {
            "type": "object",
            "properties": {
                "eventAggregates": {
                    "$ref": "#/$defs/EventAggregateList"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                }
            }
        },
        "EventAggregateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventAggregate"
            }
        },
        "EventAggregate": {
            "type": "object",
            "properties": {
                "aggregateValue": {
                    "$ref": "#/$defs/aggregateValue"
                },
                "count": {
                    "$ref": "#/$defs/count"
                }
            }
        },
        "aggregateValue": {
            "type": "string"
        },
        "DescribeEventAggregatesRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/$defs/EventFilter"
                },
                "aggregateField": {
                    "$ref": "#/$defs/eventAggregateField"
                },
                "maxResults": {
                    "$ref": "#/$defs/maxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                }
            }
        },
        "EventFilter": {
            "type": "object",
            "properties": {
                "eventArns": {
                    "$ref": "#/$defs/eventArnList"
                },
                "eventTypeCodes": {
                    "$ref": "#/$defs/eventTypeList2"
                },
                "services": {
                    "$ref": "#/$defs/serviceList"
                },
                "regions": {
                    "$ref": "#/$defs/regionList"
                },
                "availabilityZones": {
                    "$ref": "#/$defs/availabilityZones"
                },
                "startTimes": {
                    "$ref": "#/$defs/dateTimeRangeList"
                },
                "endTimes": {
                    "$ref": "#/$defs/dateTimeRangeList"
                },
                "lastUpdatedTimes": {
                    "$ref": "#/$defs/dateTimeRangeList"
                },
                "entityArns": {
                    "$ref": "#/$defs/entityArnList"
                },
                "entityValues": {
                    "$ref": "#/$defs/entityValueList"
                },
                "eventTypeCategories": {
                    "$ref": "#/$defs/eventTypeCategoryList2"
                },
                "tags": {
                    "$ref": "#/$defs/tagFilter"
                },
                "eventStatusCodes": {
                    "$ref": "#/$defs/eventStatusCodeList"
                }
            }
        },
        "eventTypeList2": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventType2"
            }
        },
        "EventType2": {
            "type": "string"
        },
        "serviceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/service"
            }
        },
        "service": {
            "type": "string"
        },
        "regionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/region"
            }
        },
        "region": {
            "type": "string"
        },
        "availabilityZones": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/availabilityZone"
            }
        },
        "availabilityZone": {
            "type": "string"
        },
        "eventTypeCategoryList2": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/eventTypeCategory"
            }
        },
        "eventTypeCategory": {
            "enum": [
                "ISSUE",
                "ACCOUNT_NOTIFICATION",
                "SCHEDULED_CHANGE",
                "INVESTIGATION"
            ]
        },
        "eventStatusCodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/eventStatusCode"
            }
        },
        "eventStatusCode": {
            "enum": [
                "OPEN",
                "CLOSED",
                "UPCOMING"
            ]
        },
        "eventAggregateField": {
            "enum": [
                "EventTypeCategory"
            ]
        },
        "DescribeEventDetailsResponse": {
            "type": "object",
            "properties": {
                "successfulSet": {
                    "$ref": "#/$defs/DescribeEventDetailsSuccessfulSet"
                },
                "failedSet": {
                    "$ref": "#/$defs/DescribeEventDetailsFailedSet"
                }
            }
        },
        "DescribeEventDetailsSuccessfulSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventDetails"
            }
        },
        "EventDetails": {
            "type": "object",
            "properties": {
                "event": {
                    "$ref": "#/$defs/Event"
                },
                "eventDescription": {
                    "$ref": "#/$defs/EventDescription"
                },
                "eventMetadata": {
                    "$ref": "#/$defs/eventMetadata"
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/eventArn"
                },
                "service": {
                    "$ref": "#/$defs/service"
                },
                "eventTypeCode": {
                    "$ref": "#/$defs/eventTypeCode"
                },
                "eventTypeCategory": {
                    "$ref": "#/$defs/eventTypeCategory"
                },
                "region": {
                    "$ref": "#/$defs/region"
                },
                "availabilityZone": {
                    "$ref": "#/$defs/availabilityZone"
                },
                "startTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "statusCode": {
                    "$ref": "#/$defs/eventStatusCode"
                },
                "eventScopeCode": {
                    "$ref": "#/$defs/eventScopeCode"
                }
            }
        },
        "eventTypeCode": {
            "type": "string"
        },
        "EventDescription": {
            "type": "object",
            "properties": {
                "latestDescription": {
                    "$ref": "#/$defs/EventDescription2"
                }
            }
        },
        "EventDescription2": {
            "type": "string"
        },
        "eventMetadata": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/metadataValue"
            }
        },
        "metadataValue": {
            "type": "string"
        },
        "DescribeEventDetailsFailedSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventDetailsErrorItem"
            }
        },
        "EventDetailsErrorItem": {
            "type": "object",
            "properties": {
                "eventArn": {
                    "$ref": "#/$defs/eventArn"
                },
                "errorName": {
                    "$ref": "#/$defs/string"
                },
                "errorMessage": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DescribeEventDetailsRequest": {
            "type": "object",
            "properties": {
                "eventArns": {
                    "$ref": "#/$defs/eventArnList"
                },
                "locale": {
                    "$ref": "#/$defs/locale"
                }
            }
        },
        "DescribeEventDetailsForOrganizationResponse": {
            "type": "object",
            "properties": {
                "successfulSet": {
                    "$ref": "#/$defs/DescribeEventDetailsForOrganizationSuccessfulSet"
                },
                "failedSet": {
                    "$ref": "#/$defs/DescribeEventDetailsForOrganizationFailedSet"
                }
            }
        },
        "DescribeEventDetailsForOrganizationSuccessfulSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationEventDetails"
            }
        },
        "OrganizationEventDetails": {
            "type": "object",
            "properties": {
                "awsAccountId": {
                    "$ref": "#/$defs/accountId"
                },
                "event": {
                    "$ref": "#/$defs/Event"
                },
                "eventDescription": {
                    "$ref": "#/$defs/EventDescription"
                },
                "eventMetadata": {
                    "$ref": "#/$defs/eventMetadata"
                }
            }
        },
        "DescribeEventDetailsForOrganizationFailedSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationEventDetailsErrorItem"
            }
        },
        "OrganizationEventDetailsErrorItem": {
            "type": "object",
            "properties": {
                "awsAccountId": {
                    "$ref": "#/$defs/accountId"
                },
                "eventArn": {
                    "$ref": "#/$defs/eventArn"
                },
                "errorName": {
                    "$ref": "#/$defs/string"
                },
                "errorMessage": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DescribeEventDetailsForOrganizationRequest": {
            "type": "object",
            "properties": {
                "organizationEventDetailFilters": {
                    "$ref": "#/$defs/OrganizationEventDetailFiltersList"
                },
                "locale": {
                    "$ref": "#/$defs/locale"
                }
            }
        },
        "OrganizationEventDetailFiltersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventAccountFilter"
            }
        },
        "DescribeEventsResponse": {
            "type": "object",
            "properties": {
                "events": {
                    "$ref": "#/$defs/EventList"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                }
            }
        },
        "EventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Event"
            }
        },
        "DescribeEventsRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/$defs/EventFilter"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/maxResults"
                },
                "locale": {
                    "$ref": "#/$defs/locale"
                }
            }
        },
        "DescribeEventsForOrganizationResponse": {
            "type": "object",
            "properties": {
                "events": {
                    "$ref": "#/$defs/OrganizationEventList"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                }
            }
        },
        "OrganizationEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationEvent"
            }
        },
        "OrganizationEvent": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/eventArn"
                },
                "service": {
                    "$ref": "#/$defs/service"
                },
                "eventTypeCode": {
                    "$ref": "#/$defs/eventTypeCode"
                },
                "eventTypeCategory": {
                    "$ref": "#/$defs/eventTypeCategory"
                },
                "eventScopeCode": {
                    "$ref": "#/$defs/eventScopeCode"
                },
                "region": {
                    "$ref": "#/$defs/region"
                },
                "startTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "statusCode": {
                    "$ref": "#/$defs/eventStatusCode"
                }
            }
        },
        "DescribeEventsForOrganizationRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/$defs/OrganizationEventFilter"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/maxResultsLowerRange"
                },
                "locale": {
                    "$ref": "#/$defs/locale"
                }
            }
        },
        "OrganizationEventFilter": {
            "type": "object",
            "properties": {
                "eventTypeCodes": {
                    "$ref": "#/$defs/eventTypeList2"
                },
                "awsAccountIds": {
                    "$ref": "#/$defs/awsAccountIdsList"
                },
                "services": {
                    "$ref": "#/$defs/serviceList"
                },
                "regions": {
                    "$ref": "#/$defs/regionList"
                },
                "startTime": {
                    "$ref": "#/$defs/DateTimeRange"
                },
                "endTime": {
                    "$ref": "#/$defs/DateTimeRange"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/DateTimeRange"
                },
                "entityArns": {
                    "$ref": "#/$defs/entityArnList"
                },
                "entityValues": {
                    "$ref": "#/$defs/entityValueList"
                },
                "eventTypeCategories": {
                    "$ref": "#/$defs/eventTypeCategoryList2"
                },
                "eventStatusCodes": {
                    "$ref": "#/$defs/eventStatusCodeList"
                }
            }
        },
        "awsAccountIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/accountId"
            }
        },
        "DescribeEventTypesResponse": {
            "type": "object",
            "properties": {
                "eventTypes": {
                    "$ref": "#/$defs/EventTypeList"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                }
            }
        },
        "EventTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventType"
            }
        },
        "EventType": {
            "type": "object",
            "properties": {
                "service": {
                    "$ref": "#/$defs/service"
                },
                "code": {
                    "$ref": "#/$defs/eventTypeCode"
                },
                "category": {
                    "$ref": "#/$defs/eventTypeCategory"
                }
            }
        },
        "DescribeEventTypesRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/$defs/EventTypeFilter"
                },
                "locale": {
                    "$ref": "#/$defs/locale"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/maxResults"
                }
            }
        },
        "EventTypeFilter": {
            "type": "object",
            "properties": {
                "eventTypeCodes": {
                    "$ref": "#/$defs/EventTypeCodeList"
                },
                "services": {
                    "$ref": "#/$defs/serviceList"
                },
                "eventTypeCategories": {
                    "$ref": "#/$defs/EventTypeCategoryList"
                }
            }
        },
        "EventTypeCodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/eventTypeCode"
            }
        },
        "EventTypeCategoryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/eventTypeCategory"
            }
        },
        "DescribeHealthServiceStatusForOrganizationResponse": {
            "type": "object",
            "properties": {
                "healthServiceAccessStatusForOrganization": {
                    "$ref": "#/$defs/healthServiceAccessStatusForOrganization"
                }
            }
        },
        "healthServiceAccessStatusForOrganization": {
            "type": "string"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://health-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://health-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://health.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                },
                                                "aws-global"
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://global.health.amazonaws.com",
                                        "properties": {
                                            "authSchemes": [
                                                {
                                                    "name": "sigv4",
                                                    "signingName": "health",
                                                    "signingRegion": "us-east-1"
                                                }
                                            ]
                                        },
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                },
                                                "aws-cn-global"
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://global.health.amazonaws.com.cn",
                                        "properties": {
                                            "authSchemes": [
                                                {
                                                    "name": "sigv4",
                                                    "signingName": "health",
                                                    "signingRegion": "cn-northwest-1"
                                                }
                                            ]
                                        },
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://health.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}