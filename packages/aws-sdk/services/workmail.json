{
    "name": "workmail",
    "commands": [
        {
            "name": "AssociateDelegateToResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateDelegateToResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateDelegateToResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateDelegateToResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateMemberToGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateMemberToGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateMemberToGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateMemberToGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssumeImpersonationRole",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssumeImpersonationRole"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssumeImpersonationRoleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssumeImpersonationRoleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelMailboxExportJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelMailboxExportJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelMailboxExportJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelMailboxExportJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateAlias",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateAlias"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAliasResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAliasRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateAvailabilityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateAvailabilityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAvailabilityConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAvailabilityConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateImpersonationRole",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateImpersonationRole"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateImpersonationRoleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateImpersonationRoleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateMobileDeviceAccessRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateMobileDeviceAccessRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMobileDeviceAccessRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMobileDeviceAccessRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateOrganization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateOrganization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateOrganizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateOrganizationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAccessControlRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteAccessControlRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAccessControlRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAccessControlRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAlias",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteAlias"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAliasResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAliasRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAvailabilityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteAvailabilityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAvailabilityConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAvailabilityConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteEmailMonitoringConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteEmailMonitoringConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEmailMonitoringConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEmailMonitoringConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteImpersonationRole",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteImpersonationRole"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteImpersonationRoleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteImpersonationRoleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteMailboxPermissions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteMailboxPermissions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMailboxPermissionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMailboxPermissionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteMobileDeviceAccessOverride",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteMobileDeviceAccessOverride"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMobileDeviceAccessOverrideResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMobileDeviceAccessOverrideRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteMobileDeviceAccessRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteMobileDeviceAccessRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMobileDeviceAccessRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMobileDeviceAccessRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteOrganization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteOrganization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteOrganizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteOrganizationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRetentionPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteRetentionPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRetentionPolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRetentionPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterFromWorkMail",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeregisterFromWorkMail"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterFromWorkMailResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeregisterFromWorkMailRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterMailDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeregisterMailDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterMailDomainResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeregisterMailDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEmailMonitoringConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeEmailMonitoringConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEmailMonitoringConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEmailMonitoringConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEntity",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeEntity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEntityResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEntityRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInboundDmarcSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeInboundDmarcSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInboundDmarcSettingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInboundDmarcSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeMailboxExportJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeMailboxExportJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMailboxExportJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMailboxExportJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeOrganization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeOrganization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeOrganizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeOrganizationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateDelegateFromResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateDelegateFromResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateDelegateFromResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateDelegateFromResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateMemberFromGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateMemberFromGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateMemberFromGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateMemberFromGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAccessControlEffect",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetAccessControlEffect"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAccessControlEffectResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAccessControlEffectRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDefaultRetentionPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDefaultRetentionPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDefaultRetentionPolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDefaultRetentionPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetImpersonationRole",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetImpersonationRole"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetImpersonationRoleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetImpersonationRoleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetImpersonationRoleEffect",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetImpersonationRoleEffect"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetImpersonationRoleEffectResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetImpersonationRoleEffectRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMailboxDetails",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMailboxDetails"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMailboxDetailsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMailboxDetailsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMailDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMailDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMailDomainResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMailDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMobileDeviceAccessEffect",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMobileDeviceAccessEffect"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMobileDeviceAccessEffectResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMobileDeviceAccessEffectRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMobileDeviceAccessOverride",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMobileDeviceAccessOverride"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMobileDeviceAccessOverrideResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMobileDeviceAccessOverrideRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAccessControlRules",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListAccessControlRules"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAccessControlRulesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAccessControlRulesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAliases",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListAliases"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAliasesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAliasesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAvailabilityConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListAvailabilityConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAvailabilityConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAvailabilityConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListGroupMembers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListGroupMembers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListGroupMembersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListGroupMembersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListGroupsForEntity",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListGroupsForEntity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListGroupsForEntityResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListGroupsForEntityRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListImpersonationRoles",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListImpersonationRoles"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListImpersonationRolesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListImpersonationRolesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMailboxExportJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListMailboxExportJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMailboxExportJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMailboxExportJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMailboxPermissions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListMailboxPermissions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMailboxPermissionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMailboxPermissionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMailDomains",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListMailDomains"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMailDomainsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMailDomainsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMobileDeviceAccessOverrides",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListMobileDeviceAccessOverrides"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMobileDeviceAccessOverridesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMobileDeviceAccessOverridesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMobileDeviceAccessRules",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListMobileDeviceAccessRules"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMobileDeviceAccessRulesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMobileDeviceAccessRulesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListOrganizations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListOrganizations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOrganizationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOrganizationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResourceDelegates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResourceDelegates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResourceDelegatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResourceDelegatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResourcesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResourcesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListUsers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListUsers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListUsersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListUsersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutAccessControlRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutAccessControlRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAccessControlRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAccessControlRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutEmailMonitoringConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutEmailMonitoringConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEmailMonitoringConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutEmailMonitoringConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutInboundDmarcSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutInboundDmarcSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutInboundDmarcSettingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutInboundDmarcSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutMailboxPermissions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutMailboxPermissions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutMailboxPermissionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutMailboxPermissionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutMobileDeviceAccessOverride",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutMobileDeviceAccessOverride"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutMobileDeviceAccessOverrideResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutMobileDeviceAccessOverrideRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutRetentionPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutRetentionPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutRetentionPolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutRetentionPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterMailDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RegisterMailDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterMailDomainResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterMailDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterToWorkMail",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RegisterToWorkMail"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterToWorkMailResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterToWorkMailRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetPassword",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResetPassword"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetPasswordResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetPasswordRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartMailboxExportJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartMailboxExportJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartMailboxExportJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartMailboxExportJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TestAvailabilityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TestAvailabilityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestAvailabilityConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestAvailabilityConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateAvailabilityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateAvailabilityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAvailabilityConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAvailabilityConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDefaultMailDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDefaultMailDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDefaultMailDomainResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDefaultMailDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateImpersonationRole",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateImpersonationRole"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateImpersonationRoleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateImpersonationRoleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateMailboxQuota",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateMailboxQuota"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMailboxQuotaResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMailboxQuotaRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateMobileDeviceAccessRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateMobileDeviceAccessRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMobileDeviceAccessRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMobileDeviceAccessRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePrimaryEmailAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdatePrimaryEmailAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePrimaryEmailAddressResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePrimaryEmailAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateUserRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateDelegateToResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "AssociateDelegateToResourceRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "EntityId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "OrganizationId": {
            "type": "string"
        },
        "EntityIdentifier": {
            "type": "string"
        },
        "AssociateMemberToGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "AssociateMemberToGroupRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "GroupId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "MemberId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "AssumeImpersonationRoleResponse": {
            "type": "object",
            "properties": {
                "Token": {
                    "$ref": "#/$defs/ImpersonationToken"
                },
                "ExpiresIn": {
                    "$ref": "#/$defs/ExpiresIn"
                }
            }
        },
        "ImpersonationToken": {
            "type": "string"
        },
        "ExpiresIn": {
            "type": "integer",
            "format": "int64"
        },
        "AssumeImpersonationRoleRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ImpersonationRoleId": {
                    "$ref": "#/$defs/ImpersonationRoleId"
                }
            }
        },
        "ImpersonationRoleId": {
            "type": "string"
        },
        "CancelMailboxExportJobResponse": {
            "type": "object",
            "properties": {}
        },
        "CancelMailboxExportJobRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/IdempotencyClientToken"
                },
                "JobId": {
                    "$ref": "#/$defs/MailboxExportJobId"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                }
            }
        },
        "IdempotencyClientToken": {
            "type": "string"
        },
        "MailboxExportJobId": {
            "type": "string"
        },
        "CreateAliasResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateAliasRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "EntityId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "Alias": {
                    "$ref": "#/$defs/EmailAddress"
                }
            }
        },
        "WorkMailIdentifier": {
            "type": "string"
        },
        "EmailAddress": {
            "type": "string"
        },
        "CreateAvailabilityConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateAvailabilityConfigurationRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/IdempotencyClientToken"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "EwsProvider": {
                    "$ref": "#/$defs/EwsAvailabilityProvider"
                },
                "LambdaProvider": {
                    "$ref": "#/$defs/LambdaAvailabilityProvider"
                }
            }
        },
        "DomainName": {
            "type": "string"
        },
        "EwsAvailabilityProvider": {
            "type": "object",
            "properties": {
                "EwsEndpoint": {
                    "$ref": "#/$defs/Url"
                },
                "EwsUsername": {
                    "$ref": "#/$defs/ExternalUserName"
                },
                "EwsPassword": {
                    "$ref": "#/$defs/Password"
                }
            }
        },
        "Url": {
            "type": "string"
        },
        "ExternalUserName": {
            "type": "string"
        },
        "Password": {
            "type": "string"
        },
        "LambdaAvailabilityProvider": {
            "type": "object",
            "properties": {
                "LambdaArn": {
                    "$ref": "#/$defs/LambdaArn"
                }
            }
        },
        "LambdaArn": {
            "type": "string"
        },
        "CreateGroupResponse": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                }
            }
        },
        "CreateGroupRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "Name": {
                    "$ref": "#/$defs/GroupName"
                },
                "HiddenFromGlobalAddressList": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GroupName": {
            "type": "string"
        },
        "Boolean": {
            "type": "boolean"
        },
        "CreateImpersonationRoleResponse": {
            "type": "object",
            "properties": {
                "ImpersonationRoleId": {
                    "$ref": "#/$defs/ImpersonationRoleId"
                }
            }
        },
        "CreateImpersonationRoleRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/IdempotencyClientToken"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "Name": {
                    "$ref": "#/$defs/ImpersonationRoleName"
                },
                "Type": {
                    "$ref": "#/$defs/ImpersonationRoleType"
                },
                "Description": {
                    "$ref": "#/$defs/ImpersonationRoleDescription"
                },
                "Rules": {
                    "$ref": "#/$defs/ImpersonationRuleList"
                }
            }
        },
        "ImpersonationRoleName": {
            "type": "string"
        },
        "ImpersonationRoleType": {
            "enum": [
                "FULL_ACCESS",
                "READ_ONLY"
            ]
        },
        "ImpersonationRoleDescription": {
            "type": "string"
        },
        "ImpersonationRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImpersonationRule"
            }
        },
        "ImpersonationRule": {
            "type": "object",
            "properties": {
                "ImpersonationRuleId": {
                    "$ref": "#/$defs/ImpersonationRuleId"
                },
                "Name": {
                    "$ref": "#/$defs/ImpersonationRuleName"
                },
                "Description": {
                    "$ref": "#/$defs/ImpersonationRuleDescription"
                },
                "Effect": {
                    "$ref": "#/$defs/AccessEffect"
                },
                "TargetUsers": {
                    "$ref": "#/$defs/TargetUsers"
                },
                "NotTargetUsers": {
                    "$ref": "#/$defs/TargetUsers"
                }
            }
        },
        "ImpersonationRuleId": {
            "type": "string"
        },
        "ImpersonationRuleName": {
            "type": "string"
        },
        "ImpersonationRuleDescription": {
            "type": "string"
        },
        "AccessEffect": {
            "enum": [
                "ALLOW",
                "DENY"
            ]
        },
        "TargetUsers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EntityIdentifier"
            }
        },
        "CreateMobileDeviceAccessRuleResponse": {
            "type": "object",
            "properties": {
                "MobileDeviceAccessRuleId": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleId"
                }
            }
        },
        "MobileDeviceAccessRuleId": {
            "type": "string"
        },
        "CreateMobileDeviceAccessRuleRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ClientToken": {
                    "$ref": "#/$defs/IdempotencyClientToken"
                },
                "Name": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleName"
                },
                "Description": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleDescription"
                },
                "Effect": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleEffect"
                },
                "DeviceTypes": {
                    "$ref": "#/$defs/DeviceTypeList"
                },
                "NotDeviceTypes": {
                    "$ref": "#/$defs/DeviceTypeList"
                },
                "DeviceModels": {
                    "$ref": "#/$defs/DeviceModelList"
                },
                "NotDeviceModels": {
                    "$ref": "#/$defs/DeviceModelList"
                },
                "DeviceOperatingSystems": {
                    "$ref": "#/$defs/DeviceOperatingSystemList"
                },
                "NotDeviceOperatingSystems": {
                    "$ref": "#/$defs/DeviceOperatingSystemList"
                },
                "DeviceUserAgents": {
                    "$ref": "#/$defs/DeviceUserAgentList"
                },
                "NotDeviceUserAgents": {
                    "$ref": "#/$defs/DeviceUserAgentList"
                }
            }
        },
        "MobileDeviceAccessRuleName": {
            "type": "string"
        },
        "MobileDeviceAccessRuleDescription": {
            "type": "string"
        },
        "MobileDeviceAccessRuleEffect": {
            "enum": [
                "ALLOW",
                "DENY"
            ]
        },
        "DeviceTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeviceType"
            }
        },
        "DeviceType": {
            "type": "string"
        },
        "DeviceModelList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeviceModel"
            }
        },
        "DeviceModel": {
            "type": "string"
        },
        "DeviceOperatingSystemList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeviceOperatingSystem"
            }
        },
        "DeviceOperatingSystem": {
            "type": "string"
        },
        "DeviceUserAgentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeviceUserAgent"
            }
        },
        "DeviceUserAgent": {
            "type": "string"
        },
        "CreateOrganizationResponse": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                }
            }
        },
        "CreateOrganizationRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Alias": {
                    "$ref": "#/$defs/OrganizationName"
                },
                "ClientToken": {
                    "$ref": "#/$defs/IdempotencyClientToken"
                },
                "Domains": {
                    "$ref": "#/$defs/Domains"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                },
                "EnableInteroperability": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DirectoryId": {
            "type": "string"
        },
        "OrganizationName": {
            "type": "string"
        },
        "Domains": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Domain"
            }
        },
        "Domain": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "HostedZoneId": {
                    "$ref": "#/$defs/HostedZoneId"
                }
            }
        },
        "HostedZoneId": {
            "type": "string"
        },
        "KmsKeyArn": {
            "type": "string"
        },
        "CreateResourceResponse": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "ResourceId": {
            "type": "string"
        },
        "CreateResourceRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "Name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "Type": {
                    "$ref": "#/$defs/ResourceType"
                },
                "Description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "HiddenFromGlobalAddressList": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ResourceName": {
            "type": "string"
        },
        "ResourceType": {
            "enum": [
                "ROOM",
                "EQUIPMENT"
            ]
        },
        "ResourceDescription": {
            "type": "string"
        },
        "CreateUserResponse": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                }
            }
        },
        "CreateUserRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "Name": {
                    "$ref": "#/$defs/UserName"
                },
                "DisplayName": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Password": {
                    "$ref": "#/$defs/Password"
                },
                "Role": {
                    "$ref": "#/$defs/UserRole"
                },
                "FirstName": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "LastName": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "HiddenFromGlobalAddressList": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UserName": {
            "type": "string"
        },
        "UserAttribute": {
            "type": "string"
        },
        "UserRole": {
            "enum": [
                "USER",
                "RESOURCE",
                "SYSTEM_USER",
                "REMOTE_USER"
            ]
        },
        "DeleteAccessControlRuleResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAccessControlRuleRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "Name": {
                    "$ref": "#/$defs/AccessControlRuleName"
                }
            }
        },
        "AccessControlRuleName": {
            "type": "string"
        },
        "DeleteAliasResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAliasRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "EntityId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "Alias": {
                    "$ref": "#/$defs/EmailAddress"
                }
            }
        },
        "DeleteAvailabilityConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAvailabilityConfigurationRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "DeleteEmailMonitoringConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteEmailMonitoringConfigurationRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                }
            }
        },
        "DeleteGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteGroupRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "GroupId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "DeleteImpersonationRoleResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteImpersonationRoleRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ImpersonationRoleId": {
                    "$ref": "#/$defs/ImpersonationRoleId"
                }
            }
        },
        "DeleteMailboxPermissionsResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteMailboxPermissionsRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "EntityId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "GranteeId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "DeleteMobileDeviceAccessOverrideResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteMobileDeviceAccessOverrideRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "UserId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                }
            }
        },
        "DeviceId": {
            "type": "string"
        },
        "DeleteMobileDeviceAccessRuleResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteMobileDeviceAccessRuleRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "MobileDeviceAccessRuleId": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleId"
                }
            }
        },
        "DeleteOrganizationResponse": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "State": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "DeleteOrganizationRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/IdempotencyClientToken"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "DeleteDirectory": {
                    "$ref": "#/$defs/Boolean"
                },
                "ForceDelete": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteResourceRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "DeleteRetentionPolicyResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteRetentionPolicyRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "Id": {
                    "$ref": "#/$defs/ShortString"
                }
            }
        },
        "ShortString": {
            "type": "string"
        },
        "DeleteUserResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteUserRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "UserId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "DeregisterFromWorkMailResponse": {
            "type": "object",
            "properties": {}
        },
        "DeregisterFromWorkMailRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "EntityId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "DeregisterMailDomainResponse": {
            "type": "object",
            "properties": {}
        },
        "DeregisterMailDomainRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "DomainName": {
                    "$ref": "#/$defs/WorkMailDomainName"
                }
            }
        },
        "WorkMailDomainName": {
            "type": "string"
        },
        "DescribeEmailMonitoringConfigurationResponse": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "LogGroupArn": {
                    "$ref": "#/$defs/LogGroupArn"
                }
            }
        },
        "RoleArn": {
            "type": "string"
        },
        "LogGroupArn": {
            "type": "string"
        },
        "DescribeEmailMonitoringConfigurationRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                }
            }
        },
        "DescribeEntityResponse": {
            "type": "object",
            "properties": {
                "EntityId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/EntityType"
                }
            }
        },
        "EntityType": {
            "enum": [
                "GROUP",
                "USER",
                "RESOURCE"
            ]
        },
        "DescribeEntityRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "Email": {
                    "$ref": "#/$defs/EmailAddress"
                }
            }
        },
        "DescribeGroupResponse": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "Name": {
                    "$ref": "#/$defs/GroupName"
                },
                "Email": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "State": {
                    "$ref": "#/$defs/EntityState"
                },
                "EnabledDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DisabledDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "HiddenFromGlobalAddressList": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EntityState": {
            "enum": [
                "ENABLED",
                "DISABLED",
                "DELETED"
            ]
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeGroupRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "GroupId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "DescribeInboundDmarcSettingsResponse": {
            "type": "object",
            "properties": {
                "Enforced": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeInboundDmarcSettingsRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                }
            }
        },
        "DescribeMailboxExportJobResponse": {
            "type": "object",
            "properties": {
                "EntityId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                },
                "S3BucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "S3Prefix": {
                    "$ref": "#/$defs/S3ObjectKey"
                },
                "S3Path": {
                    "$ref": "#/$defs/S3ObjectKey"
                },
                "EstimatedProgress": {
                    "$ref": "#/$defs/Percentage"
                },
                "State": {
                    "$ref": "#/$defs/MailboxExportJobState"
                },
                "ErrorInfo": {
                    "$ref": "#/$defs/MailboxExportErrorInfo"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Description": {
            "type": "string"
        },
        "S3BucketName": {
            "type": "string"
        },
        "S3ObjectKey": {
            "type": "string"
        },
        "Percentage": {
            "type": "integer",
            "format": "int32"
        },
        "MailboxExportJobState": {
            "enum": [
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "CANCELLED"
            ]
        },
        "MailboxExportErrorInfo": {
            "type": "string"
        },
        "DescribeMailboxExportJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/MailboxExportJobId"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                }
            }
        },
        "DescribeOrganizationResponse": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "Alias": {
                    "$ref": "#/$defs/OrganizationName"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "DirectoryId": {
                    "$ref": "#/$defs/String"
                },
                "DirectoryType": {
                    "$ref": "#/$defs/String"
                },
                "DefaultMailDomain": {
                    "$ref": "#/$defs/String"
                },
                "CompletedDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                },
                "ARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "MigrationAdmin": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "InteroperabilityEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AmazonResourceName": {
            "type": "string"
        },
        "DescribeOrganizationRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                }
            }
        },
        "DescribeResourceResponse": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Email": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "Name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "Type": {
                    "$ref": "#/$defs/ResourceType"
                },
                "BookingOptions": {
                    "$ref": "#/$defs/BookingOptions"
                },
                "State": {
                    "$ref": "#/$defs/EntityState"
                },
                "EnabledDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DisabledDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "HiddenFromGlobalAddressList": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "BookingOptions": {
            "type": "object",
            "properties": {
                "AutoAcceptRequests": {
                    "$ref": "#/$defs/Boolean"
                },
                "AutoDeclineRecurringRequests": {
                    "$ref": "#/$defs/Boolean"
                },
                "AutoDeclineConflictingRequests": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeResourceRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "DescribeUserResponse": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "Name": {
                    "$ref": "#/$defs/UserName"
                },
                "Email": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "DisplayName": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "State": {
                    "$ref": "#/$defs/EntityState"
                },
                "UserRole": {
                    "$ref": "#/$defs/UserRole"
                },
                "EnabledDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DisabledDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "MailboxProvisionedDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "MailboxDeprovisionedDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "FirstName": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "LastName": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "HiddenFromGlobalAddressList": {
                    "$ref": "#/$defs/Boolean"
                },
                "Initials": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Telephone": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Street": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "JobTitle": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "City": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Company": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "ZipCode": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Department": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Country": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Office": {
                    "$ref": "#/$defs/UserAttribute"
                }
            }
        },
        "DescribeUserRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "UserId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "DisassociateDelegateFromResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateDelegateFromResourceRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "EntityId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "DisassociateMemberFromGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateMemberFromGroupRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "GroupId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "MemberId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "GetAccessControlEffectResponse": {
            "type": "object",
            "properties": {
                "Effect": {
                    "$ref": "#/$defs/AccessControlRuleEffect"
                },
                "MatchedRules": {
                    "$ref": "#/$defs/AccessControlRuleNameList"
                }
            }
        },
        "AccessControlRuleEffect": {
            "enum": [
                "ALLOW",
                "DENY"
            ]
        },
        "AccessControlRuleNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccessControlRuleName"
            }
        },
        "GetAccessControlEffectRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "IpAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "Action": {
                    "$ref": "#/$defs/AccessControlRuleAction"
                },
                "UserId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "ImpersonationRoleId": {
                    "$ref": "#/$defs/ImpersonationRoleId"
                }
            }
        },
        "IpAddress": {
            "type": "string"
        },
        "AccessControlRuleAction": {
            "type": "string"
        },
        "GetDefaultRetentionPolicyResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ShortString"
                },
                "Name": {
                    "$ref": "#/$defs/ShortString"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "FolderConfigurations": {
                    "$ref": "#/$defs/FolderConfigurations"
                }
            }
        },
        "FolderConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FolderConfiguration"
            }
        },
        "FolderConfiguration": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FolderName"
                },
                "Action": {
                    "$ref": "#/$defs/RetentionAction"
                },
                "Period": {
                    "$ref": "#/$defs/RetentionPeriod"
                }
            }
        },
        "FolderName": {
            "enum": [
                "INBOX",
                "DELETED_ITEMS",
                "SENT_ITEMS",
                "DRAFTS",
                "JUNK_EMAIL"
            ]
        },
        "RetentionAction": {
            "enum": [
                "NONE",
                "DELETE",
                "PERMANENTLY_DELETE"
            ]
        },
        "RetentionPeriod": {
            "type": "integer",
            "format": "int32"
        },
        "GetDefaultRetentionPolicyRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                }
            }
        },
        "GetImpersonationRoleResponse": {
            "type": "object",
            "properties": {
                "ImpersonationRoleId": {
                    "$ref": "#/$defs/ImpersonationRoleId"
                },
                "Name": {
                    "$ref": "#/$defs/ImpersonationRoleName"
                },
                "Type": {
                    "$ref": "#/$defs/ImpersonationRoleType"
                },
                "Description": {
                    "$ref": "#/$defs/ImpersonationRoleDescription"
                },
                "Rules": {
                    "$ref": "#/$defs/ImpersonationRuleList"
                },
                "DateCreated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DateModified": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "GetImpersonationRoleRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ImpersonationRoleId": {
                    "$ref": "#/$defs/ImpersonationRoleId"
                }
            }
        },
        "GetImpersonationRoleEffectResponse": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ImpersonationRoleType"
                },
                "Effect": {
                    "$ref": "#/$defs/AccessEffect"
                },
                "MatchedRules": {
                    "$ref": "#/$defs/ImpersonationMatchedRuleList"
                }
            }
        },
        "ImpersonationMatchedRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImpersonationMatchedRule"
            }
        },
        "ImpersonationMatchedRule": {
            "type": "object",
            "properties": {
                "ImpersonationRuleId": {
                    "$ref": "#/$defs/ImpersonationRuleId"
                },
                "Name": {
                    "$ref": "#/$defs/ImpersonationRuleName"
                }
            }
        },
        "GetImpersonationRoleEffectRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ImpersonationRoleId": {
                    "$ref": "#/$defs/ImpersonationRoleId"
                },
                "TargetUser": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "GetMailboxDetailsResponse": {
            "type": "object",
            "properties": {
                "MailboxQuota": {
                    "$ref": "#/$defs/MailboxQuota"
                },
                "MailboxSize": {
                    "$ref": "#/$defs/MailboxSize"
                }
            }
        },
        "MailboxQuota": {
            "type": "integer",
            "format": "int32"
        },
        "MailboxSize": {
            "type": "number",
            "format": "double"
        },
        "GetMailboxDetailsRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "UserId": {
                    "$ref": "#/$defs/EntityIdentifier"
                }
            }
        },
        "GetMailDomainResponse": {
            "type": "object",
            "properties": {
                "Records": {
                    "$ref": "#/$defs/DnsRecords"
                },
                "IsTestDomain": {
                    "$ref": "#/$defs/Boolean"
                },
                "IsDefault": {
                    "$ref": "#/$defs/Boolean"
                },
                "OwnershipVerificationStatus": {
                    "$ref": "#/$defs/DnsRecordVerificationStatus"
                },
                "DkimVerificationStatus": {
                    "$ref": "#/$defs/DnsRecordVerificationStatus"
                }
            }
        },
        "DnsRecords": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DnsRecord"
            }
        },
        "DnsRecord": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "Hostname": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DnsRecordVerificationStatus": {
            "enum": [
                "PENDING",
                "VERIFIED",
                "FAILED"
            ]
        },
        "GetMailDomainRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "DomainName": {
                    "$ref": "#/$defs/WorkMailDomainName"
                }
            }
        },
        "GetMobileDeviceAccessEffectResponse": {
            "type": "object",
            "properties": {
                "Effect": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleEffect"
                },
                "MatchedRules": {
                    "$ref": "#/$defs/MobileDeviceAccessMatchedRuleList"
                }
            }
        },
        "MobileDeviceAccessMatchedRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MobileDeviceAccessMatchedRule"
            }
        },
        "MobileDeviceAccessMatchedRule": {
            "type": "object",
            "properties": {
                "MobileDeviceAccessRuleId": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleId"
                },
                "Name": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleName"
                }
            }
        },
        "GetMobileDeviceAccessEffectRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "DeviceType": {
                    "$ref": "#/$defs/DeviceType"
                },
                "DeviceModel": {
                    "$ref": "#/$defs/DeviceModel"
                },
                "DeviceOperatingSystem": {
                    "$ref": "#/$defs/DeviceOperatingSystem"
                },
                "DeviceUserAgent": {
                    "$ref": "#/$defs/DeviceUserAgent"
                }
            }
        },
        "GetMobileDeviceAccessOverrideResponse": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "Effect": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleEffect"
                },
                "Description": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleDescription"
                },
                "DateCreated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DateModified": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "GetMobileDeviceAccessOverrideRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "UserId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                }
            }
        },
        "ListAccessControlRulesResponse": {
            "type": "object",
            "properties": {
                "Rules": {
                    "$ref": "#/$defs/AccessControlRulesList"
                }
            }
        },
        "AccessControlRulesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccessControlRule"
            }
        },
        "AccessControlRule": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/AccessControlRuleName"
                },
                "Effect": {
                    "$ref": "#/$defs/AccessControlRuleEffect"
                },
                "Description": {
                    "$ref": "#/$defs/AccessControlRuleDescription"
                },
                "IpRanges": {
                    "$ref": "#/$defs/IpRangeList"
                },
                "NotIpRanges": {
                    "$ref": "#/$defs/IpRangeList"
                },
                "Actions": {
                    "$ref": "#/$defs/ActionsList"
                },
                "NotActions": {
                    "$ref": "#/$defs/ActionsList"
                },
                "UserIds": {
                    "$ref": "#/$defs/UserIdList"
                },
                "NotUserIds": {
                    "$ref": "#/$defs/UserIdList"
                },
                "DateCreated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DateModified": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ImpersonationRoleIds": {
                    "$ref": "#/$defs/ImpersonationRoleIdList"
                },
                "NotImpersonationRoleIds": {
                    "$ref": "#/$defs/ImpersonationRoleIdList"
                }
            }
        },
        "AccessControlRuleDescription": {
            "type": "string"
        },
        "IpRangeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpRange"
            }
        },
        "IpRange": {
            "type": "string"
        },
        "ActionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccessControlRuleAction"
            }
        },
        "UserIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WorkMailIdentifier"
            }
        },
        "ImpersonationRoleIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImpersonationRoleId"
            }
        },
        "ListAccessControlRulesRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                }
            }
        },
        "ListAliasesResponse": {
            "type": "object",
            "properties": {
                "Aliases": {
                    "$ref": "#/$defs/Aliases"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Aliases": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EmailAddress"
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListAliasesRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "EntityId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListAvailabilityConfigurationsResponse": {
            "type": "object",
            "properties": {
                "AvailabilityConfigurations": {
                    "$ref": "#/$defs/AvailabilityConfigurationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AvailabilityConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AvailabilityConfiguration"
            }
        },
        "AvailabilityConfiguration": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "ProviderType": {
                    "$ref": "#/$defs/AvailabilityProviderType"
                },
                "EwsProvider": {
                    "$ref": "#/$defs/RedactedEwsAvailabilityProvider"
                },
                "LambdaProvider": {
                    "$ref": "#/$defs/LambdaAvailabilityProvider"
                },
                "DateCreated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DateModified": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "AvailabilityProviderType": {
            "enum": [
                "EWS",
                "LAMBDA"
            ]
        },
        "RedactedEwsAvailabilityProvider": {
            "type": "object",
            "properties": {
                "EwsEndpoint": {
                    "$ref": "#/$defs/Url"
                },
                "EwsUsername": {
                    "$ref": "#/$defs/ExternalUserName"
                }
            }
        },
        "ListAvailabilityConfigurationsRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListGroupMembersResponse": {
            "type": "object",
            "properties": {
                "Members": {
                    "$ref": "#/$defs/Members"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Members": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Member"
            }
        },
        "Member": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/MemberType"
                },
                "State": {
                    "$ref": "#/$defs/EntityState"
                },
                "EnabledDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DisabledDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "MemberType": {
            "enum": [
                "GROUP",
                "USER"
            ]
        },
        "ListGroupMembersRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "GroupId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListGroupsResponse": {
            "type": "object",
            "properties": {
                "Groups": {
                    "$ref": "#/$defs/Groups"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Groups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Group"
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "Email": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "Name": {
                    "$ref": "#/$defs/GroupName"
                },
                "State": {
                    "$ref": "#/$defs/EntityState"
                },
                "EnabledDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DisabledDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListGroupsRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "Filters": {
                    "$ref": "#/$defs/ListGroupsFilters"
                }
            }
        },
        "ListGroupsFilters": {
            "type": "object",
            "properties": {
                "NamePrefix": {
                    "$ref": "#/$defs/String"
                },
                "PrimaryEmailPrefix": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/EntityState"
                }
            }
        },
        "ListGroupsForEntityResponse": {
            "type": "object",
            "properties": {
                "Groups": {
                    "$ref": "#/$defs/GroupIdentifiers"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GroupIdentifiers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupIdentifier"
            }
        },
        "GroupIdentifier": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                }
            }
        },
        "ListGroupsForEntityRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "EntityId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "Filters": {
                    "$ref": "#/$defs/ListGroupsForEntityFilters"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListGroupsForEntityFilters": {
            "type": "object",
            "properties": {
                "GroupNamePrefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListImpersonationRolesResponse": {
            "type": "object",
            "properties": {
                "Roles": {
                    "$ref": "#/$defs/ImpersonationRoleList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ImpersonationRoleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImpersonationRole"
            }
        },
        "ImpersonationRole": {
            "type": "object",
            "properties": {
                "ImpersonationRoleId": {
                    "$ref": "#/$defs/ImpersonationRoleId"
                },
                "Name": {
                    "$ref": "#/$defs/ImpersonationRoleName"
                },
                "Type": {
                    "$ref": "#/$defs/ImpersonationRoleType"
                },
                "DateCreated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DateModified": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListImpersonationRolesRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListMailboxExportJobsResponse": {
            "type": "object",
            "properties": {
                "Jobs": {
                    "$ref": "#/$defs/Jobs"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Jobs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MailboxExportJob"
            }
        },
        "MailboxExportJob": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/MailboxExportJobId"
                },
                "EntityId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "S3BucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "S3Path": {
                    "$ref": "#/$defs/S3ObjectKey"
                },
                "EstimatedProgress": {
                    "$ref": "#/$defs/Percentage"
                },
                "State": {
                    "$ref": "#/$defs/MailboxExportJobState"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListMailboxExportJobsRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListMailboxPermissionsResponse": {
            "type": "object",
            "properties": {
                "Permissions": {
                    "$ref": "#/$defs/Permissions"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Permissions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Permission"
            }
        },
        "Permission": {
            "type": "object",
            "properties": {
                "GranteeId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "GranteeType": {
                    "$ref": "#/$defs/MemberType"
                },
                "PermissionValues": {
                    "$ref": "#/$defs/PermissionValues"
                }
            }
        },
        "PermissionValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PermissionType"
            }
        },
        "PermissionType": {
            "enum": [
                "FULL_ACCESS",
                "SEND_AS",
                "SEND_ON_BEHALF"
            ]
        },
        "ListMailboxPermissionsRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "EntityId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListMailDomainsResponse": {
            "type": "object",
            "properties": {
                "MailDomains": {
                    "$ref": "#/$defs/MailDomains"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MailDomains": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MailDomainSummary"
            }
        },
        "MailDomainSummary": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "DefaultDomain": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ListMailDomainsRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListMobileDeviceAccessOverridesResponse": {
            "type": "object",
            "properties": {
                "Overrides": {
                    "$ref": "#/$defs/MobileDeviceAccessOverridesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MobileDeviceAccessOverridesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MobileDeviceAccessOverride"
            }
        },
        "MobileDeviceAccessOverride": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "Effect": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleEffect"
                },
                "Description": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleDescription"
                },
                "DateCreated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DateModified": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListMobileDeviceAccessOverridesRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "UserId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListMobileDeviceAccessRulesResponse": {
            "type": "object",
            "properties": {
                "Rules": {
                    "$ref": "#/$defs/MobileDeviceAccessRulesList"
                }
            }
        },
        "MobileDeviceAccessRulesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MobileDeviceAccessRule"
            }
        },
        "MobileDeviceAccessRule": {
            "type": "object",
            "properties": {
                "MobileDeviceAccessRuleId": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleId"
                },
                "Name": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleName"
                },
                "Description": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleDescription"
                },
                "Effect": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleEffect"
                },
                "DeviceTypes": {
                    "$ref": "#/$defs/DeviceTypeList"
                },
                "NotDeviceTypes": {
                    "$ref": "#/$defs/DeviceTypeList"
                },
                "DeviceModels": {
                    "$ref": "#/$defs/DeviceModelList"
                },
                "NotDeviceModels": {
                    "$ref": "#/$defs/DeviceModelList"
                },
                "DeviceOperatingSystems": {
                    "$ref": "#/$defs/DeviceOperatingSystemList"
                },
                "NotDeviceOperatingSystems": {
                    "$ref": "#/$defs/DeviceOperatingSystemList"
                },
                "DeviceUserAgents": {
                    "$ref": "#/$defs/DeviceUserAgentList"
                },
                "NotDeviceUserAgents": {
                    "$ref": "#/$defs/DeviceUserAgentList"
                },
                "DateCreated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DateModified": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListMobileDeviceAccessRulesRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                }
            }
        },
        "ListOrganizationsResponse": {
            "type": "object",
            "properties": {
                "OrganizationSummaries": {
                    "$ref": "#/$defs/OrganizationSummaries"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "OrganizationSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationSummary"
            }
        },
        "OrganizationSummary": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "Alias": {
                    "$ref": "#/$defs/OrganizationName"
                },
                "DefaultMailDomain": {
                    "$ref": "#/$defs/DomainName"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOrganizationsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListResourceDelegatesResponse": {
            "type": "object",
            "properties": {
                "Delegates": {
                    "$ref": "#/$defs/ResourceDelegates"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ResourceDelegates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Delegate"
            }
        },
        "Delegate": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/MemberType"
                }
            }
        },
        "ListResourceDelegatesRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListResourcesResponse": {
            "type": "object",
            "properties": {
                "Resources": {
                    "$ref": "#/$defs/Resources"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Resources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Resource"
            }
        },
        "Resource": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "Email": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "Name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "Type": {
                    "$ref": "#/$defs/ResourceType"
                },
                "State": {
                    "$ref": "#/$defs/EntityState"
                },
                "EnabledDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DisabledDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Description": {
                    "$ref": "#/$defs/ResourceDescription"
                }
            }
        },
        "ListResourcesRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "Filters": {
                    "$ref": "#/$defs/ListResourcesFilters"
                }
            }
        },
        "ListResourcesFilters": {
            "type": "object",
            "properties": {
                "NamePrefix": {
                    "$ref": "#/$defs/String"
                },
                "PrimaryEmailPrefix": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/EntityState"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "ListUsersResponse": {
            "type": "object",
            "properties": {
                "Users": {
                    "$ref": "#/$defs/Users"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Users": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/User"
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "Email": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "Name": {
                    "$ref": "#/$defs/UserName"
                },
                "DisplayName": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/EntityState"
                },
                "UserRole": {
                    "$ref": "#/$defs/UserRole"
                },
                "EnabledDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DisabledDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListUsersRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "Filters": {
                    "$ref": "#/$defs/ListUsersFilters"
                }
            }
        },
        "ListUsersFilters": {
            "type": "object",
            "properties": {
                "UsernamePrefix": {
                    "$ref": "#/$defs/String"
                },
                "DisplayNamePrefix": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "PrimaryEmailPrefix": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/EntityState"
                }
            }
        },
        "PutAccessControlRuleResponse": {
            "type": "object",
            "properties": {}
        },
        "PutAccessControlRuleRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/AccessControlRuleName"
                },
                "Effect": {
                    "$ref": "#/$defs/AccessControlRuleEffect"
                },
                "Description": {
                    "$ref": "#/$defs/AccessControlRuleDescription"
                },
                "IpRanges": {
                    "$ref": "#/$defs/IpRangeList"
                },
                "NotIpRanges": {
                    "$ref": "#/$defs/IpRangeList"
                },
                "Actions": {
                    "$ref": "#/$defs/ActionsList"
                },
                "NotActions": {
                    "$ref": "#/$defs/ActionsList"
                },
                "UserIds": {
                    "$ref": "#/$defs/UserIdList"
                },
                "NotUserIds": {
                    "$ref": "#/$defs/UserIdList"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ImpersonationRoleIds": {
                    "$ref": "#/$defs/ImpersonationRoleIdList"
                },
                "NotImpersonationRoleIds": {
                    "$ref": "#/$defs/ImpersonationRoleIdList"
                }
            }
        },
        "PutEmailMonitoringConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "PutEmailMonitoringConfigurationRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "LogGroupArn": {
                    "$ref": "#/$defs/LogGroupArn"
                }
            }
        },
        "PutInboundDmarcSettingsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutInboundDmarcSettingsRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "Enforced": {
                    "$ref": "#/$defs/BooleanObject"
                }
            }
        },
        "BooleanObject": {
            "type": "boolean"
        },
        "PutMailboxPermissionsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutMailboxPermissionsRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "EntityId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "GranteeId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "PermissionValues": {
                    "$ref": "#/$defs/PermissionValues"
                }
            }
        },
        "PutMobileDeviceAccessOverrideResponse": {
            "type": "object",
            "properties": {}
        },
        "PutMobileDeviceAccessOverrideRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "UserId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "Effect": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleEffect"
                },
                "Description": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleDescription"
                }
            }
        },
        "PutRetentionPolicyResponse": {
            "type": "object",
            "properties": {}
        },
        "PutRetentionPolicyRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "Id": {
                    "$ref": "#/$defs/ShortString"
                },
                "Name": {
                    "$ref": "#/$defs/ShortString"
                },
                "Description": {
                    "$ref": "#/$defs/PolicyDescription"
                },
                "FolderConfigurations": {
                    "$ref": "#/$defs/FolderConfigurations"
                }
            }
        },
        "PolicyDescription": {
            "type": "string"
        },
        "RegisterMailDomainResponse": {
            "type": "object",
            "properties": {}
        },
        "RegisterMailDomainRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/IdempotencyClientToken"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "DomainName": {
                    "$ref": "#/$defs/WorkMailDomainName"
                }
            }
        },
        "RegisterToWorkMailResponse": {
            "type": "object",
            "properties": {}
        },
        "RegisterToWorkMailRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "EntityId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "Email": {
                    "$ref": "#/$defs/EmailAddress"
                }
            }
        },
        "ResetPasswordResponse": {
            "type": "object",
            "properties": {}
        },
        "ResetPasswordRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "UserId": {
                    "$ref": "#/$defs/WorkMailIdentifier"
                },
                "Password": {
                    "$ref": "#/$defs/Password"
                }
            }
        },
        "StartMailboxExportJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/MailboxExportJobId"
                }
            }
        },
        "StartMailboxExportJobRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/IdempotencyClientToken"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "EntityId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                },
                "S3BucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "S3Prefix": {
                    "$ref": "#/$defs/S3ObjectKey"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TestAvailabilityConfigurationResponse": {
            "type": "object",
            "properties": {
                "TestPassed": {
                    "$ref": "#/$defs/Boolean"
                },
                "FailureReason": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TestAvailabilityConfigurationRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "EwsProvider": {
                    "$ref": "#/$defs/EwsAvailabilityProvider"
                },
                "LambdaProvider": {
                    "$ref": "#/$defs/LambdaAvailabilityProvider"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateAvailabilityConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateAvailabilityConfigurationRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "EwsProvider": {
                    "$ref": "#/$defs/EwsAvailabilityProvider"
                },
                "LambdaProvider": {
                    "$ref": "#/$defs/LambdaAvailabilityProvider"
                }
            }
        },
        "UpdateDefaultMailDomainResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateDefaultMailDomainRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "DomainName": {
                    "$ref": "#/$defs/WorkMailDomainName"
                }
            }
        },
        "UpdateGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateGroupRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "GroupId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "HiddenFromGlobalAddressList": {
                    "$ref": "#/$defs/BooleanObject"
                }
            }
        },
        "UpdateImpersonationRoleResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateImpersonationRoleRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ImpersonationRoleId": {
                    "$ref": "#/$defs/ImpersonationRoleId"
                },
                "Name": {
                    "$ref": "#/$defs/ImpersonationRoleName"
                },
                "Type": {
                    "$ref": "#/$defs/ImpersonationRoleType"
                },
                "Description": {
                    "$ref": "#/$defs/ImpersonationRoleDescription"
                },
                "Rules": {
                    "$ref": "#/$defs/ImpersonationRuleList"
                }
            }
        },
        "UpdateMailboxQuotaResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateMailboxQuotaRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "UserId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "MailboxQuota": {
                    "$ref": "#/$defs/MailboxQuota"
                }
            }
        },
        "UpdateMobileDeviceAccessRuleResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateMobileDeviceAccessRuleRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "MobileDeviceAccessRuleId": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleId"
                },
                "Name": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleName"
                },
                "Description": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleDescription"
                },
                "Effect": {
                    "$ref": "#/$defs/MobileDeviceAccessRuleEffect"
                },
                "DeviceTypes": {
                    "$ref": "#/$defs/DeviceTypeList"
                },
                "NotDeviceTypes": {
                    "$ref": "#/$defs/DeviceTypeList"
                },
                "DeviceModels": {
                    "$ref": "#/$defs/DeviceModelList"
                },
                "NotDeviceModels": {
                    "$ref": "#/$defs/DeviceModelList"
                },
                "DeviceOperatingSystems": {
                    "$ref": "#/$defs/DeviceOperatingSystemList"
                },
                "NotDeviceOperatingSystems": {
                    "$ref": "#/$defs/DeviceOperatingSystemList"
                },
                "DeviceUserAgents": {
                    "$ref": "#/$defs/DeviceUserAgentList"
                },
                "NotDeviceUserAgents": {
                    "$ref": "#/$defs/DeviceUserAgentList"
                }
            }
        },
        "UpdatePrimaryEmailAddressResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdatePrimaryEmailAddressRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "EntityId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "Email": {
                    "$ref": "#/$defs/EmailAddress"
                }
            }
        },
        "UpdateResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateResourceRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "Name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "BookingOptions": {
                    "$ref": "#/$defs/BookingOptions"
                },
                "Description": {
                    "$ref": "#/$defs/NewResourceDescription"
                },
                "Type": {
                    "$ref": "#/$defs/ResourceType"
                },
                "HiddenFromGlobalAddressList": {
                    "$ref": "#/$defs/BooleanObject"
                }
            }
        },
        "NewResourceDescription": {
            "type": "string"
        },
        "UpdateUserResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateUserRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/OrganizationId"
                },
                "UserId": {
                    "$ref": "#/$defs/EntityIdentifier"
                },
                "Role": {
                    "$ref": "#/$defs/UserRole"
                },
                "DisplayName": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "FirstName": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "LastName": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "HiddenFromGlobalAddressList": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "Initials": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Telephone": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Street": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "JobTitle": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "City": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Company": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "ZipCode": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Department": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Country": {
                    "$ref": "#/$defs/UserAttribute"
                },
                "Office": {
                    "$ref": "#/$defs/UserAttribute"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://workmail-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://workmail-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://workmail.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://workmail.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}