{
    "name": "elasticache",
    "commands": [
        {
            "name": "AddTagsToResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AddTagsToResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagListMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddTagsToResourceMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "AuthorizeCacheSecurityGroupIngress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AuthorizeCacheSecurityGroupIngress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AuthorizeCacheSecurityGroupIngressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AuthorizeCacheSecurityGroupIngressMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchApplyUpdateAction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchApplyUpdateAction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateActionResultsMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchApplyUpdateActionMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchStopUpdateAction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchStopUpdateAction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateActionResultsMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchStopUpdateActionMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "CompleteMigration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CompleteMigration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CompleteMigrationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CompleteMigrationMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "CopyServerlessCacheSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CopyServerlessCacheSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CopyServerlessCacheSnapshotResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CopyServerlessCacheSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CopySnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CopySnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CopySnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CopySnapshotMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCacheCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCacheCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCacheClusterResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCacheClusterMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCacheParameterGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCacheParameterGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCacheParameterGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCacheParameterGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCacheSecurityGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCacheSecurityGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCacheSecurityGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCacheSecurityGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCacheSubnetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCacheSubnetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCacheSubnetGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCacheSubnetGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateGlobalReplicationGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateGlobalReplicationGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateGlobalReplicationGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateGlobalReplicationGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateReplicationGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateReplicationGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateReplicationGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateReplicationGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateServerlessCache",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateServerlessCache"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateServerlessCacheResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateServerlessCacheRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateServerlessCacheSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateServerlessCacheSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateServerlessCacheSnapshotResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateServerlessCacheSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSnapshotMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/User"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUserMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateUserGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateUserGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UserGroup"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUserGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DecreaseNodeGroupsInGlobalReplicationGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DecreaseNodeGroupsInGlobalReplicationGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DecreaseNodeGroupsInGlobalReplicationGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DecreaseNodeGroupsInGlobalReplicationGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DecreaseReplicaCount",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DecreaseReplicaCount"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DecreaseReplicaCountResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DecreaseReplicaCountMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCacheCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCacheCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCacheClusterResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCacheClusterMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCacheParameterGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCacheParameterGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCacheParameterGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCacheSecurityGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCacheSecurityGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCacheSecurityGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCacheSubnetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCacheSubnetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCacheSubnetGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteGlobalReplicationGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteGlobalReplicationGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteGlobalReplicationGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteGlobalReplicationGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteReplicationGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteReplicationGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteReplicationGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteReplicationGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteServerlessCache",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteServerlessCache"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteServerlessCacheResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteServerlessCacheRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteServerlessCacheSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteServerlessCacheSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteServerlessCacheSnapshotResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteServerlessCacheSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSnapshotMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/User"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteUserMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteUserGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteUserGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UserGroup"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteUserGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCacheClusters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeCacheClusters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CacheClusterMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCacheClustersMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCacheEngineVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeCacheEngineVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CacheEngineVersionMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCacheEngineVersionsMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCacheParameterGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeCacheParameterGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CacheParameterGroupsMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCacheParameterGroupsMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCacheParameters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeCacheParameters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CacheParameterGroupDetails"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCacheParametersMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCacheSecurityGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeCacheSecurityGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CacheSecurityGroupMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCacheSecurityGroupsMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCacheSubnetGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeCacheSubnetGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CacheSubnetGroupMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCacheSubnetGroupsMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEngineDefaultParameters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeEngineDefaultParameters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEngineDefaultParametersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEngineDefaultParametersMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEvents",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeEvents"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EventsMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEventsMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeGlobalReplicationGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeGlobalReplicationGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeGlobalReplicationGroupsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeGlobalReplicationGroupsMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReplicationGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeReplicationGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReplicationGroupMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReplicationGroupsMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReservedCacheNodes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeReservedCacheNodes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReservedCacheNodeMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReservedCacheNodesMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReservedCacheNodesOfferings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeReservedCacheNodesOfferings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReservedCacheNodesOfferingMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReservedCacheNodesOfferingsMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeServerlessCaches",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeServerlessCaches"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeServerlessCachesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeServerlessCachesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeServerlessCacheSnapshots",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeServerlessCacheSnapshots"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeServerlessCacheSnapshotsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeServerlessCacheSnapshotsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeServiceUpdates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeServiceUpdates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ServiceUpdatesMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeServiceUpdatesMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSnapshots",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeSnapshots"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSnapshotsListMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSnapshotsMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeUpdateActions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeUpdateActions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateActionsMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeUpdateActionsMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeUserGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeUserGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeUserGroupsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeUserGroupsMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeUsers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeUsers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeUsersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeUsersMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateGlobalReplicationGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateGlobalReplicationGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateGlobalReplicationGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateGlobalReplicationGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportServerlessCacheSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExportServerlessCacheSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportServerlessCacheSnapshotResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportServerlessCacheSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "FailoverGlobalReplicationGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "FailoverGlobalReplicationGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/FailoverGlobalReplicationGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/FailoverGlobalReplicationGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "IncreaseNodeGroupsInGlobalReplicationGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IncreaseNodeGroupsInGlobalReplicationGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/IncreaseNodeGroupsInGlobalReplicationGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/IncreaseNodeGroupsInGlobalReplicationGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "IncreaseReplicaCount",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IncreaseReplicaCount"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/IncreaseReplicaCountResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/IncreaseReplicaCountMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAllowedNodeTypeModifications",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListAllowedNodeTypeModifications"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AllowedNodeTypeModificationsMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAllowedNodeTypeModificationsMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagListMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyCacheCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ModifyCacheCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyCacheClusterResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyCacheClusterMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyCacheParameterGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ModifyCacheParameterGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CacheParameterGroupNameMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyCacheParameterGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyCacheSubnetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ModifyCacheSubnetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyCacheSubnetGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyCacheSubnetGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyGlobalReplicationGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ModifyGlobalReplicationGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyGlobalReplicationGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyGlobalReplicationGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyReplicationGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ModifyReplicationGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyReplicationGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyReplicationGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyReplicationGroupShardConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ModifyReplicationGroupShardConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyReplicationGroupShardConfigurationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyReplicationGroupShardConfigurationMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyServerlessCache",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ModifyServerlessCache"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyServerlessCacheResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyServerlessCacheRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ModifyUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/User"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyUserMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyUserGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ModifyUserGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UserGroup"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyUserGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "PurchaseReservedCacheNodesOffering",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PurchaseReservedCacheNodesOffering"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PurchaseReservedCacheNodesOfferingResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PurchaseReservedCacheNodesOfferingMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "RebalanceSlotsInGlobalReplicationGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RebalanceSlotsInGlobalReplicationGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RebalanceSlotsInGlobalReplicationGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RebalanceSlotsInGlobalReplicationGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "RebootCacheCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RebootCacheCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RebootCacheClusterResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RebootCacheClusterMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveTagsFromResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RemoveTagsFromResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagListMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveTagsFromResourceMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetCacheParameterGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResetCacheParameterGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CacheParameterGroupNameMessage"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetCacheParameterGroupMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "RevokeCacheSecurityGroupIngress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RevokeCacheSecurityGroupIngress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RevokeCacheSecurityGroupIngressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RevokeCacheSecurityGroupIngressMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "StartMigration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartMigration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartMigrationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartMigrationMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "TestFailover",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TestFailover"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestFailoverResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestFailoverMessage"
                        }
                    }
                }
            }
        },
        {
            "name": "TestMigration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TestMigration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestMigrationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestMigrationMessage"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "TagListMessage": {
            "type": "object",
            "properties": {
                "TagList": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "AddTagsToResourceMessage": {
            "type": "object",
            "properties": {
                "ResourceName": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "AuthorizeCacheSecurityGroupIngressResult": {
            "type": "object",
            "properties": {
                "CacheSecurityGroup": {
                    "$ref": "#/$defs/CacheSecurityGroup"
                }
            }
        },
        "CacheSecurityGroup": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "CacheSecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "EC2SecurityGroups": {
                    "$ref": "#/$defs/EC2SecurityGroupList"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EC2SecurityGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EC2SecurityGroup"
            }
        },
        "EC2SecurityGroup": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "EC2SecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "EC2SecurityGroupOwnerId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AuthorizeCacheSecurityGroupIngressMessage": {
            "type": "object",
            "properties": {
                "CacheSecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "EC2SecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "EC2SecurityGroupOwnerId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpdateActionResultsMessage": {
            "type": "object",
            "properties": {
                "ProcessedUpdateActions": {
                    "$ref": "#/$defs/ProcessedUpdateActionList"
                },
                "UnprocessedUpdateActions": {
                    "$ref": "#/$defs/UnprocessedUpdateActionList"
                }
            }
        },
        "ProcessedUpdateActionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProcessedUpdateAction"
            }
        },
        "ProcessedUpdateAction": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "ServiceUpdateName": {
                    "$ref": "#/$defs/String"
                },
                "UpdateActionStatus": {
                    "$ref": "#/$defs/UpdateActionStatus"
                }
            }
        },
        "UpdateActionStatus": {
            "enum": [
                "NOT_APPLIED",
                "WAITING_TO_START",
                "IN_PROGRESS",
                "STOPPING",
                "STOPPED",
                "COMPLETE",
                "SCHEDULING",
                "SCHEDULED",
                "NOT_APPLICABLE"
            ]
        },
        "UnprocessedUpdateActionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnprocessedUpdateAction"
            }
        },
        "UnprocessedUpdateAction": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "ServiceUpdateName": {
                    "$ref": "#/$defs/String"
                },
                "ErrorType": {
                    "$ref": "#/$defs/String"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BatchApplyUpdateActionMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupIds": {
                    "$ref": "#/$defs/ReplicationGroupIdList"
                },
                "CacheClusterIds": {
                    "$ref": "#/$defs/CacheClusterIdList"
                },
                "ServiceUpdateName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ReplicationGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CacheClusterIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "BatchStopUpdateActionMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupIds": {
                    "$ref": "#/$defs/ReplicationGroupIdList"
                },
                "CacheClusterIds": {
                    "$ref": "#/$defs/CacheClusterIdList"
                },
                "ServiceUpdateName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CompleteMigrationResponse": {
            "type": "object",
            "properties": {
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicationGroup"
                }
            }
        },
        "ReplicationGroup": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "GlobalReplicationGroupInfo": {
                    "$ref": "#/$defs/GlobalReplicationGroupInfo"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "PendingModifiedValues": {
                    "$ref": "#/$defs/ReplicationGroupPendingModifiedValues"
                },
                "MemberClusters": {
                    "$ref": "#/$defs/ClusterIdList"
                },
                "NodeGroups": {
                    "$ref": "#/$defs/NodeGroupList"
                },
                "SnapshottingClusterId": {
                    "$ref": "#/$defs/String"
                },
                "AutomaticFailover": {
                    "$ref": "#/$defs/AutomaticFailoverStatus"
                },
                "MultiAZ": {
                    "$ref": "#/$defs/MultiAZStatus"
                },
                "ConfigurationEndpoint": {
                    "$ref": "#/$defs/Endpoint"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "SnapshotWindow": {
                    "$ref": "#/$defs/String"
                },
                "ClusterEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "AuthTokenEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "AuthTokenLastModifiedDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "TransitEncryptionEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "AtRestEncryptionEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "MemberClustersOutpostArns": {
                    "$ref": "#/$defs/ReplicationGroupOutpostArnList"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                },
                "UserGroupIds": {
                    "$ref": "#/$defs/UserGroupIdList"
                },
                "LogDeliveryConfigurations": {
                    "$ref": "#/$defs/LogDeliveryConfigurationList"
                },
                "ReplicationGroupCreateTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "DataTiering": {
                    "$ref": "#/$defs/DataTieringStatus"
                },
                "AutoMinorVersionUpgrade": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkType": {
                    "$ref": "#/$defs/NetworkType"
                },
                "IpDiscovery": {
                    "$ref": "#/$defs/IpDiscovery"
                },
                "TransitEncryptionMode": {
                    "$ref": "#/$defs/TransitEncryptionMode"
                },
                "ClusterMode": {
                    "$ref": "#/$defs/ClusterMode"
                }
            }
        },
        "GlobalReplicationGroupInfo": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "GlobalReplicationGroupMemberRole": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ReplicationGroupPendingModifiedValues": {
            "type": "object",
            "properties": {
                "PrimaryClusterId": {
                    "$ref": "#/$defs/String"
                },
                "AutomaticFailoverStatus": {
                    "$ref": "#/$defs/PendingAutomaticFailoverStatus"
                },
                "Resharding": {
                    "$ref": "#/$defs/ReshardingStatus"
                },
                "AuthTokenStatus": {
                    "$ref": "#/$defs/AuthTokenUpdateStatus"
                },
                "UserGroups": {
                    "$ref": "#/$defs/UserGroupsUpdateStatus"
                },
                "LogDeliveryConfigurations": {
                    "$ref": "#/$defs/PendingLogDeliveryConfigurationList"
                },
                "TransitEncryptionEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "TransitEncryptionMode": {
                    "$ref": "#/$defs/TransitEncryptionMode"
                },
                "ClusterMode": {
                    "$ref": "#/$defs/ClusterMode"
                }
            }
        },
        "PendingAutomaticFailoverStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "ReshardingStatus": {
            "type": "object",
            "properties": {
                "SlotMigration": {
                    "$ref": "#/$defs/SlotMigration"
                }
            }
        },
        "SlotMigration": {
            "type": "object",
            "properties": {
                "ProgressPercentage": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "AuthTokenUpdateStatus": {
            "enum": [
                "SETTING",
                "ROTATING"
            ]
        },
        "UserGroupsUpdateStatus": {
            "type": "object",
            "properties": {
                "UserGroupIdsToAdd": {
                    "$ref": "#/$defs/UserGroupIdList"
                },
                "UserGroupIdsToRemove": {
                    "$ref": "#/$defs/UserGroupIdList"
                }
            }
        },
        "UserGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserGroupId"
            }
        },
        "UserGroupId": {
            "type": "string"
        },
        "PendingLogDeliveryConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PendingLogDeliveryConfiguration"
            }
        },
        "PendingLogDeliveryConfiguration": {
            "type": "object",
            "properties": {
                "LogType": {
                    "$ref": "#/$defs/LogType"
                },
                "DestinationType": {
                    "$ref": "#/$defs/DestinationType"
                },
                "DestinationDetails": {
                    "$ref": "#/$defs/DestinationDetails"
                },
                "LogFormat": {
                    "$ref": "#/$defs/LogFormat"
                }
            }
        },
        "LogType": {
            "enum": [
                "SLOW_LOG",
                "ENGINE_LOG"
            ]
        },
        "DestinationType": {
            "enum": [
                "CloudWatchLogs",
                "KinesisFirehose"
            ]
        },
        "DestinationDetails": {
            "type": "object",
            "properties": {
                "CloudWatchLogsDetails": {
                    "$ref": "#/$defs/CloudWatchLogsDestinationDetails"
                },
                "KinesisFirehoseDetails": {
                    "$ref": "#/$defs/KinesisFirehoseDestinationDetails"
                }
            }
        },
        "CloudWatchLogsDestinationDetails": {
            "type": "object",
            "properties": {
                "LogGroup": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "KinesisFirehoseDestinationDetails": {
            "type": "object",
            "properties": {
                "DeliveryStream": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LogFormat": {
            "enum": [
                "TEXT",
                "JSON"
            ]
        },
        "BooleanOptional": {
            "type": "boolean"
        },
        "TransitEncryptionMode": {
            "enum": [
                "PREFERRED",
                "REQUIRED"
            ]
        },
        "ClusterMode": {
            "enum": [
                "ENABLED",
                "DISABLED",
                "COMPATIBLE"
            ]
        },
        "ClusterIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "NodeGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeGroup"
            }
        },
        "NodeGroup": {
            "type": "object",
            "properties": {
                "NodeGroupId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "PrimaryEndpoint": {
                    "$ref": "#/$defs/Endpoint"
                },
                "ReaderEndpoint": {
                    "$ref": "#/$defs/Endpoint"
                },
                "Slots": {
                    "$ref": "#/$defs/String"
                },
                "NodeGroupMembers": {
                    "$ref": "#/$defs/NodeGroupMemberList"
                }
            }
        },
        "Endpoint": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/$defs/String"
                },
                "Port": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "NodeGroupMemberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeGroupMember"
            }
        },
        "NodeGroupMember": {
            "type": "object",
            "properties": {
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeId": {
                    "$ref": "#/$defs/String"
                },
                "ReadEndpoint": {
                    "$ref": "#/$defs/Endpoint"
                },
                "PreferredAvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "PreferredOutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "CurrentRole": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AutomaticFailoverStatus": {
            "enum": [
                "ENABLED",
                "DISABLED",
                "ENABLING",
                "DISABLING"
            ]
        },
        "MultiAZStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "IntegerOptional": {
            "type": "integer",
            "format": "int32"
        },
        "TStamp": {
            "type": "string",
            "format": "date-time"
        },
        "ReplicationGroupOutpostArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "LogDeliveryConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LogDeliveryConfiguration"
            }
        },
        "LogDeliveryConfiguration": {
            "type": "object",
            "properties": {
                "LogType": {
                    "$ref": "#/$defs/LogType"
                },
                "DestinationType": {
                    "$ref": "#/$defs/DestinationType"
                },
                "DestinationDetails": {
                    "$ref": "#/$defs/DestinationDetails"
                },
                "LogFormat": {
                    "$ref": "#/$defs/LogFormat"
                },
                "Status": {
                    "$ref": "#/$defs/LogDeliveryConfigurationStatus"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LogDeliveryConfigurationStatus": {
            "enum": [
                "ACTIVE",
                "ENABLING",
                "MODIFYING",
                "DISABLING",
                "ERROR"
            ]
        },
        "DataTieringStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "Boolean": {
            "type": "boolean"
        },
        "NetworkType": {
            "enum": [
                "IPV4",
                "IPV6",
                "DUAL_STACK"
            ]
        },
        "IpDiscovery": {
            "enum": [
                "IPV4",
                "IPV6"
            ]
        },
        "CompleteMigrationMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "Force": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CopyServerlessCacheSnapshotResponse": {
            "type": "object",
            "properties": {
                "ServerlessCacheSnapshot": {
                    "$ref": "#/$defs/ServerlessCacheSnapshot"
                }
            }
        },
        "ServerlessCacheSnapshot": {
            "type": "object",
            "properties": {
                "ServerlessCacheSnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotType": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "CreateTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "ExpiryTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "BytesUsedForCache": {
                    "$ref": "#/$defs/String"
                },
                "ServerlessCacheConfiguration": {
                    "$ref": "#/$defs/ServerlessCacheConfiguration"
                }
            }
        },
        "ServerlessCacheConfiguration": {
            "type": "object",
            "properties": {
                "ServerlessCacheName": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "MajorEngineVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CopyServerlessCacheSnapshotRequest": {
            "type": "object",
            "properties": {
                "SourceServerlessCacheSnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "TargetServerlessCacheSnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CopySnapshotResult": {
            "type": "object",
            "properties": {
                "Snapshot": {
                    "$ref": "#/$defs/Snapshot"
                }
            }
        },
        "Snapshot": {
            "type": "object",
            "properties": {
                "SnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroupDescription": {
                    "$ref": "#/$defs/String"
                },
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotStatus": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotSource": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "NumCacheNodes": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "PreferredAvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "PreferredOutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "CacheClusterCreateTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "PreferredMaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "TopicArn": {
                    "$ref": "#/$defs/String"
                },
                "Port": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "CacheSubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "AutoMinorVersionUpgrade": {
                    "$ref": "#/$defs/Boolean"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "SnapshotWindow": {
                    "$ref": "#/$defs/String"
                },
                "NumNodeGroups": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "AutomaticFailover": {
                    "$ref": "#/$defs/AutomaticFailoverStatus"
                },
                "NodeSnapshots": {
                    "$ref": "#/$defs/NodeSnapshotList"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                },
                "DataTiering": {
                    "$ref": "#/$defs/DataTieringStatus"
                }
            }
        },
        "NodeSnapshotList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeSnapshot"
            }
        },
        "NodeSnapshot": {
            "type": "object",
            "properties": {
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "NodeGroupId": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeId": {
                    "$ref": "#/$defs/String"
                },
                "NodeGroupConfiguration": {
                    "$ref": "#/$defs/NodeGroupConfiguration"
                },
                "CacheSize": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeCreateTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "SnapshotCreateTime": {
                    "$ref": "#/$defs/TStamp"
                }
            }
        },
        "NodeGroupConfiguration": {
            "type": "object",
            "properties": {
                "NodeGroupId": {
                    "$ref": "#/$defs/AllowedNodeGroupId"
                },
                "Slots": {
                    "$ref": "#/$defs/String"
                },
                "ReplicaCount": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "PrimaryAvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "ReplicaAvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZonesList"
                },
                "PrimaryOutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "ReplicaOutpostArns": {
                    "$ref": "#/$defs/OutpostArnsList"
                }
            }
        },
        "AllowedNodeGroupId": {
            "type": "string"
        },
        "AvailabilityZonesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "OutpostArnsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CopySnapshotMessage": {
            "type": "object",
            "properties": {
                "SourceSnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "TargetSnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "TargetBucket": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateCacheClusterResult": {
            "type": "object",
            "properties": {
                "CacheCluster": {
                    "$ref": "#/$defs/CacheCluster"
                }
            }
        },
        "CacheCluster": {
            "type": "object",
            "properties": {
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "ConfigurationEndpoint": {
                    "$ref": "#/$defs/Endpoint"
                },
                "ClientDownloadLandingPage": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "CacheClusterStatus": {
                    "$ref": "#/$defs/String"
                },
                "NumCacheNodes": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "PreferredAvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "PreferredOutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "CacheClusterCreateTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "PreferredMaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "PendingModifiedValues": {
                    "$ref": "#/$defs/PendingModifiedValues"
                },
                "NotificationConfiguration": {
                    "$ref": "#/$defs/NotificationConfiguration"
                },
                "CacheSecurityGroups": {
                    "$ref": "#/$defs/CacheSecurityGroupMembershipList"
                },
                "CacheParameterGroup": {
                    "$ref": "#/$defs/CacheParameterGroupStatus"
                },
                "CacheSubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodes": {
                    "$ref": "#/$defs/CacheNodeList"
                },
                "AutoMinorVersionUpgrade": {
                    "$ref": "#/$defs/Boolean"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroupMembershipList"
                },
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "SnapshotWindow": {
                    "$ref": "#/$defs/String"
                },
                "AuthTokenEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "AuthTokenLastModifiedDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "TransitEncryptionEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "AtRestEncryptionEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroupLogDeliveryEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "LogDeliveryConfigurations": {
                    "$ref": "#/$defs/LogDeliveryConfigurationList"
                },
                "NetworkType": {
                    "$ref": "#/$defs/NetworkType"
                },
                "IpDiscovery": {
                    "$ref": "#/$defs/IpDiscovery"
                },
                "TransitEncryptionMode": {
                    "$ref": "#/$defs/TransitEncryptionMode"
                }
            }
        },
        "PendingModifiedValues": {
            "type": "object",
            "properties": {
                "NumCacheNodes": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "CacheNodeIdsToRemove": {
                    "$ref": "#/$defs/CacheNodeIdsList"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "AuthTokenStatus": {
                    "$ref": "#/$defs/AuthTokenUpdateStatus"
                },
                "LogDeliveryConfigurations": {
                    "$ref": "#/$defs/PendingLogDeliveryConfigurationList"
                },
                "TransitEncryptionEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "TransitEncryptionMode": {
                    "$ref": "#/$defs/TransitEncryptionMode"
                }
            }
        },
        "CacheNodeIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "NotificationConfiguration": {
            "type": "object",
            "properties": {
                "TopicArn": {
                    "$ref": "#/$defs/String"
                },
                "TopicStatus": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CacheSecurityGroupMembershipList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CacheSecurityGroupMembership"
            }
        },
        "CacheSecurityGroupMembership": {
            "type": "object",
            "properties": {
                "CacheSecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CacheParameterGroupStatus": {
            "type": "object",
            "properties": {
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "ParameterApplyStatus": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeIdsToReboot": {
                    "$ref": "#/$defs/CacheNodeIdsList"
                }
            }
        },
        "CacheNodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CacheNode"
            }
        },
        "CacheNode": {
            "type": "object",
            "properties": {
                "CacheNodeId": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeStatus": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeCreateTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "Endpoint": {
                    "$ref": "#/$defs/Endpoint"
                },
                "ParameterGroupStatus": {
                    "$ref": "#/$defs/String"
                },
                "SourceCacheNodeId": {
                    "$ref": "#/$defs/String"
                },
                "CustomerAvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "CustomerOutpostArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SecurityGroupMembershipList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupMembership"
            }
        },
        "SecurityGroupMembership": {
            "type": "object",
            "properties": {
                "SecurityGroupId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateCacheClusterMessage": {
            "type": "object",
            "properties": {
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "AZMode": {
                    "$ref": "#/$defs/AZMode"
                },
                "PreferredAvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "PreferredAvailabilityZones": {
                    "$ref": "#/$defs/PreferredAvailabilityZoneList"
                },
                "NumCacheNodes": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "CacheSubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "CacheSecurityGroupNames": {
                    "$ref": "#/$defs/CacheSecurityGroupNameList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdsList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SnapshotArns": {
                    "$ref": "#/$defs/SnapshotArnsList"
                },
                "SnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "PreferredMaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "Port": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NotificationTopicArn": {
                    "$ref": "#/$defs/String"
                },
                "AutoMinorVersionUpgrade": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "SnapshotWindow": {
                    "$ref": "#/$defs/String"
                },
                "AuthToken": {
                    "$ref": "#/$defs/String"
                },
                "OutpostMode": {
                    "$ref": "#/$defs/OutpostMode"
                },
                "PreferredOutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "PreferredOutpostArns": {
                    "$ref": "#/$defs/PreferredOutpostArnList"
                },
                "LogDeliveryConfigurations": {
                    "$ref": "#/$defs/LogDeliveryConfigurationRequestList"
                },
                "TransitEncryptionEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "NetworkType": {
                    "$ref": "#/$defs/NetworkType"
                },
                "IpDiscovery": {
                    "$ref": "#/$defs/IpDiscovery"
                }
            }
        },
        "AZMode": {
            "enum": [
                "SINGLE_AZ",
                "CROSS_AZ"
            ]
        },
        "PreferredAvailabilityZoneList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CacheSecurityGroupNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "SecurityGroupIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "SnapshotArnsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "OutpostMode": {
            "enum": [
                "SINGLE_OUTPOST",
                "CROSS_OUTPOST"
            ]
        },
        "PreferredOutpostArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "LogDeliveryConfigurationRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LogDeliveryConfigurationRequest"
            }
        },
        "LogDeliveryConfigurationRequest": {
            "type": "object",
            "properties": {
                "LogType": {
                    "$ref": "#/$defs/LogType"
                },
                "DestinationType": {
                    "$ref": "#/$defs/DestinationType"
                },
                "DestinationDetails": {
                    "$ref": "#/$defs/DestinationDetails"
                },
                "LogFormat": {
                    "$ref": "#/$defs/LogFormat"
                },
                "Enabled": {
                    "$ref": "#/$defs/BooleanOptional"
                }
            }
        },
        "CreateCacheParameterGroupResult": {
            "type": "object",
            "properties": {
                "CacheParameterGroup": {
                    "$ref": "#/$defs/CacheParameterGroup"
                }
            }
        },
        "CacheParameterGroup": {
            "type": "object",
            "properties": {
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "CacheParameterGroupFamily": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "IsGlobal": {
                    "$ref": "#/$defs/Boolean"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateCacheParameterGroupMessage": {
            "type": "object",
            "properties": {
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "CacheParameterGroupFamily": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateCacheSecurityGroupResult": {
            "type": "object",
            "properties": {
                "CacheSecurityGroup": {
                    "$ref": "#/$defs/CacheSecurityGroup"
                }
            }
        },
        "CreateCacheSecurityGroupMessage": {
            "type": "object",
            "properties": {
                "CacheSecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateCacheSubnetGroupResult": {
            "type": "object",
            "properties": {
                "CacheSubnetGroup": {
                    "$ref": "#/$defs/CacheSubnetGroup"
                }
            }
        },
        "CacheSubnetGroup": {
            "type": "object",
            "properties": {
                "CacheSubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "CacheSubnetGroupDescription": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "Subnets": {
                    "$ref": "#/$defs/SubnetList"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                },
                "SupportedNetworkTypes": {
                    "$ref": "#/$defs/NetworkTypeList"
                }
            }
        },
        "SubnetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Subnet"
            }
        },
        "Subnet": {
            "type": "object",
            "properties": {
                "SubnetIdentifier": {
                    "$ref": "#/$defs/String"
                },
                "SubnetAvailabilityZone": {
                    "$ref": "#/$defs/AvailabilityZone"
                },
                "SubnetOutpost": {
                    "$ref": "#/$defs/SubnetOutpost"
                },
                "SupportedNetworkTypes": {
                    "$ref": "#/$defs/NetworkTypeList"
                }
            }
        },
        "AvailabilityZone": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubnetOutpost": {
            "type": "object",
            "properties": {
                "SubnetOutpostArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkType"
            }
        },
        "CreateCacheSubnetGroupMessage": {
            "type": "object",
            "properties": {
                "CacheSubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "CacheSubnetGroupDescription": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIdentifierList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "SubnetIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CreateGlobalReplicationGroupResult": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroup": {
                    "$ref": "#/$defs/GlobalReplicationGroup"
                }
            }
        },
        "GlobalReplicationGroup": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "GlobalReplicationGroupDescription": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "Members": {
                    "$ref": "#/$defs/GlobalReplicationGroupMemberList"
                },
                "ClusterEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "GlobalNodeGroups": {
                    "$ref": "#/$defs/GlobalNodeGroupList"
                },
                "AuthTokenEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "TransitEncryptionEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "AtRestEncryptionEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GlobalReplicationGroupMemberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlobalReplicationGroupMember"
            }
        },
        "GlobalReplicationGroupMember": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroupRegion": {
                    "$ref": "#/$defs/String"
                },
                "Role": {
                    "$ref": "#/$defs/String"
                },
                "AutomaticFailover": {
                    "$ref": "#/$defs/AutomaticFailoverStatus"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GlobalNodeGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlobalNodeGroup"
            }
        },
        "GlobalNodeGroup": {
            "type": "object",
            "properties": {
                "GlobalNodeGroupId": {
                    "$ref": "#/$defs/String"
                },
                "Slots": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateGlobalReplicationGroupMessage": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroupIdSuffix": {
                    "$ref": "#/$defs/String"
                },
                "GlobalReplicationGroupDescription": {
                    "$ref": "#/$defs/String"
                },
                "PrimaryReplicationGroupId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateReplicationGroupResult": {
            "type": "object",
            "properties": {
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicationGroup"
                }
            }
        },
        "CreateReplicationGroupMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroupDescription": {
                    "$ref": "#/$defs/String"
                },
                "GlobalReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "PrimaryClusterId": {
                    "$ref": "#/$defs/String"
                },
                "AutomaticFailoverEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "MultiAZEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "NumCacheClusters": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "PreferredCacheClusterAZs": {
                    "$ref": "#/$defs/AvailabilityZonesList"
                },
                "NumNodeGroups": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "ReplicasPerNodeGroup": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NodeGroupConfiguration": {
                    "$ref": "#/$defs/NodeGroupConfigurationList"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "CacheSubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "CacheSecurityGroupNames": {
                    "$ref": "#/$defs/CacheSecurityGroupNameList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdsList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SnapshotArns": {
                    "$ref": "#/$defs/SnapshotArnsList"
                },
                "SnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "PreferredMaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "Port": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NotificationTopicArn": {
                    "$ref": "#/$defs/String"
                },
                "AutoMinorVersionUpgrade": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "SnapshotWindow": {
                    "$ref": "#/$defs/String"
                },
                "AuthToken": {
                    "$ref": "#/$defs/String"
                },
                "TransitEncryptionEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "AtRestEncryptionEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "UserGroupIds": {
                    "$ref": "#/$defs/UserGroupIdListInput"
                },
                "LogDeliveryConfigurations": {
                    "$ref": "#/$defs/LogDeliveryConfigurationRequestList"
                },
                "DataTieringEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "NetworkType": {
                    "$ref": "#/$defs/NetworkType"
                },
                "IpDiscovery": {
                    "$ref": "#/$defs/IpDiscovery"
                },
                "TransitEncryptionMode": {
                    "$ref": "#/$defs/TransitEncryptionMode"
                },
                "ClusterMode": {
                    "$ref": "#/$defs/ClusterMode"
                },
                "ServerlessCacheSnapshotName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NodeGroupConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeGroupConfiguration"
            }
        },
        "UserGroupIdListInput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserGroupId"
            }
        },
        "CreateServerlessCacheResponse": {
            "type": "object",
            "properties": {
                "ServerlessCache": {
                    "$ref": "#/$defs/ServerlessCache"
                }
            }
        },
        "ServerlessCache": {
            "type": "object",
            "properties": {
                "ServerlessCacheName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "CreateTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "MajorEngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "FullEngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "CacheUsageLimits": {
                    "$ref": "#/$defs/CacheUsageLimits"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdsList"
                },
                "Endpoint": {
                    "$ref": "#/$defs/Endpoint"
                },
                "ReaderEndpoint": {
                    "$ref": "#/$defs/Endpoint"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                },
                "UserGroupId": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIdsList"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "DailySnapshotTime": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CacheUsageLimits": {
            "type": "object",
            "properties": {
                "DataStorage": {
                    "$ref": "#/$defs/DataStorage"
                },
                "ECPUPerSecond": {
                    "$ref": "#/$defs/ECPUPerSecond"
                }
            }
        },
        "DataStorage": {
            "type": "object",
            "properties": {
                "Maximum": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Minimum": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Unit": {
                    "$ref": "#/$defs/DataStorageUnit"
                }
            }
        },
        "DataStorageUnit": {
            "enum": [
                "GB"
            ]
        },
        "ECPUPerSecond": {
            "type": "object",
            "properties": {
                "Maximum": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Minimum": {
                    "$ref": "#/$defs/IntegerOptional"
                }
            }
        },
        "SubnetIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CreateServerlessCacheRequest": {
            "type": "object",
            "properties": {
                "ServerlessCacheName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "MajorEngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "CacheUsageLimits": {
                    "$ref": "#/$defs/CacheUsageLimits"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdsList"
                },
                "SnapshotArnsToRestore": {
                    "$ref": "#/$defs/SnapshotArnsList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "UserGroupId": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIdsList"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "DailySnapshotTime": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateServerlessCacheSnapshotResponse": {
            "type": "object",
            "properties": {
                "ServerlessCacheSnapshot": {
                    "$ref": "#/$defs/ServerlessCacheSnapshot"
                }
            }
        },
        "CreateServerlessCacheSnapshotRequest": {
            "type": "object",
            "properties": {
                "ServerlessCacheSnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "ServerlessCacheName": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateSnapshotResult": {
            "type": "object",
            "properties": {
                "Snapshot": {
                    "$ref": "#/$defs/Snapshot"
                }
            }
        },
        "CreateSnapshotMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/String"
                },
                "UserName": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/EngineType"
                },
                "MinimumEngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "AccessString": {
                    "$ref": "#/$defs/String"
                },
                "UserGroupIds": {
                    "$ref": "#/$defs/UserGroupIdList"
                },
                "Authentication": {
                    "$ref": "#/$defs/Authentication"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EngineType": {
            "type": "string"
        },
        "Authentication": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/AuthenticationType"
                },
                "PasswordCount": {
                    "$ref": "#/$defs/IntegerOptional"
                }
            }
        },
        "AuthenticationType": {
            "enum": [
                "PASSWORD",
                "NO_PASSWORD",
                "IAM"
            ]
        },
        "CreateUserMessage": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "UserName": {
                    "$ref": "#/$defs/UserName"
                },
                "Engine": {
                    "$ref": "#/$defs/EngineType"
                },
                "Passwords": {
                    "$ref": "#/$defs/PasswordListInput"
                },
                "AccessString": {
                    "$ref": "#/$defs/AccessString"
                },
                "NoPasswordRequired": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "AuthenticationMode": {
                    "$ref": "#/$defs/AuthenticationMode"
                }
            }
        },
        "UserId": {
            "type": "string"
        },
        "UserName": {
            "type": "string"
        },
        "PasswordListInput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "AccessString": {
            "type": "string"
        },
        "AuthenticationMode": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/InputAuthenticationType"
                },
                "Passwords": {
                    "$ref": "#/$defs/PasswordListInput"
                }
            }
        },
        "InputAuthenticationType": {
            "enum": [
                "PASSWORD",
                "NO_PASSWORD",
                "IAM"
            ]
        },
        "UserGroup": {
            "type": "object",
            "properties": {
                "UserGroupId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/EngineType"
                },
                "UserIds": {
                    "$ref": "#/$defs/UserIdList"
                },
                "MinimumEngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "PendingChanges": {
                    "$ref": "#/$defs/UserGroupPendingChanges"
                },
                "ReplicationGroups": {
                    "$ref": "#/$defs/UGReplicationGroupIdList"
                },
                "ServerlessCaches": {
                    "$ref": "#/$defs/UGServerlessCacheIdList"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UserIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserId"
            }
        },
        "UserGroupPendingChanges": {
            "type": "object",
            "properties": {
                "UserIdsToRemove": {
                    "$ref": "#/$defs/UserIdList"
                },
                "UserIdsToAdd": {
                    "$ref": "#/$defs/UserIdList"
                }
            }
        },
        "UGReplicationGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "UGServerlessCacheIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CreateUserGroupMessage": {
            "type": "object",
            "properties": {
                "UserGroupId": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/EngineType"
                },
                "UserIds": {
                    "$ref": "#/$defs/UserIdListInput"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UserIdListInput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserId"
            }
        },
        "DecreaseNodeGroupsInGlobalReplicationGroupResult": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroup": {
                    "$ref": "#/$defs/GlobalReplicationGroup"
                }
            }
        },
        "DecreaseNodeGroupsInGlobalReplicationGroupMessage": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "NodeGroupCount": {
                    "$ref": "#/$defs/Integer"
                },
                "GlobalNodeGroupsToRemove": {
                    "$ref": "#/$defs/GlobalNodeGroupIdList"
                },
                "GlobalNodeGroupsToRetain": {
                    "$ref": "#/$defs/GlobalNodeGroupIdList"
                },
                "ApplyImmediately": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GlobalNodeGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DecreaseReplicaCountResult": {
            "type": "object",
            "properties": {
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicationGroup"
                }
            }
        },
        "DecreaseReplicaCountMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "NewReplicaCount": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "ReplicaConfiguration": {
                    "$ref": "#/$defs/ReplicaConfigurationList"
                },
                "ReplicasToRemove": {
                    "$ref": "#/$defs/RemoveReplicasList"
                },
                "ApplyImmediately": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ReplicaConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConfigureShard"
            }
        },
        "ConfigureShard": {
            "type": "object",
            "properties": {
                "NodeGroupId": {
                    "$ref": "#/$defs/AllowedNodeGroupId"
                },
                "NewReplicaCount": {
                    "$ref": "#/$defs/Integer"
                },
                "PreferredAvailabilityZones": {
                    "$ref": "#/$defs/PreferredAvailabilityZoneList"
                },
                "PreferredOutpostArns": {
                    "$ref": "#/$defs/PreferredOutpostArnList"
                }
            }
        },
        "RemoveReplicasList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DeleteCacheClusterResult": {
            "type": "object",
            "properties": {
                "CacheCluster": {
                    "$ref": "#/$defs/CacheCluster"
                }
            }
        },
        "DeleteCacheClusterMessage": {
            "type": "object",
            "properties": {
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "FinalSnapshotIdentifier": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteCacheParameterGroupMessage": {
            "type": "object",
            "properties": {
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteCacheSecurityGroupMessage": {
            "type": "object",
            "properties": {
                "CacheSecurityGroupName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteCacheSubnetGroupMessage": {
            "type": "object",
            "properties": {
                "CacheSubnetGroupName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteGlobalReplicationGroupResult": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroup": {
                    "$ref": "#/$defs/GlobalReplicationGroup"
                }
            }
        },
        "DeleteGlobalReplicationGroupMessage": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "RetainPrimaryReplicationGroup": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteReplicationGroupResult": {
            "type": "object",
            "properties": {
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicationGroup"
                }
            }
        },
        "DeleteReplicationGroupMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "RetainPrimaryCluster": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "FinalSnapshotIdentifier": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteServerlessCacheResponse": {
            "type": "object",
            "properties": {
                "ServerlessCache": {
                    "$ref": "#/$defs/ServerlessCache"
                }
            }
        },
        "DeleteServerlessCacheRequest": {
            "type": "object",
            "properties": {
                "ServerlessCacheName": {
                    "$ref": "#/$defs/String"
                },
                "FinalSnapshotName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteServerlessCacheSnapshotResponse": {
            "type": "object",
            "properties": {
                "ServerlessCacheSnapshot": {
                    "$ref": "#/$defs/ServerlessCacheSnapshot"
                }
            }
        },
        "DeleteServerlessCacheSnapshotRequest": {
            "type": "object",
            "properties": {
                "ServerlessCacheSnapshotName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteSnapshotResult": {
            "type": "object",
            "properties": {
                "Snapshot": {
                    "$ref": "#/$defs/Snapshot"
                }
            }
        },
        "DeleteSnapshotMessage": {
            "type": "object",
            "properties": {
                "SnapshotName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteUserMessage": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/UserId"
                }
            }
        },
        "DeleteUserGroupMessage": {
            "type": "object",
            "properties": {
                "UserGroupId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CacheClusterMessage": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "CacheClusters": {
                    "$ref": "#/$defs/CacheClusterList"
                }
            }
        },
        "CacheClusterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CacheCluster"
            }
        },
        "DescribeCacheClustersMessage": {
            "type": "object",
            "properties": {
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "ShowCacheNodeInfo": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "ShowCacheClustersNotInReplicationGroups": {
                    "$ref": "#/$defs/BooleanOptional"
                }
            }
        },
        "CacheEngineVersionMessage": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "CacheEngineVersions": {
                    "$ref": "#/$defs/CacheEngineVersionList"
                }
            }
        },
        "CacheEngineVersionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CacheEngineVersion"
            }
        },
        "CacheEngineVersion": {
            "type": "object",
            "properties": {
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "CacheParameterGroupFamily": {
                    "$ref": "#/$defs/String"
                },
                "CacheEngineDescription": {
                    "$ref": "#/$defs/String"
                },
                "CacheEngineVersionDescription": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeCacheEngineVersionsMessage": {
            "type": "object",
            "properties": {
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "CacheParameterGroupFamily": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "DefaultOnly": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CacheParameterGroupsMessage": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "CacheParameterGroups": {
                    "$ref": "#/$defs/CacheParameterGroupList"
                }
            }
        },
        "CacheParameterGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CacheParameterGroup"
            }
        },
        "DescribeCacheParameterGroupsMessage": {
            "type": "object",
            "properties": {
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CacheParameterGroupDetails": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersList"
                },
                "CacheNodeTypeSpecificParameters": {
                    "$ref": "#/$defs/CacheNodeTypeSpecificParametersList"
                }
            }
        },
        "ParametersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Parameter"
            }
        },
        "Parameter": {
            "type": "object",
            "properties": {
                "ParameterName": {
                    "$ref": "#/$defs/String"
                },
                "ParameterValue": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "DataType": {
                    "$ref": "#/$defs/String"
                },
                "AllowedValues": {
                    "$ref": "#/$defs/String"
                },
                "IsModifiable": {
                    "$ref": "#/$defs/Boolean"
                },
                "MinimumEngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "ChangeType": {
                    "$ref": "#/$defs/ChangeType"
                }
            }
        },
        "ChangeType": {
            "enum": [
                "immediate",
                "requires_reboot"
            ]
        },
        "CacheNodeTypeSpecificParametersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CacheNodeTypeSpecificParameter"
            }
        },
        "CacheNodeTypeSpecificParameter": {
            "type": "object",
            "properties": {
                "ParameterName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "DataType": {
                    "$ref": "#/$defs/String"
                },
                "AllowedValues": {
                    "$ref": "#/$defs/String"
                },
                "IsModifiable": {
                    "$ref": "#/$defs/Boolean"
                },
                "MinimumEngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeTypeSpecificValues": {
                    "$ref": "#/$defs/CacheNodeTypeSpecificValueList"
                },
                "ChangeType": {
                    "$ref": "#/$defs/ChangeType"
                }
            }
        },
        "CacheNodeTypeSpecificValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CacheNodeTypeSpecificValue"
            }
        },
        "CacheNodeTypeSpecificValue": {
            "type": "object",
            "properties": {
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeCacheParametersMessage": {
            "type": "object",
            "properties": {
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CacheSecurityGroupMessage": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "CacheSecurityGroups": {
                    "$ref": "#/$defs/CacheSecurityGroups"
                }
            }
        },
        "CacheSecurityGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CacheSecurityGroup"
            }
        },
        "DescribeCacheSecurityGroupsMessage": {
            "type": "object",
            "properties": {
                "CacheSecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CacheSubnetGroupMessage": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "CacheSubnetGroups": {
                    "$ref": "#/$defs/CacheSubnetGroups"
                }
            }
        },
        "CacheSubnetGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CacheSubnetGroup"
            }
        },
        "DescribeCacheSubnetGroupsMessage": {
            "type": "object",
            "properties": {
                "CacheSubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeEngineDefaultParametersResult": {
            "type": "object",
            "properties": {
                "EngineDefaults": {
                    "$ref": "#/$defs/EngineDefaults"
                }
            }
        },
        "EngineDefaults": {
            "type": "object",
            "properties": {
                "CacheParameterGroupFamily": {
                    "$ref": "#/$defs/String"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersList"
                },
                "CacheNodeTypeSpecificParameters": {
                    "$ref": "#/$defs/CacheNodeTypeSpecificParametersList"
                }
            }
        },
        "DescribeEngineDefaultParametersMessage": {
            "type": "object",
            "properties": {
                "CacheParameterGroupFamily": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EventsMessage": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "Events": {
                    "$ref": "#/$defs/EventList"
                }
            }
        },
        "EventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Event"
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "SourceIdentifier": {
                    "$ref": "#/$defs/String"
                },
                "SourceType": {
                    "$ref": "#/$defs/SourceType"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                },
                "Date": {
                    "$ref": "#/$defs/TStamp"
                }
            }
        },
        "SourceType": {
            "enum": [
                "cache_cluster",
                "cache_parameter_group",
                "cache_security_group",
                "cache_subnet_group",
                "replication_group",
                "serverless_cache",
                "serverless_cache_snapshot",
                "user",
                "user_group"
            ]
        },
        "DescribeEventsMessage": {
            "type": "object",
            "properties": {
                "SourceIdentifier": {
                    "$ref": "#/$defs/String"
                },
                "SourceType": {
                    "$ref": "#/$defs/SourceType"
                },
                "StartTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "Duration": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeGlobalReplicationGroupsResult": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "GlobalReplicationGroups": {
                    "$ref": "#/$defs/GlobalReplicationGroupList"
                }
            }
        },
        "GlobalReplicationGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlobalReplicationGroup"
            }
        },
        "DescribeGlobalReplicationGroupsMessage": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "ShowMemberInfo": {
                    "$ref": "#/$defs/BooleanOptional"
                }
            }
        },
        "ReplicationGroupMessage": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroups": {
                    "$ref": "#/$defs/ReplicationGroupList"
                }
            }
        },
        "ReplicationGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicationGroup"
            }
        },
        "DescribeReplicationGroupsMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ReservedCacheNodeMessage": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "ReservedCacheNodes": {
                    "$ref": "#/$defs/ReservedCacheNodeList"
                }
            }
        },
        "ReservedCacheNodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedCacheNode"
            }
        },
        "ReservedCacheNode": {
            "type": "object",
            "properties": {
                "ReservedCacheNodeId": {
                    "$ref": "#/$defs/String"
                },
                "ReservedCacheNodesOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "StartTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "Duration": {
                    "$ref": "#/$defs/Integer"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/Double"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/Double"
                },
                "CacheNodeCount": {
                    "$ref": "#/$defs/Integer"
                },
                "ProductDescription": {
                    "$ref": "#/$defs/String"
                },
                "OfferingType": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "RecurringCharges": {
                    "$ref": "#/$defs/RecurringChargeList"
                },
                "ReservationARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RecurringChargeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecurringCharge"
            }
        },
        "RecurringCharge": {
            "type": "object",
            "properties": {
                "RecurringChargeAmount": {
                    "$ref": "#/$defs/Double"
                },
                "RecurringChargeFrequency": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeReservedCacheNodesMessage": {
            "type": "object",
            "properties": {
                "ReservedCacheNodeId": {
                    "$ref": "#/$defs/String"
                },
                "ReservedCacheNodesOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "Duration": {
                    "$ref": "#/$defs/String"
                },
                "ProductDescription": {
                    "$ref": "#/$defs/String"
                },
                "OfferingType": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ReservedCacheNodesOfferingMessage": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "ReservedCacheNodesOfferings": {
                    "$ref": "#/$defs/ReservedCacheNodesOfferingList"
                }
            }
        },
        "ReservedCacheNodesOfferingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedCacheNodesOffering"
            }
        },
        "ReservedCacheNodesOffering": {
            "type": "object",
            "properties": {
                "ReservedCacheNodesOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "Duration": {
                    "$ref": "#/$defs/Integer"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/Double"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/Double"
                },
                "ProductDescription": {
                    "$ref": "#/$defs/String"
                },
                "OfferingType": {
                    "$ref": "#/$defs/String"
                },
                "RecurringCharges": {
                    "$ref": "#/$defs/RecurringChargeList"
                }
            }
        },
        "DescribeReservedCacheNodesOfferingsMessage": {
            "type": "object",
            "properties": {
                "ReservedCacheNodesOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "Duration": {
                    "$ref": "#/$defs/String"
                },
                "ProductDescription": {
                    "$ref": "#/$defs/String"
                },
                "OfferingType": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeServerlessCachesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ServerlessCaches": {
                    "$ref": "#/$defs/ServerlessCacheList"
                }
            }
        },
        "ServerlessCacheList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerlessCache"
            }
        },
        "DescribeServerlessCachesRequest": {
            "type": "object",
            "properties": {
                "ServerlessCacheName": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeServerlessCacheSnapshotsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ServerlessCacheSnapshots": {
                    "$ref": "#/$defs/ServerlessCacheSnapshotList"
                }
            }
        },
        "ServerlessCacheSnapshotList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerlessCacheSnapshot"
            }
        },
        "DescribeServerlessCacheSnapshotsRequest": {
            "type": "object",
            "properties": {
                "ServerlessCacheName": {
                    "$ref": "#/$defs/String"
                },
                "ServerlessCacheSnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotType": {
                    "$ref": "#/$defs/String"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                }
            }
        },
        "ServiceUpdatesMessage": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "ServiceUpdates": {
                    "$ref": "#/$defs/ServiceUpdateList"
                }
            }
        },
        "ServiceUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceUpdate"
            }
        },
        "ServiceUpdate": {
            "type": "object",
            "properties": {
                "ServiceUpdateName": {
                    "$ref": "#/$defs/String"
                },
                "ServiceUpdateReleaseDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "ServiceUpdateEndDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "ServiceUpdateSeverity": {
                    "$ref": "#/$defs/ServiceUpdateSeverity"
                },
                "ServiceUpdateRecommendedApplyByDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "ServiceUpdateStatus": {
                    "$ref": "#/$defs/ServiceUpdateStatus"
                },
                "ServiceUpdateDescription": {
                    "$ref": "#/$defs/String"
                },
                "ServiceUpdateType": {
                    "$ref": "#/$defs/ServiceUpdateType"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "AutoUpdateAfterRecommendedApplyByDate": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "EstimatedUpdateTime": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceUpdateSeverity": {
            "enum": [
                "CRITICAL",
                "IMPORTANT",
                "MEDIUM",
                "LOW"
            ]
        },
        "ServiceUpdateStatus": {
            "enum": [
                "AVAILABLE",
                "CANCELLED",
                "EXPIRED"
            ]
        },
        "ServiceUpdateType": {
            "enum": [
                "SECURITY_UPDATE"
            ]
        },
        "DescribeServiceUpdatesMessage": {
            "type": "object",
            "properties": {
                "ServiceUpdateName": {
                    "$ref": "#/$defs/String"
                },
                "ServiceUpdateStatus": {
                    "$ref": "#/$defs/ServiceUpdateStatusList"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceUpdateStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceUpdateStatus"
            }
        },
        "DescribeSnapshotsListMessage": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "Snapshots": {
                    "$ref": "#/$defs/SnapshotList"
                }
            }
        },
        "SnapshotList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Snapshot"
            }
        },
        "DescribeSnapshotsMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotSource": {
                    "$ref": "#/$defs/String"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "ShowNodeGroupConfig": {
                    "$ref": "#/$defs/BooleanOptional"
                }
            }
        },
        "UpdateActionsMessage": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/String"
                },
                "UpdateActions": {
                    "$ref": "#/$defs/UpdateActionList"
                }
            }
        },
        "UpdateActionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpdateAction"
            }
        },
        "UpdateAction": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "ServiceUpdateName": {
                    "$ref": "#/$defs/String"
                },
                "ServiceUpdateReleaseDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "ServiceUpdateSeverity": {
                    "$ref": "#/$defs/ServiceUpdateSeverity"
                },
                "ServiceUpdateStatus": {
                    "$ref": "#/$defs/ServiceUpdateStatus"
                },
                "ServiceUpdateRecommendedApplyByDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "ServiceUpdateType": {
                    "$ref": "#/$defs/ServiceUpdateType"
                },
                "UpdateActionAvailableDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "UpdateActionStatus": {
                    "$ref": "#/$defs/UpdateActionStatus"
                },
                "NodesUpdated": {
                    "$ref": "#/$defs/String"
                },
                "UpdateActionStatusModifiedDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "SlaMet": {
                    "$ref": "#/$defs/SlaMet"
                },
                "NodeGroupUpdateStatus": {
                    "$ref": "#/$defs/NodeGroupUpdateStatusList"
                },
                "CacheNodeUpdateStatus": {
                    "$ref": "#/$defs/CacheNodeUpdateStatusList"
                },
                "EstimatedUpdateTime": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SlaMet": {
            "enum": [
                "YES",
                "NO",
                "NA"
            ]
        },
        "NodeGroupUpdateStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeGroupUpdateStatus"
            }
        },
        "NodeGroupUpdateStatus": {
            "type": "object",
            "properties": {
                "NodeGroupId": {
                    "$ref": "#/$defs/String"
                },
                "NodeGroupMemberUpdateStatus": {
                    "$ref": "#/$defs/NodeGroupMemberUpdateStatusList"
                }
            }
        },
        "NodeGroupMemberUpdateStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeGroupMemberUpdateStatus"
            }
        },
        "NodeGroupMemberUpdateStatus": {
            "type": "object",
            "properties": {
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeId": {
                    "$ref": "#/$defs/String"
                },
                "NodeUpdateStatus": {
                    "$ref": "#/$defs/NodeUpdateStatus"
                },
                "NodeDeletionDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "NodeUpdateStartDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "NodeUpdateEndDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "NodeUpdateInitiatedBy": {
                    "$ref": "#/$defs/NodeUpdateInitiatedBy"
                },
                "NodeUpdateInitiatedDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "NodeUpdateStatusModifiedDate": {
                    "$ref": "#/$defs/TStamp"
                }
            }
        },
        "NodeUpdateStatus": {
            "enum": [
                "NOT_APPLIED",
                "WAITING_TO_START",
                "IN_PROGRESS",
                "STOPPING",
                "STOPPED",
                "COMPLETE"
            ]
        },
        "NodeUpdateInitiatedBy": {
            "enum": [
                "SYSTEM",
                "CUSTOMER"
            ]
        },
        "CacheNodeUpdateStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CacheNodeUpdateStatus"
            }
        },
        "CacheNodeUpdateStatus": {
            "type": "object",
            "properties": {
                "CacheNodeId": {
                    "$ref": "#/$defs/String"
                },
                "NodeUpdateStatus": {
                    "$ref": "#/$defs/NodeUpdateStatus"
                },
                "NodeDeletionDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "NodeUpdateStartDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "NodeUpdateEndDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "NodeUpdateInitiatedBy": {
                    "$ref": "#/$defs/NodeUpdateInitiatedBy"
                },
                "NodeUpdateInitiatedDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "NodeUpdateStatusModifiedDate": {
                    "$ref": "#/$defs/TStamp"
                }
            }
        },
        "DescribeUpdateActionsMessage": {
            "type": "object",
            "properties": {
                "ServiceUpdateName": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroupIds": {
                    "$ref": "#/$defs/ReplicationGroupIdList"
                },
                "CacheClusterIds": {
                    "$ref": "#/$defs/CacheClusterIdList"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "ServiceUpdateStatus": {
                    "$ref": "#/$defs/ServiceUpdateStatusList"
                },
                "ServiceUpdateTimeRange": {
                    "$ref": "#/$defs/TimeRangeFilter"
                },
                "UpdateActionStatus": {
                    "$ref": "#/$defs/UpdateActionStatusList"
                },
                "ShowNodeLevelUpdateStatus": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TimeRangeFilter": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/TStamp"
                }
            }
        },
        "UpdateActionStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpdateActionStatus"
            }
        },
        "DescribeUserGroupsResult": {
            "type": "object",
            "properties": {
                "UserGroups": {
                    "$ref": "#/$defs/UserGroupList"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UserGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserGroup"
            }
        },
        "DescribeUserGroupsMessage": {
            "type": "object",
            "properties": {
                "UserGroupId": {
                    "$ref": "#/$defs/String"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeUsersResult": {
            "type": "object",
            "properties": {
                "Users": {
                    "$ref": "#/$defs/UserList"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UserList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/User"
            }
        },
        "DescribeUsersMessage": {
            "type": "object",
            "properties": {
                "Engine": {
                    "$ref": "#/$defs/EngineType"
                },
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FilterName"
                },
                "Values": {
                    "$ref": "#/$defs/FilterValueList"
                }
            }
        },
        "FilterName": {
            "type": "string"
        },
        "FilterValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterValue"
            }
        },
        "FilterValue": {
            "type": "string"
        },
        "DisassociateGlobalReplicationGroupResult": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroup": {
                    "$ref": "#/$defs/GlobalReplicationGroup"
                }
            }
        },
        "DisassociateGlobalReplicationGroupMessage": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroupRegion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ExportServerlessCacheSnapshotResponse": {
            "type": "object",
            "properties": {
                "ServerlessCacheSnapshot": {
                    "$ref": "#/$defs/ServerlessCacheSnapshot"
                }
            }
        },
        "ExportServerlessCacheSnapshotRequest": {
            "type": "object",
            "properties": {
                "ServerlessCacheSnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "S3BucketName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FailoverGlobalReplicationGroupResult": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroup": {
                    "$ref": "#/$defs/GlobalReplicationGroup"
                }
            }
        },
        "FailoverGlobalReplicationGroupMessage": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "PrimaryRegion": {
                    "$ref": "#/$defs/String"
                },
                "PrimaryReplicationGroupId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IncreaseNodeGroupsInGlobalReplicationGroupResult": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroup": {
                    "$ref": "#/$defs/GlobalReplicationGroup"
                }
            }
        },
        "IncreaseNodeGroupsInGlobalReplicationGroupMessage": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "NodeGroupCount": {
                    "$ref": "#/$defs/Integer"
                },
                "RegionalConfigurations": {
                    "$ref": "#/$defs/RegionalConfigurationList"
                },
                "ApplyImmediately": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RegionalConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RegionalConfiguration"
            }
        },
        "RegionalConfiguration": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroupRegion": {
                    "$ref": "#/$defs/String"
                },
                "ReshardingConfiguration": {
                    "$ref": "#/$defs/ReshardingConfigurationList"
                }
            }
        },
        "ReshardingConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReshardingConfiguration"
            }
        },
        "ReshardingConfiguration": {
            "type": "object",
            "properties": {
                "NodeGroupId": {
                    "$ref": "#/$defs/AllowedNodeGroupId"
                },
                "PreferredAvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZonesList"
                }
            }
        },
        "IncreaseReplicaCountResult": {
            "type": "object",
            "properties": {
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicationGroup"
                }
            }
        },
        "IncreaseReplicaCountMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "NewReplicaCount": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "ReplicaConfiguration": {
                    "$ref": "#/$defs/ReplicaConfigurationList"
                },
                "ApplyImmediately": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AllowedNodeTypeModificationsMessage": {
            "type": "object",
            "properties": {
                "ScaleUpModifications": {
                    "$ref": "#/$defs/NodeTypeList"
                },
                "ScaleDownModifications": {
                    "$ref": "#/$defs/NodeTypeList"
                }
            }
        },
        "NodeTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ListAllowedNodeTypeModificationsMessage": {
            "type": "object",
            "properties": {
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListTagsForResourceMessage": {
            "type": "object",
            "properties": {
                "ResourceName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyCacheClusterResult": {
            "type": "object",
            "properties": {
                "CacheCluster": {
                    "$ref": "#/$defs/CacheCluster"
                }
            }
        },
        "ModifyCacheClusterMessage": {
            "type": "object",
            "properties": {
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "NumCacheNodes": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "CacheNodeIdsToRemove": {
                    "$ref": "#/$defs/CacheNodeIdsList"
                },
                "AZMode": {
                    "$ref": "#/$defs/AZMode"
                },
                "NewAvailabilityZones": {
                    "$ref": "#/$defs/PreferredAvailabilityZoneList"
                },
                "CacheSecurityGroupNames": {
                    "$ref": "#/$defs/CacheSecurityGroupNameList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdsList"
                },
                "PreferredMaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "NotificationTopicArn": {
                    "$ref": "#/$defs/String"
                },
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "NotificationTopicStatus": {
                    "$ref": "#/$defs/String"
                },
                "ApplyImmediately": {
                    "$ref": "#/$defs/Boolean"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "AutoMinorVersionUpgrade": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "SnapshotWindow": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "AuthToken": {
                    "$ref": "#/$defs/String"
                },
                "AuthTokenUpdateStrategy": {
                    "$ref": "#/$defs/AuthTokenUpdateStrategyType"
                },
                "LogDeliveryConfigurations": {
                    "$ref": "#/$defs/LogDeliveryConfigurationRequestList"
                },
                "IpDiscovery": {
                    "$ref": "#/$defs/IpDiscovery"
                }
            }
        },
        "AuthTokenUpdateStrategyType": {
            "enum": [
                "SET",
                "ROTATE",
                "DELETE"
            ]
        },
        "CacheParameterGroupNameMessage": {
            "type": "object",
            "properties": {
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyCacheParameterGroupMessage": {
            "type": "object",
            "properties": {
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "ParameterNameValues": {
                    "$ref": "#/$defs/ParameterNameValueList"
                }
            }
        },
        "ParameterNameValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ParameterNameValue"
            }
        },
        "ParameterNameValue": {
            "type": "object",
            "properties": {
                "ParameterName": {
                    "$ref": "#/$defs/String"
                },
                "ParameterValue": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyCacheSubnetGroupResult": {
            "type": "object",
            "properties": {
                "CacheSubnetGroup": {
                    "$ref": "#/$defs/CacheSubnetGroup"
                }
            }
        },
        "ModifyCacheSubnetGroupMessage": {
            "type": "object",
            "properties": {
                "CacheSubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "CacheSubnetGroupDescription": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIdentifierList"
                }
            }
        },
        "ModifyGlobalReplicationGroupResult": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroup": {
                    "$ref": "#/$defs/GlobalReplicationGroup"
                }
            }
        },
        "ModifyGlobalReplicationGroupMessage": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "ApplyImmediately": {
                    "$ref": "#/$defs/Boolean"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "GlobalReplicationGroupDescription": {
                    "$ref": "#/$defs/String"
                },
                "AutomaticFailoverEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                }
            }
        },
        "ModifyReplicationGroupResult": {
            "type": "object",
            "properties": {
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicationGroup"
                }
            }
        },
        "ModifyReplicationGroupMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationGroupDescription": {
                    "$ref": "#/$defs/String"
                },
                "PrimaryClusterId": {
                    "$ref": "#/$defs/String"
                },
                "SnapshottingClusterId": {
                    "$ref": "#/$defs/String"
                },
                "AutomaticFailoverEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "MultiAZEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "NodeGroupId": {
                    "$ref": "#/$defs/String"
                },
                "CacheSecurityGroupNames": {
                    "$ref": "#/$defs/CacheSecurityGroupNameList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdsList"
                },
                "PreferredMaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "NotificationTopicArn": {
                    "$ref": "#/$defs/String"
                },
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "NotificationTopicStatus": {
                    "$ref": "#/$defs/String"
                },
                "ApplyImmediately": {
                    "$ref": "#/$defs/Boolean"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "AutoMinorVersionUpgrade": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "SnapshotWindow": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeType": {
                    "$ref": "#/$defs/String"
                },
                "AuthToken": {
                    "$ref": "#/$defs/String"
                },
                "AuthTokenUpdateStrategy": {
                    "$ref": "#/$defs/AuthTokenUpdateStrategyType"
                },
                "UserGroupIdsToAdd": {
                    "$ref": "#/$defs/UserGroupIdList"
                },
                "UserGroupIdsToRemove": {
                    "$ref": "#/$defs/UserGroupIdList"
                },
                "RemoveUserGroups": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "LogDeliveryConfigurations": {
                    "$ref": "#/$defs/LogDeliveryConfigurationRequestList"
                },
                "IpDiscovery": {
                    "$ref": "#/$defs/IpDiscovery"
                },
                "TransitEncryptionEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "TransitEncryptionMode": {
                    "$ref": "#/$defs/TransitEncryptionMode"
                },
                "ClusterMode": {
                    "$ref": "#/$defs/ClusterMode"
                }
            }
        },
        "ModifyReplicationGroupShardConfigurationResult": {
            "type": "object",
            "properties": {
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicationGroup"
                }
            }
        },
        "ModifyReplicationGroupShardConfigurationMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "NodeGroupCount": {
                    "$ref": "#/$defs/Integer"
                },
                "ApplyImmediately": {
                    "$ref": "#/$defs/Boolean"
                },
                "ReshardingConfiguration": {
                    "$ref": "#/$defs/ReshardingConfigurationList"
                },
                "NodeGroupsToRemove": {
                    "$ref": "#/$defs/NodeGroupsToRemoveList"
                },
                "NodeGroupsToRetain": {
                    "$ref": "#/$defs/NodeGroupsToRetainList"
                }
            }
        },
        "NodeGroupsToRemoveList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllowedNodeGroupId"
            }
        },
        "NodeGroupsToRetainList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllowedNodeGroupId"
            }
        },
        "ModifyServerlessCacheResponse": {
            "type": "object",
            "properties": {
                "ServerlessCache": {
                    "$ref": "#/$defs/ServerlessCache"
                }
            }
        },
        "ModifyServerlessCacheRequest": {
            "type": "object",
            "properties": {
                "ServerlessCacheName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "CacheUsageLimits": {
                    "$ref": "#/$defs/CacheUsageLimits"
                },
                "RemoveUserGroup": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "UserGroupId": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdsList"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "DailySnapshotTime": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyUserMessage": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "AccessString": {
                    "$ref": "#/$defs/AccessString"
                },
                "AppendAccessString": {
                    "$ref": "#/$defs/AccessString"
                },
                "Passwords": {
                    "$ref": "#/$defs/PasswordListInput"
                },
                "NoPasswordRequired": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "AuthenticationMode": {
                    "$ref": "#/$defs/AuthenticationMode"
                }
            }
        },
        "ModifyUserGroupMessage": {
            "type": "object",
            "properties": {
                "UserGroupId": {
                    "$ref": "#/$defs/String"
                },
                "UserIdsToAdd": {
                    "$ref": "#/$defs/UserIdListInput"
                },
                "UserIdsToRemove": {
                    "$ref": "#/$defs/UserIdListInput"
                }
            }
        },
        "PurchaseReservedCacheNodesOfferingResult": {
            "type": "object",
            "properties": {
                "ReservedCacheNode": {
                    "$ref": "#/$defs/ReservedCacheNode"
                }
            }
        },
        "PurchaseReservedCacheNodesOfferingMessage": {
            "type": "object",
            "properties": {
                "ReservedCacheNodesOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "ReservedCacheNodeId": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeCount": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "RebalanceSlotsInGlobalReplicationGroupResult": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroup": {
                    "$ref": "#/$defs/GlobalReplicationGroup"
                }
            }
        },
        "RebalanceSlotsInGlobalReplicationGroupMessage": {
            "type": "object",
            "properties": {
                "GlobalReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "ApplyImmediately": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RebootCacheClusterResult": {
            "type": "object",
            "properties": {
                "CacheCluster": {
                    "$ref": "#/$defs/CacheCluster"
                }
            }
        },
        "RebootCacheClusterMessage": {
            "type": "object",
            "properties": {
                "CacheClusterId": {
                    "$ref": "#/$defs/String"
                },
                "CacheNodeIdsToReboot": {
                    "$ref": "#/$defs/CacheNodeIdsList"
                }
            }
        },
        "RemoveTagsFromResourceMessage": {
            "type": "object",
            "properties": {
                "ResourceName": {
                    "$ref": "#/$defs/String"
                },
                "TagKeys": {
                    "$ref": "#/$defs/KeyList"
                }
            }
        },
        "KeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ResetCacheParameterGroupMessage": {
            "type": "object",
            "properties": {
                "CacheParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "ResetAllParameters": {
                    "$ref": "#/$defs/Boolean"
                },
                "ParameterNameValues": {
                    "$ref": "#/$defs/ParameterNameValueList"
                }
            }
        },
        "RevokeCacheSecurityGroupIngressResult": {
            "type": "object",
            "properties": {
                "CacheSecurityGroup": {
                    "$ref": "#/$defs/CacheSecurityGroup"
                }
            }
        },
        "RevokeCacheSecurityGroupIngressMessage": {
            "type": "object",
            "properties": {
                "CacheSecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "EC2SecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "EC2SecurityGroupOwnerId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StartMigrationResponse": {
            "type": "object",
            "properties": {
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicationGroup"
                }
            }
        },
        "StartMigrationMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "CustomerNodeEndpointList": {
                    "$ref": "#/$defs/CustomerNodeEndpointList"
                }
            }
        },
        "CustomerNodeEndpointList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomerNodeEndpoint"
            }
        },
        "CustomerNodeEndpoint": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/$defs/String"
                },
                "Port": {
                    "$ref": "#/$defs/IntegerOptional"
                }
            }
        },
        "TestFailoverResult": {
            "type": "object",
            "properties": {
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicationGroup"
                }
            }
        },
        "TestFailoverMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "NodeGroupId": {
                    "$ref": "#/$defs/AllowedNodeGroupId"
                }
            }
        },
        "TestMigrationResponse": {
            "type": "object",
            "properties": {
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicationGroup"
                }
            }
        },
        "TestMigrationMessage": {
            "type": "object",
            "properties": {
                "ReplicationGroupId": {
                    "$ref": "#/$defs/String"
                },
                "CustomerNodeEndpointList": {
                    "$ref": "#/$defs/CustomerNodeEndpointList"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://elasticache-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "stringEquals",
                                                        "argv": [
                                                            {
                                                                "fn": "getAttr",
                                                                "argv": [
                                                                    {
                                                                        "ref": "PartitionResult"
                                                                    },
                                                                    "name"
                                                                ]
                                                            },
                                                            "aws-us-gov"
                                                        ]
                                                    }
                                                ],
                                                "endpoint": {
                                                    "url": "https://elasticache.{Region}.amazonaws.com",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            },
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://elasticache-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://elasticache.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://elasticache.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}