{
    "name": "apigateway",
    "commands": [
        {
            "name": "CreateApiKey",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/apikeys"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ApiKey"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateApiKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/restapis/{restApiId}/authorizers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Authorizer"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAuthorizerRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateBasePathMapping",
            "config": {
                "http": {
                    "inject": [
                        {
                            "domainName": "route.domainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domainnames/{domainName}/basepathmappings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BasePathMapping"
                    },
                    "inject": [
                        "param.0.domainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBasePathMappingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateDeployment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/restapis/{restApiId}/deployments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Deployment"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDeploymentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateDocumentationPart",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/restapis/{restApiId}/documentation/parts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DocumentationPart"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDocumentationPartRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateDocumentationVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/restapis/{restApiId}/documentation/versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DocumentationVersion"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDocumentationVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateDomainName",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/domainnames"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DomainName"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDomainNameRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateModel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/restapis/{restApiId}/models"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Model"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateModelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateRequestValidator",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/restapis/{restApiId}/requestvalidators"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RequestValidator"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRequestValidatorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "parentId": "route.parentId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/restapis/{restApiId}/resources/{parentId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Resource"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.parentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateRestApi",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/restapis"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestApi"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRestApiRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateStage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/restapis/{restApiId}/stages"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Stage"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateStageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateUsagePlan",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/usageplans"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UsagePlan"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUsagePlanRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateUsagePlanKey",
            "config": {
                "http": {
                    "inject": [
                        {
                            "usagePlanId": "route.usagePlanId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/usageplans/{usagePlanId}/keys"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UsagePlanKey"
                    },
                    "inject": [
                        "param.0.usagePlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUsagePlanKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateVpcLink",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/vpclinks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/VpcLink"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpcLinkRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteApiKey",
            "config": {
                "http": {
                    "inject": [
                        {
                            "apiKey": "route.apiKey",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/apikeys/{apiKey}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.apiKey",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteApiKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "authorizerId": "route.authorizerId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/authorizers/{authorizerId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.authorizerId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAuthorizerRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBasePathMapping",
            "config": {
                "http": {
                    "inject": [
                        {
                            "domainName": "route.domainName",
                            "basePath": "route.basePath",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/domainnames/{domainName}/basepathmappings/{basePath}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.domainName",
                        "param.0.basePath",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBasePathMappingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteClientCertificate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "clientCertificateId": "route.clientCertificateId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/clientcertificates/{clientCertificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.clientCertificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteClientCertificateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDeployment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "deploymentId": "route.deploymentId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/deployments/{deploymentId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.deploymentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDeploymentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDocumentationPart",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "documentationPartId": "route.documentationPartId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/documentation/parts/{documentationPartId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.documentationPartId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDocumentationPartRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDocumentationVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "documentationVersion": "route.documentationVersion",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/documentation/versions/{documentationVersion}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.documentationVersion",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDocumentationVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDomainName",
            "config": {
                "http": {
                    "inject": [
                        {
                            "domainName": "route.domainName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/domainnames/{domainName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.domainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDomainNameRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteGatewayResponse",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "responseType": "route.responseType",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/gatewayresponses/{responseType}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.responseType",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteGatewayResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteIntegration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteIntegrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteIntegrationResponse",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "statusCode": "route.statusCode",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration/responses/{statusCode}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0.statusCode",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteIntegrationResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMethod",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMethodRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMethodResponse",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "statusCode": "route.statusCode",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/responses/{statusCode}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0.statusCode",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMethodResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteModel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "modelName": "route.modelName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/models/{modelName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.modelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteModelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteRequestValidator",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "requestValidatorId": "route.requestValidatorId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/requestvalidators/{requestValidatorId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.requestValidatorId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRequestValidatorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/resources/{resourceId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteRestApi",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRestApiRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteStage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "stageName": "route.stageName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/stages/{stageName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.stageName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteStageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteUsagePlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "usagePlanId": "route.usagePlanId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/usageplans/{usagePlanId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.usagePlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteUsagePlanRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteUsagePlanKey",
            "config": {
                "http": {
                    "inject": [
                        {
                            "usagePlanId": "route.usagePlanId",
                            "keyId": "route.keyId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/usageplans/{usagePlanId}/keys/{keyId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.usagePlanId",
                        "param.0.keyId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteUsagePlanKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVpcLink",
            "config": {
                "http": {
                    "inject": [
                        {
                            "vpcLinkId": "route.vpcLinkId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/vpclinks/{vpcLinkId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.vpcLinkId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpcLinkRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "FlushStageAuthorizersCache",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "stageName": "route.stageName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/stages/{stageName}/cache/authorizers"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.stageName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/FlushStageAuthorizersCacheRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "FlushStageCache",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "stageName": "route.stageName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restapis/{restApiId}/stages/{stageName}/cache/data"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.stageName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/FlushStageCacheRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GenerateClientCertificate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/clientcertificates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ClientCertificate"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GenerateClientCertificateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetAccount",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/account"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Account"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetApiKey",
            "config": {
                "http": {
                    "inject": [
                        {
                            "apiKey": "route.apiKey",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/apikeys/{apiKey}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ApiKey"
                    },
                    "inject": [
                        "param.0.apiKey",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetApiKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetApiKeys",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/apikeys"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ApiKeys"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetApiKeysRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "authorizerId": "route.authorizerId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/authorizers/{authorizerId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Authorizer"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.authorizerId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAuthorizerRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetAuthorizers",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/authorizers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Authorizers"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAuthorizersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetBasePathMapping",
            "config": {
                "http": {
                    "inject": [
                        {
                            "domainName": "route.domainName",
                            "basePath": "route.basePath",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domainnames/{domainName}/basepathmappings/{basePath}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BasePathMapping"
                    },
                    "inject": [
                        "param.0.domainName",
                        "param.0.basePath",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBasePathMappingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetBasePathMappings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "domainName": "route.domainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domainnames/{domainName}/basepathmappings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BasePathMappings"
                    },
                    "inject": [
                        "param.0.domainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBasePathMappingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetClientCertificate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "clientCertificateId": "route.clientCertificateId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/clientcertificates/{clientCertificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ClientCertificate"
                    },
                    "inject": [
                        "param.0.clientCertificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetClientCertificateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetClientCertificates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/clientcertificates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ClientCertificates"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetClientCertificatesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDeployment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "deploymentId": "route.deploymentId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/deployments/{deploymentId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Deployment"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.deploymentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDeploymentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDeployments",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/deployments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Deployments"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDeploymentsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDocumentationPart",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "documentationPartId": "route.documentationPartId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/documentation/parts/{documentationPartId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DocumentationPart"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.documentationPartId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDocumentationPartRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDocumentationParts",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/documentation/parts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DocumentationParts"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDocumentationPartsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDocumentationVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "documentationVersion": "route.documentationVersion",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/documentation/versions/{documentationVersion}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DocumentationVersion"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.documentationVersion",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDocumentationVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDocumentationVersions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/documentation/versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DocumentationVersions"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDocumentationVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDomainName",
            "config": {
                "http": {
                    "inject": [
                        {
                            "domainName": "route.domainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domainnames/{domainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DomainName"
                    },
                    "inject": [
                        "param.0.domainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDomainNameRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDomainNames",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/domainnames"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DomainNames"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDomainNamesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetExport",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "stageName": "route.stageName",
                            "exportType": "route.exportType",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/stages/{stageName}/exports/{exportType}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.stageName",
                        "param.0.exportType",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetExportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetGatewayResponse",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "responseType": "route.responseType",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/gatewayresponses/{responseType}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GatewayResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.responseType",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetGatewayResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetGatewayResponses",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/gatewayresponses"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GatewayResponses"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetGatewayResponsesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetIntegration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Integration"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIntegrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetIntegrationResponse",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "statusCode": "route.statusCode",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration/responses/{statusCode}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/IntegrationResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0.statusCode",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIntegrationResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetMethod",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Method"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMethodRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetMethodResponse",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "statusCode": "route.statusCode",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/responses/{statusCode}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MethodResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0.statusCode",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMethodResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetModel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "modelName": "route.modelName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/models/{modelName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Model"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.modelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetModelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetModels",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/models"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Models"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetModelsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetModelTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "modelName": "route.modelName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/models/{modelName}/default_template"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Template"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.modelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetModelTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetRequestValidator",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "requestValidatorId": "route.requestValidatorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/requestvalidators/{requestValidatorId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RequestValidator"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.requestValidatorId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRequestValidatorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetRequestValidators",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/requestvalidators"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RequestValidators"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRequestValidatorsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/resources/{resourceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Resource"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetResources",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/resources"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Resources"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourcesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetRestApi",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestApi"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRestApiRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetRestApis",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/restapis"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestApis"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRestApisRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetSdk",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "stageName": "route.stageName",
                            "sdkType": "route.sdkType",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/stages/{stageName}/sdks/{sdkType}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SdkResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.stageName",
                        "param.0.sdkType",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSdkRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetSdkType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/sdktypes/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SdkType"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSdkTypeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetSdkTypes",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/sdktypes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SdkTypes"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSdkTypesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetStage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "stageName": "route.stageName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/stages/{stageName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Stage"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.stageName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetStageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetStages",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restapis/{restApiId}/stages"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Stages"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetStagesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetTags",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Tags"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetUsage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "usagePlanId": "route.usagePlanId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/usageplans/{usagePlanId}/usage"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Usage"
                    },
                    "inject": [
                        "param.0.usagePlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUsageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetUsagePlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "usagePlanId": "route.usagePlanId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/usageplans/{usagePlanId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UsagePlan"
                    },
                    "inject": [
                        "param.0.usagePlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUsagePlanRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetUsagePlanKey",
            "config": {
                "http": {
                    "inject": [
                        {
                            "usagePlanId": "route.usagePlanId",
                            "keyId": "route.keyId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/usageplans/{usagePlanId}/keys/{keyId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UsagePlanKey"
                    },
                    "inject": [
                        "param.0.usagePlanId",
                        "param.0.keyId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUsagePlanKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetUsagePlanKeys",
            "config": {
                "http": {
                    "inject": [
                        {
                            "usagePlanId": "route.usagePlanId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/usageplans/{usagePlanId}/keys"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UsagePlanKeys"
                    },
                    "inject": [
                        "param.0.usagePlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUsagePlanKeysRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetUsagePlans",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/usageplans"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UsagePlans"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUsagePlansRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetVpcLink",
            "config": {
                "http": {
                    "inject": [
                        {
                            "vpcLinkId": "route.vpcLinkId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/vpclinks/{vpcLinkId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/VpcLink"
                    },
                    "inject": [
                        "param.0.vpcLinkId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetVpcLinkRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetVpcLinks",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/vpclinks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/VpcLinks"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetVpcLinksRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ImportApiKeys",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/apikeys"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ApiKeyIds"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportApiKeysRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ImportDocumentationParts",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/restapis/{restApiId}/documentation/parts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DocumentationPartIds"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportDocumentationPartsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ImportRestApi",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/restapis"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestApi"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportRestApiRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutGatewayResponse",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "responseType": "route.responseType",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/restapis/{restApiId}/gatewayresponses/{responseType}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GatewayResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.responseType",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutGatewayResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutIntegration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Integration"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutIntegrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutIntegrationResponse",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "statusCode": "route.statusCode",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration/responses/{statusCode}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/IntegrationResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0.statusCode",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutIntegrationResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutMethod",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Method"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutMethodRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutMethodResponse",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "statusCode": "route.statusCode",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/responses/{statusCode}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MethodResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0.statusCode",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutMethodResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutRestApi",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/restapis/{restApiId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestApi"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutRestApiRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TestInvokeAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "authorizerId": "route.authorizerId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/restapis/{restApiId}/authorizers/{authorizerId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestInvokeAuthorizerResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.authorizerId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestInvokeAuthorizerRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TestInvokeMethod",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestInvokeMethodResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestInvokeMethodRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateAccount",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PATCH",
                    "route": "/account"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Account"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateApiKey",
            "config": {
                "http": {
                    "inject": [
                        {
                            "apiKey": "route.apiKey",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/apikeys/{apiKey}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ApiKey"
                    },
                    "inject": [
                        "param.0.apiKey",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateApiKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "authorizerId": "route.authorizerId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/authorizers/{authorizerId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Authorizer"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.authorizerId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAuthorizerRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateBasePathMapping",
            "config": {
                "http": {
                    "inject": [
                        {
                            "domainName": "route.domainName",
                            "basePath": "route.basePath",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/domainnames/{domainName}/basepathmappings/{basePath}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BasePathMapping"
                    },
                    "inject": [
                        "param.0.domainName",
                        "param.0.basePath",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBasePathMappingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateClientCertificate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "clientCertificateId": "route.clientCertificateId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/clientcertificates/{clientCertificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ClientCertificate"
                    },
                    "inject": [
                        "param.0.clientCertificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateClientCertificateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDeployment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "deploymentId": "route.deploymentId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/deployments/{deploymentId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Deployment"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.deploymentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDeploymentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDocumentationPart",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "documentationPartId": "route.documentationPartId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/documentation/parts/{documentationPartId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DocumentationPart"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.documentationPartId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDocumentationPartRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDocumentationVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "documentationVersion": "route.documentationVersion",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/documentation/versions/{documentationVersion}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DocumentationVersion"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.documentationVersion",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDocumentationVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDomainName",
            "config": {
                "http": {
                    "inject": [
                        {
                            "domainName": "route.domainName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/domainnames/{domainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DomainName"
                    },
                    "inject": [
                        "param.0.domainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDomainNameRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateGatewayResponse",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "responseType": "route.responseType",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/gatewayresponses/{responseType}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GatewayResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.responseType",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateGatewayResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateIntegration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Integration"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateIntegrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateIntegrationResponse",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "statusCode": "route.statusCode",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration/responses/{statusCode}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/IntegrationResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0.statusCode",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateIntegrationResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMethod",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Method"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMethodRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMethodResponse",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "httpMethod": "route.httpMethod",
                            "statusCode": "route.statusCode",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/responses/{statusCode}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MethodResponse"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0.httpMethod",
                        "param.0.statusCode",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMethodResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateModel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "modelName": "route.modelName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/models/{modelName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Model"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.modelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateModelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRequestValidator",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "requestValidatorId": "route.requestValidatorId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/requestvalidators/{requestValidatorId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RequestValidator"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.requestValidatorId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRequestValidatorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "resourceId": "route.resourceId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/resources/{resourceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Resource"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.resourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRestApi",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestApi"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRestApiRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateStage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "restApiId": "route.restApiId",
                            "stageName": "route.stageName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/restapis/{restApiId}/stages/{stageName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Stage"
                    },
                    "inject": [
                        "param.0.restApiId",
                        "param.0.stageName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateStageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateUsage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "usagePlanId": "route.usagePlanId",
                            "keyId": "route.keyId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/usageplans/{usagePlanId}/keys/{keyId}/usage"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Usage"
                    },
                    "inject": [
                        "param.0.usagePlanId",
                        "param.0.keyId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateUsageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateUsagePlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "usagePlanId": "route.usagePlanId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/usageplans/{usagePlanId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UsagePlan"
                    },
                    "inject": [
                        "param.0.usagePlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateUsagePlanRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateVpcLink",
            "config": {
                "http": {
                    "inject": [
                        {
                            "vpcLinkId": "route.vpcLinkId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/vpclinks/{vpcLinkId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/VpcLink"
                    },
                    "inject": [
                        "param.0.vpcLinkId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateVpcLinkRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "ApiKey": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "value": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "customerId": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "createdDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdatedDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "stageKeys": {
                    "$ref": "#/$defs/ListOfString"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "Boolean": {
            "type": "boolean"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "ListOfString": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "MapOfStringToString": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "CreateApiKeyRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "generateDistinctId": {
                    "$ref": "#/$defs/Boolean"
                },
                "value": {
                    "$ref": "#/$defs/String"
                },
                "stageKeys": {
                    "$ref": "#/$defs/ListOfStageKeys"
                },
                "customerId": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "ListOfStageKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StageKey"
            }
        },
        "StageKey": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "stageName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Authorizer": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "type": {
                    "$ref": "#/$defs/AuthorizerType"
                },
                "providerARNs": {
                    "$ref": "#/$defs/ListOfARNs"
                },
                "authType": {
                    "$ref": "#/$defs/String"
                },
                "authorizerUri": {
                    "$ref": "#/$defs/String"
                },
                "authorizerCredentials": {
                    "$ref": "#/$defs/String"
                },
                "identitySource": {
                    "$ref": "#/$defs/String"
                },
                "identityValidationExpression": {
                    "$ref": "#/$defs/String"
                },
                "authorizerResultTtlInSeconds": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "AuthorizerType": {
            "enum": [
                "TOKEN",
                "REQUEST",
                "COGNITO_USER_POOLS"
            ]
        },
        "ListOfARNs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProviderARN"
            }
        },
        "ProviderARN": {
            "type": "string"
        },
        "NullableInteger": {
            "type": "integer",
            "format": "int32"
        },
        "CreateAuthorizerRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "type": {
                    "$ref": "#/$defs/AuthorizerType"
                },
                "providerARNs": {
                    "$ref": "#/$defs/ListOfARNs"
                },
                "authType": {
                    "$ref": "#/$defs/String"
                },
                "authorizerUri": {
                    "$ref": "#/$defs/String"
                },
                "authorizerCredentials": {
                    "$ref": "#/$defs/String"
                },
                "identitySource": {
                    "$ref": "#/$defs/String"
                },
                "identityValidationExpression": {
                    "$ref": "#/$defs/String"
                },
                "authorizerResultTtlInSeconds": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "BasePathMapping": {
            "type": "object",
            "properties": {
                "basePath": {
                    "$ref": "#/$defs/String"
                },
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "stage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateBasePathMappingRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/String"
                },
                "basePath": {
                    "$ref": "#/$defs/String"
                },
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "stage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Deployment": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "createdDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "apiSummary": {
                    "$ref": "#/$defs/PathToMapOfMethodSnapshot"
                }
            }
        },
        "PathToMapOfMethodSnapshot": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MapOfMethodSnapshot"
            }
        },
        "MapOfMethodSnapshot": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MethodSnapshot"
            }
        },
        "MethodSnapshot": {
            "type": "object",
            "properties": {
                "authorizationType": {
                    "$ref": "#/$defs/String"
                },
                "apiKeyRequired": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateDeploymentRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "stageName": {
                    "$ref": "#/$defs/String"
                },
                "stageDescription": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "cacheClusterEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "cacheClusterSize": {
                    "$ref": "#/$defs/CacheClusterSize"
                },
                "variables": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "canarySettings": {
                    "$ref": "#/$defs/DeploymentCanarySettings"
                },
                "tracingEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "NullableBoolean": {
            "type": "boolean"
        },
        "CacheClusterSize": {
            "enum": [
                "SIZE_0_POINT_5_GB",
                "SIZE_1_POINT_6_GB",
                "SIZE_6_POINT_1_GB",
                "SIZE_13_POINT_5_GB",
                "SIZE_28_POINT_4_GB",
                "SIZE_58_POINT_2_GB",
                "SIZE_118_GB",
                "SIZE_237_GB"
            ]
        },
        "DeploymentCanarySettings": {
            "type": "object",
            "properties": {
                "percentTraffic": {
                    "$ref": "#/$defs/Double"
                },
                "stageVariableOverrides": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "useStageCache": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "DocumentationPart": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "location": {
                    "$ref": "#/$defs/DocumentationPartLocation"
                },
                "properties": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DocumentationPartLocation": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/DocumentationPartType"
                },
                "path": {
                    "$ref": "#/$defs/String"
                },
                "method": {
                    "$ref": "#/$defs/String"
                },
                "statusCode": {
                    "$ref": "#/$defs/DocumentationPartLocationStatusCode"
                },
                "name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DocumentationPartType": {
            "enum": [
                "API",
                "AUTHORIZER",
                "MODEL",
                "RESOURCE",
                "METHOD",
                "PATH_PARAMETER",
                "QUERY_PARAMETER",
                "REQUEST_HEADER",
                "REQUEST_BODY",
                "RESPONSE",
                "RESPONSE_HEADER",
                "RESPONSE_BODY"
            ]
        },
        "DocumentationPartLocationStatusCode": {
            "type": "string"
        },
        "CreateDocumentationPartRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "location": {
                    "$ref": "#/$defs/DocumentationPartLocation"
                },
                "properties": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DocumentationVersion": {
            "type": "object",
            "properties": {
                "version": {
                    "$ref": "#/$defs/String"
                },
                "createdDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateDocumentationVersionRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "documentationVersion": {
                    "$ref": "#/$defs/String"
                },
                "stageName": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DomainName": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/String"
                },
                "certificateName": {
                    "$ref": "#/$defs/String"
                },
                "certificateArn": {
                    "$ref": "#/$defs/String"
                },
                "certificateUploadDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "regionalDomainName": {
                    "$ref": "#/$defs/String"
                },
                "regionalHostedZoneId": {
                    "$ref": "#/$defs/String"
                },
                "regionalCertificateName": {
                    "$ref": "#/$defs/String"
                },
                "regionalCertificateArn": {
                    "$ref": "#/$defs/String"
                },
                "distributionDomainName": {
                    "$ref": "#/$defs/String"
                },
                "distributionHostedZoneId": {
                    "$ref": "#/$defs/String"
                },
                "endpointConfiguration": {
                    "$ref": "#/$defs/EndpointConfiguration"
                },
                "domainNameStatus": {
                    "$ref": "#/$defs/DomainNameStatus"
                },
                "domainNameStatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "securityPolicy": {
                    "$ref": "#/$defs/SecurityPolicy"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "mutualTlsAuthentication": {
                    "$ref": "#/$defs/MutualTlsAuthentication"
                },
                "ownershipVerificationCertificateArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EndpointConfiguration": {
            "type": "object",
            "properties": {
                "types": {
                    "$ref": "#/$defs/ListOfEndpointType"
                },
                "vpcEndpointIds": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "ListOfEndpointType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EndpointType"
            }
        },
        "EndpointType": {
            "enum": [
                "REGIONAL",
                "EDGE",
                "PRIVATE"
            ]
        },
        "DomainNameStatus": {
            "enum": [
                "AVAILABLE",
                "UPDATING",
                "PENDING",
                "PENDING_CERTIFICATE_REIMPORT",
                "PENDING_OWNERSHIP_VERIFICATION"
            ]
        },
        "SecurityPolicy": {
            "enum": [
                "TLS_1_0",
                "TLS_1_2"
            ]
        },
        "MutualTlsAuthentication": {
            "type": "object",
            "properties": {
                "truststoreUri": {
                    "$ref": "#/$defs/String"
                },
                "truststoreVersion": {
                    "$ref": "#/$defs/String"
                },
                "truststoreWarnings": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "CreateDomainNameRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/String"
                },
                "certificateName": {
                    "$ref": "#/$defs/String"
                },
                "certificateBody": {
                    "$ref": "#/$defs/String"
                },
                "certificatePrivateKey": {
                    "$ref": "#/$defs/String"
                },
                "certificateChain": {
                    "$ref": "#/$defs/String"
                },
                "certificateArn": {
                    "$ref": "#/$defs/String"
                },
                "regionalCertificateName": {
                    "$ref": "#/$defs/String"
                },
                "regionalCertificateArn": {
                    "$ref": "#/$defs/String"
                },
                "endpointConfiguration": {
                    "$ref": "#/$defs/EndpointConfiguration"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "securityPolicy": {
                    "$ref": "#/$defs/SecurityPolicy"
                },
                "mutualTlsAuthentication": {
                    "$ref": "#/$defs/MutualTlsAuthenticationInput"
                },
                "ownershipVerificationCertificateArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MutualTlsAuthenticationInput": {
            "type": "object",
            "properties": {
                "truststoreUri": {
                    "$ref": "#/$defs/String"
                },
                "truststoreVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Model": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "schema": {
                    "$ref": "#/$defs/String"
                },
                "contentType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateModelRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "schema": {
                    "$ref": "#/$defs/String"
                },
                "contentType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RequestValidator": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "validateRequestBody": {
                    "$ref": "#/$defs/Boolean"
                },
                "validateRequestParameters": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateRequestValidatorRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "validateRequestBody": {
                    "$ref": "#/$defs/Boolean"
                },
                "validateRequestParameters": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Resource": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "parentId": {
                    "$ref": "#/$defs/String"
                },
                "pathPart": {
                    "$ref": "#/$defs/String"
                },
                "path": {
                    "$ref": "#/$defs/String"
                },
                "resourceMethods": {
                    "$ref": "#/$defs/MapOfMethod"
                }
            }
        },
        "MapOfMethod": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Method"
            }
        },
        "Method": {
            "type": "object",
            "properties": {
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "authorizationType": {
                    "$ref": "#/$defs/String"
                },
                "authorizerId": {
                    "$ref": "#/$defs/String"
                },
                "apiKeyRequired": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "requestValidatorId": {
                    "$ref": "#/$defs/String"
                },
                "operationName": {
                    "$ref": "#/$defs/String"
                },
                "requestParameters": {
                    "$ref": "#/$defs/MapOfStringToBoolean"
                },
                "requestModels": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "methodResponses": {
                    "$ref": "#/$defs/MapOfMethodResponse"
                },
                "methodIntegration": {
                    "$ref": "#/$defs/Integration"
                },
                "authorizationScopes": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "MapOfStringToBoolean": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/NullableBoolean"
            }
        },
        "MapOfMethodResponse": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MethodResponse"
            }
        },
        "MethodResponse": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                },
                "responseParameters": {
                    "$ref": "#/$defs/MapOfStringToBoolean"
                },
                "responseModels": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "StatusCode": {
            "type": "string"
        },
        "Integration": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/IntegrationType"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "uri": {
                    "$ref": "#/$defs/String"
                },
                "connectionType": {
                    "$ref": "#/$defs/ConnectionType"
                },
                "connectionId": {
                    "$ref": "#/$defs/String"
                },
                "credentials": {
                    "$ref": "#/$defs/String"
                },
                "requestParameters": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "requestTemplates": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "passthroughBehavior": {
                    "$ref": "#/$defs/String"
                },
                "contentHandling": {
                    "$ref": "#/$defs/ContentHandlingStrategy"
                },
                "timeoutInMillis": {
                    "$ref": "#/$defs/Integer"
                },
                "cacheNamespace": {
                    "$ref": "#/$defs/String"
                },
                "cacheKeyParameters": {
                    "$ref": "#/$defs/ListOfString"
                },
                "integrationResponses": {
                    "$ref": "#/$defs/MapOfIntegrationResponse"
                },
                "tlsConfig": {
                    "$ref": "#/$defs/TlsConfig"
                }
            }
        },
        "IntegrationType": {
            "enum": [
                "HTTP",
                "AWS",
                "MOCK",
                "HTTP_PROXY",
                "AWS_PROXY"
            ]
        },
        "ConnectionType": {
            "enum": [
                "INTERNET",
                "VPC_LINK"
            ]
        },
        "ContentHandlingStrategy": {
            "enum": [
                "CONVERT_TO_BINARY",
                "CONVERT_TO_TEXT"
            ]
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "MapOfIntegrationResponse": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/IntegrationResponse"
            }
        },
        "IntegrationResponse": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                },
                "selectionPattern": {
                    "$ref": "#/$defs/String"
                },
                "responseParameters": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "responseTemplates": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "contentHandling": {
                    "$ref": "#/$defs/ContentHandlingStrategy"
                }
            }
        },
        "TlsConfig": {
            "type": "object",
            "properties": {
                "insecureSkipVerification": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateResourceRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "parentId": {
                    "$ref": "#/$defs/String"
                },
                "pathPart": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RestApi": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "createdDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "version": {
                    "$ref": "#/$defs/String"
                },
                "warnings": {
                    "$ref": "#/$defs/ListOfString"
                },
                "binaryMediaTypes": {
                    "$ref": "#/$defs/ListOfString"
                },
                "minimumCompressionSize": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "apiKeySource": {
                    "$ref": "#/$defs/ApiKeySourceType"
                },
                "endpointConfiguration": {
                    "$ref": "#/$defs/EndpointConfiguration"
                },
                "policy": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "disableExecuteApiEndpoint": {
                    "$ref": "#/$defs/Boolean"
                },
                "rootResourceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ApiKeySourceType": {
            "enum": [
                "HEADER",
                "AUTHORIZER"
            ]
        },
        "CreateRestApiRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "version": {
                    "$ref": "#/$defs/String"
                },
                "cloneFrom": {
                    "$ref": "#/$defs/String"
                },
                "binaryMediaTypes": {
                    "$ref": "#/$defs/ListOfString"
                },
                "minimumCompressionSize": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "apiKeySource": {
                    "$ref": "#/$defs/ApiKeySourceType"
                },
                "endpointConfiguration": {
                    "$ref": "#/$defs/EndpointConfiguration"
                },
                "policy": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "disableExecuteApiEndpoint": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Stage": {
            "type": "object",
            "properties": {
                "deploymentId": {
                    "$ref": "#/$defs/String"
                },
                "clientCertificateId": {
                    "$ref": "#/$defs/String"
                },
                "stageName": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "cacheClusterEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "cacheClusterSize": {
                    "$ref": "#/$defs/CacheClusterSize"
                },
                "cacheClusterStatus": {
                    "$ref": "#/$defs/CacheClusterStatus"
                },
                "methodSettings": {
                    "$ref": "#/$defs/MapOfMethodSettings"
                },
                "variables": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "documentationVersion": {
                    "$ref": "#/$defs/String"
                },
                "accessLogSettings": {
                    "$ref": "#/$defs/AccessLogSettings"
                },
                "canarySettings": {
                    "$ref": "#/$defs/CanarySettings"
                },
                "tracingEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "webAclArn": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "createdDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdatedDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "CacheClusterStatus": {
            "enum": [
                "CREATE_IN_PROGRESS",
                "AVAILABLE",
                "DELETE_IN_PROGRESS",
                "NOT_AVAILABLE",
                "FLUSH_IN_PROGRESS"
            ]
        },
        "MapOfMethodSettings": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MethodSetting"
            }
        },
        "MethodSetting": {
            "type": "object",
            "properties": {
                "metricsEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "loggingLevel": {
                    "$ref": "#/$defs/String"
                },
                "dataTraceEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "throttlingBurstLimit": {
                    "$ref": "#/$defs/Integer"
                },
                "throttlingRateLimit": {
                    "$ref": "#/$defs/Double"
                },
                "cachingEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "cacheTtlInSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "cacheDataEncrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "requireAuthorizationForCacheControl": {
                    "$ref": "#/$defs/Boolean"
                },
                "unauthorizedCacheControlHeaderStrategy": {
                    "$ref": "#/$defs/UnauthorizedCacheControlHeaderStrategy"
                }
            }
        },
        "UnauthorizedCacheControlHeaderStrategy": {
            "enum": [
                "FAIL_WITH_403",
                "SUCCEED_WITH_RESPONSE_HEADER",
                "SUCCEED_WITHOUT_RESPONSE_HEADER"
            ]
        },
        "AccessLogSettings": {
            "type": "object",
            "properties": {
                "format": {
                    "$ref": "#/$defs/String"
                },
                "destinationArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CanarySettings": {
            "type": "object",
            "properties": {
                "percentTraffic": {
                    "$ref": "#/$defs/Double"
                },
                "deploymentId": {
                    "$ref": "#/$defs/String"
                },
                "stageVariableOverrides": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "useStageCache": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateStageRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "stageName": {
                    "$ref": "#/$defs/String"
                },
                "deploymentId": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "cacheClusterEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "cacheClusterSize": {
                    "$ref": "#/$defs/CacheClusterSize"
                },
                "variables": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "documentationVersion": {
                    "$ref": "#/$defs/String"
                },
                "canarySettings": {
                    "$ref": "#/$defs/CanarySettings"
                },
                "tracingEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "UsagePlan": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "apiStages": {
                    "$ref": "#/$defs/ListOfApiStage"
                },
                "throttle": {
                    "$ref": "#/$defs/ThrottleSettings"
                },
                "quota": {
                    "$ref": "#/$defs/QuotaSettings"
                },
                "productCode": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "ListOfApiStage": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApiStage"
            }
        },
        "ApiStage": {
            "type": "object",
            "properties": {
                "apiId": {
                    "$ref": "#/$defs/String"
                },
                "stage": {
                    "$ref": "#/$defs/String"
                },
                "throttle": {
                    "$ref": "#/$defs/MapOfApiStageThrottleSettings"
                }
            }
        },
        "MapOfApiStageThrottleSettings": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ThrottleSettings"
            }
        },
        "ThrottleSettings": {
            "type": "object",
            "properties": {
                "burstLimit": {
                    "$ref": "#/$defs/Integer"
                },
                "rateLimit": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "QuotaSettings": {
            "type": "object",
            "properties": {
                "limit": {
                    "$ref": "#/$defs/Integer"
                },
                "offset": {
                    "$ref": "#/$defs/Integer"
                },
                "period": {
                    "$ref": "#/$defs/QuotaPeriodType"
                }
            }
        },
        "QuotaPeriodType": {
            "enum": [
                "DAY",
                "WEEK",
                "MONTH"
            ]
        },
        "CreateUsagePlanRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "apiStages": {
                    "$ref": "#/$defs/ListOfApiStage"
                },
                "throttle": {
                    "$ref": "#/$defs/ThrottleSettings"
                },
                "quota": {
                    "$ref": "#/$defs/QuotaSettings"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "UsagePlanKey": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "type": {
                    "$ref": "#/$defs/String"
                },
                "value": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateUsagePlanKeyRequest": {
            "type": "object",
            "properties": {
                "usagePlanId": {
                    "$ref": "#/$defs/String"
                },
                "keyId": {
                    "$ref": "#/$defs/String"
                },
                "keyType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcLink": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "targetArns": {
                    "$ref": "#/$defs/ListOfString"
                },
                "status": {
                    "$ref": "#/$defs/VpcLinkStatus"
                },
                "statusMessage": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "VpcLinkStatus": {
            "enum": [
                "AVAILABLE",
                "PENDING",
                "DELETING",
                "FAILED"
            ]
        },
        "CreateVpcLinkRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "targetArns": {
                    "$ref": "#/$defs/ListOfString"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "DeleteApiKeyRequest": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteAuthorizerRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "authorizerId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteBasePathMappingRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/String"
                },
                "basePath": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteClientCertificateRequest": {
            "type": "object",
            "properties": {
                "clientCertificateId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteDeploymentRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "deploymentId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteDocumentationPartRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "documentationPartId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteDocumentationVersionRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "documentationVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteDomainNameRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteGatewayResponseRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "responseType": {
                    "$ref": "#/$defs/GatewayResponseType"
                }
            }
        },
        "GatewayResponseType": {
            "enum": [
                "DEFAULT_4XX",
                "DEFAULT_5XX",
                "RESOURCE_NOT_FOUND",
                "UNAUTHORIZED",
                "INVALID_API_KEY",
                "ACCESS_DENIED",
                "AUTHORIZER_FAILURE",
                "AUTHORIZER_CONFIGURATION_ERROR",
                "INVALID_SIGNATURE",
                "EXPIRED_TOKEN",
                "MISSING_AUTHENTICATION_TOKEN",
                "INTEGRATION_FAILURE",
                "INTEGRATION_TIMEOUT",
                "API_CONFIGURATION_ERROR",
                "UNSUPPORTED_MEDIA_TYPE",
                "BAD_REQUEST_PARAMETERS",
                "BAD_REQUEST_BODY",
                "REQUEST_TOO_LARGE",
                "THROTTLED",
                "QUOTA_EXCEEDED",
                "WAF_FILTERED"
            ]
        },
        "DeleteIntegrationRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteIntegrationResponseRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                }
            }
        },
        "DeleteMethodRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteMethodResponseRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                }
            }
        },
        "DeleteModelRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "modelName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteRequestValidatorRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "requestValidatorId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteResourceRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteRestApiRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteStageRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "stageName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteUsagePlanRequest": {
            "type": "object",
            "properties": {
                "usagePlanId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteUsagePlanKeyRequest": {
            "type": "object",
            "properties": {
                "usagePlanId": {
                    "$ref": "#/$defs/String"
                },
                "keyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteVpcLinkRequest": {
            "type": "object",
            "properties": {
                "vpcLinkId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FlushStageAuthorizersCacheRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "stageName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FlushStageCacheRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "stageName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClientCertificate": {
            "type": "object",
            "properties": {
                "clientCertificateId": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "pemEncodedCertificate": {
                    "$ref": "#/$defs/String"
                },
                "createdDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "expirationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "GenerateClientCertificateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "Account": {
            "type": "object",
            "properties": {
                "cloudwatchRoleArn": {
                    "$ref": "#/$defs/String"
                },
                "throttleSettings": {
                    "$ref": "#/$defs/ThrottleSettings"
                },
                "features": {
                    "$ref": "#/$defs/ListOfString"
                },
                "apiKeyVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetAccountRequest": {
            "type": "object",
            "properties": {}
        },
        "GetApiKeyRequest": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "$ref": "#/$defs/String"
                },
                "includeValue": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "ApiKeys": {
            "type": "object",
            "properties": {
                "warnings": {
                    "$ref": "#/$defs/ListOfString"
                },
                "items": {
                    "$ref": "#/$defs/ListOfApiKey"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfApiKey": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApiKey"
            }
        },
        "GetApiKeysRequest": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "nameQuery": {
                    "$ref": "#/$defs/String"
                },
                "customerId": {
                    "$ref": "#/$defs/String"
                },
                "includeValues": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "GetAuthorizerRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "authorizerId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Authorizers": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfAuthorizer"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfAuthorizer": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Authorizer"
            }
        },
        "GetAuthorizersRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "GetBasePathMappingRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/String"
                },
                "basePath": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BasePathMappings": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfBasePathMapping"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfBasePathMapping": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BasePathMapping"
            }
        },
        "GetBasePathMappingsRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/String"
                },
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "GetClientCertificateRequest": {
            "type": "object",
            "properties": {
                "clientCertificateId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClientCertificates": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfClientCertificate"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfClientCertificate": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClientCertificate"
            }
        },
        "GetClientCertificatesRequest": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "GetDeploymentRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "deploymentId": {
                    "$ref": "#/$defs/String"
                },
                "embed": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "Deployments": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfDeployment"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfDeployment": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Deployment"
            }
        },
        "GetDeploymentsRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "GetDocumentationPartRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "documentationPartId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DocumentationParts": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfDocumentationPart"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfDocumentationPart": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DocumentationPart"
            }
        },
        "GetDocumentationPartsRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "type": {
                    "$ref": "#/$defs/DocumentationPartType"
                },
                "nameQuery": {
                    "$ref": "#/$defs/String"
                },
                "path": {
                    "$ref": "#/$defs/String"
                },
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "locationStatus": {
                    "$ref": "#/$defs/LocationStatusType"
                }
            }
        },
        "LocationStatusType": {
            "enum": [
                "DOCUMENTED",
                "UNDOCUMENTED"
            ]
        },
        "GetDocumentationVersionRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "documentationVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DocumentationVersions": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfDocumentationVersion"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfDocumentationVersion": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DocumentationVersion"
            }
        },
        "GetDocumentationVersionsRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "GetDomainNameRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DomainNames": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfDomainName"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfDomainName": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainName"
            }
        },
        "GetDomainNamesRequest": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "ExportResponse": {
            "type": "object",
            "properties": {
                "contentType": {
                    "$ref": "#/$defs/String"
                },
                "contentDisposition": {
                    "$ref": "#/$defs/String"
                },
                "body": {
                    "$ref": "#/$defs/Blob"
                }
            }
        },
        "Blob": {
            "type": "string",
            "format": "binary"
        },
        "GetExportRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "stageName": {
                    "$ref": "#/$defs/String"
                },
                "exportType": {
                    "$ref": "#/$defs/String"
                },
                "parameters": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "accepts": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GatewayResponse": {
            "type": "object",
            "properties": {
                "responseType": {
                    "$ref": "#/$defs/GatewayResponseType"
                },
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                },
                "responseParameters": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "responseTemplates": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "defaultResponse": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetGatewayResponseRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "responseType": {
                    "$ref": "#/$defs/GatewayResponseType"
                }
            }
        },
        "GatewayResponses": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfGatewayResponse"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfGatewayResponse": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GatewayResponse"
            }
        },
        "GetGatewayResponsesRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "GetIntegrationRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetIntegrationResponseRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                }
            }
        },
        "GetMethodRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetMethodResponseRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                }
            }
        },
        "GetModelRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "modelName": {
                    "$ref": "#/$defs/String"
                },
                "flatten": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Models": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfModel"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfModel": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Model"
            }
        },
        "GetModelsRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "Template": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetModelTemplateRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "modelName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetRequestValidatorRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "requestValidatorId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RequestValidators": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfRequestValidator"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfRequestValidator": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RequestValidator"
            }
        },
        "GetRequestValidatorsRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "GetResourceRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "embed": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "Resources": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfResource"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfResource": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Resource"
            }
        },
        "GetResourcesRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "embed": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "GetRestApiRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RestApis": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfRestApi"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfRestApi": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RestApi"
            }
        },
        "GetRestApisRequest": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "SdkResponse": {
            "type": "object",
            "properties": {
                "contentType": {
                    "$ref": "#/$defs/String"
                },
                "contentDisposition": {
                    "$ref": "#/$defs/String"
                },
                "body": {
                    "$ref": "#/$defs/Blob"
                }
            }
        },
        "GetSdkRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "stageName": {
                    "$ref": "#/$defs/String"
                },
                "sdkType": {
                    "$ref": "#/$defs/String"
                },
                "parameters": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "SdkType": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "friendlyName": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "configurationProperties": {
                    "$ref": "#/$defs/ListOfSdkConfigurationProperty"
                }
            }
        },
        "ListOfSdkConfigurationProperty": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SdkConfigurationProperty"
            }
        },
        "SdkConfigurationProperty": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "friendlyName": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/String"
                },
                "required": {
                    "$ref": "#/$defs/Boolean"
                },
                "defaultValue": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetSdkTypeRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SdkTypes": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfSdkType"
                }
            }
        },
        "ListOfSdkType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SdkType"
            }
        },
        "GetSdkTypesRequest": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "GetStageRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "stageName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Stages": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/$defs/ListOfStage"
                }
            }
        },
        "ListOfStage": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Stage"
            }
        },
        "GetStagesRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "deploymentId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Tags": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "GetTagsRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/String"
                },
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "Usage": {
            "type": "object",
            "properties": {
                "usagePlanId": {
                    "$ref": "#/$defs/String"
                },
                "startDate": {
                    "$ref": "#/$defs/String"
                },
                "endDate": {
                    "$ref": "#/$defs/String"
                },
                "items": {
                    "$ref": "#/$defs/MapOfKeyUsages"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MapOfKeyUsages": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ListOfUsage"
            }
        },
        "ListOfUsage": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListOfLong"
            }
        },
        "ListOfLong": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Long"
            }
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "GetUsageRequest": {
            "type": "object",
            "properties": {
                "usagePlanId": {
                    "$ref": "#/$defs/String"
                },
                "keyId": {
                    "$ref": "#/$defs/String"
                },
                "startDate": {
                    "$ref": "#/$defs/String"
                },
                "endDate": {
                    "$ref": "#/$defs/String"
                },
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "GetUsagePlanRequest": {
            "type": "object",
            "properties": {
                "usagePlanId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetUsagePlanKeyRequest": {
            "type": "object",
            "properties": {
                "usagePlanId": {
                    "$ref": "#/$defs/String"
                },
                "keyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UsagePlanKeys": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfUsagePlanKey"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfUsagePlanKey": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsagePlanKey"
            }
        },
        "GetUsagePlanKeysRequest": {
            "type": "object",
            "properties": {
                "usagePlanId": {
                    "$ref": "#/$defs/String"
                },
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "nameQuery": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UsagePlans": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfUsagePlan"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfUsagePlan": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsagePlan"
            }
        },
        "GetUsagePlansRequest": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/$defs/String"
                },
                "keyId": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "GetVpcLinkRequest": {
            "type": "object",
            "properties": {
                "vpcLinkId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcLinks": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/ListOfVpcLink"
                },
                "position": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOfVpcLink": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcLink"
            }
        },
        "GetVpcLinksRequest": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/$defs/String"
                },
                "limit": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "ApiKeyIds": {
            "type": "object",
            "properties": {
                "ids": {
                    "$ref": "#/$defs/ListOfString"
                },
                "warnings": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "ImportApiKeysRequest": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/$defs/Blob"
                },
                "format": {
                    "$ref": "#/$defs/ApiKeysFormat"
                },
                "failOnWarnings": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ApiKeysFormat": {
            "enum": [
                "csv"
            ]
        },
        "DocumentationPartIds": {
            "type": "object",
            "properties": {
                "ids": {
                    "$ref": "#/$defs/ListOfString"
                },
                "warnings": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "ImportDocumentationPartsRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "mode": {
                    "$ref": "#/$defs/PutMode"
                },
                "failOnWarnings": {
                    "$ref": "#/$defs/Boolean"
                },
                "body": {
                    "$ref": "#/$defs/Blob"
                }
            }
        },
        "PutMode": {
            "enum": [
                "Merge",
                "Overwrite"
            ]
        },
        "ImportRestApiRequest": {
            "type": "object",
            "properties": {
                "failOnWarnings": {
                    "$ref": "#/$defs/Boolean"
                },
                "parameters": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "body": {
                    "$ref": "#/$defs/Blob"
                }
            }
        },
        "PutGatewayResponseRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "responseType": {
                    "$ref": "#/$defs/GatewayResponseType"
                },
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                },
                "responseParameters": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "responseTemplates": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "PutIntegrationRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "type": {
                    "$ref": "#/$defs/IntegrationType"
                },
                "integrationHttpMethod": {
                    "$ref": "#/$defs/String"
                },
                "uri": {
                    "$ref": "#/$defs/String"
                },
                "connectionType": {
                    "$ref": "#/$defs/ConnectionType"
                },
                "connectionId": {
                    "$ref": "#/$defs/String"
                },
                "credentials": {
                    "$ref": "#/$defs/String"
                },
                "requestParameters": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "requestTemplates": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "passthroughBehavior": {
                    "$ref": "#/$defs/String"
                },
                "cacheNamespace": {
                    "$ref": "#/$defs/String"
                },
                "cacheKeyParameters": {
                    "$ref": "#/$defs/ListOfString"
                },
                "contentHandling": {
                    "$ref": "#/$defs/ContentHandlingStrategy"
                },
                "timeoutInMillis": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "tlsConfig": {
                    "$ref": "#/$defs/TlsConfig"
                }
            }
        },
        "PutIntegrationResponseRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                },
                "selectionPattern": {
                    "$ref": "#/$defs/String"
                },
                "responseParameters": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "responseTemplates": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "contentHandling": {
                    "$ref": "#/$defs/ContentHandlingStrategy"
                }
            }
        },
        "PutMethodRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "authorizationType": {
                    "$ref": "#/$defs/String"
                },
                "authorizerId": {
                    "$ref": "#/$defs/String"
                },
                "apiKeyRequired": {
                    "$ref": "#/$defs/Boolean"
                },
                "operationName": {
                    "$ref": "#/$defs/String"
                },
                "requestParameters": {
                    "$ref": "#/$defs/MapOfStringToBoolean"
                },
                "requestModels": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "requestValidatorId": {
                    "$ref": "#/$defs/String"
                },
                "authorizationScopes": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "PutMethodResponseRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                },
                "responseParameters": {
                    "$ref": "#/$defs/MapOfStringToBoolean"
                },
                "responseModels": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "PutRestApiRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "mode": {
                    "$ref": "#/$defs/PutMode"
                },
                "failOnWarnings": {
                    "$ref": "#/$defs/Boolean"
                },
                "parameters": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "body": {
                    "$ref": "#/$defs/Blob"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "TestInvokeAuthorizerResponse": {
            "type": "object",
            "properties": {
                "clientStatus": {
                    "$ref": "#/$defs/Integer"
                },
                "log": {
                    "$ref": "#/$defs/String"
                },
                "latency": {
                    "$ref": "#/$defs/Long"
                },
                "principalId": {
                    "$ref": "#/$defs/String"
                },
                "policy": {
                    "$ref": "#/$defs/String"
                },
                "authorization": {
                    "$ref": "#/$defs/MapOfStringToList"
                },
                "claims": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "MapOfStringToList": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ListOfString"
            }
        },
        "TestInvokeAuthorizerRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "authorizerId": {
                    "$ref": "#/$defs/String"
                },
                "headers": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "multiValueHeaders": {
                    "$ref": "#/$defs/MapOfStringToList"
                },
                "pathWithQueryString": {
                    "$ref": "#/$defs/String"
                },
                "body": {
                    "$ref": "#/$defs/String"
                },
                "stageVariables": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "additionalContext": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "TestInvokeMethodResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/Integer"
                },
                "body": {
                    "$ref": "#/$defs/String"
                },
                "headers": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "multiValueHeaders": {
                    "$ref": "#/$defs/MapOfStringToList"
                },
                "log": {
                    "$ref": "#/$defs/String"
                },
                "latency": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "TestInvokeMethodRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "pathWithQueryString": {
                    "$ref": "#/$defs/String"
                },
                "body": {
                    "$ref": "#/$defs/String"
                },
                "headers": {
                    "$ref": "#/$defs/MapOfStringToString"
                },
                "multiValueHeaders": {
                    "$ref": "#/$defs/MapOfStringToList"
                },
                "clientCertificateId": {
                    "$ref": "#/$defs/String"
                },
                "stageVariables": {
                    "$ref": "#/$defs/MapOfStringToString"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/String"
                },
                "tagKeys": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "UpdateAccountRequest": {
            "type": "object",
            "properties": {
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "ListOfPatchOperation": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PatchOperation"
            }
        },
        "PatchOperation": {
            "type": "object",
            "properties": {
                "op": {
                    "$ref": "#/$defs/Op"
                },
                "path": {
                    "$ref": "#/$defs/String"
                },
                "value": {
                    "$ref": "#/$defs/String"
                },
                "from": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Op": {
            "enum": [
                "add",
                "remove",
                "replace",
                "move",
                "copy",
                "test"
            ]
        },
        "UpdateApiKeyRequest": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateAuthorizerRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "authorizerId": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateBasePathMappingRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/String"
                },
                "basePath": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateClientCertificateRequest": {
            "type": "object",
            "properties": {
                "clientCertificateId": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateDeploymentRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "deploymentId": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateDocumentationPartRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "documentationPartId": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateDocumentationVersionRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "documentationVersion": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateDomainNameRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateGatewayResponseRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "responseType": {
                    "$ref": "#/$defs/GatewayResponseType"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateIntegrationRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateIntegrationResponseRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateMethodRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateMethodResponseRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "httpMethod": {
                    "$ref": "#/$defs/String"
                },
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateModelRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "modelName": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateRequestValidatorRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "requestValidatorId": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateResourceRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "resourceId": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateRestApiRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateStageRequest": {
            "type": "object",
            "properties": {
                "restApiId": {
                    "$ref": "#/$defs/String"
                },
                "stageName": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateUsageRequest": {
            "type": "object",
            "properties": {
                "usagePlanId": {
                    "$ref": "#/$defs/String"
                },
                "keyId": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateUsagePlanRequest": {
            "type": "object",
            "properties": {
                "usagePlanId": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        },
        "UpdateVpcLinkRequest": {
            "type": "object",
            "properties": {
                "vpcLinkId": {
                    "$ref": "#/$defs/String"
                },
                "patchOperations": {
                    "$ref": "#/$defs/ListOfPatchOperation"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://apigateway-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://apigateway-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://apigateway.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://apigateway.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}