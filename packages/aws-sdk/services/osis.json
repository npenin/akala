{
    "name": "osis",
    "commands": [
        {
            "name": "CreatePipeline",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2022-01-01/osis/createPipeline"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePipelineResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreatePipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PipelineName": {},
                        "MinUnits": {},
                        "MaxUnits": {},
                        "PipelineConfigurationBody": {},
                        "LogPublishingOptions": {},
                        "VpcOptions": {},
                        "BufferOptions": {},
                        "EncryptionAtRestOptions": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "DeletePipeline",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PipelineName": "route.PipelineName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/2022-01-01/osis/deletePipeline/{PipelineName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePipelineResponse"
                    },
                    "inject": [
                        "params.0.PipelineName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeletePipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PipelineName": {}
                    }
                }
            }
        },
        {
            "name": "GetPipeline",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PipelineName": "route.PipelineName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2022-01-01/osis/getPipeline/{PipelineName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPipelineResponse"
                    },
                    "inject": [
                        "params.0.PipelineName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetPipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PipelineName": {}
                    }
                }
            }
        },
        {
            "name": "GetPipelineBlueprint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BlueprintName": "route.BlueprintName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2022-01-01/osis/getPipelineBlueprint/{BlueprintName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPipelineBlueprintResponse"
                    },
                    "inject": [
                        "params.0.BlueprintName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetPipelineBlueprintRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "BlueprintName": {},
                        "Format": {}
                    }
                }
            }
        },
        {
            "name": "GetPipelineChangeProgress",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PipelineName": "route.PipelineName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2022-01-01/osis/getPipelineChangeProgress/{PipelineName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPipelineChangeProgressResponse"
                    },
                    "inject": [
                        "params.0.PipelineName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetPipelineChangeProgressRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PipelineName": {}
                    }
                }
            }
        },
        {
            "name": "ListPipelineBlueprints",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2022-01-01/osis/listPipelineBlueprints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPipelineBlueprintsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListPipelineBlueprintsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "ListPipelines",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2022-01-01/osis/listPipelines"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPipelinesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListPipelinesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2022-01-01/osis/listTagsForResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Arn": {}
                    }
                }
            }
        },
        {
            "name": "StartPipeline",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PipelineName": "route.PipelineName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/2022-01-01/osis/startPipeline/{PipelineName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartPipelineResponse"
                    },
                    "inject": [
                        "params.0.PipelineName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartPipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PipelineName": {}
                    }
                }
            }
        },
        {
            "name": "StopPipeline",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PipelineName": "route.PipelineName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/2022-01-01/osis/stopPipeline/{PipelineName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopPipelineResponse"
                    },
                    "inject": [
                        "params.0.PipelineName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StopPipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PipelineName": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2022-01-01/osis/tagResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Arn": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2022-01-01/osis/untagResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Arn": {},
                        "TagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdatePipeline",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PipelineName": "route.PipelineName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/2022-01-01/osis/updatePipeline/{PipelineName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePipelineResponse"
                    },
                    "inject": [
                        "params.0.PipelineName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdatePipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PipelineName": {},
                        "MinUnits": {},
                        "MaxUnits": {},
                        "PipelineConfigurationBody": {},
                        "LogPublishingOptions": {},
                        "BufferOptions": {},
                        "EncryptionAtRestOptions": {}
                    }
                }
            }
        },
        {
            "name": "ValidatePipeline",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2022-01-01/osis/validatePipeline"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ValidatePipelineResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ValidatePipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PipelineConfigurationBody": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreatePipelineRequest": {
            "type": "object",
            "properties": {
                "PipelineName": {
                    "$ref": "#/$defs/PipelineName"
                },
                "MinUnits": {
                    "$ref": "#/$defs/PipelineUnits"
                },
                "MaxUnits": {
                    "$ref": "#/$defs/PipelineUnits"
                },
                "PipelineConfigurationBody": {
                    "$ref": "#/$defs/PipelineConfigurationBody"
                },
                "LogPublishingOptions": {
                    "$ref": "#/$defs/LogPublishingOptions"
                },
                "VpcOptions": {
                    "$ref": "#/$defs/VpcOptions"
                },
                "BufferOptions": {
                    "$ref": "#/$defs/BufferOptions"
                },
                "EncryptionAtRestOptions": {
                    "$ref": "#/$defs/EncryptionAtRestOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "PipelineName": {
            "type": "string"
        },
        "PipelineUnits": {
            "type": "integer",
            "format": "int32"
        },
        "PipelineConfigurationBody": {
            "type": "string"
        },
        "LogPublishingOptions": {
            "type": "object",
            "properties": {
                "IsLoggingEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "CloudWatchLogDestination": {
                    "$ref": "#/$defs/CloudWatchLogDestination"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "CloudWatchLogDestination": {
            "type": "object",
            "properties": {
                "LogGroup": {
                    "$ref": "#/$defs/LogGroup"
                }
            }
        },
        "LogGroup": {
            "type": "string"
        },
        "VpcOptions": {
            "type": "object",
            "properties": {
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIds"
                },
                "VpcAttachmentOptions": {
                    "$ref": "#/$defs/VpcAttachmentOptions"
                },
                "VpcEndpointManagement": {
                    "$ref": "#/$defs/VpcEndpointManagement"
                }
            }
        },
        "SubnetIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "SubnetId": {
            "type": "string"
        },
        "SecurityGroupIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "VpcAttachmentOptions": {
            "type": "object",
            "properties": {
                "AttachToVpc": {
                    "$ref": "#/$defs/Boolean"
                },
                "CidrBlock": {
                    "$ref": "#/$defs/CidrBlock"
                }
            }
        },
        "CidrBlock": {
            "type": "string"
        },
        "VpcEndpointManagement": {
            "enum": [
                "CUSTOMER",
                "SERVICE"
            ]
        },
        "BufferOptions": {
            "type": "object",
            "properties": {
                "PersistentBufferEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EncryptionAtRestOptions": {
            "type": "object",
            "properties": {
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                }
            }
        },
        "KmsKeyArn": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreatePipelineResponse": {
            "type": "object",
            "properties": {
                "Pipeline": {
                    "$ref": "#/$defs/Pipeline"
                }
            }
        },
        "Pipeline": {
            "type": "object",
            "properties": {
                "PipelineName": {
                    "$ref": "#/$defs/String"
                },
                "PipelineArn": {
                    "$ref": "#/$defs/String"
                },
                "MinUnits": {
                    "$ref": "#/$defs/Integer"
                },
                "MaxUnits": {
                    "$ref": "#/$defs/Integer"
                },
                "Status": {
                    "$ref": "#/$defs/PipelineStatus"
                },
                "StatusReason": {
                    "$ref": "#/$defs/PipelineStatusReason"
                },
                "PipelineConfigurationBody": {
                    "$ref": "#/$defs/String"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "IngestEndpointUrls": {
                    "$ref": "#/$defs/IngestEndpointUrlsList"
                },
                "LogPublishingOptions": {
                    "$ref": "#/$defs/LogPublishingOptions"
                },
                "VpcEndpoints": {
                    "$ref": "#/$defs/VpcEndpointsList"
                },
                "BufferOptions": {
                    "$ref": "#/$defs/BufferOptions"
                },
                "EncryptionAtRestOptions": {
                    "$ref": "#/$defs/EncryptionAtRestOptions"
                },
                "VpcEndpointService": {
                    "$ref": "#/$defs/String"
                },
                "ServiceVpcEndpoints": {
                    "$ref": "#/$defs/ServiceVpcEndpointsList"
                },
                "Destinations": {
                    "$ref": "#/$defs/PipelineDestinationList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "PipelineStatus": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "UPDATING",
                "DELETING",
                "CREATE_FAILED",
                "UPDATE_FAILED",
                "STARTING",
                "START_FAILED",
                "STOPPING",
                "STOPPED"
            ]
        },
        "PipelineStatusReason": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "IngestEndpointUrlsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "VpcEndpointsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpoint"
            }
        },
        "VpcEndpoint": {
            "type": "object",
            "properties": {
                "VpcEndpointId": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "VpcOptions": {
                    "$ref": "#/$defs/VpcOptions"
                }
            }
        },
        "ServiceVpcEndpointsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceVpcEndpoint"
            }
        },
        "ServiceVpcEndpoint": {
            "type": "object",
            "properties": {
                "ServiceName": {
                    "$ref": "#/$defs/VpcEndpointServiceName"
                },
                "VpcEndpointId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcEndpointServiceName": {
            "enum": [
                "OPENSEARCH_SERVERLESS"
            ]
        },
        "PipelineDestinationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PipelineDestination"
            }
        },
        "PipelineDestination": {
            "type": "object",
            "properties": {
                "ServiceName": {
                    "$ref": "#/$defs/String"
                },
                "Endpoint": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeletePipelineRequest": {
            "type": "object",
            "properties": {
                "PipelineName": {
                    "$ref": "#/$defs/PipelineName"
                }
            }
        },
        "DeletePipelineResponse": {
            "type": "object",
            "properties": {}
        },
        "GetPipelineRequest": {
            "type": "object",
            "properties": {
                "PipelineName": {
                    "$ref": "#/$defs/PipelineName"
                }
            }
        },
        "GetPipelineResponse": {
            "type": "object",
            "properties": {
                "Pipeline": {
                    "$ref": "#/$defs/Pipeline"
                }
            }
        },
        "GetPipelineBlueprintRequest": {
            "type": "object",
            "properties": {
                "BlueprintName": {
                    "$ref": "#/$defs/String"
                },
                "Format": {
                    "$ref": "#/$defs/BlueprintFormat"
                }
            }
        },
        "BlueprintFormat": {
            "type": "string"
        },
        "GetPipelineBlueprintResponse": {
            "type": "object",
            "properties": {
                "Blueprint": {
                    "$ref": "#/$defs/PipelineBlueprint"
                },
                "Format": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PipelineBlueprint": {
            "type": "object",
            "properties": {
                "BlueprintName": {
                    "$ref": "#/$defs/String"
                },
                "PipelineConfigurationBody": {
                    "$ref": "#/$defs/String"
                },
                "DisplayName": {
                    "$ref": "#/$defs/String"
                },
                "DisplayDescription": {
                    "$ref": "#/$defs/String"
                },
                "Service": {
                    "$ref": "#/$defs/String"
                },
                "UseCase": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetPipelineChangeProgressRequest": {
            "type": "object",
            "properties": {
                "PipelineName": {
                    "$ref": "#/$defs/PipelineName"
                }
            }
        },
        "GetPipelineChangeProgressResponse": {
            "type": "object",
            "properties": {
                "ChangeProgressStatuses": {
                    "$ref": "#/$defs/ChangeProgressStatusList"
                }
            }
        },
        "ChangeProgressStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChangeProgressStatus"
            }
        },
        "ChangeProgressStatus": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/ChangeProgressStatuses"
                },
                "TotalNumberOfStages": {
                    "$ref": "#/$defs/Integer"
                },
                "ChangeProgressStages": {
                    "$ref": "#/$defs/ChangeProgressStageList"
                }
            }
        },
        "ChangeProgressStatuses": {
            "enum": [
                "PENDING",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED"
            ]
        },
        "ChangeProgressStageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChangeProgressStage"
            }
        },
        "ChangeProgressStage": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ChangeProgressStageStatuses"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ChangeProgressStageStatuses": {
            "enum": [
                "PENDING",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED"
            ]
        },
        "ListPipelineBlueprintsRequest": {
            "type": "object",
            "properties": {}
        },
        "ListPipelineBlueprintsResponse": {
            "type": "object",
            "properties": {
                "Blueprints": {
                    "$ref": "#/$defs/PipelineBlueprintsSummaryList"
                }
            }
        },
        "PipelineBlueprintsSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PipelineBlueprintSummary"
            }
        },
        "PipelineBlueprintSummary": {
            "type": "object",
            "properties": {
                "BlueprintName": {
                    "$ref": "#/$defs/String"
                },
                "DisplayName": {
                    "$ref": "#/$defs/String"
                },
                "DisplayDescription": {
                    "$ref": "#/$defs/String"
                },
                "Service": {
                    "$ref": "#/$defs/String"
                },
                "UseCase": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListPipelinesRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "NextToken": {
            "type": "string"
        },
        "ListPipelinesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Pipelines": {
                    "$ref": "#/$defs/PipelineSummaryList"
                }
            }
        },
        "PipelineSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PipelineSummary"
            }
        },
        "PipelineSummary": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/PipelineStatus"
                },
                "StatusReason": {
                    "$ref": "#/$defs/PipelineStatusReason"
                },
                "PipelineName": {
                    "$ref": "#/$defs/PipelineName"
                },
                "PipelineArn": {
                    "$ref": "#/$defs/PipelineArn"
                },
                "MinUnits": {
                    "$ref": "#/$defs/PipelineUnits"
                },
                "MaxUnits": {
                    "$ref": "#/$defs/PipelineUnits"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Destinations": {
                    "$ref": "#/$defs/PipelineDestinationList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "PipelineArn": {
            "type": "string"
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/PipelineArn"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "StartPipelineRequest": {
            "type": "object",
            "properties": {
                "PipelineName": {
                    "$ref": "#/$defs/PipelineName"
                }
            }
        },
        "StartPipelineResponse": {
            "type": "object",
            "properties": {
                "Pipeline": {
                    "$ref": "#/$defs/Pipeline"
                }
            }
        },
        "StopPipelineRequest": {
            "type": "object",
            "properties": {
                "PipelineName": {
                    "$ref": "#/$defs/PipelineName"
                }
            }
        },
        "StopPipelineResponse": {
            "type": "object",
            "properties": {
                "Pipeline": {
                    "$ref": "#/$defs/Pipeline"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/PipelineArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/PipelineArn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdatePipelineRequest": {
            "type": "object",
            "properties": {
                "PipelineName": {
                    "$ref": "#/$defs/PipelineName"
                },
                "MinUnits": {
                    "$ref": "#/$defs/PipelineUnits"
                },
                "MaxUnits": {
                    "$ref": "#/$defs/PipelineUnits"
                },
                "PipelineConfigurationBody": {
                    "$ref": "#/$defs/PipelineConfigurationBody"
                },
                "LogPublishingOptions": {
                    "$ref": "#/$defs/LogPublishingOptions"
                },
                "BufferOptions": {
                    "$ref": "#/$defs/BufferOptions"
                },
                "EncryptionAtRestOptions": {
                    "$ref": "#/$defs/EncryptionAtRestOptions"
                }
            }
        },
        "UpdatePipelineResponse": {
            "type": "object",
            "properties": {
                "Pipeline": {
                    "$ref": "#/$defs/Pipeline"
                }
            }
        },
        "ValidatePipelineRequest": {
            "type": "object",
            "properties": {
                "PipelineConfigurationBody": {
                    "$ref": "#/$defs/PipelineConfigurationBody"
                }
            }
        },
        "ValidatePipelineResponse": {
            "type": "object",
            "properties": {
                "isValid": {
                    "$ref": "#/$defs/Boolean"
                },
                "Errors": {
                    "$ref": "#/$defs/ValidationMessageList"
                }
            }
        },
        "ValidationMessageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValidationMessage"
            }
        },
        "ValidationMessage": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://osis-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://osis-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://osis.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://osis.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                }
            ]
        }
    }
}
