{
    "name": "schemas",
    "commands": [
        {
            "name": "CreateDiscoverer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDiscoverer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDiscovererResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDiscovererRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRegistry",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateRegistry"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRegistryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRegistryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSchema",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateSchema"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSchemaResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSchemaRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDiscoverer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteDiscoverer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDiscovererRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRegistry",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteRegistry"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRegistryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteResourcePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSchema",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteSchema"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSchemaRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSchemaVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteSchemaVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSchemaVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCodeBinding",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeCodeBinding"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCodeBindingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCodeBindingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDiscoverer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeDiscoverer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDiscovererResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDiscovererRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeRegistry",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeRegistry"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRegistryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeRegistryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSchema",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeSchema"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSchemaResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSchemaRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportSchema",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExportSchema"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportSchemaResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportSchemaRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCodeBindingSource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCodeBindingSource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCodeBindingSourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCodeBindingSourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDiscoveredSchema",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDiscoveredSchema"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDiscoveredSchemaResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDiscoveredSchemaRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourcePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourcePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDiscoverers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDiscoverers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDiscoverersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDiscoverersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRegistries",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListRegistries"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRegistriesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRegistriesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSchemas",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListSchemas"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSchemasResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSchemasRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSchemaVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListSchemaVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSchemaVersionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSchemaVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutCodeBinding",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutCodeBinding"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutCodeBindingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutCodeBindingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutResourcePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutResourcePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchSchemas",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SearchSchemas"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchSchemasResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchSchemasRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartDiscoverer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartDiscoverer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartDiscovererResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartDiscovererRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopDiscoverer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopDiscoverer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopDiscovererResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopDiscovererRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDiscoverer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDiscoverer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDiscovererResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDiscovererRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRegistry",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateRegistry"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRegistryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRegistryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSchema",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateSchema"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSchemaResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSchemaRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateDiscovererResponse": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "DiscovererArn": {
                    "$ref": "#/$defs/__string"
                },
                "DiscovererId": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/DiscovererState"
                },
                "CrossAccount": {
                    "$ref": "#/$defs/__boolean"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "__string": {
            "type": "string"
        },
        "DiscovererState": {
            "enum": [
                "STARTED",
                "STOPPED"
            ]
        },
        "__boolean": {
            "type": "boolean"
        },
        "Tags": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/__string"
            }
        },
        "CreateDiscovererRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max256"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__stringMin20Max1600"
                },
                "CrossAccount": {
                    "$ref": "#/$defs/__boolean"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "__stringMin0Max256": {
            "type": "string"
        },
        "__stringMin20Max1600": {
            "type": "string"
        },
        "CreateRegistryResponse": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryArn": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CreateRegistryRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max256"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CreateSchemaResponse": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "LastModified": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "SchemaArn": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Type": {
                    "$ref": "#/$defs/__string"
                },
                "VersionCreatedDate": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "__timestampIso8601": {
            "type": "string",
            "format": "date-time"
        },
        "CreateSchemaRequest": {
            "type": "object",
            "properties": {
                "Content": {
                    "$ref": "#/$defs/__stringMin1Max100000"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max256"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Type": {
                    "$ref": "#/$defs/Type"
                }
            }
        },
        "__stringMin1Max100000": {
            "type": "string"
        },
        "Type": {
            "enum": [
                "OpenApi3",
                "JSONSchemaDraft4"
            ]
        },
        "DeleteDiscovererRequest": {
            "type": "object",
            "properties": {
                "DiscovererId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteRegistryRequest": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteSchemaRequest": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteSchemaVersionRequest": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeCodeBindingResponse": {
            "type": "object",
            "properties": {
                "CreationDate": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "LastModified": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/CodeGenerationStatus"
                }
            }
        },
        "CodeGenerationStatus": {
            "enum": [
                "CREATE_IN_PROGRESS",
                "CREATE_COMPLETE",
                "CREATE_FAILED"
            ]
        },
        "DescribeCodeBindingRequest": {
            "type": "object",
            "properties": {
                "Language": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeDiscovererResponse": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "DiscovererArn": {
                    "$ref": "#/$defs/__string"
                },
                "DiscovererId": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/DiscovererState"
                },
                "CrossAccount": {
                    "$ref": "#/$defs/__boolean"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DescribeDiscovererRequest": {
            "type": "object",
            "properties": {
                "DiscovererId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeRegistryResponse": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryArn": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DescribeRegistryRequest": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeSchemaResponse": {
            "type": "object",
            "properties": {
                "Content": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "LastModified": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "SchemaArn": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Type": {
                    "$ref": "#/$defs/__string"
                },
                "VersionCreatedDate": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "DescribeSchemaRequest": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ExportSchemaResponse": {
            "type": "object",
            "properties": {
                "Content": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaArn": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Type": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ExportSchemaRequest": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Type": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetCodeBindingSourceResponse": {
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/$defs/Body"
                }
            }
        },
        "Body": {
            "type": "string",
            "format": "binary"
        },
        "GetCodeBindingSourceRequest": {
            "type": "object",
            "properties": {
                "Language": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetDiscoveredSchemaResponse": {
            "type": "object",
            "properties": {
                "Content": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetDiscoveredSchemaRequest": {
            "type": "object",
            "properties": {
                "Events": {
                    "$ref": "#/$defs/__listOfGetDiscoveredSchemaVersionItemInput"
                },
                "Type": {
                    "$ref": "#/$defs/Type"
                }
            }
        },
        "__listOfGetDiscoveredSchemaVersionItemInput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GetDiscoveredSchemaVersionItemInput"
            }
        },
        "GetDiscoveredSchemaVersionItemInput": {
            "type": "string"
        },
        "GetResourcePolicyResponse": {
            "type": "object",
            "properties": {
                "Policy": {
                    "$ref": "#/$defs/SynthesizedJson__string"
                },
                "RevisionId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "SynthesizedJson__string": {
            "type": "string"
        },
        "GetResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListDiscoverersResponse": {
            "type": "object",
            "properties": {
                "Discoverers": {
                    "$ref": "#/$defs/__listOfDiscovererSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfDiscovererSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DiscovererSummary"
            }
        },
        "DiscovererSummary": {
            "type": "object",
            "properties": {
                "DiscovererArn": {
                    "$ref": "#/$defs/__string"
                },
                "DiscovererId": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/DiscovererState"
                },
                "CrossAccount": {
                    "$ref": "#/$defs/__boolean"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListDiscoverersRequest": {
            "type": "object",
            "properties": {
                "DiscovererIdPrefix": {
                    "$ref": "#/$defs/__string"
                },
                "Limit": {
                    "$ref": "#/$defs/__integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArnPrefix": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__integer": {
            "type": "integer",
            "format": "int32"
        },
        "ListRegistriesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Registries": {
                    "$ref": "#/$defs/__listOfRegistrySummary"
                }
            }
        },
        "__listOfRegistrySummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RegistrySummary"
            }
        },
        "RegistrySummary": {
            "type": "object",
            "properties": {
                "RegistryArn": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListRegistriesRequest": {
            "type": "object",
            "properties": {
                "Limit": {
                    "$ref": "#/$defs/__integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryNamePrefix": {
                    "$ref": "#/$defs/__string"
                },
                "Scope": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListSchemasResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Schemas": {
                    "$ref": "#/$defs/__listOfSchemaSummary"
                }
            }
        },
        "__listOfSchemaSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SchemaSummary"
            }
        },
        "SchemaSummary": {
            "type": "object",
            "properties": {
                "LastModified": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "SchemaArn": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "VersionCount": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "__long": {
            "type": "integer",
            "format": "int64"
        },
        "ListSchemasRequest": {
            "type": "object",
            "properties": {
                "Limit": {
                    "$ref": "#/$defs/__integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaNamePrefix": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListSchemaVersionsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersions": {
                    "$ref": "#/$defs/__listOfSchemaVersionSummary"
                }
            }
        },
        "__listOfSchemaVersionSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SchemaVersionSummary"
            }
        },
        "SchemaVersionSummary": {
            "type": "object",
            "properties": {
                "SchemaArn": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Type": {
                    "$ref": "#/$defs/Type"
                }
            }
        },
        "ListSchemaVersionsRequest": {
            "type": "object",
            "properties": {
                "Limit": {
                    "$ref": "#/$defs/__integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "PutCodeBindingResponse": {
            "type": "object",
            "properties": {
                "CreationDate": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "LastModified": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/CodeGenerationStatus"
                }
            }
        },
        "PutCodeBindingRequest": {
            "type": "object",
            "properties": {
                "Language": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "PutResourcePolicyResponse": {
            "type": "object",
            "properties": {
                "Policy": {
                    "$ref": "#/$defs/SynthesizedJson__string"
                },
                "RevisionId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "PutResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "Policy": {
                    "$ref": "#/$defs/SynthesizedJson__string"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "RevisionId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "SearchSchemasResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Schemas": {
                    "$ref": "#/$defs/__listOfSearchSchemaSummary"
                }
            }
        },
        "__listOfSearchSchemaSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SearchSchemaSummary"
            }
        },
        "SearchSchemaSummary": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaArn": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersions": {
                    "$ref": "#/$defs/__listOfSearchSchemaVersionSummary"
                }
            }
        },
        "__listOfSearchSchemaVersionSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SearchSchemaVersionSummary"
            }
        },
        "SearchSchemaVersionSummary": {
            "type": "object",
            "properties": {
                "CreatedDate": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Type": {
                    "$ref": "#/$defs/Type"
                }
            }
        },
        "SearchSchemasRequest": {
            "type": "object",
            "properties": {
                "Keywords": {
                    "$ref": "#/$defs/__string"
                },
                "Limit": {
                    "$ref": "#/$defs/__integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StartDiscovererResponse": {
            "type": "object",
            "properties": {
                "DiscovererId": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/DiscovererState"
                }
            }
        },
        "StartDiscovererRequest": {
            "type": "object",
            "properties": {
                "DiscovererId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StopDiscovererResponse": {
            "type": "object",
            "properties": {
                "DiscovererId": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/DiscovererState"
                }
            }
        },
        "StopDiscovererRequest": {
            "type": "object",
            "properties": {
                "DiscovererId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "TagKeys": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "__listOf__string": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__string"
            }
        },
        "UpdateDiscovererResponse": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "DiscovererArn": {
                    "$ref": "#/$defs/__string"
                },
                "DiscovererId": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/DiscovererState"
                },
                "CrossAccount": {
                    "$ref": "#/$defs/__boolean"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "UpdateDiscovererRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max256"
                },
                "DiscovererId": {
                    "$ref": "#/$defs/__string"
                },
                "CrossAccount": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "UpdateRegistryResponse": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryArn": {
                    "$ref": "#/$defs/__string"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "UpdateRegistryRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max256"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateSchemaResponse": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "LastModified": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "SchemaArn": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Type": {
                    "$ref": "#/$defs/__string"
                },
                "VersionCreatedDate": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "UpdateSchemaRequest": {
            "type": "object",
            "properties": {
                "ClientTokenId": {
                    "$ref": "#/$defs/__stringMin0Max36"
                },
                "Content": {
                    "$ref": "#/$defs/__stringMin1Max100000"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max256"
                },
                "RegistryName": {
                    "$ref": "#/$defs/__string"
                },
                "SchemaName": {
                    "$ref": "#/$defs/__string"
                },
                "Type": {
                    "$ref": "#/$defs/Type"
                }
            }
        },
        "__stringMin0Max36": {
            "type": "string"
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://schemas-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://schemas-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://schemas.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://schemas.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}