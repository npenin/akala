{
    "name": "fis",
    "commands": [
        {
            "name": "CreateExperimentTemplate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/experimentTemplates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateExperimentTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateExperimentTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientToken": {},
                        "description": {},
                        "stopConditions": {},
                        "targets": {},
                        "actions": {},
                        "roleArn": {},
                        "tags": {},
                        "logConfiguration": {},
                        "experimentOptions": {},
                        "experimentReportConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "CreateTargetAccountConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "experimentTemplateId": "route.experimentTemplateId",
                            "accountId": "route.accountId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/experimentTemplates/{experimentTemplateId}/targetAccountConfigurations/{accountId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTargetAccountConfigurationResponse"
                    },
                    "inject": [
                        "params.0.experimentTemplateId",
                        "params.0.accountId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateTargetAccountConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientToken": {},
                        "experimentTemplateId": {},
                        "accountId": {},
                        "roleArn": {},
                        "description": {}
                    }
                }
            }
        },
        {
            "name": "DeleteExperimentTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/experimentTemplates/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteExperimentTemplateResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteExperimentTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "DeleteTargetAccountConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "experimentTemplateId": "route.experimentTemplateId",
                            "accountId": "route.accountId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/experimentTemplates/{experimentTemplateId}/targetAccountConfigurations/{accountId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTargetAccountConfigurationResponse"
                    },
                    "inject": [
                        "params.0.experimentTemplateId",
                        "params.0.accountId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteTargetAccountConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "experimentTemplateId": {},
                        "accountId": {}
                    }
                }
            }
        },
        {
            "name": "GetAction",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/actions/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetActionResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetActionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetExperiment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/experiments/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetExperimentResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetExperimentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetExperimentTargetAccountConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "experimentId": "route.experimentId",
                            "accountId": "route.accountId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/experiments/{experimentId}/targetAccountConfigurations/{accountId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetExperimentTargetAccountConfigurationResponse"
                    },
                    "inject": [
                        "params.0.experimentId",
                        "params.0.accountId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetExperimentTargetAccountConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "experimentId": {},
                        "accountId": {}
                    }
                }
            }
        },
        {
            "name": "GetExperimentTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/experimentTemplates/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetExperimentTemplateResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetExperimentTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetSafetyLever",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/safetyLevers/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSafetyLeverResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSafetyLeverRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetTargetAccountConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "experimentTemplateId": "route.experimentTemplateId",
                            "accountId": "route.accountId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/experimentTemplates/{experimentTemplateId}/targetAccountConfigurations/{accountId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTargetAccountConfigurationResponse"
                    },
                    "inject": [
                        "params.0.experimentTemplateId",
                        "params.0.accountId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetTargetAccountConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "experimentTemplateId": {},
                        "accountId": {}
                    }
                }
            }
        },
        {
            "name": "GetTargetResourceType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceType": "route.resourceType",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/targetResourceTypes/{resourceType}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTargetResourceTypeResponse"
                    },
                    "inject": [
                        "params.0.resourceType",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetTargetResourceTypeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceType": {}
                    }
                }
            }
        },
        {
            "name": "ListActions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/actions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListActionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListActionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListExperimentResolvedTargets",
            "config": {
                "http": {
                    "inject": [
                        {
                            "experimentId": "route.experimentId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/experiments/{experimentId}/resolvedTargets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListExperimentResolvedTargetsResponse"
                    },
                    "inject": [
                        "params.0.experimentId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListExperimentResolvedTargetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "experimentId": {},
                        "maxResults": {},
                        "nextToken": {},
                        "targetName": {}
                    }
                }
            }
        },
        {
            "name": "ListExperiments",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/experiments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListExperimentsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListExperimentsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {},
                        "experimentTemplateId": {}
                    }
                }
            }
        },
        {
            "name": "ListExperimentTargetAccountConfigurations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "experimentId": "route.experimentId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/experiments/{experimentId}/targetAccountConfigurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListExperimentTargetAccountConfigurationsResponse"
                    },
                    "inject": [
                        "params.0.experimentId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListExperimentTargetAccountConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "experimentId": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListExperimentTemplates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/experimentTemplates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListExperimentTemplatesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListExperimentTemplatesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0.resourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {}
                    }
                }
            }
        },
        {
            "name": "ListTargetAccountConfigurations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "experimentTemplateId": "route.experimentTemplateId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/experimentTemplates/{experimentTemplateId}/targetAccountConfigurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTargetAccountConfigurationsResponse"
                    },
                    "inject": [
                        "params.0.experimentTemplateId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTargetAccountConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "experimentTemplateId": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTargetResourceTypes",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/targetResourceTypes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTargetResourceTypesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTargetResourceTypesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "StartExperiment",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/experiments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartExperimentResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartExperimentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientToken": {},
                        "experimentTemplateId": {},
                        "experimentOptions": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "StopExperiment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/experiments/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopExperimentResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StopExperimentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0.resourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0.resourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateExperimentTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/experimentTemplates/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateExperimentTemplateResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateExperimentTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {},
                        "description": {},
                        "stopConditions": {},
                        "targets": {},
                        "actions": {},
                        "roleArn": {},
                        "logConfiguration": {},
                        "experimentOptions": {},
                        "experimentReportConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSafetyLeverState",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/safetyLevers/{id}/state"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSafetyLeverStateResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateSafetyLeverStateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {},
                        "state": {}
                    }
                }
            }
        },
        {
            "name": "UpdateTargetAccountConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "experimentTemplateId": "route.experimentTemplateId",
                            "accountId": "route.accountId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/experimentTemplates/{experimentTemplateId}/targetAccountConfigurations/{accountId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTargetAccountConfigurationResponse"
                    },
                    "inject": [
                        "params.0.experimentTemplateId",
                        "params.0.accountId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateTargetAccountConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "experimentTemplateId": {},
                        "accountId": {},
                        "roleArn": {},
                        "description": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateExperimentTemplateRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "description": {
                    "$ref": "#/$defs/ExperimentTemplateDescription"
                },
                "stopConditions": {
                    "$ref": "#/$defs/CreateExperimentTemplateStopConditionInputList"
                },
                "targets": {
                    "$ref": "#/$defs/CreateExperimentTemplateTargetInputMap"
                },
                "actions": {
                    "$ref": "#/$defs/CreateExperimentTemplateActionInputMap"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "logConfiguration": {
                    "$ref": "#/$defs/CreateExperimentTemplateLogConfigurationInput"
                },
                "experimentOptions": {
                    "$ref": "#/$defs/CreateExperimentTemplateExperimentOptionsInput"
                },
                "experimentReportConfiguration": {
                    "$ref": "#/$defs/CreateExperimentTemplateReportConfigurationInput"
                }
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "ExperimentTemplateDescription": {
            "type": "string"
        },
        "CreateExperimentTemplateStopConditionInputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CreateExperimentTemplateStopConditionInput"
            }
        },
        "CreateExperimentTemplateStopConditionInput": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/StopConditionSource"
                },
                "value": {
                    "$ref": "#/$defs/StopConditionValue"
                }
            }
        },
        "StopConditionSource": {
            "type": "string"
        },
        "StopConditionValue": {
            "type": "string"
        },
        "CreateExperimentTemplateTargetInputMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/CreateExperimentTemplateTargetInput"
            }
        },
        "CreateExperimentTemplateTargetInput": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/TargetResourceTypeId"
                },
                "resourceArns": {
                    "$ref": "#/$defs/ResourceArnList"
                },
                "resourceTags": {
                    "$ref": "#/$defs/TagMap"
                },
                "filters": {
                    "$ref": "#/$defs/ExperimentTemplateTargetFilterInputList"
                },
                "selectionMode": {
                    "$ref": "#/$defs/ExperimentTemplateTargetSelectionMode"
                },
                "parameters": {
                    "$ref": "#/$defs/ExperimentTemplateTargetParameterMap"
                }
            }
        },
        "TargetResourceTypeId": {
            "type": "string"
        },
        "ResourceArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceArn"
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "ExperimentTemplateTargetFilterInputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentTemplateTargetInputFilter"
            }
        },
        "ExperimentTemplateTargetInputFilter": {
            "type": "object",
            "properties": {
                "path": {
                    "$ref": "#/$defs/ExperimentTemplateTargetFilterPath"
                },
                "values": {
                    "$ref": "#/$defs/ExperimentTemplateTargetFilterValues"
                }
            }
        },
        "ExperimentTemplateTargetFilterPath": {
            "type": "string"
        },
        "ExperimentTemplateTargetFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentTemplateTargetFilterValue"
            }
        },
        "ExperimentTemplateTargetFilterValue": {
            "type": "string"
        },
        "ExperimentTemplateTargetSelectionMode": {
            "type": "string"
        },
        "ExperimentTemplateTargetParameterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ExperimentTemplateTargetParameterValue"
            }
        },
        "ExperimentTemplateTargetParameterValue": {
            "type": "string"
        },
        "CreateExperimentTemplateActionInputMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/CreateExperimentTemplateActionInput"
            }
        },
        "CreateExperimentTemplateActionInput": {
            "type": "object",
            "properties": {
                "actionId": {
                    "$ref": "#/$defs/ActionId"
                },
                "description": {
                    "$ref": "#/$defs/ExperimentTemplateActionDescription"
                },
                "parameters": {
                    "$ref": "#/$defs/ExperimentTemplateActionParameterMap"
                },
                "targets": {
                    "$ref": "#/$defs/ExperimentTemplateActionTargetMap"
                },
                "startAfter": {
                    "$ref": "#/$defs/ExperimentTemplateActionStartAfterList"
                }
            }
        },
        "ActionId": {
            "type": "string"
        },
        "ExperimentTemplateActionDescription": {
            "type": "string"
        },
        "ExperimentTemplateActionParameterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ExperimentTemplateActionParameter"
            }
        },
        "ExperimentTemplateActionParameter": {
            "type": "string"
        },
        "ExperimentTemplateActionTargetMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ExperimentTemplateTargetName"
            }
        },
        "ExperimentTemplateTargetName": {
            "type": "string"
        },
        "ExperimentTemplateActionStartAfterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentTemplateActionStartAfter"
            }
        },
        "ExperimentTemplateActionStartAfter": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "CreateExperimentTemplateLogConfigurationInput": {
            "type": "object",
            "properties": {
                "cloudWatchLogsConfiguration": {
                    "$ref": "#/$defs/ExperimentTemplateCloudWatchLogsLogConfigurationInput"
                },
                "s3Configuration": {
                    "$ref": "#/$defs/ExperimentTemplateS3LogConfigurationInput"
                },
                "logSchemaVersion": {
                    "$ref": "#/$defs/LogSchemaVersion"
                }
            }
        },
        "ExperimentTemplateCloudWatchLogsLogConfigurationInput": {
            "type": "object",
            "properties": {
                "logGroupArn": {
                    "$ref": "#/$defs/CloudWatchLogGroupArn"
                }
            }
        },
        "CloudWatchLogGroupArn": {
            "type": "string"
        },
        "ExperimentTemplateS3LogConfigurationInput": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "prefix": {
                    "$ref": "#/$defs/S3ObjectKey"
                }
            }
        },
        "S3BucketName": {
            "type": "string"
        },
        "S3ObjectKey": {
            "type": "string"
        },
        "LogSchemaVersion": {
            "type": "integer",
            "format": "int32"
        },
        "CreateExperimentTemplateExperimentOptionsInput": {
            "type": "object",
            "properties": {
                "accountTargeting": {
                    "$ref": "#/$defs/AccountTargeting"
                },
                "emptyTargetResolutionMode": {
                    "$ref": "#/$defs/EmptyTargetResolutionMode"
                }
            }
        },
        "AccountTargeting": {
            "enum": [
                "SINGLE_ACCOUNT",
                "MULTI_ACCOUNT"
            ]
        },
        "EmptyTargetResolutionMode": {
            "enum": [
                "FAIL",
                "SKIP"
            ]
        },
        "CreateExperimentTemplateReportConfigurationInput": {
            "type": "object",
            "properties": {
                "outputs": {
                    "$ref": "#/$defs/ExperimentTemplateReportConfigurationOutputsInput"
                },
                "dataSources": {
                    "$ref": "#/$defs/ExperimentTemplateReportConfigurationDataSourcesInput"
                },
                "preExperimentDuration": {
                    "$ref": "#/$defs/ReportConfigurationDuration"
                },
                "postExperimentDuration": {
                    "$ref": "#/$defs/ReportConfigurationDuration"
                }
            }
        },
        "ExperimentTemplateReportConfigurationOutputsInput": {
            "type": "object",
            "properties": {
                "s3Configuration": {
                    "$ref": "#/$defs/ReportConfigurationS3OutputInput"
                }
            }
        },
        "ReportConfigurationS3OutputInput": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "prefix": {
                    "$ref": "#/$defs/ReportConfigurationS3OutputPrefix"
                }
            }
        },
        "ReportConfigurationS3OutputPrefix": {
            "type": "string"
        },
        "ExperimentTemplateReportConfigurationDataSourcesInput": {
            "type": "object",
            "properties": {
                "cloudWatchDashboards": {
                    "$ref": "#/$defs/ReportConfigurationCloudWatchDashboardInputList"
                }
            }
        },
        "ReportConfigurationCloudWatchDashboardInputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReportConfigurationCloudWatchDashboardInput"
            }
        },
        "ReportConfigurationCloudWatchDashboardInput": {
            "type": "object",
            "properties": {
                "dashboardIdentifier": {
                    "$ref": "#/$defs/ReportConfigurationCloudWatchDashboardIdentifier"
                }
            }
        },
        "ReportConfigurationCloudWatchDashboardIdentifier": {
            "type": "string"
        },
        "ReportConfigurationDuration": {
            "type": "string"
        },
        "CreateExperimentTemplateResponse": {
            "type": "object",
            "properties": {
                "experimentTemplate": {
                    "$ref": "#/$defs/ExperimentTemplate"
                }
            }
        },
        "ExperimentTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                },
                "arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "description": {
                    "$ref": "#/$defs/ExperimentTemplateDescription"
                },
                "targets": {
                    "$ref": "#/$defs/ExperimentTemplateTargetMap"
                },
                "actions": {
                    "$ref": "#/$defs/ExperimentTemplateActionMap"
                },
                "stopConditions": {
                    "$ref": "#/$defs/ExperimentTemplateStopConditionList"
                },
                "creationTime": {
                    "$ref": "#/$defs/CreationTime"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/LastUpdateTime"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "logConfiguration": {
                    "$ref": "#/$defs/ExperimentTemplateLogConfiguration"
                },
                "experimentOptions": {
                    "$ref": "#/$defs/ExperimentTemplateExperimentOptions"
                },
                "targetAccountConfigurationsCount": {
                    "$ref": "#/$defs/TargetAccountConfigurationsCount"
                },
                "experimentReportConfiguration": {
                    "$ref": "#/$defs/ExperimentTemplateReportConfiguration"
                }
            }
        },
        "ExperimentTemplateId": {
            "type": "string"
        },
        "ExperimentTemplateTargetMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ExperimentTemplateTarget"
            }
        },
        "ExperimentTemplateTarget": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/TargetResourceTypeId"
                },
                "resourceArns": {
                    "$ref": "#/$defs/ResourceArnList"
                },
                "resourceTags": {
                    "$ref": "#/$defs/TagMap"
                },
                "filters": {
                    "$ref": "#/$defs/ExperimentTemplateTargetFilterList"
                },
                "selectionMode": {
                    "$ref": "#/$defs/ExperimentTemplateTargetSelectionMode"
                },
                "parameters": {
                    "$ref": "#/$defs/ExperimentTemplateTargetParameterMap"
                }
            }
        },
        "ExperimentTemplateTargetFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentTemplateTargetFilter"
            }
        },
        "ExperimentTemplateTargetFilter": {
            "type": "object",
            "properties": {
                "path": {
                    "$ref": "#/$defs/ExperimentTemplateTargetFilterPath"
                },
                "values": {
                    "$ref": "#/$defs/ExperimentTemplateTargetFilterValues"
                }
            }
        },
        "ExperimentTemplateActionMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ExperimentTemplateAction"
            }
        },
        "ExperimentTemplateAction": {
            "type": "object",
            "properties": {
                "actionId": {
                    "$ref": "#/$defs/ActionId"
                },
                "description": {
                    "$ref": "#/$defs/ExperimentTemplateActionDescription"
                },
                "parameters": {
                    "$ref": "#/$defs/ExperimentTemplateActionParameterMap"
                },
                "targets": {
                    "$ref": "#/$defs/ExperimentTemplateActionTargetMap"
                },
                "startAfter": {
                    "$ref": "#/$defs/ExperimentTemplateActionStartAfterList"
                }
            }
        },
        "ExperimentTemplateStopConditionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentTemplateStopCondition"
            }
        },
        "ExperimentTemplateStopCondition": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/StopConditionSource"
                },
                "value": {
                    "$ref": "#/$defs/StopConditionValue"
                }
            }
        },
        "CreationTime": {
            "type": "string",
            "format": "date-time"
        },
        "LastUpdateTime": {
            "type": "string",
            "format": "date-time"
        },
        "ExperimentTemplateLogConfiguration": {
            "type": "object",
            "properties": {
                "cloudWatchLogsConfiguration": {
                    "$ref": "#/$defs/ExperimentTemplateCloudWatchLogsLogConfiguration"
                },
                "s3Configuration": {
                    "$ref": "#/$defs/ExperimentTemplateS3LogConfiguration"
                },
                "logSchemaVersion": {
                    "$ref": "#/$defs/LogSchemaVersion"
                }
            }
        },
        "ExperimentTemplateCloudWatchLogsLogConfiguration": {
            "type": "object",
            "properties": {
                "logGroupArn": {
                    "$ref": "#/$defs/CloudWatchLogGroupArn"
                }
            }
        },
        "ExperimentTemplateS3LogConfiguration": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "prefix": {
                    "$ref": "#/$defs/S3ObjectKey"
                }
            }
        },
        "ExperimentTemplateExperimentOptions": {
            "type": "object",
            "properties": {
                "accountTargeting": {
                    "$ref": "#/$defs/AccountTargeting"
                },
                "emptyTargetResolutionMode": {
                    "$ref": "#/$defs/EmptyTargetResolutionMode"
                }
            }
        },
        "TargetAccountConfigurationsCount": {
            "type": "integer",
            "format": "int64"
        },
        "ExperimentTemplateReportConfiguration": {
            "type": "object",
            "properties": {
                "outputs": {
                    "$ref": "#/$defs/ExperimentTemplateReportConfigurationOutputs"
                },
                "dataSources": {
                    "$ref": "#/$defs/ExperimentTemplateReportConfigurationDataSources"
                },
                "preExperimentDuration": {
                    "$ref": "#/$defs/ReportConfigurationDuration"
                },
                "postExperimentDuration": {
                    "$ref": "#/$defs/ReportConfigurationDuration"
                }
            }
        },
        "ExperimentTemplateReportConfigurationOutputs": {
            "type": "object",
            "properties": {
                "s3Configuration": {
                    "$ref": "#/$defs/ReportConfigurationS3Output"
                }
            }
        },
        "ReportConfigurationS3Output": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "prefix": {
                    "$ref": "#/$defs/ReportConfigurationS3OutputPrefix"
                }
            }
        },
        "ExperimentTemplateReportConfigurationDataSources": {
            "type": "object",
            "properties": {
                "cloudWatchDashboards": {
                    "$ref": "#/$defs/ExperimentTemplateReportConfigurationCloudWatchDashboardList"
                }
            }
        },
        "ExperimentTemplateReportConfigurationCloudWatchDashboardList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentTemplateReportConfigurationCloudWatchDashboard"
            }
        },
        "ExperimentTemplateReportConfigurationCloudWatchDashboard": {
            "type": "object",
            "properties": {
                "dashboardIdentifier": {
                    "$ref": "#/$defs/ReportConfigurationCloudWatchDashboardIdentifier"
                }
            }
        },
        "CreateTargetAccountConfigurationRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "experimentTemplateId": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                },
                "accountId": {
                    "$ref": "#/$defs/TargetAccountId"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "description": {
                    "$ref": "#/$defs/TargetAccountConfigurationDescription"
                }
            }
        },
        "TargetAccountId": {
            "type": "string"
        },
        "TargetAccountConfigurationDescription": {
            "type": "string"
        },
        "CreateTargetAccountConfigurationResponse": {
            "type": "object",
            "properties": {
                "targetAccountConfiguration": {
                    "$ref": "#/$defs/TargetAccountConfiguration"
                }
            }
        },
        "TargetAccountConfiguration": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "accountId": {
                    "$ref": "#/$defs/TargetAccountId"
                },
                "description": {
                    "$ref": "#/$defs/TargetAccountConfigurationDescription"
                }
            }
        },
        "DeleteExperimentTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                }
            }
        },
        "DeleteExperimentTemplateResponse": {
            "type": "object",
            "properties": {
                "experimentTemplate": {
                    "$ref": "#/$defs/ExperimentTemplate"
                }
            }
        },
        "DeleteTargetAccountConfigurationRequest": {
            "type": "object",
            "properties": {
                "experimentTemplateId": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                },
                "accountId": {
                    "$ref": "#/$defs/TargetAccountId"
                }
            }
        },
        "DeleteTargetAccountConfigurationResponse": {
            "type": "object",
            "properties": {
                "targetAccountConfiguration": {
                    "$ref": "#/$defs/TargetAccountConfiguration"
                }
            }
        },
        "GetActionRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ActionId"
                }
            }
        },
        "GetActionResponse": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/$defs/Action"
                }
            }
        },
        "Action": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ActionId"
                },
                "arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "description": {
                    "$ref": "#/$defs/ActionDescription"
                },
                "parameters": {
                    "$ref": "#/$defs/ActionParameterMap"
                },
                "targets": {
                    "$ref": "#/$defs/ActionTargetMap"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ActionDescription": {
            "type": "string"
        },
        "ActionParameterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ActionParameter"
            }
        },
        "ActionParameter": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/ActionParameterDescription"
                },
                "required": {
                    "$ref": "#/$defs/ActionParameterRequired"
                }
            }
        },
        "ActionParameterDescription": {
            "type": "string"
        },
        "ActionParameterRequired": {
            "type": "boolean"
        },
        "ActionTargetMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ActionTarget"
            }
        },
        "ActionTarget": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/TargetResourceTypeId"
                }
            }
        },
        "GetExperimentRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ExperimentId"
                }
            }
        },
        "ExperimentId": {
            "type": "string"
        },
        "GetExperimentResponse": {
            "type": "object",
            "properties": {
                "experiment": {
                    "$ref": "#/$defs/Experiment"
                }
            }
        },
        "Experiment": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ExperimentId"
                },
                "arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "experimentTemplateId": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "state": {
                    "$ref": "#/$defs/ExperimentState"
                },
                "targets": {
                    "$ref": "#/$defs/ExperimentTargetMap"
                },
                "actions": {
                    "$ref": "#/$defs/ExperimentActionMap"
                },
                "stopConditions": {
                    "$ref": "#/$defs/ExperimentStopConditionList"
                },
                "creationTime": {
                    "$ref": "#/$defs/CreationTime"
                },
                "startTime": {
                    "$ref": "#/$defs/ExperimentStartTime"
                },
                "endTime": {
                    "$ref": "#/$defs/ExperimentEndTime"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "logConfiguration": {
                    "$ref": "#/$defs/ExperimentLogConfiguration"
                },
                "experimentOptions": {
                    "$ref": "#/$defs/ExperimentOptions"
                },
                "targetAccountConfigurationsCount": {
                    "$ref": "#/$defs/TargetAccountConfigurationsCount"
                },
                "experimentReportConfiguration": {
                    "$ref": "#/$defs/ExperimentReportConfiguration"
                },
                "experimentReport": {
                    "$ref": "#/$defs/ExperimentReport"
                }
            }
        },
        "ExperimentState": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/ExperimentStatus"
                },
                "reason": {
                    "$ref": "#/$defs/ExperimentStatusReason"
                },
                "error": {
                    "$ref": "#/$defs/ExperimentError"
                }
            }
        },
        "ExperimentStatus": {
            "enum": [
                "pending",
                "initiating",
                "running",
                "completed",
                "stopping",
                "stopped",
                "failed",
                "cancelled"
            ]
        },
        "ExperimentStatusReason": {
            "type": "string"
        },
        "ExperimentError": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/ExperimentErrorAccountId"
                },
                "code": {
                    "$ref": "#/$defs/ExperimentErrorCode"
                },
                "location": {
                    "$ref": "#/$defs/ExperimentErrorLocation"
                }
            }
        },
        "ExperimentErrorAccountId": {
            "type": "string"
        },
        "ExperimentErrorCode": {
            "type": "string"
        },
        "ExperimentErrorLocation": {
            "type": "string"
        },
        "ExperimentTargetMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ExperimentTarget"
            }
        },
        "ExperimentTarget": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/TargetResourceTypeId"
                },
                "resourceArns": {
                    "$ref": "#/$defs/ResourceArnList"
                },
                "resourceTags": {
                    "$ref": "#/$defs/TagMap"
                },
                "filters": {
                    "$ref": "#/$defs/ExperimentTargetFilterList"
                },
                "selectionMode": {
                    "$ref": "#/$defs/ExperimentTargetSelectionMode"
                },
                "parameters": {
                    "$ref": "#/$defs/ExperimentTargetParameterMap"
                }
            }
        },
        "ExperimentTargetFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentTargetFilter"
            }
        },
        "ExperimentTargetFilter": {
            "type": "object",
            "properties": {
                "path": {
                    "$ref": "#/$defs/ExperimentTargetFilterPath"
                },
                "values": {
                    "$ref": "#/$defs/ExperimentTargetFilterValues"
                }
            }
        },
        "ExperimentTargetFilterPath": {
            "type": "string"
        },
        "ExperimentTargetFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentTargetFilterValue"
            }
        },
        "ExperimentTargetFilterValue": {
            "type": "string"
        },
        "ExperimentTargetSelectionMode": {
            "type": "string"
        },
        "ExperimentTargetParameterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ExperimentTargetParameterValue"
            }
        },
        "ExperimentTargetParameterValue": {
            "type": "string"
        },
        "ExperimentActionMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ExperimentAction"
            }
        },
        "ExperimentAction": {
            "type": "object",
            "properties": {
                "actionId": {
                    "$ref": "#/$defs/ActionId"
                },
                "description": {
                    "$ref": "#/$defs/ExperimentActionDescription"
                },
                "parameters": {
                    "$ref": "#/$defs/ExperimentActionParameterMap"
                },
                "targets": {
                    "$ref": "#/$defs/ExperimentActionTargetMap"
                },
                "startAfter": {
                    "$ref": "#/$defs/ExperimentActionStartAfterList"
                },
                "state": {
                    "$ref": "#/$defs/ExperimentActionState"
                },
                "startTime": {
                    "$ref": "#/$defs/ExperimentActionStartTime"
                },
                "endTime": {
                    "$ref": "#/$defs/ExperimentActionEndTime"
                }
            }
        },
        "ExperimentActionDescription": {
            "type": "string"
        },
        "ExperimentActionParameterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ExperimentActionParameter"
            }
        },
        "ExperimentActionParameter": {
            "type": "string"
        },
        "ExperimentActionTargetMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ExperimentTargetName"
            }
        },
        "ExperimentTargetName": {
            "type": "string"
        },
        "ExperimentActionStartAfterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentActionStartAfter"
            }
        },
        "ExperimentActionStartAfter": {
            "type": "string"
        },
        "ExperimentActionState": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/ExperimentActionStatus"
                },
                "reason": {
                    "$ref": "#/$defs/ExperimentActionStatusReason"
                }
            }
        },
        "ExperimentActionStatus": {
            "enum": [
                "pending",
                "initiating",
                "running",
                "completed",
                "cancelled",
                "stopping",
                "stopped",
                "failed",
                "skipped"
            ]
        },
        "ExperimentActionStatusReason": {
            "type": "string"
        },
        "ExperimentActionStartTime": {
            "type": "string",
            "format": "date-time"
        },
        "ExperimentActionEndTime": {
            "type": "string",
            "format": "date-time"
        },
        "ExperimentStopConditionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentStopCondition"
            }
        },
        "ExperimentStopCondition": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/StopConditionSource"
                },
                "value": {
                    "$ref": "#/$defs/StopConditionValue"
                }
            }
        },
        "ExperimentStartTime": {
            "type": "string",
            "format": "date-time"
        },
        "ExperimentEndTime": {
            "type": "string",
            "format": "date-time"
        },
        "ExperimentLogConfiguration": {
            "type": "object",
            "properties": {
                "cloudWatchLogsConfiguration": {
                    "$ref": "#/$defs/ExperimentCloudWatchLogsLogConfiguration"
                },
                "s3Configuration": {
                    "$ref": "#/$defs/ExperimentS3LogConfiguration"
                },
                "logSchemaVersion": {
                    "$ref": "#/$defs/LogSchemaVersion"
                }
            }
        },
        "ExperimentCloudWatchLogsLogConfiguration": {
            "type": "object",
            "properties": {
                "logGroupArn": {
                    "$ref": "#/$defs/CloudWatchLogGroupArn"
                }
            }
        },
        "ExperimentS3LogConfiguration": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "prefix": {
                    "$ref": "#/$defs/S3ObjectKey"
                }
            }
        },
        "ExperimentOptions": {
            "type": "object",
            "properties": {
                "accountTargeting": {
                    "$ref": "#/$defs/AccountTargeting"
                },
                "emptyTargetResolutionMode": {
                    "$ref": "#/$defs/EmptyTargetResolutionMode"
                },
                "actionsMode": {
                    "$ref": "#/$defs/ActionsMode"
                }
            }
        },
        "ActionsMode": {
            "enum": [
                "SKIP_ALL",
                "RUN_ALL"
            ]
        },
        "ExperimentReportConfiguration": {
            "type": "object",
            "properties": {
                "outputs": {
                    "$ref": "#/$defs/ExperimentReportConfigurationOutputs"
                },
                "dataSources": {
                    "$ref": "#/$defs/ExperimentReportConfigurationDataSources"
                },
                "preExperimentDuration": {
                    "$ref": "#/$defs/ReportConfigurationDuration"
                },
                "postExperimentDuration": {
                    "$ref": "#/$defs/ReportConfigurationDuration"
                }
            }
        },
        "ExperimentReportConfigurationOutputs": {
            "type": "object",
            "properties": {
                "s3Configuration": {
                    "$ref": "#/$defs/ExperimentReportConfigurationOutputsS3Configuration"
                }
            }
        },
        "ExperimentReportConfigurationOutputsS3Configuration": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "prefix": {
                    "$ref": "#/$defs/ReportConfigurationS3OutputPrefix"
                }
            }
        },
        "ExperimentReportConfigurationDataSources": {
            "type": "object",
            "properties": {
                "cloudWatchDashboards": {
                    "$ref": "#/$defs/ExperimentReportConfigurationCloudWatchDashboardList"
                }
            }
        },
        "ExperimentReportConfigurationCloudWatchDashboardList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentReportConfigurationCloudWatchDashboard"
            }
        },
        "ExperimentReportConfigurationCloudWatchDashboard": {
            "type": "object",
            "properties": {
                "dashboardIdentifier": {
                    "$ref": "#/$defs/ReportConfigurationCloudWatchDashboardIdentifier"
                }
            }
        },
        "ExperimentReport": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/ExperimentReportState"
                },
                "s3Reports": {
                    "$ref": "#/$defs/ExperimentReportS3ReportList"
                }
            }
        },
        "ExperimentReportState": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/ExperimentReportStatus"
                },
                "reason": {
                    "$ref": "#/$defs/ExperimentReportReason"
                },
                "error": {
                    "$ref": "#/$defs/ExperimentReportError"
                }
            }
        },
        "ExperimentReportStatus": {
            "enum": [
                "pending",
                "running",
                "completed",
                "cancelled",
                "failed"
            ]
        },
        "ExperimentReportReason": {
            "type": "string"
        },
        "ExperimentReportError": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/ExperimentReportErrorCode"
                }
            }
        },
        "ExperimentReportErrorCode": {
            "type": "string"
        },
        "ExperimentReportS3ReportList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentReportS3Report"
            }
        },
        "ExperimentReportS3Report": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/ExperimentReportS3ReportArn"
                },
                "reportType": {
                    "$ref": "#/$defs/ExperimentReportS3ReportType"
                }
            }
        },
        "ExperimentReportS3ReportArn": {
            "type": "string"
        },
        "ExperimentReportS3ReportType": {
            "type": "string"
        },
        "GetExperimentTargetAccountConfigurationRequest": {
            "type": "object",
            "properties": {
                "experimentId": {
                    "$ref": "#/$defs/ExperimentId"
                },
                "accountId": {
                    "$ref": "#/$defs/TargetAccountId"
                }
            }
        },
        "GetExperimentTargetAccountConfigurationResponse": {
            "type": "object",
            "properties": {
                "targetAccountConfiguration": {
                    "$ref": "#/$defs/ExperimentTargetAccountConfiguration"
                }
            }
        },
        "ExperimentTargetAccountConfiguration": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "accountId": {
                    "$ref": "#/$defs/TargetAccountId"
                },
                "description": {
                    "$ref": "#/$defs/TargetAccountConfigurationDescription"
                }
            }
        },
        "GetExperimentTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                }
            }
        },
        "GetExperimentTemplateResponse": {
            "type": "object",
            "properties": {
                "experimentTemplate": {
                    "$ref": "#/$defs/ExperimentTemplate"
                }
            }
        },
        "GetSafetyLeverRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/SafetyLeverId"
                }
            }
        },
        "SafetyLeverId": {
            "type": "string"
        },
        "GetSafetyLeverResponse": {
            "type": "object",
            "properties": {
                "safetyLever": {
                    "$ref": "#/$defs/SafetyLever"
                }
            }
        },
        "SafetyLever": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/SafetyLeverId"
                },
                "arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "state": {
                    "$ref": "#/$defs/SafetyLeverState"
                }
            }
        },
        "SafetyLeverState": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/SafetyLeverStatus"
                },
                "reason": {
                    "$ref": "#/$defs/SafetyLeverStatusReason"
                }
            }
        },
        "SafetyLeverStatus": {
            "enum": [
                "DISENGAGED",
                "ENGAGED",
                "ENGAGING"
            ]
        },
        "SafetyLeverStatusReason": {
            "type": "string"
        },
        "GetTargetAccountConfigurationRequest": {
            "type": "object",
            "properties": {
                "experimentTemplateId": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                },
                "accountId": {
                    "$ref": "#/$defs/TargetAccountId"
                }
            }
        },
        "GetTargetAccountConfigurationResponse": {
            "type": "object",
            "properties": {
                "targetAccountConfiguration": {
                    "$ref": "#/$defs/TargetAccountConfiguration"
                }
            }
        },
        "GetTargetResourceTypeRequest": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/TargetResourceTypeId"
                }
            }
        },
        "GetTargetResourceTypeResponse": {
            "type": "object",
            "properties": {
                "targetResourceType": {
                    "$ref": "#/$defs/TargetResourceType"
                }
            }
        },
        "TargetResourceType": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/TargetResourceTypeId"
                },
                "description": {
                    "$ref": "#/$defs/TargetResourceTypeDescription"
                },
                "parameters": {
                    "$ref": "#/$defs/TargetResourceTypeParameterMap"
                }
            }
        },
        "TargetResourceTypeDescription": {
            "type": "string"
        },
        "TargetResourceTypeParameterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TargetResourceTypeParameter"
            }
        },
        "TargetResourceTypeParameter": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/TargetResourceTypeParameterDescription"
                },
                "required": {
                    "$ref": "#/$defs/TargetResourceTypeParameterRequired"
                }
            }
        },
        "TargetResourceTypeParameterDescription": {
            "type": "string"
        },
        "TargetResourceTypeParameterRequired": {
            "type": "boolean"
        },
        "ListActionsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/ListActionsMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListActionsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "NextToken": {
            "type": "string"
        },
        "ListActionsResponse": {
            "type": "object",
            "properties": {
                "actions": {
                    "$ref": "#/$defs/ActionSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ActionSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ActionSummary"
            }
        },
        "ActionSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ActionId"
                },
                "arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "description": {
                    "$ref": "#/$defs/ActionDescription"
                },
                "targets": {
                    "$ref": "#/$defs/ActionTargetMap"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListExperimentResolvedTargetsRequest": {
            "type": "object",
            "properties": {
                "experimentId": {
                    "$ref": "#/$defs/ExperimentId"
                },
                "maxResults": {
                    "$ref": "#/$defs/ListExperimentResolvedTargetsMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "targetName": {
                    "$ref": "#/$defs/TargetName"
                }
            }
        },
        "ListExperimentResolvedTargetsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "TargetName": {
            "type": "string"
        },
        "ListExperimentResolvedTargetsResponse": {
            "type": "object",
            "properties": {
                "resolvedTargets": {
                    "$ref": "#/$defs/ResolvedTargetList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ResolvedTargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResolvedTarget"
            }
        },
        "ResolvedTarget": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/TargetResourceTypeId"
                },
                "targetName": {
                    "$ref": "#/$defs/TargetName"
                },
                "targetInformation": {
                    "$ref": "#/$defs/TargetInformationMap"
                }
            }
        },
        "TargetInformationMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TargetInformationValue"
            }
        },
        "TargetInformationValue": {
            "type": "string"
        },
        "ListExperimentsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/ListExperimentsMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "experimentTemplateId": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                }
            }
        },
        "ListExperimentsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListExperimentsResponse": {
            "type": "object",
            "properties": {
                "experiments": {
                    "$ref": "#/$defs/ExperimentSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ExperimentSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentSummary"
            }
        },
        "ExperimentSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ExperimentId"
                },
                "arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "experimentTemplateId": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                },
                "state": {
                    "$ref": "#/$defs/ExperimentState"
                },
                "creationTime": {
                    "$ref": "#/$defs/CreationTime"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "experimentOptions": {
                    "$ref": "#/$defs/ExperimentOptions"
                }
            }
        },
        "ListExperimentTargetAccountConfigurationsRequest": {
            "type": "object",
            "properties": {
                "experimentId": {
                    "$ref": "#/$defs/ExperimentId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListExperimentTargetAccountConfigurationsResponse": {
            "type": "object",
            "properties": {
                "targetAccountConfigurations": {
                    "$ref": "#/$defs/ExperimentTargetAccountConfigurationList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ExperimentTargetAccountConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentTargetAccountConfigurationSummary"
            }
        },
        "ExperimentTargetAccountConfigurationSummary": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "accountId": {
                    "$ref": "#/$defs/TargetAccountId"
                },
                "description": {
                    "$ref": "#/$defs/TargetAccountConfigurationDescription"
                }
            }
        },
        "ListExperimentTemplatesRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/ListExperimentTemplatesMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListExperimentTemplatesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListExperimentTemplatesResponse": {
            "type": "object",
            "properties": {
                "experimentTemplates": {
                    "$ref": "#/$defs/ExperimentTemplateSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ExperimentTemplateSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExperimentTemplateSummary"
            }
        },
        "ExperimentTemplateSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                },
                "arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "description": {
                    "$ref": "#/$defs/ExperimentTemplateDescription"
                },
                "creationTime": {
                    "$ref": "#/$defs/CreationTime"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/LastUpdateTime"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTargetAccountConfigurationsRequest": {
            "type": "object",
            "properties": {
                "experimentTemplateId": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                },
                "maxResults": {
                    "$ref": "#/$defs/ListTargetAccountConfigurationsMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTargetAccountConfigurationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListTargetAccountConfigurationsResponse": {
            "type": "object",
            "properties": {
                "targetAccountConfigurations": {
                    "$ref": "#/$defs/TargetAccountConfigurationList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TargetAccountConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetAccountConfigurationSummary"
            }
        },
        "TargetAccountConfigurationSummary": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "accountId": {
                    "$ref": "#/$defs/TargetAccountId"
                },
                "description": {
                    "$ref": "#/$defs/TargetAccountConfigurationDescription"
                }
            }
        },
        "ListTargetResourceTypesRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/ListTargetResourceTypesMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTargetResourceTypesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListTargetResourceTypesResponse": {
            "type": "object",
            "properties": {
                "targetResourceTypes": {
                    "$ref": "#/$defs/TargetResourceTypeSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TargetResourceTypeSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetResourceTypeSummary"
            }
        },
        "TargetResourceTypeSummary": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/TargetResourceTypeId"
                },
                "description": {
                    "$ref": "#/$defs/TargetResourceTypeDescription"
                }
            }
        },
        "StartExperimentRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "experimentTemplateId": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                },
                "experimentOptions": {
                    "$ref": "#/$defs/StartExperimentExperimentOptionsInput"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "StartExperimentExperimentOptionsInput": {
            "type": "object",
            "properties": {
                "actionsMode": {
                    "$ref": "#/$defs/ActionsMode"
                }
            }
        },
        "StartExperimentResponse": {
            "type": "object",
            "properties": {
                "experiment": {
                    "$ref": "#/$defs/Experiment"
                }
            }
        },
        "StopExperimentRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ExperimentId"
                }
            }
        },
        "StopExperimentResponse": {
            "type": "object",
            "properties": {
                "experiment": {
                    "$ref": "#/$defs/Experiment"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateExperimentTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                },
                "description": {
                    "$ref": "#/$defs/ExperimentTemplateDescription"
                },
                "stopConditions": {
                    "$ref": "#/$defs/UpdateExperimentTemplateStopConditionInputList"
                },
                "targets": {
                    "$ref": "#/$defs/UpdateExperimentTemplateTargetInputMap"
                },
                "actions": {
                    "$ref": "#/$defs/UpdateExperimentTemplateActionInputMap"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "logConfiguration": {
                    "$ref": "#/$defs/UpdateExperimentTemplateLogConfigurationInput"
                },
                "experimentOptions": {
                    "$ref": "#/$defs/UpdateExperimentTemplateExperimentOptionsInput"
                },
                "experimentReportConfiguration": {
                    "$ref": "#/$defs/UpdateExperimentTemplateReportConfigurationInput"
                }
            }
        },
        "UpdateExperimentTemplateStopConditionInputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpdateExperimentTemplateStopConditionInput"
            }
        },
        "UpdateExperimentTemplateStopConditionInput": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/StopConditionSource"
                },
                "value": {
                    "$ref": "#/$defs/StopConditionValue"
                }
            }
        },
        "UpdateExperimentTemplateTargetInputMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/UpdateExperimentTemplateTargetInput"
            }
        },
        "UpdateExperimentTemplateTargetInput": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/TargetResourceTypeId"
                },
                "resourceArns": {
                    "$ref": "#/$defs/ResourceArnList"
                },
                "resourceTags": {
                    "$ref": "#/$defs/TagMap"
                },
                "filters": {
                    "$ref": "#/$defs/ExperimentTemplateTargetFilterInputList"
                },
                "selectionMode": {
                    "$ref": "#/$defs/ExperimentTemplateTargetSelectionMode"
                },
                "parameters": {
                    "$ref": "#/$defs/ExperimentTemplateTargetParameterMap"
                }
            }
        },
        "UpdateExperimentTemplateActionInputMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/UpdateExperimentTemplateActionInputItem"
            }
        },
        "UpdateExperimentTemplateActionInputItem": {
            "type": "object",
            "properties": {
                "actionId": {
                    "$ref": "#/$defs/ActionId"
                },
                "description": {
                    "$ref": "#/$defs/ExperimentTemplateActionDescription"
                },
                "parameters": {
                    "$ref": "#/$defs/ExperimentTemplateActionParameterMap"
                },
                "targets": {
                    "$ref": "#/$defs/ExperimentTemplateActionTargetMap"
                },
                "startAfter": {
                    "$ref": "#/$defs/ExperimentTemplateActionStartAfterList"
                }
            }
        },
        "UpdateExperimentTemplateLogConfigurationInput": {
            "type": "object",
            "properties": {
                "cloudWatchLogsConfiguration": {
                    "$ref": "#/$defs/ExperimentTemplateCloudWatchLogsLogConfigurationInput"
                },
                "s3Configuration": {
                    "$ref": "#/$defs/ExperimentTemplateS3LogConfigurationInput"
                },
                "logSchemaVersion": {
                    "$ref": "#/$defs/LogSchemaVersion"
                }
            }
        },
        "UpdateExperimentTemplateExperimentOptionsInput": {
            "type": "object",
            "properties": {
                "emptyTargetResolutionMode": {
                    "$ref": "#/$defs/EmptyTargetResolutionMode"
                }
            }
        },
        "UpdateExperimentTemplateReportConfigurationInput": {
            "type": "object",
            "properties": {
                "outputs": {
                    "$ref": "#/$defs/ExperimentTemplateReportConfigurationOutputsInput"
                },
                "dataSources": {
                    "$ref": "#/$defs/ExperimentTemplateReportConfigurationDataSourcesInput"
                },
                "preExperimentDuration": {
                    "$ref": "#/$defs/ReportConfigurationDuration"
                },
                "postExperimentDuration": {
                    "$ref": "#/$defs/ReportConfigurationDuration"
                }
            }
        },
        "UpdateExperimentTemplateResponse": {
            "type": "object",
            "properties": {
                "experimentTemplate": {
                    "$ref": "#/$defs/ExperimentTemplate"
                }
            }
        },
        "UpdateSafetyLeverStateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/SafetyLeverId"
                },
                "state": {
                    "$ref": "#/$defs/UpdateSafetyLeverStateInput"
                }
            }
        },
        "UpdateSafetyLeverStateInput": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/SafetyLeverStatusInput"
                },
                "reason": {
                    "$ref": "#/$defs/SafetyLeverStatusReason"
                }
            }
        },
        "SafetyLeverStatusInput": {
            "enum": [
                "DISENGAGED",
                "ENGAGED"
            ]
        },
        "UpdateSafetyLeverStateResponse": {
            "type": "object",
            "properties": {
                "safetyLever": {
                    "$ref": "#/$defs/SafetyLever"
                }
            }
        },
        "UpdateTargetAccountConfigurationRequest": {
            "type": "object",
            "properties": {
                "experimentTemplateId": {
                    "$ref": "#/$defs/ExperimentTemplateId"
                },
                "accountId": {
                    "$ref": "#/$defs/TargetAccountId"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "description": {
                    "$ref": "#/$defs/TargetAccountConfigurationDescription"
                }
            }
        },
        "UpdateTargetAccountConfigurationResponse": {
            "type": "object",
            "properties": {
                "targetAccountConfiguration": {
                    "$ref": "#/$defs/TargetAccountConfiguration"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://fis-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://fis.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://fis-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://fis.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://fis.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
