{
    "name": "dynamodb",
    "commands": [
        {
            "name": "BatchExecuteStatement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchExecuteStatement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchExecuteStatementOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchExecuteStatementInput"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetItem",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetItem"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetItemOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetItemInput"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchWriteItem",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchWriteItem"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchWriteItemOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchWriteItemInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateBackup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateBackup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBackupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBackupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateGlobalTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateGlobalTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateGlobalTableOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateGlobalTableInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTableOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTableInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteBackup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteBackup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBackupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBackupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteItem",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteItem"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteItemOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteItemInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteResourcePolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteResourcePolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTableOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTableInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeBackup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeBackup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeBackupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeBackupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeContinuousBackups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeContinuousBackups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeContinuousBackupsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeContinuousBackupsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeContributorInsights",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeContributorInsights"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeContributorInsightsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeContributorInsightsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeEndpoints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEndpointsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEndpointsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeExport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeExport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeExportOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeExportInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeGlobalTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeGlobalTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeGlobalTableOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeGlobalTableInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeGlobalTableSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeGlobalTableSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeGlobalTableSettingsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeGlobalTableSettingsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeImport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeImport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeImportOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeImportInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeKinesisStreamingDestination",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeKinesisStreamingDestination"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeKinesisStreamingDestinationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeKinesisStreamingDestinationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLimits",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeLimits"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLimitsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLimitsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTableOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTableInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTableReplicaAutoScaling",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeTableReplicaAutoScaling"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTableReplicaAutoScalingOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTableReplicaAutoScalingInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTimeToLive",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeTimeToLive"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTimeToLiveOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTimeToLiveInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableKinesisStreamingDestination",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisableKinesisStreamingDestination"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/KinesisStreamingDestinationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/KinesisStreamingDestinationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableKinesisStreamingDestination",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "EnableKinesisStreamingDestination"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/KinesisStreamingDestinationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/KinesisStreamingDestinationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ExecuteStatement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExecuteStatement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExecuteStatementOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExecuteStatementInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ExecuteTransaction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExecuteTransaction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExecuteTransactionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExecuteTransactionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportTableToPointInTime",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExportTableToPointInTime"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportTableToPointInTimeOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportTableToPointInTimeInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetItem",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetItem"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetItemOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetItemInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourcePolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourcePolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ImportTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportTableOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportTableInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListBackups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListBackups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBackupsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBackupsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListContributorInsights",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListContributorInsights"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListContributorInsightsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListContributorInsightsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListExports",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListExports"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListExportsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListExportsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListGlobalTables",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListGlobalTables"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListGlobalTablesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListGlobalTablesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListImports",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListImports"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListImportsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListImportsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTables",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTables"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTablesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTablesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsOfResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsOfResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsOfResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsOfResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutItem",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutItem"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutItemOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutItemInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutResourcePolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutResourcePolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "Query",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Query"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/QueryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/QueryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RestoreTableFromBackup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RestoreTableFromBackup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestoreTableFromBackupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RestoreTableFromBackupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RestoreTableToPointInTime",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RestoreTableToPointInTime"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestoreTableToPointInTimeOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RestoreTableToPointInTimeInput"
                        }
                    }
                }
            }
        },
        {
            "name": "Scan",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Scan"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ScanOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ScanInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TransactGetItems",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TransactGetItems"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TransactGetItemsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TransactGetItemsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TransactWriteItems",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TransactWriteItems"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TransactWriteItemsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TransactWriteItemsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateContinuousBackups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateContinuousBackups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateContinuousBackupsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateContinuousBackupsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateContributorInsights",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateContributorInsights"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateContributorInsightsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateContributorInsightsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateGlobalTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateGlobalTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateGlobalTableOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateGlobalTableInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateGlobalTableSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateGlobalTableSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateGlobalTableSettingsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateGlobalTableSettingsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateItem",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateItem"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateItemOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateItemInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateKinesisStreamingDestination",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateKinesisStreamingDestination"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateKinesisStreamingDestinationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateKinesisStreamingDestinationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTableOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateTableInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateTableReplicaAutoScaling",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateTableReplicaAutoScaling"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTableReplicaAutoScalingOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateTableReplicaAutoScalingInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateTimeToLive",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateTimeToLive"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTimeToLiveOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateTimeToLiveInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchExecuteStatementOutput": {
            "type": "object",
            "properties": {
                "Responses": {
                    "$ref": "#/$defs/PartiQLBatchResponse"
                },
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacityMultiple"
                }
            }
        },
        "PartiQLBatchResponse": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchStatementResponse"
            }
        },
        "BatchStatementResponse": {
            "type": "object",
            "properties": {
                "Error": {
                    "$ref": "#/$defs/BatchStatementError"
                },
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "Item": {
                    "$ref": "#/$defs/AttributeMap"
                }
            }
        },
        "BatchStatementError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/BatchStatementErrorCodeEnum"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                },
                "Item": {
                    "$ref": "#/$defs/AttributeMap"
                }
            }
        },
        "BatchStatementErrorCodeEnum": {
            "enum": [
                "ConditionalCheckFailed",
                "ItemCollectionSizeLimitExceeded",
                "RequestLimitExceeded",
                "ValidationError",
                "ProvisionedThroughputExceeded",
                "TransactionConflict",
                "ThrottlingError",
                "InternalServerError",
                "ResourceNotFound",
                "AccessDenied",
                "DuplicateItem"
            ]
        },
        "String": {
            "type": "string"
        },
        "AttributeMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "AttributeValue": {
            "type": "object",
            "properties": {
                "S": {
                    "$ref": "#/$defs/StringAttributeValue"
                },
                "N": {
                    "$ref": "#/$defs/NumberAttributeValue"
                },
                "B": {
                    "$ref": "#/$defs/BinaryAttributeValue"
                },
                "SS": {
                    "$ref": "#/$defs/StringSetAttributeValue"
                },
                "NS": {
                    "$ref": "#/$defs/NumberSetAttributeValue"
                },
                "BS": {
                    "$ref": "#/$defs/BinarySetAttributeValue"
                },
                "M": {
                    "$ref": "#/$defs/MapAttributeValue"
                },
                "L": {
                    "$ref": "#/$defs/ListAttributeValue"
                },
                "NULL": {
                    "$ref": "#/$defs/NullAttributeValue"
                },
                "BOOL": {
                    "$ref": "#/$defs/BooleanAttributeValue"
                }
            }
        },
        "StringAttributeValue": {
            "type": "string"
        },
        "NumberAttributeValue": {
            "type": "string"
        },
        "BinaryAttributeValue": {
            "type": "string",
            "format": "binary"
        },
        "StringSetAttributeValue": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StringAttributeValue"
            }
        },
        "NumberSetAttributeValue": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NumberAttributeValue"
            }
        },
        "BinarySetAttributeValue": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BinaryAttributeValue"
            }
        },
        "MapAttributeValue": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "ListAttributeValue": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "NullAttributeValue": {
            "type": "boolean"
        },
        "BooleanAttributeValue": {
            "type": "boolean"
        },
        "TableName": {
            "type": "string"
        },
        "ConsumedCapacityMultiple": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConsumedCapacity"
            }
        },
        "ConsumedCapacity": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "CapacityUnits": {
                    "$ref": "#/$defs/ConsumedCapacityUnits"
                },
                "ReadCapacityUnits": {
                    "$ref": "#/$defs/ConsumedCapacityUnits"
                },
                "WriteCapacityUnits": {
                    "$ref": "#/$defs/ConsumedCapacityUnits"
                },
                "Table": {
                    "$ref": "#/$defs/Capacity"
                },
                "LocalSecondaryIndexes": {
                    "$ref": "#/$defs/SecondaryIndexesCapacityMap"
                },
                "GlobalSecondaryIndexes": {
                    "$ref": "#/$defs/SecondaryIndexesCapacityMap"
                }
            }
        },
        "TableArn": {
            "type": "string"
        },
        "ConsumedCapacityUnits": {
            "type": "number",
            "format": "double"
        },
        "Capacity": {
            "type": "object",
            "properties": {
                "ReadCapacityUnits": {
                    "$ref": "#/$defs/ConsumedCapacityUnits"
                },
                "WriteCapacityUnits": {
                    "$ref": "#/$defs/ConsumedCapacityUnits"
                },
                "CapacityUnits": {
                    "$ref": "#/$defs/ConsumedCapacityUnits"
                }
            }
        },
        "SecondaryIndexesCapacityMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Capacity"
            }
        },
        "BatchExecuteStatementInput": {
            "type": "object",
            "properties": {
                "Statements": {
                    "$ref": "#/$defs/PartiQLBatchRequest"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                }
            }
        },
        "PartiQLBatchRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchStatementRequest"
            }
        },
        "BatchStatementRequest": {
            "type": "object",
            "properties": {
                "Statement": {
                    "$ref": "#/$defs/PartiQLStatement"
                },
                "Parameters": {
                    "$ref": "#/$defs/PreparedStatementParameters"
                },
                "ConsistentRead": {
                    "$ref": "#/$defs/ConsistentRead"
                },
                "ReturnValuesOnConditionCheckFailure": {
                    "$ref": "#/$defs/ReturnValuesOnConditionCheckFailure"
                }
            }
        },
        "PartiQLStatement": {
            "type": "string"
        },
        "PreparedStatementParameters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "ConsistentRead": {
            "type": "boolean"
        },
        "ReturnValuesOnConditionCheckFailure": {
            "enum": [
                "ALL_OLD",
                "NONE"
            ]
        },
        "ReturnConsumedCapacity": {
            "enum": [
                "INDEXES",
                "TOTAL",
                "NONE"
            ]
        },
        "BatchGetItemOutput": {
            "type": "object",
            "properties": {
                "Responses": {
                    "$ref": "#/$defs/BatchGetResponseMap"
                },
                "UnprocessedKeys": {
                    "$ref": "#/$defs/BatchGetRequestMap"
                },
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacityMultiple"
                }
            }
        },
        "BatchGetResponseMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ItemList"
            }
        },
        "ItemList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeMap"
            }
        },
        "BatchGetRequestMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/KeysAndAttributes"
            }
        },
        "KeysAndAttributes": {
            "type": "object",
            "properties": {
                "Keys": {
                    "$ref": "#/$defs/KeyList"
                },
                "AttributesToGet": {
                    "$ref": "#/$defs/AttributeNameList"
                },
                "ConsistentRead": {
                    "$ref": "#/$defs/ConsistentRead"
                },
                "ProjectionExpression": {
                    "$ref": "#/$defs/ProjectionExpression"
                },
                "ExpressionAttributeNames": {
                    "$ref": "#/$defs/ExpressionAttributeNameMap"
                }
            }
        },
        "KeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Key"
            }
        },
        "Key": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "AttributeNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeName"
            }
        },
        "AttributeName": {
            "type": "string"
        },
        "ProjectionExpression": {
            "type": "string"
        },
        "ExpressionAttributeNameMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeName"
            }
        },
        "BatchGetItemInput": {
            "type": "object",
            "properties": {
                "RequestItems": {
                    "$ref": "#/$defs/BatchGetRequestMap"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                }
            }
        },
        "BatchWriteItemOutput": {
            "type": "object",
            "properties": {
                "UnprocessedItems": {
                    "$ref": "#/$defs/BatchWriteItemRequestMap"
                },
                "ItemCollectionMetrics": {
                    "$ref": "#/$defs/ItemCollectionMetricsPerTable"
                },
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacityMultiple"
                }
            }
        },
        "BatchWriteItemRequestMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/WriteRequests"
            }
        },
        "WriteRequests": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WriteRequest"
            }
        },
        "WriteRequest": {
            "type": "object",
            "properties": {
                "PutRequest": {
                    "$ref": "#/$defs/PutRequest"
                },
                "DeleteRequest": {
                    "$ref": "#/$defs/DeleteRequest"
                }
            }
        },
        "PutRequest": {
            "type": "object",
            "properties": {
                "Item": {
                    "$ref": "#/$defs/PutItemInputAttributeMap"
                }
            }
        },
        "PutItemInputAttributeMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "DeleteRequest": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/Key"
                }
            }
        },
        "ItemCollectionMetricsPerTable": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ItemCollectionMetricsMultiple"
            }
        },
        "ItemCollectionMetricsMultiple": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ItemCollectionMetrics"
            }
        },
        "ItemCollectionMetrics": {
            "type": "object",
            "properties": {
                "ItemCollectionKey": {
                    "$ref": "#/$defs/ItemCollectionKeyAttributeMap"
                },
                "SizeEstimateRangeGB": {
                    "$ref": "#/$defs/ItemCollectionSizeEstimateRange"
                }
            }
        },
        "ItemCollectionKeyAttributeMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "ItemCollectionSizeEstimateRange": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ItemCollectionSizeEstimateBound"
            }
        },
        "ItemCollectionSizeEstimateBound": {
            "type": "number",
            "format": "double"
        },
        "BatchWriteItemInput": {
            "type": "object",
            "properties": {
                "RequestItems": {
                    "$ref": "#/$defs/BatchWriteItemRequestMap"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                },
                "ReturnItemCollectionMetrics": {
                    "$ref": "#/$defs/ReturnItemCollectionMetrics"
                }
            }
        },
        "ReturnItemCollectionMetrics": {
            "enum": [
                "SIZE",
                "NONE"
            ]
        },
        "CreateBackupOutput": {
            "type": "object",
            "properties": {
                "BackupDetails": {
                    "$ref": "#/$defs/BackupDetails"
                }
            }
        },
        "BackupDetails": {
            "type": "object",
            "properties": {
                "BackupArn": {
                    "$ref": "#/$defs/BackupArn"
                },
                "BackupName": {
                    "$ref": "#/$defs/BackupName"
                },
                "BackupSizeBytes": {
                    "$ref": "#/$defs/BackupSizeBytes"
                },
                "BackupStatus": {
                    "$ref": "#/$defs/BackupStatus"
                },
                "BackupType": {
                    "$ref": "#/$defs/BackupType"
                },
                "BackupCreationDateTime": {
                    "$ref": "#/$defs/BackupCreationDateTime"
                },
                "BackupExpiryDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "BackupArn": {
            "type": "string"
        },
        "BackupName": {
            "type": "string"
        },
        "BackupSizeBytes": {
            "type": "integer",
            "format": "int64"
        },
        "BackupStatus": {
            "enum": [
                "CREATING",
                "DELETED",
                "AVAILABLE"
            ]
        },
        "BackupType": {
            "enum": [
                "USER",
                "SYSTEM",
                "AWS_BACKUP"
            ]
        },
        "BackupCreationDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "Date": {
            "type": "string",
            "format": "date-time"
        },
        "CreateBackupInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "BackupName": {
                    "$ref": "#/$defs/BackupName"
                }
            }
        },
        "CreateGlobalTableOutput": {
            "type": "object",
            "properties": {
                "GlobalTableDescription": {
                    "$ref": "#/$defs/GlobalTableDescription"
                }
            }
        },
        "GlobalTableDescription": {
            "type": "object",
            "properties": {
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicaDescriptionList"
                },
                "GlobalTableArn": {
                    "$ref": "#/$defs/GlobalTableArnString"
                },
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "GlobalTableStatus": {
                    "$ref": "#/$defs/GlobalTableStatus"
                },
                "GlobalTableName": {
                    "$ref": "#/$defs/TableName"
                }
            }
        },
        "ReplicaDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaDescription"
            }
        },
        "ReplicaDescription": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "ReplicaStatus": {
                    "$ref": "#/$defs/ReplicaStatus"
                },
                "ReplicaStatusDescription": {
                    "$ref": "#/$defs/ReplicaStatusDescription"
                },
                "ReplicaStatusPercentProgress": {
                    "$ref": "#/$defs/ReplicaStatusPercentProgress"
                },
                "KMSMasterKeyId": {
                    "$ref": "#/$defs/KMSMasterKeyId"
                },
                "ProvisionedThroughputOverride": {
                    "$ref": "#/$defs/ProvisionedThroughputOverride"
                },
                "OnDemandThroughputOverride": {
                    "$ref": "#/$defs/OnDemandThroughputOverride"
                },
                "GlobalSecondaryIndexes": {
                    "$ref": "#/$defs/ReplicaGlobalSecondaryIndexDescriptionList"
                },
                "ReplicaInaccessibleDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "ReplicaTableClassSummary": {
                    "$ref": "#/$defs/TableClassSummary"
                }
            }
        },
        "RegionName": {
            "type": "string"
        },
        "ReplicaStatus": {
            "enum": [
                "CREATING",
                "CREATION_FAILED",
                "UPDATING",
                "DELETING",
                "ACTIVE",
                "REGION_DISABLED",
                "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
            ]
        },
        "ReplicaStatusDescription": {
            "type": "string"
        },
        "ReplicaStatusPercentProgress": {
            "type": "string"
        },
        "KMSMasterKeyId": {
            "type": "string"
        },
        "ProvisionedThroughputOverride": {
            "type": "object",
            "properties": {
                "ReadCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                }
            }
        },
        "PositiveLongObject": {
            "type": "integer",
            "format": "int64"
        },
        "OnDemandThroughputOverride": {
            "type": "object",
            "properties": {
                "MaxReadRequestUnits": {
                    "$ref": "#/$defs/LongObject"
                }
            }
        },
        "LongObject": {
            "type": "integer",
            "format": "int64"
        },
        "ReplicaGlobalSecondaryIndexDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaGlobalSecondaryIndexDescription"
            }
        },
        "ReplicaGlobalSecondaryIndexDescription": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "ProvisionedThroughputOverride": {
                    "$ref": "#/$defs/ProvisionedThroughputOverride"
                },
                "OnDemandThroughputOverride": {
                    "$ref": "#/$defs/OnDemandThroughputOverride"
                }
            }
        },
        "IndexName": {
            "type": "string"
        },
        "TableClassSummary": {
            "type": "object",
            "properties": {
                "TableClass": {
                    "$ref": "#/$defs/TableClass"
                },
                "LastUpdateDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "TableClass": {
            "enum": [
                "STANDARD",
                "STANDARD_INFREQUENT_ACCESS"
            ]
        },
        "GlobalTableArnString": {
            "type": "string"
        },
        "GlobalTableStatus": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "DELETING",
                "UPDATING"
            ]
        },
        "CreateGlobalTableInput": {
            "type": "object",
            "properties": {
                "GlobalTableName": {
                    "$ref": "#/$defs/TableName"
                },
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicaList"
                }
            }
        },
        "ReplicaList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Replica"
            }
        },
        "Replica": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                }
            }
        },
        "CreateTableOutput": {
            "type": "object",
            "properties": {
                "TableDescription": {
                    "$ref": "#/$defs/TableDescription"
                }
            }
        },
        "TableDescription": {
            "type": "object",
            "properties": {
                "AttributeDefinitions": {
                    "$ref": "#/$defs/AttributeDefinitions"
                },
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "KeySchema": {
                    "$ref": "#/$defs/KeySchema"
                },
                "TableStatus": {
                    "$ref": "#/$defs/TableStatus"
                },
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughputDescription"
                },
                "TableSizeBytes": {
                    "$ref": "#/$defs/LongObject"
                },
                "ItemCount": {
                    "$ref": "#/$defs/LongObject"
                },
                "TableArn": {
                    "$ref": "#/$defs/String"
                },
                "TableId": {
                    "$ref": "#/$defs/TableId"
                },
                "BillingModeSummary": {
                    "$ref": "#/$defs/BillingModeSummary"
                },
                "LocalSecondaryIndexes": {
                    "$ref": "#/$defs/LocalSecondaryIndexDescriptionList"
                },
                "GlobalSecondaryIndexes": {
                    "$ref": "#/$defs/GlobalSecondaryIndexDescriptionList"
                },
                "StreamSpecification": {
                    "$ref": "#/$defs/StreamSpecification"
                },
                "LatestStreamLabel": {
                    "$ref": "#/$defs/String"
                },
                "LatestStreamArn": {
                    "$ref": "#/$defs/StreamArn"
                },
                "GlobalTableVersion": {
                    "$ref": "#/$defs/String"
                },
                "Replicas": {
                    "$ref": "#/$defs/ReplicaDescriptionList"
                },
                "RestoreSummary": {
                    "$ref": "#/$defs/RestoreSummary"
                },
                "SSEDescription": {
                    "$ref": "#/$defs/SSEDescription"
                },
                "ArchivalSummary": {
                    "$ref": "#/$defs/ArchivalSummary"
                },
                "TableClassSummary": {
                    "$ref": "#/$defs/TableClassSummary"
                },
                "DeletionProtectionEnabled": {
                    "$ref": "#/$defs/DeletionProtectionEnabled"
                },
                "OnDemandThroughput": {
                    "$ref": "#/$defs/OnDemandThroughput"
                }
            }
        },
        "AttributeDefinitions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeDefinition"
            }
        },
        "AttributeDefinition": {
            "type": "object",
            "properties": {
                "AttributeName": {
                    "$ref": "#/$defs/KeySchemaAttributeName"
                },
                "AttributeType": {
                    "$ref": "#/$defs/ScalarAttributeType"
                }
            }
        },
        "KeySchemaAttributeName": {
            "type": "string"
        },
        "ScalarAttributeType": {
            "enum": [
                "S",
                "N",
                "B"
            ]
        },
        "KeySchema": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeySchemaElement"
            }
        },
        "KeySchemaElement": {
            "type": "object",
            "properties": {
                "AttributeName": {
                    "$ref": "#/$defs/KeySchemaAttributeName"
                },
                "KeyType": {
                    "$ref": "#/$defs/KeyType"
                }
            }
        },
        "KeyType": {
            "enum": [
                "HASH",
                "RANGE"
            ]
        },
        "TableStatus": {
            "enum": [
                "CREATING",
                "UPDATING",
                "DELETING",
                "ACTIVE",
                "INACCESSIBLE_ENCRYPTION_CREDENTIALS",
                "ARCHIVING",
                "ARCHIVED"
            ]
        },
        "ProvisionedThroughputDescription": {
            "type": "object",
            "properties": {
                "LastIncreaseDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "LastDecreaseDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "NumberOfDecreasesToday": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "ReadCapacityUnits": {
                    "$ref": "#/$defs/NonNegativeLongObject"
                },
                "WriteCapacityUnits": {
                    "$ref": "#/$defs/NonNegativeLongObject"
                }
            }
        },
        "NonNegativeLongObject": {
            "type": "integer",
            "format": "int64"
        },
        "TableId": {
            "type": "string"
        },
        "BillingModeSummary": {
            "type": "object",
            "properties": {
                "BillingMode": {
                    "$ref": "#/$defs/BillingMode"
                },
                "LastUpdateToPayPerRequestDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "BillingMode": {
            "enum": [
                "PROVISIONED",
                "PAY_PER_REQUEST"
            ]
        },
        "LocalSecondaryIndexDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalSecondaryIndexDescription"
            }
        },
        "LocalSecondaryIndexDescription": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "KeySchema": {
                    "$ref": "#/$defs/KeySchema"
                },
                "Projection": {
                    "$ref": "#/$defs/Projection"
                },
                "IndexSizeBytes": {
                    "$ref": "#/$defs/LongObject"
                },
                "ItemCount": {
                    "$ref": "#/$defs/LongObject"
                },
                "IndexArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Projection": {
            "type": "object",
            "properties": {
                "ProjectionType": {
                    "$ref": "#/$defs/ProjectionType"
                },
                "NonKeyAttributes": {
                    "$ref": "#/$defs/NonKeyAttributeNameList"
                }
            }
        },
        "ProjectionType": {
            "enum": [
                "ALL",
                "KEYS_ONLY",
                "INCLUDE"
            ]
        },
        "NonKeyAttributeNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonKeyAttributeName"
            }
        },
        "NonKeyAttributeName": {
            "type": "string"
        },
        "GlobalSecondaryIndexDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlobalSecondaryIndexDescription"
            }
        },
        "GlobalSecondaryIndexDescription": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "KeySchema": {
                    "$ref": "#/$defs/KeySchema"
                },
                "Projection": {
                    "$ref": "#/$defs/Projection"
                },
                "IndexStatus": {
                    "$ref": "#/$defs/IndexStatus"
                },
                "Backfilling": {
                    "$ref": "#/$defs/Backfilling"
                },
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughputDescription"
                },
                "IndexSizeBytes": {
                    "$ref": "#/$defs/LongObject"
                },
                "ItemCount": {
                    "$ref": "#/$defs/LongObject"
                },
                "IndexArn": {
                    "$ref": "#/$defs/String"
                },
                "OnDemandThroughput": {
                    "$ref": "#/$defs/OnDemandThroughput"
                }
            }
        },
        "IndexStatus": {
            "enum": [
                "CREATING",
                "UPDATING",
                "DELETING",
                "ACTIVE"
            ]
        },
        "Backfilling": {
            "type": "boolean"
        },
        "OnDemandThroughput": {
            "type": "object",
            "properties": {
                "MaxReadRequestUnits": {
                    "$ref": "#/$defs/LongObject"
                },
                "MaxWriteRequestUnits": {
                    "$ref": "#/$defs/LongObject"
                }
            }
        },
        "StreamSpecification": {
            "type": "object",
            "properties": {
                "StreamEnabled": {
                    "$ref": "#/$defs/StreamEnabled"
                },
                "StreamViewType": {
                    "$ref": "#/$defs/StreamViewType"
                }
            }
        },
        "StreamEnabled": {
            "type": "boolean"
        },
        "StreamViewType": {
            "enum": [
                "NEW_IMAGE",
                "OLD_IMAGE",
                "NEW_AND_OLD_IMAGES",
                "KEYS_ONLY"
            ]
        },
        "StreamArn": {
            "type": "string"
        },
        "RestoreSummary": {
            "type": "object",
            "properties": {
                "SourceBackupArn": {
                    "$ref": "#/$defs/BackupArn"
                },
                "SourceTableArn": {
                    "$ref": "#/$defs/TableArn"
                },
                "RestoreDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "RestoreInProgress": {
                    "$ref": "#/$defs/RestoreInProgress"
                }
            }
        },
        "RestoreInProgress": {
            "type": "boolean"
        },
        "SSEDescription": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/SSEStatus"
                },
                "SSEType": {
                    "$ref": "#/$defs/SSEType"
                },
                "KMSMasterKeyArn": {
                    "$ref": "#/$defs/KMSMasterKeyArn"
                },
                "InaccessibleEncryptionDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "SSEStatus": {
            "enum": [
                "ENABLING",
                "ENABLED",
                "DISABLING",
                "DISABLED",
                "UPDATING"
            ]
        },
        "SSEType": {
            "enum": [
                "AES256",
                "KMS"
            ]
        },
        "KMSMasterKeyArn": {
            "type": "string"
        },
        "ArchivalSummary": {
            "type": "object",
            "properties": {
                "ArchivalDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "ArchivalReason": {
                    "$ref": "#/$defs/ArchivalReason"
                },
                "ArchivalBackupArn": {
                    "$ref": "#/$defs/BackupArn"
                }
            }
        },
        "ArchivalReason": {
            "type": "string"
        },
        "DeletionProtectionEnabled": {
            "type": "boolean"
        },
        "CreateTableInput": {
            "type": "object",
            "properties": {
                "AttributeDefinitions": {
                    "$ref": "#/$defs/AttributeDefinitions"
                },
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "KeySchema": {
                    "$ref": "#/$defs/KeySchema"
                },
                "LocalSecondaryIndexes": {
                    "$ref": "#/$defs/LocalSecondaryIndexList"
                },
                "GlobalSecondaryIndexes": {
                    "$ref": "#/$defs/GlobalSecondaryIndexList"
                },
                "BillingMode": {
                    "$ref": "#/$defs/BillingMode"
                },
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "StreamSpecification": {
                    "$ref": "#/$defs/StreamSpecification"
                },
                "SSESpecification": {
                    "$ref": "#/$defs/SSESpecification"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "TableClass": {
                    "$ref": "#/$defs/TableClass"
                },
                "DeletionProtectionEnabled": {
                    "$ref": "#/$defs/DeletionProtectionEnabled"
                },
                "ResourcePolicy": {
                    "$ref": "#/$defs/ResourcePolicy"
                },
                "OnDemandThroughput": {
                    "$ref": "#/$defs/OnDemandThroughput"
                }
            }
        },
        "LocalSecondaryIndexList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalSecondaryIndex"
            }
        },
        "LocalSecondaryIndex": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "KeySchema": {
                    "$ref": "#/$defs/KeySchema"
                },
                "Projection": {
                    "$ref": "#/$defs/Projection"
                }
            }
        },
        "GlobalSecondaryIndexList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlobalSecondaryIndex"
            }
        },
        "GlobalSecondaryIndex": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "KeySchema": {
                    "$ref": "#/$defs/KeySchema"
                },
                "Projection": {
                    "$ref": "#/$defs/Projection"
                },
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "OnDemandThroughput": {
                    "$ref": "#/$defs/OnDemandThroughput"
                }
            }
        },
        "ProvisionedThroughput": {
            "type": "object",
            "properties": {
                "ReadCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "WriteCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                }
            }
        },
        "SSESpecification": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/SSEEnabled"
                },
                "SSEType": {
                    "$ref": "#/$defs/SSEType"
                },
                "KMSMasterKeyId": {
                    "$ref": "#/$defs/KMSMasterKeyId"
                }
            }
        },
        "SSEEnabled": {
            "type": "boolean"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKeyString"
                },
                "Value": {
                    "$ref": "#/$defs/TagValueString"
                }
            }
        },
        "TagKeyString": {
            "type": "string"
        },
        "TagValueString": {
            "type": "string"
        },
        "ResourcePolicy": {
            "type": "string"
        },
        "DeleteBackupOutput": {
            "type": "object",
            "properties": {
                "BackupDescription": {
                    "$ref": "#/$defs/BackupDescription"
                }
            }
        },
        "BackupDescription": {
            "type": "object",
            "properties": {
                "BackupDetails": {
                    "$ref": "#/$defs/BackupDetails"
                },
                "SourceTableDetails": {
                    "$ref": "#/$defs/SourceTableDetails"
                },
                "SourceTableFeatureDetails": {
                    "$ref": "#/$defs/SourceTableFeatureDetails"
                }
            }
        },
        "SourceTableDetails": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "TableId": {
                    "$ref": "#/$defs/TableId"
                },
                "TableArn": {
                    "$ref": "#/$defs/TableArn"
                },
                "TableSizeBytes": {
                    "$ref": "#/$defs/LongObject"
                },
                "KeySchema": {
                    "$ref": "#/$defs/KeySchema"
                },
                "TableCreationDateTime": {
                    "$ref": "#/$defs/TableCreationDateTime"
                },
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "OnDemandThroughput": {
                    "$ref": "#/$defs/OnDemandThroughput"
                },
                "ItemCount": {
                    "$ref": "#/$defs/ItemCount"
                },
                "BillingMode": {
                    "$ref": "#/$defs/BillingMode"
                }
            }
        },
        "TableCreationDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "ItemCount": {
            "type": "integer",
            "format": "int64"
        },
        "SourceTableFeatureDetails": {
            "type": "object",
            "properties": {
                "LocalSecondaryIndexes": {
                    "$ref": "#/$defs/LocalSecondaryIndexes"
                },
                "GlobalSecondaryIndexes": {
                    "$ref": "#/$defs/GlobalSecondaryIndexes"
                },
                "StreamDescription": {
                    "$ref": "#/$defs/StreamSpecification"
                },
                "TimeToLiveDescription": {
                    "$ref": "#/$defs/TimeToLiveDescription"
                },
                "SSEDescription": {
                    "$ref": "#/$defs/SSEDescription"
                }
            }
        },
        "LocalSecondaryIndexes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalSecondaryIndexInfo"
            }
        },
        "LocalSecondaryIndexInfo": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "KeySchema": {
                    "$ref": "#/$defs/KeySchema"
                },
                "Projection": {
                    "$ref": "#/$defs/Projection"
                }
            }
        },
        "GlobalSecondaryIndexes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlobalSecondaryIndexInfo"
            }
        },
        "GlobalSecondaryIndexInfo": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "KeySchema": {
                    "$ref": "#/$defs/KeySchema"
                },
                "Projection": {
                    "$ref": "#/$defs/Projection"
                },
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "OnDemandThroughput": {
                    "$ref": "#/$defs/OnDemandThroughput"
                }
            }
        },
        "TimeToLiveDescription": {
            "type": "object",
            "properties": {
                "TimeToLiveStatus": {
                    "$ref": "#/$defs/TimeToLiveStatus"
                },
                "AttributeName": {
                    "$ref": "#/$defs/TimeToLiveAttributeName"
                }
            }
        },
        "TimeToLiveStatus": {
            "enum": [
                "ENABLING",
                "DISABLING",
                "ENABLED",
                "DISABLED"
            ]
        },
        "TimeToLiveAttributeName": {
            "type": "string"
        },
        "DeleteBackupInput": {
            "type": "object",
            "properties": {
                "BackupArn": {
                    "$ref": "#/$defs/BackupArn"
                }
            }
        },
        "DeleteItemOutput": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/AttributeMap"
                },
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacity"
                },
                "ItemCollectionMetrics": {
                    "$ref": "#/$defs/ItemCollectionMetrics"
                }
            }
        },
        "DeleteItemInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "Expected": {
                    "$ref": "#/$defs/ExpectedAttributeMap"
                },
                "ConditionalOperator": {
                    "$ref": "#/$defs/ConditionalOperator"
                },
                "ReturnValues": {
                    "$ref": "#/$defs/ReturnValue"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                },
                "ReturnItemCollectionMetrics": {
                    "$ref": "#/$defs/ReturnItemCollectionMetrics"
                },
                "ConditionExpression": {
                    "$ref": "#/$defs/ConditionExpression"
                },
                "ExpressionAttributeNames": {
                    "$ref": "#/$defs/ExpressionAttributeNameMap"
                },
                "ExpressionAttributeValues": {
                    "$ref": "#/$defs/ExpressionAttributeValueMap"
                },
                "ReturnValuesOnConditionCheckFailure": {
                    "$ref": "#/$defs/ReturnValuesOnConditionCheckFailure"
                }
            }
        },
        "ExpectedAttributeMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ExpectedAttributeValue"
            }
        },
        "ExpectedAttributeValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "Exists": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "ComparisonOperator": {
                    "$ref": "#/$defs/ComparisonOperator"
                },
                "AttributeValueList": {
                    "$ref": "#/$defs/AttributeValueList"
                }
            }
        },
        "BooleanObject": {
            "type": "boolean"
        },
        "ComparisonOperator": {
            "enum": [
                "EQ",
                "NE",
                "IN",
                "LE",
                "LT",
                "GE",
                "GT",
                "BETWEEN",
                "NOT_NULL",
                "NULL",
                "CONTAINS",
                "NOT_CONTAINS",
                "BEGINS_WITH"
            ]
        },
        "AttributeValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "ConditionalOperator": {
            "enum": [
                "AND",
                "OR"
            ]
        },
        "ReturnValue": {
            "enum": [
                "NONE",
                "ALL_OLD",
                "UPDATED_OLD",
                "ALL_NEW",
                "UPDATED_NEW"
            ]
        },
        "ConditionExpression": {
            "type": "string"
        },
        "ExpressionAttributeValueMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "DeleteResourcePolicyOutput": {
            "type": "object",
            "properties": {
                "RevisionId": {
                    "$ref": "#/$defs/PolicyRevisionId"
                }
            }
        },
        "PolicyRevisionId": {
            "type": "string"
        },
        "DeleteResourcePolicyInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                },
                "ExpectedRevisionId": {
                    "$ref": "#/$defs/PolicyRevisionId"
                }
            }
        },
        "ResourceArnString": {
            "type": "string"
        },
        "DeleteTableOutput": {
            "type": "object",
            "properties": {
                "TableDescription": {
                    "$ref": "#/$defs/TableDescription"
                }
            }
        },
        "DeleteTableInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                }
            }
        },
        "DescribeBackupOutput": {
            "type": "object",
            "properties": {
                "BackupDescription": {
                    "$ref": "#/$defs/BackupDescription"
                }
            }
        },
        "DescribeBackupInput": {
            "type": "object",
            "properties": {
                "BackupArn": {
                    "$ref": "#/$defs/BackupArn"
                }
            }
        },
        "DescribeContinuousBackupsOutput": {
            "type": "object",
            "properties": {
                "ContinuousBackupsDescription": {
                    "$ref": "#/$defs/ContinuousBackupsDescription"
                }
            }
        },
        "ContinuousBackupsDescription": {
            "type": "object",
            "properties": {
                "ContinuousBackupsStatus": {
                    "$ref": "#/$defs/ContinuousBackupsStatus"
                },
                "PointInTimeRecoveryDescription": {
                    "$ref": "#/$defs/PointInTimeRecoveryDescription"
                }
            }
        },
        "ContinuousBackupsStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "PointInTimeRecoveryDescription": {
            "type": "object",
            "properties": {
                "PointInTimeRecoveryStatus": {
                    "$ref": "#/$defs/PointInTimeRecoveryStatus"
                },
                "EarliestRestorableDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "LatestRestorableDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "PointInTimeRecoveryStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "DescribeContinuousBackupsInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                }
            }
        },
        "DescribeContributorInsightsOutput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "ContributorInsightsRuleList": {
                    "$ref": "#/$defs/ContributorInsightsRuleList"
                },
                "ContributorInsightsStatus": {
                    "$ref": "#/$defs/ContributorInsightsStatus"
                },
                "LastUpdateDateTime": {
                    "$ref": "#/$defs/LastUpdateDateTime"
                },
                "FailureException": {
                    "$ref": "#/$defs/FailureException"
                }
            }
        },
        "ContributorInsightsRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContributorInsightsRule"
            }
        },
        "ContributorInsightsRule": {
            "type": "string"
        },
        "ContributorInsightsStatus": {
            "enum": [
                "ENABLING",
                "ENABLED",
                "DISABLING",
                "DISABLED",
                "FAILED"
            ]
        },
        "LastUpdateDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "FailureException": {
            "type": "object",
            "properties": {
                "ExceptionName": {
                    "$ref": "#/$defs/ExceptionName"
                },
                "ExceptionDescription": {
                    "$ref": "#/$defs/ExceptionDescription"
                }
            }
        },
        "ExceptionName": {
            "type": "string"
        },
        "ExceptionDescription": {
            "type": "string"
        },
        "DescribeContributorInsightsInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                }
            }
        },
        "DescribeEndpointsResponse": {
            "type": "object",
            "properties": {
                "Endpoints": {
                    "$ref": "#/$defs/Endpoints"
                }
            }
        },
        "Endpoints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Endpoint"
            }
        },
        "Endpoint": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/$defs/String"
                },
                "CachePeriodInMinutes": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "DescribeEndpointsRequest": {
            "type": "object",
            "properties": {}
        },
        "DescribeExportOutput": {
            "type": "object",
            "properties": {
                "ExportDescription": {
                    "$ref": "#/$defs/ExportDescription"
                }
            }
        },
        "ExportDescription": {
            "type": "object",
            "properties": {
                "ExportArn": {
                    "$ref": "#/$defs/ExportArn"
                },
                "ExportStatus": {
                    "$ref": "#/$defs/ExportStatus"
                },
                "StartTime": {
                    "$ref": "#/$defs/ExportStartTime"
                },
                "EndTime": {
                    "$ref": "#/$defs/ExportEndTime"
                },
                "ExportManifest": {
                    "$ref": "#/$defs/ExportManifest"
                },
                "TableArn": {
                    "$ref": "#/$defs/TableArn"
                },
                "TableId": {
                    "$ref": "#/$defs/TableId"
                },
                "ExportTime": {
                    "$ref": "#/$defs/ExportTime"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "S3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "S3BucketOwner": {
                    "$ref": "#/$defs/S3BucketOwner"
                },
                "S3Prefix": {
                    "$ref": "#/$defs/S3Prefix"
                },
                "S3SseAlgorithm": {
                    "$ref": "#/$defs/S3SseAlgorithm"
                },
                "S3SseKmsKeyId": {
                    "$ref": "#/$defs/S3SseKmsKeyId"
                },
                "FailureCode": {
                    "$ref": "#/$defs/FailureCode"
                },
                "FailureMessage": {
                    "$ref": "#/$defs/FailureMessage"
                },
                "ExportFormat": {
                    "$ref": "#/$defs/ExportFormat"
                },
                "BilledSizeBytes": {
                    "$ref": "#/$defs/BilledSizeBytes"
                },
                "ItemCount": {
                    "$ref": "#/$defs/ItemCount"
                },
                "ExportType": {
                    "$ref": "#/$defs/ExportType"
                },
                "IncrementalExportSpecification": {
                    "$ref": "#/$defs/IncrementalExportSpecification"
                }
            }
        },
        "ExportArn": {
            "type": "string"
        },
        "ExportStatus": {
            "enum": [
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED"
            ]
        },
        "ExportStartTime": {
            "type": "string",
            "format": "date-time"
        },
        "ExportEndTime": {
            "type": "string",
            "format": "date-time"
        },
        "ExportManifest": {
            "type": "string"
        },
        "ExportTime": {
            "type": "string",
            "format": "date-time"
        },
        "ClientToken": {
            "type": "string"
        },
        "S3Bucket": {
            "type": "string"
        },
        "S3BucketOwner": {
            "type": "string"
        },
        "S3Prefix": {
            "type": "string"
        },
        "S3SseAlgorithm": {
            "enum": [
                "AES256",
                "KMS"
            ]
        },
        "S3SseKmsKeyId": {
            "type": "string"
        },
        "FailureCode": {
            "type": "string"
        },
        "FailureMessage": {
            "type": "string"
        },
        "ExportFormat": {
            "enum": [
                "DYNAMODB_JSON",
                "ION"
            ]
        },
        "BilledSizeBytes": {
            "type": "integer",
            "format": "int64"
        },
        "ExportType": {
            "enum": [
                "FULL_EXPORT",
                "INCREMENTAL_EXPORT"
            ]
        },
        "IncrementalExportSpecification": {
            "type": "object",
            "properties": {
                "ExportFromTime": {
                    "$ref": "#/$defs/ExportFromTime"
                },
                "ExportToTime": {
                    "$ref": "#/$defs/ExportToTime"
                },
                "ExportViewType": {
                    "$ref": "#/$defs/ExportViewType"
                }
            }
        },
        "ExportFromTime": {
            "type": "string",
            "format": "date-time"
        },
        "ExportToTime": {
            "type": "string",
            "format": "date-time"
        },
        "ExportViewType": {
            "enum": [
                "NEW_IMAGE",
                "NEW_AND_OLD_IMAGES"
            ]
        },
        "DescribeExportInput": {
            "type": "object",
            "properties": {
                "ExportArn": {
                    "$ref": "#/$defs/ExportArn"
                }
            }
        },
        "DescribeGlobalTableOutput": {
            "type": "object",
            "properties": {
                "GlobalTableDescription": {
                    "$ref": "#/$defs/GlobalTableDescription"
                }
            }
        },
        "DescribeGlobalTableInput": {
            "type": "object",
            "properties": {
                "GlobalTableName": {
                    "$ref": "#/$defs/TableName"
                }
            }
        },
        "DescribeGlobalTableSettingsOutput": {
            "type": "object",
            "properties": {
                "GlobalTableName": {
                    "$ref": "#/$defs/TableName"
                },
                "ReplicaSettings": {
                    "$ref": "#/$defs/ReplicaSettingsDescriptionList"
                }
            }
        },
        "ReplicaSettingsDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaSettingsDescription"
            }
        },
        "ReplicaSettingsDescription": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "ReplicaStatus": {
                    "$ref": "#/$defs/ReplicaStatus"
                },
                "ReplicaBillingModeSummary": {
                    "$ref": "#/$defs/BillingModeSummary"
                },
                "ReplicaProvisionedReadCapacityUnits": {
                    "$ref": "#/$defs/NonNegativeLongObject"
                },
                "ReplicaProvisionedReadCapacityAutoScalingSettings": {
                    "$ref": "#/$defs/AutoScalingSettingsDescription"
                },
                "ReplicaProvisionedWriteCapacityUnits": {
                    "$ref": "#/$defs/NonNegativeLongObject"
                },
                "ReplicaProvisionedWriteCapacityAutoScalingSettings": {
                    "$ref": "#/$defs/AutoScalingSettingsDescription"
                },
                "ReplicaGlobalSecondaryIndexSettings": {
                    "$ref": "#/$defs/ReplicaGlobalSecondaryIndexSettingsDescriptionList"
                },
                "ReplicaTableClassSummary": {
                    "$ref": "#/$defs/TableClassSummary"
                }
            }
        },
        "AutoScalingSettingsDescription": {
            "type": "object",
            "properties": {
                "MinimumUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "MaximumUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "AutoScalingDisabled": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "AutoScalingRoleArn": {
                    "$ref": "#/$defs/String"
                },
                "ScalingPolicies": {
                    "$ref": "#/$defs/AutoScalingPolicyDescriptionList"
                }
            }
        },
        "AutoScalingPolicyDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoScalingPolicyDescription"
            }
        },
        "AutoScalingPolicyDescription": {
            "type": "object",
            "properties": {
                "PolicyName": {
                    "$ref": "#/$defs/AutoScalingPolicyName"
                },
                "TargetTrackingScalingPolicyConfiguration": {
                    "$ref": "#/$defs/AutoScalingTargetTrackingScalingPolicyConfigurationDescription"
                }
            }
        },
        "AutoScalingPolicyName": {
            "type": "string"
        },
        "AutoScalingTargetTrackingScalingPolicyConfigurationDescription": {
            "type": "object",
            "properties": {
                "DisableScaleIn": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "ScaleInCooldown": {
                    "$ref": "#/$defs/IntegerObject"
                },
                "ScaleOutCooldown": {
                    "$ref": "#/$defs/IntegerObject"
                },
                "TargetValue": {
                    "$ref": "#/$defs/DoubleObject"
                }
            }
        },
        "IntegerObject": {
            "type": "integer",
            "format": "int32"
        },
        "DoubleObject": {
            "type": "number",
            "format": "double"
        },
        "ReplicaGlobalSecondaryIndexSettingsDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaGlobalSecondaryIndexSettingsDescription"
            }
        },
        "ReplicaGlobalSecondaryIndexSettingsDescription": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "IndexStatus": {
                    "$ref": "#/$defs/IndexStatus"
                },
                "ProvisionedReadCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "ProvisionedReadCapacityAutoScalingSettings": {
                    "$ref": "#/$defs/AutoScalingSettingsDescription"
                },
                "ProvisionedWriteCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "ProvisionedWriteCapacityAutoScalingSettings": {
                    "$ref": "#/$defs/AutoScalingSettingsDescription"
                }
            }
        },
        "DescribeGlobalTableSettingsInput": {
            "type": "object",
            "properties": {
                "GlobalTableName": {
                    "$ref": "#/$defs/TableName"
                }
            }
        },
        "DescribeImportOutput": {
            "type": "object",
            "properties": {
                "ImportTableDescription": {
                    "$ref": "#/$defs/ImportTableDescription"
                }
            }
        },
        "ImportTableDescription": {
            "type": "object",
            "properties": {
                "ImportArn": {
                    "$ref": "#/$defs/ImportArn"
                },
                "ImportStatus": {
                    "$ref": "#/$defs/ImportStatus"
                },
                "TableArn": {
                    "$ref": "#/$defs/TableArn"
                },
                "TableId": {
                    "$ref": "#/$defs/TableId"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "S3BucketSource": {
                    "$ref": "#/$defs/S3BucketSource"
                },
                "ErrorCount": {
                    "$ref": "#/$defs/ErrorCount"
                },
                "CloudWatchLogGroupArn": {
                    "$ref": "#/$defs/CloudWatchLogGroupArn"
                },
                "InputFormat": {
                    "$ref": "#/$defs/InputFormat"
                },
                "InputFormatOptions": {
                    "$ref": "#/$defs/InputFormatOptions"
                },
                "InputCompressionType": {
                    "$ref": "#/$defs/InputCompressionType"
                },
                "TableCreationParameters": {
                    "$ref": "#/$defs/TableCreationParameters"
                },
                "StartTime": {
                    "$ref": "#/$defs/ImportStartTime"
                },
                "EndTime": {
                    "$ref": "#/$defs/ImportEndTime"
                },
                "ProcessedSizeBytes": {
                    "$ref": "#/$defs/LongObject"
                },
                "ProcessedItemCount": {
                    "$ref": "#/$defs/ProcessedItemCount"
                },
                "ImportedItemCount": {
                    "$ref": "#/$defs/ImportedItemCount"
                },
                "FailureCode": {
                    "$ref": "#/$defs/FailureCode"
                },
                "FailureMessage": {
                    "$ref": "#/$defs/FailureMessage"
                }
            }
        },
        "ImportArn": {
            "type": "string"
        },
        "ImportStatus": {
            "enum": [
                "IN_PROGRESS",
                "COMPLETED",
                "CANCELLING",
                "CANCELLED",
                "FAILED"
            ]
        },
        "S3BucketSource": {
            "type": "object",
            "properties": {
                "S3BucketOwner": {
                    "$ref": "#/$defs/S3BucketOwner"
                },
                "S3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "S3KeyPrefix": {
                    "$ref": "#/$defs/S3Prefix"
                }
            }
        },
        "ErrorCount": {
            "type": "integer",
            "format": "int64"
        },
        "CloudWatchLogGroupArn": {
            "type": "string"
        },
        "InputFormat": {
            "enum": [
                "DYNAMODB_JSON",
                "ION",
                "CSV"
            ]
        },
        "InputFormatOptions": {
            "type": "object",
            "properties": {
                "Csv": {
                    "$ref": "#/$defs/CsvOptions"
                }
            }
        },
        "CsvOptions": {
            "type": "object",
            "properties": {
                "Delimiter": {
                    "$ref": "#/$defs/CsvDelimiter"
                },
                "HeaderList": {
                    "$ref": "#/$defs/CsvHeaderList"
                }
            }
        },
        "CsvDelimiter": {
            "type": "string"
        },
        "CsvHeaderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CsvHeader"
            }
        },
        "CsvHeader": {
            "type": "string"
        },
        "InputCompressionType": {
            "enum": [
                "GZIP",
                "ZSTD",
                "NONE"
            ]
        },
        "TableCreationParameters": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "AttributeDefinitions": {
                    "$ref": "#/$defs/AttributeDefinitions"
                },
                "KeySchema": {
                    "$ref": "#/$defs/KeySchema"
                },
                "BillingMode": {
                    "$ref": "#/$defs/BillingMode"
                },
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "OnDemandThroughput": {
                    "$ref": "#/$defs/OnDemandThroughput"
                },
                "SSESpecification": {
                    "$ref": "#/$defs/SSESpecification"
                },
                "GlobalSecondaryIndexes": {
                    "$ref": "#/$defs/GlobalSecondaryIndexList"
                }
            }
        },
        "ImportStartTime": {
            "type": "string",
            "format": "date-time"
        },
        "ImportEndTime": {
            "type": "string",
            "format": "date-time"
        },
        "ProcessedItemCount": {
            "type": "integer",
            "format": "int64"
        },
        "ImportedItemCount": {
            "type": "integer",
            "format": "int64"
        },
        "DescribeImportInput": {
            "type": "object",
            "properties": {
                "ImportArn": {
                    "$ref": "#/$defs/ImportArn"
                }
            }
        },
        "DescribeKinesisStreamingDestinationOutput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "KinesisDataStreamDestinations": {
                    "$ref": "#/$defs/KinesisDataStreamDestinations"
                }
            }
        },
        "KinesisDataStreamDestinations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KinesisDataStreamDestination"
            }
        },
        "KinesisDataStreamDestination": {
            "type": "object",
            "properties": {
                "StreamArn": {
                    "$ref": "#/$defs/StreamArn"
                },
                "DestinationStatus": {
                    "$ref": "#/$defs/DestinationStatus"
                },
                "DestinationStatusDescription": {
                    "$ref": "#/$defs/String"
                },
                "ApproximateCreationDateTimePrecision": {
                    "$ref": "#/$defs/ApproximateCreationDateTimePrecision"
                }
            }
        },
        "DestinationStatus": {
            "enum": [
                "ENABLING",
                "ACTIVE",
                "DISABLING",
                "DISABLED",
                "ENABLE_FAILED",
                "UPDATING"
            ]
        },
        "ApproximateCreationDateTimePrecision": {
            "enum": [
                "MILLISECOND",
                "MICROSECOND"
            ]
        },
        "DescribeKinesisStreamingDestinationInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                }
            }
        },
        "DescribeLimitsOutput": {
            "type": "object",
            "properties": {
                "AccountMaxReadCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "AccountMaxWriteCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "TableMaxReadCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "TableMaxWriteCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                }
            }
        },
        "DescribeLimitsInput": {
            "type": "object",
            "properties": {}
        },
        "DescribeTableOutput": {
            "type": "object",
            "properties": {
                "Table": {
                    "$ref": "#/$defs/TableDescription"
                }
            }
        },
        "DescribeTableInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                }
            }
        },
        "DescribeTableReplicaAutoScalingOutput": {
            "type": "object",
            "properties": {
                "TableAutoScalingDescription": {
                    "$ref": "#/$defs/TableAutoScalingDescription"
                }
            }
        },
        "TableAutoScalingDescription": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "TableStatus": {
                    "$ref": "#/$defs/TableStatus"
                },
                "Replicas": {
                    "$ref": "#/$defs/ReplicaAutoScalingDescriptionList"
                }
            }
        },
        "ReplicaAutoScalingDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaAutoScalingDescription"
            }
        },
        "ReplicaAutoScalingDescription": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "GlobalSecondaryIndexes": {
                    "$ref": "#/$defs/ReplicaGlobalSecondaryIndexAutoScalingDescriptionList"
                },
                "ReplicaProvisionedReadCapacityAutoScalingSettings": {
                    "$ref": "#/$defs/AutoScalingSettingsDescription"
                },
                "ReplicaProvisionedWriteCapacityAutoScalingSettings": {
                    "$ref": "#/$defs/AutoScalingSettingsDescription"
                },
                "ReplicaStatus": {
                    "$ref": "#/$defs/ReplicaStatus"
                }
            }
        },
        "ReplicaGlobalSecondaryIndexAutoScalingDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaGlobalSecondaryIndexAutoScalingDescription"
            }
        },
        "ReplicaGlobalSecondaryIndexAutoScalingDescription": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "IndexStatus": {
                    "$ref": "#/$defs/IndexStatus"
                },
                "ProvisionedReadCapacityAutoScalingSettings": {
                    "$ref": "#/$defs/AutoScalingSettingsDescription"
                },
                "ProvisionedWriteCapacityAutoScalingSettings": {
                    "$ref": "#/$defs/AutoScalingSettingsDescription"
                }
            }
        },
        "DescribeTableReplicaAutoScalingInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                }
            }
        },
        "DescribeTimeToLiveOutput": {
            "type": "object",
            "properties": {
                "TimeToLiveDescription": {
                    "$ref": "#/$defs/TimeToLiveDescription"
                }
            }
        },
        "DescribeTimeToLiveInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                }
            }
        },
        "KinesisStreamingDestinationOutput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "StreamArn": {
                    "$ref": "#/$defs/StreamArn"
                },
                "DestinationStatus": {
                    "$ref": "#/$defs/DestinationStatus"
                },
                "EnableKinesisStreamingConfiguration": {
                    "$ref": "#/$defs/EnableKinesisStreamingConfiguration"
                }
            }
        },
        "EnableKinesisStreamingConfiguration": {
            "type": "object",
            "properties": {
                "ApproximateCreationDateTimePrecision": {
                    "$ref": "#/$defs/ApproximateCreationDateTimePrecision"
                }
            }
        },
        "KinesisStreamingDestinationInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "StreamArn": {
                    "$ref": "#/$defs/StreamArn"
                },
                "EnableKinesisStreamingConfiguration": {
                    "$ref": "#/$defs/EnableKinesisStreamingConfiguration"
                }
            }
        },
        "ExecuteStatementOutput": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/ItemList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PartiQLNextToken"
                },
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacity"
                },
                "LastEvaluatedKey": {
                    "$ref": "#/$defs/Key"
                }
            }
        },
        "PartiQLNextToken": {
            "type": "string"
        },
        "ExecuteStatementInput": {
            "type": "object",
            "properties": {
                "Statement": {
                    "$ref": "#/$defs/PartiQLStatement"
                },
                "Parameters": {
                    "$ref": "#/$defs/PreparedStatementParameters"
                },
                "ConsistentRead": {
                    "$ref": "#/$defs/ConsistentRead"
                },
                "NextToken": {
                    "$ref": "#/$defs/PartiQLNextToken"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                },
                "Limit": {
                    "$ref": "#/$defs/PositiveIntegerObject"
                },
                "ReturnValuesOnConditionCheckFailure": {
                    "$ref": "#/$defs/ReturnValuesOnConditionCheckFailure"
                }
            }
        },
        "PositiveIntegerObject": {
            "type": "integer",
            "format": "int32"
        },
        "ExecuteTransactionOutput": {
            "type": "object",
            "properties": {
                "Responses": {
                    "$ref": "#/$defs/ItemResponseList"
                },
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacityMultiple"
                }
            }
        },
        "ItemResponseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ItemResponse"
            }
        },
        "ItemResponse": {
            "type": "object",
            "properties": {
                "Item": {
                    "$ref": "#/$defs/AttributeMap"
                }
            }
        },
        "ExecuteTransactionInput": {
            "type": "object",
            "properties": {
                "TransactStatements": {
                    "$ref": "#/$defs/ParameterizedStatements"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                }
            }
        },
        "ParameterizedStatements": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ParameterizedStatement"
            }
        },
        "ParameterizedStatement": {
            "type": "object",
            "properties": {
                "Statement": {
                    "$ref": "#/$defs/PartiQLStatement"
                },
                "Parameters": {
                    "$ref": "#/$defs/PreparedStatementParameters"
                },
                "ReturnValuesOnConditionCheckFailure": {
                    "$ref": "#/$defs/ReturnValuesOnConditionCheckFailure"
                }
            }
        },
        "ClientRequestToken": {
            "type": "string"
        },
        "ExportTableToPointInTimeOutput": {
            "type": "object",
            "properties": {
                "ExportDescription": {
                    "$ref": "#/$defs/ExportDescription"
                }
            }
        },
        "ExportTableToPointInTimeInput": {
            "type": "object",
            "properties": {
                "TableArn": {
                    "$ref": "#/$defs/TableArn"
                },
                "ExportTime": {
                    "$ref": "#/$defs/ExportTime"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "S3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "S3BucketOwner": {
                    "$ref": "#/$defs/S3BucketOwner"
                },
                "S3Prefix": {
                    "$ref": "#/$defs/S3Prefix"
                },
                "S3SseAlgorithm": {
                    "$ref": "#/$defs/S3SseAlgorithm"
                },
                "S3SseKmsKeyId": {
                    "$ref": "#/$defs/S3SseKmsKeyId"
                },
                "ExportFormat": {
                    "$ref": "#/$defs/ExportFormat"
                },
                "ExportType": {
                    "$ref": "#/$defs/ExportType"
                },
                "IncrementalExportSpecification": {
                    "$ref": "#/$defs/IncrementalExportSpecification"
                }
            }
        },
        "GetItemOutput": {
            "type": "object",
            "properties": {
                "Item": {
                    "$ref": "#/$defs/AttributeMap"
                },
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacity"
                }
            }
        },
        "GetItemInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "AttributesToGet": {
                    "$ref": "#/$defs/AttributeNameList"
                },
                "ConsistentRead": {
                    "$ref": "#/$defs/ConsistentRead"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                },
                "ProjectionExpression": {
                    "$ref": "#/$defs/ProjectionExpression"
                },
                "ExpressionAttributeNames": {
                    "$ref": "#/$defs/ExpressionAttributeNameMap"
                }
            }
        },
        "GetResourcePolicyOutput": {
            "type": "object",
            "properties": {
                "Policy": {
                    "$ref": "#/$defs/ResourcePolicy"
                },
                "RevisionId": {
                    "$ref": "#/$defs/PolicyRevisionId"
                }
            }
        },
        "GetResourcePolicyInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                }
            }
        },
        "ImportTableOutput": {
            "type": "object",
            "properties": {
                "ImportTableDescription": {
                    "$ref": "#/$defs/ImportTableDescription"
                }
            }
        },
        "ImportTableInput": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "S3BucketSource": {
                    "$ref": "#/$defs/S3BucketSource"
                },
                "InputFormat": {
                    "$ref": "#/$defs/InputFormat"
                },
                "InputFormatOptions": {
                    "$ref": "#/$defs/InputFormatOptions"
                },
                "InputCompressionType": {
                    "$ref": "#/$defs/InputCompressionType"
                },
                "TableCreationParameters": {
                    "$ref": "#/$defs/TableCreationParameters"
                }
            }
        },
        "ListBackupsOutput": {
            "type": "object",
            "properties": {
                "BackupSummaries": {
                    "$ref": "#/$defs/BackupSummaries"
                },
                "LastEvaluatedBackupArn": {
                    "$ref": "#/$defs/BackupArn"
                }
            }
        },
        "BackupSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackupSummary"
            }
        },
        "BackupSummary": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "TableId": {
                    "$ref": "#/$defs/TableId"
                },
                "TableArn": {
                    "$ref": "#/$defs/TableArn"
                },
                "BackupArn": {
                    "$ref": "#/$defs/BackupArn"
                },
                "BackupName": {
                    "$ref": "#/$defs/BackupName"
                },
                "BackupCreationDateTime": {
                    "$ref": "#/$defs/BackupCreationDateTime"
                },
                "BackupExpiryDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "BackupStatus": {
                    "$ref": "#/$defs/BackupStatus"
                },
                "BackupType": {
                    "$ref": "#/$defs/BackupType"
                },
                "BackupSizeBytes": {
                    "$ref": "#/$defs/BackupSizeBytes"
                }
            }
        },
        "ListBackupsInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "Limit": {
                    "$ref": "#/$defs/BackupsInputLimit"
                },
                "TimeRangeLowerBound": {
                    "$ref": "#/$defs/TimeRangeLowerBound"
                },
                "TimeRangeUpperBound": {
                    "$ref": "#/$defs/TimeRangeUpperBound"
                },
                "ExclusiveStartBackupArn": {
                    "$ref": "#/$defs/BackupArn"
                },
                "BackupType": {
                    "$ref": "#/$defs/BackupTypeFilter"
                }
            }
        },
        "BackupsInputLimit": {
            "type": "integer",
            "format": "int32"
        },
        "TimeRangeLowerBound": {
            "type": "string",
            "format": "date-time"
        },
        "TimeRangeUpperBound": {
            "type": "string",
            "format": "date-time"
        },
        "BackupTypeFilter": {
            "enum": [
                "USER",
                "SYSTEM",
                "AWS_BACKUP",
                "ALL"
            ]
        },
        "ListContributorInsightsOutput": {
            "type": "object",
            "properties": {
                "ContributorInsightsSummaries": {
                    "$ref": "#/$defs/ContributorInsightsSummaries"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenString"
                }
            }
        },
        "ContributorInsightsSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContributorInsightsSummary"
            }
        },
        "ContributorInsightsSummary": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "ContributorInsightsStatus": {
                    "$ref": "#/$defs/ContributorInsightsStatus"
                }
            }
        },
        "NextTokenString": {
            "type": "string"
        },
        "ListContributorInsightsInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListContributorInsightsLimit"
                }
            }
        },
        "ListContributorInsightsLimit": {
            "type": "integer",
            "format": "int32"
        },
        "ListExportsOutput": {
            "type": "object",
            "properties": {
                "ExportSummaries": {
                    "$ref": "#/$defs/ExportSummaries"
                },
                "NextToken": {
                    "$ref": "#/$defs/ExportNextToken"
                }
            }
        },
        "ExportSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportSummary"
            }
        },
        "ExportSummary": {
            "type": "object",
            "properties": {
                "ExportArn": {
                    "$ref": "#/$defs/ExportArn"
                },
                "ExportStatus": {
                    "$ref": "#/$defs/ExportStatus"
                },
                "ExportType": {
                    "$ref": "#/$defs/ExportType"
                }
            }
        },
        "ExportNextToken": {
            "type": "string"
        },
        "ListExportsInput": {
            "type": "object",
            "properties": {
                "TableArn": {
                    "$ref": "#/$defs/TableArn"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListExportsMaxLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/ExportNextToken"
                }
            }
        },
        "ListExportsMaxLimit": {
            "type": "integer",
            "format": "int32"
        },
        "ListGlobalTablesOutput": {
            "type": "object",
            "properties": {
                "GlobalTables": {
                    "$ref": "#/$defs/GlobalTableList"
                },
                "LastEvaluatedGlobalTableName": {
                    "$ref": "#/$defs/TableName"
                }
            }
        },
        "GlobalTableList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlobalTable"
            }
        },
        "GlobalTable": {
            "type": "object",
            "properties": {
                "GlobalTableName": {
                    "$ref": "#/$defs/TableName"
                },
                "ReplicationGroup": {
                    "$ref": "#/$defs/ReplicaList"
                }
            }
        },
        "ListGlobalTablesInput": {
            "type": "object",
            "properties": {
                "ExclusiveStartGlobalTableName": {
                    "$ref": "#/$defs/TableName"
                },
                "Limit": {
                    "$ref": "#/$defs/PositiveIntegerObject"
                },
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                }
            }
        },
        "ListImportsOutput": {
            "type": "object",
            "properties": {
                "ImportSummaryList": {
                    "$ref": "#/$defs/ImportSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/ImportNextToken"
                }
            }
        },
        "ImportSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportSummary"
            }
        },
        "ImportSummary": {
            "type": "object",
            "properties": {
                "ImportArn": {
                    "$ref": "#/$defs/ImportArn"
                },
                "ImportStatus": {
                    "$ref": "#/$defs/ImportStatus"
                },
                "TableArn": {
                    "$ref": "#/$defs/TableArn"
                },
                "S3BucketSource": {
                    "$ref": "#/$defs/S3BucketSource"
                },
                "CloudWatchLogGroupArn": {
                    "$ref": "#/$defs/CloudWatchLogGroupArn"
                },
                "InputFormat": {
                    "$ref": "#/$defs/InputFormat"
                },
                "StartTime": {
                    "$ref": "#/$defs/ImportStartTime"
                },
                "EndTime": {
                    "$ref": "#/$defs/ImportEndTime"
                }
            }
        },
        "ImportNextToken": {
            "type": "string"
        },
        "ListImportsInput": {
            "type": "object",
            "properties": {
                "TableArn": {
                    "$ref": "#/$defs/TableArn"
                },
                "PageSize": {
                    "$ref": "#/$defs/ListImportsMaxLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/ImportNextToken"
                }
            }
        },
        "ListImportsMaxLimit": {
            "type": "integer",
            "format": "int32"
        },
        "ListTablesOutput": {
            "type": "object",
            "properties": {
                "TableNames": {
                    "$ref": "#/$defs/TableNameList"
                },
                "LastEvaluatedTableName": {
                    "$ref": "#/$defs/TableName"
                }
            }
        },
        "TableNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TableName"
            }
        },
        "ListTablesInput": {
            "type": "object",
            "properties": {
                "ExclusiveStartTableName": {
                    "$ref": "#/$defs/TableName"
                },
                "Limit": {
                    "$ref": "#/$defs/ListTablesInputLimit"
                }
            }
        },
        "ListTablesInputLimit": {
            "type": "integer",
            "format": "int32"
        },
        "ListTagsOfResourceOutput": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenString"
                }
            }
        },
        "ListTagsOfResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenString"
                }
            }
        },
        "PutItemOutput": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/AttributeMap"
                },
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacity"
                },
                "ItemCollectionMetrics": {
                    "$ref": "#/$defs/ItemCollectionMetrics"
                }
            }
        },
        "PutItemInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "Item": {
                    "$ref": "#/$defs/PutItemInputAttributeMap"
                },
                "Expected": {
                    "$ref": "#/$defs/ExpectedAttributeMap"
                },
                "ReturnValues": {
                    "$ref": "#/$defs/ReturnValue"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                },
                "ReturnItemCollectionMetrics": {
                    "$ref": "#/$defs/ReturnItemCollectionMetrics"
                },
                "ConditionalOperator": {
                    "$ref": "#/$defs/ConditionalOperator"
                },
                "ConditionExpression": {
                    "$ref": "#/$defs/ConditionExpression"
                },
                "ExpressionAttributeNames": {
                    "$ref": "#/$defs/ExpressionAttributeNameMap"
                },
                "ExpressionAttributeValues": {
                    "$ref": "#/$defs/ExpressionAttributeValueMap"
                },
                "ReturnValuesOnConditionCheckFailure": {
                    "$ref": "#/$defs/ReturnValuesOnConditionCheckFailure"
                }
            }
        },
        "PutResourcePolicyOutput": {
            "type": "object",
            "properties": {
                "RevisionId": {
                    "$ref": "#/$defs/PolicyRevisionId"
                }
            }
        },
        "PutResourcePolicyInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                },
                "Policy": {
                    "$ref": "#/$defs/ResourcePolicy"
                },
                "ExpectedRevisionId": {
                    "$ref": "#/$defs/PolicyRevisionId"
                },
                "ConfirmRemoveSelfResourceAccess": {
                    "$ref": "#/$defs/ConfirmRemoveSelfResourceAccess"
                }
            }
        },
        "ConfirmRemoveSelfResourceAccess": {
            "type": "boolean"
        },
        "QueryOutput": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/ItemList"
                },
                "Count": {
                    "$ref": "#/$defs/Integer"
                },
                "ScannedCount": {
                    "$ref": "#/$defs/Integer"
                },
                "LastEvaluatedKey": {
                    "$ref": "#/$defs/Key"
                },
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacity"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "QueryInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "Select": {
                    "$ref": "#/$defs/Select"
                },
                "AttributesToGet": {
                    "$ref": "#/$defs/AttributeNameList"
                },
                "Limit": {
                    "$ref": "#/$defs/PositiveIntegerObject"
                },
                "ConsistentRead": {
                    "$ref": "#/$defs/ConsistentRead"
                },
                "KeyConditions": {
                    "$ref": "#/$defs/KeyConditions"
                },
                "QueryFilter": {
                    "$ref": "#/$defs/FilterConditionMap"
                },
                "ConditionalOperator": {
                    "$ref": "#/$defs/ConditionalOperator"
                },
                "ScanIndexForward": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "ExclusiveStartKey": {
                    "$ref": "#/$defs/Key"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                },
                "ProjectionExpression": {
                    "$ref": "#/$defs/ProjectionExpression"
                },
                "FilterExpression": {
                    "$ref": "#/$defs/ConditionExpression"
                },
                "KeyConditionExpression": {
                    "$ref": "#/$defs/KeyExpression"
                },
                "ExpressionAttributeNames": {
                    "$ref": "#/$defs/ExpressionAttributeNameMap"
                },
                "ExpressionAttributeValues": {
                    "$ref": "#/$defs/ExpressionAttributeValueMap"
                }
            }
        },
        "Select": {
            "enum": [
                "ALL_ATTRIBUTES",
                "ALL_PROJECTED_ATTRIBUTES",
                "SPECIFIC_ATTRIBUTES",
                "COUNT"
            ]
        },
        "KeyConditions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Condition"
            }
        },
        "Condition": {
            "type": "object",
            "properties": {
                "AttributeValueList": {
                    "$ref": "#/$defs/AttributeValueList"
                },
                "ComparisonOperator": {
                    "$ref": "#/$defs/ComparisonOperator"
                }
            }
        },
        "FilterConditionMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Condition"
            }
        },
        "KeyExpression": {
            "type": "string"
        },
        "RestoreTableFromBackupOutput": {
            "type": "object",
            "properties": {
                "TableDescription": {
                    "$ref": "#/$defs/TableDescription"
                }
            }
        },
        "RestoreTableFromBackupInput": {
            "type": "object",
            "properties": {
                "TargetTableName": {
                    "$ref": "#/$defs/TableName"
                },
                "BackupArn": {
                    "$ref": "#/$defs/BackupArn"
                },
                "BillingModeOverride": {
                    "$ref": "#/$defs/BillingMode"
                },
                "GlobalSecondaryIndexOverride": {
                    "$ref": "#/$defs/GlobalSecondaryIndexList"
                },
                "LocalSecondaryIndexOverride": {
                    "$ref": "#/$defs/LocalSecondaryIndexList"
                },
                "ProvisionedThroughputOverride": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "OnDemandThroughputOverride": {
                    "$ref": "#/$defs/OnDemandThroughput"
                },
                "SSESpecificationOverride": {
                    "$ref": "#/$defs/SSESpecification"
                }
            }
        },
        "RestoreTableToPointInTimeOutput": {
            "type": "object",
            "properties": {
                "TableDescription": {
                    "$ref": "#/$defs/TableDescription"
                }
            }
        },
        "RestoreTableToPointInTimeInput": {
            "type": "object",
            "properties": {
                "SourceTableArn": {
                    "$ref": "#/$defs/TableArn"
                },
                "SourceTableName": {
                    "$ref": "#/$defs/TableName"
                },
                "TargetTableName": {
                    "$ref": "#/$defs/TableName"
                },
                "UseLatestRestorableTime": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "RestoreDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "BillingModeOverride": {
                    "$ref": "#/$defs/BillingMode"
                },
                "GlobalSecondaryIndexOverride": {
                    "$ref": "#/$defs/GlobalSecondaryIndexList"
                },
                "LocalSecondaryIndexOverride": {
                    "$ref": "#/$defs/LocalSecondaryIndexList"
                },
                "ProvisionedThroughputOverride": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "OnDemandThroughputOverride": {
                    "$ref": "#/$defs/OnDemandThroughput"
                },
                "SSESpecificationOverride": {
                    "$ref": "#/$defs/SSESpecification"
                }
            }
        },
        "ScanOutput": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/ItemList"
                },
                "Count": {
                    "$ref": "#/$defs/Integer"
                },
                "ScannedCount": {
                    "$ref": "#/$defs/Integer"
                },
                "LastEvaluatedKey": {
                    "$ref": "#/$defs/Key"
                },
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacity"
                }
            }
        },
        "ScanInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "AttributesToGet": {
                    "$ref": "#/$defs/AttributeNameList"
                },
                "Limit": {
                    "$ref": "#/$defs/PositiveIntegerObject"
                },
                "Select": {
                    "$ref": "#/$defs/Select"
                },
                "ScanFilter": {
                    "$ref": "#/$defs/FilterConditionMap"
                },
                "ConditionalOperator": {
                    "$ref": "#/$defs/ConditionalOperator"
                },
                "ExclusiveStartKey": {
                    "$ref": "#/$defs/Key"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                },
                "TotalSegments": {
                    "$ref": "#/$defs/ScanTotalSegments"
                },
                "Segment": {
                    "$ref": "#/$defs/ScanSegment"
                },
                "ProjectionExpression": {
                    "$ref": "#/$defs/ProjectionExpression"
                },
                "FilterExpression": {
                    "$ref": "#/$defs/ConditionExpression"
                },
                "ExpressionAttributeNames": {
                    "$ref": "#/$defs/ExpressionAttributeNameMap"
                },
                "ExpressionAttributeValues": {
                    "$ref": "#/$defs/ExpressionAttributeValueMap"
                },
                "ConsistentRead": {
                    "$ref": "#/$defs/ConsistentRead"
                }
            }
        },
        "ScanTotalSegments": {
            "type": "integer",
            "format": "int32"
        },
        "ScanSegment": {
            "type": "integer",
            "format": "int32"
        },
        "TagResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TransactGetItemsOutput": {
            "type": "object",
            "properties": {
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacityMultiple"
                },
                "Responses": {
                    "$ref": "#/$defs/ItemResponseList"
                }
            }
        },
        "TransactGetItemsInput": {
            "type": "object",
            "properties": {
                "TransactItems": {
                    "$ref": "#/$defs/TransactGetItemList"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                }
            }
        },
        "TransactGetItemList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransactGetItem"
            }
        },
        "TransactGetItem": {
            "type": "object",
            "properties": {
                "Get": {
                    "$ref": "#/$defs/Get"
                }
            }
        },
        "Get": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "ProjectionExpression": {
                    "$ref": "#/$defs/ProjectionExpression"
                },
                "ExpressionAttributeNames": {
                    "$ref": "#/$defs/ExpressionAttributeNameMap"
                }
            }
        },
        "TransactWriteItemsOutput": {
            "type": "object",
            "properties": {
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacityMultiple"
                },
                "ItemCollectionMetrics": {
                    "$ref": "#/$defs/ItemCollectionMetricsPerTable"
                }
            }
        },
        "TransactWriteItemsInput": {
            "type": "object",
            "properties": {
                "TransactItems": {
                    "$ref": "#/$defs/TransactWriteItemList"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                },
                "ReturnItemCollectionMetrics": {
                    "$ref": "#/$defs/ReturnItemCollectionMetrics"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "TransactWriteItemList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransactWriteItem"
            }
        },
        "TransactWriteItem": {
            "type": "object",
            "properties": {
                "ConditionCheck": {
                    "$ref": "#/$defs/ConditionCheck"
                },
                "Put": {
                    "$ref": "#/$defs/Put"
                },
                "Delete": {
                    "$ref": "#/$defs/Delete"
                },
                "Update": {
                    "$ref": "#/$defs/Update"
                }
            }
        },
        "ConditionCheck": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "ConditionExpression": {
                    "$ref": "#/$defs/ConditionExpression"
                },
                "ExpressionAttributeNames": {
                    "$ref": "#/$defs/ExpressionAttributeNameMap"
                },
                "ExpressionAttributeValues": {
                    "$ref": "#/$defs/ExpressionAttributeValueMap"
                },
                "ReturnValuesOnConditionCheckFailure": {
                    "$ref": "#/$defs/ReturnValuesOnConditionCheckFailure"
                }
            }
        },
        "Put": {
            "type": "object",
            "properties": {
                "Item": {
                    "$ref": "#/$defs/PutItemInputAttributeMap"
                },
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "ConditionExpression": {
                    "$ref": "#/$defs/ConditionExpression"
                },
                "ExpressionAttributeNames": {
                    "$ref": "#/$defs/ExpressionAttributeNameMap"
                },
                "ExpressionAttributeValues": {
                    "$ref": "#/$defs/ExpressionAttributeValueMap"
                },
                "ReturnValuesOnConditionCheckFailure": {
                    "$ref": "#/$defs/ReturnValuesOnConditionCheckFailure"
                }
            }
        },
        "Delete": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "ConditionExpression": {
                    "$ref": "#/$defs/ConditionExpression"
                },
                "ExpressionAttributeNames": {
                    "$ref": "#/$defs/ExpressionAttributeNameMap"
                },
                "ExpressionAttributeValues": {
                    "$ref": "#/$defs/ExpressionAttributeValueMap"
                },
                "ReturnValuesOnConditionCheckFailure": {
                    "$ref": "#/$defs/ReturnValuesOnConditionCheckFailure"
                }
            }
        },
        "Update": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "UpdateExpression": {
                    "$ref": "#/$defs/UpdateExpression"
                },
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "ConditionExpression": {
                    "$ref": "#/$defs/ConditionExpression"
                },
                "ExpressionAttributeNames": {
                    "$ref": "#/$defs/ExpressionAttributeNameMap"
                },
                "ExpressionAttributeValues": {
                    "$ref": "#/$defs/ExpressionAttributeValueMap"
                },
                "ReturnValuesOnConditionCheckFailure": {
                    "$ref": "#/$defs/ReturnValuesOnConditionCheckFailure"
                }
            }
        },
        "UpdateExpression": {
            "type": "string"
        },
        "UntagResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKeyString"
            }
        },
        "UpdateContinuousBackupsOutput": {
            "type": "object",
            "properties": {
                "ContinuousBackupsDescription": {
                    "$ref": "#/$defs/ContinuousBackupsDescription"
                }
            }
        },
        "UpdateContinuousBackupsInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "PointInTimeRecoverySpecification": {
                    "$ref": "#/$defs/PointInTimeRecoverySpecification"
                }
            }
        },
        "PointInTimeRecoverySpecification": {
            "type": "object",
            "properties": {
                "PointInTimeRecoveryEnabled": {
                    "$ref": "#/$defs/BooleanObject"
                }
            }
        },
        "UpdateContributorInsightsOutput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "ContributorInsightsStatus": {
                    "$ref": "#/$defs/ContributorInsightsStatus"
                }
            }
        },
        "UpdateContributorInsightsInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "ContributorInsightsAction": {
                    "$ref": "#/$defs/ContributorInsightsAction"
                }
            }
        },
        "ContributorInsightsAction": {
            "enum": [
                "ENABLE",
                "DISABLE"
            ]
        },
        "UpdateGlobalTableOutput": {
            "type": "object",
            "properties": {
                "GlobalTableDescription": {
                    "$ref": "#/$defs/GlobalTableDescription"
                }
            }
        },
        "UpdateGlobalTableInput": {
            "type": "object",
            "properties": {
                "GlobalTableName": {
                    "$ref": "#/$defs/TableName"
                },
                "ReplicaUpdates": {
                    "$ref": "#/$defs/ReplicaUpdateList"
                }
            }
        },
        "ReplicaUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaUpdate"
            }
        },
        "ReplicaUpdate": {
            "type": "object",
            "properties": {
                "Create": {
                    "$ref": "#/$defs/CreateReplicaAction"
                },
                "Delete": {
                    "$ref": "#/$defs/DeleteReplicaAction"
                }
            }
        },
        "CreateReplicaAction": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                }
            }
        },
        "DeleteReplicaAction": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                }
            }
        },
        "UpdateGlobalTableSettingsOutput": {
            "type": "object",
            "properties": {
                "GlobalTableName": {
                    "$ref": "#/$defs/TableName"
                },
                "ReplicaSettings": {
                    "$ref": "#/$defs/ReplicaSettingsDescriptionList"
                }
            }
        },
        "UpdateGlobalTableSettingsInput": {
            "type": "object",
            "properties": {
                "GlobalTableName": {
                    "$ref": "#/$defs/TableName"
                },
                "GlobalTableBillingMode": {
                    "$ref": "#/$defs/BillingMode"
                },
                "GlobalTableProvisionedWriteCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate": {
                    "$ref": "#/$defs/AutoScalingSettingsUpdate"
                },
                "GlobalTableGlobalSecondaryIndexSettingsUpdate": {
                    "$ref": "#/$defs/GlobalTableGlobalSecondaryIndexSettingsUpdateList"
                },
                "ReplicaSettingsUpdate": {
                    "$ref": "#/$defs/ReplicaSettingsUpdateList"
                }
            }
        },
        "AutoScalingSettingsUpdate": {
            "type": "object",
            "properties": {
                "MinimumUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "MaximumUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "AutoScalingDisabled": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "AutoScalingRoleArn": {
                    "$ref": "#/$defs/AutoScalingRoleArn"
                },
                "ScalingPolicyUpdate": {
                    "$ref": "#/$defs/AutoScalingPolicyUpdate"
                }
            }
        },
        "AutoScalingRoleArn": {
            "type": "string"
        },
        "AutoScalingPolicyUpdate": {
            "type": "object",
            "properties": {
                "PolicyName": {
                    "$ref": "#/$defs/AutoScalingPolicyName"
                },
                "TargetTrackingScalingPolicyConfiguration": {
                    "$ref": "#/$defs/AutoScalingTargetTrackingScalingPolicyConfigurationUpdate"
                }
            }
        },
        "AutoScalingTargetTrackingScalingPolicyConfigurationUpdate": {
            "type": "object",
            "properties": {
                "DisableScaleIn": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "ScaleInCooldown": {
                    "$ref": "#/$defs/IntegerObject"
                },
                "ScaleOutCooldown": {
                    "$ref": "#/$defs/IntegerObject"
                },
                "TargetValue": {
                    "$ref": "#/$defs/DoubleObject"
                }
            }
        },
        "GlobalTableGlobalSecondaryIndexSettingsUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlobalTableGlobalSecondaryIndexSettingsUpdate"
            }
        },
        "GlobalTableGlobalSecondaryIndexSettingsUpdate": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "ProvisionedWriteCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "ProvisionedWriteCapacityAutoScalingSettingsUpdate": {
                    "$ref": "#/$defs/AutoScalingSettingsUpdate"
                }
            }
        },
        "ReplicaSettingsUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaSettingsUpdate"
            }
        },
        "ReplicaSettingsUpdate": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "ReplicaProvisionedReadCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate": {
                    "$ref": "#/$defs/AutoScalingSettingsUpdate"
                },
                "ReplicaGlobalSecondaryIndexSettingsUpdate": {
                    "$ref": "#/$defs/ReplicaGlobalSecondaryIndexSettingsUpdateList"
                },
                "ReplicaTableClass": {
                    "$ref": "#/$defs/TableClass"
                }
            }
        },
        "ReplicaGlobalSecondaryIndexSettingsUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaGlobalSecondaryIndexSettingsUpdate"
            }
        },
        "ReplicaGlobalSecondaryIndexSettingsUpdate": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "ProvisionedReadCapacityUnits": {
                    "$ref": "#/$defs/PositiveLongObject"
                },
                "ProvisionedReadCapacityAutoScalingSettingsUpdate": {
                    "$ref": "#/$defs/AutoScalingSettingsUpdate"
                }
            }
        },
        "UpdateItemOutput": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/AttributeMap"
                },
                "ConsumedCapacity": {
                    "$ref": "#/$defs/ConsumedCapacity"
                },
                "ItemCollectionMetrics": {
                    "$ref": "#/$defs/ItemCollectionMetrics"
                }
            }
        },
        "UpdateItemInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "AttributeUpdates": {
                    "$ref": "#/$defs/AttributeUpdates"
                },
                "Expected": {
                    "$ref": "#/$defs/ExpectedAttributeMap"
                },
                "ConditionalOperator": {
                    "$ref": "#/$defs/ConditionalOperator"
                },
                "ReturnValues": {
                    "$ref": "#/$defs/ReturnValue"
                },
                "ReturnConsumedCapacity": {
                    "$ref": "#/$defs/ReturnConsumedCapacity"
                },
                "ReturnItemCollectionMetrics": {
                    "$ref": "#/$defs/ReturnItemCollectionMetrics"
                },
                "UpdateExpression": {
                    "$ref": "#/$defs/UpdateExpression"
                },
                "ConditionExpression": {
                    "$ref": "#/$defs/ConditionExpression"
                },
                "ExpressionAttributeNames": {
                    "$ref": "#/$defs/ExpressionAttributeNameMap"
                },
                "ExpressionAttributeValues": {
                    "$ref": "#/$defs/ExpressionAttributeValueMap"
                },
                "ReturnValuesOnConditionCheckFailure": {
                    "$ref": "#/$defs/ReturnValuesOnConditionCheckFailure"
                }
            }
        },
        "AttributeUpdates": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeValueUpdate"
            }
        },
        "AttributeValueUpdate": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "Action": {
                    "$ref": "#/$defs/AttributeAction"
                }
            }
        },
        "AttributeAction": {
            "enum": [
                "ADD",
                "PUT",
                "DELETE"
            ]
        },
        "UpdateKinesisStreamingDestinationOutput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "StreamArn": {
                    "$ref": "#/$defs/StreamArn"
                },
                "DestinationStatus": {
                    "$ref": "#/$defs/DestinationStatus"
                },
                "UpdateKinesisStreamingConfiguration": {
                    "$ref": "#/$defs/UpdateKinesisStreamingConfiguration"
                }
            }
        },
        "UpdateKinesisStreamingConfiguration": {
            "type": "object",
            "properties": {
                "ApproximateCreationDateTimePrecision": {
                    "$ref": "#/$defs/ApproximateCreationDateTimePrecision"
                }
            }
        },
        "UpdateKinesisStreamingDestinationInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "StreamArn": {
                    "$ref": "#/$defs/StreamArn"
                },
                "UpdateKinesisStreamingConfiguration": {
                    "$ref": "#/$defs/UpdateKinesisStreamingConfiguration"
                }
            }
        },
        "UpdateTableOutput": {
            "type": "object",
            "properties": {
                "TableDescription": {
                    "$ref": "#/$defs/TableDescription"
                }
            }
        },
        "UpdateTableInput": {
            "type": "object",
            "properties": {
                "AttributeDefinitions": {
                    "$ref": "#/$defs/AttributeDefinitions"
                },
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "BillingMode": {
                    "$ref": "#/$defs/BillingMode"
                },
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "GlobalSecondaryIndexUpdates": {
                    "$ref": "#/$defs/GlobalSecondaryIndexUpdateList"
                },
                "StreamSpecification": {
                    "$ref": "#/$defs/StreamSpecification"
                },
                "SSESpecification": {
                    "$ref": "#/$defs/SSESpecification"
                },
                "ReplicaUpdates": {
                    "$ref": "#/$defs/ReplicationGroupUpdateList"
                },
                "TableClass": {
                    "$ref": "#/$defs/TableClass"
                },
                "DeletionProtectionEnabled": {
                    "$ref": "#/$defs/DeletionProtectionEnabled"
                },
                "OnDemandThroughput": {
                    "$ref": "#/$defs/OnDemandThroughput"
                }
            }
        },
        "GlobalSecondaryIndexUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlobalSecondaryIndexUpdate"
            }
        },
        "GlobalSecondaryIndexUpdate": {
            "type": "object",
            "properties": {
                "Update": {
                    "$ref": "#/$defs/UpdateGlobalSecondaryIndexAction"
                },
                "Create": {
                    "$ref": "#/$defs/CreateGlobalSecondaryIndexAction"
                },
                "Delete": {
                    "$ref": "#/$defs/DeleteGlobalSecondaryIndexAction"
                }
            }
        },
        "UpdateGlobalSecondaryIndexAction": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "OnDemandThroughput": {
                    "$ref": "#/$defs/OnDemandThroughput"
                }
            }
        },
        "CreateGlobalSecondaryIndexAction": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "KeySchema": {
                    "$ref": "#/$defs/KeySchema"
                },
                "Projection": {
                    "$ref": "#/$defs/Projection"
                },
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "OnDemandThroughput": {
                    "$ref": "#/$defs/OnDemandThroughput"
                }
            }
        },
        "DeleteGlobalSecondaryIndexAction": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                }
            }
        },
        "ReplicationGroupUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicationGroupUpdate"
            }
        },
        "ReplicationGroupUpdate": {
            "type": "object",
            "properties": {
                "Create": {
                    "$ref": "#/$defs/CreateReplicationGroupMemberAction"
                },
                "Update": {
                    "$ref": "#/$defs/UpdateReplicationGroupMemberAction"
                },
                "Delete": {
                    "$ref": "#/$defs/DeleteReplicationGroupMemberAction"
                }
            }
        },
        "CreateReplicationGroupMemberAction": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "KMSMasterKeyId": {
                    "$ref": "#/$defs/KMSMasterKeyId"
                },
                "ProvisionedThroughputOverride": {
                    "$ref": "#/$defs/ProvisionedThroughputOverride"
                },
                "OnDemandThroughputOverride": {
                    "$ref": "#/$defs/OnDemandThroughputOverride"
                },
                "GlobalSecondaryIndexes": {
                    "$ref": "#/$defs/ReplicaGlobalSecondaryIndexList"
                },
                "TableClassOverride": {
                    "$ref": "#/$defs/TableClass"
                }
            }
        },
        "ReplicaGlobalSecondaryIndexList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaGlobalSecondaryIndex"
            }
        },
        "ReplicaGlobalSecondaryIndex": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "ProvisionedThroughputOverride": {
                    "$ref": "#/$defs/ProvisionedThroughputOverride"
                },
                "OnDemandThroughputOverride": {
                    "$ref": "#/$defs/OnDemandThroughputOverride"
                }
            }
        },
        "UpdateReplicationGroupMemberAction": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "KMSMasterKeyId": {
                    "$ref": "#/$defs/KMSMasterKeyId"
                },
                "ProvisionedThroughputOverride": {
                    "$ref": "#/$defs/ProvisionedThroughputOverride"
                },
                "OnDemandThroughputOverride": {
                    "$ref": "#/$defs/OnDemandThroughputOverride"
                },
                "GlobalSecondaryIndexes": {
                    "$ref": "#/$defs/ReplicaGlobalSecondaryIndexList"
                },
                "TableClassOverride": {
                    "$ref": "#/$defs/TableClass"
                }
            }
        },
        "DeleteReplicationGroupMemberAction": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                }
            }
        },
        "UpdateTableReplicaAutoScalingOutput": {
            "type": "object",
            "properties": {
                "TableAutoScalingDescription": {
                    "$ref": "#/$defs/TableAutoScalingDescription"
                }
            }
        },
        "UpdateTableReplicaAutoScalingInput": {
            "type": "object",
            "properties": {
                "GlobalSecondaryIndexUpdates": {
                    "$ref": "#/$defs/GlobalSecondaryIndexAutoScalingUpdateList"
                },
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "ProvisionedWriteCapacityAutoScalingUpdate": {
                    "$ref": "#/$defs/AutoScalingSettingsUpdate"
                },
                "ReplicaUpdates": {
                    "$ref": "#/$defs/ReplicaAutoScalingUpdateList"
                }
            }
        },
        "GlobalSecondaryIndexAutoScalingUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlobalSecondaryIndexAutoScalingUpdate"
            }
        },
        "GlobalSecondaryIndexAutoScalingUpdate": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "ProvisionedWriteCapacityAutoScalingUpdate": {
                    "$ref": "#/$defs/AutoScalingSettingsUpdate"
                }
            }
        },
        "ReplicaAutoScalingUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaAutoScalingUpdate"
            }
        },
        "ReplicaAutoScalingUpdate": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "ReplicaGlobalSecondaryIndexUpdates": {
                    "$ref": "#/$defs/ReplicaGlobalSecondaryIndexAutoScalingUpdateList"
                },
                "ReplicaProvisionedReadCapacityAutoScalingUpdate": {
                    "$ref": "#/$defs/AutoScalingSettingsUpdate"
                }
            }
        },
        "ReplicaGlobalSecondaryIndexAutoScalingUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaGlobalSecondaryIndexAutoScalingUpdate"
            }
        },
        "ReplicaGlobalSecondaryIndexAutoScalingUpdate": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "ProvisionedReadCapacityAutoScalingUpdate": {
                    "$ref": "#/$defs/AutoScalingSettingsUpdate"
                }
            }
        },
        "UpdateTimeToLiveOutput": {
            "type": "object",
            "properties": {
                "TimeToLiveSpecification": {
                    "$ref": "#/$defs/TimeToLiveSpecification"
                }
            }
        },
        "TimeToLiveSpecification": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/TimeToLiveEnabled"
                },
                "AttributeName": {
                    "$ref": "#/$defs/TimeToLiveAttributeName"
                }
            }
        },
        "TimeToLiveEnabled": {
            "type": "boolean"
        },
        "UpdateTimeToLiveInput": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/TableArn"
                },
                "TimeToLiveSpecification": {
                    "$ref": "#/$defs/TimeToLiveSpecification"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            },
            "AccountId": {
                "builtIn": "AWS::Auth::AccountId",
                "required": false,
                "documentation": "The AWS AccountId used for the request.",
                "type": "String"
            },
            "AccountIdEndpointMode": {
                "builtIn": "AWS::Auth::AccountIdEndpointMode",
                "required": false,
                "documentation": "The AccountId Endpoint Mode.",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": "{Endpoint}",
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "stringEquals",
                                        "argv": [
                                            {
                                                "ref": "Region"
                                            },
                                            "local"
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "ref": "UseFIPS"
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "error": "Invalid Configuration: FIPS and local endpoint are not supported",
                                        "type": "error"
                                    },
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "ref": "UseDualStack"
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "error": "Invalid Configuration: Dualstack and local endpoint are not supported",
                                        "type": "error"
                                    },
                                    {
                                        "conditions": [],
                                        "endpoint": {
                                            "url": "http://localhost:8000",
                                            "properties": {
                                                "authSchemes": [
                                                    {
                                                        "name": "sigv4",
                                                        "signingName": "dynamodb",
                                                        "signingRegion": "us-east-1"
                                                    }
                                                ]
                                            },
                                            "headers": {}
                                        },
                                        "type": "endpoint"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "isSet",
                                        "argv": [
                                            {
                                                "ref": "AccountIdEndpointMode"
                                            }
                                        ]
                                    },
                                    {
                                        "fn": "stringEquals",
                                        "argv": [
                                            {
                                                "ref": "AccountIdEndpointMode"
                                            },
                                            "required"
                                        ]
                                    },
                                    {
                                        "fn": "not",
                                        "argv": [
                                            {
                                                "fn": "isSet",
                                                "argv": [
                                                    {
                                                        "ref": "AccountId"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "error": "AccountIdEndpointMode is required but no AccountID was provided or able to be loaded.",
                                "type": "error"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "isSet",
                                        "argv": [
                                            {
                                                "ref": "AccountId"
                                            }
                                        ]
                                    },
                                    {
                                        "fn": "stringEquals",
                                        "argv": [
                                            {
                                                "fn": "getAttr",
                                                "argv": [
                                                    {
                                                        "ref": "PartitionResult"
                                                    },
                                                    "name"
                                                ]
                                            },
                                            "aws"
                                        ]
                                    },
                                    {
                                        "fn": "not",
                                        "argv": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "ref": "UseFIPS"
                                                    },
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "fn": "not",
                                        "argv": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "ref": "UseDualStack"
                                                    },
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "fn": "not",
                                        "argv": [
                                            {
                                                "fn": "isValidHostLabel",
                                                "argv": [
                                                    {
                                                        "ref": "AccountId"
                                                    },
                                                    false
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "error": "Credentials-sourced account ID parameter is invalid",
                                "type": "error"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "isSet",
                                                        "argv": [
                                                            {
                                                                "ref": "AccountIdEndpointMode"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "fn": "stringEquals",
                                                        "argv": [
                                                            {
                                                                "ref": "AccountIdEndpointMode"
                                                            },
                                                            "disabled"
                                                        ]
                                                    }
                                                ],
                                                "endpoint": {
                                                    "url": "https://dynamodb-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            },
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://dynamodb-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "stringEquals",
                                                        "argv": [
                                                            {
                                                                "fn": "getAttr",
                                                                "argv": [
                                                                    {
                                                                        "ref": "PartitionResult"
                                                                    },
                                                                    "name"
                                                                ]
                                                            },
                                                            "aws-us-gov"
                                                        ]
                                                    }
                                                ],
                                                "rules": [
                                                    {
                                                        "conditions": [
                                                            {
                                                                "fn": "isSet",
                                                                "argv": [
                                                                    {
                                                                        "ref": "AccountIdEndpointMode"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "fn": "stringEquals",
                                                                "argv": [
                                                                    {
                                                                        "ref": "AccountIdEndpointMode"
                                                                    },
                                                                    "disabled"
                                                                ]
                                                            }
                                                        ],
                                                        "endpoint": {
                                                            "url": "https://dynamodb.{Region}.{PartitionResult#dnsSuffix}",
                                                            "properties": {},
                                                            "headers": {}
                                                        },
                                                        "type": "endpoint"
                                                    },
                                                    {
                                                        "conditions": [],
                                                        "endpoint": {
                                                            "url": "https://dynamodb.{Region}.{PartitionResult#dnsSuffix}",
                                                            "properties": {},
                                                            "headers": {}
                                                        },
                                                        "type": "endpoint"
                                                    }
                                                ],
                                                "type": "tree"
                                            },
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "isSet",
                                                        "argv": [
                                                            {
                                                                "ref": "AccountIdEndpointMode"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "fn": "stringEquals",
                                                        "argv": [
                                                            {
                                                                "ref": "AccountIdEndpointMode"
                                                            },
                                                            "disabled"
                                                        ]
                                                    }
                                                ],
                                                "endpoint": {
                                                    "url": "https://dynamodb-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            },
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://dynamodb-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "isSet",
                                                        "argv": [
                                                            {
                                                                "ref": "AccountIdEndpointMode"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "fn": "stringEquals",
                                                        "argv": [
                                                            {
                                                                "ref": "AccountIdEndpointMode"
                                                            },
                                                            "disabled"
                                                        ]
                                                    }
                                                ],
                                                "endpoint": {
                                                    "url": "https://dynamodb.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            },
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://dynamodb.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "isSet",
                                        "argv": [
                                            {
                                                "ref": "AccountIdEndpointMode"
                                            }
                                        ]
                                    },
                                    {
                                        "fn": "stringEquals",
                                        "argv": [
                                            {
                                                "ref": "AccountIdEndpointMode"
                                            },
                                            "disabled"
                                        ]
                                    }
                                ],
                                "endpoint": {
                                    "url": "https://dynamodb.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "isSet",
                                        "argv": [
                                            {
                                                "ref": "AccountId"
                                            }
                                        ]
                                    },
                                    {
                                        "fn": "stringEquals",
                                        "argv": [
                                            {
                                                "fn": "getAttr",
                                                "argv": [
                                                    {
                                                        "ref": "PartitionResult"
                                                    },
                                                    "name"
                                                ]
                                            },
                                            "aws"
                                        ]
                                    },
                                    {
                                        "fn": "not",
                                        "argv": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "ref": "UseFIPS"
                                                    },
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "fn": "not",
                                        "argv": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "ref": "UseDualStack"
                                                    },
                                                    true
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "endpoint": {
                                    "url": "https://{AccountId}.ddb.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://dynamodb.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}