{
    "name": "guardduty",
    "commands": [
        {
            "name": "AcceptAdministratorInvitation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/administrator"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptAdministratorInvitationResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AcceptAdministratorInvitationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "AdministratorId": {},
                        "InvitationId": {}
                    }
                }
            }
        },
        {
            "name": "AcceptInvitation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/master"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptInvitationResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AcceptInvitationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "MasterId": {},
                        "InvitationId": {}
                    }
                }
            }
        },
        {
            "name": "ArchiveFindings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/findings/archive"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ArchiveFindingsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ArchiveFindingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "FindingIds": {}
                    }
                }
            }
        },
        {
            "name": "CreateDetector",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/detector"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDetectorResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateDetectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Enable": {},
                        "ClientToken": {},
                        "FindingPublishingFrequency": {},
                        "DataSources": {},
                        "Tags": {},
                        "Features": {}
                    }
                }
            }
        },
        {
            "name": "CreateFilter",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/filter"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFilterResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "Name": {},
                        "Description": {},
                        "Action": {},
                        "Rank": {},
                        "FindingCriteria": {},
                        "ClientToken": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateIPSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/ipset"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateIPSetResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateIPSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "Name": {},
                        "Format": {},
                        "Location": {},
                        "Activate": {},
                        "ClientToken": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateMalwareProtectionPlan",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/malware-protection-plan"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMalwareProtectionPlanResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateMalwareProtectionPlanRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ClientToken": {},
                        "Role": {},
                        "ProtectedResource": {},
                        "Actions": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateMembers",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/member"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMembersResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateMembersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "AccountDetails": {}
                    }
                }
            }
        },
        {
            "name": "CreatePublishingDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/publishingDestination"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePublishingDestinationResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreatePublishingDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "DestinationType": {},
                        "DestinationProperties": {},
                        "ClientToken": {}
                    }
                }
            }
        },
        {
            "name": "CreateSampleFindings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/findings/create"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSampleFindingsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSampleFindingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "FindingTypes": {}
                    }
                }
            }
        },
        {
            "name": "CreateThreatIntelSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/threatintelset"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateThreatIntelSetResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateThreatIntelSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "Name": {},
                        "Format": {},
                        "Location": {},
                        "Activate": {},
                        "ClientToken": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "DeclineInvitations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/invitation/decline"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeclineInvitationsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeclineInvitationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountIds": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDetector",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/detector/{DetectorId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDetectorResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteDetectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteFilter",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "FilterName": "route.FilterName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/detector/{DetectorId}/filter/{FilterName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFilterResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0.FilterName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "FilterName": {}
                    }
                }
            }
        },
        {
            "name": "DeleteInvitations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/invitation/delete"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteInvitationsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteInvitationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountIds": {}
                    }
                }
            }
        },
        {
            "name": "DeleteIPSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "IpSetId": "route.IpSetId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/detector/{DetectorId}/ipset/{IpSetId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteIPSetResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0.IpSetId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteIPSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "IpSetId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMalwareProtectionPlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MalwareProtectionPlanId": "route.MalwareProtectionPlanId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/malware-protection-plan/{MalwareProtectionPlanId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.MalwareProtectionPlanId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteMalwareProtectionPlanRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MalwareProtectionPlanId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMembers",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/member/delete"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMembersResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteMembersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "AccountIds": {}
                    }
                }
            }
        },
        {
            "name": "DeletePublishingDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "DestinationId": "route.DestinationId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/detector/{DetectorId}/publishingDestination/{DestinationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePublishingDestinationResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0.DestinationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeletePublishingDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "DestinationId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteThreatIntelSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "ThreatIntelSetId": "route.ThreatIntelSetId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/detector/{DetectorId}/threatintelset/{ThreatIntelSetId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteThreatIntelSetResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0.ThreatIntelSetId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteThreatIntelSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "ThreatIntelSetId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeMalwareScans",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/malware-scans"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMalwareScansResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeMalwareScansRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "NextToken": {},
                        "MaxResults": {},
                        "FilterCriteria": {},
                        "SortCriteria": {}
                    }
                }
            }
        },
        {
            "name": "DescribeOrganizationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/admin"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeOrganizationConfigurationResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeOrganizationConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "DescribePublishingDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "DestinationId": "route.DestinationId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/publishingDestination/{DestinationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePublishingDestinationResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0.DestinationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribePublishingDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "DestinationId": {}
                    }
                }
            }
        },
        {
            "name": "DisableOrganizationAdminAccount",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/admin/disable"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableOrganizationAdminAccountResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisableOrganizationAdminAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AdminAccountId": {}
                    }
                }
            }
        },
        {
            "name": "DisassociateFromAdministratorAccount",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/administrator/disassociate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateFromAdministratorAccountResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisassociateFromAdministratorAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {}
                    }
                }
            }
        },
        {
            "name": "DisassociateFromMasterAccount",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/master/disassociate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateFromMasterAccountResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisassociateFromMasterAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {}
                    }
                }
            }
        },
        {
            "name": "DisassociateMembers",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/member/disassociate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateMembersResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisassociateMembersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "AccountIds": {}
                    }
                }
            }
        },
        {
            "name": "EnableOrganizationAdminAccount",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/admin/enable"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableOrganizationAdminAccountResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/EnableOrganizationAdminAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AdminAccountId": {}
                    }
                }
            }
        },
        {
            "name": "GetAdministratorAccount",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/administrator"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAdministratorAccountResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetAdministratorAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetCoverageStatistics",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/coverage/statistics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCoverageStatisticsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetCoverageStatisticsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "FilterCriteria": {},
                        "StatisticsType": {}
                    }
                }
            }
        },
        {
            "name": "GetDetector",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDetectorResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetDetectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetFilter",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "FilterName": "route.FilterName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/filter/{FilterName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFilterResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0.FilterName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "FilterName": {}
                    }
                }
            }
        },
        {
            "name": "GetFindings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/findings/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFindingsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetFindingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "FindingIds": {},
                        "SortCriteria": {}
                    }
                }
            }
        },
        {
            "name": "GetFindingsStatistics",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/findings/statistics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFindingsStatisticsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetFindingsStatisticsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "FindingStatisticTypes": {},
                        "FindingCriteria": {},
                        "GroupBy": {},
                        "OrderBy": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "GetInvitationsCount",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/invitation/count"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInvitationsCountResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetInvitationsCountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetIPSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "IpSetId": "route.IpSetId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/ipset/{IpSetId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIPSetResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0.IpSetId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetIPSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "IpSetId": {}
                    }
                }
            }
        },
        {
            "name": "GetMalwareProtectionPlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MalwareProtectionPlanId": "route.MalwareProtectionPlanId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/malware-protection-plan/{MalwareProtectionPlanId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMalwareProtectionPlanResponse"
                    },
                    "inject": [
                        "params.0.MalwareProtectionPlanId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetMalwareProtectionPlanRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MalwareProtectionPlanId": {}
                    }
                }
            }
        },
        {
            "name": "GetMalwareScanSettings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/malware-scan-settings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMalwareScanSettingsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetMalwareScanSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetMasterAccount",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/master"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMasterAccountResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetMasterAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetMemberDetectors",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/member/detector/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMemberDetectorsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetMemberDetectorsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "AccountIds": {}
                    }
                }
            }
        },
        {
            "name": "GetMembers",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/member/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMembersResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetMembersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "AccountIds": {}
                    }
                }
            }
        },
        {
            "name": "GetOrganizationStatistics",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/organization/statistics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOrganizationStatisticsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetRemainingFreeTrialDays",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/freeTrial/daysRemaining"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRemainingFreeTrialDaysResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetRemainingFreeTrialDaysRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "AccountIds": {}
                    }
                }
            }
        },
        {
            "name": "GetThreatIntelSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "ThreatIntelSetId": "route.ThreatIntelSetId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/threatintelset/{ThreatIntelSetId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetThreatIntelSetResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0.ThreatIntelSetId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetThreatIntelSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "ThreatIntelSetId": {}
                    }
                }
            }
        },
        {
            "name": "GetUsageStatistics",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/usage/statistics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUsageStatisticsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetUsageStatisticsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "UsageStatisticType": {},
                        "UsageCriteria": {},
                        "Unit": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "InviteMembers",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/member/invite"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/InviteMembersResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/InviteMembersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "AccountIds": {},
                        "DisableEmailNotification": {},
                        "Message": {}
                    }
                }
            }
        },
        {
            "name": "ListCoverage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/coverage"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCoverageResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListCoverageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "NextToken": {},
                        "MaxResults": {},
                        "FilterCriteria": {},
                        "SortCriteria": {}
                    }
                }
            }
        },
        {
            "name": "ListDetectors",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/detector"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDetectorsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListDetectorsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListFilters",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/filter"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFiltersResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListFiltersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListFindings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/findings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFindingsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListFindingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "FindingCriteria": {},
                        "SortCriteria": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListInvitations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/invitation"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInvitationsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListInvitationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListIPSets",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/ipset"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListIPSetsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListIPSetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListMalwareProtectionPlans",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/malware-protection-plan"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMalwareProtectionPlansResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListMalwareProtectionPlansRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListMembers",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/member"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMembersResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListMembersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "MaxResults": {},
                        "NextToken": {},
                        "OnlyAssociated": {}
                    }
                }
            }
        },
        {
            "name": "ListOrganizationAdminAccounts",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/admin"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOrganizationAdminAccountsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListOrganizationAdminAccountsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListPublishingDestinations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/publishingDestination"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPublishingDestinationsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListPublishingDestinationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "ListThreatIntelSets",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector/{DetectorId}/threatintelset"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListThreatIntelSetsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListThreatIntelSetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "StartMalwareScan",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/malware-scan/start"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartMalwareScanResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartMalwareScanRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "StartMonitoringMembers",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/member/start"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartMonitoringMembersResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartMonitoringMembersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "AccountIds": {}
                    }
                }
            }
        },
        {
            "name": "StopMonitoringMembers",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/member/stop"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopMonitoringMembersResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StopMonitoringMembersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "AccountIds": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UnarchiveFindings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/findings/unarchive"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UnarchiveFindingsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UnarchiveFindingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "FindingIds": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "TagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDetector",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDetectorResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateDetectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "Enable": {},
                        "FindingPublishingFrequency": {},
                        "DataSources": {},
                        "Features": {}
                    }
                }
            }
        },
        {
            "name": "UpdateFilter",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "FilterName": "route.FilterName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/filter/{FilterName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFilterResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0.FilterName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "FilterName": {},
                        "Description": {},
                        "Action": {},
                        "Rank": {},
                        "FindingCriteria": {}
                    }
                }
            }
        },
        {
            "name": "UpdateFindingsFeedback",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/findings/feedback"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFindingsFeedbackResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateFindingsFeedbackRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "FindingIds": {},
                        "Feedback": {},
                        "Comments": {}
                    }
                }
            }
        },
        {
            "name": "UpdateIPSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "IpSetId": "route.IpSetId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/ipset/{IpSetId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateIPSetResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0.IpSetId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateIPSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "IpSetId": {},
                        "Name": {},
                        "Location": {},
                        "Activate": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMalwareProtectionPlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MalwareProtectionPlanId": "route.MalwareProtectionPlanId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/malware-protection-plan/{MalwareProtectionPlanId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.MalwareProtectionPlanId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateMalwareProtectionPlanRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MalwareProtectionPlanId": {},
                        "Role": {},
                        "Actions": {},
                        "ProtectedResource": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMalwareScanSettings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/malware-scan-settings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMalwareScanSettingsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateMalwareScanSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "ScanResourceCriteria": {},
                        "EbsSnapshotPreservation": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMemberDetectors",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/member/detector/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMemberDetectorsResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateMemberDetectorsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "AccountIds": {},
                        "DataSources": {},
                        "Features": {}
                    }
                }
            }
        },
        {
            "name": "UpdateOrganizationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/admin"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateOrganizationConfigurationResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateOrganizationConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "AutoEnable": {},
                        "DataSources": {},
                        "Features": {},
                        "AutoEnableOrganizationMembers": {}
                    }
                }
            }
        },
        {
            "name": "UpdatePublishingDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "DestinationId": "route.DestinationId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/publishingDestination/{DestinationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePublishingDestinationResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0.DestinationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdatePublishingDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "DestinationId": {},
                        "DestinationProperties": {}
                    }
                }
            }
        },
        {
            "name": "UpdateThreatIntelSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DetectorId": "route.DetectorId",
                            "ThreatIntelSetId": "route.ThreatIntelSetId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector/{DetectorId}/threatintelset/{ThreatIntelSetId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateThreatIntelSetResponse"
                    },
                    "inject": [
                        "params.0.DetectorId",
                        "params.0.ThreatIntelSetId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateThreatIntelSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DetectorId": {},
                        "ThreatIntelSetId": {},
                        "Name": {},
                        "Location": {},
                        "Activate": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AcceptAdministratorInvitationRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AdministratorId": {
                    "$ref": "#/$defs/String"
                },
                "InvitationId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DetectorId": {
            "type": "string"
        },
        "String": {
            "type": "string"
        },
        "AcceptAdministratorInvitationResponse": {
            "type": "object",
            "properties": {}
        },
        "AcceptInvitationRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "MasterId": {
                    "$ref": "#/$defs/String"
                },
                "InvitationId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AcceptInvitationResponse": {
            "type": "object",
            "properties": {}
        },
        "ArchiveFindingsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "FindingIds": {
                    "$ref": "#/$defs/FindingIds"
                }
            }
        },
        "FindingIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FindingId"
            }
        },
        "FindingId": {
            "type": "string"
        },
        "ArchiveFindingsResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateDetectorRequest": {
            "type": "object",
            "properties": {
                "Enable": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "FindingPublishingFrequency": {
                    "$ref": "#/$defs/FindingPublishingFrequency"
                },
                "DataSources": {
                    "$ref": "#/$defs/DataSourceConfigurations"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Features": {
                    "$ref": "#/$defs/DetectorFeatureConfigurations"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "ClientToken": {
            "type": "string"
        },
        "FindingPublishingFrequency": {
            "enum": [
                "FIFTEEN_MINUTES",
                "ONE_HOUR",
                "SIX_HOURS"
            ]
        },
        "DataSourceConfigurations": {
            "type": "object",
            "properties": {
                "S3Logs": {
                    "$ref": "#/$defs/S3LogsConfiguration"
                },
                "Kubernetes": {
                    "$ref": "#/$defs/KubernetesConfiguration"
                },
                "MalwareProtection": {
                    "$ref": "#/$defs/MalwareProtectionConfiguration"
                }
            }
        },
        "S3LogsConfiguration": {
            "type": "object",
            "properties": {
                "Enable": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "KubernetesConfiguration": {
            "type": "object",
            "properties": {
                "AuditLogs": {
                    "$ref": "#/$defs/KubernetesAuditLogsConfiguration"
                }
            }
        },
        "KubernetesAuditLogsConfiguration": {
            "type": "object",
            "properties": {
                "Enable": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "MalwareProtectionConfiguration": {
            "type": "object",
            "properties": {
                "ScanEc2InstanceWithFindings": {
                    "$ref": "#/$defs/ScanEc2InstanceWithFindings"
                }
            }
        },
        "ScanEc2InstanceWithFindings": {
            "type": "object",
            "properties": {
                "EbsVolumes": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "DetectorFeatureConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectorFeatureConfiguration"
            }
        },
        "DetectorFeatureConfiguration": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DetectorFeature"
                },
                "Status": {
                    "$ref": "#/$defs/FeatureStatus"
                },
                "AdditionalConfiguration": {
                    "$ref": "#/$defs/DetectorAdditionalConfigurations"
                }
            }
        },
        "DetectorFeature": {
            "enum": [
                "S3_DATA_EVENTS",
                "EKS_AUDIT_LOGS",
                "EBS_MALWARE_PROTECTION",
                "RDS_LOGIN_EVENTS",
                "EKS_RUNTIME_MONITORING",
                "LAMBDA_NETWORK_LOGS",
                "RUNTIME_MONITORING"
            ]
        },
        "FeatureStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "DetectorAdditionalConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectorAdditionalConfiguration"
            }
        },
        "DetectorAdditionalConfiguration": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FeatureAdditionalConfiguration"
                },
                "Status": {
                    "$ref": "#/$defs/FeatureStatus"
                }
            }
        },
        "FeatureAdditionalConfiguration": {
            "enum": [
                "EKS_ADDON_MANAGEMENT",
                "ECS_FARGATE_AGENT_MANAGEMENT",
                "EC2_AGENT_MANAGEMENT"
            ]
        },
        "CreateDetectorResponse": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "UnprocessedDataSources": {
                    "$ref": "#/$defs/UnprocessedDataSourcesResult"
                }
            }
        },
        "UnprocessedDataSourcesResult": {
            "type": "object",
            "properties": {
                "MalwareProtection": {
                    "$ref": "#/$defs/MalwareProtectionConfigurationResult"
                }
            }
        },
        "MalwareProtectionConfigurationResult": {
            "type": "object",
            "properties": {
                "ScanEc2InstanceWithFindings": {
                    "$ref": "#/$defs/ScanEc2InstanceWithFindingsResult"
                },
                "ServiceRole": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ScanEc2InstanceWithFindingsResult": {
            "type": "object",
            "properties": {
                "EbsVolumes": {
                    "$ref": "#/$defs/EbsVolumesResult"
                }
            }
        },
        "EbsVolumesResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/DataSourceStatus"
                },
                "Reason": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DataSourceStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "CreateFilterRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "Name": {
                    "$ref": "#/$defs/FilterName"
                },
                "Description": {
                    "$ref": "#/$defs/FilterDescription"
                },
                "Action": {
                    "$ref": "#/$defs/FilterAction"
                },
                "Rank": {
                    "$ref": "#/$defs/FilterRank"
                },
                "FindingCriteria": {
                    "$ref": "#/$defs/FindingCriteria"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "FilterName": {
            "type": "string"
        },
        "FilterDescription": {
            "type": "string"
        },
        "FilterAction": {
            "enum": [
                "NOOP",
                "ARCHIVE"
            ]
        },
        "FilterRank": {
            "type": "integer",
            "format": "int32"
        },
        "FindingCriteria": {
            "type": "object",
            "properties": {
                "Criterion": {
                    "$ref": "#/$defs/Criterion"
                }
            }
        },
        "Criterion": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Condition"
            }
        },
        "Condition": {
            "type": "object",
            "properties": {
                "Eq": {
                    "$ref": "#/$defs/Eq"
                },
                "Neq": {
                    "$ref": "#/$defs/Neq"
                },
                "Gt": {
                    "$ref": "#/$defs/Integer"
                },
                "Gte": {
                    "$ref": "#/$defs/Integer"
                },
                "Lt": {
                    "$ref": "#/$defs/Integer"
                },
                "Lte": {
                    "$ref": "#/$defs/Integer"
                },
                "Equals": {
                    "$ref": "#/$defs/Equals"
                },
                "NotEquals": {
                    "$ref": "#/$defs/NotEquals"
                },
                "GreaterThan": {
                    "$ref": "#/$defs/Long"
                },
                "GreaterThanOrEqual": {
                    "$ref": "#/$defs/Long"
                },
                "LessThan": {
                    "$ref": "#/$defs/Long"
                },
                "LessThanOrEqual": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "Eq": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "Neq": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "Equals": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "NotEquals": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "CreateFilterResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FilterName"
                }
            }
        },
        "CreateIPSetRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Format": {
                    "$ref": "#/$defs/IpSetFormat"
                },
                "Location": {
                    "$ref": "#/$defs/Location"
                },
                "Activate": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "Name": {
            "type": "string"
        },
        "IpSetFormat": {
            "enum": [
                "TXT",
                "STIX",
                "OTX_CSV",
                "ALIEN_VAULT",
                "PROOF_POINT",
                "FIRE_EYE"
            ]
        },
        "Location": {
            "type": "string"
        },
        "CreateIPSetResponse": {
            "type": "object",
            "properties": {
                "IpSetId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateMalwareProtectionPlanRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "Role": {
                    "$ref": "#/$defs/String"
                },
                "ProtectedResource": {
                    "$ref": "#/$defs/CreateProtectedResource"
                },
                "Actions": {
                    "$ref": "#/$defs/MalwareProtectionPlanActions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CreateProtectedResource": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/CreateS3BucketResource"
                }
            }
        },
        "CreateS3BucketResource": {
            "type": "object",
            "properties": {
                "BucketName": {
                    "$ref": "#/$defs/String"
                },
                "ObjectPrefixes": {
                    "$ref": "#/$defs/MalwareProtectionPlanObjectPrefixesList"
                }
            }
        },
        "MalwareProtectionPlanObjectPrefixesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "MalwareProtectionPlanActions": {
            "type": "object",
            "properties": {
                "Tagging": {
                    "$ref": "#/$defs/MalwareProtectionPlanTaggingAction"
                }
            }
        },
        "MalwareProtectionPlanTaggingAction": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/MalwareProtectionPlanTaggingActionStatus"
                }
            }
        },
        "MalwareProtectionPlanTaggingActionStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "CreateMalwareProtectionPlanResponse": {
            "type": "object",
            "properties": {
                "MalwareProtectionPlanId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateMembersRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AccountDetails": {
                    "$ref": "#/$defs/AccountDetails"
                }
            }
        },
        "AccountDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountDetail"
            }
        },
        "AccountDetail": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "Email": {
                    "$ref": "#/$defs/Email"
                }
            }
        },
        "AccountId": {
            "type": "string"
        },
        "Email": {
            "type": "string"
        },
        "CreateMembersResponse": {
            "type": "object",
            "properties": {
                "UnprocessedAccounts": {
                    "$ref": "#/$defs/UnprocessedAccounts"
                }
            }
        },
        "UnprocessedAccounts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnprocessedAccount"
            }
        },
        "UnprocessedAccount": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "Result": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreatePublishingDestinationRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "DestinationType": {
                    "$ref": "#/$defs/DestinationType"
                },
                "DestinationProperties": {
                    "$ref": "#/$defs/DestinationProperties"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DestinationType": {
            "enum": [
                "S3"
            ]
        },
        "DestinationProperties": {
            "type": "object",
            "properties": {
                "DestinationArn": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreatePublishingDestinationResponse": {
            "type": "object",
            "properties": {
                "DestinationId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateSampleFindingsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "FindingTypes": {
                    "$ref": "#/$defs/FindingTypes"
                }
            }
        },
        "FindingTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FindingType"
            }
        },
        "FindingType": {
            "type": "string"
        },
        "CreateSampleFindingsResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateThreatIntelSetRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Format": {
                    "$ref": "#/$defs/ThreatIntelSetFormat"
                },
                "Location": {
                    "$ref": "#/$defs/Location"
                },
                "Activate": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ThreatIntelSetFormat": {
            "enum": [
                "TXT",
                "STIX",
                "OTX_CSV",
                "ALIEN_VAULT",
                "PROOF_POINT",
                "FIRE_EYE"
            ]
        },
        "CreateThreatIntelSetResponse": {
            "type": "object",
            "properties": {
                "ThreatIntelSetId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeclineInvitationsRequest": {
            "type": "object",
            "properties": {
                "AccountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "AccountIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountId"
            }
        },
        "DeclineInvitationsResponse": {
            "type": "object",
            "properties": {
                "UnprocessedAccounts": {
                    "$ref": "#/$defs/UnprocessedAccounts"
                }
            }
        },
        "DeleteDetectorRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                }
            }
        },
        "DeleteDetectorResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteFilterRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "FilterName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteFilterResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteInvitationsRequest": {
            "type": "object",
            "properties": {
                "AccountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "DeleteInvitationsResponse": {
            "type": "object",
            "properties": {
                "UnprocessedAccounts": {
                    "$ref": "#/$defs/UnprocessedAccounts"
                }
            }
        },
        "DeleteIPSetRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "IpSetId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteIPSetResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteMalwareProtectionPlanRequest": {
            "type": "object",
            "properties": {
                "MalwareProtectionPlanId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteMembersRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AccountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "DeleteMembersResponse": {
            "type": "object",
            "properties": {
                "UnprocessedAccounts": {
                    "$ref": "#/$defs/UnprocessedAccounts"
                }
            }
        },
        "DeletePublishingDestinationRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "DestinationId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeletePublishingDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteThreatIntelSetRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "ThreatIntelSetId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteThreatIntelSetResponse": {
            "type": "object",
            "properties": {}
        },
        "DescribeMalwareScansRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerValueWithMax"
                },
                "FilterCriteria": {
                    "$ref": "#/$defs/FilterCriteria"
                },
                "SortCriteria": {
                    "$ref": "#/$defs/SortCriteria"
                }
            }
        },
        "IntegerValueWithMax": {
            "type": "integer",
            "format": "int32"
        },
        "FilterCriteria": {
            "type": "object",
            "properties": {
                "FilterCriterion": {
                    "$ref": "#/$defs/FilterCriterionList"
                }
            }
        },
        "FilterCriterionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterCriterion"
            }
        },
        "FilterCriterion": {
            "type": "object",
            "properties": {
                "CriterionKey": {
                    "$ref": "#/$defs/CriterionKey"
                },
                "FilterCondition": {
                    "$ref": "#/$defs/FilterCondition"
                }
            }
        },
        "CriterionKey": {
            "enum": [
                "EC2_INSTANCE_ARN",
                "SCAN_ID",
                "ACCOUNT_ID",
                "GUARDDUTY_FINDING_ID",
                "SCAN_START_TIME",
                "SCAN_STATUS",
                "SCAN_TYPE"
            ]
        },
        "FilterCondition": {
            "type": "object",
            "properties": {
                "EqualsValue": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "GreaterThan": {
                    "$ref": "#/$defs/LongValue"
                },
                "LessThan": {
                    "$ref": "#/$defs/LongValue"
                }
            }
        },
        "NonEmptyString": {
            "type": "string"
        },
        "LongValue": {
            "type": "integer",
            "format": "int64"
        },
        "SortCriteria": {
            "type": "object",
            "properties": {
                "AttributeName": {
                    "$ref": "#/$defs/String"
                },
                "OrderBy": {
                    "$ref": "#/$defs/OrderBy"
                }
            }
        },
        "OrderBy": {
            "enum": [
                "ASC",
                "DESC"
            ]
        },
        "DescribeMalwareScansResponse": {
            "type": "object",
            "properties": {
                "Scans": {
                    "$ref": "#/$defs/Scans"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Scans": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Scan"
            }
        },
        "Scan": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AdminDetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "ScanId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "ScanStatus": {
                    "$ref": "#/$defs/ScanStatus"
                },
                "FailureReason": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "ScanStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ScanEndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "TriggerDetails": {
                    "$ref": "#/$defs/TriggerDetails"
                },
                "ResourceDetails": {
                    "$ref": "#/$defs/ResourceDetails"
                },
                "ScanResultDetails": {
                    "$ref": "#/$defs/ScanResultDetails"
                },
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "TotalBytes": {
                    "$ref": "#/$defs/PositiveLong"
                },
                "FileCount": {
                    "$ref": "#/$defs/PositiveLong"
                },
                "AttachedVolumes": {
                    "$ref": "#/$defs/VolumeDetails"
                },
                "ScanType": {
                    "$ref": "#/$defs/ScanType"
                }
            }
        },
        "ScanStatus": {
            "enum": [
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "SKIPPED"
            ]
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "TriggerDetails": {
            "type": "object",
            "properties": {
                "GuardDutyFindingId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Description": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "ResourceDetails": {
            "type": "object",
            "properties": {
                "InstanceArn": {
                    "$ref": "#/$defs/InstanceArn"
                }
            }
        },
        "InstanceArn": {
            "type": "string"
        },
        "ScanResultDetails": {
            "type": "object",
            "properties": {
                "ScanResult": {
                    "$ref": "#/$defs/ScanResult"
                }
            }
        },
        "ScanResult": {
            "enum": [
                "CLEAN",
                "INFECTED"
            ]
        },
        "PositiveLong": {
            "type": "integer",
            "format": "int64"
        },
        "VolumeDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeDetail"
            }
        },
        "VolumeDetail": {
            "type": "object",
            "properties": {
                "VolumeArn": {
                    "$ref": "#/$defs/String"
                },
                "VolumeType": {
                    "$ref": "#/$defs/String"
                },
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "VolumeSizeInGB": {
                    "$ref": "#/$defs/Integer"
                },
                "EncryptionType": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotArn": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ScanType": {
            "enum": [
                "GUARDDUTY_INITIATED",
                "ON_DEMAND"
            ]
        },
        "DescribeOrganizationConfigurationRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeOrganizationConfigurationResponse": {
            "type": "object",
            "properties": {
                "AutoEnable": {
                    "$ref": "#/$defs/Boolean"
                },
                "MemberAccountLimitReached": {
                    "$ref": "#/$defs/Boolean"
                },
                "DataSources": {
                    "$ref": "#/$defs/OrganizationDataSourceConfigurationsResult"
                },
                "Features": {
                    "$ref": "#/$defs/OrganizationFeaturesConfigurationsResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "AutoEnableOrganizationMembers": {
                    "$ref": "#/$defs/AutoEnableMembers"
                }
            }
        },
        "OrganizationDataSourceConfigurationsResult": {
            "type": "object",
            "properties": {
                "S3Logs": {
                    "$ref": "#/$defs/OrganizationS3LogsConfigurationResult"
                },
                "Kubernetes": {
                    "$ref": "#/$defs/OrganizationKubernetesConfigurationResult"
                },
                "MalwareProtection": {
                    "$ref": "#/$defs/OrganizationMalwareProtectionConfigurationResult"
                }
            }
        },
        "OrganizationS3LogsConfigurationResult": {
            "type": "object",
            "properties": {
                "AutoEnable": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "OrganizationKubernetesConfigurationResult": {
            "type": "object",
            "properties": {
                "AuditLogs": {
                    "$ref": "#/$defs/OrganizationKubernetesAuditLogsConfigurationResult"
                }
            }
        },
        "OrganizationKubernetesAuditLogsConfigurationResult": {
            "type": "object",
            "properties": {
                "AutoEnable": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "OrganizationMalwareProtectionConfigurationResult": {
            "type": "object",
            "properties": {
                "ScanEc2InstanceWithFindings": {
                    "$ref": "#/$defs/OrganizationScanEc2InstanceWithFindingsResult"
                }
            }
        },
        "OrganizationScanEc2InstanceWithFindingsResult": {
            "type": "object",
            "properties": {
                "EbsVolumes": {
                    "$ref": "#/$defs/OrganizationEbsVolumesResult"
                }
            }
        },
        "OrganizationEbsVolumesResult": {
            "type": "object",
            "properties": {
                "AutoEnable": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "OrganizationFeaturesConfigurationsResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationFeatureConfigurationResult"
            }
        },
        "OrganizationFeatureConfigurationResult": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrgFeature"
                },
                "AutoEnable": {
                    "$ref": "#/$defs/OrgFeatureStatus"
                },
                "AdditionalConfiguration": {
                    "$ref": "#/$defs/OrganizationAdditionalConfigurationResults"
                }
            }
        },
        "OrgFeature": {
            "enum": [
                "S3_DATA_EVENTS",
                "EKS_AUDIT_LOGS",
                "EBS_MALWARE_PROTECTION",
                "RDS_LOGIN_EVENTS",
                "EKS_RUNTIME_MONITORING",
                "LAMBDA_NETWORK_LOGS",
                "RUNTIME_MONITORING"
            ]
        },
        "OrgFeatureStatus": {
            "enum": [
                "NEW",
                "NONE",
                "ALL"
            ]
        },
        "OrganizationAdditionalConfigurationResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationAdditionalConfigurationResult"
            }
        },
        "OrganizationAdditionalConfigurationResult": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrgFeatureAdditionalConfiguration"
                },
                "AutoEnable": {
                    "$ref": "#/$defs/OrgFeatureStatus"
                }
            }
        },
        "OrgFeatureAdditionalConfiguration": {
            "enum": [
                "EKS_ADDON_MANAGEMENT",
                "ECS_FARGATE_AGENT_MANAGEMENT",
                "EC2_AGENT_MANAGEMENT"
            ]
        },
        "AutoEnableMembers": {
            "enum": [
                "NEW",
                "ALL",
                "NONE"
            ]
        },
        "DescribePublishingDestinationRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "DestinationId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribePublishingDestinationResponse": {
            "type": "object",
            "properties": {
                "DestinationId": {
                    "$ref": "#/$defs/String"
                },
                "DestinationType": {
                    "$ref": "#/$defs/DestinationType"
                },
                "Status": {
                    "$ref": "#/$defs/PublishingStatus"
                },
                "PublishingFailureStartTimestamp": {
                    "$ref": "#/$defs/Long"
                },
                "DestinationProperties": {
                    "$ref": "#/$defs/DestinationProperties"
                }
            }
        },
        "PublishingStatus": {
            "enum": [
                "PENDING_VERIFICATION",
                "PUBLISHING",
                "UNABLE_TO_PUBLISH_FIX_DESTINATION_PROPERTY",
                "STOPPED"
            ]
        },
        "DisableOrganizationAdminAccountRequest": {
            "type": "object",
            "properties": {
                "AdminAccountId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DisableOrganizationAdminAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateFromAdministratorAccountRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                }
            }
        },
        "DisassociateFromAdministratorAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateFromMasterAccountRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                }
            }
        },
        "DisassociateFromMasterAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateMembersRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AccountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "DisassociateMembersResponse": {
            "type": "object",
            "properties": {
                "UnprocessedAccounts": {
                    "$ref": "#/$defs/UnprocessedAccounts"
                }
            }
        },
        "EnableOrganizationAdminAccountRequest": {
            "type": "object",
            "properties": {
                "AdminAccountId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EnableOrganizationAdminAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "GetAdministratorAccountRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                }
            }
        },
        "GetAdministratorAccountResponse": {
            "type": "object",
            "properties": {
                "Administrator": {
                    "$ref": "#/$defs/Administrator"
                }
            }
        },
        "Administrator": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "InvitationId": {
                    "$ref": "#/$defs/String"
                },
                "RelationshipStatus": {
                    "$ref": "#/$defs/String"
                },
                "InvitedAt": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetCoverageStatisticsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "FilterCriteria": {
                    "$ref": "#/$defs/CoverageFilterCriteria"
                },
                "StatisticsType": {
                    "$ref": "#/$defs/CoverageStatisticsTypeList"
                }
            }
        },
        "CoverageFilterCriteria": {
            "type": "object",
            "properties": {
                "FilterCriterion": {
                    "$ref": "#/$defs/CoverageFilterCriterionList"
                }
            }
        },
        "CoverageFilterCriterionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CoverageFilterCriterion"
            }
        },
        "CoverageFilterCriterion": {
            "type": "object",
            "properties": {
                "CriterionKey": {
                    "$ref": "#/$defs/CoverageFilterCriterionKey"
                },
                "FilterCondition": {
                    "$ref": "#/$defs/CoverageFilterCondition"
                }
            }
        },
        "CoverageFilterCriterionKey": {
            "enum": [
                "ACCOUNT_ID",
                "CLUSTER_NAME",
                "RESOURCE_TYPE",
                "COVERAGE_STATUS",
                "ADDON_VERSION",
                "MANAGEMENT_TYPE",
                "EKS_CLUSTER_NAME",
                "ECS_CLUSTER_NAME",
                "AGENT_VERSION",
                "INSTANCE_ID",
                "CLUSTER_ARN"
            ]
        },
        "CoverageFilterCondition": {
            "type": "object",
            "properties": {
                "Equals": {
                    "$ref": "#/$defs/Equals"
                },
                "NotEquals": {
                    "$ref": "#/$defs/NotEquals"
                }
            }
        },
        "CoverageStatisticsTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CoverageStatisticsType"
            }
        },
        "CoverageStatisticsType": {
            "enum": [
                "COUNT_BY_RESOURCE_TYPE",
                "COUNT_BY_COVERAGE_STATUS"
            ]
        },
        "GetCoverageStatisticsResponse": {
            "type": "object",
            "properties": {
                "CoverageStatistics": {
                    "$ref": "#/$defs/CoverageStatistics"
                }
            }
        },
        "CoverageStatistics": {
            "type": "object",
            "properties": {
                "CountByResourceType": {
                    "$ref": "#/$defs/CountByResourceType"
                },
                "CountByCoverageStatus": {
                    "$ref": "#/$defs/CountByCoverageStatus"
                }
            }
        },
        "CountByResourceType": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Long"
            }
        },
        "CountByCoverageStatus": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Long"
            }
        },
        "GetDetectorRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                }
            }
        },
        "GetDetectorResponse": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "$ref": "#/$defs/String"
                },
                "FindingPublishingFrequency": {
                    "$ref": "#/$defs/FindingPublishingFrequency"
                },
                "ServiceRole": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/DetectorStatus"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/String"
                },
                "DataSources": {
                    "$ref": "#/$defs/DataSourceConfigurationsResult"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Features": {
                    "$ref": "#/$defs/DetectorFeatureConfigurationsResults"
                }
            }
        },
        "DetectorStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "DataSourceConfigurationsResult": {
            "type": "object",
            "properties": {
                "CloudTrail": {
                    "$ref": "#/$defs/CloudTrailConfigurationResult"
                },
                "DNSLogs": {
                    "$ref": "#/$defs/DNSLogsConfigurationResult"
                },
                "FlowLogs": {
                    "$ref": "#/$defs/FlowLogsConfigurationResult"
                },
                "S3Logs": {
                    "$ref": "#/$defs/S3LogsConfigurationResult"
                },
                "Kubernetes": {
                    "$ref": "#/$defs/KubernetesConfigurationResult"
                },
                "MalwareProtection": {
                    "$ref": "#/$defs/MalwareProtectionConfigurationResult"
                }
            }
        },
        "CloudTrailConfigurationResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/DataSourceStatus"
                }
            }
        },
        "DNSLogsConfigurationResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/DataSourceStatus"
                }
            }
        },
        "FlowLogsConfigurationResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/DataSourceStatus"
                }
            }
        },
        "S3LogsConfigurationResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/DataSourceStatus"
                }
            }
        },
        "KubernetesConfigurationResult": {
            "type": "object",
            "properties": {
                "AuditLogs": {
                    "$ref": "#/$defs/KubernetesAuditLogsConfigurationResult"
                }
            }
        },
        "KubernetesAuditLogsConfigurationResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/DataSourceStatus"
                }
            }
        },
        "DetectorFeatureConfigurationsResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectorFeatureConfigurationResult"
            }
        },
        "DetectorFeatureConfigurationResult": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DetectorFeatureResult"
                },
                "Status": {
                    "$ref": "#/$defs/FeatureStatus"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "AdditionalConfiguration": {
                    "$ref": "#/$defs/DetectorAdditionalConfigurationResults"
                }
            }
        },
        "DetectorFeatureResult": {
            "enum": [
                "FLOW_LOGS",
                "CLOUD_TRAIL",
                "DNS_LOGS",
                "S3_DATA_EVENTS",
                "EKS_AUDIT_LOGS",
                "EBS_MALWARE_PROTECTION",
                "RDS_LOGIN_EVENTS",
                "EKS_RUNTIME_MONITORING",
                "LAMBDA_NETWORK_LOGS",
                "RUNTIME_MONITORING"
            ]
        },
        "DetectorAdditionalConfigurationResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectorAdditionalConfigurationResult"
            }
        },
        "DetectorAdditionalConfigurationResult": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FeatureAdditionalConfiguration"
                },
                "Status": {
                    "$ref": "#/$defs/FeatureStatus"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "GetFilterRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "FilterName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetFilterResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FilterName"
                },
                "Description": {
                    "$ref": "#/$defs/FilterDescription"
                },
                "Action": {
                    "$ref": "#/$defs/FilterAction"
                },
                "Rank": {
                    "$ref": "#/$defs/FilterRank"
                },
                "FindingCriteria": {
                    "$ref": "#/$defs/FindingCriteria"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetFindingsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "FindingIds": {
                    "$ref": "#/$defs/FindingIds"
                },
                "SortCriteria": {
                    "$ref": "#/$defs/SortCriteria"
                }
            }
        },
        "GetFindingsResponse": {
            "type": "object",
            "properties": {
                "Findings": {
                    "$ref": "#/$defs/Findings"
                }
            }
        },
        "Findings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Finding"
            }
        },
        "Finding": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "Confidence": {
                    "$ref": "#/$defs/Double"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "Partition": {
                    "$ref": "#/$defs/String"
                },
                "Region": {
                    "$ref": "#/$defs/String"
                },
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "SchemaVersion": {
                    "$ref": "#/$defs/String"
                },
                "Service": {
                    "$ref": "#/$defs/Service"
                },
                "Severity": {
                    "$ref": "#/$defs/Double"
                },
                "Title": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/FindingType"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/String"
                },
                "AssociatedAttackSequenceArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "Resource": {
            "type": "object",
            "properties": {
                "AccessKeyDetails": {
                    "$ref": "#/$defs/AccessKeyDetails"
                },
                "S3BucketDetails": {
                    "$ref": "#/$defs/S3BucketDetails"
                },
                "InstanceDetails": {
                    "$ref": "#/$defs/InstanceDetails"
                },
                "EksClusterDetails": {
                    "$ref": "#/$defs/EksClusterDetails"
                },
                "KubernetesDetails": {
                    "$ref": "#/$defs/KubernetesDetails"
                },
                "ResourceType": {
                    "$ref": "#/$defs/String"
                },
                "EbsVolumeDetails": {
                    "$ref": "#/$defs/EbsVolumeDetails"
                },
                "EcsClusterDetails": {
                    "$ref": "#/$defs/EcsClusterDetails"
                },
                "ContainerDetails": {
                    "$ref": "#/$defs/Container"
                },
                "RdsDbInstanceDetails": {
                    "$ref": "#/$defs/RdsDbInstanceDetails"
                },
                "RdsLimitlessDbDetails": {
                    "$ref": "#/$defs/RdsLimitlessDbDetails"
                },
                "RdsDbUserDetails": {
                    "$ref": "#/$defs/RdsDbUserDetails"
                },
                "LambdaDetails": {
                    "$ref": "#/$defs/LambdaDetails"
                }
            }
        },
        "AccessKeyDetails": {
            "type": "object",
            "properties": {
                "AccessKeyId": {
                    "$ref": "#/$defs/String"
                },
                "PrincipalId": {
                    "$ref": "#/$defs/String"
                },
                "UserName": {
                    "$ref": "#/$defs/String"
                },
                "UserType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "S3BucketDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/S3BucketDetail"
            }
        },
        "S3BucketDetail": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "DefaultServerSideEncryption": {
                    "$ref": "#/$defs/DefaultServerSideEncryption"
                },
                "PublicAccess": {
                    "$ref": "#/$defs/PublicAccess"
                },
                "S3ObjectDetails": {
                    "$ref": "#/$defs/S3ObjectDetails"
                }
            }
        },
        "Owner": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Tags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DefaultServerSideEncryption": {
            "type": "object",
            "properties": {
                "EncryptionType": {
                    "$ref": "#/$defs/String"
                },
                "KmsMasterKeyArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PublicAccess": {
            "type": "object",
            "properties": {
                "PermissionConfiguration": {
                    "$ref": "#/$defs/PermissionConfiguration"
                },
                "EffectivePermission": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PermissionConfiguration": {
            "type": "object",
            "properties": {
                "BucketLevelPermissions": {
                    "$ref": "#/$defs/BucketLevelPermissions"
                },
                "AccountLevelPermissions": {
                    "$ref": "#/$defs/AccountLevelPermissions"
                }
            }
        },
        "BucketLevelPermissions": {
            "type": "object",
            "properties": {
                "AccessControlList": {
                    "$ref": "#/$defs/AccessControlList"
                },
                "BucketPolicy": {
                    "$ref": "#/$defs/BucketPolicy"
                },
                "BlockPublicAccess": {
                    "$ref": "#/$defs/BlockPublicAccess"
                }
            }
        },
        "AccessControlList": {
            "type": "object",
            "properties": {
                "AllowsPublicReadAccess": {
                    "$ref": "#/$defs/Boolean"
                },
                "AllowsPublicWriteAccess": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "BucketPolicy": {
            "type": "object",
            "properties": {
                "AllowsPublicReadAccess": {
                    "$ref": "#/$defs/Boolean"
                },
                "AllowsPublicWriteAccess": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "BlockPublicAccess": {
            "type": "object",
            "properties": {
                "IgnorePublicAcls": {
                    "$ref": "#/$defs/Boolean"
                },
                "RestrictPublicBuckets": {
                    "$ref": "#/$defs/Boolean"
                },
                "BlockPublicAcls": {
                    "$ref": "#/$defs/Boolean"
                },
                "BlockPublicPolicy": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AccountLevelPermissions": {
            "type": "object",
            "properties": {
                "BlockPublicAccess": {
                    "$ref": "#/$defs/BlockPublicAccess"
                }
            }
        },
        "S3ObjectDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/S3ObjectDetail"
            }
        },
        "S3ObjectDetail": {
            "type": "object",
            "properties": {
                "ObjectArn": {
                    "$ref": "#/$defs/String"
                },
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "ETag": {
                    "$ref": "#/$defs/String"
                },
                "Hash": {
                    "$ref": "#/$defs/String"
                },
                "VersionId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceDetails": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/IamInstanceProfile"
                },
                "ImageDescription": {
                    "$ref": "#/$defs/String"
                },
                "ImageId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceState": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "LaunchTime": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaces": {
                    "$ref": "#/$defs/NetworkInterfaces"
                },
                "Platform": {
                    "$ref": "#/$defs/String"
                },
                "ProductCodes": {
                    "$ref": "#/$defs/ProductCodes"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "IamInstanceProfile": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "Id": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInterfaces": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInterface"
            }
        },
        "NetworkInterface": {
            "type": "object",
            "properties": {
                "Ipv6Addresses": {
                    "$ref": "#/$defs/Ipv6Addresses"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/PrivateIpAddresses"
                },
                "PublicDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PublicIp": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroups"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ipv6Addresses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "SensitiveString": {
            "type": "string"
        },
        "PrivateIpAddresses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrivateIpAddressDetails"
            }
        },
        "PrivateIpAddressDetails": {
            "type": "object",
            "properties": {
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/SensitiveString"
                }
            }
        },
        "SecurityGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroup"
            }
        },
        "SecurityGroup": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ProductCodes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProductCode"
            }
        },
        "ProductCode": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "ProductType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EksClusterDetails": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "KubernetesDetails": {
            "type": "object",
            "properties": {
                "KubernetesUserDetails": {
                    "$ref": "#/$defs/KubernetesUserDetails"
                },
                "KubernetesWorkloadDetails": {
                    "$ref": "#/$defs/KubernetesWorkloadDetails"
                }
            }
        },
        "KubernetesUserDetails": {
            "type": "object",
            "properties": {
                "Username": {
                    "$ref": "#/$defs/String"
                },
                "Uid": {
                    "$ref": "#/$defs/String"
                },
                "Groups": {
                    "$ref": "#/$defs/Groups"
                },
                "SessionName": {
                    "$ref": "#/$defs/SessionNameList"
                },
                "ImpersonatedUser": {
                    "$ref": "#/$defs/ImpersonatedUser"
                }
            }
        },
        "Groups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "SessionNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ImpersonatedUser": {
            "type": "object",
            "properties": {
                "Username": {
                    "$ref": "#/$defs/String"
                },
                "Groups": {
                    "$ref": "#/$defs/Groups"
                }
            }
        },
        "KubernetesWorkloadDetails": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "Uid": {
                    "$ref": "#/$defs/String"
                },
                "Namespace": {
                    "$ref": "#/$defs/String"
                },
                "HostNetwork": {
                    "$ref": "#/$defs/Boolean"
                },
                "Containers": {
                    "$ref": "#/$defs/Containers"
                },
                "Volumes": {
                    "$ref": "#/$defs/Volumes"
                },
                "ServiceAccountName": {
                    "$ref": "#/$defs/String"
                },
                "HostIPC": {
                    "$ref": "#/$defs/Boolean"
                },
                "HostPID": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Containers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Container"
            }
        },
        "Container": {
            "type": "object",
            "properties": {
                "ContainerRuntime": {
                    "$ref": "#/$defs/String"
                },
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Image": {
                    "$ref": "#/$defs/String"
                },
                "ImagePrefix": {
                    "$ref": "#/$defs/String"
                },
                "VolumeMounts": {
                    "$ref": "#/$defs/VolumeMounts"
                },
                "SecurityContext": {
                    "$ref": "#/$defs/SecurityContext"
                }
            }
        },
        "VolumeMounts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeMount"
            }
        },
        "VolumeMount": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "MountPath": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SecurityContext": {
            "type": "object",
            "properties": {
                "Privileged": {
                    "$ref": "#/$defs/Boolean"
                },
                "AllowPrivilegeEscalation": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Volumes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Volume"
            }
        },
        "Volume": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "HostPath": {
                    "$ref": "#/$defs/HostPath"
                }
            }
        },
        "HostPath": {
            "type": "object",
            "properties": {
                "Path": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EbsVolumeDetails": {
            "type": "object",
            "properties": {
                "ScannedVolumeDetails": {
                    "$ref": "#/$defs/VolumeDetails"
                },
                "SkippedVolumeDetails": {
                    "$ref": "#/$defs/VolumeDetails"
                }
            }
        },
        "EcsClusterDetails": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "ActiveServicesCount": {
                    "$ref": "#/$defs/Integer"
                },
                "RegisteredContainerInstancesCount": {
                    "$ref": "#/$defs/Integer"
                },
                "RunningTasksCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "TaskDetails": {
                    "$ref": "#/$defs/EcsTaskDetails"
                }
            }
        },
        "EcsTaskDetails": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "DefinitionArn": {
                    "$ref": "#/$defs/String"
                },
                "Version": {
                    "$ref": "#/$defs/String"
                },
                "TaskCreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "StartedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "StartedBy": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Volumes": {
                    "$ref": "#/$defs/Volumes"
                },
                "Containers": {
                    "$ref": "#/$defs/Containers"
                },
                "Group": {
                    "$ref": "#/$defs/String"
                },
                "LaunchType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RdsDbInstanceDetails": {
            "type": "object",
            "properties": {
                "DbInstanceIdentifier": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "DbClusterIdentifier": {
                    "$ref": "#/$defs/String"
                },
                "DbInstanceArn": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "RdsLimitlessDbDetails": {
            "type": "object",
            "properties": {
                "DbShardGroupIdentifier": {
                    "$ref": "#/$defs/String"
                },
                "DbShardGroupResourceId": {
                    "$ref": "#/$defs/String"
                },
                "DbShardGroupArn": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "DbClusterIdentifier": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "RdsDbUserDetails": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/String"
                },
                "Application": {
                    "$ref": "#/$defs/String"
                },
                "Database": {
                    "$ref": "#/$defs/String"
                },
                "Ssl": {
                    "$ref": "#/$defs/String"
                },
                "AuthMethod": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LambdaDetails": {
            "type": "object",
            "properties": {
                "FunctionArn": {
                    "$ref": "#/$defs/String"
                },
                "FunctionName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "LastModifiedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "RevisionId": {
                    "$ref": "#/$defs/String"
                },
                "FunctionVersion": {
                    "$ref": "#/$defs/String"
                },
                "Role": {
                    "$ref": "#/$defs/String"
                },
                "VpcConfig": {
                    "$ref": "#/$defs/VpcConfig"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "VpcConfig": {
            "type": "object",
            "properties": {
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroups"
                }
            }
        },
        "SubnetIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "Service": {
            "type": "object",
            "properties": {
                "Action": {
                    "$ref": "#/$defs/Action"
                },
                "Evidence": {
                    "$ref": "#/$defs/Evidence"
                },
                "Archived": {
                    "$ref": "#/$defs/Boolean"
                },
                "Count": {
                    "$ref": "#/$defs/Integer"
                },
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "EventFirstSeen": {
                    "$ref": "#/$defs/String"
                },
                "EventLastSeen": {
                    "$ref": "#/$defs/String"
                },
                "ResourceRole": {
                    "$ref": "#/$defs/String"
                },
                "ServiceName": {
                    "$ref": "#/$defs/String"
                },
                "UserFeedback": {
                    "$ref": "#/$defs/String"
                },
                "AdditionalInfo": {
                    "$ref": "#/$defs/ServiceAdditionalInfo"
                },
                "FeatureName": {
                    "$ref": "#/$defs/String"
                },
                "EbsVolumeScanDetails": {
                    "$ref": "#/$defs/EbsVolumeScanDetails"
                },
                "RuntimeDetails": {
                    "$ref": "#/$defs/RuntimeDetails"
                },
                "Detection": {
                    "$ref": "#/$defs/Detection"
                },
                "MalwareScanDetails": {
                    "$ref": "#/$defs/MalwareScanDetails"
                }
            }
        },
        "Action": {
            "type": "object",
            "properties": {
                "ActionType": {
                    "$ref": "#/$defs/String"
                },
                "AwsApiCallAction": {
                    "$ref": "#/$defs/AwsApiCallAction"
                },
                "DnsRequestAction": {
                    "$ref": "#/$defs/DnsRequestAction"
                },
                "NetworkConnectionAction": {
                    "$ref": "#/$defs/NetworkConnectionAction"
                },
                "PortProbeAction": {
                    "$ref": "#/$defs/PortProbeAction"
                },
                "KubernetesApiCallAction": {
                    "$ref": "#/$defs/KubernetesApiCallAction"
                },
                "RdsLoginAttemptAction": {
                    "$ref": "#/$defs/RdsLoginAttemptAction"
                },
                "KubernetesPermissionCheckedDetails": {
                    "$ref": "#/$defs/KubernetesPermissionCheckedDetails"
                },
                "KubernetesRoleBindingDetails": {
                    "$ref": "#/$defs/KubernetesRoleBindingDetails"
                },
                "KubernetesRoleDetails": {
                    "$ref": "#/$defs/KubernetesRoleDetails"
                }
            }
        },
        "AwsApiCallAction": {
            "type": "object",
            "properties": {
                "Api": {
                    "$ref": "#/$defs/String"
                },
                "CallerType": {
                    "$ref": "#/$defs/String"
                },
                "DomainDetails": {
                    "$ref": "#/$defs/DomainDetails"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/String"
                },
                "UserAgent": {
                    "$ref": "#/$defs/String"
                },
                "RemoteIpDetails": {
                    "$ref": "#/$defs/RemoteIpDetails"
                },
                "ServiceName": {
                    "$ref": "#/$defs/String"
                },
                "RemoteAccountDetails": {
                    "$ref": "#/$defs/RemoteAccountDetails"
                },
                "AffectedResources": {
                    "$ref": "#/$defs/AffectedResources"
                }
            }
        },
        "DomainDetails": {
            "type": "object",
            "properties": {
                "Domain": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RemoteIpDetails": {
            "type": "object",
            "properties": {
                "City": {
                    "$ref": "#/$defs/City"
                },
                "Country": {
                    "$ref": "#/$defs/Country"
                },
                "GeoLocation": {
                    "$ref": "#/$defs/GeoLocation"
                },
                "IpAddressV4": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "IpAddressV6": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "Organization": {
                    "$ref": "#/$defs/Organization"
                }
            }
        },
        "City": {
            "type": "object",
            "properties": {
                "CityName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Country": {
            "type": "object",
            "properties": {
                "CountryCode": {
                    "$ref": "#/$defs/String"
                },
                "CountryName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GeoLocation": {
            "type": "object",
            "properties": {
                "Lat": {
                    "$ref": "#/$defs/Double"
                },
                "Lon": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "Organization": {
            "type": "object",
            "properties": {
                "Asn": {
                    "$ref": "#/$defs/String"
                },
                "AsnOrg": {
                    "$ref": "#/$defs/String"
                },
                "Isp": {
                    "$ref": "#/$defs/String"
                },
                "Org": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RemoteAccountDetails": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "Affiliated": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AffectedResources": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "DnsRequestAction": {
            "type": "object",
            "properties": {
                "Domain": {
                    "$ref": "#/$defs/String"
                },
                "Protocol": {
                    "$ref": "#/$defs/String"
                },
                "Blocked": {
                    "$ref": "#/$defs/Boolean"
                },
                "DomainWithSuffix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkConnectionAction": {
            "type": "object",
            "properties": {
                "Blocked": {
                    "$ref": "#/$defs/Boolean"
                },
                "ConnectionDirection": {
                    "$ref": "#/$defs/String"
                },
                "LocalPortDetails": {
                    "$ref": "#/$defs/LocalPortDetails"
                },
                "Protocol": {
                    "$ref": "#/$defs/String"
                },
                "LocalIpDetails": {
                    "$ref": "#/$defs/LocalIpDetails"
                },
                "LocalNetworkInterface": {
                    "$ref": "#/$defs/String"
                },
                "RemoteIpDetails": {
                    "$ref": "#/$defs/RemoteIpDetails"
                },
                "RemotePortDetails": {
                    "$ref": "#/$defs/RemotePortDetails"
                }
            }
        },
        "LocalPortDetails": {
            "type": "object",
            "properties": {
                "Port": {
                    "$ref": "#/$defs/Integer"
                },
                "PortName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LocalIpDetails": {
            "type": "object",
            "properties": {
                "IpAddressV4": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "IpAddressV6": {
                    "$ref": "#/$defs/SensitiveString"
                }
            }
        },
        "RemotePortDetails": {
            "type": "object",
            "properties": {
                "Port": {
                    "$ref": "#/$defs/Integer"
                },
                "PortName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PortProbeAction": {
            "type": "object",
            "properties": {
                "Blocked": {
                    "$ref": "#/$defs/Boolean"
                },
                "PortProbeDetails": {
                    "$ref": "#/$defs/PortProbeDetails"
                }
            }
        },
        "PortProbeDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PortProbeDetail"
            }
        },
        "PortProbeDetail": {
            "type": "object",
            "properties": {
                "LocalPortDetails": {
                    "$ref": "#/$defs/LocalPortDetails"
                },
                "LocalIpDetails": {
                    "$ref": "#/$defs/LocalIpDetails"
                },
                "RemoteIpDetails": {
                    "$ref": "#/$defs/RemoteIpDetails"
                }
            }
        },
        "KubernetesApiCallAction": {
            "type": "object",
            "properties": {
                "RequestUri": {
                    "$ref": "#/$defs/String"
                },
                "Verb": {
                    "$ref": "#/$defs/String"
                },
                "SourceIps": {
                    "$ref": "#/$defs/SourceIps"
                },
                "UserAgent": {
                    "$ref": "#/$defs/String"
                },
                "RemoteIpDetails": {
                    "$ref": "#/$defs/RemoteIpDetails"
                },
                "StatusCode": {
                    "$ref": "#/$defs/Integer"
                },
                "Parameters": {
                    "$ref": "#/$defs/String"
                },
                "Resource": {
                    "$ref": "#/$defs/String"
                },
                "Subresource": {
                    "$ref": "#/$defs/String"
                },
                "Namespace": {
                    "$ref": "#/$defs/String"
                },
                "ResourceName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SourceIps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "RdsLoginAttemptAction": {
            "type": "object",
            "properties": {
                "RemoteIpDetails": {
                    "$ref": "#/$defs/RemoteIpDetails"
                },
                "LoginAttributes": {
                    "$ref": "#/$defs/LoginAttributes"
                }
            }
        },
        "LoginAttributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoginAttribute"
            }
        },
        "LoginAttribute": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/String"
                },
                "Application": {
                    "$ref": "#/$defs/String"
                },
                "FailedLoginAttempts": {
                    "$ref": "#/$defs/Integer"
                },
                "SuccessfulLoginAttempts": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "KubernetesPermissionCheckedDetails": {
            "type": "object",
            "properties": {
                "Verb": {
                    "$ref": "#/$defs/String"
                },
                "Resource": {
                    "$ref": "#/$defs/String"
                },
                "Namespace": {
                    "$ref": "#/$defs/String"
                },
                "Allowed": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "KubernetesRoleBindingDetails": {
            "type": "object",
            "properties": {
                "Kind": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Uid": {
                    "$ref": "#/$defs/String"
                },
                "RoleRefName": {
                    "$ref": "#/$defs/String"
                },
                "RoleRefKind": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "KubernetesRoleDetails": {
            "type": "object",
            "properties": {
                "Kind": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Uid": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Evidence": {
            "type": "object",
            "properties": {
                "ThreatIntelligenceDetails": {
                    "$ref": "#/$defs/ThreatIntelligenceDetails"
                }
            }
        },
        "ThreatIntelligenceDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThreatIntelligenceDetail"
            }
        },
        "ThreatIntelligenceDetail": {
            "type": "object",
            "properties": {
                "ThreatListName": {
                    "$ref": "#/$defs/String"
                },
                "ThreatNames": {
                    "$ref": "#/$defs/ThreatNames"
                },
                "ThreatFileSha256": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ThreatNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ServiceAdditionalInfo": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EbsVolumeScanDetails": {
            "type": "object",
            "properties": {
                "ScanId": {
                    "$ref": "#/$defs/String"
                },
                "ScanStartedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ScanCompletedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "TriggerFindingId": {
                    "$ref": "#/$defs/String"
                },
                "Sources": {
                    "$ref": "#/$defs/Sources"
                },
                "ScanDetections": {
                    "$ref": "#/$defs/ScanDetections"
                },
                "ScanType": {
                    "$ref": "#/$defs/ScanType"
                }
            }
        },
        "Sources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ScanDetections": {
            "type": "object",
            "properties": {
                "ScannedItemCount": {
                    "$ref": "#/$defs/ScannedItemCount"
                },
                "ThreatsDetectedItemCount": {
                    "$ref": "#/$defs/ThreatsDetectedItemCount"
                },
                "HighestSeverityThreatDetails": {
                    "$ref": "#/$defs/HighestSeverityThreatDetails"
                },
                "ThreatDetectedByName": {
                    "$ref": "#/$defs/ThreatDetectedByName"
                }
            }
        },
        "ScannedItemCount": {
            "type": "object",
            "properties": {
                "TotalGb": {
                    "$ref": "#/$defs/Integer"
                },
                "Files": {
                    "$ref": "#/$defs/Integer"
                },
                "Volumes": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ThreatsDetectedItemCount": {
            "type": "object",
            "properties": {
                "Files": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "HighestSeverityThreatDetails": {
            "type": "object",
            "properties": {
                "Severity": {
                    "$ref": "#/$defs/String"
                },
                "ThreatName": {
                    "$ref": "#/$defs/String"
                },
                "Count": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ThreatDetectedByName": {
            "type": "object",
            "properties": {
                "ItemCount": {
                    "$ref": "#/$defs/Integer"
                },
                "UniqueThreatNameCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Shortened": {
                    "$ref": "#/$defs/Boolean"
                },
                "ThreatNames": {
                    "$ref": "#/$defs/ScanThreatNames"
                }
            }
        },
        "ScanThreatNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScanThreatName"
            }
        },
        "ScanThreatName": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Severity": {
                    "$ref": "#/$defs/String"
                },
                "ItemCount": {
                    "$ref": "#/$defs/Integer"
                },
                "FilePaths": {
                    "$ref": "#/$defs/FilePaths"
                }
            }
        },
        "FilePaths": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScanFilePath"
            }
        },
        "ScanFilePath": {
            "type": "object",
            "properties": {
                "FilePath": {
                    "$ref": "#/$defs/String"
                },
                "VolumeArn": {
                    "$ref": "#/$defs/String"
                },
                "Hash": {
                    "$ref": "#/$defs/String"
                },
                "FileName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RuntimeDetails": {
            "type": "object",
            "properties": {
                "Process": {
                    "$ref": "#/$defs/ProcessDetails"
                },
                "Context": {
                    "$ref": "#/$defs/RuntimeContext"
                }
            }
        },
        "ProcessDetails": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "ExecutablePath": {
                    "$ref": "#/$defs/String"
                },
                "ExecutableSha256": {
                    "$ref": "#/$defs/String"
                },
                "NamespacePid": {
                    "$ref": "#/$defs/Integer"
                },
                "Pwd": {
                    "$ref": "#/$defs/String"
                },
                "Pid": {
                    "$ref": "#/$defs/Integer"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Uuid": {
                    "$ref": "#/$defs/String"
                },
                "ParentUuid": {
                    "$ref": "#/$defs/String"
                },
                "User": {
                    "$ref": "#/$defs/String"
                },
                "UserId": {
                    "$ref": "#/$defs/Integer"
                },
                "Euid": {
                    "$ref": "#/$defs/Integer"
                },
                "Lineage": {
                    "$ref": "#/$defs/Lineage"
                }
            }
        },
        "Lineage": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LineageObject"
            }
        },
        "LineageObject": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "NamespacePid": {
                    "$ref": "#/$defs/Integer"
                },
                "UserId": {
                    "$ref": "#/$defs/Integer"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Pid": {
                    "$ref": "#/$defs/Integer"
                },
                "Uuid": {
                    "$ref": "#/$defs/String"
                },
                "ExecutablePath": {
                    "$ref": "#/$defs/String"
                },
                "Euid": {
                    "$ref": "#/$defs/Integer"
                },
                "ParentUuid": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RuntimeContext": {
            "type": "object",
            "properties": {
                "ModifyingProcess": {
                    "$ref": "#/$defs/ProcessDetails"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ScriptPath": {
                    "$ref": "#/$defs/String"
                },
                "LibraryPath": {
                    "$ref": "#/$defs/String"
                },
                "LdPreloadValue": {
                    "$ref": "#/$defs/String"
                },
                "SocketPath": {
                    "$ref": "#/$defs/String"
                },
                "RuncBinaryPath": {
                    "$ref": "#/$defs/String"
                },
                "ReleaseAgentPath": {
                    "$ref": "#/$defs/String"
                },
                "MountSource": {
                    "$ref": "#/$defs/String"
                },
                "MountTarget": {
                    "$ref": "#/$defs/String"
                },
                "FileSystemType": {
                    "$ref": "#/$defs/String"
                },
                "Flags": {
                    "$ref": "#/$defs/FlagsList"
                },
                "ModuleName": {
                    "$ref": "#/$defs/String"
                },
                "ModuleFilePath": {
                    "$ref": "#/$defs/String"
                },
                "ModuleSha256": {
                    "$ref": "#/$defs/String"
                },
                "ShellHistoryFilePath": {
                    "$ref": "#/$defs/String"
                },
                "TargetProcess": {
                    "$ref": "#/$defs/ProcessDetails"
                },
                "AddressFamily": {
                    "$ref": "#/$defs/String"
                },
                "IanaProtocolNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "MemoryRegions": {
                    "$ref": "#/$defs/MemoryRegionsList"
                },
                "ToolName": {
                    "$ref": "#/$defs/String"
                },
                "ToolCategory": {
                    "$ref": "#/$defs/String"
                },
                "ServiceName": {
                    "$ref": "#/$defs/String"
                },
                "CommandLineExample": {
                    "$ref": "#/$defs/String"
                },
                "ThreatFilePath": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FlagsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "MemoryRegionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "Detection": {
            "type": "object",
            "properties": {
                "Anomaly": {
                    "$ref": "#/$defs/Anomaly"
                },
                "Sequence": {
                    "$ref": "#/$defs/Sequence"
                }
            }
        },
        "Anomaly": {
            "type": "object",
            "properties": {
                "Profiles": {
                    "$ref": "#/$defs/AnomalyProfiles"
                },
                "Unusual": {
                    "$ref": "#/$defs/AnomalyUnusual"
                }
            }
        },
        "AnomalyProfiles": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AnomalyProfileFeatures"
            }
        },
        "AnomalyProfileFeatures": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AnomalyProfileFeatureObjects"
            }
        },
        "AnomalyProfileFeatureObjects": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnomalyObject"
            }
        },
        "AnomalyObject": {
            "type": "object",
            "properties": {
                "ProfileType": {
                    "$ref": "#/$defs/ProfileType"
                },
                "ProfileSubtype": {
                    "$ref": "#/$defs/ProfileSubtype"
                },
                "Observations": {
                    "$ref": "#/$defs/Observations"
                }
            }
        },
        "ProfileType": {
            "enum": [
                "FREQUENCY"
            ]
        },
        "ProfileSubtype": {
            "enum": [
                "FREQUENT",
                "INFREQUENT",
                "UNSEEN",
                "RARE"
            ]
        },
        "Observations": {
            "type": "object",
            "properties": {
                "Text": {
                    "$ref": "#/$defs/ObservationTexts"
                }
            }
        },
        "ObservationTexts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "AnomalyUnusual": {
            "type": "object",
            "properties": {
                "Behavior": {
                    "$ref": "#/$defs/Behavior"
                }
            }
        },
        "Behavior": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AnomalyUnusualBehaviorFeature"
            }
        },
        "AnomalyUnusualBehaviorFeature": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AnomalyObject"
            }
        },
        "Sequence": {
            "type": "object",
            "properties": {
                "Uid": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/SequenceDescription"
                },
                "Actors": {
                    "$ref": "#/$defs/Actors"
                },
                "Resources": {
                    "$ref": "#/$defs/Resources"
                },
                "Endpoints": {
                    "$ref": "#/$defs/NetworkEndpoints"
                },
                "Signals": {
                    "$ref": "#/$defs/Signals"
                },
                "SequenceIndicators": {
                    "$ref": "#/$defs/Indicators"
                }
            }
        },
        "SequenceDescription": {
            "type": "string"
        },
        "Actors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Actor"
            }
        },
        "Actor": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "User": {
                    "$ref": "#/$defs/User"
                },
                "Session": {
                    "$ref": "#/$defs/Session"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Uid": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "CredentialUid": {
                    "$ref": "#/$defs/String"
                },
                "Account": {
                    "$ref": "#/$defs/Account"
                }
            }
        },
        "Account": {
            "type": "object",
            "properties": {
                "Uid": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Session": {
            "type": "object",
            "properties": {
                "Uid": {
                    "$ref": "#/$defs/String"
                },
                "MfaStatus": {
                    "$ref": "#/$defs/MfaStatus"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Issuer": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MfaStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "Resources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceV2"
            }
        },
        "ResourceV2": {
            "type": "object",
            "properties": {
                "Uid": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/FindingResourceType"
                },
                "Region": {
                    "$ref": "#/$defs/String"
                },
                "Service": {
                    "$ref": "#/$defs/String"
                },
                "CloudPartition": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Data": {
                    "$ref": "#/$defs/ResourceData"
                }
            }
        },
        "FindingResourceType": {
            "enum": [
                "EC2_INSTANCE",
                "EC2_NETWORK_INTERFACE",
                "S3_BUCKET",
                "S3_OBJECT",
                "ACCESS_KEY"
            ]
        },
        "ResourceData": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "Ec2Instance": {
                    "$ref": "#/$defs/Ec2Instance"
                },
                "AccessKey": {
                    "$ref": "#/$defs/AccessKey"
                },
                "Ec2NetworkInterface": {
                    "$ref": "#/$defs/Ec2NetworkInterface"
                },
                "S3Object": {
                    "$ref": "#/$defs/S3Object"
                }
            }
        },
        "S3Bucket": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EncryptionType": {
                    "$ref": "#/$defs/String"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/String"
                },
                "EffectivePermission": {
                    "$ref": "#/$defs/String"
                },
                "PublicReadAccess": {
                    "$ref": "#/$defs/PublicAccessStatus"
                },
                "PublicWriteAccess": {
                    "$ref": "#/$defs/PublicAccessStatus"
                },
                "AccountPublicAccess": {
                    "$ref": "#/$defs/PublicAccessConfiguration"
                },
                "BucketPublicAccess": {
                    "$ref": "#/$defs/PublicAccessConfiguration"
                },
                "S3ObjectUids": {
                    "$ref": "#/$defs/S3ObjectUids"
                }
            }
        },
        "PublicAccessStatus": {
            "enum": [
                "BLOCKED",
                "ALLOWED"
            ]
        },
        "PublicAccessConfiguration": {
            "type": "object",
            "properties": {
                "PublicAclAccess": {
                    "$ref": "#/$defs/PublicAccessStatus"
                },
                "PublicPolicyAccess": {
                    "$ref": "#/$defs/PublicAccessStatus"
                },
                "PublicAclIgnoreBehavior": {
                    "$ref": "#/$defs/PublicAclIgnoreBehavior"
                },
                "PublicBucketRestrictBehavior": {
                    "$ref": "#/$defs/PublicBucketRestrictBehavior"
                }
            }
        },
        "PublicAclIgnoreBehavior": {
            "enum": [
                "IGNORED",
                "NOT_IGNORED"
            ]
        },
        "PublicBucketRestrictBehavior": {
            "enum": [
                "RESTRICTED",
                "NOT_RESTRICTED"
            ]
        },
        "S3ObjectUids": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "Ec2Instance": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "ImageDescription": {
                    "$ref": "#/$defs/String"
                },
                "InstanceState": {
                    "$ref": "#/$defs/String"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/IamInstanceProfile"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "Platform": {
                    "$ref": "#/$defs/String"
                },
                "ProductCodes": {
                    "$ref": "#/$defs/ProductCodes"
                },
                "Ec2NetworkInterfaceUids": {
                    "$ref": "#/$defs/Ec2NetworkInterfaceUids"
                }
            }
        },
        "Ec2NetworkInterfaceUids": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "AccessKey": {
            "type": "object",
            "properties": {
                "PrincipalId": {
                    "$ref": "#/$defs/String"
                },
                "UserName": {
                    "$ref": "#/$defs/String"
                },
                "UserType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ec2NetworkInterface": {
            "type": "object",
            "properties": {
                "Ipv6Addresses": {
                    "$ref": "#/$defs/Ipv6Addresses"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/PrivateIpAddresses"
                },
                "PublicIp": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroups"
                },
                "SubNetId": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "S3Object": {
            "type": "object",
            "properties": {
                "ETag": {
                    "$ref": "#/$defs/String"
                },
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "VersionId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkEndpoints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkEndpoint"
            }
        },
        "NetworkEndpoint": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "Ip": {
                    "$ref": "#/$defs/String"
                },
                "Domain": {
                    "$ref": "#/$defs/String"
                },
                "Port": {
                    "$ref": "#/$defs/Integer"
                },
                "Location": {
                    "$ref": "#/$defs/NetworkGeoLocation"
                },
                "AutonomousSystem": {
                    "$ref": "#/$defs/AutonomousSystem"
                },
                "Connection": {
                    "$ref": "#/$defs/NetworkConnection"
                }
            }
        },
        "NetworkGeoLocation": {
            "type": "object",
            "properties": {
                "City": {
                    "$ref": "#/$defs/String"
                },
                "Country": {
                    "$ref": "#/$defs/String"
                },
                "Latitude": {
                    "$ref": "#/$defs/Double"
                },
                "Longitude": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "AutonomousSystem": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Number": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "NetworkConnection": {
            "type": "object",
            "properties": {
                "Direction": {
                    "$ref": "#/$defs/NetworkDirection"
                }
            }
        },
        "NetworkDirection": {
            "enum": [
                "INBOUND",
                "OUTBOUND"
            ]
        },
        "Signals": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Signal"
            }
        },
        "Signal": {
            "type": "object",
            "properties": {
                "Uid": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/SignalType"
                },
                "Description": {
                    "$ref": "#/$defs/SignalDescription"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "FirstSeenAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastSeenAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Severity": {
                    "$ref": "#/$defs/Double"
                },
                "Count": {
                    "$ref": "#/$defs/Integer"
                },
                "ResourceUids": {
                    "$ref": "#/$defs/ResourceUids"
                },
                "ActorIds": {
                    "$ref": "#/$defs/ActorIds"
                },
                "EndpointIds": {
                    "$ref": "#/$defs/EndpointIds"
                },
                "SignalIndicators": {
                    "$ref": "#/$defs/Indicators"
                }
            }
        },
        "SignalType": {
            "enum": [
                "FINDING",
                "CLOUD_TRAIL",
                "S3_DATA_EVENTS"
            ]
        },
        "SignalDescription": {
            "type": "string"
        },
        "ResourceUids": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ActorIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "EndpointIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "Indicators": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Indicator"
            }
        },
        "Indicator": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/IndicatorType"
                },
                "Values": {
                    "$ref": "#/$defs/IndicatorValues"
                },
                "Title": {
                    "$ref": "#/$defs/IndicatorTitle"
                }
            }
        },
        "IndicatorType": {
            "enum": [
                "SUSPICIOUS_USER_AGENT",
                "SUSPICIOUS_NETWORK",
                "MALICIOUS_IP",
                "TOR_IP",
                "ATTACK_TACTIC",
                "HIGH_RISK_API",
                "ATTACK_TECHNIQUE",
                "UNUSUAL_API_FOR_ACCOUNT",
                "UNUSUAL_ASN_FOR_ACCOUNT",
                "UNUSUAL_ASN_FOR_USER"
            ]
        },
        "IndicatorValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IndicatorValueString"
            }
        },
        "IndicatorValueString": {
            "type": "string"
        },
        "IndicatorTitle": {
            "type": "string"
        },
        "MalwareScanDetails": {
            "type": "object",
            "properties": {
                "Threats": {
                    "$ref": "#/$defs/Threats"
                }
            }
        },
        "Threats": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Threat"
            }
        },
        "Threat": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "ItemPaths": {
                    "$ref": "#/$defs/ItemPaths"
                }
            }
        },
        "ItemPaths": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ItemPath"
            }
        },
        "ItemPath": {
            "type": "object",
            "properties": {
                "NestedItemPath": {
                    "$ref": "#/$defs/String"
                },
                "Hash": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetFindingsStatisticsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "FindingStatisticTypes": {
                    "$ref": "#/$defs/FindingStatisticTypes"
                },
                "FindingCriteria": {
                    "$ref": "#/$defs/FindingCriteria"
                },
                "GroupBy": {
                    "$ref": "#/$defs/GroupByType"
                },
                "OrderBy": {
                    "$ref": "#/$defs/OrderBy"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults100"
                }
            }
        },
        "FindingStatisticTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FindingStatisticType"
            }
        },
        "FindingStatisticType": {
            "enum": [
                "COUNT_BY_SEVERITY"
            ]
        },
        "GroupByType": {
            "enum": [
                "ACCOUNT",
                "DATE",
                "FINDING_TYPE",
                "RESOURCE",
                "SEVERITY"
            ]
        },
        "MaxResults100": {
            "type": "integer",
            "format": "int32"
        },
        "GetFindingsStatisticsResponse": {
            "type": "object",
            "properties": {
                "FindingStatistics": {
                    "$ref": "#/$defs/FindingStatistics"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FindingStatistics": {
            "type": "object",
            "properties": {
                "CountBySeverity": {
                    "$ref": "#/$defs/CountBySeverity"
                },
                "GroupedByAccount": {
                    "$ref": "#/$defs/GroupedByAccount"
                },
                "GroupedByDate": {
                    "$ref": "#/$defs/GroupedByDate"
                },
                "GroupedByFindingType": {
                    "$ref": "#/$defs/GroupedByFindingType"
                },
                "GroupedByResource": {
                    "$ref": "#/$defs/GroupedByResource"
                },
                "GroupedBySeverity": {
                    "$ref": "#/$defs/GroupedBySeverity"
                }
            }
        },
        "CountBySeverity": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Integer"
            }
        },
        "GroupedByAccount": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountStatistics"
            }
        },
        "AccountStatistics": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "LastGeneratedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "TotalFindings": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GroupedByDate": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DateStatistics"
            }
        },
        "DateStatistics": {
            "type": "object",
            "properties": {
                "Date": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastGeneratedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Severity": {
                    "$ref": "#/$defs/Double"
                },
                "TotalFindings": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GroupedByFindingType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FindingTypeStatistics"
            }
        },
        "FindingTypeStatistics": {
            "type": "object",
            "properties": {
                "FindingType": {
                    "$ref": "#/$defs/String"
                },
                "LastGeneratedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "TotalFindings": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GroupedByResource": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceStatistics"
            }
        },
        "ResourceStatistics": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "LastGeneratedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/String"
                },
                "TotalFindings": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GroupedBySeverity": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SeverityStatistics"
            }
        },
        "SeverityStatistics": {
            "type": "object",
            "properties": {
                "LastGeneratedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Severity": {
                    "$ref": "#/$defs/Double"
                },
                "TotalFindings": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GetInvitationsCountRequest": {
            "type": "object",
            "properties": {}
        },
        "GetInvitationsCountResponse": {
            "type": "object",
            "properties": {
                "InvitationsCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GetIPSetRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "IpSetId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetIPSetResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Format": {
                    "$ref": "#/$defs/IpSetFormat"
                },
                "Location": {
                    "$ref": "#/$defs/Location"
                },
                "Status": {
                    "$ref": "#/$defs/IpSetStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "IpSetStatus": {
            "enum": [
                "INACTIVE",
                "ACTIVATING",
                "ACTIVE",
                "DEACTIVATING",
                "ERROR",
                "DELETE_PENDING",
                "DELETED"
            ]
        },
        "GetMalwareProtectionPlanRequest": {
            "type": "object",
            "properties": {
                "MalwareProtectionPlanId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetMalwareProtectionPlanResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "Role": {
                    "$ref": "#/$defs/String"
                },
                "ProtectedResource": {
                    "$ref": "#/$defs/CreateProtectedResource"
                },
                "Actions": {
                    "$ref": "#/$defs/MalwareProtectionPlanActions"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/MalwareProtectionPlanStatus"
                },
                "StatusReasons": {
                    "$ref": "#/$defs/MalwareProtectionPlanStatusReasonsList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "MalwareProtectionPlanStatus": {
            "enum": [
                "ACTIVE",
                "WARNING",
                "ERROR"
            ]
        },
        "MalwareProtectionPlanStatusReasonsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MalwareProtectionPlanStatusReason"
            }
        },
        "MalwareProtectionPlanStatusReason": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetMalwareScanSettingsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                }
            }
        },
        "GetMalwareScanSettingsResponse": {
            "type": "object",
            "properties": {
                "ScanResourceCriteria": {
                    "$ref": "#/$defs/ScanResourceCriteria"
                },
                "EbsSnapshotPreservation": {
                    "$ref": "#/$defs/EbsSnapshotPreservation"
                }
            }
        },
        "ScanResourceCriteria": {
            "type": "object",
            "properties": {
                "Include": {
                    "$ref": "#/$defs/ScanCriterion"
                },
                "Exclude": {
                    "$ref": "#/$defs/ScanCriterion"
                }
            }
        },
        "ScanCriterion": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ScanCondition"
            }
        },
        "ScanCondition": {
            "type": "object",
            "properties": {
                "MapEquals": {
                    "$ref": "#/$defs/MapEquals"
                }
            }
        },
        "MapEquals": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScanConditionPair"
            }
        },
        "ScanConditionPair": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "EbsSnapshotPreservation": {
            "enum": [
                "NO_RETENTION",
                "RETENTION_WITH_FINDING"
            ]
        },
        "GetMasterAccountRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                }
            }
        },
        "GetMasterAccountResponse": {
            "type": "object",
            "properties": {
                "Master": {
                    "$ref": "#/$defs/Master"
                }
            }
        },
        "Master": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "InvitationId": {
                    "$ref": "#/$defs/String"
                },
                "RelationshipStatus": {
                    "$ref": "#/$defs/String"
                },
                "InvitedAt": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetMemberDetectorsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AccountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "GetMemberDetectorsResponse": {
            "type": "object",
            "properties": {
                "MemberDataSourceConfigurations": {
                    "$ref": "#/$defs/MemberDataSourceConfigurations"
                },
                "UnprocessedAccounts": {
                    "$ref": "#/$defs/UnprocessedAccounts"
                }
            }
        },
        "MemberDataSourceConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MemberDataSourceConfiguration"
            }
        },
        "MemberDataSourceConfiguration": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "DataSources": {
                    "$ref": "#/$defs/DataSourceConfigurationsResult"
                },
                "Features": {
                    "$ref": "#/$defs/MemberFeaturesConfigurationsResults"
                }
            }
        },
        "MemberFeaturesConfigurationsResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MemberFeaturesConfigurationResult"
            }
        },
        "MemberFeaturesConfigurationResult": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrgFeature"
                },
                "Status": {
                    "$ref": "#/$defs/FeatureStatus"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "AdditionalConfiguration": {
                    "$ref": "#/$defs/MemberAdditionalConfigurationResults"
                }
            }
        },
        "MemberAdditionalConfigurationResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MemberAdditionalConfigurationResult"
            }
        },
        "MemberAdditionalConfigurationResult": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrgFeatureAdditionalConfiguration"
                },
                "Status": {
                    "$ref": "#/$defs/FeatureStatus"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "GetMembersRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AccountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "GetMembersResponse": {
            "type": "object",
            "properties": {
                "Members": {
                    "$ref": "#/$defs/Members"
                },
                "UnprocessedAccounts": {
                    "$ref": "#/$defs/UnprocessedAccounts"
                }
            }
        },
        "Members": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Member"
            }
        },
        "Member": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "MasterId": {
                    "$ref": "#/$defs/String"
                },
                "Email": {
                    "$ref": "#/$defs/Email"
                },
                "RelationshipStatus": {
                    "$ref": "#/$defs/String"
                },
                "InvitedAt": {
                    "$ref": "#/$defs/String"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/String"
                },
                "AdministratorId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetOrganizationStatisticsResponse": {
            "type": "object",
            "properties": {
                "OrganizationDetails": {
                    "$ref": "#/$defs/OrganizationDetails"
                }
            }
        },
        "OrganizationDetails": {
            "type": "object",
            "properties": {
                "UpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "OrganizationStatistics": {
                    "$ref": "#/$defs/OrganizationStatistics"
                }
            }
        },
        "OrganizationStatistics": {
            "type": "object",
            "properties": {
                "TotalAccountsCount": {
                    "$ref": "#/$defs/Integer"
                },
                "MemberAccountsCount": {
                    "$ref": "#/$defs/Integer"
                },
                "ActiveAccountsCount": {
                    "$ref": "#/$defs/Integer"
                },
                "EnabledAccountsCount": {
                    "$ref": "#/$defs/Integer"
                },
                "CountByFeature": {
                    "$ref": "#/$defs/OrganizationFeatureStatisticsResults"
                }
            }
        },
        "OrganizationFeatureStatisticsResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationFeatureStatistics"
            }
        },
        "OrganizationFeatureStatistics": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrgFeature"
                },
                "EnabledAccountsCount": {
                    "$ref": "#/$defs/Integer"
                },
                "AdditionalConfiguration": {
                    "$ref": "#/$defs/OrganizationFeatureStatisticsAdditionalConfigurations"
                }
            }
        },
        "OrganizationFeatureStatisticsAdditionalConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationFeatureStatisticsAdditionalConfiguration"
            }
        },
        "OrganizationFeatureStatisticsAdditionalConfiguration": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrgFeatureAdditionalConfiguration"
                },
                "EnabledAccountsCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GetRemainingFreeTrialDaysRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AccountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "GetRemainingFreeTrialDaysResponse": {
            "type": "object",
            "properties": {
                "Accounts": {
                    "$ref": "#/$defs/AccountFreeTrialInfos"
                },
                "UnprocessedAccounts": {
                    "$ref": "#/$defs/UnprocessedAccounts"
                }
            }
        },
        "AccountFreeTrialInfos": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountFreeTrialInfo"
            }
        },
        "AccountFreeTrialInfo": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "DataSources": {
                    "$ref": "#/$defs/DataSourcesFreeTrial"
                },
                "Features": {
                    "$ref": "#/$defs/FreeTrialFeatureConfigurationsResults"
                }
            }
        },
        "DataSourcesFreeTrial": {
            "type": "object",
            "properties": {
                "CloudTrail": {
                    "$ref": "#/$defs/DataSourceFreeTrial"
                },
                "DnsLogs": {
                    "$ref": "#/$defs/DataSourceFreeTrial"
                },
                "FlowLogs": {
                    "$ref": "#/$defs/DataSourceFreeTrial"
                },
                "S3Logs": {
                    "$ref": "#/$defs/DataSourceFreeTrial"
                },
                "Kubernetes": {
                    "$ref": "#/$defs/KubernetesDataSourceFreeTrial"
                },
                "MalwareProtection": {
                    "$ref": "#/$defs/MalwareProtectionDataSourceFreeTrial"
                }
            }
        },
        "DataSourceFreeTrial": {
            "type": "object",
            "properties": {
                "FreeTrialDaysRemaining": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "KubernetesDataSourceFreeTrial": {
            "type": "object",
            "properties": {
                "AuditLogs": {
                    "$ref": "#/$defs/DataSourceFreeTrial"
                }
            }
        },
        "MalwareProtectionDataSourceFreeTrial": {
            "type": "object",
            "properties": {
                "ScanEc2InstanceWithFindings": {
                    "$ref": "#/$defs/DataSourceFreeTrial"
                }
            }
        },
        "FreeTrialFeatureConfigurationsResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FreeTrialFeatureConfigurationResult"
            }
        },
        "FreeTrialFeatureConfigurationResult": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FreeTrialFeatureResult"
                },
                "FreeTrialDaysRemaining": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "FreeTrialFeatureResult": {
            "enum": [
                "FLOW_LOGS",
                "CLOUD_TRAIL",
                "DNS_LOGS",
                "S3_DATA_EVENTS",
                "EKS_AUDIT_LOGS",
                "EBS_MALWARE_PROTECTION",
                "RDS_LOGIN_EVENTS",
                "EKS_RUNTIME_MONITORING",
                "LAMBDA_NETWORK_LOGS",
                "FARGATE_RUNTIME_MONITORING",
                "EC2_RUNTIME_MONITORING"
            ]
        },
        "GetThreatIntelSetRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "ThreatIntelSetId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetThreatIntelSetResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Format": {
                    "$ref": "#/$defs/ThreatIntelSetFormat"
                },
                "Location": {
                    "$ref": "#/$defs/Location"
                },
                "Status": {
                    "$ref": "#/$defs/ThreatIntelSetStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ThreatIntelSetStatus": {
            "enum": [
                "INACTIVE",
                "ACTIVATING",
                "ACTIVE",
                "DEACTIVATING",
                "ERROR",
                "DELETE_PENDING",
                "DELETED"
            ]
        },
        "GetUsageStatisticsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "UsageStatisticType": {
                    "$ref": "#/$defs/UsageStatisticType"
                },
                "UsageCriteria": {
                    "$ref": "#/$defs/UsageCriteria"
                },
                "Unit": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UsageStatisticType": {
            "enum": [
                "SUM_BY_ACCOUNT",
                "SUM_BY_DATA_SOURCE",
                "SUM_BY_RESOURCE",
                "TOP_RESOURCES",
                "SUM_BY_FEATURES",
                "TOP_ACCOUNTS_BY_FEATURE"
            ]
        },
        "UsageCriteria": {
            "type": "object",
            "properties": {
                "AccountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "DataSources": {
                    "$ref": "#/$defs/DataSourceList"
                },
                "Resources": {
                    "$ref": "#/$defs/ResourceList"
                },
                "Features": {
                    "$ref": "#/$defs/UsageFeatureList"
                }
            }
        },
        "DataSourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataSource"
            }
        },
        "DataSource": {
            "enum": [
                "FLOW_LOGS",
                "CLOUD_TRAIL",
                "DNS_LOGS",
                "S3_LOGS",
                "KUBERNETES_AUDIT_LOGS",
                "EC2_MALWARE_SCAN"
            ]
        },
        "ResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "UsageFeatureList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageFeature"
            }
        },
        "UsageFeature": {
            "enum": [
                "FLOW_LOGS",
                "CLOUD_TRAIL",
                "DNS_LOGS",
                "S3_DATA_EVENTS",
                "EKS_AUDIT_LOGS",
                "EBS_MALWARE_PROTECTION",
                "RDS_LOGIN_EVENTS",
                "LAMBDA_NETWORK_LOGS",
                "EKS_RUNTIME_MONITORING",
                "FARGATE_RUNTIME_MONITORING",
                "EC2_RUNTIME_MONITORING",
                "RDS_DBI_PROTECTION_PROVISIONED",
                "RDS_DBI_PROTECTION_SERVERLESS"
            ]
        },
        "GetUsageStatisticsResponse": {
            "type": "object",
            "properties": {
                "UsageStatistics": {
                    "$ref": "#/$defs/UsageStatistics"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UsageStatistics": {
            "type": "object",
            "properties": {
                "SumByAccount": {
                    "$ref": "#/$defs/UsageAccountResultList"
                },
                "TopAccountsByFeature": {
                    "$ref": "#/$defs/UsageTopAccountsResultList"
                },
                "SumByDataSource": {
                    "$ref": "#/$defs/UsageDataSourceResultList"
                },
                "SumByResource": {
                    "$ref": "#/$defs/UsageResourceResultList"
                },
                "TopResources": {
                    "$ref": "#/$defs/UsageResourceResultList"
                },
                "SumByFeature": {
                    "$ref": "#/$defs/UsageFeatureResultList"
                }
            }
        },
        "UsageAccountResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageAccountResult"
            }
        },
        "UsageAccountResult": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "Total": {
                    "$ref": "#/$defs/Total"
                }
            }
        },
        "Total": {
            "type": "object",
            "properties": {
                "Amount": {
                    "$ref": "#/$defs/String"
                },
                "Unit": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UsageTopAccountsResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageTopAccountsResult"
            }
        },
        "UsageTopAccountsResult": {
            "type": "object",
            "properties": {
                "Feature": {
                    "$ref": "#/$defs/UsageFeature"
                },
                "Accounts": {
                    "$ref": "#/$defs/UsageTopAccountsByFeatureList"
                }
            }
        },
        "UsageTopAccountsByFeatureList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageTopAccountResult"
            }
        },
        "UsageTopAccountResult": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "Total": {
                    "$ref": "#/$defs/Total"
                }
            }
        },
        "UsageDataSourceResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageDataSourceResult"
            }
        },
        "UsageDataSourceResult": {
            "type": "object",
            "properties": {
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "Total": {
                    "$ref": "#/$defs/Total"
                }
            }
        },
        "UsageResourceResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageResourceResult"
            }
        },
        "UsageResourceResult": {
            "type": "object",
            "properties": {
                "Resource": {
                    "$ref": "#/$defs/String"
                },
                "Total": {
                    "$ref": "#/$defs/Total"
                }
            }
        },
        "UsageFeatureResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageFeatureResult"
            }
        },
        "UsageFeatureResult": {
            "type": "object",
            "properties": {
                "Feature": {
                    "$ref": "#/$defs/UsageFeature"
                },
                "Total": {
                    "$ref": "#/$defs/Total"
                }
            }
        },
        "InviteMembersRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AccountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "DisableEmailNotification": {
                    "$ref": "#/$defs/Boolean"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InviteMembersResponse": {
            "type": "object",
            "properties": {
                "UnprocessedAccounts": {
                    "$ref": "#/$defs/UnprocessedAccounts"
                }
            }
        },
        "ListCoverageRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "FilterCriteria": {
                    "$ref": "#/$defs/CoverageFilterCriteria"
                },
                "SortCriteria": {
                    "$ref": "#/$defs/CoverageSortCriteria"
                }
            }
        },
        "CoverageSortCriteria": {
            "type": "object",
            "properties": {
                "AttributeName": {
                    "$ref": "#/$defs/CoverageSortKey"
                },
                "OrderBy": {
                    "$ref": "#/$defs/OrderBy"
                }
            }
        },
        "CoverageSortKey": {
            "enum": [
                "ACCOUNT_ID",
                "CLUSTER_NAME",
                "COVERAGE_STATUS",
                "ISSUE",
                "ADDON_VERSION",
                "UPDATED_AT",
                "EKS_CLUSTER_NAME",
                "ECS_CLUSTER_NAME",
                "INSTANCE_ID"
            ]
        },
        "ListCoverageResponse": {
            "type": "object",
            "properties": {
                "Resources": {
                    "$ref": "#/$defs/CoverageResources"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CoverageResources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CoverageResource"
            }
        },
        "CoverageResource": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ResourceDetails": {
                    "$ref": "#/$defs/CoverageResourceDetails"
                },
                "CoverageStatus": {
                    "$ref": "#/$defs/CoverageStatus"
                },
                "Issue": {
                    "$ref": "#/$defs/String"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "CoverageResourceDetails": {
            "type": "object",
            "properties": {
                "EksClusterDetails": {
                    "$ref": "#/$defs/CoverageEksClusterDetails"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "EcsClusterDetails": {
                    "$ref": "#/$defs/CoverageEcsClusterDetails"
                },
                "Ec2InstanceDetails": {
                    "$ref": "#/$defs/CoverageEc2InstanceDetails"
                }
            }
        },
        "CoverageEksClusterDetails": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "CoveredNodes": {
                    "$ref": "#/$defs/Long"
                },
                "CompatibleNodes": {
                    "$ref": "#/$defs/Long"
                },
                "AddonDetails": {
                    "$ref": "#/$defs/AddonDetails"
                },
                "ManagementType": {
                    "$ref": "#/$defs/ManagementType"
                }
            }
        },
        "AddonDetails": {
            "type": "object",
            "properties": {
                "AddonVersion": {
                    "$ref": "#/$defs/String"
                },
                "AddonStatus": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ManagementType": {
            "enum": [
                "AUTO_MANAGED",
                "MANUAL",
                "DISABLED"
            ]
        },
        "ResourceType": {
            "enum": [
                "EKS",
                "ECS",
                "EC2"
            ]
        },
        "CoverageEcsClusterDetails": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "FargateDetails": {
                    "$ref": "#/$defs/FargateDetails"
                },
                "ContainerInstanceDetails": {
                    "$ref": "#/$defs/ContainerInstanceDetails"
                }
            }
        },
        "FargateDetails": {
            "type": "object",
            "properties": {
                "Issues": {
                    "$ref": "#/$defs/Issues"
                },
                "ManagementType": {
                    "$ref": "#/$defs/ManagementType"
                }
            }
        },
        "Issues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ContainerInstanceDetails": {
            "type": "object",
            "properties": {
                "CoveredContainerInstances": {
                    "$ref": "#/$defs/Long"
                },
                "CompatibleContainerInstances": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "CoverageEc2InstanceDetails": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/String"
                },
                "AgentDetails": {
                    "$ref": "#/$defs/AgentDetails"
                },
                "ManagementType": {
                    "$ref": "#/$defs/ManagementType"
                }
            }
        },
        "AgentDetails": {
            "type": "object",
            "properties": {
                "Version": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CoverageStatus": {
            "enum": [
                "HEALTHY",
                "UNHEALTHY"
            ]
        },
        "ListDetectorsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListDetectorsResponse": {
            "type": "object",
            "properties": {
                "DetectorIds": {
                    "$ref": "#/$defs/DetectorIds"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DetectorIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectorId"
            }
        },
        "ListFiltersRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListFiltersResponse": {
            "type": "object",
            "properties": {
                "FilterNames": {
                    "$ref": "#/$defs/FilterNames"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FilterNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterName"
            }
        },
        "ListFindingsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "FindingCriteria": {
                    "$ref": "#/$defs/FindingCriteria"
                },
                "SortCriteria": {
                    "$ref": "#/$defs/SortCriteria"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListFindingsResponse": {
            "type": "object",
            "properties": {
                "FindingIds": {
                    "$ref": "#/$defs/FindingIds"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListInvitationsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListInvitationsResponse": {
            "type": "object",
            "properties": {
                "Invitations": {
                    "$ref": "#/$defs/Invitations"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Invitations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Invitation"
            }
        },
        "Invitation": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "InvitationId": {
                    "$ref": "#/$defs/String"
                },
                "RelationshipStatus": {
                    "$ref": "#/$defs/String"
                },
                "InvitedAt": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListIPSetsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListIPSetsResponse": {
            "type": "object",
            "properties": {
                "IpSetIds": {
                    "$ref": "#/$defs/IpSetIds"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpSetIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ListMalwareProtectionPlansRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListMalwareProtectionPlansResponse": {
            "type": "object",
            "properties": {
                "MalwareProtectionPlans": {
                    "$ref": "#/$defs/MalwareProtectionPlansSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MalwareProtectionPlansSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MalwareProtectionPlanSummary"
            }
        },
        "MalwareProtectionPlanSummary": {
            "type": "object",
            "properties": {
                "MalwareProtectionPlanId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListMembersRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "OnlyAssociated": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListMembersResponse": {
            "type": "object",
            "properties": {
                "Members": {
                    "$ref": "#/$defs/Members"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOrganizationAdminAccountsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListOrganizationAdminAccountsResponse": {
            "type": "object",
            "properties": {
                "AdminAccounts": {
                    "$ref": "#/$defs/AdminAccounts"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AdminAccounts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AdminAccount"
            }
        },
        "AdminAccount": {
            "type": "object",
            "properties": {
                "AdminAccountId": {
                    "$ref": "#/$defs/String"
                },
                "AdminStatus": {
                    "$ref": "#/$defs/AdminStatus"
                }
            }
        },
        "AdminStatus": {
            "enum": [
                "ENABLED",
                "DISABLE_IN_PROGRESS"
            ]
        },
        "ListPublishingDestinationsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListPublishingDestinationsResponse": {
            "type": "object",
            "properties": {
                "Destinations": {
                    "$ref": "#/$defs/Destinations"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Destinations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Destination"
            }
        },
        "Destination": {
            "type": "object",
            "properties": {
                "DestinationId": {
                    "$ref": "#/$defs/String"
                },
                "DestinationType": {
                    "$ref": "#/$defs/DestinationType"
                },
                "Status": {
                    "$ref": "#/$defs/PublishingStatus"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/GuardDutyArn"
                }
            }
        },
        "GuardDutyArn": {
            "type": "string"
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListThreatIntelSetsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListThreatIntelSetsResponse": {
            "type": "object",
            "properties": {
                "ThreatIntelSetIds": {
                    "$ref": "#/$defs/ThreatIntelSetIds"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ThreatIntelSetIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "StartMalwareScanRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "StartMalwareScanResponse": {
            "type": "object",
            "properties": {
                "ScanId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "StartMonitoringMembersRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AccountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "StartMonitoringMembersResponse": {
            "type": "object",
            "properties": {
                "UnprocessedAccounts": {
                    "$ref": "#/$defs/UnprocessedAccounts"
                }
            }
        },
        "StopMonitoringMembersRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AccountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "StopMonitoringMembersResponse": {
            "type": "object",
            "properties": {
                "UnprocessedAccounts": {
                    "$ref": "#/$defs/UnprocessedAccounts"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/GuardDutyArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UnarchiveFindingsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "FindingIds": {
                    "$ref": "#/$defs/FindingIds"
                }
            }
        },
        "UnarchiveFindingsResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/GuardDutyArn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateDetectorRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "Enable": {
                    "$ref": "#/$defs/Boolean"
                },
                "FindingPublishingFrequency": {
                    "$ref": "#/$defs/FindingPublishingFrequency"
                },
                "DataSources": {
                    "$ref": "#/$defs/DataSourceConfigurations"
                },
                "Features": {
                    "$ref": "#/$defs/DetectorFeatureConfigurations"
                }
            }
        },
        "UpdateDetectorResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateFilterRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "FilterName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/FilterDescription"
                },
                "Action": {
                    "$ref": "#/$defs/FilterAction"
                },
                "Rank": {
                    "$ref": "#/$defs/FilterRank"
                },
                "FindingCriteria": {
                    "$ref": "#/$defs/FindingCriteria"
                }
            }
        },
        "UpdateFilterResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FilterName"
                }
            }
        },
        "UpdateFindingsFeedbackRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "FindingIds": {
                    "$ref": "#/$defs/FindingIds"
                },
                "Feedback": {
                    "$ref": "#/$defs/Feedback"
                },
                "Comments": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Feedback": {
            "enum": [
                "USEFUL",
                "NOT_USEFUL"
            ]
        },
        "UpdateFindingsFeedbackResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateIPSetRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "IpSetId": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Location": {
                    "$ref": "#/$defs/Location"
                },
                "Activate": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UpdateIPSetResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateMalwareProtectionPlanRequest": {
            "type": "object",
            "properties": {
                "MalwareProtectionPlanId": {
                    "$ref": "#/$defs/String"
                },
                "Role": {
                    "$ref": "#/$defs/String"
                },
                "Actions": {
                    "$ref": "#/$defs/MalwareProtectionPlanActions"
                },
                "ProtectedResource": {
                    "$ref": "#/$defs/UpdateProtectedResource"
                }
            }
        },
        "UpdateProtectedResource": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/UpdateS3BucketResource"
                }
            }
        },
        "UpdateS3BucketResource": {
            "type": "object",
            "properties": {
                "ObjectPrefixes": {
                    "$ref": "#/$defs/MalwareProtectionPlanObjectPrefixesList"
                }
            }
        },
        "UpdateMalwareScanSettingsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "ScanResourceCriteria": {
                    "$ref": "#/$defs/ScanResourceCriteria"
                },
                "EbsSnapshotPreservation": {
                    "$ref": "#/$defs/EbsSnapshotPreservation"
                }
            }
        },
        "UpdateMalwareScanSettingsResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateMemberDetectorsRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AccountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "DataSources": {
                    "$ref": "#/$defs/DataSourceConfigurations"
                },
                "Features": {
                    "$ref": "#/$defs/MemberFeaturesConfigurations"
                }
            }
        },
        "MemberFeaturesConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MemberFeaturesConfiguration"
            }
        },
        "MemberFeaturesConfiguration": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrgFeature"
                },
                "Status": {
                    "$ref": "#/$defs/FeatureStatus"
                },
                "AdditionalConfiguration": {
                    "$ref": "#/$defs/MemberAdditionalConfigurations"
                }
            }
        },
        "MemberAdditionalConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MemberAdditionalConfiguration"
            }
        },
        "MemberAdditionalConfiguration": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrgFeatureAdditionalConfiguration"
                },
                "Status": {
                    "$ref": "#/$defs/FeatureStatus"
                }
            }
        },
        "UpdateMemberDetectorsResponse": {
            "type": "object",
            "properties": {
                "UnprocessedAccounts": {
                    "$ref": "#/$defs/UnprocessedAccounts"
                }
            }
        },
        "UpdateOrganizationConfigurationRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "AutoEnable": {
                    "$ref": "#/$defs/Boolean"
                },
                "DataSources": {
                    "$ref": "#/$defs/OrganizationDataSourceConfigurations"
                },
                "Features": {
                    "$ref": "#/$defs/OrganizationFeaturesConfigurations"
                },
                "AutoEnableOrganizationMembers": {
                    "$ref": "#/$defs/AutoEnableMembers"
                }
            }
        },
        "OrganizationDataSourceConfigurations": {
            "type": "object",
            "properties": {
                "S3Logs": {
                    "$ref": "#/$defs/OrganizationS3LogsConfiguration"
                },
                "Kubernetes": {
                    "$ref": "#/$defs/OrganizationKubernetesConfiguration"
                },
                "MalwareProtection": {
                    "$ref": "#/$defs/OrganizationMalwareProtectionConfiguration"
                }
            }
        },
        "OrganizationS3LogsConfiguration": {
            "type": "object",
            "properties": {
                "AutoEnable": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "OrganizationKubernetesConfiguration": {
            "type": "object",
            "properties": {
                "AuditLogs": {
                    "$ref": "#/$defs/OrganizationKubernetesAuditLogsConfiguration"
                }
            }
        },
        "OrganizationKubernetesAuditLogsConfiguration": {
            "type": "object",
            "properties": {
                "AutoEnable": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "OrganizationMalwareProtectionConfiguration": {
            "type": "object",
            "properties": {
                "ScanEc2InstanceWithFindings": {
                    "$ref": "#/$defs/OrganizationScanEc2InstanceWithFindings"
                }
            }
        },
        "OrganizationScanEc2InstanceWithFindings": {
            "type": "object",
            "properties": {
                "EbsVolumes": {
                    "$ref": "#/$defs/OrganizationEbsVolumes"
                }
            }
        },
        "OrganizationEbsVolumes": {
            "type": "object",
            "properties": {
                "AutoEnable": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "OrganizationFeaturesConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationFeatureConfiguration"
            }
        },
        "OrganizationFeatureConfiguration": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrgFeature"
                },
                "AutoEnable": {
                    "$ref": "#/$defs/OrgFeatureStatus"
                },
                "AdditionalConfiguration": {
                    "$ref": "#/$defs/OrganizationAdditionalConfigurations"
                }
            }
        },
        "OrganizationAdditionalConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationAdditionalConfiguration"
            }
        },
        "OrganizationAdditionalConfiguration": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrgFeatureAdditionalConfiguration"
                },
                "AutoEnable": {
                    "$ref": "#/$defs/OrgFeatureStatus"
                }
            }
        },
        "UpdateOrganizationConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdatePublishingDestinationRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "DestinationId": {
                    "$ref": "#/$defs/String"
                },
                "DestinationProperties": {
                    "$ref": "#/$defs/DestinationProperties"
                }
            }
        },
        "UpdatePublishingDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateThreatIntelSetRequest": {
            "type": "object",
            "properties": {
                "DetectorId": {
                    "$ref": "#/$defs/DetectorId"
                },
                "ThreatIntelSetId": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Location": {
                    "$ref": "#/$defs/Location"
                },
                "Activate": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UpdateThreatIntelSetResponse": {
            "type": "object",
            "properties": {}
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://guardduty-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://guardduty.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://guardduty-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://guardduty.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://guardduty.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
