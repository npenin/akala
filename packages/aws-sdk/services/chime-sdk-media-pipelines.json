{
    "name": "chime",
    "commands": [
        {
            "name": "CreateMediaCapturePipeline",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/sdk-media-capture-pipelines"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMediaCapturePipelineResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMediaCapturePipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateMediaConcatenationPipeline",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/sdk-media-concatenation-pipelines"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMediaConcatenationPipelineResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMediaConcatenationPipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateMediaInsightsPipeline",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/media-insights-pipelines"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMediaInsightsPipelineResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMediaInsightsPipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateMediaInsightsPipelineConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/media-insights-pipeline-configurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMediaInsightsPipelineConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMediaInsightsPipelineConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateMediaLiveConnectorPipeline",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/sdk-media-live-connector-pipelines"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMediaLiveConnectorPipelineResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMediaLiveConnectorPipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateMediaPipelineKinesisVideoStreamPool",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/media-pipeline-kinesis-video-stream-pools"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMediaPipelineKinesisVideoStreamPoolResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMediaPipelineKinesisVideoStreamPoolRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateMediaStreamPipeline",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/sdk-media-stream-pipelines"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMediaStreamPipelineResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMediaStreamPipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMediaCapturePipeline",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MediaPipelineId": "route.MediaPipelineId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/sdk-media-capture-pipelines/{MediaPipelineId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.MediaPipelineId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMediaCapturePipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMediaInsightsPipelineConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/media-insights-pipeline-configurations/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMediaInsightsPipelineConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMediaPipeline",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MediaPipelineId": "route.MediaPipelineId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/sdk-media-pipelines/{MediaPipelineId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.MediaPipelineId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMediaPipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMediaPipelineKinesisVideoStreamPool",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/media-pipeline-kinesis-video-stream-pools/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMediaPipelineKinesisVideoStreamPoolRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetMediaCapturePipeline",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MediaPipelineId": "route.MediaPipelineId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/sdk-media-capture-pipelines/{MediaPipelineId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMediaCapturePipelineResponse"
                    },
                    "inject": [
                        "param.0.MediaPipelineId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMediaCapturePipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetMediaInsightsPipelineConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/media-insights-pipeline-configurations/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMediaInsightsPipelineConfigurationResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMediaInsightsPipelineConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetMediaPipeline",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MediaPipelineId": "route.MediaPipelineId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/sdk-media-pipelines/{MediaPipelineId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMediaPipelineResponse"
                    },
                    "inject": [
                        "param.0.MediaPipelineId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMediaPipelineRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetMediaPipelineKinesisVideoStreamPool",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/media-pipeline-kinesis-video-stream-pools/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMediaPipelineKinesisVideoStreamPoolResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMediaPipelineKinesisVideoStreamPoolRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetSpeakerSearchTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "SpeakerSearchTaskId": "route.SpeakerSearchTaskId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/media-insights-pipelines/{Identifier}/speaker-search-tasks/{SpeakerSearchTaskId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSpeakerSearchTaskResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0.SpeakerSearchTaskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSpeakerSearchTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceToneAnalysisTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "VoiceToneAnalysisTaskId": "route.VoiceToneAnalysisTaskId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/media-insights-pipelines/{Identifier}/voice-tone-analysis-tasks/{VoiceToneAnalysisTaskId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceToneAnalysisTaskResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0.VoiceToneAnalysisTaskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetVoiceToneAnalysisTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListMediaCapturePipelines",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/sdk-media-capture-pipelines"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMediaCapturePipelinesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMediaCapturePipelinesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListMediaInsightsPipelineConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/media-insights-pipeline-configurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMediaInsightsPipelineConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMediaInsightsPipelineConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListMediaPipelineKinesisVideoStreamPools",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/media-pipeline-kinesis-video-stream-pools"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMediaPipelineKinesisVideoStreamPoolsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMediaPipelineKinesisVideoStreamPoolsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListMediaPipelines",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/sdk-media-pipelines"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMediaPipelinesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMediaPipelinesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartSpeakerSearchTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/media-insights-pipelines/{Identifier}/speaker-search-tasks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartSpeakerSearchTaskResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartSpeakerSearchTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartVoiceToneAnalysisTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/media-insights-pipelines/{Identifier}/voice-tone-analysis-tasks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartVoiceToneAnalysisTaskResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartVoiceToneAnalysisTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StopSpeakerSearchTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "SpeakerSearchTaskId": "route.SpeakerSearchTaskId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/media-insights-pipelines/{Identifier}/speaker-search-tasks/{SpeakerSearchTaskId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0.SpeakerSearchTaskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopSpeakerSearchTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StopVoiceToneAnalysisTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "VoiceToneAnalysisTaskId": "route.VoiceToneAnalysisTaskId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/media-insights-pipelines/{Identifier}/voice-tone-analysis-tasks/{VoiceToneAnalysisTaskId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0.VoiceToneAnalysisTaskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopVoiceToneAnalysisTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMediaInsightsPipelineConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/media-insights-pipeline-configurations/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMediaInsightsPipelineConfigurationResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMediaInsightsPipelineConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMediaInsightsPipelineStatus",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/media-insights-pipeline-status/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMediaInsightsPipelineStatusRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMediaPipelineKinesisVideoStreamPool",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/media-pipeline-kinesis-video-stream-pools/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMediaPipelineKinesisVideoStreamPoolResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMediaPipelineKinesisVideoStreamPoolRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateMediaCapturePipelineResponse": {
            "type": "object",
            "properties": {
                "MediaCapturePipeline": {
                    "$ref": "#/$defs/MediaCapturePipeline"
                }
            }
        },
        "MediaCapturePipeline": {
            "type": "object",
            "properties": {
                "MediaPipelineId": {
                    "$ref": "#/$defs/GuidString"
                },
                "MediaPipelineArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "SourceType": {
                    "$ref": "#/$defs/MediaPipelineSourceType"
                },
                "SourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Status": {
                    "$ref": "#/$defs/MediaPipelineStatus"
                },
                "SinkType": {
                    "$ref": "#/$defs/MediaPipelineSinkType"
                },
                "SinkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "ChimeSdkMeetingConfiguration": {
                    "$ref": "#/$defs/ChimeSdkMeetingConfiguration"
                }
            }
        },
        "GuidString": {
            "type": "string"
        },
        "AmazonResourceName": {
            "type": "string"
        },
        "MediaPipelineSourceType": {
            "enum": [
                "ChimeSdkMeeting"
            ]
        },
        "Arn": {
            "type": "string"
        },
        "MediaPipelineStatus": {
            "enum": [
                "Initializing",
                "InProgress",
                "Failed",
                "Stopping",
                "Stopped",
                "Paused",
                "NotStarted"
            ]
        },
        "MediaPipelineSinkType": {
            "enum": [
                "S3Bucket"
            ]
        },
        "Iso8601Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "ChimeSdkMeetingConfiguration": {
            "type": "object",
            "properties": {
                "SourceConfiguration": {
                    "$ref": "#/$defs/SourceConfiguration"
                },
                "ArtifactsConfiguration": {
                    "$ref": "#/$defs/ArtifactsConfiguration"
                }
            }
        },
        "SourceConfiguration": {
            "type": "object",
            "properties": {
                "SelectedVideoStreams": {
                    "$ref": "#/$defs/SelectedVideoStreams"
                }
            }
        },
        "SelectedVideoStreams": {
            "type": "object",
            "properties": {
                "AttendeeIds": {
                    "$ref": "#/$defs/AttendeeIdList"
                },
                "ExternalUserIds": {
                    "$ref": "#/$defs/ExternalUserIdList"
                }
            }
        },
        "AttendeeIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GuidString"
            }
        },
        "ExternalUserIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExternalUserIdType"
            }
        },
        "ExternalUserIdType": {
            "type": "string"
        },
        "ArtifactsConfiguration": {
            "type": "object",
            "properties": {
                "Audio": {
                    "$ref": "#/$defs/AudioArtifactsConfiguration"
                },
                "Video": {
                    "$ref": "#/$defs/VideoArtifactsConfiguration"
                },
                "Content": {
                    "$ref": "#/$defs/ContentArtifactsConfiguration"
                },
                "CompositedVideo": {
                    "$ref": "#/$defs/CompositedVideoArtifactsConfiguration"
                }
            }
        },
        "AudioArtifactsConfiguration": {
            "type": "object",
            "properties": {
                "MuxType": {
                    "$ref": "#/$defs/AudioMuxType"
                }
            }
        },
        "AudioMuxType": {
            "enum": [
                "AudioOnly",
                "AudioWithActiveSpeakerVideo",
                "AudioWithCompositedVideo"
            ]
        },
        "VideoArtifactsConfiguration": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/ArtifactsState"
                },
                "MuxType": {
                    "$ref": "#/$defs/VideoMuxType"
                }
            }
        },
        "ArtifactsState": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "VideoMuxType": {
            "enum": [
                "VideoOnly"
            ]
        },
        "ContentArtifactsConfiguration": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/ArtifactsState"
                },
                "MuxType": {
                    "$ref": "#/$defs/ContentMuxType"
                }
            }
        },
        "ContentMuxType": {
            "enum": [
                "ContentOnly"
            ]
        },
        "CompositedVideoArtifactsConfiguration": {
            "type": "object",
            "properties": {
                "Layout": {
                    "$ref": "#/$defs/LayoutOption"
                },
                "Resolution": {
                    "$ref": "#/$defs/ResolutionOption"
                },
                "GridViewConfiguration": {
                    "$ref": "#/$defs/GridViewConfiguration"
                }
            }
        },
        "LayoutOption": {
            "enum": [
                "GridView"
            ]
        },
        "ResolutionOption": {
            "enum": [
                "HD",
                "FHD"
            ]
        },
        "GridViewConfiguration": {
            "type": "object",
            "properties": {
                "ContentShareLayout": {
                    "$ref": "#/$defs/ContentShareLayoutOption"
                },
                "PresenterOnlyConfiguration": {
                    "$ref": "#/$defs/PresenterOnlyConfiguration"
                },
                "ActiveSpeakerOnlyConfiguration": {
                    "$ref": "#/$defs/ActiveSpeakerOnlyConfiguration"
                },
                "HorizontalLayoutConfiguration": {
                    "$ref": "#/$defs/HorizontalLayoutConfiguration"
                },
                "VerticalLayoutConfiguration": {
                    "$ref": "#/$defs/VerticalLayoutConfiguration"
                },
                "VideoAttribute": {
                    "$ref": "#/$defs/VideoAttribute"
                },
                "CanvasOrientation": {
                    "$ref": "#/$defs/CanvasOrientation"
                }
            }
        },
        "ContentShareLayoutOption": {
            "enum": [
                "PresenterOnly",
                "Horizontal",
                "Vertical",
                "ActiveSpeakerOnly"
            ]
        },
        "PresenterOnlyConfiguration": {
            "type": "object",
            "properties": {
                "PresenterPosition": {
                    "$ref": "#/$defs/PresenterPosition"
                }
            }
        },
        "PresenterPosition": {
            "enum": [
                "TopLeft",
                "TopRight",
                "BottomLeft",
                "BottomRight"
            ]
        },
        "ActiveSpeakerOnlyConfiguration": {
            "type": "object",
            "properties": {
                "ActiveSpeakerPosition": {
                    "$ref": "#/$defs/ActiveSpeakerPosition"
                }
            }
        },
        "ActiveSpeakerPosition": {
            "enum": [
                "TopLeft",
                "TopRight",
                "BottomLeft",
                "BottomRight"
            ]
        },
        "HorizontalLayoutConfiguration": {
            "type": "object",
            "properties": {
                "TileOrder": {
                    "$ref": "#/$defs/TileOrder"
                },
                "TilePosition": {
                    "$ref": "#/$defs/HorizontalTilePosition"
                },
                "TileCount": {
                    "$ref": "#/$defs/TileCount"
                },
                "TileAspectRatio": {
                    "$ref": "#/$defs/TileAspectRatio"
                }
            }
        },
        "TileOrder": {
            "enum": [
                "JoinSequence",
                "SpeakerSequence"
            ]
        },
        "HorizontalTilePosition": {
            "enum": [
                "Top",
                "Bottom"
            ]
        },
        "TileCount": {
            "type": "integer",
            "format": "int32"
        },
        "TileAspectRatio": {
            "type": "string"
        },
        "VerticalLayoutConfiguration": {
            "type": "object",
            "properties": {
                "TileOrder": {
                    "$ref": "#/$defs/TileOrder"
                },
                "TilePosition": {
                    "$ref": "#/$defs/VerticalTilePosition"
                },
                "TileCount": {
                    "$ref": "#/$defs/TileCount"
                },
                "TileAspectRatio": {
                    "$ref": "#/$defs/TileAspectRatio"
                }
            }
        },
        "VerticalTilePosition": {
            "enum": [
                "Left",
                "Right"
            ]
        },
        "VideoAttribute": {
            "type": "object",
            "properties": {
                "CornerRadius": {
                    "$ref": "#/$defs/CornerRadius"
                },
                "BorderColor": {
                    "$ref": "#/$defs/BorderColor"
                },
                "HighlightColor": {
                    "$ref": "#/$defs/HighlightColor"
                },
                "BorderThickness": {
                    "$ref": "#/$defs/BorderThickness"
                }
            }
        },
        "CornerRadius": {
            "type": "integer",
            "format": "int32"
        },
        "BorderColor": {
            "enum": [
                "Black",
                "Blue",
                "Red",
                "Green",
                "White",
                "Yellow"
            ]
        },
        "HighlightColor": {
            "enum": [
                "Black",
                "Blue",
                "Red",
                "Green",
                "White",
                "Yellow"
            ]
        },
        "BorderThickness": {
            "type": "integer",
            "format": "int32"
        },
        "CanvasOrientation": {
            "enum": [
                "Landscape",
                "Portrait"
            ]
        },
        "CreateMediaCapturePipelineRequest": {
            "type": "object",
            "properties": {
                "SourceType": {
                    "$ref": "#/$defs/MediaPipelineSourceType"
                },
                "SourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "SinkType": {
                    "$ref": "#/$defs/MediaPipelineSinkType"
                },
                "SinkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "ChimeSdkMeetingConfiguration": {
                    "$ref": "#/$defs/ChimeSdkMeetingConfiguration"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ClientRequestToken": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateMediaConcatenationPipelineResponse": {
            "type": "object",
            "properties": {
                "MediaConcatenationPipeline": {
                    "$ref": "#/$defs/MediaConcatenationPipeline"
                }
            }
        },
        "MediaConcatenationPipeline": {
            "type": "object",
            "properties": {
                "MediaPipelineId": {
                    "$ref": "#/$defs/GuidString"
                },
                "MediaPipelineArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Sources": {
                    "$ref": "#/$defs/ConcatenationSourceList"
                },
                "Sinks": {
                    "$ref": "#/$defs/ConcatenationSinkList"
                },
                "Status": {
                    "$ref": "#/$defs/MediaPipelineStatus"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "ConcatenationSourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConcatenationSource"
            }
        },
        "ConcatenationSource": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ConcatenationSourceType"
                },
                "MediaCapturePipelineSourceConfiguration": {
                    "$ref": "#/$defs/MediaCapturePipelineSourceConfiguration"
                }
            }
        },
        "ConcatenationSourceType": {
            "enum": [
                "MediaCapturePipeline"
            ]
        },
        "MediaCapturePipelineSourceConfiguration": {
            "type": "object",
            "properties": {
                "MediaPipelineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "ChimeSdkMeetingConfiguration": {
                    "$ref": "#/$defs/ChimeSdkMeetingConcatenationConfiguration"
                }
            }
        },
        "ChimeSdkMeetingConcatenationConfiguration": {
            "type": "object",
            "properties": {
                "ArtifactsConfiguration": {
                    "$ref": "#/$defs/ArtifactsConcatenationConfiguration"
                }
            }
        },
        "ArtifactsConcatenationConfiguration": {
            "type": "object",
            "properties": {
                "Audio": {
                    "$ref": "#/$defs/AudioConcatenationConfiguration"
                },
                "Video": {
                    "$ref": "#/$defs/VideoConcatenationConfiguration"
                },
                "Content": {
                    "$ref": "#/$defs/ContentConcatenationConfiguration"
                },
                "DataChannel": {
                    "$ref": "#/$defs/DataChannelConcatenationConfiguration"
                },
                "TranscriptionMessages": {
                    "$ref": "#/$defs/TranscriptionMessagesConcatenationConfiguration"
                },
                "MeetingEvents": {
                    "$ref": "#/$defs/MeetingEventsConcatenationConfiguration"
                },
                "CompositedVideo": {
                    "$ref": "#/$defs/CompositedVideoConcatenationConfiguration"
                }
            }
        },
        "AudioConcatenationConfiguration": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/AudioArtifactsConcatenationState"
                }
            }
        },
        "AudioArtifactsConcatenationState": {
            "enum": [
                "Enabled"
            ]
        },
        "VideoConcatenationConfiguration": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/ArtifactsConcatenationState"
                }
            }
        },
        "ArtifactsConcatenationState": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "ContentConcatenationConfiguration": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/ArtifactsConcatenationState"
                }
            }
        },
        "DataChannelConcatenationConfiguration": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/ArtifactsConcatenationState"
                }
            }
        },
        "TranscriptionMessagesConcatenationConfiguration": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/ArtifactsConcatenationState"
                }
            }
        },
        "MeetingEventsConcatenationConfiguration": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/ArtifactsConcatenationState"
                }
            }
        },
        "CompositedVideoConcatenationConfiguration": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/ArtifactsConcatenationState"
                }
            }
        },
        "ConcatenationSinkList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConcatenationSink"
            }
        },
        "ConcatenationSink": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ConcatenationSinkType"
                },
                "S3BucketSinkConfiguration": {
                    "$ref": "#/$defs/S3BucketSinkConfiguration"
                }
            }
        },
        "ConcatenationSinkType": {
            "enum": [
                "S3Bucket"
            ]
        },
        "S3BucketSinkConfiguration": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "CreateMediaConcatenationPipelineRequest": {
            "type": "object",
            "properties": {
                "Sources": {
                    "$ref": "#/$defs/ConcatenationSourceList"
                },
                "Sinks": {
                    "$ref": "#/$defs/ConcatenationSinkList"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateMediaInsightsPipelineResponse": {
            "type": "object",
            "properties": {
                "MediaInsightsPipeline": {
                    "$ref": "#/$defs/MediaInsightsPipeline"
                }
            }
        },
        "MediaInsightsPipeline": {
            "type": "object",
            "properties": {
                "MediaPipelineId": {
                    "$ref": "#/$defs/GuidString"
                },
                "MediaPipelineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "MediaInsightsPipelineConfigurationArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Status": {
                    "$ref": "#/$defs/MediaPipelineStatus"
                },
                "KinesisVideoStreamSourceRuntimeConfiguration": {
                    "$ref": "#/$defs/KinesisVideoStreamSourceRuntimeConfiguration"
                },
                "MediaInsightsRuntimeMetadata": {
                    "$ref": "#/$defs/MediaInsightsRuntimeMetadata"
                },
                "KinesisVideoStreamRecordingSourceRuntimeConfiguration": {
                    "$ref": "#/$defs/KinesisVideoStreamRecordingSourceRuntimeConfiguration"
                },
                "S3RecordingSinkRuntimeConfiguration": {
                    "$ref": "#/$defs/S3RecordingSinkRuntimeConfiguration"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "ElementStatuses": {
                    "$ref": "#/$defs/MediaInsightsPipelineElementStatuses"
                }
            }
        },
        "KinesisVideoStreamSourceRuntimeConfiguration": {
            "type": "object",
            "properties": {
                "Streams": {
                    "$ref": "#/$defs/Streams"
                },
                "MediaEncoding": {
                    "$ref": "#/$defs/MediaEncoding"
                },
                "MediaSampleRate": {
                    "$ref": "#/$defs/MediaSampleRateHertz"
                }
            }
        },
        "Streams": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StreamConfiguration"
            }
        },
        "StreamConfiguration": {
            "type": "object",
            "properties": {
                "StreamArn": {
                    "$ref": "#/$defs/KinesisVideoStreamArn"
                },
                "FragmentNumber": {
                    "$ref": "#/$defs/FragmentNumberString"
                },
                "StreamChannelDefinition": {
                    "$ref": "#/$defs/StreamChannelDefinition"
                }
            }
        },
        "KinesisVideoStreamArn": {
            "type": "string"
        },
        "FragmentNumberString": {
            "type": "string"
        },
        "StreamChannelDefinition": {
            "type": "object",
            "properties": {
                "NumberOfChannels": {
                    "$ref": "#/$defs/NumberOfChannels"
                },
                "ChannelDefinitions": {
                    "$ref": "#/$defs/ChannelDefinitions"
                }
            }
        },
        "NumberOfChannels": {
            "type": "integer",
            "format": "int32"
        },
        "ChannelDefinitions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChannelDefinition"
            }
        },
        "ChannelDefinition": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/ChannelId"
                },
                "ParticipantRole": {
                    "$ref": "#/$defs/ParticipantRole"
                }
            }
        },
        "ChannelId": {
            "type": "integer",
            "format": "int32"
        },
        "ParticipantRole": {
            "enum": [
                "AGENT",
                "CUSTOMER"
            ]
        },
        "MediaEncoding": {
            "enum": [
                "PCM"
            ]
        },
        "MediaSampleRateHertz": {
            "type": "integer",
            "format": "int32"
        },
        "MediaInsightsRuntimeMetadata": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "String": {
            "type": "string"
        },
        "KinesisVideoStreamRecordingSourceRuntimeConfiguration": {
            "type": "object",
            "properties": {
                "Streams": {
                    "$ref": "#/$defs/RecordingStreamList"
                },
                "FragmentSelector": {
                    "$ref": "#/$defs/FragmentSelector"
                }
            }
        },
        "RecordingStreamList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecordingStreamConfiguration"
            }
        },
        "RecordingStreamConfiguration": {
            "type": "object",
            "properties": {
                "StreamArn": {
                    "$ref": "#/$defs/KinesisVideoStreamArn"
                }
            }
        },
        "FragmentSelector": {
            "type": "object",
            "properties": {
                "FragmentSelectorType": {
                    "$ref": "#/$defs/FragmentSelectorType"
                },
                "TimestampRange": {
                    "$ref": "#/$defs/TimestampRange"
                }
            }
        },
        "FragmentSelectorType": {
            "enum": [
                "ProducerTimestamp",
                "ServerTimestamp"
            ]
        },
        "TimestampRange": {
            "type": "object",
            "properties": {
                "StartTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "S3RecordingSinkRuntimeConfiguration": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/Arn"
                },
                "RecordingFileFormat": {
                    "$ref": "#/$defs/RecordingFileFormat"
                }
            }
        },
        "RecordingFileFormat": {
            "enum": [
                "Wav",
                "Opus"
            ]
        },
        "MediaInsightsPipelineElementStatuses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaInsightsPipelineElementStatus"
            }
        },
        "MediaInsightsPipelineElementStatus": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/MediaInsightsPipelineConfigurationElementType"
                },
                "Status": {
                    "$ref": "#/$defs/MediaPipelineElementStatus"
                }
            }
        },
        "MediaInsightsPipelineConfigurationElementType": {
            "enum": [
                "AMAZON_TRANSCRIBE_CALL_ANALYTICS_PROCESSOR",
                "VOICE_ANALYTICS_PROCESSOR",
                "AMAZON_TRANSCRIBE_PROCESSOR",
                "KINESIS_DATA_STREAM_SINK",
                "LAMBDA_FUNCTION_SINK",
                "SQS_QUEUE_SINK",
                "SNS_TOPIC_SINK",
                "S3_RECORDING_SINK",
                "VOICE_ENHANCEMENT_SINK"
            ]
        },
        "MediaPipelineElementStatus": {
            "enum": [
                "NotStarted",
                "NotSupported",
                "Initializing",
                "InProgress",
                "Failed",
                "Stopping",
                "Stopped",
                "Paused"
            ]
        },
        "CreateMediaInsightsPipelineRequest": {
            "type": "object",
            "properties": {
                "MediaInsightsPipelineConfigurationArn": {
                    "$ref": "#/$defs/Arn"
                },
                "KinesisVideoStreamSourceRuntimeConfiguration": {
                    "$ref": "#/$defs/KinesisVideoStreamSourceRuntimeConfiguration"
                },
                "MediaInsightsRuntimeMetadata": {
                    "$ref": "#/$defs/MediaInsightsRuntimeMetadata"
                },
                "KinesisVideoStreamRecordingSourceRuntimeConfiguration": {
                    "$ref": "#/$defs/KinesisVideoStreamRecordingSourceRuntimeConfiguration"
                },
                "S3RecordingSinkRuntimeConfiguration": {
                    "$ref": "#/$defs/S3RecordingSinkRuntimeConfiguration"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "CreateMediaInsightsPipelineConfigurationResponse": {
            "type": "object",
            "properties": {
                "MediaInsightsPipelineConfiguration": {
                    "$ref": "#/$defs/MediaInsightsPipelineConfiguration"
                }
            }
        },
        "MediaInsightsPipelineConfiguration": {
            "type": "object",
            "properties": {
                "MediaInsightsPipelineConfigurationName": {
                    "$ref": "#/$defs/MediaInsightsPipelineConfigurationNameString"
                },
                "MediaInsightsPipelineConfigurationArn": {
                    "$ref": "#/$defs/Arn"
                },
                "ResourceAccessRoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "RealTimeAlertConfiguration": {
                    "$ref": "#/$defs/RealTimeAlertConfiguration"
                },
                "Elements": {
                    "$ref": "#/$defs/MediaInsightsPipelineConfigurationElements"
                },
                "MediaInsightsPipelineConfigurationId": {
                    "$ref": "#/$defs/GuidString"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "MediaInsightsPipelineConfigurationNameString": {
            "type": "string"
        },
        "RealTimeAlertConfiguration": {
            "type": "object",
            "properties": {
                "Disabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "Rules": {
                    "$ref": "#/$defs/RealTimeAlertRuleList"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "RealTimeAlertRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RealTimeAlertRule"
            }
        },
        "RealTimeAlertRule": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/RealTimeAlertRuleType"
                },
                "KeywordMatchConfiguration": {
                    "$ref": "#/$defs/KeywordMatchConfiguration"
                },
                "SentimentConfiguration": {
                    "$ref": "#/$defs/SentimentConfiguration"
                },
                "IssueDetectionConfiguration": {
                    "$ref": "#/$defs/IssueDetectionConfiguration"
                }
            }
        },
        "RealTimeAlertRuleType": {
            "enum": [
                "KeywordMatch",
                "Sentiment",
                "IssueDetection"
            ]
        },
        "KeywordMatchConfiguration": {
            "type": "object",
            "properties": {
                "RuleName": {
                    "$ref": "#/$defs/RuleName"
                },
                "Keywords": {
                    "$ref": "#/$defs/KeywordMatchWordList"
                },
                "Negate": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RuleName": {
            "type": "string"
        },
        "KeywordMatchWordList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Keyword"
            }
        },
        "Keyword": {
            "type": "string"
        },
        "SentimentConfiguration": {
            "type": "object",
            "properties": {
                "RuleName": {
                    "$ref": "#/$defs/RuleName"
                },
                "SentimentType": {
                    "$ref": "#/$defs/SentimentType"
                },
                "TimePeriod": {
                    "$ref": "#/$defs/SentimentTimePeriodInSeconds"
                }
            }
        },
        "SentimentType": {
            "enum": [
                "NEGATIVE"
            ]
        },
        "SentimentTimePeriodInSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "IssueDetectionConfiguration": {
            "type": "object",
            "properties": {
                "RuleName": {
                    "$ref": "#/$defs/RuleName"
                }
            }
        },
        "MediaInsightsPipelineConfigurationElements": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaInsightsPipelineConfigurationElement"
            }
        },
        "MediaInsightsPipelineConfigurationElement": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/MediaInsightsPipelineConfigurationElementType"
                },
                "AmazonTranscribeCallAnalyticsProcessorConfiguration": {
                    "$ref": "#/$defs/AmazonTranscribeCallAnalyticsProcessorConfiguration"
                },
                "AmazonTranscribeProcessorConfiguration": {
                    "$ref": "#/$defs/AmazonTranscribeProcessorConfiguration"
                },
                "KinesisDataStreamSinkConfiguration": {
                    "$ref": "#/$defs/KinesisDataStreamSinkConfiguration"
                },
                "S3RecordingSinkConfiguration": {
                    "$ref": "#/$defs/S3RecordingSinkConfiguration"
                },
                "VoiceAnalyticsProcessorConfiguration": {
                    "$ref": "#/$defs/VoiceAnalyticsProcessorConfiguration"
                },
                "LambdaFunctionSinkConfiguration": {
                    "$ref": "#/$defs/LambdaFunctionSinkConfiguration"
                },
                "SqsQueueSinkConfiguration": {
                    "$ref": "#/$defs/SqsQueueSinkConfiguration"
                },
                "SnsTopicSinkConfiguration": {
                    "$ref": "#/$defs/SnsTopicSinkConfiguration"
                },
                "VoiceEnhancementSinkConfiguration": {
                    "$ref": "#/$defs/VoiceEnhancementSinkConfiguration"
                }
            }
        },
        "AmazonTranscribeCallAnalyticsProcessorConfiguration": {
            "type": "object",
            "properties": {
                "LanguageCode": {
                    "$ref": "#/$defs/CallAnalyticsLanguageCode"
                },
                "VocabularyName": {
                    "$ref": "#/$defs/VocabularyName"
                },
                "VocabularyFilterName": {
                    "$ref": "#/$defs/VocabularyFilterName"
                },
                "VocabularyFilterMethod": {
                    "$ref": "#/$defs/VocabularyFilterMethod"
                },
                "LanguageModelName": {
                    "$ref": "#/$defs/ModelName"
                },
                "EnablePartialResultsStabilization": {
                    "$ref": "#/$defs/Boolean"
                },
                "PartialResultsStability": {
                    "$ref": "#/$defs/PartialResultsStability"
                },
                "ContentIdentificationType": {
                    "$ref": "#/$defs/ContentType"
                },
                "ContentRedactionType": {
                    "$ref": "#/$defs/ContentType"
                },
                "PiiEntityTypes": {
                    "$ref": "#/$defs/PiiEntityTypes"
                },
                "FilterPartialResults": {
                    "$ref": "#/$defs/Boolean"
                },
                "PostCallAnalyticsSettings": {
                    "$ref": "#/$defs/PostCallAnalyticsSettings"
                },
                "CallAnalyticsStreamCategories": {
                    "$ref": "#/$defs/CategoryNameList"
                }
            }
        },
        "CallAnalyticsLanguageCode": {
            "enum": [
                "EN_US",
                "EN_GB",
                "ES_US",
                "FR_CA",
                "FR_FR",
                "EN_AU",
                "IT_IT",
                "DE_DE",
                "PT_BR"
            ]
        },
        "VocabularyName": {
            "type": "string"
        },
        "VocabularyFilterName": {
            "type": "string"
        },
        "VocabularyFilterMethod": {
            "enum": [
                "REMOVE",
                "MASK",
                "TAG"
            ]
        },
        "ModelName": {
            "type": "string"
        },
        "PartialResultsStability": {
            "enum": [
                "HIGH",
                "MEDIUM",
                "LOW"
            ]
        },
        "ContentType": {
            "enum": [
                "PII"
            ]
        },
        "PiiEntityTypes": {
            "type": "string"
        },
        "PostCallAnalyticsSettings": {
            "type": "object",
            "properties": {
                "OutputLocation": {
                    "$ref": "#/$defs/String"
                },
                "DataAccessRoleArn": {
                    "$ref": "#/$defs/String"
                },
                "ContentRedactionOutput": {
                    "$ref": "#/$defs/ContentRedactionOutput"
                },
                "OutputEncryptionKMSKeyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ContentRedactionOutput": {
            "enum": [
                "REDACTED",
                "REDACTED_AND_UNREDACTED"
            ]
        },
        "CategoryNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CategoryName"
            }
        },
        "CategoryName": {
            "type": "string"
        },
        "AmazonTranscribeProcessorConfiguration": {
            "type": "object",
            "properties": {
                "LanguageCode": {
                    "$ref": "#/$defs/CallAnalyticsLanguageCode"
                },
                "VocabularyName": {
                    "$ref": "#/$defs/VocabularyName"
                },
                "VocabularyFilterName": {
                    "$ref": "#/$defs/VocabularyFilterName"
                },
                "VocabularyFilterMethod": {
                    "$ref": "#/$defs/VocabularyFilterMethod"
                },
                "ShowSpeakerLabel": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnablePartialResultsStabilization": {
                    "$ref": "#/$defs/Boolean"
                },
                "PartialResultsStability": {
                    "$ref": "#/$defs/PartialResultsStability"
                },
                "ContentIdentificationType": {
                    "$ref": "#/$defs/ContentType"
                },
                "ContentRedactionType": {
                    "$ref": "#/$defs/ContentType"
                },
                "PiiEntityTypes": {
                    "$ref": "#/$defs/PiiEntityTypes"
                },
                "LanguageModelName": {
                    "$ref": "#/$defs/ModelName"
                },
                "FilterPartialResults": {
                    "$ref": "#/$defs/Boolean"
                },
                "IdentifyLanguage": {
                    "$ref": "#/$defs/Boolean"
                },
                "IdentifyMultipleLanguages": {
                    "$ref": "#/$defs/Boolean"
                },
                "LanguageOptions": {
                    "$ref": "#/$defs/LanguageOptions"
                },
                "PreferredLanguage": {
                    "$ref": "#/$defs/CallAnalyticsLanguageCode"
                },
                "VocabularyNames": {
                    "$ref": "#/$defs/VocabularyNames"
                },
                "VocabularyFilterNames": {
                    "$ref": "#/$defs/VocabularyFilterNames"
                }
            }
        },
        "LanguageOptions": {
            "type": "string"
        },
        "VocabularyNames": {
            "type": "string"
        },
        "VocabularyFilterNames": {
            "type": "string"
        },
        "KinesisDataStreamSinkConfiguration": {
            "type": "object",
            "properties": {
                "InsightsTarget": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "S3RecordingSinkConfiguration": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/Arn"
                },
                "RecordingFileFormat": {
                    "$ref": "#/$defs/RecordingFileFormat"
                }
            }
        },
        "VoiceAnalyticsProcessorConfiguration": {
            "type": "object",
            "properties": {
                "SpeakerSearchStatus": {
                    "$ref": "#/$defs/VoiceAnalyticsConfigurationStatus"
                },
                "VoiceToneAnalysisStatus": {
                    "$ref": "#/$defs/VoiceAnalyticsConfigurationStatus"
                }
            }
        },
        "VoiceAnalyticsConfigurationStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "LambdaFunctionSinkConfiguration": {
            "type": "object",
            "properties": {
                "InsightsTarget": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "SqsQueueSinkConfiguration": {
            "type": "object",
            "properties": {
                "InsightsTarget": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "SnsTopicSinkConfiguration": {
            "type": "object",
            "properties": {
                "InsightsTarget": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "VoiceEnhancementSinkConfiguration": {
            "type": "object",
            "properties": {
                "Disabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateMediaInsightsPipelineConfigurationRequest": {
            "type": "object",
            "properties": {
                "MediaInsightsPipelineConfigurationName": {
                    "$ref": "#/$defs/MediaInsightsPipelineConfigurationNameString"
                },
                "ResourceAccessRoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "RealTimeAlertConfiguration": {
                    "$ref": "#/$defs/RealTimeAlertConfiguration"
                },
                "Elements": {
                    "$ref": "#/$defs/MediaInsightsPipelineConfigurationElements"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "CreateMediaLiveConnectorPipelineResponse": {
            "type": "object",
            "properties": {
                "MediaLiveConnectorPipeline": {
                    "$ref": "#/$defs/MediaLiveConnectorPipeline"
                }
            }
        },
        "MediaLiveConnectorPipeline": {
            "type": "object",
            "properties": {
                "Sources": {
                    "$ref": "#/$defs/LiveConnectorSourceList"
                },
                "Sinks": {
                    "$ref": "#/$defs/LiveConnectorSinkList"
                },
                "MediaPipelineId": {
                    "$ref": "#/$defs/GuidString"
                },
                "MediaPipelineArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Status": {
                    "$ref": "#/$defs/MediaPipelineStatus"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "LiveConnectorSourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LiveConnectorSourceConfiguration"
            }
        },
        "LiveConnectorSourceConfiguration": {
            "type": "object",
            "properties": {
                "SourceType": {
                    "$ref": "#/$defs/LiveConnectorSourceType"
                },
                "ChimeSdkMeetingLiveConnectorConfiguration": {
                    "$ref": "#/$defs/ChimeSdkMeetingLiveConnectorConfiguration"
                }
            }
        },
        "LiveConnectorSourceType": {
            "enum": [
                "ChimeSdkMeeting"
            ]
        },
        "ChimeSdkMeetingLiveConnectorConfiguration": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "MuxType": {
                    "$ref": "#/$defs/LiveConnectorMuxType"
                },
                "CompositedVideo": {
                    "$ref": "#/$defs/CompositedVideoArtifactsConfiguration"
                },
                "SourceConfiguration": {
                    "$ref": "#/$defs/SourceConfiguration"
                }
            }
        },
        "LiveConnectorMuxType": {
            "enum": [
                "AudioWithCompositedVideo",
                "AudioWithActiveSpeakerVideo"
            ]
        },
        "LiveConnectorSinkList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LiveConnectorSinkConfiguration"
            }
        },
        "LiveConnectorSinkConfiguration": {
            "type": "object",
            "properties": {
                "SinkType": {
                    "$ref": "#/$defs/LiveConnectorSinkType"
                },
                "RTMPConfiguration": {
                    "$ref": "#/$defs/LiveConnectorRTMPConfiguration"
                }
            }
        },
        "LiveConnectorSinkType": {
            "enum": [
                "RTMP"
            ]
        },
        "LiveConnectorRTMPConfiguration": {
            "type": "object",
            "properties": {
                "Url": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "AudioChannels": {
                    "$ref": "#/$defs/AudioChannelsOption"
                },
                "AudioSampleRate": {
                    "$ref": "#/$defs/AudioSampleRateOption"
                }
            }
        },
        "SensitiveString": {
            "type": "string"
        },
        "AudioChannelsOption": {
            "enum": [
                "Stereo",
                "Mono"
            ]
        },
        "AudioSampleRateOption": {
            "type": "string"
        },
        "CreateMediaLiveConnectorPipelineRequest": {
            "type": "object",
            "properties": {
                "Sources": {
                    "$ref": "#/$defs/LiveConnectorSourceList"
                },
                "Sinks": {
                    "$ref": "#/$defs/LiveConnectorSinkList"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateMediaPipelineKinesisVideoStreamPoolResponse": {
            "type": "object",
            "properties": {
                "KinesisVideoStreamPoolConfiguration": {
                    "$ref": "#/$defs/KinesisVideoStreamPoolConfiguration"
                }
            }
        },
        "KinesisVideoStreamPoolConfiguration": {
            "type": "object",
            "properties": {
                "PoolArn": {
                    "$ref": "#/$defs/Arn"
                },
                "PoolName": {
                    "$ref": "#/$defs/KinesisVideoStreamPoolName"
                },
                "PoolId": {
                    "$ref": "#/$defs/KinesisVideoStreamPoolId"
                },
                "PoolStatus": {
                    "$ref": "#/$defs/KinesisVideoStreamPoolStatus"
                },
                "PoolSize": {
                    "$ref": "#/$defs/KinesisVideoStreamPoolSize"
                },
                "StreamConfiguration": {
                    "$ref": "#/$defs/KinesisVideoStreamConfiguration"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "KinesisVideoStreamPoolName": {
            "type": "string"
        },
        "KinesisVideoStreamPoolId": {
            "type": "string"
        },
        "KinesisVideoStreamPoolStatus": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "UPDATING",
                "DELETING",
                "FAILED"
            ]
        },
        "KinesisVideoStreamPoolSize": {
            "type": "integer",
            "format": "int32"
        },
        "KinesisVideoStreamConfiguration": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/AwsRegion"
                },
                "DataRetentionInHours": {
                    "$ref": "#/$defs/DataRetentionInHours"
                }
            }
        },
        "AwsRegion": {
            "type": "string"
        },
        "DataRetentionInHours": {
            "type": "integer",
            "format": "int32"
        },
        "CreateMediaPipelineKinesisVideoStreamPoolRequest": {
            "type": "object",
            "properties": {
                "StreamConfiguration": {
                    "$ref": "#/$defs/KinesisVideoStreamConfiguration"
                },
                "PoolName": {
                    "$ref": "#/$defs/KinesisVideoStreamPoolName"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateMediaStreamPipelineResponse": {
            "type": "object",
            "properties": {
                "MediaStreamPipeline": {
                    "$ref": "#/$defs/MediaStreamPipeline"
                }
            }
        },
        "MediaStreamPipeline": {
            "type": "object",
            "properties": {
                "MediaPipelineId": {
                    "$ref": "#/$defs/GuidString"
                },
                "MediaPipelineArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/MediaPipelineStatus"
                },
                "Sources": {
                    "$ref": "#/$defs/MediaStreamSourceList"
                },
                "Sinks": {
                    "$ref": "#/$defs/MediaStreamSinkList"
                }
            }
        },
        "MediaStreamSourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaStreamSource"
            }
        },
        "MediaStreamSource": {
            "type": "object",
            "properties": {
                "SourceType": {
                    "$ref": "#/$defs/MediaPipelineSourceType"
                },
                "SourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "MediaStreamSinkList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaStreamSink"
            }
        },
        "MediaStreamSink": {
            "type": "object",
            "properties": {
                "SinkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "SinkType": {
                    "$ref": "#/$defs/MediaStreamPipelineSinkType"
                },
                "ReservedStreamCapacity": {
                    "$ref": "#/$defs/ReservedStreamCapacity"
                },
                "MediaStreamType": {
                    "$ref": "#/$defs/MediaStreamType"
                }
            }
        },
        "MediaStreamPipelineSinkType": {
            "enum": [
                "KinesisVideoStreamPool"
            ]
        },
        "ReservedStreamCapacity": {
            "type": "integer",
            "format": "int32"
        },
        "MediaStreamType": {
            "enum": [
                "MixedAudio",
                "IndividualAudio"
            ]
        },
        "CreateMediaStreamPipelineRequest": {
            "type": "object",
            "properties": {
                "Sources": {
                    "$ref": "#/$defs/MediaStreamSourceList"
                },
                "Sinks": {
                    "$ref": "#/$defs/MediaStreamSinkList"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DeleteMediaCapturePipelineRequest": {
            "type": "object",
            "properties": {
                "MediaPipelineId": {
                    "$ref": "#/$defs/GuidString"
                }
            }
        },
        "DeleteMediaInsightsPipelineConfigurationRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "NonEmptyString": {
            "type": "string"
        },
        "DeleteMediaPipelineRequest": {
            "type": "object",
            "properties": {
                "MediaPipelineId": {
                    "$ref": "#/$defs/GuidString"
                }
            }
        },
        "DeleteMediaPipelineKinesisVideoStreamPoolRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetMediaCapturePipelineResponse": {
            "type": "object",
            "properties": {
                "MediaCapturePipeline": {
                    "$ref": "#/$defs/MediaCapturePipeline"
                }
            }
        },
        "GetMediaCapturePipelineRequest": {
            "type": "object",
            "properties": {
                "MediaPipelineId": {
                    "$ref": "#/$defs/GuidString"
                }
            }
        },
        "GetMediaInsightsPipelineConfigurationResponse": {
            "type": "object",
            "properties": {
                "MediaInsightsPipelineConfiguration": {
                    "$ref": "#/$defs/MediaInsightsPipelineConfiguration"
                }
            }
        },
        "GetMediaInsightsPipelineConfigurationRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetMediaPipelineResponse": {
            "type": "object",
            "properties": {
                "MediaPipeline": {
                    "$ref": "#/$defs/MediaPipeline"
                }
            }
        },
        "MediaPipeline": {
            "type": "object",
            "properties": {
                "MediaCapturePipeline": {
                    "$ref": "#/$defs/MediaCapturePipeline"
                },
                "MediaLiveConnectorPipeline": {
                    "$ref": "#/$defs/MediaLiveConnectorPipeline"
                },
                "MediaConcatenationPipeline": {
                    "$ref": "#/$defs/MediaConcatenationPipeline"
                },
                "MediaInsightsPipeline": {
                    "$ref": "#/$defs/MediaInsightsPipeline"
                },
                "MediaStreamPipeline": {
                    "$ref": "#/$defs/MediaStreamPipeline"
                }
            }
        },
        "GetMediaPipelineRequest": {
            "type": "object",
            "properties": {
                "MediaPipelineId": {
                    "$ref": "#/$defs/GuidString"
                }
            }
        },
        "GetMediaPipelineKinesisVideoStreamPoolResponse": {
            "type": "object",
            "properties": {
                "KinesisVideoStreamPoolConfiguration": {
                    "$ref": "#/$defs/KinesisVideoStreamPoolConfiguration"
                }
            }
        },
        "GetMediaPipelineKinesisVideoStreamPoolRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetSpeakerSearchTaskResponse": {
            "type": "object",
            "properties": {
                "SpeakerSearchTask": {
                    "$ref": "#/$defs/SpeakerSearchTask"
                }
            }
        },
        "SpeakerSearchTask": {
            "type": "object",
            "properties": {
                "SpeakerSearchTaskId": {
                    "$ref": "#/$defs/GuidString"
                },
                "SpeakerSearchTaskStatus": {
                    "$ref": "#/$defs/MediaPipelineTaskStatus"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "MediaPipelineTaskStatus": {
            "enum": [
                "NotStarted",
                "Initializing",
                "InProgress",
                "Failed",
                "Stopping",
                "Stopped"
            ]
        },
        "GetSpeakerSearchTaskRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "SpeakerSearchTaskId": {
                    "$ref": "#/$defs/GuidString"
                }
            }
        },
        "GetVoiceToneAnalysisTaskResponse": {
            "type": "object",
            "properties": {
                "VoiceToneAnalysisTask": {
                    "$ref": "#/$defs/VoiceToneAnalysisTask"
                }
            }
        },
        "VoiceToneAnalysisTask": {
            "type": "object",
            "properties": {
                "VoiceToneAnalysisTaskId": {
                    "$ref": "#/$defs/GuidString"
                },
                "VoiceToneAnalysisTaskStatus": {
                    "$ref": "#/$defs/MediaPipelineTaskStatus"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "GetVoiceToneAnalysisTaskRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "VoiceToneAnalysisTaskId": {
                    "$ref": "#/$defs/GuidString"
                }
            }
        },
        "ListMediaCapturePipelinesResponse": {
            "type": "object",
            "properties": {
                "MediaCapturePipelines": {
                    "$ref": "#/$defs/MediaCapturePipelineSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MediaCapturePipelineSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaCapturePipelineSummary"
            }
        },
        "MediaCapturePipelineSummary": {
            "type": "object",
            "properties": {
                "MediaPipelineId": {
                    "$ref": "#/$defs/GuidString"
                },
                "MediaPipelineArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "ListMediaCapturePipelinesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                }
            }
        },
        "ResultMax": {
            "type": "integer",
            "format": "int32"
        },
        "ListMediaInsightsPipelineConfigurationsResponse": {
            "type": "object",
            "properties": {
                "MediaInsightsPipelineConfigurations": {
                    "$ref": "#/$defs/MediaInsightsPipelineConfigurationSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MediaInsightsPipelineConfigurationSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaInsightsPipelineConfigurationSummary"
            }
        },
        "MediaInsightsPipelineConfigurationSummary": {
            "type": "object",
            "properties": {
                "MediaInsightsPipelineConfigurationName": {
                    "$ref": "#/$defs/MediaInsightsPipelineConfigurationNameString"
                },
                "MediaInsightsPipelineConfigurationId": {
                    "$ref": "#/$defs/GuidString"
                },
                "MediaInsightsPipelineConfigurationArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ListMediaInsightsPipelineConfigurationsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                }
            }
        },
        "ListMediaPipelineKinesisVideoStreamPoolsResponse": {
            "type": "object",
            "properties": {
                "KinesisVideoStreamPools": {
                    "$ref": "#/$defs/KinesisVideoStreamPoolSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "KinesisVideoStreamPoolSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KinesisVideoStreamPoolSummary"
            }
        },
        "KinesisVideoStreamPoolSummary": {
            "type": "object",
            "properties": {
                "PoolName": {
                    "$ref": "#/$defs/KinesisVideoStreamPoolName"
                },
                "PoolId": {
                    "$ref": "#/$defs/KinesisVideoStreamPoolId"
                },
                "PoolArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ListMediaPipelineKinesisVideoStreamPoolsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                }
            }
        },
        "ListMediaPipelinesResponse": {
            "type": "object",
            "properties": {
                "MediaPipelines": {
                    "$ref": "#/$defs/MediaPipelineList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MediaPipelineList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaPipelineSummary"
            }
        },
        "MediaPipelineSummary": {
            "type": "object",
            "properties": {
                "MediaPipelineId": {
                    "$ref": "#/$defs/GuidString"
                },
                "MediaPipelineArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "ListMediaPipelinesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "StartSpeakerSearchTaskResponse": {
            "type": "object",
            "properties": {
                "SpeakerSearchTask": {
                    "$ref": "#/$defs/SpeakerSearchTask"
                }
            }
        },
        "StartSpeakerSearchTaskRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "VoiceProfileDomainArn": {
                    "$ref": "#/$defs/Arn"
                },
                "KinesisVideoStreamSourceTaskConfiguration": {
                    "$ref": "#/$defs/KinesisVideoStreamSourceTaskConfiguration"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "KinesisVideoStreamSourceTaskConfiguration": {
            "type": "object",
            "properties": {
                "StreamArn": {
                    "$ref": "#/$defs/KinesisVideoStreamArn"
                },
                "ChannelId": {
                    "$ref": "#/$defs/ChannelId"
                },
                "FragmentNumber": {
                    "$ref": "#/$defs/FragmentNumberString"
                }
            }
        },
        "StartVoiceToneAnalysisTaskResponse": {
            "type": "object",
            "properties": {
                "VoiceToneAnalysisTask": {
                    "$ref": "#/$defs/VoiceToneAnalysisTask"
                }
            }
        },
        "StartVoiceToneAnalysisTaskRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "LanguageCode": {
                    "$ref": "#/$defs/VoiceAnalyticsLanguageCode"
                },
                "KinesisVideoStreamSourceTaskConfiguration": {
                    "$ref": "#/$defs/KinesisVideoStreamSourceTaskConfiguration"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "VoiceAnalyticsLanguageCode": {
            "enum": [
                "EN_US"
            ]
        },
        "StopSpeakerSearchTaskRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "SpeakerSearchTaskId": {
                    "$ref": "#/$defs/GuidString"
                }
            }
        },
        "StopVoiceToneAnalysisTaskRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "VoiceToneAnalysisTaskId": {
                    "$ref": "#/$defs/GuidString"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateMediaInsightsPipelineConfigurationResponse": {
            "type": "object",
            "properties": {
                "MediaInsightsPipelineConfiguration": {
                    "$ref": "#/$defs/MediaInsightsPipelineConfiguration"
                }
            }
        },
        "UpdateMediaInsightsPipelineConfigurationRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "ResourceAccessRoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "RealTimeAlertConfiguration": {
                    "$ref": "#/$defs/RealTimeAlertConfiguration"
                },
                "Elements": {
                    "$ref": "#/$defs/MediaInsightsPipelineConfigurationElements"
                }
            }
        },
        "UpdateMediaInsightsPipelineStatusRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "UpdateStatus": {
                    "$ref": "#/$defs/MediaPipelineStatusUpdate"
                }
            }
        },
        "MediaPipelineStatusUpdate": {
            "enum": [
                "Pause",
                "Resume"
            ]
        },
        "UpdateMediaPipelineKinesisVideoStreamPoolResponse": {
            "type": "object",
            "properties": {
                "KinesisVideoStreamPoolConfiguration": {
                    "$ref": "#/$defs/KinesisVideoStreamPoolConfiguration"
                }
            }
        },
        "UpdateMediaPipelineKinesisVideoStreamPoolRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "StreamConfiguration": {
                    "$ref": "#/$defs/KinesisVideoStreamConfigurationUpdate"
                }
            }
        },
        "KinesisVideoStreamConfigurationUpdate": {
            "type": "object",
            "properties": {
                "DataRetentionInHours": {
                    "$ref": "#/$defs/DataRetentionChangeInHours"
                }
            }
        },
        "DataRetentionChangeInHours": {
            "type": "integer",
            "format": "int32"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://media-pipelines-chime-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://media-pipelines-chime-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://media-pipelines-chime.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://media-pipelines-chime.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}