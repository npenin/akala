{
    "name": "cleanrooms-ml",
    "commands": [
        {
            "name": "ListCollaborationConfiguredModelAlgorithmAssociations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "collaborationIdentifier": "route.collaborationIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/collaborations/{collaborationIdentifier}/configured-model-algorithm-associations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCollaborationConfiguredModelAlgorithmAssociationsResponse"
                    },
                    "inject": [
                        "param.0.collaborationIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCollaborationConfiguredModelAlgorithmAssociationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCollaborationMLInputChannels",
            "config": {
                "http": {
                    "inject": [
                        {
                            "collaborationIdentifier": "route.collaborationIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/collaborations/{collaborationIdentifier}/ml-input-channels"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCollaborationMLInputChannelsResponse"
                    },
                    "inject": [
                        "param.0.collaborationIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCollaborationMLInputChannelsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCollaborationTrainedModelExportJobs",
            "config": {
                "http": {
                    "inject": [
                        {
                            "collaborationIdentifier": "route.collaborationIdentifier",
                            "trainedModelArn": "route.trainedModelArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/collaborations/{collaborationIdentifier}/trained-models/{trainedModelArn}/export-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCollaborationTrainedModelExportJobsResponse"
                    },
                    "inject": [
                        "param.0.collaborationIdentifier",
                        "param.0.trainedModelArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCollaborationTrainedModelExportJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCollaborationTrainedModelInferenceJobs",
            "config": {
                "http": {
                    "inject": [
                        {
                            "collaborationIdentifier": "route.collaborationIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/collaborations/{collaborationIdentifier}/trained-model-inference-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCollaborationTrainedModelInferenceJobsResponse"
                    },
                    "inject": [
                        "param.0.collaborationIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCollaborationTrainedModelInferenceJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCollaborationTrainedModels",
            "config": {
                "http": {
                    "inject": [
                        {
                            "collaborationIdentifier": "route.collaborationIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/collaborations/{collaborationIdentifier}/trained-models"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCollaborationTrainedModelsResponse"
                    },
                    "inject": [
                        "param.0.collaborationIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCollaborationTrainedModelsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "ListCollaborationConfiguredModelAlgorithmAssociationsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "collaborationConfiguredModelAlgorithmAssociations": {
                    "$ref": "#/$defs/CollaborationConfiguredModelAlgorithmAssociationList"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "CollaborationConfiguredModelAlgorithmAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CollaborationConfiguredModelAlgorithmAssociationSummary"
            }
        },
        "CollaborationConfiguredModelAlgorithmAssociationSummary": {
            "type": "object",
            "properties": {
                "createTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updateTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "configuredModelAlgorithmAssociationArn": {
                    "$ref": "#/$defs/ConfiguredModelAlgorithmAssociationArn"
                },
                "name": {
                    "$ref": "#/$defs/NameString"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "membershipIdentifier": {
                    "$ref": "#/$defs/UUID"
                },
                "collaborationIdentifier": {
                    "$ref": "#/$defs/UUID"
                },
                "configuredModelAlgorithmArn": {
                    "$ref": "#/$defs/ConfiguredModelAlgorithmArn"
                },
                "creatorAccountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "ConfiguredModelAlgorithmAssociationArn": {
            "type": "string"
        },
        "NameString": {
            "type": "string"
        },
        "ResourceDescription": {
            "type": "string"
        },
        "UUID": {
            "type": "string"
        },
        "ConfiguredModelAlgorithmArn": {
            "type": "string"
        },
        "AccountId": {
            "type": "string"
        },
        "ListCollaborationConfiguredModelAlgorithmAssociationsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "collaborationIdentifier": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListCollaborationMLInputChannelsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "collaborationMLInputChannelsList": {
                    "$ref": "#/$defs/CollaborationMLInputChannelsList"
                }
            }
        },
        "CollaborationMLInputChannelsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CollaborationMLInputChannelSummary"
            }
        },
        "CollaborationMLInputChannelSummary": {
            "type": "object",
            "properties": {
                "createTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updateTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "membershipIdentifier": {
                    "$ref": "#/$defs/UUID"
                },
                "collaborationIdentifier": {
                    "$ref": "#/$defs/UUID"
                },
                "name": {
                    "$ref": "#/$defs/NameString"
                },
                "configuredModelAlgorithmAssociations": {
                    "$ref": "#/$defs/ConfiguredModelAlgorithmAssociationArnList"
                },
                "mlInputChannelArn": {
                    "$ref": "#/$defs/MLInputChannelArn"
                },
                "status": {
                    "$ref": "#/$defs/MLInputChannelStatus"
                },
                "creatorAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                }
            }
        },
        "ConfiguredModelAlgorithmAssociationArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConfiguredModelAlgorithmAssociationArn"
            }
        },
        "MLInputChannelArn": {
            "type": "string"
        },
        "MLInputChannelStatus": {
            "enum": [
                "CREATE_PENDING",
                "CREATE_IN_PROGRESS",
                "CREATE_FAILED",
                "ACTIVE",
                "DELETE_PENDING",
                "DELETE_IN_PROGRESS",
                "DELETE_FAILED",
                "INACTIVE"
            ]
        },
        "ListCollaborationMLInputChannelsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "collaborationIdentifier": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "ListCollaborationTrainedModelExportJobsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "collaborationTrainedModelExportJobs": {
                    "$ref": "#/$defs/CollaborationTrainedModelExportJobList"
                }
            }
        },
        "CollaborationTrainedModelExportJobList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CollaborationTrainedModelExportJobSummary"
            }
        },
        "CollaborationTrainedModelExportJobSummary": {
            "type": "object",
            "properties": {
                "createTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updateTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "name": {
                    "$ref": "#/$defs/NameString"
                },
                "outputConfiguration": {
                    "$ref": "#/$defs/TrainedModelExportOutputConfiguration"
                },
                "status": {
                    "$ref": "#/$defs/TrainedModelExportJobStatus"
                },
                "statusDetails": {
                    "$ref": "#/$defs/StatusDetails"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "creatorAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "trainedModelArn": {
                    "$ref": "#/$defs/TrainedModelArn"
                },
                "membershipIdentifier": {
                    "$ref": "#/$defs/UUID"
                },
                "collaborationIdentifier": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "TrainedModelExportOutputConfiguration": {
            "type": "object",
            "properties": {
                "members": {
                    "$ref": "#/$defs/TrainedModelExportReceiverMembers"
                }
            }
        },
        "TrainedModelExportReceiverMembers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrainedModelExportReceiverMember"
            }
        },
        "TrainedModelExportReceiverMember": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "TrainedModelExportJobStatus": {
            "enum": [
                "CREATE_PENDING",
                "CREATE_IN_PROGRESS",
                "CREATE_FAILED",
                "ACTIVE"
            ]
        },
        "StatusDetails": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "message": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "TrainedModelArn": {
            "type": "string"
        },
        "ListCollaborationTrainedModelExportJobsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "collaborationIdentifier": {
                    "$ref": "#/$defs/UUID"
                },
                "trainedModelArn": {
                    "$ref": "#/$defs/TrainedModelArn"
                }
            }
        },
        "ListCollaborationTrainedModelInferenceJobsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "collaborationTrainedModelInferenceJobs": {
                    "$ref": "#/$defs/CollaborationTrainedModelInferenceJobList"
                }
            }
        },
        "CollaborationTrainedModelInferenceJobList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CollaborationTrainedModelInferenceJobSummary"
            }
        },
        "CollaborationTrainedModelInferenceJobSummary": {
            "type": "object",
            "properties": {
                "trainedModelInferenceJobArn": {
                    "$ref": "#/$defs/TrainedModelInferenceJobArn"
                },
                "configuredModelAlgorithmAssociationArn": {
                    "$ref": "#/$defs/ConfiguredModelAlgorithmAssociationArn"
                },
                "membershipIdentifier": {
                    "$ref": "#/$defs/UUID"
                },
                "trainedModelArn": {
                    "$ref": "#/$defs/TrainedModelArn"
                },
                "collaborationIdentifier": {
                    "$ref": "#/$defs/UUID"
                },
                "status": {
                    "$ref": "#/$defs/TrainedModelInferenceJobStatus"
                },
                "outputConfiguration": {
                    "$ref": "#/$defs/InferenceOutputConfiguration"
                },
                "name": {
                    "$ref": "#/$defs/NameString"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "metricsStatus": {
                    "$ref": "#/$defs/MetricsStatus"
                },
                "metricsStatusDetails": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "logsStatus": {
                    "$ref": "#/$defs/LogsStatus"
                },
                "logsStatusDetails": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "createTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updateTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "creatorAccountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "TrainedModelInferenceJobArn": {
            "type": "string"
        },
        "TrainedModelInferenceJobStatus": {
            "enum": [
                "CREATE_PENDING",
                "CREATE_IN_PROGRESS",
                "CREATE_FAILED",
                "ACTIVE",
                "CANCEL_PENDING",
                "CANCEL_IN_PROGRESS",
                "CANCEL_FAILED",
                "INACTIVE"
            ]
        },
        "InferenceOutputConfiguration": {
            "type": "object",
            "properties": {
                "accept": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "members": {
                    "$ref": "#/$defs/InferenceReceiverMembers"
                }
            }
        },
        "InferenceReceiverMembers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InferenceReceiverMember"
            }
        },
        "InferenceReceiverMember": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "MetricsStatus": {
            "enum": [
                "PUBLISH_SUCCEEDED",
                "PUBLISH_FAILED"
            ]
        },
        "LogsStatus": {
            "enum": [
                "PUBLISH_SUCCEEDED",
                "PUBLISH_FAILED"
            ]
        },
        "ListCollaborationTrainedModelInferenceJobsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "collaborationIdentifier": {
                    "$ref": "#/$defs/UUID"
                },
                "trainedModelArn": {
                    "$ref": "#/$defs/TrainedModelArn"
                }
            }
        },
        "ListCollaborationTrainedModelsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "collaborationTrainedModels": {
                    "$ref": "#/$defs/CollaborationTrainedModelList"
                }
            }
        },
        "CollaborationTrainedModelList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CollaborationTrainedModelSummary"
            }
        },
        "CollaborationTrainedModelSummary": {
            "type": "object",
            "properties": {
                "createTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updateTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "trainedModelArn": {
                    "$ref": "#/$defs/TrainedModelArn"
                },
                "name": {
                    "$ref": "#/$defs/NameString"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "membershipIdentifier": {
                    "$ref": "#/$defs/UUID"
                },
                "collaborationIdentifier": {
                    "$ref": "#/$defs/UUID"
                },
                "status": {
                    "$ref": "#/$defs/TrainedModelStatus"
                },
                "configuredModelAlgorithmAssociationArn": {
                    "$ref": "#/$defs/ConfiguredModelAlgorithmAssociationArn"
                },
                "creatorAccountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "TrainedModelStatus": {
            "enum": [
                "CREATE_PENDING",
                "CREATE_IN_PROGRESS",
                "CREATE_FAILED",
                "ACTIVE",
                "DELETE_PENDING",
                "DELETE_IN_PROGRESS",
                "DELETE_FAILED",
                "INACTIVE",
                "CANCEL_PENDING",
                "CANCEL_IN_PROGRESS",
                "CANCEL_FAILED"
            ]
        },
        "ListCollaborationTrainedModelsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "collaborationIdentifier": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/TaggableArn"
                }
            }
        },
        "TaggableArn": {
            "type": "string"
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/TaggableArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/TaggableArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "TagKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://cleanrooms-ml-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://cleanrooms-ml-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://cleanrooms-ml.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://cleanrooms-ml.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                }
            ]
        }
    }
}