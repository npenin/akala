{
    "name": "iotevents",
    "commands": [
        {
            "name": "CreateAlarmModel",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/alarm-models"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAlarmModelResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAlarmModelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "alarmModelName": {},
                        "alarmModelDescription": {},
                        "roleArn": {},
                        "tags": {},
                        "key": {},
                        "severity": {},
                        "alarmRule": {},
                        "alarmNotification": {},
                        "alarmEventActions": {},
                        "alarmCapabilities": {}
                    }
                }
            }
        },
        {
            "name": "CreateDetectorModel",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/detector-models"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDetectorModelResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDetectorModelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "detectorModelName": {},
                        "detectorModelDefinition": {},
                        "detectorModelDescription": {},
                        "key": {},
                        "roleArn": {},
                        "tags": {},
                        "evaluationMethod": {}
                    }
                }
            }
        },
        {
            "name": "CreateInput",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/inputs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateInputResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateInputRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "inputName": {},
                        "inputDescription": {},
                        "inputDefinition": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "DeleteAlarmModel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "alarmModelName": "route.alarmModelName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/alarm-models/{alarmModelName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAlarmModelResponse"
                    },
                    "inject": [
                        "param.0.alarmModelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAlarmModelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "alarmModelName": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDetectorModel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "detectorModelName": "route.detectorModelName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/detector-models/{detectorModelName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDetectorModelResponse"
                    },
                    "inject": [
                        "param.0.detectorModelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDetectorModelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "detectorModelName": {}
                    }
                }
            }
        },
        {
            "name": "DeleteInput",
            "config": {
                "http": {
                    "inject": [
                        {
                            "inputName": "route.inputName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/inputs/{inputName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteInputResponse"
                    },
                    "inject": [
                        "param.0.inputName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteInputRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "inputName": {}
                    }
                }
            }
        },
        {
            "name": "DescribeAlarmModel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "alarmModelName": "route.alarmModelName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/alarm-models/{alarmModelName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAlarmModelResponse"
                    },
                    "inject": [
                        "param.0.alarmModelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAlarmModelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "alarmModelName": {},
                        "alarmModelVersion": {}
                    }
                }
            }
        },
        {
            "name": "DescribeDetectorModel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "detectorModelName": "route.detectorModelName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector-models/{detectorModelName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDetectorModelResponse"
                    },
                    "inject": [
                        "param.0.detectorModelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDetectorModelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "detectorModelName": {},
                        "detectorModelVersion": {}
                    }
                }
            }
        },
        {
            "name": "DescribeDetectorModelAnalysis",
            "config": {
                "http": {
                    "inject": [
                        {
                            "analysisId": "route.analysisId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/analysis/detector-models/{analysisId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDetectorModelAnalysisResponse"
                    },
                    "inject": [
                        "param.0.analysisId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDetectorModelAnalysisRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "analysisId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeInput",
            "config": {
                "http": {
                    "inject": [
                        {
                            "inputName": "route.inputName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/inputs/{inputName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInputResponse"
                    },
                    "inject": [
                        "param.0.inputName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInputRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "inputName": {}
                    }
                }
            }
        },
        {
            "name": "DescribeLoggingOptions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/logging"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLoggingOptionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLoggingOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetDetectorModelAnalysisResults",
            "config": {
                "http": {
                    "inject": [
                        {
                            "analysisId": "route.analysisId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/analysis/detector-models/{analysisId}/results"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDetectorModelAnalysisResultsResponse"
                    },
                    "inject": [
                        "param.0.analysisId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDetectorModelAnalysisResultsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "analysisId": {},
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListAlarmModels",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/alarm-models"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAlarmModelsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAlarmModelsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListAlarmModelVersions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "alarmModelName": "route.alarmModelName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/alarm-models/{alarmModelName}/versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAlarmModelVersionsResponse"
                    },
                    "inject": [
                        "param.0.alarmModelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAlarmModelVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "alarmModelName": {},
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListDetectorModels",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/detector-models"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDetectorModelsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDetectorModelsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListDetectorModelVersions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "detectorModelName": "route.detectorModelName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detector-models/{detectorModelName}/versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDetectorModelVersionsResponse"
                    },
                    "inject": [
                        "param.0.detectorModelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDetectorModelVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "detectorModelName": {},
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListInputRoutings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/input-routings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInputRoutingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInputRoutingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "inputIdentifier": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListInputs",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/inputs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInputsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInputsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {}
                    }
                }
            }
        },
        {
            "name": "PutLoggingOptions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/logging"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutLoggingOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "loggingOptions": {}
                    }
                }
            }
        },
        {
            "name": "StartDetectorModelAnalysis",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/analysis/detector-models"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartDetectorModelAnalysisResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartDetectorModelAnalysisRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "detectorModelDefinition": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateAlarmModel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "alarmModelName": "route.alarmModelName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/alarm-models/{alarmModelName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAlarmModelResponse"
                    },
                    "inject": [
                        "param.0.alarmModelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAlarmModelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "alarmModelName": {},
                        "alarmModelDescription": {},
                        "roleArn": {},
                        "severity": {},
                        "alarmRule": {},
                        "alarmNotification": {},
                        "alarmEventActions": {},
                        "alarmCapabilities": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDetectorModel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "detectorModelName": "route.detectorModelName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/detector-models/{detectorModelName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDetectorModelResponse"
                    },
                    "inject": [
                        "param.0.detectorModelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDetectorModelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "detectorModelName": {},
                        "detectorModelDefinition": {},
                        "detectorModelDescription": {},
                        "roleArn": {},
                        "evaluationMethod": {}
                    }
                }
            }
        },
        {
            "name": "UpdateInput",
            "config": {
                "http": {
                    "inject": [
                        {
                            "inputName": "route.inputName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/inputs/{inputName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateInputResponse"
                    },
                    "inject": [
                        "param.0.inputName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateInputRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "inputName": {},
                        "inputDescription": {},
                        "inputDefinition": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateAlarmModelRequest": {
            "type": "object",
            "properties": {
                "alarmModelName": {
                    "$ref": "#/$defs/AlarmModelName"
                },
                "alarmModelDescription": {
                    "$ref": "#/$defs/AlarmModelDescription"
                },
                "roleArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "key": {
                    "$ref": "#/$defs/AttributeJsonPath"
                },
                "severity": {
                    "$ref": "#/$defs/Severity"
                },
                "alarmRule": {
                    "$ref": "#/$defs/AlarmRule"
                },
                "alarmNotification": {
                    "$ref": "#/$defs/AlarmNotification"
                },
                "alarmEventActions": {
                    "$ref": "#/$defs/AlarmEventActions"
                },
                "alarmCapabilities": {
                    "$ref": "#/$defs/AlarmCapabilities"
                }
            }
        },
        "AlarmModelName": {
            "type": "string"
        },
        "AlarmModelDescription": {
            "type": "string"
        },
        "AmazonResourceName": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "AttributeJsonPath": {
            "type": "string"
        },
        "Severity": {
            "type": "integer",
            "format": "int32"
        },
        "AlarmRule": {
            "type": "object",
            "properties": {
                "simpleRule": {
                    "$ref": "#/$defs/SimpleRule"
                }
            }
        },
        "SimpleRule": {
            "type": "object",
            "properties": {
                "inputProperty": {
                    "$ref": "#/$defs/InputProperty"
                },
                "comparisonOperator": {
                    "$ref": "#/$defs/ComparisonOperator"
                },
                "threshold": {
                    "$ref": "#/$defs/Threshold"
                }
            }
        },
        "InputProperty": {
            "type": "string"
        },
        "ComparisonOperator": {
            "enum": [
                "GREATER",
                "GREATER_OR_EQUAL",
                "LESS",
                "LESS_OR_EQUAL",
                "EQUAL",
                "NOT_EQUAL"
            ]
        },
        "Threshold": {
            "type": "string"
        },
        "AlarmNotification": {
            "type": "object",
            "properties": {
                "notificationActions": {
                    "$ref": "#/$defs/NotificationActions"
                }
            }
        },
        "NotificationActions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NotificationAction"
            }
        },
        "NotificationAction": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/$defs/NotificationTargetActions"
                },
                "smsConfigurations": {
                    "$ref": "#/$defs/SMSConfigurations"
                },
                "emailConfigurations": {
                    "$ref": "#/$defs/EmailConfigurations"
                }
            }
        },
        "NotificationTargetActions": {
            "type": "object",
            "properties": {
                "lambdaAction": {
                    "$ref": "#/$defs/LambdaAction"
                }
            }
        },
        "LambdaAction": {
            "type": "object",
            "properties": {
                "functionArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "payload": {
                    "$ref": "#/$defs/Payload"
                }
            }
        },
        "Payload": {
            "type": "object",
            "properties": {
                "contentExpression": {
                    "$ref": "#/$defs/ContentExpression"
                },
                "type": {
                    "$ref": "#/$defs/PayloadType"
                }
            }
        },
        "ContentExpression": {
            "type": "string"
        },
        "PayloadType": {
            "enum": [
                "STRING",
                "JSON"
            ]
        },
        "SMSConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SMSConfiguration"
            }
        },
        "SMSConfiguration": {
            "type": "object",
            "properties": {
                "senderId": {
                    "$ref": "#/$defs/SMSSenderId"
                },
                "additionalMessage": {
                    "$ref": "#/$defs/NotificationAdditionalMessage"
                },
                "recipients": {
                    "$ref": "#/$defs/RecipientDetails"
                }
            }
        },
        "SMSSenderId": {
            "type": "string"
        },
        "NotificationAdditionalMessage": {
            "type": "string"
        },
        "RecipientDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecipientDetail"
            }
        },
        "RecipientDetail": {
            "type": "object",
            "properties": {
                "ssoIdentity": {
                    "$ref": "#/$defs/SSOIdentity"
                }
            }
        },
        "SSOIdentity": {
            "type": "object",
            "properties": {
                "identityStoreId": {
                    "$ref": "#/$defs/IdentityStoreId"
                },
                "userId": {
                    "$ref": "#/$defs/SSOReferenceId"
                }
            }
        },
        "IdentityStoreId": {
            "type": "string"
        },
        "SSOReferenceId": {
            "type": "string"
        },
        "EmailConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EmailConfiguration"
            }
        },
        "EmailConfiguration": {
            "type": "object",
            "properties": {
                "from": {
                    "$ref": "#/$defs/FromEmail"
                },
                "content": {
                    "$ref": "#/$defs/EmailContent"
                },
                "recipients": {
                    "$ref": "#/$defs/EmailRecipients"
                }
            }
        },
        "FromEmail": {
            "type": "string"
        },
        "EmailContent": {
            "type": "object",
            "properties": {
                "subject": {
                    "$ref": "#/$defs/EmailSubject"
                },
                "additionalMessage": {
                    "$ref": "#/$defs/NotificationAdditionalMessage"
                }
            }
        },
        "EmailSubject": {
            "type": "string"
        },
        "EmailRecipients": {
            "type": "object",
            "properties": {
                "to": {
                    "$ref": "#/$defs/RecipientDetails"
                }
            }
        },
        "AlarmEventActions": {
            "type": "object",
            "properties": {
                "alarmActions": {
                    "$ref": "#/$defs/AlarmActions"
                }
            }
        },
        "AlarmActions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AlarmAction"
            }
        },
        "AlarmAction": {
            "type": "object",
            "properties": {
                "sns": {
                    "$ref": "#/$defs/SNSTopicPublishAction"
                },
                "iotTopicPublish": {
                    "$ref": "#/$defs/IotTopicPublishAction"
                },
                "lambda": {
                    "$ref": "#/$defs/LambdaAction"
                },
                "iotEvents": {
                    "$ref": "#/$defs/IotEventsAction"
                },
                "sqs": {
                    "$ref": "#/$defs/SqsAction"
                },
                "firehose": {
                    "$ref": "#/$defs/FirehoseAction"
                },
                "dynamoDB": {
                    "$ref": "#/$defs/DynamoDBAction"
                },
                "dynamoDBv2": {
                    "$ref": "#/$defs/DynamoDBv2Action"
                },
                "iotSiteWise": {
                    "$ref": "#/$defs/IotSiteWiseAction"
                }
            }
        },
        "SNSTopicPublishAction": {
            "type": "object",
            "properties": {
                "targetArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "payload": {
                    "$ref": "#/$defs/Payload"
                }
            }
        },
        "IotTopicPublishAction": {
            "type": "object",
            "properties": {
                "mqttTopic": {
                    "$ref": "#/$defs/MQTTTopic"
                },
                "payload": {
                    "$ref": "#/$defs/Payload"
                }
            }
        },
        "MQTTTopic": {
            "type": "string"
        },
        "IotEventsAction": {
            "type": "object",
            "properties": {
                "inputName": {
                    "$ref": "#/$defs/InputName"
                },
                "payload": {
                    "$ref": "#/$defs/Payload"
                }
            }
        },
        "InputName": {
            "type": "string"
        },
        "SqsAction": {
            "type": "object",
            "properties": {
                "queueUrl": {
                    "$ref": "#/$defs/QueueUrl"
                },
                "useBase64": {
                    "$ref": "#/$defs/UseBase64"
                },
                "payload": {
                    "$ref": "#/$defs/Payload"
                }
            }
        },
        "QueueUrl": {
            "type": "string"
        },
        "UseBase64": {
            "type": "boolean"
        },
        "FirehoseAction": {
            "type": "object",
            "properties": {
                "deliveryStreamName": {
                    "$ref": "#/$defs/DeliveryStreamName"
                },
                "separator": {
                    "$ref": "#/$defs/FirehoseSeparator"
                },
                "payload": {
                    "$ref": "#/$defs/Payload"
                }
            }
        },
        "DeliveryStreamName": {
            "type": "string"
        },
        "FirehoseSeparator": {
            "type": "string"
        },
        "DynamoDBAction": {
            "type": "object",
            "properties": {
                "hashKeyType": {
                    "$ref": "#/$defs/DynamoKeyType"
                },
                "hashKeyField": {
                    "$ref": "#/$defs/DynamoKeyField"
                },
                "hashKeyValue": {
                    "$ref": "#/$defs/DynamoKeyValue"
                },
                "rangeKeyType": {
                    "$ref": "#/$defs/DynamoKeyType"
                },
                "rangeKeyField": {
                    "$ref": "#/$defs/DynamoKeyField"
                },
                "rangeKeyValue": {
                    "$ref": "#/$defs/DynamoKeyValue"
                },
                "operation": {
                    "$ref": "#/$defs/DynamoOperation"
                },
                "payloadField": {
                    "$ref": "#/$defs/DynamoKeyField"
                },
                "tableName": {
                    "$ref": "#/$defs/DynamoTableName"
                },
                "payload": {
                    "$ref": "#/$defs/Payload"
                }
            }
        },
        "DynamoKeyType": {
            "type": "string"
        },
        "DynamoKeyField": {
            "type": "string"
        },
        "DynamoKeyValue": {
            "type": "string"
        },
        "DynamoOperation": {
            "type": "string"
        },
        "DynamoTableName": {
            "type": "string"
        },
        "DynamoDBv2Action": {
            "type": "object",
            "properties": {
                "tableName": {
                    "$ref": "#/$defs/DynamoTableName"
                },
                "payload": {
                    "$ref": "#/$defs/Payload"
                }
            }
        },
        "IotSiteWiseAction": {
            "type": "object",
            "properties": {
                "entryId": {
                    "$ref": "#/$defs/AssetPropertyEntryId"
                },
                "assetId": {
                    "$ref": "#/$defs/AssetId"
                },
                "propertyId": {
                    "$ref": "#/$defs/AssetPropertyId"
                },
                "propertyAlias": {
                    "$ref": "#/$defs/AssetPropertyAlias"
                },
                "propertyValue": {
                    "$ref": "#/$defs/AssetPropertyValue"
                }
            }
        },
        "AssetPropertyEntryId": {
            "type": "string"
        },
        "AssetId": {
            "type": "string"
        },
        "AssetPropertyId": {
            "type": "string"
        },
        "AssetPropertyAlias": {
            "type": "string"
        },
        "AssetPropertyValue": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/$defs/AssetPropertyVariant"
                },
                "timestamp": {
                    "$ref": "#/$defs/AssetPropertyTimestamp"
                },
                "quality": {
                    "$ref": "#/$defs/AssetPropertyQuality"
                }
            }
        },
        "AssetPropertyVariant": {
            "type": "object",
            "properties": {
                "stringValue": {
                    "$ref": "#/$defs/AssetPropertyStringValue"
                },
                "integerValue": {
                    "$ref": "#/$defs/AssetPropertyIntegerValue"
                },
                "doubleValue": {
                    "$ref": "#/$defs/AssetPropertyDoubleValue"
                },
                "booleanValue": {
                    "$ref": "#/$defs/AssetPropertyBooleanValue"
                }
            }
        },
        "AssetPropertyStringValue": {
            "type": "string"
        },
        "AssetPropertyIntegerValue": {
            "type": "string"
        },
        "AssetPropertyDoubleValue": {
            "type": "string"
        },
        "AssetPropertyBooleanValue": {
            "type": "string"
        },
        "AssetPropertyTimestamp": {
            "type": "object",
            "properties": {
                "timeInSeconds": {
                    "$ref": "#/$defs/AssetPropertyTimeInSeconds"
                },
                "offsetInNanos": {
                    "$ref": "#/$defs/AssetPropertyOffsetInNanos"
                }
            }
        },
        "AssetPropertyTimeInSeconds": {
            "type": "string"
        },
        "AssetPropertyOffsetInNanos": {
            "type": "string"
        },
        "AssetPropertyQuality": {
            "type": "string"
        },
        "AlarmCapabilities": {
            "type": "object",
            "properties": {
                "initializationConfiguration": {
                    "$ref": "#/$defs/InitializationConfiguration"
                },
                "acknowledgeFlow": {
                    "$ref": "#/$defs/AcknowledgeFlow"
                }
            }
        },
        "InitializationConfiguration": {
            "type": "object",
            "properties": {
                "disabledOnInitialization": {
                    "$ref": "#/$defs/DisabledOnInitialization"
                }
            }
        },
        "DisabledOnInitialization": {
            "type": "boolean"
        },
        "AcknowledgeFlow": {
            "type": "object",
            "properties": {
                "enabled": {
                    "$ref": "#/$defs/AcknowledgeFlowEnabled"
                }
            }
        },
        "AcknowledgeFlowEnabled": {
            "type": "boolean"
        },
        "CreateAlarmModelResponse": {
            "type": "object",
            "properties": {
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "alarmModelArn": {
                    "$ref": "#/$defs/AlarmModelArn"
                },
                "alarmModelVersion": {
                    "$ref": "#/$defs/AlarmModelVersion"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/AlarmModelVersionStatus"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "AlarmModelArn": {
            "type": "string"
        },
        "AlarmModelVersion": {
            "type": "string"
        },
        "AlarmModelVersionStatus": {
            "enum": [
                "ACTIVE",
                "ACTIVATING",
                "INACTIVE",
                "FAILED"
            ]
        },
        "CreateDetectorModelRequest": {
            "type": "object",
            "properties": {
                "detectorModelName": {
                    "$ref": "#/$defs/DetectorModelName"
                },
                "detectorModelDefinition": {
                    "$ref": "#/$defs/DetectorModelDefinition"
                },
                "detectorModelDescription": {
                    "$ref": "#/$defs/DetectorModelDescription"
                },
                "key": {
                    "$ref": "#/$defs/AttributeJsonPath"
                },
                "roleArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "evaluationMethod": {
                    "$ref": "#/$defs/EvaluationMethod"
                }
            }
        },
        "DetectorModelName": {
            "type": "string"
        },
        "DetectorModelDefinition": {
            "type": "object",
            "properties": {
                "states": {
                    "$ref": "#/$defs/States"
                },
                "initialStateName": {
                    "$ref": "#/$defs/StateName"
                }
            }
        },
        "States": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/State"
            }
        },
        "State": {
            "type": "object",
            "properties": {
                "stateName": {
                    "$ref": "#/$defs/StateName"
                },
                "onInput": {
                    "$ref": "#/$defs/OnInputLifecycle"
                },
                "onEnter": {
                    "$ref": "#/$defs/OnEnterLifecycle"
                },
                "onExit": {
                    "$ref": "#/$defs/OnExitLifecycle"
                }
            }
        },
        "StateName": {
            "type": "string"
        },
        "OnInputLifecycle": {
            "type": "object",
            "properties": {
                "events": {
                    "$ref": "#/$defs/Events"
                },
                "transitionEvents": {
                    "$ref": "#/$defs/TransitionEvents"
                }
            }
        },
        "Events": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Event"
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "eventName": {
                    "$ref": "#/$defs/EventName"
                },
                "condition": {
                    "$ref": "#/$defs/Condition"
                },
                "actions": {
                    "$ref": "#/$defs/Actions"
                }
            }
        },
        "EventName": {
            "type": "string"
        },
        "Condition": {
            "type": "string"
        },
        "Actions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Action"
            }
        },
        "Action": {
            "type": "object",
            "properties": {
                "setVariable": {
                    "$ref": "#/$defs/SetVariableAction"
                },
                "sns": {
                    "$ref": "#/$defs/SNSTopicPublishAction"
                },
                "iotTopicPublish": {
                    "$ref": "#/$defs/IotTopicPublishAction"
                },
                "setTimer": {
                    "$ref": "#/$defs/SetTimerAction"
                },
                "clearTimer": {
                    "$ref": "#/$defs/ClearTimerAction"
                },
                "resetTimer": {
                    "$ref": "#/$defs/ResetTimerAction"
                },
                "lambda": {
                    "$ref": "#/$defs/LambdaAction"
                },
                "iotEvents": {
                    "$ref": "#/$defs/IotEventsAction"
                },
                "sqs": {
                    "$ref": "#/$defs/SqsAction"
                },
                "firehose": {
                    "$ref": "#/$defs/FirehoseAction"
                },
                "dynamoDB": {
                    "$ref": "#/$defs/DynamoDBAction"
                },
                "dynamoDBv2": {
                    "$ref": "#/$defs/DynamoDBv2Action"
                },
                "iotSiteWise": {
                    "$ref": "#/$defs/IotSiteWiseAction"
                }
            }
        },
        "SetVariableAction": {
            "type": "object",
            "properties": {
                "variableName": {
                    "$ref": "#/$defs/VariableName"
                },
                "value": {
                    "$ref": "#/$defs/VariableValue"
                }
            }
        },
        "VariableName": {
            "type": "string"
        },
        "VariableValue": {
            "type": "string"
        },
        "SetTimerAction": {
            "type": "object",
            "properties": {
                "timerName": {
                    "$ref": "#/$defs/TimerName"
                },
                "seconds": {
                    "$ref": "#/$defs/Seconds"
                },
                "durationExpression": {
                    "$ref": "#/$defs/VariableValue"
                }
            }
        },
        "TimerName": {
            "type": "string"
        },
        "Seconds": {
            "type": "integer",
            "format": "int32"
        },
        "ClearTimerAction": {
            "type": "object",
            "properties": {
                "timerName": {
                    "$ref": "#/$defs/TimerName"
                }
            }
        },
        "ResetTimerAction": {
            "type": "object",
            "properties": {
                "timerName": {
                    "$ref": "#/$defs/TimerName"
                }
            }
        },
        "TransitionEvents": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitionEvent"
            }
        },
        "TransitionEvent": {
            "type": "object",
            "properties": {
                "eventName": {
                    "$ref": "#/$defs/EventName"
                },
                "condition": {
                    "$ref": "#/$defs/Condition"
                },
                "actions": {
                    "$ref": "#/$defs/Actions"
                },
                "nextState": {
                    "$ref": "#/$defs/StateName"
                }
            }
        },
        "OnEnterLifecycle": {
            "type": "object",
            "properties": {
                "events": {
                    "$ref": "#/$defs/Events"
                }
            }
        },
        "OnExitLifecycle": {
            "type": "object",
            "properties": {
                "events": {
                    "$ref": "#/$defs/Events"
                }
            }
        },
        "DetectorModelDescription": {
            "type": "string"
        },
        "EvaluationMethod": {
            "enum": [
                "BATCH",
                "SERIAL"
            ]
        },
        "CreateDetectorModelResponse": {
            "type": "object",
            "properties": {
                "detectorModelConfiguration": {
                    "$ref": "#/$defs/DetectorModelConfiguration"
                }
            }
        },
        "DetectorModelConfiguration": {
            "type": "object",
            "properties": {
                "detectorModelName": {
                    "$ref": "#/$defs/DetectorModelName"
                },
                "detectorModelVersion": {
                    "$ref": "#/$defs/DetectorModelVersion"
                },
                "detectorModelDescription": {
                    "$ref": "#/$defs/DetectorModelDescription"
                },
                "detectorModelArn": {
                    "$ref": "#/$defs/DetectorModelArn"
                },
                "roleArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/DetectorModelVersionStatus"
                },
                "key": {
                    "$ref": "#/$defs/AttributeJsonPath"
                },
                "evaluationMethod": {
                    "$ref": "#/$defs/EvaluationMethod"
                }
            }
        },
        "DetectorModelVersion": {
            "type": "string"
        },
        "DetectorModelArn": {
            "type": "string"
        },
        "DetectorModelVersionStatus": {
            "enum": [
                "ACTIVE",
                "ACTIVATING",
                "INACTIVE",
                "DEPRECATED",
                "DRAFT",
                "PAUSED",
                "FAILED"
            ]
        },
        "CreateInputRequest": {
            "type": "object",
            "properties": {
                "inputName": {
                    "$ref": "#/$defs/InputName"
                },
                "inputDescription": {
                    "$ref": "#/$defs/InputDescription"
                },
                "inputDefinition": {
                    "$ref": "#/$defs/InputDefinition"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "InputDescription": {
            "type": "string"
        },
        "InputDefinition": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                }
            }
        },
        "Attributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Attribute"
            }
        },
        "Attribute": {
            "type": "object",
            "properties": {
                "jsonPath": {
                    "$ref": "#/$defs/AttributeJsonPath"
                }
            }
        },
        "CreateInputResponse": {
            "type": "object",
            "properties": {
                "inputConfiguration": {
                    "$ref": "#/$defs/InputConfiguration"
                }
            }
        },
        "InputConfiguration": {
            "type": "object",
            "properties": {
                "inputName": {
                    "$ref": "#/$defs/InputName"
                },
                "inputDescription": {
                    "$ref": "#/$defs/InputDescription"
                },
                "inputArn": {
                    "$ref": "#/$defs/InputArn"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/InputStatus"
                }
            }
        },
        "InputArn": {
            "type": "string"
        },
        "InputStatus": {
            "enum": [
                "CREATING",
                "UPDATING",
                "ACTIVE",
                "DELETING"
            ]
        },
        "DeleteAlarmModelRequest": {
            "type": "object",
            "properties": {
                "alarmModelName": {
                    "$ref": "#/$defs/AlarmModelName"
                }
            }
        },
        "DeleteAlarmModelResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDetectorModelRequest": {
            "type": "object",
            "properties": {
                "detectorModelName": {
                    "$ref": "#/$defs/DetectorModelName"
                }
            }
        },
        "DeleteDetectorModelResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteInputRequest": {
            "type": "object",
            "properties": {
                "inputName": {
                    "$ref": "#/$defs/InputName"
                }
            }
        },
        "DeleteInputResponse": {
            "type": "object",
            "properties": {}
        },
        "DescribeAlarmModelRequest": {
            "type": "object",
            "properties": {
                "alarmModelName": {
                    "$ref": "#/$defs/AlarmModelName"
                },
                "alarmModelVersion": {
                    "$ref": "#/$defs/AlarmModelVersion"
                }
            }
        },
        "DescribeAlarmModelResponse": {
            "type": "object",
            "properties": {
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "alarmModelArn": {
                    "$ref": "#/$defs/AlarmModelArn"
                },
                "alarmModelVersion": {
                    "$ref": "#/$defs/AlarmModelVersion"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/AlarmModelVersionStatus"
                },
                "statusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "alarmModelName": {
                    "$ref": "#/$defs/AlarmModelName"
                },
                "alarmModelDescription": {
                    "$ref": "#/$defs/AlarmModelDescription"
                },
                "roleArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "key": {
                    "$ref": "#/$defs/AttributeJsonPath"
                },
                "severity": {
                    "$ref": "#/$defs/Severity"
                },
                "alarmRule": {
                    "$ref": "#/$defs/AlarmRule"
                },
                "alarmNotification": {
                    "$ref": "#/$defs/AlarmNotification"
                },
                "alarmEventActions": {
                    "$ref": "#/$defs/AlarmEventActions"
                },
                "alarmCapabilities": {
                    "$ref": "#/$defs/AlarmCapabilities"
                }
            }
        },
        "StatusMessage": {
            "type": "string"
        },
        "DescribeDetectorModelRequest": {
            "type": "object",
            "properties": {
                "detectorModelName": {
                    "$ref": "#/$defs/DetectorModelName"
                },
                "detectorModelVersion": {
                    "$ref": "#/$defs/DetectorModelVersion"
                }
            }
        },
        "DescribeDetectorModelResponse": {
            "type": "object",
            "properties": {
                "detectorModel": {
                    "$ref": "#/$defs/DetectorModel"
                }
            }
        },
        "DetectorModel": {
            "type": "object",
            "properties": {
                "detectorModelDefinition": {
                    "$ref": "#/$defs/DetectorModelDefinition"
                },
                "detectorModelConfiguration": {
                    "$ref": "#/$defs/DetectorModelConfiguration"
                }
            }
        },
        "DescribeDetectorModelAnalysisRequest": {
            "type": "object",
            "properties": {
                "analysisId": {
                    "$ref": "#/$defs/AnalysisId"
                }
            }
        },
        "AnalysisId": {
            "type": "string"
        },
        "DescribeDetectorModelAnalysisResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/AnalysisStatus"
                }
            }
        },
        "AnalysisStatus": {
            "enum": [
                "RUNNING",
                "COMPLETE",
                "FAILED"
            ]
        },
        "DescribeInputRequest": {
            "type": "object",
            "properties": {
                "inputName": {
                    "$ref": "#/$defs/InputName"
                }
            }
        },
        "DescribeInputResponse": {
            "type": "object",
            "properties": {
                "input": {
                    "$ref": "#/$defs/Input"
                }
            }
        },
        "Input": {
            "type": "object",
            "properties": {
                "inputConfiguration": {
                    "$ref": "#/$defs/InputConfiguration"
                },
                "inputDefinition": {
                    "$ref": "#/$defs/InputDefinition"
                }
            }
        },
        "DescribeLoggingOptionsRequest": {
            "type": "object",
            "properties": {}
        },
        "DescribeLoggingOptionsResponse": {
            "type": "object",
            "properties": {
                "loggingOptions": {
                    "$ref": "#/$defs/LoggingOptions"
                }
            }
        },
        "LoggingOptions": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "level": {
                    "$ref": "#/$defs/LoggingLevel"
                },
                "enabled": {
                    "$ref": "#/$defs/LoggingEnabled"
                },
                "detectorDebugOptions": {
                    "$ref": "#/$defs/DetectorDebugOptions"
                }
            }
        },
        "LoggingLevel": {
            "enum": [
                "ERROR",
                "INFO",
                "DEBUG"
            ]
        },
        "LoggingEnabled": {
            "type": "boolean"
        },
        "DetectorDebugOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectorDebugOption"
            }
        },
        "DetectorDebugOption": {
            "type": "object",
            "properties": {
                "detectorModelName": {
                    "$ref": "#/$defs/DetectorModelName"
                },
                "keyValue": {
                    "$ref": "#/$defs/KeyValue"
                }
            }
        },
        "KeyValue": {
            "type": "string"
        },
        "GetDetectorModelAnalysisResultsRequest": {
            "type": "object",
            "properties": {
                "analysisId": {
                    "$ref": "#/$defs/AnalysisId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxAnalysisResults"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "MaxAnalysisResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetDetectorModelAnalysisResultsResponse": {
            "type": "object",
            "properties": {
                "analysisResults": {
                    "$ref": "#/$defs/AnalysisResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AnalysisResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnalysisResult"
            }
        },
        "AnalysisResult": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/AnalysisType"
                },
                "level": {
                    "$ref": "#/$defs/AnalysisResultLevel"
                },
                "message": {
                    "$ref": "#/$defs/AnalysisMessage"
                },
                "locations": {
                    "$ref": "#/$defs/AnalysisResultLocations"
                }
            }
        },
        "AnalysisType": {
            "type": "string"
        },
        "AnalysisResultLevel": {
            "enum": [
                "INFO",
                "WARNING",
                "ERROR"
            ]
        },
        "AnalysisMessage": {
            "type": "string"
        },
        "AnalysisResultLocations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnalysisResultLocation"
            }
        },
        "AnalysisResultLocation": {
            "type": "object",
            "properties": {
                "path": {
                    "$ref": "#/$defs/AnalysisResultLocationPath"
                }
            }
        },
        "AnalysisResultLocationPath": {
            "type": "string"
        },
        "ListAlarmModelsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListAlarmModelsResponse": {
            "type": "object",
            "properties": {
                "alarmModelSummaries": {
                    "$ref": "#/$defs/AlarmModelSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AlarmModelSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AlarmModelSummary"
            }
        },
        "AlarmModelSummary": {
            "type": "object",
            "properties": {
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "alarmModelDescription": {
                    "$ref": "#/$defs/AlarmModelDescription"
                },
                "alarmModelName": {
                    "$ref": "#/$defs/AlarmModelName"
                }
            }
        },
        "ListAlarmModelVersionsRequest": {
            "type": "object",
            "properties": {
                "alarmModelName": {
                    "$ref": "#/$defs/AlarmModelName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListAlarmModelVersionsResponse": {
            "type": "object",
            "properties": {
                "alarmModelVersionSummaries": {
                    "$ref": "#/$defs/AlarmModelVersionSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AlarmModelVersionSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AlarmModelVersionSummary"
            }
        },
        "AlarmModelVersionSummary": {
            "type": "object",
            "properties": {
                "alarmModelName": {
                    "$ref": "#/$defs/AlarmModelName"
                },
                "alarmModelArn": {
                    "$ref": "#/$defs/AlarmModelArn"
                },
                "alarmModelVersion": {
                    "$ref": "#/$defs/AlarmModelVersion"
                },
                "roleArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/AlarmModelVersionStatus"
                },
                "statusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                }
            }
        },
        "ListDetectorModelsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListDetectorModelsResponse": {
            "type": "object",
            "properties": {
                "detectorModelSummaries": {
                    "$ref": "#/$defs/DetectorModelSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DetectorModelSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectorModelSummary"
            }
        },
        "DetectorModelSummary": {
            "type": "object",
            "properties": {
                "detectorModelName": {
                    "$ref": "#/$defs/DetectorModelName"
                },
                "detectorModelDescription": {
                    "$ref": "#/$defs/DetectorModelDescription"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListDetectorModelVersionsRequest": {
            "type": "object",
            "properties": {
                "detectorModelName": {
                    "$ref": "#/$defs/DetectorModelName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListDetectorModelVersionsResponse": {
            "type": "object",
            "properties": {
                "detectorModelVersionSummaries": {
                    "$ref": "#/$defs/DetectorModelVersionSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DetectorModelVersionSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectorModelVersionSummary"
            }
        },
        "DetectorModelVersionSummary": {
            "type": "object",
            "properties": {
                "detectorModelName": {
                    "$ref": "#/$defs/DetectorModelName"
                },
                "detectorModelVersion": {
                    "$ref": "#/$defs/DetectorModelVersion"
                },
                "detectorModelArn": {
                    "$ref": "#/$defs/DetectorModelArn"
                },
                "roleArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/DetectorModelVersionStatus"
                },
                "evaluationMethod": {
                    "$ref": "#/$defs/EvaluationMethod"
                }
            }
        },
        "ListInputRoutingsRequest": {
            "type": "object",
            "properties": {
                "inputIdentifier": {
                    "$ref": "#/$defs/InputIdentifier"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "InputIdentifier": {
            "type": "object",
            "properties": {
                "iotEventsInputIdentifier": {
                    "$ref": "#/$defs/IotEventsInputIdentifier"
                },
                "iotSiteWiseInputIdentifier": {
                    "$ref": "#/$defs/IotSiteWiseInputIdentifier"
                }
            }
        },
        "IotEventsInputIdentifier": {
            "type": "object",
            "properties": {
                "inputName": {
                    "$ref": "#/$defs/InputName"
                }
            }
        },
        "IotSiteWiseInputIdentifier": {
            "type": "object",
            "properties": {
                "iotSiteWiseAssetModelPropertyIdentifier": {
                    "$ref": "#/$defs/IotSiteWiseAssetModelPropertyIdentifier"
                }
            }
        },
        "IotSiteWiseAssetModelPropertyIdentifier": {
            "type": "object",
            "properties": {
                "assetModelId": {
                    "$ref": "#/$defs/AssetModelId"
                },
                "propertyId": {
                    "$ref": "#/$defs/AssetPropertyId"
                }
            }
        },
        "AssetModelId": {
            "type": "string"
        },
        "ListInputRoutingsResponse": {
            "type": "object",
            "properties": {
                "routedResources": {
                    "$ref": "#/$defs/RoutedResources"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RoutedResources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RoutedResource"
            }
        },
        "RoutedResource": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "ResourceName": {
            "type": "string"
        },
        "ListInputsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListInputsResponse": {
            "type": "object",
            "properties": {
                "inputSummaries": {
                    "$ref": "#/$defs/InputSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "InputSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputSummary"
            }
        },
        "InputSummary": {
            "type": "object",
            "properties": {
                "inputName": {
                    "$ref": "#/$defs/InputName"
                },
                "inputDescription": {
                    "$ref": "#/$defs/InputDescription"
                },
                "inputArn": {
                    "$ref": "#/$defs/InputArn"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/InputStatus"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "PutLoggingOptionsRequest": {
            "type": "object",
            "properties": {
                "loggingOptions": {
                    "$ref": "#/$defs/LoggingOptions"
                }
            }
        },
        "StartDetectorModelAnalysisRequest": {
            "type": "object",
            "properties": {
                "detectorModelDefinition": {
                    "$ref": "#/$defs/DetectorModelDefinition"
                }
            }
        },
        "StartDetectorModelAnalysisResponse": {
            "type": "object",
            "properties": {
                "analysisId": {
                    "$ref": "#/$defs/AnalysisId"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "TagKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateAlarmModelRequest": {
            "type": "object",
            "properties": {
                "alarmModelName": {
                    "$ref": "#/$defs/AlarmModelName"
                },
                "alarmModelDescription": {
                    "$ref": "#/$defs/AlarmModelDescription"
                },
                "roleArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "severity": {
                    "$ref": "#/$defs/Severity"
                },
                "alarmRule": {
                    "$ref": "#/$defs/AlarmRule"
                },
                "alarmNotification": {
                    "$ref": "#/$defs/AlarmNotification"
                },
                "alarmEventActions": {
                    "$ref": "#/$defs/AlarmEventActions"
                },
                "alarmCapabilities": {
                    "$ref": "#/$defs/AlarmCapabilities"
                }
            }
        },
        "UpdateAlarmModelResponse": {
            "type": "object",
            "properties": {
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "alarmModelArn": {
                    "$ref": "#/$defs/AlarmModelArn"
                },
                "alarmModelVersion": {
                    "$ref": "#/$defs/AlarmModelVersion"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/AlarmModelVersionStatus"
                }
            }
        },
        "UpdateDetectorModelRequest": {
            "type": "object",
            "properties": {
                "detectorModelName": {
                    "$ref": "#/$defs/DetectorModelName"
                },
                "detectorModelDefinition": {
                    "$ref": "#/$defs/DetectorModelDefinition"
                },
                "detectorModelDescription": {
                    "$ref": "#/$defs/DetectorModelDescription"
                },
                "roleArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "evaluationMethod": {
                    "$ref": "#/$defs/EvaluationMethod"
                }
            }
        },
        "UpdateDetectorModelResponse": {
            "type": "object",
            "properties": {
                "detectorModelConfiguration": {
                    "$ref": "#/$defs/DetectorModelConfiguration"
                }
            }
        },
        "UpdateInputRequest": {
            "type": "object",
            "properties": {
                "inputName": {
                    "$ref": "#/$defs/InputName"
                },
                "inputDescription": {
                    "$ref": "#/$defs/InputDescription"
                },
                "inputDefinition": {
                    "$ref": "#/$defs/InputDefinition"
                }
            }
        },
        "UpdateInputResponse": {
            "type": "object",
            "properties": {
                "inputConfiguration": {
                    "$ref": "#/$defs/InputConfiguration"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iotevents-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iotevents-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iotevents.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://iotevents.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}