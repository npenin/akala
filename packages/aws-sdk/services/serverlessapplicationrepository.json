{
    "name": "serverlessrepo",
    "commands": [
        {
            "name": "CreateApplication",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/applications"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Author": {},
                        "Description": {},
                        "HomePageUrl": {},
                        "Labels": {},
                        "LicenseBody": {},
                        "LicenseUrl": {},
                        "Name": {},
                        "ReadmeBody": {},
                        "ReadmeUrl": {},
                        "SemanticVersion": {},
                        "SourceCodeArchiveUrl": {},
                        "SourceCodeUrl": {},
                        "SpdxLicenseId": {},
                        "TemplateBody": {},
                        "TemplateUrl": {}
                    }
                }
            }
        },
        {
            "name": "CreateApplicationVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationId": "route.ApplicationId",
                            "SemanticVersion": "route.SemanticVersion",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/applications/{ApplicationId}/versions/{SemanticVersion}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateApplicationVersionResponse"
                    },
                    "inject": [
                        "param.0.ApplicationId",
                        "param.0.SemanticVersion",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateApplicationVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationId": {},
                        "SemanticVersion": {},
                        "SourceCodeArchiveUrl": {},
                        "SourceCodeUrl": {},
                        "TemplateBody": {},
                        "TemplateUrl": {}
                    }
                }
            }
        },
        {
            "name": "CreateCloudFormationChangeSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationId": "route.ApplicationId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/applications/{ApplicationId}/changesets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCloudFormationChangeSetResponse"
                    },
                    "inject": [
                        "param.0.ApplicationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCloudFormationChangeSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationId": {},
                        "Capabilities": {},
                        "ChangeSetName": {},
                        "ClientToken": {},
                        "Description": {},
                        "NotificationArns": {},
                        "ParameterOverrides": {},
                        "ResourceTypes": {},
                        "RollbackConfiguration": {},
                        "SemanticVersion": {},
                        "StackName": {},
                        "Tags": {},
                        "TemplateId": {}
                    }
                }
            }
        },
        {
            "name": "CreateCloudFormationTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationId": "route.ApplicationId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/applications/{ApplicationId}/templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCloudFormationTemplateResponse"
                    },
                    "inject": [
                        "param.0.ApplicationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCloudFormationTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationId": {},
                        "SemanticVersion": {}
                    }
                }
            }
        },
        {
            "name": "DeleteApplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationId": "route.ApplicationId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/applications/{ApplicationId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ApplicationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationId": {}
                    }
                }
            }
        },
        {
            "name": "GetApplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationId": "route.ApplicationId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/applications/{ApplicationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetApplicationResponse"
                    },
                    "inject": [
                        "param.0.ApplicationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationId": {},
                        "SemanticVersion": {}
                    }
                }
            }
        },
        {
            "name": "GetApplicationPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationId": "route.ApplicationId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/applications/{ApplicationId}/policy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetApplicationPolicyResponse"
                    },
                    "inject": [
                        "param.0.ApplicationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetApplicationPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationId": {}
                    }
                }
            }
        },
        {
            "name": "GetCloudFormationTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationId": "route.ApplicationId",
                            "TemplateId": "route.TemplateId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/applications/{ApplicationId}/templates/{TemplateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCloudFormationTemplateResponse"
                    },
                    "inject": [
                        "param.0.ApplicationId",
                        "param.0.TemplateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCloudFormationTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationId": {},
                        "TemplateId": {}
                    }
                }
            }
        },
        {
            "name": "ListApplicationDependencies",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationId": "route.ApplicationId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/applications/{ApplicationId}/dependencies"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApplicationDependenciesResponse"
                    },
                    "inject": [
                        "param.0.ApplicationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListApplicationDependenciesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationId": {},
                        "MaxItems": {},
                        "NextToken": {},
                        "SemanticVersion": {}
                    }
                }
            }
        },
        {
            "name": "ListApplications",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/applications"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApplicationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListApplicationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxItems": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListApplicationVersions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationId": "route.ApplicationId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/applications/{ApplicationId}/versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApplicationVersionsResponse"
                    },
                    "inject": [
                        "param.0.ApplicationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListApplicationVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationId": {},
                        "MaxItems": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "PutApplicationPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationId": "route.ApplicationId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/applications/{ApplicationId}/policy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutApplicationPolicyResponse"
                    },
                    "inject": [
                        "param.0.ApplicationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutApplicationPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationId": {},
                        "Statements": {}
                    }
                }
            }
        },
        {
            "name": "UnshareApplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationId": "route.ApplicationId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/applications/{ApplicationId}/unshare"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ApplicationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UnshareApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationId": {},
                        "OrganizationId": {}
                    }
                }
            }
        },
        {
            "name": "UpdateApplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationId": "route.ApplicationId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/applications/{ApplicationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateApplicationResponse"
                    },
                    "inject": [
                        "param.0.ApplicationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationId": {},
                        "Author": {},
                        "Description": {},
                        "HomePageUrl": {},
                        "Labels": {},
                        "ReadmeBody": {},
                        "ReadmeUrl": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateApplicationRequest": {
            "type": "object",
            "properties": {
                "Author": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "HomePageUrl": {
                    "$ref": "#/$defs/__string"
                },
                "Labels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "LicenseBody": {
                    "$ref": "#/$defs/__string"
                },
                "LicenseUrl": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "ReadmeBody": {
                    "$ref": "#/$defs/__string"
                },
                "ReadmeUrl": {
                    "$ref": "#/$defs/__string"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                },
                "SourceCodeArchiveUrl": {
                    "$ref": "#/$defs/__string"
                },
                "SourceCodeUrl": {
                    "$ref": "#/$defs/__string"
                },
                "SpdxLicenseId": {
                    "$ref": "#/$defs/__string"
                },
                "TemplateBody": {
                    "$ref": "#/$defs/__string"
                },
                "TemplateUrl": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__string": {
            "type": "string"
        },
        "__listOf__string": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__string"
            }
        },
        "CreateApplicationResponse": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "Author": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "HomePageUrl": {
                    "$ref": "#/$defs/__string"
                },
                "IsVerifiedAuthor": {
                    "$ref": "#/$defs/__boolean"
                },
                "Labels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "LicenseUrl": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "ReadmeUrl": {
                    "$ref": "#/$defs/__string"
                },
                "SpdxLicenseId": {
                    "$ref": "#/$defs/__string"
                },
                "VerifiedAuthorUrl": {
                    "$ref": "#/$defs/__string"
                },
                "Version": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "__boolean": {
            "type": "boolean"
        },
        "Version": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__string"
                },
                "ParameterDefinitions": {
                    "$ref": "#/$defs/__listOfParameterDefinition"
                },
                "RequiredCapabilities": {
                    "$ref": "#/$defs/__listOfCapability"
                },
                "ResourcesSupported": {
                    "$ref": "#/$defs/__boolean"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                },
                "SourceCodeArchiveUrl": {
                    "$ref": "#/$defs/__string"
                },
                "SourceCodeUrl": {
                    "$ref": "#/$defs/__string"
                },
                "TemplateUrl": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfParameterDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ParameterDefinition"
            }
        },
        "ParameterDefinition": {
            "type": "object",
            "properties": {
                "AllowedPattern": {
                    "$ref": "#/$defs/__string"
                },
                "AllowedValues": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ConstraintDescription": {
                    "$ref": "#/$defs/__string"
                },
                "DefaultValue": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "MaxLength": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxValue": {
                    "$ref": "#/$defs/__integer"
                },
                "MinLength": {
                    "$ref": "#/$defs/__integer"
                },
                "MinValue": {
                    "$ref": "#/$defs/__integer"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NoEcho": {
                    "$ref": "#/$defs/__boolean"
                },
                "ReferencedByResources": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Type": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__integer": {
            "type": "integer",
            "format": "int32"
        },
        "__listOfCapability": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Capability"
            }
        },
        "Capability": {
            "enum": [
                "CAPABILITY_IAM",
                "CAPABILITY_NAMED_IAM",
                "CAPABILITY_AUTO_EXPAND",
                "CAPABILITY_RESOURCE_POLICY"
            ]
        },
        "CreateApplicationVersionRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                },
                "SourceCodeArchiveUrl": {
                    "$ref": "#/$defs/__string"
                },
                "SourceCodeUrl": {
                    "$ref": "#/$defs/__string"
                },
                "TemplateBody": {
                    "$ref": "#/$defs/__string"
                },
                "TemplateUrl": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateApplicationVersionResponse": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__string"
                },
                "ParameterDefinitions": {
                    "$ref": "#/$defs/__listOfParameterDefinition"
                },
                "RequiredCapabilities": {
                    "$ref": "#/$defs/__listOfCapability"
                },
                "ResourcesSupported": {
                    "$ref": "#/$defs/__boolean"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                },
                "SourceCodeArchiveUrl": {
                    "$ref": "#/$defs/__string"
                },
                "SourceCodeUrl": {
                    "$ref": "#/$defs/__string"
                },
                "TemplateUrl": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateCloudFormationChangeSetRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "Capabilities": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ChangeSetName": {
                    "$ref": "#/$defs/__string"
                },
                "ClientToken": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "NotificationArns": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ParameterOverrides": {
                    "$ref": "#/$defs/__listOfParameterValue"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "RollbackConfiguration": {
                    "$ref": "#/$defs/RollbackConfiguration"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                },
                "StackName": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/__listOfTag"
                },
                "TemplateId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfParameterValue": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ParameterValue"
            }
        },
        "ParameterValue": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Value": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RollbackConfiguration": {
            "type": "object",
            "properties": {
                "MonitoringTimeInMinutes": {
                    "$ref": "#/$defs/__integer"
                },
                "RollbackTriggers": {
                    "$ref": "#/$defs/__listOfRollbackTrigger"
                }
            }
        },
        "__listOfRollbackTrigger": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RollbackTrigger"
            }
        },
        "RollbackTrigger": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Type": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfTag": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/__string"
                },
                "Value": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateCloudFormationChangeSetResponse": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "ChangeSetId": {
                    "$ref": "#/$defs/__string"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                },
                "StackId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateCloudFormationTemplateRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateCloudFormationTemplateResponse": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__string"
                },
                "ExpirationTime": {
                    "$ref": "#/$defs/__string"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "TemplateId": {
                    "$ref": "#/$defs/__string"
                },
                "TemplateUrl": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "Status": {
            "enum": [
                "PREPARING",
                "ACTIVE",
                "EXPIRED"
            ]
        },
        "DeleteApplicationRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetApplicationRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetApplicationResponse": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "Author": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "HomePageUrl": {
                    "$ref": "#/$defs/__string"
                },
                "IsVerifiedAuthor": {
                    "$ref": "#/$defs/__boolean"
                },
                "Labels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "LicenseUrl": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "ReadmeUrl": {
                    "$ref": "#/$defs/__string"
                },
                "SpdxLicenseId": {
                    "$ref": "#/$defs/__string"
                },
                "VerifiedAuthorUrl": {
                    "$ref": "#/$defs/__string"
                },
                "Version": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "GetApplicationPolicyRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetApplicationPolicyResponse": {
            "type": "object",
            "properties": {
                "Statements": {
                    "$ref": "#/$defs/__listOfApplicationPolicyStatement"
                }
            }
        },
        "__listOfApplicationPolicyStatement": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationPolicyStatement"
            }
        },
        "ApplicationPolicyStatement": {
            "type": "object",
            "properties": {
                "Actions": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "PrincipalOrgIDs": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Principals": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "StatementId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetCloudFormationTemplateRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "TemplateId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetCloudFormationTemplateResponse": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__string"
                },
                "ExpirationTime": {
                    "$ref": "#/$defs/__string"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "TemplateId": {
                    "$ref": "#/$defs/__string"
                },
                "TemplateUrl": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListApplicationDependenciesRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/MaxItems"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MaxItems": {
            "type": "integer",
            "format": "int32"
        },
        "ListApplicationDependenciesResponse": {
            "type": "object",
            "properties": {
                "Dependencies": {
                    "$ref": "#/$defs/__listOfApplicationDependencySummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfApplicationDependencySummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationDependencySummary"
            }
        },
        "ApplicationDependencySummary": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListApplicationsRequest": {
            "type": "object",
            "properties": {
                "MaxItems": {
                    "$ref": "#/$defs/MaxItems"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListApplicationsResponse": {
            "type": "object",
            "properties": {
                "Applications": {
                    "$ref": "#/$defs/__listOfApplicationSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfApplicationSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationSummary"
            }
        },
        "ApplicationSummary": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "Author": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "HomePageUrl": {
                    "$ref": "#/$defs/__string"
                },
                "Labels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "SpdxLicenseId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListApplicationVersionsRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/MaxItems"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListApplicationVersionsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Versions": {
                    "$ref": "#/$defs/__listOfVersionSummary"
                }
            }
        },
        "__listOfVersionSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VersionSummary"
            }
        },
        "VersionSummary": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__string"
                },
                "SemanticVersion": {
                    "$ref": "#/$defs/__string"
                },
                "SourceCodeUrl": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "PutApplicationPolicyRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "Statements": {
                    "$ref": "#/$defs/__listOfApplicationPolicyStatement"
                }
            }
        },
        "PutApplicationPolicyResponse": {
            "type": "object",
            "properties": {
                "Statements": {
                    "$ref": "#/$defs/__listOfApplicationPolicyStatement"
                }
            }
        },
        "UnshareApplicationRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateApplicationRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "Author": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "HomePageUrl": {
                    "$ref": "#/$defs/__string"
                },
                "Labels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ReadmeBody": {
                    "$ref": "#/$defs/__string"
                },
                "ReadmeUrl": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateApplicationResponse": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/__string"
                },
                "Author": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "HomePageUrl": {
                    "$ref": "#/$defs/__string"
                },
                "IsVerifiedAuthor": {
                    "$ref": "#/$defs/__boolean"
                },
                "Labels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "LicenseUrl": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "ReadmeUrl": {
                    "$ref": "#/$defs/__string"
                },
                "SpdxLicenseId": {
                    "$ref": "#/$defs/__string"
                },
                "VerifiedAuthorUrl": {
                    "$ref": "#/$defs/__string"
                },
                "Version": {
                    "$ref": "#/$defs/Version"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://serverlessrepo-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://serverlessrepo.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://serverlessrepo-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://serverlessrepo.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://serverlessrepo.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}