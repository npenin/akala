{
    "name": "outposts",
    "commands": [
        {
            "name": "CancelCapacityTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OutpostIdentifier": "route.OutpostIdentifier",
                            "CapacityTaskId": "route.CapacityTaskId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/outposts/{OutpostIdentifier}/capacity/{CapacityTaskId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelCapacityTaskOutput"
                    },
                    "inject": [
                        "param.0.OutpostIdentifier",
                        "param.0.CapacityTaskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelCapacityTaskInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CancelOrder",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OrderId": "route.OrderId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/orders/{OrderId}/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelOrderOutput"
                    },
                    "inject": [
                        "param.0.OrderId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelOrderInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateOrder",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/orders"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateOrderOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateOrderInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateOutpost",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/outposts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateOutpostOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateOutpostInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateSite",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/sites"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSiteOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSiteInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteOutpost",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OutpostId": "route.OutpostId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/outposts/{OutpostId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteOutpostOutput"
                    },
                    "inject": [
                        "param.0.OutpostId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteOutpostInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSite",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SiteId": "route.SiteId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/sites/{SiteId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSiteOutput"
                    },
                    "inject": [
                        "param.0.SiteId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSiteInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetCapacityTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OutpostIdentifier": "route.OutpostIdentifier",
                            "CapacityTaskId": "route.CapacityTaskId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/outposts/{OutpostIdentifier}/capacity/{CapacityTaskId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCapacityTaskOutput"
                    },
                    "inject": [
                        "param.0.OutpostIdentifier",
                        "param.0.CapacityTaskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCapacityTaskInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetCatalogItem",
            "config": {
                "http": {
                    "inject": [
                        {
                            "CatalogItemId": "route.CatalogItemId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/catalog/item/{CatalogItemId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCatalogItemOutput"
                    },
                    "inject": [
                        "param.0.CatalogItemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCatalogItemInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetConnection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConnectionId": "route.ConnectionId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/connections/{ConnectionId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConnectionResponse"
                    },
                    "inject": [
                        "param.0.ConnectionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConnectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetOrder",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OrderId": "route.OrderId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/orders/{OrderId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOrderOutput"
                    },
                    "inject": [
                        "param.0.OrderId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOrderInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetOutpost",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OutpostId": "route.OutpostId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/outposts/{OutpostId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOutpostOutput"
                    },
                    "inject": [
                        "param.0.OutpostId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOutpostInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetOutpostInstanceTypes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OutpostId": "route.OutpostId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/outposts/{OutpostId}/instanceTypes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOutpostInstanceTypesOutput"
                    },
                    "inject": [
                        "param.0.OutpostId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOutpostInstanceTypesInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetOutpostSupportedInstanceTypes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OutpostIdentifier": "route.OutpostIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/outposts/{OutpostIdentifier}/supportedInstanceTypes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOutpostSupportedInstanceTypesOutput"
                    },
                    "inject": [
                        "param.0.OutpostIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOutpostSupportedInstanceTypesInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetSite",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SiteId": "route.SiteId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/sites/{SiteId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSiteOutput"
                    },
                    "inject": [
                        "param.0.SiteId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSiteInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetSiteAddress",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SiteId": "route.SiteId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/sites/{SiteId}/address"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSiteAddressOutput"
                    },
                    "inject": [
                        "param.0.SiteId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSiteAddressInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListAssets",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OutpostIdentifier": "route.OutpostIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/outposts/{OutpostIdentifier}/assets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAssetsOutput"
                    },
                    "inject": [
                        "param.0.OutpostIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAssetsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCapacityTasks",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/capacity/tasks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCapacityTasksOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCapacityTasksInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCatalogItems",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/catalog/items"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCatalogItemsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCatalogItemsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListOrders",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/list-orders"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOrdersOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOrdersInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListOutposts",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/outposts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOutpostsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOutpostsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListSites",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/sites"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSitesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSitesInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartCapacityTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OutpostIdentifier": "route.OutpostIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/outposts/{OutpostIdentifier}/capacity"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartCapacityTaskOutput"
                    },
                    "inject": [
                        "param.0.OutpostIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartCapacityTaskInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartConnection",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/connections"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartConnectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateOutpost",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OutpostId": "route.OutpostId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/outposts/{OutpostId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateOutpostOutput"
                    },
                    "inject": [
                        "param.0.OutpostId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateOutpostInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSite",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SiteId": "route.SiteId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/sites/{SiteId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSiteOutput"
                    },
                    "inject": [
                        "param.0.SiteId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSiteInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSiteAddress",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SiteId": "route.SiteId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/sites/{SiteId}/address"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSiteAddressOutput"
                    },
                    "inject": [
                        "param.0.SiteId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSiteAddressInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSiteRackPhysicalProperties",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SiteId": "route.SiteId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/sites/{SiteId}/rackPhysicalProperties"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSiteRackPhysicalPropertiesOutput"
                    },
                    "inject": [
                        "param.0.SiteId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSiteRackPhysicalPropertiesInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CancelCapacityTaskOutput": {
            "type": "object",
            "properties": {}
        },
        "CancelCapacityTaskInput": {
            "type": "object",
            "properties": {
                "CapacityTaskId": {
                    "$ref": "#/$defs/CapacityTaskId"
                },
                "OutpostIdentifier": {
                    "$ref": "#/$defs/OutpostIdentifier"
                }
            }
        },
        "CapacityTaskId": {
            "type": "string"
        },
        "OutpostIdentifier": {
            "type": "string"
        },
        "CancelOrderOutput": {
            "type": "object",
            "properties": {}
        },
        "CancelOrderInput": {
            "type": "object",
            "properties": {
                "OrderId": {
                    "$ref": "#/$defs/OrderId"
                }
            }
        },
        "OrderId": {
            "type": "string"
        },
        "CreateOrderOutput": {
            "type": "object",
            "properties": {
                "Order": {
                    "$ref": "#/$defs/Order"
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "OutpostId": {
                    "$ref": "#/$defs/OutpostIdOnly"
                },
                "OrderId": {
                    "$ref": "#/$defs/OrderId"
                },
                "Status": {
                    "$ref": "#/$defs/OrderStatus"
                },
                "LineItems": {
                    "$ref": "#/$defs/LineItemListDefinition"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/PaymentOption"
                },
                "OrderSubmissionDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                },
                "OrderFulfilledDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                },
                "PaymentTerm": {
                    "$ref": "#/$defs/PaymentTerm"
                },
                "OrderType": {
                    "$ref": "#/$defs/OrderType"
                }
            }
        },
        "OutpostIdOnly": {
            "type": "string"
        },
        "OrderStatus": {
            "enum": [
                "RECEIVED",
                "PENDING",
                "PROCESSING",
                "INSTALLING",
                "FULFILLED",
                "CANCELLED",
                "PREPARING",
                "IN_PROGRESS",
                "DELIVERED",
                "COMPLETED",
                "ERROR"
            ]
        },
        "LineItemListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LineItem"
            }
        },
        "LineItem": {
            "type": "object",
            "properties": {
                "CatalogItemId": {
                    "$ref": "#/$defs/SkuCode"
                },
                "LineItemId": {
                    "$ref": "#/$defs/LineItemId"
                },
                "Quantity": {
                    "$ref": "#/$defs/LineItemQuantity"
                },
                "Status": {
                    "$ref": "#/$defs/LineItemStatus"
                },
                "ShipmentInformation": {
                    "$ref": "#/$defs/ShipmentInformation"
                },
                "AssetInformationList": {
                    "$ref": "#/$defs/LineItemAssetInformationList"
                },
                "PreviousLineItemId": {
                    "$ref": "#/$defs/LineItemId"
                },
                "PreviousOrderId": {
                    "$ref": "#/$defs/OrderId"
                }
            }
        },
        "SkuCode": {
            "type": "string"
        },
        "LineItemId": {
            "type": "string"
        },
        "LineItemQuantity": {
            "type": "integer",
            "format": "int32"
        },
        "LineItemStatus": {
            "enum": [
                "PREPARING",
                "BUILDING",
                "SHIPPED",
                "DELIVERED",
                "INSTALLING",
                "INSTALLED",
                "ERROR",
                "CANCELLED",
                "REPLACED"
            ]
        },
        "ShipmentInformation": {
            "type": "object",
            "properties": {
                "ShipmentTrackingNumber": {
                    "$ref": "#/$defs/TrackingId"
                },
                "ShipmentCarrier": {
                    "$ref": "#/$defs/ShipmentCarrier"
                }
            }
        },
        "TrackingId": {
            "type": "string"
        },
        "ShipmentCarrier": {
            "enum": [
                "DHL",
                "DBS",
                "FEDEX",
                "UPS",
                "EXPEDITORS"
            ]
        },
        "LineItemAssetInformationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LineItemAssetInformation"
            }
        },
        "LineItemAssetInformation": {
            "type": "object",
            "properties": {
                "AssetId": {
                    "$ref": "#/$defs/AssetId"
                },
                "MacAddressList": {
                    "$ref": "#/$defs/MacAddressList"
                }
            }
        },
        "AssetId": {
            "type": "string"
        },
        "MacAddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MacAddress"
            }
        },
        "MacAddress": {
            "type": "string"
        },
        "PaymentOption": {
            "enum": [
                "ALL_UPFRONT",
                "NO_UPFRONT",
                "PARTIAL_UPFRONT"
            ]
        },
        "ISO8601Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "PaymentTerm": {
            "enum": [
                "THREE_YEARS",
                "ONE_YEAR"
            ]
        },
        "OrderType": {
            "enum": [
                "OUTPOST",
                "REPLACEMENT"
            ]
        },
        "CreateOrderInput": {
            "type": "object",
            "properties": {
                "OutpostIdentifier": {
                    "$ref": "#/$defs/OutpostIdentifier"
                },
                "LineItems": {
                    "$ref": "#/$defs/LineItemRequestListDefinition"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/PaymentOption"
                },
                "PaymentTerm": {
                    "$ref": "#/$defs/PaymentTerm"
                }
            }
        },
        "LineItemRequestListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LineItemRequest"
            }
        },
        "LineItemRequest": {
            "type": "object",
            "properties": {
                "CatalogItemId": {
                    "$ref": "#/$defs/SkuCode"
                },
                "Quantity": {
                    "$ref": "#/$defs/LineItemQuantity"
                }
            }
        },
        "CreateOutpostOutput": {
            "type": "object",
            "properties": {
                "Outpost": {
                    "$ref": "#/$defs/Outpost"
                }
            }
        },
        "Outpost": {
            "type": "object",
            "properties": {
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                },
                "OwnerId": {
                    "$ref": "#/$defs/OwnerId"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/OutpostArn"
                },
                "SiteId": {
                    "$ref": "#/$defs/SiteId"
                },
                "Name": {
                    "$ref": "#/$defs/OutpostName"
                },
                "Description": {
                    "$ref": "#/$defs/OutpostDescription"
                },
                "LifeCycleStatus": {
                    "$ref": "#/$defs/LifeCycleStatus"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/AvailabilityZone"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "SiteArn": {
                    "$ref": "#/$defs/SiteArn"
                },
                "SupportedHardwareType": {
                    "$ref": "#/$defs/SupportedHardwareType"
                }
            }
        },
        "OutpostId": {
            "type": "string"
        },
        "OwnerId": {
            "type": "string"
        },
        "OutpostArn": {
            "type": "string"
        },
        "SiteId": {
            "type": "string"
        },
        "OutpostName": {
            "type": "string"
        },
        "OutpostDescription": {
            "type": "string"
        },
        "LifeCycleStatus": {
            "type": "string"
        },
        "AvailabilityZone": {
            "type": "string"
        },
        "AvailabilityZoneId": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "SiteArn": {
            "type": "string"
        },
        "SupportedHardwareType": {
            "enum": [
                "RACK",
                "SERVER"
            ]
        },
        "CreateOutpostInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OutpostName"
                },
                "Description": {
                    "$ref": "#/$defs/OutpostDescription"
                },
                "SiteId": {
                    "$ref": "#/$defs/SiteId"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/AvailabilityZone"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "SupportedHardwareType": {
                    "$ref": "#/$defs/SupportedHardwareType"
                }
            }
        },
        "CreateSiteOutput": {
            "type": "object",
            "properties": {
                "Site": {
                    "$ref": "#/$defs/Site"
                }
            }
        },
        "Site": {
            "type": "object",
            "properties": {
                "SiteId": {
                    "$ref": "#/$defs/SiteId"
                },
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "Name": {
                    "$ref": "#/$defs/SiteName"
                },
                "Description": {
                    "$ref": "#/$defs/SiteDescription"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "SiteArn": {
                    "$ref": "#/$defs/SiteArn"
                },
                "Notes": {
                    "$ref": "#/$defs/SiteNotes"
                },
                "OperatingAddressCountryCode": {
                    "$ref": "#/$defs/CountryCode"
                },
                "OperatingAddressStateOrRegion": {
                    "$ref": "#/$defs/StateOrRegion"
                },
                "OperatingAddressCity": {
                    "$ref": "#/$defs/City"
                },
                "RackPhysicalProperties": {
                    "$ref": "#/$defs/RackPhysicalProperties"
                }
            }
        },
        "AccountId": {
            "type": "string"
        },
        "SiteName": {
            "type": "string"
        },
        "SiteDescription": {
            "type": "string"
        },
        "SiteNotes": {
            "type": "string"
        },
        "CountryCode": {
            "type": "string"
        },
        "StateOrRegion": {
            "type": "string"
        },
        "City": {
            "type": "string"
        },
        "RackPhysicalProperties": {
            "type": "object",
            "properties": {
                "PowerDrawKva": {
                    "$ref": "#/$defs/PowerDrawKva"
                },
                "PowerPhase": {
                    "$ref": "#/$defs/PowerPhase"
                },
                "PowerConnector": {
                    "$ref": "#/$defs/PowerConnector"
                },
                "PowerFeedDrop": {
                    "$ref": "#/$defs/PowerFeedDrop"
                },
                "UplinkGbps": {
                    "$ref": "#/$defs/UplinkGbps"
                },
                "UplinkCount": {
                    "$ref": "#/$defs/UplinkCount"
                },
                "FiberOpticCableType": {
                    "$ref": "#/$defs/FiberOpticCableType"
                },
                "OpticalStandard": {
                    "$ref": "#/$defs/OpticalStandard"
                },
                "MaximumSupportedWeightLbs": {
                    "$ref": "#/$defs/MaximumSupportedWeightLbs"
                }
            }
        },
        "PowerDrawKva": {
            "enum": [
                "POWER_5_KVA",
                "POWER_10_KVA",
                "POWER_15_KVA",
                "POWER_30_KVA"
            ]
        },
        "PowerPhase": {
            "enum": [
                "SINGLE_PHASE",
                "THREE_PHASE"
            ]
        },
        "PowerConnector": {
            "enum": [
                "L6_30P",
                "IEC309",
                "AH530P7W",
                "AH532P6W"
            ]
        },
        "PowerFeedDrop": {
            "enum": [
                "ABOVE_RACK",
                "BELOW_RACK"
            ]
        },
        "UplinkGbps": {
            "enum": [
                "UPLINK_1G",
                "UPLINK_10G",
                "UPLINK_40G",
                "UPLINK_100G"
            ]
        },
        "UplinkCount": {
            "enum": [
                "UPLINK_COUNT_1",
                "UPLINK_COUNT_2",
                "UPLINK_COUNT_3",
                "UPLINK_COUNT_4",
                "UPLINK_COUNT_5",
                "UPLINK_COUNT_6",
                "UPLINK_COUNT_7",
                "UPLINK_COUNT_8",
                "UPLINK_COUNT_12",
                "UPLINK_COUNT_16"
            ]
        },
        "FiberOpticCableType": {
            "enum": [
                "SINGLE_MODE",
                "MULTI_MODE"
            ]
        },
        "OpticalStandard": {
            "enum": [
                "OPTIC_10GBASE_SR",
                "OPTIC_10GBASE_IR",
                "OPTIC_10GBASE_LR",
                "OPTIC_40GBASE_SR",
                "OPTIC_40GBASE_ESR",
                "OPTIC_40GBASE_IR4_LR4L",
                "OPTIC_40GBASE_LR4",
                "OPTIC_100GBASE_SR4",
                "OPTIC_100GBASE_CWDM4",
                "OPTIC_100GBASE_LR4",
                "OPTIC_100G_PSM4_MSA",
                "OPTIC_1000BASE_LX",
                "OPTIC_1000BASE_SX"
            ]
        },
        "MaximumSupportedWeightLbs": {
            "enum": [
                "NO_LIMIT",
                "MAX_1400_LBS",
                "MAX_1600_LBS",
                "MAX_1800_LBS",
                "MAX_2000_LBS"
            ]
        },
        "CreateSiteInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/SiteName"
                },
                "Description": {
                    "$ref": "#/$defs/SiteDescription"
                },
                "Notes": {
                    "$ref": "#/$defs/SiteNotes"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "OperatingAddress": {
                    "$ref": "#/$defs/Address"
                },
                "ShippingAddress": {
                    "$ref": "#/$defs/Address"
                },
                "RackPhysicalProperties": {
                    "$ref": "#/$defs/RackPhysicalProperties"
                }
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "ContactName": {
                    "$ref": "#/$defs/ContactName"
                },
                "ContactPhoneNumber": {
                    "$ref": "#/$defs/ContactPhoneNumber"
                },
                "AddressLine1": {
                    "$ref": "#/$defs/AddressLine1"
                },
                "AddressLine2": {
                    "$ref": "#/$defs/AddressLine2"
                },
                "AddressLine3": {
                    "$ref": "#/$defs/AddressLine3"
                },
                "City": {
                    "$ref": "#/$defs/City"
                },
                "StateOrRegion": {
                    "$ref": "#/$defs/StateOrRegion"
                },
                "DistrictOrCounty": {
                    "$ref": "#/$defs/DistrictOrCounty"
                },
                "PostalCode": {
                    "$ref": "#/$defs/PostalCode"
                },
                "CountryCode": {
                    "$ref": "#/$defs/CountryCode"
                },
                "Municipality": {
                    "$ref": "#/$defs/Municipality"
                }
            }
        },
        "ContactName": {
            "type": "string"
        },
        "ContactPhoneNumber": {
            "type": "string"
        },
        "AddressLine1": {
            "type": "string"
        },
        "AddressLine2": {
            "type": "string"
        },
        "AddressLine3": {
            "type": "string"
        },
        "DistrictOrCounty": {
            "type": "string"
        },
        "PostalCode": {
            "type": "string"
        },
        "Municipality": {
            "type": "string"
        },
        "DeleteOutpostOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteOutpostInput": {
            "type": "object",
            "properties": {
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                }
            }
        },
        "DeleteSiteOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteSiteInput": {
            "type": "object",
            "properties": {
                "SiteId": {
                    "$ref": "#/$defs/SiteId"
                }
            }
        },
        "GetCapacityTaskOutput": {
            "type": "object",
            "properties": {
                "CapacityTaskId": {
                    "$ref": "#/$defs/CapacityTaskId"
                },
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                },
                "OrderId": {
                    "$ref": "#/$defs/OrderId"
                },
                "RequestedInstancePools": {
                    "$ref": "#/$defs/RequestedInstancePools"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                },
                "CapacityTaskStatus": {
                    "$ref": "#/$defs/CapacityTaskStatus"
                },
                "Failed": {
                    "$ref": "#/$defs/CapacityTaskFailure"
                },
                "CreationDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                },
                "CompletionDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                }
            }
        },
        "RequestedInstancePools": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceTypeCapacity"
            }
        },
        "InstanceTypeCapacity": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/InstanceTypeName"
                },
                "Count": {
                    "$ref": "#/$defs/InstanceTypeCount"
                }
            }
        },
        "InstanceTypeName": {
            "type": "string"
        },
        "InstanceTypeCount": {
            "type": "integer",
            "format": "int32"
        },
        "DryRun": {
            "type": "boolean"
        },
        "CapacityTaskStatus": {
            "enum": [
                "REQUESTED",
                "IN_PROGRESS",
                "FAILED",
                "COMPLETED",
                "CANCELLED"
            ]
        },
        "CapacityTaskFailure": {
            "type": "object",
            "properties": {
                "Reason": {
                    "$ref": "#/$defs/CapacityTaskStatusReason"
                },
                "Type": {
                    "$ref": "#/$defs/CapacityTaskFailureType"
                }
            }
        },
        "CapacityTaskStatusReason": {
            "type": "string"
        },
        "CapacityTaskFailureType": {
            "enum": [
                "UNSUPPORTED_CAPACITY_CONFIGURATION"
            ]
        },
        "GetCapacityTaskInput": {
            "type": "object",
            "properties": {
                "CapacityTaskId": {
                    "$ref": "#/$defs/CapacityTaskId"
                },
                "OutpostIdentifier": {
                    "$ref": "#/$defs/OutpostIdentifier"
                }
            }
        },
        "GetCatalogItemOutput": {
            "type": "object",
            "properties": {
                "CatalogItem": {
                    "$ref": "#/$defs/CatalogItem"
                }
            }
        },
        "CatalogItem": {
            "type": "object",
            "properties": {
                "CatalogItemId": {
                    "$ref": "#/$defs/SkuCode"
                },
                "ItemStatus": {
                    "$ref": "#/$defs/CatalogItemStatus"
                },
                "EC2Capacities": {
                    "$ref": "#/$defs/EC2CapacityListDefinition"
                },
                "PowerKva": {
                    "$ref": "#/$defs/CatalogItemPowerKva"
                },
                "WeightLbs": {
                    "$ref": "#/$defs/CatalogItemWeightLbs"
                },
                "SupportedUplinkGbps": {
                    "$ref": "#/$defs/SupportedUplinkGbpsListDefinition"
                },
                "SupportedStorage": {
                    "$ref": "#/$defs/SupportedStorageList"
                }
            }
        },
        "CatalogItemStatus": {
            "enum": [
                "AVAILABLE",
                "DISCONTINUED"
            ]
        },
        "EC2CapacityListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EC2Capacity"
            }
        },
        "EC2Capacity": {
            "type": "object",
            "properties": {
                "Family": {
                    "$ref": "#/$defs/Family"
                },
                "MaxSize": {
                    "$ref": "#/$defs/MaxSize"
                },
                "Quantity": {
                    "$ref": "#/$defs/Quantity"
                }
            }
        },
        "Family": {
            "type": "string"
        },
        "MaxSize": {
            "type": "string"
        },
        "Quantity": {
            "type": "string"
        },
        "CatalogItemPowerKva": {
            "type": "number",
            "format": "float"
        },
        "CatalogItemWeightLbs": {
            "type": "integer",
            "format": "int32"
        },
        "SupportedUplinkGbpsListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SupportedUplinkGbps"
            }
        },
        "SupportedUplinkGbps": {
            "type": "integer",
            "format": "int32"
        },
        "SupportedStorageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SupportedStorageEnum"
            }
        },
        "SupportedStorageEnum": {
            "enum": [
                "EBS",
                "S3"
            ]
        },
        "GetCatalogItemInput": {
            "type": "object",
            "properties": {
                "CatalogItemId": {
                    "$ref": "#/$defs/SkuCode"
                }
            }
        },
        "GetConnectionResponse": {
            "type": "object",
            "properties": {
                "ConnectionId": {
                    "$ref": "#/$defs/ConnectionId"
                },
                "ConnectionDetails": {
                    "$ref": "#/$defs/ConnectionDetails"
                }
            }
        },
        "ConnectionId": {
            "type": "string"
        },
        "ConnectionDetails": {
            "type": "object",
            "properties": {
                "ClientPublicKey": {
                    "$ref": "#/$defs/WireGuardPublicKey"
                },
                "ServerPublicKey": {
                    "$ref": "#/$defs/WireGuardPublicKey"
                },
                "ServerEndpoint": {
                    "$ref": "#/$defs/ServerEndpoint"
                },
                "ClientTunnelAddress": {
                    "$ref": "#/$defs/CIDR"
                },
                "ServerTunnelAddress": {
                    "$ref": "#/$defs/CIDR"
                },
                "AllowedIps": {
                    "$ref": "#/$defs/CIDRList"
                }
            }
        },
        "WireGuardPublicKey": {
            "type": "string"
        },
        "ServerEndpoint": {
            "type": "string"
        },
        "CIDR": {
            "type": "string"
        },
        "CIDRList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CIDR"
            }
        },
        "GetConnectionRequest": {
            "type": "object",
            "properties": {
                "ConnectionId": {
                    "$ref": "#/$defs/ConnectionId"
                }
            }
        },
        "GetOrderOutput": {
            "type": "object",
            "properties": {
                "Order": {
                    "$ref": "#/$defs/Order"
                }
            }
        },
        "GetOrderInput": {
            "type": "object",
            "properties": {
                "OrderId": {
                    "$ref": "#/$defs/OrderId"
                }
            }
        },
        "GetOutpostOutput": {
            "type": "object",
            "properties": {
                "Outpost": {
                    "$ref": "#/$defs/Outpost"
                }
            }
        },
        "GetOutpostInput": {
            "type": "object",
            "properties": {
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                }
            }
        },
        "GetOutpostInstanceTypesOutput": {
            "type": "object",
            "properties": {
                "InstanceTypes": {
                    "$ref": "#/$defs/InstanceTypeListDefinition"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/OutpostArn"
                }
            }
        },
        "InstanceTypeListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceTypeItem"
            }
        },
        "InstanceTypeItem": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "VCPUs": {
                    "$ref": "#/$defs/VCPUCount"
                }
            }
        },
        "InstanceType": {
            "type": "string"
        },
        "VCPUCount": {
            "type": "integer",
            "format": "int32"
        },
        "Token": {
            "type": "string"
        },
        "GetOutpostInstanceTypesInput": {
            "type": "object",
            "properties": {
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults1000"
                }
            }
        },
        "MaxResults1000": {
            "type": "integer",
            "format": "int32"
        },
        "GetOutpostSupportedInstanceTypesOutput": {
            "type": "object",
            "properties": {
                "InstanceTypes": {
                    "$ref": "#/$defs/InstanceTypeListDefinition"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetOutpostSupportedInstanceTypesInput": {
            "type": "object",
            "properties": {
                "OutpostIdentifier": {
                    "$ref": "#/$defs/OutpostIdentifier"
                },
                "OrderId": {
                    "$ref": "#/$defs/OrderId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults1000"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetSiteOutput": {
            "type": "object",
            "properties": {
                "Site": {
                    "$ref": "#/$defs/Site"
                }
            }
        },
        "GetSiteInput": {
            "type": "object",
            "properties": {
                "SiteId": {
                    "$ref": "#/$defs/SiteId"
                }
            }
        },
        "GetSiteAddressOutput": {
            "type": "object",
            "properties": {
                "SiteId": {
                    "$ref": "#/$defs/SiteId"
                },
                "AddressType": {
                    "$ref": "#/$defs/AddressType"
                },
                "Address": {
                    "$ref": "#/$defs/Address"
                }
            }
        },
        "AddressType": {
            "enum": [
                "SHIPPING_ADDRESS",
                "OPERATING_ADDRESS"
            ]
        },
        "GetSiteAddressInput": {
            "type": "object",
            "properties": {
                "SiteId": {
                    "$ref": "#/$defs/SiteId"
                },
                "AddressType": {
                    "$ref": "#/$defs/AddressType"
                }
            }
        },
        "ListAssetsOutput": {
            "type": "object",
            "properties": {
                "Assets": {
                    "$ref": "#/$defs/AssetListDefinition"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "AssetListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssetInfo"
            }
        },
        "AssetInfo": {
            "type": "object",
            "properties": {
                "AssetId": {
                    "$ref": "#/$defs/AssetId"
                },
                "RackId": {
                    "$ref": "#/$defs/RackId"
                },
                "AssetType": {
                    "$ref": "#/$defs/AssetType"
                },
                "ComputeAttributes": {
                    "$ref": "#/$defs/ComputeAttributes"
                },
                "AssetLocation": {
                    "$ref": "#/$defs/AssetLocation"
                }
            }
        },
        "RackId": {
            "type": "string"
        },
        "AssetType": {
            "enum": [
                "COMPUTE"
            ]
        },
        "ComputeAttributes": {
            "type": "object",
            "properties": {
                "HostId": {
                    "$ref": "#/$defs/HostId"
                },
                "State": {
                    "$ref": "#/$defs/ComputeAssetState"
                },
                "InstanceFamilies": {
                    "$ref": "#/$defs/InstanceFamilies"
                }
            }
        },
        "HostId": {
            "type": "string"
        },
        "ComputeAssetState": {
            "enum": [
                "ACTIVE",
                "ISOLATED",
                "RETIRING"
            ]
        },
        "InstanceFamilies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceFamilyName"
            }
        },
        "InstanceFamilyName": {
            "type": "string"
        },
        "AssetLocation": {
            "type": "object",
            "properties": {
                "RackElevation": {
                    "$ref": "#/$defs/RackElevation"
                }
            }
        },
        "RackElevation": {
            "type": "number",
            "format": "float"
        },
        "ListAssetsInput": {
            "type": "object",
            "properties": {
                "OutpostIdentifier": {
                    "$ref": "#/$defs/OutpostIdentifier"
                },
                "HostIdFilter": {
                    "$ref": "#/$defs/HostIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults1000"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "StatusFilter": {
                    "$ref": "#/$defs/StatusList"
                }
            }
        },
        "HostIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HostId"
            }
        },
        "StatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssetState"
            }
        },
        "AssetState": {
            "enum": [
                "ACTIVE",
                "RETIRING",
                "ISOLATED"
            ]
        },
        "ListCapacityTasksOutput": {
            "type": "object",
            "properties": {
                "CapacityTasks": {
                    "$ref": "#/$defs/CapacityTaskList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "CapacityTaskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityTaskSummary"
            }
        },
        "CapacityTaskSummary": {
            "type": "object",
            "properties": {
                "CapacityTaskId": {
                    "$ref": "#/$defs/CapacityTaskId"
                },
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                },
                "OrderId": {
                    "$ref": "#/$defs/OrderId"
                },
                "CapacityTaskStatus": {
                    "$ref": "#/$defs/CapacityTaskStatus"
                },
                "CreationDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                },
                "CompletionDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                }
            }
        },
        "ListCapacityTasksInput": {
            "type": "object",
            "properties": {
                "OutpostIdentifierFilter": {
                    "$ref": "#/$defs/OutpostIdentifier"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults1000"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "CapacityTaskStatusFilter": {
                    "$ref": "#/$defs/CapacityTaskStatusList"
                }
            }
        },
        "CapacityTaskStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityTaskStatus"
            }
        },
        "ListCatalogItemsOutput": {
            "type": "object",
            "properties": {
                "CatalogItems": {
                    "$ref": "#/$defs/CatalogItemListDefinition"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "CatalogItemListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CatalogItem"
            }
        },
        "ListCatalogItemsInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults1000"
                },
                "ItemClassFilter": {
                    "$ref": "#/$defs/CatalogItemClassList"
                },
                "SupportedStorageFilter": {
                    "$ref": "#/$defs/SupportedStorageList"
                },
                "EC2FamilyFilter": {
                    "$ref": "#/$defs/EC2FamilyList"
                }
            }
        },
        "CatalogItemClassList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CatalogItemClass"
            }
        },
        "CatalogItemClass": {
            "enum": [
                "RACK",
                "SERVER"
            ]
        },
        "EC2FamilyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Family"
            }
        },
        "ListOrdersOutput": {
            "type": "object",
            "properties": {
                "Orders": {
                    "$ref": "#/$defs/OrderSummaryListDefinition"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "OrderSummaryListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrderSummary"
            }
        },
        "OrderSummary": {
            "type": "object",
            "properties": {
                "OutpostId": {
                    "$ref": "#/$defs/OutpostIdOnly"
                },
                "OrderId": {
                    "$ref": "#/$defs/OrderId"
                },
                "OrderType": {
                    "$ref": "#/$defs/OrderType"
                },
                "Status": {
                    "$ref": "#/$defs/OrderStatus"
                },
                "LineItemCountsByStatus": {
                    "$ref": "#/$defs/LineItemStatusCounts"
                },
                "OrderSubmissionDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                },
                "OrderFulfilledDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                }
            }
        },
        "LineItemStatusCounts": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/LineItemQuantity"
            }
        },
        "ListOrdersInput": {
            "type": "object",
            "properties": {
                "OutpostIdentifierFilter": {
                    "$ref": "#/$defs/OutpostIdentifier"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults1000"
                }
            }
        },
        "ListOutpostsOutput": {
            "type": "object",
            "properties": {
                "Outposts": {
                    "$ref": "#/$defs/outpostListDefinition"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "outpostListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Outpost"
            }
        },
        "ListOutpostsInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults1000"
                },
                "LifeCycleStatusFilter": {
                    "$ref": "#/$defs/LifeCycleStatusList"
                },
                "AvailabilityZoneFilter": {
                    "$ref": "#/$defs/AvailabilityZoneList"
                },
                "AvailabilityZoneIdFilter": {
                    "$ref": "#/$defs/AvailabilityZoneIdList"
                }
            }
        },
        "LifeCycleStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LifeCycleStatus"
            }
        },
        "AvailabilityZoneList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AvailabilityZone"
            }
        },
        "AvailabilityZoneIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AvailabilityZoneId"
            }
        },
        "ListSitesOutput": {
            "type": "object",
            "properties": {
                "Sites": {
                    "$ref": "#/$defs/siteListDefinition"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "siteListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Site"
            }
        },
        "ListSitesInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults1000"
                },
                "OperatingAddressCountryCodeFilter": {
                    "$ref": "#/$defs/CountryCodeList"
                },
                "OperatingAddressStateOrRegionFilter": {
                    "$ref": "#/$defs/StateOrRegionList"
                },
                "OperatingAddressCityFilter": {
                    "$ref": "#/$defs/CityList"
                }
            }
        },
        "CountryCodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CountryCode"
            }
        },
        "StateOrRegionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StateOrRegion"
            }
        },
        "CityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/City"
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "Arn": {
            "type": "string"
        },
        "StartCapacityTaskOutput": {
            "type": "object",
            "properties": {
                "CapacityTaskId": {
                    "$ref": "#/$defs/CapacityTaskId"
                },
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                },
                "OrderId": {
                    "$ref": "#/$defs/OrderId"
                },
                "RequestedInstancePools": {
                    "$ref": "#/$defs/RequestedInstancePools"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                },
                "CapacityTaskStatus": {
                    "$ref": "#/$defs/CapacityTaskStatus"
                },
                "Failed": {
                    "$ref": "#/$defs/CapacityTaskFailure"
                },
                "CreationDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                },
                "CompletionDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/ISO8601Timestamp"
                }
            }
        },
        "StartCapacityTaskInput": {
            "type": "object",
            "properties": {
                "OutpostIdentifier": {
                    "$ref": "#/$defs/OutpostIdentifier"
                },
                "OrderId": {
                    "$ref": "#/$defs/OrderId"
                },
                "InstancePools": {
                    "$ref": "#/$defs/RequestedInstancePools"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "StartConnectionResponse": {
            "type": "object",
            "properties": {
                "ConnectionId": {
                    "$ref": "#/$defs/ConnectionId"
                },
                "UnderlayIpAddress": {
                    "$ref": "#/$defs/UnderlayIpAddress"
                }
            }
        },
        "UnderlayIpAddress": {
            "type": "string"
        },
        "StartConnectionRequest": {
            "type": "object",
            "properties": {
                "DeviceSerialNumber": {
                    "$ref": "#/$defs/DeviceSerialNumber"
                },
                "AssetId": {
                    "$ref": "#/$defs/AssetId"
                },
                "ClientPublicKey": {
                    "$ref": "#/$defs/WireGuardPublicKey"
                },
                "NetworkInterfaceDeviceIndex": {
                    "$ref": "#/$defs/NetworkInterfaceDeviceIndex"
                }
            }
        },
        "DeviceSerialNumber": {
            "type": "string"
        },
        "NetworkInterfaceDeviceIndex": {
            "type": "integer",
            "format": "int32"
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UpdateOutpostOutput": {
            "type": "object",
            "properties": {
                "Outpost": {
                    "$ref": "#/$defs/Outpost"
                }
            }
        },
        "UpdateOutpostInput": {
            "type": "object",
            "properties": {
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                },
                "Name": {
                    "$ref": "#/$defs/OutpostName"
                },
                "Description": {
                    "$ref": "#/$defs/OutpostDescription"
                },
                "SupportedHardwareType": {
                    "$ref": "#/$defs/SupportedHardwareType"
                }
            }
        },
        "UpdateSiteOutput": {
            "type": "object",
            "properties": {
                "Site": {
                    "$ref": "#/$defs/Site"
                }
            }
        },
        "UpdateSiteInput": {
            "type": "object",
            "properties": {
                "SiteId": {
                    "$ref": "#/$defs/SiteId"
                },
                "Name": {
                    "$ref": "#/$defs/SiteName"
                },
                "Description": {
                    "$ref": "#/$defs/SiteDescription"
                },
                "Notes": {
                    "$ref": "#/$defs/SiteNotes"
                }
            }
        },
        "UpdateSiteAddressOutput": {
            "type": "object",
            "properties": {
                "AddressType": {
                    "$ref": "#/$defs/AddressType"
                },
                "Address": {
                    "$ref": "#/$defs/Address"
                }
            }
        },
        "UpdateSiteAddressInput": {
            "type": "object",
            "properties": {
                "SiteId": {
                    "$ref": "#/$defs/SiteId"
                },
                "AddressType": {
                    "$ref": "#/$defs/AddressType"
                },
                "Address": {
                    "$ref": "#/$defs/Address"
                }
            }
        },
        "UpdateSiteRackPhysicalPropertiesOutput": {
            "type": "object",
            "properties": {
                "Site": {
                    "$ref": "#/$defs/Site"
                }
            }
        },
        "UpdateSiteRackPhysicalPropertiesInput": {
            "type": "object",
            "properties": {
                "SiteId": {
                    "$ref": "#/$defs/SiteId"
                },
                "PowerDrawKva": {
                    "$ref": "#/$defs/PowerDrawKva"
                },
                "PowerPhase": {
                    "$ref": "#/$defs/PowerPhase"
                },
                "PowerConnector": {
                    "$ref": "#/$defs/PowerConnector"
                },
                "PowerFeedDrop": {
                    "$ref": "#/$defs/PowerFeedDrop"
                },
                "UplinkGbps": {
                    "$ref": "#/$defs/UplinkGbps"
                },
                "UplinkCount": {
                    "$ref": "#/$defs/UplinkCount"
                },
                "FiberOpticCableType": {
                    "$ref": "#/$defs/FiberOpticCableType"
                },
                "OpticalStandard": {
                    "$ref": "#/$defs/OpticalStandard"
                },
                "MaximumSupportedWeightLbs": {
                    "$ref": "#/$defs/MaximumSupportedWeightLbs"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://outposts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://outposts.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://outposts-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://outposts.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://outposts.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}