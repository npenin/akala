{
    "name": "sagemaker",
    "commands": [
        {
            "name": "BatchGetRecord",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/BatchGetRecord"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetRecordResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetRecordRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Identifiers": {},
                        "ExpirationTimeResponse": {}
                    }
                }
            }
        },
        {
            "name": "DeleteRecord",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FeatureGroupName": "route.FeatureGroupName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/FeatureGroup/{FeatureGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.FeatureGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRecordRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "FeatureGroupName": {},
                        "RecordIdentifierValueAsString": {},
                        "EventTime": {},
                        "TargetStores": {},
                        "DeletionMode": {}
                    }
                }
            }
        },
        {
            "name": "GetRecord",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FeatureGroupName": "route.FeatureGroupName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/FeatureGroup/{FeatureGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRecordResponse"
                    },
                    "inject": [
                        "param.0.FeatureGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRecordRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "FeatureGroupName": {},
                        "RecordIdentifierValueAsString": {},
                        "FeatureNames": {},
                        "ExpirationTimeResponse": {}
                    }
                }
            }
        },
        {
            "name": "PutRecord",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FeatureGroupName": "route.FeatureGroupName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/FeatureGroup/{FeatureGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.FeatureGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutRecordRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "FeatureGroupName": {},
                        "Record": {},
                        "TargetStores": {},
                        "TtlDuration": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchGetRecordRequest": {
            "type": "object",
            "properties": {
                "Identifiers": {
                    "$ref": "#/$defs/BatchGetRecordIdentifiers"
                },
                "ExpirationTimeResponse": {
                    "$ref": "#/$defs/ExpirationTimeResponse"
                }
            }
        },
        "BatchGetRecordIdentifiers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetRecordIdentifier"
            }
        },
        "BatchGetRecordIdentifier": {
            "type": "object",
            "properties": {
                "FeatureGroupName": {
                    "$ref": "#/$defs/FeatureGroupNameOrArn"
                },
                "RecordIdentifiersValueAsString": {
                    "$ref": "#/$defs/RecordIdentifiers"
                },
                "FeatureNames": {
                    "$ref": "#/$defs/FeatureNames"
                }
            }
        },
        "FeatureGroupNameOrArn": {
            "type": "string"
        },
        "RecordIdentifiers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValueAsString"
            }
        },
        "ValueAsString": {
            "type": "string"
        },
        "FeatureNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FeatureName"
            }
        },
        "FeatureName": {
            "type": "string"
        },
        "ExpirationTimeResponse": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "BatchGetRecordResponse": {
            "type": "object",
            "properties": {
                "Records": {
                    "$ref": "#/$defs/BatchGetRecordResultDetails"
                },
                "Errors": {
                    "$ref": "#/$defs/BatchGetRecordErrors"
                },
                "UnprocessedIdentifiers": {
                    "$ref": "#/$defs/UnprocessedIdentifiers"
                }
            }
        },
        "BatchGetRecordResultDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetRecordResultDetail"
            }
        },
        "BatchGetRecordResultDetail": {
            "type": "object",
            "properties": {
                "FeatureGroupName": {
                    "$ref": "#/$defs/ValueAsString"
                },
                "RecordIdentifierValueAsString": {
                    "$ref": "#/$defs/ValueAsString"
                },
                "Record": {
                    "$ref": "#/$defs/Record"
                },
                "ExpiresAt": {
                    "$ref": "#/$defs/ExpiresAt"
                }
            }
        },
        "Record": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FeatureValue"
            }
        },
        "FeatureValue": {
            "type": "object",
            "properties": {
                "FeatureName": {
                    "$ref": "#/$defs/FeatureName"
                },
                "ValueAsString": {
                    "$ref": "#/$defs/ValueAsString"
                },
                "ValueAsStringList": {
                    "$ref": "#/$defs/ValueAsStringList"
                }
            }
        },
        "ValueAsStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValueAsString"
            }
        },
        "ExpiresAt": {
            "type": "string"
        },
        "BatchGetRecordErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetRecordError"
            }
        },
        "BatchGetRecordError": {
            "type": "object",
            "properties": {
                "FeatureGroupName": {
                    "$ref": "#/$defs/ValueAsString"
                },
                "RecordIdentifierValueAsString": {
                    "$ref": "#/$defs/ValueAsString"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ValueAsString"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/Message"
                }
            }
        },
        "Message": {
            "type": "string"
        },
        "UnprocessedIdentifiers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetRecordIdentifier"
            }
        },
        "DeleteRecordRequest": {
            "type": "object",
            "properties": {
                "FeatureGroupName": {
                    "$ref": "#/$defs/FeatureGroupNameOrArn"
                },
                "RecordIdentifierValueAsString": {
                    "$ref": "#/$defs/ValueAsString"
                },
                "EventTime": {
                    "$ref": "#/$defs/ValueAsString"
                },
                "TargetStores": {
                    "$ref": "#/$defs/TargetStores"
                },
                "DeletionMode": {
                    "$ref": "#/$defs/DeletionMode"
                }
            }
        },
        "TargetStores": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetStore"
            }
        },
        "TargetStore": {
            "enum": [
                "ONLINE_STORE",
                "OFFLINE_STORE"
            ]
        },
        "DeletionMode": {
            "enum": [
                "SOFT_DELETE",
                "HARD_DELETE"
            ]
        },
        "GetRecordRequest": {
            "type": "object",
            "properties": {
                "FeatureGroupName": {
                    "$ref": "#/$defs/FeatureGroupNameOrArn"
                },
                "RecordIdentifierValueAsString": {
                    "$ref": "#/$defs/ValueAsString"
                },
                "FeatureNames": {
                    "$ref": "#/$defs/FeatureNames"
                },
                "ExpirationTimeResponse": {
                    "$ref": "#/$defs/ExpirationTimeResponse"
                }
            }
        },
        "GetRecordResponse": {
            "type": "object",
            "properties": {
                "Record": {
                    "$ref": "#/$defs/Record"
                },
                "ExpiresAt": {
                    "$ref": "#/$defs/ExpiresAt"
                }
            }
        },
        "PutRecordRequest": {
            "type": "object",
            "properties": {
                "FeatureGroupName": {
                    "$ref": "#/$defs/FeatureGroupNameOrArn"
                },
                "Record": {
                    "$ref": "#/$defs/Record"
                },
                "TargetStores": {
                    "$ref": "#/$defs/TargetStores"
                },
                "TtlDuration": {
                    "$ref": "#/$defs/TtlDuration"
                }
            }
        },
        "TtlDuration": {
            "type": "object",
            "properties": {
                "Unit": {
                    "$ref": "#/$defs/TtlDurationUnit"
                },
                "Value": {
                    "$ref": "#/$defs/TtlDurationValue"
                }
            }
        },
        "TtlDurationUnit": {
            "enum": [
                "SECONDS",
                "MINUTES",
                "HOURS",
                "DAYS",
                "WEEKS"
            ]
        },
        "TtlDurationValue": {
            "type": "integer",
            "format": "int32"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://featurestore-runtime.sagemaker-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://featurestore-runtime.sagemaker-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://featurestore-runtime.sagemaker.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://featurestore-runtime.sagemaker.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}