{
    "name": "appfabric",
    "commands": [
        {
            "name": "BatchGetUserAccessTasks",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/useraccess/batchget"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetUserAccessTasksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetUserAccessTasksRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "taskIdList": {}
                    }
                }
            }
        },
        {
            "name": "ConnectAppAuthorization",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "appAuthorizationIdentifier": "route.appAuthorizationIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/appbundles/{appBundleIdentifier}/appauthorizations/{appAuthorizationIdentifier}/connect"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ConnectAppAuthorizationResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.appAuthorizationIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ConnectAppAuthorizationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "appAuthorizationIdentifier": {},
                        "authRequest": {}
                    }
                }
            }
        },
        {
            "name": "CreateAppAuthorization",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/appbundles/{appBundleIdentifier}/appauthorizations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAppAuthorizationResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAppAuthorizationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "app": {},
                        "credential": {},
                        "tenant": {},
                        "authType": {},
                        "clientToken": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateAppBundle",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/appbundles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAppBundleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAppBundleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientToken": {},
                        "customerManagedKeyIdentifier": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateIngestion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/appbundles/{appBundleIdentifier}/ingestions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateIngestionResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateIngestionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "app": {},
                        "tenantId": {},
                        "ingestionType": {},
                        "clientToken": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateIngestionDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "ingestionIdentifier": "route.ingestionIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/appbundles/{appBundleIdentifier}/ingestions/{ingestionIdentifier}/ingestiondestinations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateIngestionDestinationResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.ingestionIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateIngestionDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "ingestionIdentifier": {},
                        "processingConfiguration": {},
                        "destinationConfiguration": {},
                        "clientToken": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "DeleteAppAuthorization",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "appAuthorizationIdentifier": "route.appAuthorizationIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/appbundles/{appBundleIdentifier}/appauthorizations/{appAuthorizationIdentifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAppAuthorizationResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.appAuthorizationIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAppAuthorizationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "appAuthorizationIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "DeleteAppBundle",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/appbundles/{appBundleIdentifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAppBundleResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAppBundleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "DeleteIngestion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "ingestionIdentifier": "route.ingestionIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/appbundles/{appBundleIdentifier}/ingestions/{ingestionIdentifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteIngestionResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.ingestionIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteIngestionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "ingestionIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "DeleteIngestionDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "ingestionIdentifier": "route.ingestionIdentifier",
                            "ingestionDestinationIdentifier": "route.ingestionDestinationIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/appbundles/{appBundleIdentifier}/ingestions/{ingestionIdentifier}/ingestiondestinations/{ingestionDestinationIdentifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteIngestionDestinationResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.ingestionIdentifier",
                        "param.0.ingestionDestinationIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteIngestionDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "ingestionIdentifier": {},
                        "ingestionDestinationIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "GetAppAuthorization",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "appAuthorizationIdentifier": "route.appAuthorizationIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/appbundles/{appBundleIdentifier}/appauthorizations/{appAuthorizationIdentifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAppAuthorizationResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.appAuthorizationIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAppAuthorizationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "appAuthorizationIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "GetAppBundle",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/appbundles/{appBundleIdentifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAppBundleResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAppBundleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "GetIngestion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "ingestionIdentifier": "route.ingestionIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/appbundles/{appBundleIdentifier}/ingestions/{ingestionIdentifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIngestionResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.ingestionIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIngestionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "ingestionIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "GetIngestionDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "ingestionIdentifier": "route.ingestionIdentifier",
                            "ingestionDestinationIdentifier": "route.ingestionDestinationIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/appbundles/{appBundleIdentifier}/ingestions/{ingestionIdentifier}/ingestiondestinations/{ingestionDestinationIdentifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIngestionDestinationResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.ingestionIdentifier",
                        "param.0.ingestionDestinationIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIngestionDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "ingestionIdentifier": {},
                        "ingestionDestinationIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "ListAppAuthorizations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/appbundles/{appBundleIdentifier}/appauthorizations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAppAuthorizationsResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAppAuthorizationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListAppBundles",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/appbundles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAppBundlesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAppBundlesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListIngestionDestinations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "ingestionIdentifier": "route.ingestionIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/appbundles/{appBundleIdentifier}/ingestions/{ingestionIdentifier}/ingestiondestinations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListIngestionDestinationsResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.ingestionIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListIngestionDestinationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "ingestionIdentifier": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListIngestions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/appbundles/{appBundleIdentifier}/ingestions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListIngestionsResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListIngestionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {}
                    }
                }
            }
        },
        {
            "name": "StartIngestion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "ingestionIdentifier": "route.ingestionIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/appbundles/{appBundleIdentifier}/ingestions/{ingestionIdentifier}/start"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartIngestionResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.ingestionIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartIngestionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ingestionIdentifier": {},
                        "appBundleIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "StartUserAccessTasks",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/useraccess/start"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartUserAccessTasksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartUserAccessTasksRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "email": {}
                    }
                }
            }
        },
        {
            "name": "StopIngestion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "ingestionIdentifier": "route.ingestionIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/appbundles/{appBundleIdentifier}/ingestions/{ingestionIdentifier}/stop"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopIngestionResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.ingestionIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopIngestionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ingestionIdentifier": {},
                        "appBundleIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateAppAuthorization",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "appAuthorizationIdentifier": "route.appAuthorizationIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/appbundles/{appBundleIdentifier}/appauthorizations/{appAuthorizationIdentifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAppAuthorizationResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.appAuthorizationIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAppAuthorizationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "appAuthorizationIdentifier": {},
                        "credential": {},
                        "tenant": {}
                    }
                }
            }
        },
        {
            "name": "UpdateIngestionDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appBundleIdentifier": "route.appBundleIdentifier",
                            "ingestionIdentifier": "route.ingestionIdentifier",
                            "ingestionDestinationIdentifier": "route.ingestionDestinationIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/appbundles/{appBundleIdentifier}/ingestions/{ingestionIdentifier}/ingestiondestinations/{ingestionDestinationIdentifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateIngestionDestinationResponse"
                    },
                    "inject": [
                        "param.0.appBundleIdentifier",
                        "param.0.ingestionIdentifier",
                        "param.0.ingestionDestinationIdentifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateIngestionDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "appBundleIdentifier": {},
                        "ingestionIdentifier": {},
                        "ingestionDestinationIdentifier": {},
                        "destinationConfiguration": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchGetUserAccessTasksRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "taskIdList": {
                    "$ref": "#/$defs/TaskIdList"
                }
            }
        },
        "Identifier": {
            "type": "string"
        },
        "TaskIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UUID"
            }
        },
        "UUID": {
            "type": "string"
        },
        "BatchGetUserAccessTasksResponse": {
            "type": "object",
            "properties": {
                "userAccessResultsList": {
                    "$ref": "#/$defs/UserAccessResultsList"
                }
            }
        },
        "UserAccessResultsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserAccessResultItem"
            }
        },
        "UserAccessResultItem": {
            "type": "object",
            "properties": {
                "app": {
                    "$ref": "#/$defs/String255"
                },
                "tenantId": {
                    "$ref": "#/$defs/TenantIdentifier"
                },
                "tenantDisplayName": {
                    "$ref": "#/$defs/String2048"
                },
                "taskId": {
                    "$ref": "#/$defs/UUID"
                },
                "resultStatus": {
                    "$ref": "#/$defs/ResultStatus"
                },
                "email": {
                    "$ref": "#/$defs/Email"
                },
                "userId": {
                    "$ref": "#/$defs/SensitiveString2048"
                },
                "userFullName": {
                    "$ref": "#/$defs/SensitiveString2048"
                },
                "userFirstName": {
                    "$ref": "#/$defs/SensitiveString2048"
                },
                "userLastName": {
                    "$ref": "#/$defs/SensitiveString2048"
                },
                "userStatus": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "taskError": {
                    "$ref": "#/$defs/TaskError"
                }
            }
        },
        "String255": {
            "type": "string"
        },
        "TenantIdentifier": {
            "type": "string"
        },
        "String2048": {
            "type": "string"
        },
        "ResultStatus": {
            "enum": [
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "EXPIRED"
            ]
        },
        "Email": {
            "type": "string"
        },
        "SensitiveString2048": {
            "type": "string"
        },
        "TaskError": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "errorMessage": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ConnectAppAuthorizationRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "appAuthorizationIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "authRequest": {
                    "$ref": "#/$defs/AuthRequest"
                }
            }
        },
        "AuthRequest": {
            "type": "object",
            "properties": {
                "redirectUri": {
                    "$ref": "#/$defs/RedirectUri"
                },
                "code": {
                    "$ref": "#/$defs/SensitiveString2048"
                }
            }
        },
        "RedirectUri": {
            "type": "string"
        },
        "ConnectAppAuthorizationResponse": {
            "type": "object",
            "properties": {
                "appAuthorizationSummary": {
                    "$ref": "#/$defs/AppAuthorizationSummary"
                }
            }
        },
        "AppAuthorizationSummary": {
            "type": "object",
            "properties": {
                "appAuthorizationArn": {
                    "$ref": "#/$defs/Arn"
                },
                "appBundleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "app": {
                    "$ref": "#/$defs/String255"
                },
                "tenant": {
                    "$ref": "#/$defs/Tenant"
                },
                "status": {
                    "$ref": "#/$defs/AppAuthorizationStatus"
                },
                "updatedAt": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "Arn": {
            "type": "string"
        },
        "Tenant": {
            "type": "object",
            "properties": {
                "tenantIdentifier": {
                    "$ref": "#/$defs/TenantIdentifier"
                },
                "tenantDisplayName": {
                    "$ref": "#/$defs/String2048"
                }
            }
        },
        "AppAuthorizationStatus": {
            "enum": [
                "PENDING_CONNECT",
                "CONNECTED",
                "CONNECTION_VALIDATION_FAILED",
                "TOKEN_AUTO_ROTATION_FAILED"
            ]
        },
        "DateTime": {
            "type": "string",
            "format": "date-time"
        },
        "CreateAppAuthorizationRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "app": {
                    "$ref": "#/$defs/String255"
                },
                "credential": {
                    "$ref": "#/$defs/Credential"
                },
                "tenant": {
                    "$ref": "#/$defs/Tenant"
                },
                "authType": {
                    "$ref": "#/$defs/AuthType"
                },
                "clientToken": {
                    "$ref": "#/$defs/UUID"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "Credential": {
            "type": "object",
            "properties": {
                "oauth2Credential": {
                    "$ref": "#/$defs/Oauth2Credential"
                },
                "apiKeyCredential": {
                    "$ref": "#/$defs/ApiKeyCredential"
                }
            }
        },
        "Oauth2Credential": {
            "type": "object",
            "properties": {
                "clientId": {
                    "$ref": "#/$defs/String2048"
                },
                "clientSecret": {
                    "$ref": "#/$defs/SensitiveString2048"
                }
            }
        },
        "ApiKeyCredential": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "$ref": "#/$defs/SensitiveString2048"
                }
            }
        },
        "AuthType": {
            "enum": [
                "OAUTH2",
                "API_KEY"
            ]
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateAppAuthorizationResponse": {
            "type": "object",
            "properties": {
                "appAuthorization": {
                    "$ref": "#/$defs/AppAuthorization"
                }
            }
        },
        "AppAuthorization": {
            "type": "object",
            "properties": {
                "appAuthorizationArn": {
                    "$ref": "#/$defs/Arn"
                },
                "appBundleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "app": {
                    "$ref": "#/$defs/String255"
                },
                "tenant": {
                    "$ref": "#/$defs/Tenant"
                },
                "authType": {
                    "$ref": "#/$defs/AuthType"
                },
                "status": {
                    "$ref": "#/$defs/AppAuthorizationStatus"
                },
                "createdAt": {
                    "$ref": "#/$defs/DateTime"
                },
                "updatedAt": {
                    "$ref": "#/$defs/DateTime"
                },
                "persona": {
                    "$ref": "#/$defs/Persona"
                },
                "authUrl": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "Persona": {
            "enum": [
                "ADMIN",
                "ENDUSER"
            ]
        },
        "CreateAppBundleRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/UUID"
                },
                "customerManagedKeyIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateAppBundleResponse": {
            "type": "object",
            "properties": {
                "appBundle": {
                    "$ref": "#/$defs/AppBundle"
                }
            }
        },
        "AppBundle": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/Arn"
                },
                "customerManagedKeyArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "CreateIngestionRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "app": {
                    "$ref": "#/$defs/String255"
                },
                "tenantId": {
                    "$ref": "#/$defs/TenantIdentifier"
                },
                "ingestionType": {
                    "$ref": "#/$defs/IngestionType"
                },
                "clientToken": {
                    "$ref": "#/$defs/UUID"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "IngestionType": {
            "enum": [
                "AUDIT_LOG"
            ]
        },
        "CreateIngestionResponse": {
            "type": "object",
            "properties": {
                "ingestion": {
                    "$ref": "#/$defs/Ingestion"
                }
            }
        },
        "Ingestion": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/Arn"
                },
                "appBundleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "app": {
                    "$ref": "#/$defs/String255"
                },
                "tenantId": {
                    "$ref": "#/$defs/TenantIdentifier"
                },
                "createdAt": {
                    "$ref": "#/$defs/DateTime"
                },
                "updatedAt": {
                    "$ref": "#/$defs/DateTime"
                },
                "state": {
                    "$ref": "#/$defs/IngestionState"
                },
                "ingestionType": {
                    "$ref": "#/$defs/IngestionType"
                }
            }
        },
        "IngestionState": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "CreateIngestionDestinationRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "ingestionIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "processingConfiguration": {
                    "$ref": "#/$defs/ProcessingConfiguration"
                },
                "destinationConfiguration": {
                    "$ref": "#/$defs/DestinationConfiguration"
                },
                "clientToken": {
                    "$ref": "#/$defs/UUID"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ProcessingConfiguration": {
            "type": "object",
            "properties": {
                "auditLog": {
                    "$ref": "#/$defs/AuditLogProcessingConfiguration"
                }
            }
        },
        "AuditLogProcessingConfiguration": {
            "type": "object",
            "properties": {
                "schema": {
                    "$ref": "#/$defs/Schema"
                },
                "format": {
                    "$ref": "#/$defs/Format"
                }
            }
        },
        "Schema": {
            "enum": [
                "OCSF",
                "RAW"
            ]
        },
        "Format": {
            "enum": [
                "JSON",
                "PARQUET"
            ]
        },
        "DestinationConfiguration": {
            "type": "object",
            "properties": {
                "auditLog": {
                    "$ref": "#/$defs/AuditLogDestinationConfiguration"
                }
            }
        },
        "AuditLogDestinationConfiguration": {
            "type": "object",
            "properties": {
                "destination": {
                    "$ref": "#/$defs/Destination"
                }
            }
        },
        "Destination": {
            "type": "object",
            "properties": {
                "s3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "firehoseStream": {
                    "$ref": "#/$defs/FirehoseStream"
                }
            }
        },
        "S3Bucket": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/String63"
                },
                "prefix": {
                    "$ref": "#/$defs/String120"
                }
            }
        },
        "String63": {
            "type": "string"
        },
        "String120": {
            "type": "string"
        },
        "FirehoseStream": {
            "type": "object",
            "properties": {
                "streamName": {
                    "$ref": "#/$defs/String64"
                }
            }
        },
        "String64": {
            "type": "string"
        },
        "CreateIngestionDestinationResponse": {
            "type": "object",
            "properties": {
                "ingestionDestination": {
                    "$ref": "#/$defs/IngestionDestination"
                }
            }
        },
        "IngestionDestination": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/Arn"
                },
                "ingestionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "processingConfiguration": {
                    "$ref": "#/$defs/ProcessingConfiguration"
                },
                "destinationConfiguration": {
                    "$ref": "#/$defs/DestinationConfiguration"
                },
                "status": {
                    "$ref": "#/$defs/IngestionDestinationStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "createdAt": {
                    "$ref": "#/$defs/DateTime"
                },
                "updatedAt": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "IngestionDestinationStatus": {
            "enum": [
                "ACTIVE",
                "FAILED"
            ]
        },
        "DeleteAppAuthorizationRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "appAuthorizationIdentifier": {
                    "$ref": "#/$defs/Identifier"
                }
            }
        },
        "DeleteAppAuthorizationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAppBundleRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                }
            }
        },
        "DeleteAppBundleResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteIngestionRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "ingestionIdentifier": {
                    "$ref": "#/$defs/Identifier"
                }
            }
        },
        "DeleteIngestionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteIngestionDestinationRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "ingestionIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "ingestionDestinationIdentifier": {
                    "$ref": "#/$defs/Identifier"
                }
            }
        },
        "DeleteIngestionDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "GetAppAuthorizationRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "appAuthorizationIdentifier": {
                    "$ref": "#/$defs/Identifier"
                }
            }
        },
        "GetAppAuthorizationResponse": {
            "type": "object",
            "properties": {
                "appAuthorization": {
                    "$ref": "#/$defs/AppAuthorization"
                }
            }
        },
        "GetAppBundleRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                }
            }
        },
        "GetAppBundleResponse": {
            "type": "object",
            "properties": {
                "appBundle": {
                    "$ref": "#/$defs/AppBundle"
                }
            }
        },
        "GetIngestionRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "ingestionIdentifier": {
                    "$ref": "#/$defs/Identifier"
                }
            }
        },
        "GetIngestionResponse": {
            "type": "object",
            "properties": {
                "ingestion": {
                    "$ref": "#/$defs/Ingestion"
                }
            }
        },
        "GetIngestionDestinationRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "ingestionIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "ingestionDestinationIdentifier": {
                    "$ref": "#/$defs/Identifier"
                }
            }
        },
        "GetIngestionDestinationResponse": {
            "type": "object",
            "properties": {
                "ingestionDestination": {
                    "$ref": "#/$defs/IngestionDestination"
                }
            }
        },
        "ListAppAuthorizationsRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/String2048"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListAppAuthorizationsResponse": {
            "type": "object",
            "properties": {
                "appAuthorizationSummaryList": {
                    "$ref": "#/$defs/AppAuthorizationSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/String2048"
                }
            }
        },
        "AppAuthorizationSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AppAuthorizationSummary"
            }
        },
        "ListAppBundlesRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/String2048"
                }
            }
        },
        "ListAppBundlesResponse": {
            "type": "object",
            "properties": {
                "appBundleSummaryList": {
                    "$ref": "#/$defs/AppBundleSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/String2048"
                }
            }
        },
        "AppBundleSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AppBundleSummary"
            }
        },
        "AppBundleSummary": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ListIngestionDestinationsRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "ingestionIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListIngestionDestinationsResponse": {
            "type": "object",
            "properties": {
                "ingestionDestinations": {
                    "$ref": "#/$defs/IngestionDestinationList"
                },
                "nextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "IngestionDestinationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IngestionDestinationSummary"
            }
        },
        "IngestionDestinationSummary": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ListIngestionsRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListIngestionsResponse": {
            "type": "object",
            "properties": {
                "ingestions": {
                    "$ref": "#/$defs/IngestionList"
                },
                "nextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "IngestionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IngestionSummary"
            }
        },
        "IngestionSummary": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/Arn"
                },
                "app": {
                    "$ref": "#/$defs/String255"
                },
                "tenantId": {
                    "$ref": "#/$defs/TenantIdentifier"
                },
                "state": {
                    "$ref": "#/$defs/IngestionState"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "StartIngestionRequest": {
            "type": "object",
            "properties": {
                "ingestionIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                }
            }
        },
        "StartIngestionResponse": {
            "type": "object",
            "properties": {}
        },
        "StartUserAccessTasksRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "email": {
                    "$ref": "#/$defs/Email"
                }
            }
        },
        "StartUserAccessTasksResponse": {
            "type": "object",
            "properties": {
                "userAccessTasksList": {
                    "$ref": "#/$defs/UserAccessTasksList"
                }
            }
        },
        "UserAccessTasksList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserAccessTaskItem"
            }
        },
        "UserAccessTaskItem": {
            "type": "object",
            "properties": {
                "app": {
                    "$ref": "#/$defs/String255"
                },
                "tenantId": {
                    "$ref": "#/$defs/TenantIdentifier"
                },
                "taskId": {
                    "$ref": "#/$defs/UUID"
                },
                "error": {
                    "$ref": "#/$defs/TaskError"
                }
            }
        },
        "StopIngestionRequest": {
            "type": "object",
            "properties": {
                "ingestionIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                }
            }
        },
        "StopIngestionResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateAppAuthorizationRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "appAuthorizationIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "credential": {
                    "$ref": "#/$defs/Credential"
                },
                "tenant": {
                    "$ref": "#/$defs/Tenant"
                }
            }
        },
        "UpdateAppAuthorizationResponse": {
            "type": "object",
            "properties": {
                "appAuthorization": {
                    "$ref": "#/$defs/AppAuthorization"
                }
            }
        },
        "UpdateIngestionDestinationRequest": {
            "type": "object",
            "properties": {
                "appBundleIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "ingestionIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "ingestionDestinationIdentifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "destinationConfiguration": {
                    "$ref": "#/$defs/DestinationConfiguration"
                }
            }
        },
        "UpdateIngestionDestinationResponse": {
            "type": "object",
            "properties": {
                "ingestionDestination": {
                    "$ref": "#/$defs/IngestionDestination"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://appfabric-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://appfabric-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://appfabric.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://appfabric.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                }
            ]
        }
    }
}