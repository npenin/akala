{
    "name": "comprehendmedical",
    "commands": [
        {
            "name": "DescribeEntitiesDetectionV2Job",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.DescribeEntitiesDetectionV2Job"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEntitiesDetectionV2JobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEntitiesDetectionV2JobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeICD10CMInferenceJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.DescribeICD10CMInferenceJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeICD10CMInferenceJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeICD10CMInferenceJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribePHIDetectionJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.DescribePHIDetectionJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePHIDetectionJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePHIDetectionJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeRxNormInferenceJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.DescribeRxNormInferenceJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRxNormInferenceJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeRxNormInferenceJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSNOMEDCTInferenceJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.DescribeSNOMEDCTInferenceJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSNOMEDCTInferenceJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSNOMEDCTInferenceJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetectEntities",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.DetectEntities"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetectEntitiesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetectEntitiesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetectEntitiesV2",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.DetectEntitiesV2"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetectEntitiesV2Response"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetectEntitiesV2Request"
                        }
                    }
                }
            }
        },
        {
            "name": "DetectPHI",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.DetectPHI"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetectPHIResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetectPHIRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "InferICD10CM",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.InferICD10CM"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/InferICD10CMResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/InferICD10CMRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "InferRxNorm",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.InferRxNorm"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/InferRxNormResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/InferRxNormRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "InferSNOMEDCT",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.InferSNOMEDCT"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/InferSNOMEDCTResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/InferSNOMEDCTRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListEntitiesDetectionV2Jobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.ListEntitiesDetectionV2Jobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEntitiesDetectionV2JobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEntitiesDetectionV2JobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListICD10CMInferenceJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.ListICD10CMInferenceJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListICD10CMInferenceJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListICD10CMInferenceJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPHIDetectionJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.ListPHIDetectionJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPHIDetectionJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPHIDetectionJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRxNormInferenceJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.ListRxNormInferenceJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRxNormInferenceJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRxNormInferenceJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSNOMEDCTInferenceJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.ListSNOMEDCTInferenceJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSNOMEDCTInferenceJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSNOMEDCTInferenceJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartEntitiesDetectionV2Job",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.StartEntitiesDetectionV2Job"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartEntitiesDetectionV2JobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartEntitiesDetectionV2JobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartICD10CMInferenceJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.StartICD10CMInferenceJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartICD10CMInferenceJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartICD10CMInferenceJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartPHIDetectionJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.StartPHIDetectionJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartPHIDetectionJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartPHIDetectionJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartRxNormInferenceJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.StartRxNormInferenceJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartRxNormInferenceJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartRxNormInferenceJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartSNOMEDCTInferenceJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.StartSNOMEDCTInferenceJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartSNOMEDCTInferenceJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartSNOMEDCTInferenceJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopEntitiesDetectionV2Job",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.StopEntitiesDetectionV2Job"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopEntitiesDetectionV2JobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopEntitiesDetectionV2JobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopICD10CMInferenceJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.StopICD10CMInferenceJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopICD10CMInferenceJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopICD10CMInferenceJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopPHIDetectionJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.StopPHIDetectionJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopPHIDetectionJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopPHIDetectionJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopRxNormInferenceJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.StopRxNormInferenceJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopRxNormInferenceJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopRxNormInferenceJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopSNOMEDCTInferenceJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ComprehendMedical_20181030.StopSNOMEDCTInferenceJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopSNOMEDCTInferenceJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopSNOMEDCTInferenceJobRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "DescribeEntitiesDetectionV2JobResponse": {
            "type": "object",
            "properties": {
                "ComprehendMedicalAsyncJobProperties": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobProperties"
                }
            }
        },
        "ComprehendMedicalAsyncJobProperties": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "JobStatus": {
                    "$ref": "#/$defs/JobStatus"
                },
                "Message": {
                    "$ref": "#/$defs/AnyLengthString"
                },
                "SubmitTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ExpirationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "InputDataConfig": {
                    "$ref": "#/$defs/InputDataConfig"
                },
                "OutputDataConfig": {
                    "$ref": "#/$defs/OutputDataConfig"
                },
                "LanguageCode": {
                    "$ref": "#/$defs/LanguageCode"
                },
                "DataAccessRoleArn": {
                    "$ref": "#/$defs/IamRoleArn"
                },
                "ManifestFilePath": {
                    "$ref": "#/$defs/ManifestFilePath"
                },
                "KMSKey": {
                    "$ref": "#/$defs/KMSKey"
                },
                "ModelVersion": {
                    "$ref": "#/$defs/ModelVersion"
                }
            }
        },
        "JobId": {
            "type": "string"
        },
        "JobName": {
            "type": "string"
        },
        "JobStatus": {
            "enum": [
                "SUBMITTED",
                "IN_PROGRESS",
                "COMPLETED",
                "PARTIAL_SUCCESS",
                "FAILED",
                "STOP_REQUESTED",
                "STOPPED"
            ]
        },
        "AnyLengthString": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "InputDataConfig": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "S3Key": {
                    "$ref": "#/$defs/S3Key"
                }
            }
        },
        "S3Bucket": {
            "type": "string"
        },
        "S3Key": {
            "type": "string"
        },
        "OutputDataConfig": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "S3Key": {
                    "$ref": "#/$defs/S3Key"
                }
            }
        },
        "LanguageCode": {
            "enum": [
                "EN"
            ]
        },
        "IamRoleArn": {
            "type": "string"
        },
        "ManifestFilePath": {
            "type": "string"
        },
        "KMSKey": {
            "type": "string"
        },
        "ModelVersion": {
            "type": "string"
        },
        "DescribeEntitiesDetectionV2JobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "DescribeICD10CMInferenceJobResponse": {
            "type": "object",
            "properties": {
                "ComprehendMedicalAsyncJobProperties": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobProperties"
                }
            }
        },
        "DescribeICD10CMInferenceJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "DescribePHIDetectionJobResponse": {
            "type": "object",
            "properties": {
                "ComprehendMedicalAsyncJobProperties": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobProperties"
                }
            }
        },
        "DescribePHIDetectionJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "DescribeRxNormInferenceJobResponse": {
            "type": "object",
            "properties": {
                "ComprehendMedicalAsyncJobProperties": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobProperties"
                }
            }
        },
        "DescribeRxNormInferenceJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "DescribeSNOMEDCTInferenceJobResponse": {
            "type": "object",
            "properties": {
                "ComprehendMedicalAsyncJobProperties": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobProperties"
                }
            }
        },
        "DescribeSNOMEDCTInferenceJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "DetectEntitiesResponse": {
            "type": "object",
            "properties": {
                "Entities": {
                    "$ref": "#/$defs/EntityList"
                },
                "UnmappedAttributes": {
                    "$ref": "#/$defs/UnmappedAttributeList"
                },
                "PaginationToken": {
                    "$ref": "#/$defs/String"
                },
                "ModelVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EntityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Entity"
            }
        },
        "Entity": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Integer"
                },
                "BeginOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "EndOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                },
                "Text": {
                    "$ref": "#/$defs/String"
                },
                "Category": {
                    "$ref": "#/$defs/EntityType"
                },
                "Type": {
                    "$ref": "#/$defs/EntitySubType"
                },
                "Traits": {
                    "$ref": "#/$defs/TraitList"
                },
                "Attributes": {
                    "$ref": "#/$defs/AttributeList"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "Float": {
            "type": "number",
            "format": "float"
        },
        "String": {
            "type": "string"
        },
        "EntityType": {
            "enum": [
                "MEDICATION",
                "MEDICAL_CONDITION",
                "PROTECTED_HEALTH_INFORMATION",
                "TEST_TREATMENT_PROCEDURE",
                "ANATOMY",
                "TIME_EXPRESSION",
                "BEHAVIORAL_ENVIRONMENTAL_SOCIAL"
            ]
        },
        "EntitySubType": {
            "enum": [
                "NAME",
                "DX_NAME",
                "DOSAGE",
                "ROUTE_OR_MODE",
                "FORM",
                "FREQUENCY",
                "DURATION",
                "GENERIC_NAME",
                "BRAND_NAME",
                "STRENGTH",
                "RATE",
                "ACUITY",
                "TEST_NAME",
                "TEST_VALUE",
                "TEST_UNITS",
                "TEST_UNIT",
                "PROCEDURE_NAME",
                "TREATMENT_NAME",
                "DATE",
                "AGE",
                "CONTACT_POINT",
                "PHONE_OR_FAX",
                "EMAIL",
                "IDENTIFIER",
                "ID",
                "URL",
                "ADDRESS",
                "PROFESSION",
                "SYSTEM_ORGAN_SITE",
                "DIRECTION",
                "QUALITY",
                "QUANTITY",
                "TIME_EXPRESSION",
                "TIME_TO_MEDICATION_NAME",
                "TIME_TO_DX_NAME",
                "TIME_TO_TEST_NAME",
                "TIME_TO_PROCEDURE_NAME",
                "TIME_TO_TREATMENT_NAME",
                "AMOUNT",
                "GENDER",
                "RACE_ETHNICITY",
                "ALLERGIES",
                "TOBACCO_USE",
                "ALCOHOL_CONSUMPTION",
                "REC_DRUG_USE"
            ]
        },
        "TraitList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Trait"
            }
        },
        "Trait": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/AttributeName"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                }
            }
        },
        "AttributeName": {
            "enum": [
                "SIGN",
                "SYMPTOM",
                "DIAGNOSIS",
                "NEGATION",
                "PERTAINS_TO_FAMILY",
                "HYPOTHETICAL",
                "LOW_CONFIDENCE",
                "PAST_HISTORY",
                "FUTURE"
            ]
        },
        "AttributeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Attribute"
            }
        },
        "Attribute": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/EntitySubType"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                },
                "RelationshipScore": {
                    "$ref": "#/$defs/Float"
                },
                "RelationshipType": {
                    "$ref": "#/$defs/RelationshipType"
                },
                "Id": {
                    "$ref": "#/$defs/Integer"
                },
                "BeginOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "EndOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "Text": {
                    "$ref": "#/$defs/String"
                },
                "Category": {
                    "$ref": "#/$defs/EntityType"
                },
                "Traits": {
                    "$ref": "#/$defs/TraitList"
                }
            }
        },
        "RelationshipType": {
            "enum": [
                "EVERY",
                "WITH_DOSAGE",
                "ADMINISTERED_VIA",
                "FOR",
                "NEGATIVE",
                "OVERLAP",
                "DOSAGE",
                "ROUTE_OR_MODE",
                "FORM",
                "FREQUENCY",
                "DURATION",
                "STRENGTH",
                "RATE",
                "ACUITY",
                "TEST_VALUE",
                "TEST_UNITS",
                "TEST_UNIT",
                "DIRECTION",
                "SYSTEM_ORGAN_SITE",
                "AMOUNT",
                "USAGE",
                "QUALITY"
            ]
        },
        "UnmappedAttributeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnmappedAttribute"
            }
        },
        "UnmappedAttribute": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/EntityType"
                },
                "Attribute": {
                    "$ref": "#/$defs/Attribute"
                }
            }
        },
        "DetectEntitiesRequest": {
            "type": "object",
            "properties": {
                "Text": {
                    "$ref": "#/$defs/BoundedLengthString"
                }
            }
        },
        "BoundedLengthString": {
            "type": "string"
        },
        "DetectEntitiesV2Response": {
            "type": "object",
            "properties": {
                "Entities": {
                    "$ref": "#/$defs/EntityList"
                },
                "UnmappedAttributes": {
                    "$ref": "#/$defs/UnmappedAttributeList"
                },
                "PaginationToken": {
                    "$ref": "#/$defs/String"
                },
                "ModelVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DetectEntitiesV2Request": {
            "type": "object",
            "properties": {
                "Text": {
                    "$ref": "#/$defs/BoundedLengthString"
                }
            }
        },
        "DetectPHIResponse": {
            "type": "object",
            "properties": {
                "Entities": {
                    "$ref": "#/$defs/EntityList"
                },
                "PaginationToken": {
                    "$ref": "#/$defs/String"
                },
                "ModelVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DetectPHIRequest": {
            "type": "object",
            "properties": {
                "Text": {
                    "$ref": "#/$defs/BoundedLengthString"
                }
            }
        },
        "InferICD10CMResponse": {
            "type": "object",
            "properties": {
                "Entities": {
                    "$ref": "#/$defs/ICD10CMEntityList"
                },
                "PaginationToken": {
                    "$ref": "#/$defs/String"
                },
                "ModelVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ICD10CMEntityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ICD10CMEntity"
            }
        },
        "ICD10CMEntity": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Integer"
                },
                "Text": {
                    "$ref": "#/$defs/OntologyLinkingBoundedLengthString"
                },
                "Category": {
                    "$ref": "#/$defs/ICD10CMEntityCategory"
                },
                "Type": {
                    "$ref": "#/$defs/ICD10CMEntityType"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                },
                "BeginOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "EndOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "Attributes": {
                    "$ref": "#/$defs/ICD10CMAttributeList"
                },
                "Traits": {
                    "$ref": "#/$defs/ICD10CMTraitList"
                },
                "ICD10CMConcepts": {
                    "$ref": "#/$defs/ICD10CMConceptList"
                }
            }
        },
        "OntologyLinkingBoundedLengthString": {
            "type": "string"
        },
        "ICD10CMEntityCategory": {
            "enum": [
                "MEDICAL_CONDITION"
            ]
        },
        "ICD10CMEntityType": {
            "enum": [
                "DX_NAME",
                "TIME_EXPRESSION"
            ]
        },
        "ICD10CMAttributeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ICD10CMAttribute"
            }
        },
        "ICD10CMAttribute": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ICD10CMAttributeType"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                },
                "RelationshipScore": {
                    "$ref": "#/$defs/Float"
                },
                "Id": {
                    "$ref": "#/$defs/Integer"
                },
                "BeginOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "EndOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "Text": {
                    "$ref": "#/$defs/String"
                },
                "Traits": {
                    "$ref": "#/$defs/ICD10CMTraitList"
                },
                "Category": {
                    "$ref": "#/$defs/ICD10CMEntityType"
                },
                "RelationshipType": {
                    "$ref": "#/$defs/ICD10CMRelationshipType"
                }
            }
        },
        "ICD10CMAttributeType": {
            "enum": [
                "ACUITY",
                "DIRECTION",
                "SYSTEM_ORGAN_SITE",
                "QUALITY",
                "QUANTITY",
                "TIME_TO_DX_NAME",
                "TIME_EXPRESSION"
            ]
        },
        "ICD10CMTraitList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ICD10CMTrait"
            }
        },
        "ICD10CMTrait": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ICD10CMTraitName"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                }
            }
        },
        "ICD10CMTraitName": {
            "enum": [
                "NEGATION",
                "DIAGNOSIS",
                "SIGN",
                "SYMPTOM",
                "PERTAINS_TO_FAMILY",
                "HYPOTHETICAL",
                "LOW_CONFIDENCE"
            ]
        },
        "ICD10CMRelationshipType": {
            "enum": [
                "OVERLAP",
                "SYSTEM_ORGAN_SITE",
                "QUALITY"
            ]
        },
        "ICD10CMConceptList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ICD10CMConcept"
            }
        },
        "ICD10CMConcept": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                }
            }
        },
        "InferICD10CMRequest": {
            "type": "object",
            "properties": {
                "Text": {
                    "$ref": "#/$defs/OntologyLinkingBoundedLengthString"
                }
            }
        },
        "InferRxNormResponse": {
            "type": "object",
            "properties": {
                "Entities": {
                    "$ref": "#/$defs/RxNormEntityList"
                },
                "PaginationToken": {
                    "$ref": "#/$defs/String"
                },
                "ModelVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RxNormEntityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RxNormEntity"
            }
        },
        "RxNormEntity": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Integer"
                },
                "Text": {
                    "$ref": "#/$defs/OntologyLinkingBoundedLengthString"
                },
                "Category": {
                    "$ref": "#/$defs/RxNormEntityCategory"
                },
                "Type": {
                    "$ref": "#/$defs/RxNormEntityType"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                },
                "BeginOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "EndOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "Attributes": {
                    "$ref": "#/$defs/RxNormAttributeList"
                },
                "Traits": {
                    "$ref": "#/$defs/RxNormTraitList"
                },
                "RxNormConcepts": {
                    "$ref": "#/$defs/RxNormConceptList"
                }
            }
        },
        "RxNormEntityCategory": {
            "enum": [
                "MEDICATION"
            ]
        },
        "RxNormEntityType": {
            "enum": [
                "BRAND_NAME",
                "GENERIC_NAME"
            ]
        },
        "RxNormAttributeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RxNormAttribute"
            }
        },
        "RxNormAttribute": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/RxNormAttributeType"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                },
                "RelationshipScore": {
                    "$ref": "#/$defs/Float"
                },
                "Id": {
                    "$ref": "#/$defs/Integer"
                },
                "BeginOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "EndOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "Text": {
                    "$ref": "#/$defs/String"
                },
                "Traits": {
                    "$ref": "#/$defs/RxNormTraitList"
                }
            }
        },
        "RxNormAttributeType": {
            "enum": [
                "DOSAGE",
                "DURATION",
                "FORM",
                "FREQUENCY",
                "RATE",
                "ROUTE_OR_MODE",
                "STRENGTH"
            ]
        },
        "RxNormTraitList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RxNormTrait"
            }
        },
        "RxNormTrait": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RxNormTraitName"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                }
            }
        },
        "RxNormTraitName": {
            "enum": [
                "NEGATION",
                "PAST_HISTORY"
            ]
        },
        "RxNormConceptList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RxNormConcept"
            }
        },
        "RxNormConcept": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                }
            }
        },
        "InferRxNormRequest": {
            "type": "object",
            "properties": {
                "Text": {
                    "$ref": "#/$defs/OntologyLinkingBoundedLengthString"
                }
            }
        },
        "InferSNOMEDCTResponse": {
            "type": "object",
            "properties": {
                "Entities": {
                    "$ref": "#/$defs/SNOMEDCTEntityList"
                },
                "PaginationToken": {
                    "$ref": "#/$defs/String"
                },
                "ModelVersion": {
                    "$ref": "#/$defs/String"
                },
                "SNOMEDCTDetails": {
                    "$ref": "#/$defs/SNOMEDCTDetails"
                },
                "Characters": {
                    "$ref": "#/$defs/Characters"
                }
            }
        },
        "SNOMEDCTEntityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SNOMEDCTEntity"
            }
        },
        "SNOMEDCTEntity": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Integer"
                },
                "Text": {
                    "$ref": "#/$defs/OntologyLinkingBoundedLengthString"
                },
                "Category": {
                    "$ref": "#/$defs/SNOMEDCTEntityCategory"
                },
                "Type": {
                    "$ref": "#/$defs/SNOMEDCTEntityType"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                },
                "BeginOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "EndOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "Attributes": {
                    "$ref": "#/$defs/SNOMEDCTAttributeList"
                },
                "Traits": {
                    "$ref": "#/$defs/SNOMEDCTTraitList"
                },
                "SNOMEDCTConcepts": {
                    "$ref": "#/$defs/SNOMEDCTConceptList"
                }
            }
        },
        "SNOMEDCTEntityCategory": {
            "enum": [
                "MEDICAL_CONDITION",
                "ANATOMY",
                "TEST_TREATMENT_PROCEDURE"
            ]
        },
        "SNOMEDCTEntityType": {
            "enum": [
                "DX_NAME",
                "TEST_NAME",
                "PROCEDURE_NAME",
                "TREATMENT_NAME"
            ]
        },
        "SNOMEDCTAttributeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SNOMEDCTAttribute"
            }
        },
        "SNOMEDCTAttribute": {
            "type": "object",
            "properties": {
                "Category": {
                    "$ref": "#/$defs/SNOMEDCTEntityCategory"
                },
                "Type": {
                    "$ref": "#/$defs/SNOMEDCTAttributeType"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                },
                "RelationshipScore": {
                    "$ref": "#/$defs/Float"
                },
                "RelationshipType": {
                    "$ref": "#/$defs/SNOMEDCTRelationshipType"
                },
                "Id": {
                    "$ref": "#/$defs/Integer"
                },
                "BeginOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "EndOffset": {
                    "$ref": "#/$defs/Integer"
                },
                "Text": {
                    "$ref": "#/$defs/String"
                },
                "Traits": {
                    "$ref": "#/$defs/SNOMEDCTTraitList"
                },
                "SNOMEDCTConcepts": {
                    "$ref": "#/$defs/SNOMEDCTConceptList"
                }
            }
        },
        "SNOMEDCTAttributeType": {
            "enum": [
                "ACUITY",
                "QUALITY",
                "DIRECTION",
                "SYSTEM_ORGAN_SITE",
                "TEST_VALUE",
                "TEST_UNIT"
            ]
        },
        "SNOMEDCTRelationshipType": {
            "enum": [
                "ACUITY",
                "QUALITY",
                "TEST_VALUE",
                "TEST_UNITS",
                "DIRECTION",
                "SYSTEM_ORGAN_SITE",
                "TEST_UNIT"
            ]
        },
        "SNOMEDCTTraitList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SNOMEDCTTrait"
            }
        },
        "SNOMEDCTTrait": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/SNOMEDCTTraitName"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                }
            }
        },
        "SNOMEDCTTraitName": {
            "enum": [
                "NEGATION",
                "DIAGNOSIS",
                "SIGN",
                "SYMPTOM",
                "PERTAINS_TO_FAMILY",
                "HYPOTHETICAL",
                "LOW_CONFIDENCE",
                "PAST_HISTORY",
                "FUTURE"
            ]
        },
        "SNOMEDCTConceptList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SNOMEDCTConcept"
            }
        },
        "SNOMEDCTConcept": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Score": {
                    "$ref": "#/$defs/Float"
                }
            }
        },
        "SNOMEDCTDetails": {
            "type": "object",
            "properties": {
                "Edition": {
                    "$ref": "#/$defs/String"
                },
                "Language": {
                    "$ref": "#/$defs/String"
                },
                "VersionDate": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Characters": {
            "type": "object",
            "properties": {
                "OriginalTextCharacters": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "InferSNOMEDCTRequest": {
            "type": "object",
            "properties": {
                "Text": {
                    "$ref": "#/$defs/OntologyLinkingBoundedLengthString"
                }
            }
        },
        "ListEntitiesDetectionV2JobsResponse": {
            "type": "object",
            "properties": {
                "ComprehendMedicalAsyncJobPropertiesList": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobPropertiesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ComprehendMedicalAsyncJobPropertiesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ComprehendMedicalAsyncJobProperties"
            }
        },
        "ListEntitiesDetectionV2JobsRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobFilter"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsInteger"
                }
            }
        },
        "ComprehendMedicalAsyncJobFilter": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "JobStatus": {
                    "$ref": "#/$defs/JobStatus"
                },
                "SubmitTimeBefore": {
                    "$ref": "#/$defs/Timestamp"
                },
                "SubmitTimeAfter": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "MaxResultsInteger": {
            "type": "integer",
            "format": "int32"
        },
        "ListICD10CMInferenceJobsResponse": {
            "type": "object",
            "properties": {
                "ComprehendMedicalAsyncJobPropertiesList": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobPropertiesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListICD10CMInferenceJobsRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobFilter"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsInteger"
                }
            }
        },
        "ListPHIDetectionJobsResponse": {
            "type": "object",
            "properties": {
                "ComprehendMedicalAsyncJobPropertiesList": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobPropertiesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListPHIDetectionJobsRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobFilter"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsInteger"
                }
            }
        },
        "ListRxNormInferenceJobsResponse": {
            "type": "object",
            "properties": {
                "ComprehendMedicalAsyncJobPropertiesList": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobPropertiesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListRxNormInferenceJobsRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobFilter"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsInteger"
                }
            }
        },
        "ListSNOMEDCTInferenceJobsResponse": {
            "type": "object",
            "properties": {
                "ComprehendMedicalAsyncJobPropertiesList": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobPropertiesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListSNOMEDCTInferenceJobsRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/ComprehendMedicalAsyncJobFilter"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsInteger"
                }
            }
        },
        "StartEntitiesDetectionV2JobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartEntitiesDetectionV2JobRequest": {
            "type": "object",
            "properties": {
                "InputDataConfig": {
                    "$ref": "#/$defs/InputDataConfig"
                },
                "OutputDataConfig": {
                    "$ref": "#/$defs/OutputDataConfig"
                },
                "DataAccessRoleArn": {
                    "$ref": "#/$defs/IamRoleArn"
                },
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestTokenString"
                },
                "KMSKey": {
                    "$ref": "#/$defs/KMSKey"
                },
                "LanguageCode": {
                    "$ref": "#/$defs/LanguageCode"
                }
            }
        },
        "ClientRequestTokenString": {
            "type": "string"
        },
        "StartICD10CMInferenceJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartICD10CMInferenceJobRequest": {
            "type": "object",
            "properties": {
                "InputDataConfig": {
                    "$ref": "#/$defs/InputDataConfig"
                },
                "OutputDataConfig": {
                    "$ref": "#/$defs/OutputDataConfig"
                },
                "DataAccessRoleArn": {
                    "$ref": "#/$defs/IamRoleArn"
                },
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestTokenString"
                },
                "KMSKey": {
                    "$ref": "#/$defs/KMSKey"
                },
                "LanguageCode": {
                    "$ref": "#/$defs/LanguageCode"
                }
            }
        },
        "StartPHIDetectionJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartPHIDetectionJobRequest": {
            "type": "object",
            "properties": {
                "InputDataConfig": {
                    "$ref": "#/$defs/InputDataConfig"
                },
                "OutputDataConfig": {
                    "$ref": "#/$defs/OutputDataConfig"
                },
                "DataAccessRoleArn": {
                    "$ref": "#/$defs/IamRoleArn"
                },
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestTokenString"
                },
                "KMSKey": {
                    "$ref": "#/$defs/KMSKey"
                },
                "LanguageCode": {
                    "$ref": "#/$defs/LanguageCode"
                }
            }
        },
        "StartRxNormInferenceJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartRxNormInferenceJobRequest": {
            "type": "object",
            "properties": {
                "InputDataConfig": {
                    "$ref": "#/$defs/InputDataConfig"
                },
                "OutputDataConfig": {
                    "$ref": "#/$defs/OutputDataConfig"
                },
                "DataAccessRoleArn": {
                    "$ref": "#/$defs/IamRoleArn"
                },
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestTokenString"
                },
                "KMSKey": {
                    "$ref": "#/$defs/KMSKey"
                },
                "LanguageCode": {
                    "$ref": "#/$defs/LanguageCode"
                }
            }
        },
        "StartSNOMEDCTInferenceJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartSNOMEDCTInferenceJobRequest": {
            "type": "object",
            "properties": {
                "InputDataConfig": {
                    "$ref": "#/$defs/InputDataConfig"
                },
                "OutputDataConfig": {
                    "$ref": "#/$defs/OutputDataConfig"
                },
                "DataAccessRoleArn": {
                    "$ref": "#/$defs/IamRoleArn"
                },
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestTokenString"
                },
                "KMSKey": {
                    "$ref": "#/$defs/KMSKey"
                },
                "LanguageCode": {
                    "$ref": "#/$defs/LanguageCode"
                }
            }
        },
        "StopEntitiesDetectionV2JobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StopEntitiesDetectionV2JobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StopICD10CMInferenceJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StopICD10CMInferenceJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StopPHIDetectionJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StopPHIDetectionJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StopRxNormInferenceJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StopRxNormInferenceJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StopSNOMEDCTInferenceJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StopSNOMEDCTInferenceJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://comprehendmedical-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://comprehendmedical-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://comprehendmedical.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://comprehendmedical.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}