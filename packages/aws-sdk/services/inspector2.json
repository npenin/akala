{
    "name": "inspector2",
    "commands": [
        {
            "name": "AssociateMember",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/members/associate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateMemberResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateMemberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "BatchGetAccountStatus",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/status/batch/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetAccountStatusResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetAccountStatusRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "BatchGetCodeSnippet",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/codesnippet/batchget"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetCodeSnippetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetCodeSnippetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "BatchGetFindingDetails",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/findings/details/batch/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetFindingDetailsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetFindingDetailsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "BatchGetFreeTrialInfo",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/freetrialinfo/batchget"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetFreeTrialInfoResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetFreeTrialInfoRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "BatchGetMemberEc2DeepInspectionStatus",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ec2deepinspectionstatus/member/batch/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetMemberEc2DeepInspectionStatusResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetMemberEc2DeepInspectionStatusRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "BatchUpdateMemberEc2DeepInspectionStatus",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ec2deepinspectionstatus/member/batch/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchUpdateMemberEc2DeepInspectionStatusResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchUpdateMemberEc2DeepInspectionStatusRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CancelFindingsReport",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/reporting/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelFindingsReportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelFindingsReportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "CancelSbomExport",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/sbomexport/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelSbomExportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelSbomExportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateCisScanConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/cis/scan-configuration/create"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCisScanConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCisScanConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateFilter",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/filters/create"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFilterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "CreateFindingsReport",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/reporting/create"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFindingsReportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFindingsReportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "CreateSbomExport",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/sbomexport/create"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSbomExportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSbomExportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteCisScanConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/cis/scan-configuration/delete"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCisScanConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCisScanConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteFilter",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/filters/delete"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFilterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "DescribeOrganizationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/organizationconfiguration/describe"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeOrganizationConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeOrganizationConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "Disable",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/disable"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "DisableDelegatedAdminAccount",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/delegatedadminaccounts/disable"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableDelegatedAdminAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableDelegatedAdminAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "DisassociateMember",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/members/disassociate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateMemberResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateMemberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "Enable",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/enable"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "EnableDelegatedAdminAccount",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/delegatedadminaccounts/enable"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableDelegatedAdminAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableDelegatedAdminAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "GetCisScanReport",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/cis/scan/report/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCisScanReportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCisScanReportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetCisScanResultDetails",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/cis/scan-result/details/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCisScanResultDetailsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCisScanResultDetailsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/configuration/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "GetDelegatedAdminAccount",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/delegatedadminaccounts/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDelegatedAdminAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDelegatedAdminAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "GetEc2DeepInspectionConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ec2deepinspectionconfiguration/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEc2DeepInspectionConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEc2DeepInspectionConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetEncryptionKey",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/encryptionkey/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEncryptionKeyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEncryptionKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetFindingsReportStatus",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/reporting/status/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFindingsReportStatusResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFindingsReportStatusRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "GetMember",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/members/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMemberResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMemberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "GetSbomExport",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/sbomexport/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSbomExportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSbomExportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListAccountPermissions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/accountpermissions/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAccountPermissionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAccountPermissionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "ListCisScanConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/cis/scan-configuration/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCisScanConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCisScanConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCisScanResultsAggregatedByChecks",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/cis/scan-result/check/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCisScanResultsAggregatedByChecksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCisScanResultsAggregatedByChecksRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCisScanResultsAggregatedByTargetResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/cis/scan-result/resource/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCisScanResultsAggregatedByTargetResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCisScanResultsAggregatedByTargetResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCisScans",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/cis/scan/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCisScansResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCisScansRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCoverage",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/coverage/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCoverageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCoverageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "ListCoverageStatistics",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/coverage/statistics/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCoverageStatisticsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCoverageStatisticsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "ListDelegatedAdminAccounts",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/delegatedadminaccounts/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDelegatedAdminAccountsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDelegatedAdminAccountsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "ListFilters",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/filters/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFiltersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFiltersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "ListFindingAggregations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/findings/aggregation/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFindingAggregationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFindingAggregationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "ListFindings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/findings/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFindingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFindingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "ListMembers",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/members/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMembersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMembersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "ListUsageTotals",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/usage/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListUsageTotalsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListUsageTotalsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "ResetEncryptionKey",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/encryptionkey/reset"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetEncryptionKeyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetEncryptionKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "SearchVulnerabilities",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/vulnerabilities/search"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchVulnerabilitiesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchVulnerabilitiesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "SendCisSessionHealth",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/cissession/health/send"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendCisSessionHealthResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendCisSessionHealthRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "SendCisSessionTelemetry",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/cissession/telemetry/send"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendCisSessionTelemetryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendCisSessionTelemetryRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartCisSession",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/cissession/start"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartCisSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartCisSessionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StopCisSession",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/cissession/stop"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopCisSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopCisSessionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "UpdateCisScanConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/cis/scan-configuration/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCisScanConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCisScanConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/configuration/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "UpdateEc2DeepInspectionConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ec2deepinspectionconfiguration/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEc2DeepInspectionConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateEc2DeepInspectionConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateEncryptionKey",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/encryptionkey/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEncryptionKeyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateEncryptionKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateFilter",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/filters/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFilterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "UpdateOrganizationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/organizationconfiguration/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateOrganizationConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateOrganizationConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {}
                    }
                }
            }
        },
        {
            "name": "UpdateOrgEc2DeepInspectionConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ec2deepinspectionconfiguration/org/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateOrgEc2DeepInspectionConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateOrgEc2DeepInspectionConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateMemberResponse": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "AccountId": {
            "type": "string"
        },
        "AssociateMemberRequest": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "BatchGetAccountStatusResponse": {
            "type": "object",
            "properties": {
                "accounts": {
                    "$ref": "#/$defs/AccountStateList"
                },
                "failedAccounts": {
                    "$ref": "#/$defs/FailedAccountList"
                }
            }
        },
        "AccountStateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountState"
            }
        },
        "AccountState": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "state": {
                    "$ref": "#/$defs/State"
                },
                "resourceState": {
                    "$ref": "#/$defs/ResourceState"
                }
            }
        },
        "State": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "errorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "Status": {
            "type": "string"
        },
        "ErrorCode": {
            "type": "string"
        },
        "NonEmptyString": {
            "type": "string"
        },
        "ResourceState": {
            "type": "object",
            "properties": {
                "ec2": {
                    "$ref": "#/$defs/State"
                },
                "ecr": {
                    "$ref": "#/$defs/State"
                },
                "lambda": {
                    "$ref": "#/$defs/State"
                },
                "lambdaCode": {
                    "$ref": "#/$defs/State"
                }
            }
        },
        "FailedAccountList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FailedAccount"
            }
        },
        "FailedAccount": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "resourceStatus": {
                    "$ref": "#/$defs/ResourceStatus"
                },
                "errorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "ResourceStatus": {
            "type": "object",
            "properties": {
                "ec2": {
                    "$ref": "#/$defs/Status"
                },
                "ecr": {
                    "$ref": "#/$defs/Status"
                },
                "lambda": {
                    "$ref": "#/$defs/Status"
                },
                "lambdaCode": {
                    "$ref": "#/$defs/Status"
                }
            }
        },
        "BatchGetAccountStatusRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIdSet"
                }
            }
        },
        "AccountIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountId"
            }
        },
        "BatchGetCodeSnippetResponse": {
            "type": "object",
            "properties": {
                "codeSnippetResults": {
                    "$ref": "#/$defs/CodeSnippetResultList"
                },
                "errors": {
                    "$ref": "#/$defs/CodeSnippetErrorList"
                }
            }
        },
        "CodeSnippetResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CodeSnippetResult"
            }
        },
        "CodeSnippetResult": {
            "type": "object",
            "properties": {
                "findingArn": {
                    "$ref": "#/$defs/FindingArn"
                },
                "startLine": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "endLine": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "codeSnippet": {
                    "$ref": "#/$defs/CodeLineList"
                },
                "suggestedFixes": {
                    "$ref": "#/$defs/SuggestedFixes"
                }
            }
        },
        "FindingArn": {
            "type": "string"
        },
        "CodeLineList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CodeLine"
            }
        },
        "CodeLine": {
            "type": "object",
            "properties": {
                "content": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "lineNumber": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "SuggestedFixes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SuggestedFix"
            }
        },
        "SuggestedFix": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "code": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "CodeSnippetErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CodeSnippetError"
            }
        },
        "CodeSnippetError": {
            "type": "object",
            "properties": {
                "findingArn": {
                    "$ref": "#/$defs/FindingArn"
                },
                "errorCode": {
                    "$ref": "#/$defs/CodeSnippetErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "CodeSnippetErrorCode": {
            "type": "string"
        },
        "BatchGetCodeSnippetRequest": {
            "type": "object",
            "properties": {
                "findingArns": {
                    "$ref": "#/$defs/FindingArns"
                }
            }
        },
        "FindingArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FindingArn"
            }
        },
        "BatchGetFindingDetailsResponse": {
            "type": "object",
            "properties": {
                "findingDetails": {
                    "$ref": "#/$defs/FindingDetails"
                },
                "errors": {
                    "$ref": "#/$defs/FindingDetailsErrorList"
                }
            }
        },
        "FindingDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FindingDetail"
            }
        },
        "FindingDetail": {
            "type": "object",
            "properties": {
                "findingArn": {
                    "$ref": "#/$defs/FindingArn"
                },
                "cisaData": {
                    "$ref": "#/$defs/CisaData"
                },
                "riskScore": {
                    "$ref": "#/$defs/RiskScore"
                },
                "evidences": {
                    "$ref": "#/$defs/EvidenceList"
                },
                "ttps": {
                    "$ref": "#/$defs/Ttps"
                },
                "tools": {
                    "$ref": "#/$defs/Tools"
                },
                "exploitObserved": {
                    "$ref": "#/$defs/ExploitObserved"
                },
                "referenceUrls": {
                    "$ref": "#/$defs/VulnerabilityReferenceUrls"
                },
                "cwes": {
                    "$ref": "#/$defs/Cwes"
                },
                "epssScore": {
                    "$ref": "#/$defs/smithy.api#Double"
                }
            }
        },
        "CisaData": {
            "type": "object",
            "properties": {
                "dateAdded": {
                    "$ref": "#/$defs/CisaDateAdded"
                },
                "dateDue": {
                    "$ref": "#/$defs/CisaDateDue"
                },
                "action": {
                    "$ref": "#/$defs/CisaAction"
                }
            }
        },
        "CisaDateAdded": {
            "type": "string",
            "format": "date-time"
        },
        "CisaDateDue": {
            "type": "string",
            "format": "date-time"
        },
        "CisaAction": {
            "type": "string"
        },
        "RiskScore": {
            "type": "integer",
            "format": "int32"
        },
        "EvidenceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Evidence"
            }
        },
        "Evidence": {
            "type": "object",
            "properties": {
                "evidenceRule": {
                    "$ref": "#/$defs/EvidenceRule"
                },
                "evidenceDetail": {
                    "$ref": "#/$defs/EvidenceDetail"
                },
                "severity": {
                    "$ref": "#/$defs/EvidenceSeverity"
                }
            }
        },
        "EvidenceRule": {
            "type": "string"
        },
        "EvidenceDetail": {
            "type": "string"
        },
        "EvidenceSeverity": {
            "type": "string"
        },
        "Ttps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ttp"
            }
        },
        "Ttp": {
            "type": "string"
        },
        "Tools": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tool"
            }
        },
        "Tool": {
            "type": "string"
        },
        "ExploitObserved": {
            "type": "object",
            "properties": {
                "lastSeen": {
                    "$ref": "#/$defs/LastSeen"
                },
                "firstSeen": {
                    "$ref": "#/$defs/FirstSeen"
                }
            }
        },
        "LastSeen": {
            "type": "string",
            "format": "date-time"
        },
        "FirstSeen": {
            "type": "string",
            "format": "date-time"
        },
        "VulnerabilityReferenceUrls": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VulnerabilityReferenceUrl"
            }
        },
        "VulnerabilityReferenceUrl": {
            "type": "string"
        },
        "Cwes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Cwe"
            }
        },
        "Cwe": {
            "type": "string"
        },
        "FindingDetailsErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FindingDetailsError"
            }
        },
        "FindingDetailsError": {
            "type": "object",
            "properties": {
                "findingArn": {
                    "$ref": "#/$defs/FindingArn"
                },
                "errorCode": {
                    "$ref": "#/$defs/FindingDetailsErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "FindingDetailsErrorCode": {
            "type": "string"
        },
        "BatchGetFindingDetailsRequest": {
            "type": "object",
            "properties": {
                "findingArns": {
                    "$ref": "#/$defs/FindingArnList"
                }
            }
        },
        "FindingArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FindingArn"
            }
        },
        "BatchGetFreeTrialInfoResponse": {
            "type": "object",
            "properties": {
                "accounts": {
                    "$ref": "#/$defs/FreeTrialAccountInfoList"
                },
                "failedAccounts": {
                    "$ref": "#/$defs/FreeTrialInfoErrorList"
                }
            }
        },
        "FreeTrialAccountInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FreeTrialAccountInfo"
            }
        },
        "FreeTrialAccountInfo": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/MeteringAccountId"
                },
                "freeTrialInfo": {
                    "$ref": "#/$defs/FreeTrialInfoList"
                }
            }
        },
        "MeteringAccountId": {
            "type": "string"
        },
        "FreeTrialInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FreeTrialInfo"
            }
        },
        "FreeTrialInfo": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/FreeTrialType"
                },
                "start": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "end": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/FreeTrialStatus"
                }
            }
        },
        "FreeTrialType": {
            "type": "string"
        },
        "FreeTrialStatus": {
            "type": "string"
        },
        "FreeTrialInfoErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FreeTrialInfoError"
            }
        },
        "FreeTrialInfoError": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/MeteringAccountId"
                },
                "code": {
                    "$ref": "#/$defs/FreeTrialInfoErrorCode"
                },
                "message": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "FreeTrialInfoErrorCode": {
            "type": "string"
        },
        "BatchGetFreeTrialInfoRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/MeteringAccountIdList"
                }
            }
        },
        "MeteringAccountIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MeteringAccountId"
            }
        },
        "BatchGetMemberEc2DeepInspectionStatusResponse": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/MemberAccountEc2DeepInspectionStatusStateList"
                },
                "failedAccountIds": {
                    "$ref": "#/$defs/FailedMemberAccountEc2DeepInspectionStatusStateList"
                }
            }
        },
        "MemberAccountEc2DeepInspectionStatusStateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MemberAccountEc2DeepInspectionStatusState"
            }
        },
        "MemberAccountEc2DeepInspectionStatusState": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "status": {
                    "$ref": "#/$defs/Ec2DeepInspectionStatus"
                },
                "errorMessage": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "Ec2DeepInspectionStatus": {
            "type": "string"
        },
        "FailedMemberAccountEc2DeepInspectionStatusStateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FailedMemberAccountEc2DeepInspectionStatusState"
            }
        },
        "FailedMemberAccountEc2DeepInspectionStatusState": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ec2ScanStatus": {
                    "$ref": "#/$defs/Status"
                },
                "errorMessage": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "BatchGetMemberEc2DeepInspectionStatusRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIdSet"
                }
            }
        },
        "BatchUpdateMemberEc2DeepInspectionStatusResponse": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/MemberAccountEc2DeepInspectionStatusStateList"
                },
                "failedAccountIds": {
                    "$ref": "#/$defs/FailedMemberAccountEc2DeepInspectionStatusStateList"
                }
            }
        },
        "BatchUpdateMemberEc2DeepInspectionStatusRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/MemberAccountEc2DeepInspectionStatusList"
                }
            }
        },
        "MemberAccountEc2DeepInspectionStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MemberAccountEc2DeepInspectionStatus"
            }
        },
        "MemberAccountEc2DeepInspectionStatus": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "activateDeepInspection": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "CancelFindingsReportResponse": {
            "type": "object",
            "properties": {
                "reportId": {
                    "$ref": "#/$defs/ReportId"
                }
            }
        },
        "ReportId": {
            "type": "string"
        },
        "CancelFindingsReportRequest": {
            "type": "object",
            "properties": {
                "reportId": {
                    "$ref": "#/$defs/ReportId"
                }
            }
        },
        "CancelSbomExportResponse": {
            "type": "object",
            "properties": {
                "reportId": {
                    "$ref": "#/$defs/ReportId"
                }
            }
        },
        "CancelSbomExportRequest": {
            "type": "object",
            "properties": {
                "reportId": {
                    "$ref": "#/$defs/ReportId"
                }
            }
        },
        "CreateCisScanConfigurationResponse": {
            "type": "object",
            "properties": {
                "scanConfigurationArn": {
                    "$ref": "#/$defs/CisScanConfigurationArn"
                }
            }
        },
        "CisScanConfigurationArn": {
            "type": "string"
        },
        "CreateCisScanConfigurationRequest": {
            "type": "object",
            "properties": {
                "scanName": {
                    "$ref": "#/$defs/CisScanName"
                },
                "securityLevel": {
                    "$ref": "#/$defs/CisSecurityLevel"
                },
                "schedule": {
                    "$ref": "#/$defs/Schedule"
                },
                "targets": {
                    "$ref": "#/$defs/CreateCisTargets"
                },
                "tags": {
                    "$ref": "#/$defs/CisTagMap"
                }
            }
        },
        "CisScanName": {
            "type": "string"
        },
        "CisSecurityLevel": {
            "enum": [
                "LEVEL_1",
                "LEVEL_2"
            ]
        },
        "Schedule": {
            "type": "object",
            "properties": {
                "oneTime": {
                    "$ref": "#/$defs/OneTimeSchedule"
                },
                "daily": {
                    "$ref": "#/$defs/DailySchedule"
                },
                "weekly": {
                    "$ref": "#/$defs/WeeklySchedule"
                },
                "monthly": {
                    "$ref": "#/$defs/MonthlySchedule"
                }
            }
        },
        "OneTimeSchedule": {
            "type": "object",
            "properties": {}
        },
        "DailySchedule": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/Time"
                }
            }
        },
        "Time": {
            "type": "object",
            "properties": {
                "timeOfDay": {
                    "$ref": "#/$defs/TimeOfDay"
                },
                "timezone": {
                    "$ref": "#/$defs/Timezone"
                }
            }
        },
        "TimeOfDay": {
            "type": "string"
        },
        "Timezone": {
            "type": "string"
        },
        "WeeklySchedule": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/Time"
                },
                "days": {
                    "$ref": "#/$defs/DaysList"
                }
            }
        },
        "DaysList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Day"
            }
        },
        "Day": {
            "enum": [
                "SUN",
                "MON",
                "TUE",
                "WED",
                "THU",
                "FRI",
                "SAT"
            ]
        },
        "MonthlySchedule": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/Time"
                },
                "day": {
                    "$ref": "#/$defs/Day"
                }
            }
        },
        "CreateCisTargets": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/TargetAccountList"
                },
                "targetResourceTags": {
                    "$ref": "#/$defs/TargetResourceTags"
                }
            }
        },
        "TargetAccountList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetAccount"
            }
        },
        "TargetAccount": {
            "type": "string"
        },
        "TargetResourceTags": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValueList"
            }
        },
        "TagValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetResourceTagsValue"
            }
        },
        "TargetResourceTagsValue": {
            "type": "string"
        },
        "CisTagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MapValue"
            }
        },
        "MapValue": {
            "type": "string"
        },
        "CreateFilterResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/FilterArn"
                }
            }
        },
        "FilterArn": {
            "type": "string"
        },
        "CreateFilterRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/$defs/FilterAction"
                },
                "description": {
                    "$ref": "#/$defs/FilterDescription"
                },
                "filterCriteria": {
                    "$ref": "#/$defs/FilterCriteria"
                },
                "name": {
                    "$ref": "#/$defs/FilterName"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "reason": {
                    "$ref": "#/$defs/FilterReason"
                }
            }
        },
        "FilterAction": {
            "type": "string"
        },
        "FilterDescription": {
            "type": "string"
        },
        "FilterCriteria": {
            "type": "object",
            "properties": {
                "findingArn": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "awsAccountId": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "findingType": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "severity": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "firstObservedAt": {
                    "$ref": "#/$defs/DateFilterList"
                },
                "lastObservedAt": {
                    "$ref": "#/$defs/DateFilterList"
                },
                "updatedAt": {
                    "$ref": "#/$defs/DateFilterList"
                },
                "findingStatus": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "title": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "inspectorScore": {
                    "$ref": "#/$defs/NumberFilterList"
                },
                "resourceType": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "resourceId": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "resourceTags": {
                    "$ref": "#/$defs/MapFilterList"
                },
                "ec2InstanceImageId": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "ec2InstanceVpcId": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "ec2InstanceSubnetId": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "ecrImagePushedAt": {
                    "$ref": "#/$defs/DateFilterList"
                },
                "ecrImageArchitecture": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "ecrImageRegistry": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "ecrImageRepositoryName": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "ecrImageTags": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "ecrImageHash": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "portRange": {
                    "$ref": "#/$defs/PortRangeFilterList"
                },
                "networkProtocol": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "componentId": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "componentType": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "vulnerabilityId": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "vulnerabilitySource": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "vendorSeverity": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "vulnerablePackages": {
                    "$ref": "#/$defs/PackageFilterList"
                },
                "relatedVulnerabilities": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "fixAvailable": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "lambdaFunctionName": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "lambdaFunctionLayers": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "lambdaFunctionRuntime": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "lambdaFunctionLastModifiedAt": {
                    "$ref": "#/$defs/DateFilterList"
                },
                "lambdaFunctionExecutionRoleArn": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "exploitAvailable": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "codeVulnerabilityDetectorName": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "codeVulnerabilityDetectorTags": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "codeVulnerabilityFilePath": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "epssScore": {
                    "$ref": "#/$defs/NumberFilterList"
                }
            }
        },
        "StringFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StringFilter"
            }
        },
        "StringFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/StringComparison"
                },
                "value": {
                    "$ref": "#/$defs/StringInput"
                }
            }
        },
        "StringComparison": {
            "type": "string"
        },
        "StringInput": {
            "type": "string"
        },
        "DateFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DateFilter"
            }
        },
        "DateFilter": {
            "type": "object",
            "properties": {
                "startInclusive": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "endInclusive": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                }
            }
        },
        "NumberFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NumberFilter"
            }
        },
        "NumberFilter": {
            "type": "object",
            "properties": {
                "upperInclusive": {
                    "$ref": "#/$defs/smithy.api#Double"
                },
                "lowerInclusive": {
                    "$ref": "#/$defs/smithy.api#Double"
                }
            }
        },
        "MapFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MapFilter"
            }
        },
        "MapFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/MapComparison"
                },
                "key": {
                    "$ref": "#/$defs/MapKey"
                },
                "value": {
                    "$ref": "#/$defs/MapValue"
                }
            }
        },
        "MapComparison": {
            "type": "string"
        },
        "MapKey": {
            "type": "string"
        },
        "PortRangeFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PortRangeFilter"
            }
        },
        "PortRangeFilter": {
            "type": "object",
            "properties": {
                "beginInclusive": {
                    "$ref": "#/$defs/Port"
                },
                "endInclusive": {
                    "$ref": "#/$defs/Port"
                }
            }
        },
        "Port": {
            "type": "integer",
            "format": "int32"
        },
        "PackageFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackageFilter"
            }
        },
        "PackageFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/StringFilter"
                },
                "version": {
                    "$ref": "#/$defs/StringFilter"
                },
                "epoch": {
                    "$ref": "#/$defs/NumberFilter"
                },
                "release": {
                    "$ref": "#/$defs/StringFilter"
                },
                "architecture": {
                    "$ref": "#/$defs/StringFilter"
                },
                "sourceLayerHash": {
                    "$ref": "#/$defs/StringFilter"
                },
                "sourceLambdaLayerArn": {
                    "$ref": "#/$defs/StringFilter"
                }
            }
        },
        "FilterName": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MapValue"
            }
        },
        "FilterReason": {
            "type": "string"
        },
        "CreateFindingsReportResponse": {
            "type": "object",
            "properties": {
                "reportId": {
                    "$ref": "#/$defs/ReportId"
                }
            }
        },
        "CreateFindingsReportRequest": {
            "type": "object",
            "properties": {
                "filterCriteria": {
                    "$ref": "#/$defs/FilterCriteria"
                },
                "reportFormat": {
                    "$ref": "#/$defs/ReportFormat"
                },
                "s3Destination": {
                    "$ref": "#/$defs/Destination"
                }
            }
        },
        "ReportFormat": {
            "type": "string"
        },
        "Destination": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "keyPrefix": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "kmsKeyArn": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "CreateSbomExportResponse": {
            "type": "object",
            "properties": {
                "reportId": {
                    "$ref": "#/$defs/ReportId"
                }
            }
        },
        "CreateSbomExportRequest": {
            "type": "object",
            "properties": {
                "resourceFilterCriteria": {
                    "$ref": "#/$defs/ResourceFilterCriteria"
                },
                "reportFormat": {
                    "$ref": "#/$defs/SbomReportFormat"
                },
                "s3Destination": {
                    "$ref": "#/$defs/Destination"
                }
            }
        },
        "ResourceFilterCriteria": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/ResourceStringFilterList"
                },
                "resourceId": {
                    "$ref": "#/$defs/ResourceStringFilterList"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceStringFilterList"
                },
                "ecrRepositoryName": {
                    "$ref": "#/$defs/ResourceStringFilterList"
                },
                "lambdaFunctionName": {
                    "$ref": "#/$defs/ResourceStringFilterList"
                },
                "ecrImageTags": {
                    "$ref": "#/$defs/ResourceStringFilterList"
                },
                "ec2InstanceTags": {
                    "$ref": "#/$defs/ResourceMapFilterList"
                },
                "lambdaFunctionTags": {
                    "$ref": "#/$defs/ResourceMapFilterList"
                }
            }
        },
        "ResourceStringFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceStringFilter"
            }
        },
        "ResourceStringFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/ResourceStringComparison"
                },
                "value": {
                    "$ref": "#/$defs/ResourceStringInput"
                }
            }
        },
        "ResourceStringComparison": {
            "type": "string"
        },
        "ResourceStringInput": {
            "type": "string"
        },
        "ResourceMapFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceMapFilter"
            }
        },
        "ResourceMapFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/ResourceMapComparison"
                },
                "key": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "value": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "ResourceMapComparison": {
            "type": "string"
        },
        "SbomReportFormat": {
            "type": "string"
        },
        "DeleteCisScanConfigurationResponse": {
            "type": "object",
            "properties": {
                "scanConfigurationArn": {
                    "$ref": "#/$defs/CisScanConfigurationArn"
                }
            }
        },
        "DeleteCisScanConfigurationRequest": {
            "type": "object",
            "properties": {
                "scanConfigurationArn": {
                    "$ref": "#/$defs/CisScanConfigurationArn"
                }
            }
        },
        "DeleteFilterResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/FilterArn"
                }
            }
        },
        "DeleteFilterRequest": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/FilterArn"
                }
            }
        },
        "DescribeOrganizationConfigurationResponse": {
            "type": "object",
            "properties": {
                "autoEnable": {
                    "$ref": "#/$defs/AutoEnable"
                },
                "maxAccountLimitReached": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "AutoEnable": {
            "type": "object",
            "properties": {
                "ec2": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "ecr": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "lambda": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "lambdaCode": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "DescribeOrganizationConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "DisableResponse": {
            "type": "object",
            "properties": {
                "accounts": {
                    "$ref": "#/$defs/AccountList"
                },
                "failedAccounts": {
                    "$ref": "#/$defs/FailedAccountList"
                }
            }
        },
        "AccountList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Account"
            }
        },
        "Account": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "resourceStatus": {
                    "$ref": "#/$defs/ResourceStatus"
                }
            }
        },
        "DisableRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIdSet"
                },
                "resourceTypes": {
                    "$ref": "#/$defs/DisableResourceTypeList"
                }
            }
        },
        "DisableResourceTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceScanType"
            }
        },
        "ResourceScanType": {
            "type": "string"
        },
        "DisableDelegatedAdminAccountResponse": {
            "type": "object",
            "properties": {
                "delegatedAdminAccountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DisableDelegatedAdminAccountRequest": {
            "type": "object",
            "properties": {
                "delegatedAdminAccountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DisassociateMemberResponse": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DisassociateMemberRequest": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "EnableResponse": {
            "type": "object",
            "properties": {
                "accounts": {
                    "$ref": "#/$defs/AccountList"
                },
                "failedAccounts": {
                    "$ref": "#/$defs/FailedAccountList"
                }
            }
        },
        "EnableRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIdSet"
                },
                "resourceTypes": {
                    "$ref": "#/$defs/EnableResourceTypeList"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "EnableResourceTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceScanType"
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "EnableDelegatedAdminAccountResponse": {
            "type": "object",
            "properties": {
                "delegatedAdminAccountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "EnableDelegatedAdminAccountRequest": {
            "type": "object",
            "properties": {
                "delegatedAdminAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "GetCisScanReportResponse": {
            "type": "object",
            "properties": {
                "url": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "status": {
                    "$ref": "#/$defs/CisReportStatus"
                }
            }
        },
        "CisReportStatus": {
            "enum": [
                "SUCCEEDED",
                "FAILED",
                "IN_PROGRESS"
            ]
        },
        "GetCisScanReportRequest": {
            "type": "object",
            "properties": {
                "scanArn": {
                    "$ref": "#/$defs/CisScanArn"
                },
                "targetAccounts": {
                    "$ref": "#/$defs/ReportTargetAccounts"
                },
                "reportFormat": {
                    "$ref": "#/$defs/CisReportFormat"
                }
            }
        },
        "CisScanArn": {
            "type": "string"
        },
        "ReportTargetAccounts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountId"
            }
        },
        "CisReportFormat": {
            "enum": [
                "PDF",
                "CSV"
            ]
        },
        "GetCisScanResultDetailsResponse": {
            "type": "object",
            "properties": {
                "scanResultDetails": {
                    "$ref": "#/$defs/CisScanResultDetailsList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "CisScanResultDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisScanResultDetails"
            }
        },
        "CisScanResultDetails": {
            "type": "object",
            "properties": {
                "scanArn": {
                    "$ref": "#/$defs/CisScanArn"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "targetResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "platform": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "status": {
                    "$ref": "#/$defs/CisFindingStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "checkId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "title": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "checkDescription": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "remediation": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "level": {
                    "$ref": "#/$defs/CisSecurityLevel"
                },
                "findingArn": {
                    "$ref": "#/$defs/CisFindingArn"
                }
            }
        },
        "ResourceId": {
            "type": "string"
        },
        "CisFindingStatus": {
            "enum": [
                "PASSED",
                "FAILED",
                "SKIPPED"
            ]
        },
        "CisFindingArn": {
            "type": "string"
        },
        "NextToken": {
            "type": "string"
        },
        "GetCisScanResultDetailsRequest": {
            "type": "object",
            "properties": {
                "scanArn": {
                    "$ref": "#/$defs/CisScanArn"
                },
                "targetResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "filterCriteria": {
                    "$ref": "#/$defs/CisScanResultDetailsFilterCriteria"
                },
                "sortBy": {
                    "$ref": "#/$defs/CisScanResultDetailsSortBy"
                },
                "sortOrder": {
                    "$ref": "#/$defs/CisSortOrder"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/GetCisScanResultDetailsMaxResults"
                }
            }
        },
        "CisScanResultDetailsFilterCriteria": {
            "type": "object",
            "properties": {
                "findingStatusFilters": {
                    "$ref": "#/$defs/CisFindingStatusFilterList"
                },
                "checkIdFilters": {
                    "$ref": "#/$defs/CheckIdFilterList"
                },
                "titleFilters": {
                    "$ref": "#/$defs/TitleFilterList"
                },
                "securityLevelFilters": {
                    "$ref": "#/$defs/CisSecurityLevelFilterList"
                },
                "findingArnFilters": {
                    "$ref": "#/$defs/CisFindingArnFilterList"
                }
            }
        },
        "CisFindingStatusFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisFindingStatusFilter"
            }
        },
        "CisFindingStatusFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/CisFindingStatusComparison"
                },
                "value": {
                    "$ref": "#/$defs/CisFindingStatus"
                }
            }
        },
        "CisFindingStatusComparison": {
            "enum": [
                "EQUALS"
            ]
        },
        "CheckIdFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisStringFilter"
            }
        },
        "CisStringFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/CisStringComparison"
                },
                "value": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "CisStringComparison": {
            "enum": [
                "EQUALS",
                "PREFIX",
                "NOT_EQUALS"
            ]
        },
        "TitleFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisStringFilter"
            }
        },
        "CisSecurityLevelFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisSecurityLevelFilter"
            }
        },
        "CisSecurityLevelFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/CisSecurityLevelComparison"
                },
                "value": {
                    "$ref": "#/$defs/CisSecurityLevel"
                }
            }
        },
        "CisSecurityLevelComparison": {
            "enum": [
                "EQUALS"
            ]
        },
        "CisFindingArnFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisStringFilter"
            }
        },
        "CisScanResultDetailsSortBy": {
            "enum": [
                "CHECK_ID",
                "STATUS"
            ]
        },
        "CisSortOrder": {
            "enum": [
                "ASC",
                "DESC"
            ]
        },
        "GetCisScanResultDetailsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetConfigurationResponse": {
            "type": "object",
            "properties": {
                "ecrConfiguration": {
                    "$ref": "#/$defs/EcrConfigurationState"
                },
                "ec2Configuration": {
                    "$ref": "#/$defs/Ec2ConfigurationState"
                }
            }
        },
        "EcrConfigurationState": {
            "type": "object",
            "properties": {
                "rescanDurationState": {
                    "$ref": "#/$defs/EcrRescanDurationState"
                }
            }
        },
        "EcrRescanDurationState": {
            "type": "object",
            "properties": {
                "rescanDuration": {
                    "$ref": "#/$defs/EcrRescanDuration"
                },
                "status": {
                    "$ref": "#/$defs/EcrRescanDurationStatus"
                },
                "updatedAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                },
                "pullDateRescanDuration": {
                    "$ref": "#/$defs/EcrPullDateRescanDuration"
                }
            }
        },
        "EcrRescanDuration": {
            "type": "string"
        },
        "EcrRescanDurationStatus": {
            "type": "string"
        },
        "DateTimeTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "EcrPullDateRescanDuration": {
            "type": "string"
        },
        "Ec2ConfigurationState": {
            "type": "object",
            "properties": {
                "scanModeState": {
                    "$ref": "#/$defs/Ec2ScanModeState"
                }
            }
        },
        "Ec2ScanModeState": {
            "type": "object",
            "properties": {
                "scanMode": {
                    "$ref": "#/$defs/Ec2ScanMode"
                },
                "scanModeStatus": {
                    "$ref": "#/$defs/Ec2ScanModeStatus"
                }
            }
        },
        "Ec2ScanMode": {
            "type": "string"
        },
        "Ec2ScanModeStatus": {
            "type": "string"
        },
        "GetConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "GetDelegatedAdminAccountResponse": {
            "type": "object",
            "properties": {
                "delegatedAdmin": {
                    "$ref": "#/$defs/DelegatedAdmin"
                }
            }
        },
        "DelegatedAdmin": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "relationshipStatus": {
                    "$ref": "#/$defs/RelationshipStatus"
                }
            }
        },
        "RelationshipStatus": {
            "type": "string"
        },
        "GetDelegatedAdminAccountRequest": {
            "type": "object",
            "properties": {}
        },
        "GetEc2DeepInspectionConfigurationResponse": {
            "type": "object",
            "properties": {
                "packagePaths": {
                    "$ref": "#/$defs/PathList"
                },
                "orgPackagePaths": {
                    "$ref": "#/$defs/PathList"
                },
                "status": {
                    "$ref": "#/$defs/Ec2DeepInspectionStatus"
                },
                "errorMessage": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "PathList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Path"
            }
        },
        "Path": {
            "type": "string"
        },
        "GetEc2DeepInspectionConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "GetEncryptionKeyResponse": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyArn"
                }
            }
        },
        "KmsKeyArn": {
            "type": "string"
        },
        "GetEncryptionKeyRequest": {
            "type": "object",
            "properties": {
                "scanType": {
                    "$ref": "#/$defs/ScanType"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "ScanType": {
            "type": "string"
        },
        "ResourceType": {
            "type": "string"
        },
        "GetFindingsReportStatusResponse": {
            "type": "object",
            "properties": {
                "reportId": {
                    "$ref": "#/$defs/ReportId"
                },
                "status": {
                    "$ref": "#/$defs/ExternalReportStatus"
                },
                "errorCode": {
                    "$ref": "#/$defs/ReportingErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "destination": {
                    "$ref": "#/$defs/Destination"
                },
                "filterCriteria": {
                    "$ref": "#/$defs/FilterCriteria"
                }
            }
        },
        "ExternalReportStatus": {
            "type": "string"
        },
        "ReportingErrorCode": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "GetFindingsReportStatusRequest": {
            "type": "object",
            "properties": {
                "reportId": {
                    "$ref": "#/$defs/ReportId"
                }
            }
        },
        "GetMemberResponse": {
            "type": "object",
            "properties": {
                "member": {
                    "$ref": "#/$defs/Member"
                }
            }
        },
        "Member": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "relationshipStatus": {
                    "$ref": "#/$defs/RelationshipStatus"
                },
                "delegatedAdminAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "updatedAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                }
            }
        },
        "GetMemberRequest": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetSbomExportResponse": {
            "type": "object",
            "properties": {
                "reportId": {
                    "$ref": "#/$defs/ReportId"
                },
                "format": {
                    "$ref": "#/$defs/SbomReportFormat"
                },
                "status": {
                    "$ref": "#/$defs/ExternalReportStatus"
                },
                "errorCode": {
                    "$ref": "#/$defs/ReportingErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "s3Destination": {
                    "$ref": "#/$defs/Destination"
                },
                "filterCriteria": {
                    "$ref": "#/$defs/ResourceFilterCriteria"
                }
            }
        },
        "GetSbomExportRequest": {
            "type": "object",
            "properties": {
                "reportId": {
                    "$ref": "#/$defs/ReportId"
                }
            }
        },
        "ListAccountPermissionsResponse": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/$defs/Permissions"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Permissions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Permission"
            }
        },
        "Permission": {
            "type": "object",
            "properties": {
                "service": {
                    "$ref": "#/$defs/Service"
                },
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "Service": {
            "type": "string"
        },
        "Operation": {
            "type": "string"
        },
        "ListAccountPermissionsRequest": {
            "type": "object",
            "properties": {
                "service": {
                    "$ref": "#/$defs/Service"
                },
                "maxResults": {
                    "$ref": "#/$defs/ListAccountPermissionsMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListAccountPermissionsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListCisScanConfigurationsResponse": {
            "type": "object",
            "properties": {
                "scanConfigurations": {
                    "$ref": "#/$defs/CisScanConfigurationList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "CisScanConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisScanConfiguration"
            }
        },
        "CisScanConfiguration": {
            "type": "object",
            "properties": {
                "scanConfigurationArn": {
                    "$ref": "#/$defs/CisScanConfigurationArn"
                },
                "ownerId": {
                    "$ref": "#/$defs/CisOwnerId"
                },
                "scanName": {
                    "$ref": "#/$defs/CisScanName"
                },
                "securityLevel": {
                    "$ref": "#/$defs/CisSecurityLevel"
                },
                "schedule": {
                    "$ref": "#/$defs/Schedule"
                },
                "targets": {
                    "$ref": "#/$defs/CisTargets"
                },
                "tags": {
                    "$ref": "#/$defs/CisTagMap"
                }
            }
        },
        "CisOwnerId": {
            "type": "string"
        },
        "CisTargets": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/CisAccountIdList"
                },
                "targetResourceTags": {
                    "$ref": "#/$defs/TargetResourceTags"
                }
            }
        },
        "CisAccountIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountId"
            }
        },
        "ListCisScanConfigurationsRequest": {
            "type": "object",
            "properties": {
                "filterCriteria": {
                    "$ref": "#/$defs/ListCisScanConfigurationsFilterCriteria"
                },
                "sortBy": {
                    "$ref": "#/$defs/CisScanConfigurationsSortBy"
                },
                "sortOrder": {
                    "$ref": "#/$defs/CisSortOrder"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ListCisScanConfigurationsMaxResults"
                }
            }
        },
        "ListCisScanConfigurationsFilterCriteria": {
            "type": "object",
            "properties": {
                "scanNameFilters": {
                    "$ref": "#/$defs/CisScanNameFilterList"
                },
                "targetResourceTagFilters": {
                    "$ref": "#/$defs/ResourceTagFilterList"
                },
                "scanConfigurationArnFilters": {
                    "$ref": "#/$defs/CisScanConfigurationArnFilterList"
                }
            }
        },
        "CisScanNameFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisStringFilter"
            }
        },
        "ResourceTagFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagFilter"
            }
        },
        "TagFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/TagComparison"
                },
                "key": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "value": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "TagComparison": {
            "enum": [
                "EQUALS"
            ]
        },
        "CisScanConfigurationArnFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisStringFilter"
            }
        },
        "CisScanConfigurationsSortBy": {
            "enum": [
                "SCAN_NAME",
                "SCAN_CONFIGURATION_ARN"
            ]
        },
        "ListCisScanConfigurationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListCisScanResultsAggregatedByChecksResponse": {
            "type": "object",
            "properties": {
                "checkAggregations": {
                    "$ref": "#/$defs/CisCheckAggregationList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "CisCheckAggregationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisCheckAggregation"
            }
        },
        "CisCheckAggregation": {
            "type": "object",
            "properties": {
                "scanArn": {
                    "$ref": "#/$defs/CisScanArn"
                },
                "checkId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "title": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "checkDescription": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "level": {
                    "$ref": "#/$defs/CisSecurityLevel"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "statusCounts": {
                    "$ref": "#/$defs/StatusCounts"
                },
                "platform": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "StatusCounts": {
            "type": "object",
            "properties": {
                "failed": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "skipped": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "passed": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "ListCisScanResultsAggregatedByChecksRequest": {
            "type": "object",
            "properties": {
                "scanArn": {
                    "$ref": "#/$defs/CisScanArn"
                },
                "filterCriteria": {
                    "$ref": "#/$defs/CisScanResultsAggregatedByChecksFilterCriteria"
                },
                "sortBy": {
                    "$ref": "#/$defs/CisScanResultsAggregatedByChecksSortBy"
                },
                "sortOrder": {
                    "$ref": "#/$defs/CisSortOrder"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/CisScanResultsMaxResults"
                }
            }
        },
        "CisScanResultsAggregatedByChecksFilterCriteria": {
            "type": "object",
            "properties": {
                "accountIdFilters": {
                    "$ref": "#/$defs/OneAccountIdFilterList"
                },
                "checkIdFilters": {
                    "$ref": "#/$defs/CheckIdFilterList"
                },
                "titleFilters": {
                    "$ref": "#/$defs/TitleFilterList"
                },
                "platformFilters": {
                    "$ref": "#/$defs/PlatformFilterList"
                },
                "failedResourcesFilters": {
                    "$ref": "#/$defs/CisNumberFilterList"
                },
                "securityLevelFilters": {
                    "$ref": "#/$defs/CisSecurityLevelFilterList"
                }
            }
        },
        "OneAccountIdFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisStringFilter"
            }
        },
        "PlatformFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisStringFilter"
            }
        },
        "CisNumberFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisNumberFilter"
            }
        },
        "CisNumberFilter": {
            "type": "object",
            "properties": {
                "upperInclusive": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "lowerInclusive": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "CisScanResultsAggregatedByChecksSortBy": {
            "enum": [
                "CHECK_ID",
                "TITLE",
                "PLATFORM",
                "FAILED_COUNTS",
                "SECURITY_LEVEL"
            ]
        },
        "CisScanResultsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListCisScanResultsAggregatedByTargetResourceResponse": {
            "type": "object",
            "properties": {
                "targetResourceAggregations": {
                    "$ref": "#/$defs/CisTargetResourceAggregationList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "CisTargetResourceAggregationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisTargetResourceAggregation"
            }
        },
        "CisTargetResourceAggregation": {
            "type": "object",
            "properties": {
                "scanArn": {
                    "$ref": "#/$defs/CisScanArn"
                },
                "targetResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "targetResourceTags": {
                    "$ref": "#/$defs/TargetResourceTags"
                },
                "statusCounts": {
                    "$ref": "#/$defs/StatusCounts"
                },
                "platform": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "targetStatus": {
                    "$ref": "#/$defs/CisTargetStatus"
                },
                "targetStatusReason": {
                    "$ref": "#/$defs/CisTargetStatusReason"
                }
            }
        },
        "CisTargetStatus": {
            "enum": [
                "TIMED_OUT",
                "CANCELLED",
                "COMPLETED"
            ]
        },
        "CisTargetStatusReason": {
            "enum": [
                "SCAN_IN_PROGRESS",
                "UNSUPPORTED_OS",
                "SSM_UNMANAGED"
            ]
        },
        "ListCisScanResultsAggregatedByTargetResourceRequest": {
            "type": "object",
            "properties": {
                "scanArn": {
                    "$ref": "#/$defs/CisScanArn"
                },
                "filterCriteria": {
                    "$ref": "#/$defs/CisScanResultsAggregatedByTargetResourceFilterCriteria"
                },
                "sortBy": {
                    "$ref": "#/$defs/CisScanResultsAggregatedByTargetResourceSortBy"
                },
                "sortOrder": {
                    "$ref": "#/$defs/CisSortOrder"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/CisScanResultsMaxResults"
                }
            }
        },
        "CisScanResultsAggregatedByTargetResourceFilterCriteria": {
            "type": "object",
            "properties": {
                "accountIdFilters": {
                    "$ref": "#/$defs/AccountIdFilterList"
                },
                "statusFilters": {
                    "$ref": "#/$defs/CisResultStatusFilterList"
                },
                "checkIdFilters": {
                    "$ref": "#/$defs/CheckIdFilterList"
                },
                "targetResourceIdFilters": {
                    "$ref": "#/$defs/ResourceIdFilterList"
                },
                "targetResourceTagFilters": {
                    "$ref": "#/$defs/ResourceTagFilterList"
                },
                "platformFilters": {
                    "$ref": "#/$defs/PlatformFilterList"
                },
                "targetStatusFilters": {
                    "$ref": "#/$defs/TargetStatusFilterList"
                },
                "targetStatusReasonFilters": {
                    "$ref": "#/$defs/TargetStatusReasonFilterList"
                },
                "failedChecksFilters": {
                    "$ref": "#/$defs/CisNumberFilterList"
                }
            }
        },
        "AccountIdFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisStringFilter"
            }
        },
        "CisResultStatusFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisResultStatusFilter"
            }
        },
        "CisResultStatusFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/CisResultStatusComparison"
                },
                "value": {
                    "$ref": "#/$defs/CisResultStatus"
                }
            }
        },
        "CisResultStatusComparison": {
            "enum": [
                "EQUALS"
            ]
        },
        "CisResultStatus": {
            "enum": [
                "PASSED",
                "FAILED",
                "SKIPPED"
            ]
        },
        "ResourceIdFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisStringFilter"
            }
        },
        "TargetStatusFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisTargetStatusFilter"
            }
        },
        "CisTargetStatusFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/CisTargetStatusComparison"
                },
                "value": {
                    "$ref": "#/$defs/CisTargetStatus"
                }
            }
        },
        "CisTargetStatusComparison": {
            "enum": [
                "EQUALS"
            ]
        },
        "TargetStatusReasonFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisTargetStatusReasonFilter"
            }
        },
        "CisTargetStatusReasonFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/CisTargetStatusComparison"
                },
                "value": {
                    "$ref": "#/$defs/CisTargetStatusReason"
                }
            }
        },
        "CisScanResultsAggregatedByTargetResourceSortBy": {
            "enum": [
                "RESOURCE_ID",
                "FAILED_COUNTS",
                "ACCOUNT_ID",
                "PLATFORM",
                "TARGET_STATUS",
                "TARGET_STATUS_REASON"
            ]
        },
        "ListCisScansResponse": {
            "type": "object",
            "properties": {
                "scans": {
                    "$ref": "#/$defs/CisScanList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "CisScanList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisScan"
            }
        },
        "CisScan": {
            "type": "object",
            "properties": {
                "scanArn": {
                    "$ref": "#/$defs/CisScanArn"
                },
                "scanConfigurationArn": {
                    "$ref": "#/$defs/CisScanConfigurationArn"
                },
                "status": {
                    "$ref": "#/$defs/CisScanStatus"
                },
                "scanName": {
                    "$ref": "#/$defs/CisScanName"
                },
                "scanDate": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "failedChecks": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "totalChecks": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "targets": {
                    "$ref": "#/$defs/CisTargets"
                },
                "scheduledBy": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "securityLevel": {
                    "$ref": "#/$defs/CisSecurityLevel"
                }
            }
        },
        "CisScanStatus": {
            "enum": [
                "FAILED",
                "COMPLETED",
                "CANCELLED",
                "IN_PROGRESS"
            ]
        },
        "ListCisScansRequest": {
            "type": "object",
            "properties": {
                "filterCriteria": {
                    "$ref": "#/$defs/ListCisScansFilterCriteria"
                },
                "detailLevel": {
                    "$ref": "#/$defs/ListCisScansDetailLevel"
                },
                "sortBy": {
                    "$ref": "#/$defs/ListCisScansSortBy"
                },
                "sortOrder": {
                    "$ref": "#/$defs/CisSortOrder"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ListCisScansMaxResults"
                }
            }
        },
        "ListCisScansFilterCriteria": {
            "type": "object",
            "properties": {
                "scanNameFilters": {
                    "$ref": "#/$defs/CisScanNameFilterList"
                },
                "targetResourceTagFilters": {
                    "$ref": "#/$defs/ResourceTagFilterList"
                },
                "targetResourceIdFilters": {
                    "$ref": "#/$defs/ResourceIdFilterList"
                },
                "scanStatusFilters": {
                    "$ref": "#/$defs/CisScanStatusFilterList"
                },
                "scanAtFilters": {
                    "$ref": "#/$defs/CisScanDateFilterList"
                },
                "scanConfigurationArnFilters": {
                    "$ref": "#/$defs/CisScanConfigurationArnFilterList"
                },
                "scanArnFilters": {
                    "$ref": "#/$defs/CisScanArnFilterList"
                },
                "scheduledByFilters": {
                    "$ref": "#/$defs/CisScheduledByFilterList"
                },
                "failedChecksFilters": {
                    "$ref": "#/$defs/CisNumberFilterList"
                },
                "targetAccountIdFilters": {
                    "$ref": "#/$defs/AccountIdFilterList"
                }
            }
        },
        "CisScanStatusFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisScanStatusFilter"
            }
        },
        "CisScanStatusFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/CisScanStatusComparison"
                },
                "value": {
                    "$ref": "#/$defs/CisScanStatus"
                }
            }
        },
        "CisScanStatusComparison": {
            "enum": [
                "EQUALS"
            ]
        },
        "CisScanDateFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisDateFilter"
            }
        },
        "CisDateFilter": {
            "type": "object",
            "properties": {
                "earliestScanStartTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "latestScanStartTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                }
            }
        },
        "CisScanArnFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisStringFilter"
            }
        },
        "CisScheduledByFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisStringFilter"
            }
        },
        "ListCisScansDetailLevel": {
            "enum": [
                "ORGANIZATION",
                "MEMBER"
            ]
        },
        "ListCisScansSortBy": {
            "enum": [
                "STATUS",
                "SCHEDULED_BY",
                "SCAN_START_DATE",
                "FAILED_CHECKS"
            ]
        },
        "ListCisScansMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListCoverageResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "coveredResources": {
                    "$ref": "#/$defs/CoveredResources"
                }
            }
        },
        "CoveredResources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CoveredResource"
            }
        },
        "CoveredResource": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/CoverageResourceType"
                },
                "resourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "scanType": {
                    "$ref": "#/$defs/ScanType"
                },
                "scanStatus": {
                    "$ref": "#/$defs/ScanStatus"
                },
                "resourceMetadata": {
                    "$ref": "#/$defs/ResourceScanMetadata"
                },
                "lastScannedAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                },
                "scanMode": {
                    "$ref": "#/$defs/ScanMode"
                }
            }
        },
        "CoverageResourceType": {
            "type": "string"
        },
        "ScanStatus": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "$ref": "#/$defs/ScanStatusCode"
                },
                "reason": {
                    "$ref": "#/$defs/ScanStatusReason"
                }
            }
        },
        "ScanStatusCode": {
            "type": "string"
        },
        "ScanStatusReason": {
            "type": "string"
        },
        "ResourceScanMetadata": {
            "type": "object",
            "properties": {
                "ecrRepository": {
                    "$ref": "#/$defs/EcrRepositoryMetadata"
                },
                "ecrImage": {
                    "$ref": "#/$defs/EcrContainerImageMetadata"
                },
                "ec2": {
                    "$ref": "#/$defs/Ec2Metadata"
                },
                "lambdaFunction": {
                    "$ref": "#/$defs/LambdaFunctionMetadata"
                }
            }
        },
        "EcrRepositoryMetadata": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "scanFrequency": {
                    "$ref": "#/$defs/EcrScanFrequency"
                }
            }
        },
        "EcrScanFrequency": {
            "type": "string"
        },
        "EcrContainerImageMetadata": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "imagePulledAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "Ec2Metadata": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "amiId": {
                    "$ref": "#/$defs/AmiId"
                },
                "platform": {
                    "$ref": "#/$defs/Ec2Platform"
                }
            }
        },
        "AmiId": {
            "type": "string"
        },
        "Ec2Platform": {
            "type": "string"
        },
        "LambdaFunctionMetadata": {
            "type": "object",
            "properties": {
                "functionTags": {
                    "$ref": "#/$defs/TagMap"
                },
                "layers": {
                    "$ref": "#/$defs/LambdaLayerList"
                },
                "functionName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "runtime": {
                    "$ref": "#/$defs/Runtime"
                }
            }
        },
        "LambdaLayerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "Runtime": {
            "type": "string"
        },
        "ScanMode": {
            "type": "string"
        },
        "ListCoverageRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/ListCoverageMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "filterCriteria": {
                    "$ref": "#/$defs/CoverageFilterCriteria"
                }
            }
        },
        "ListCoverageMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "CoverageFilterCriteria": {
            "type": "object",
            "properties": {
                "scanStatusCode": {
                    "$ref": "#/$defs/CoverageStringFilterList"
                },
                "scanStatusReason": {
                    "$ref": "#/$defs/CoverageStringFilterList"
                },
                "accountId": {
                    "$ref": "#/$defs/CoverageStringFilterList"
                },
                "resourceId": {
                    "$ref": "#/$defs/CoverageStringFilterList"
                },
                "resourceType": {
                    "$ref": "#/$defs/CoverageStringFilterList"
                },
                "scanType": {
                    "$ref": "#/$defs/CoverageStringFilterList"
                },
                "ecrRepositoryName": {
                    "$ref": "#/$defs/CoverageStringFilterList"
                },
                "ecrImageTags": {
                    "$ref": "#/$defs/CoverageStringFilterList"
                },
                "ec2InstanceTags": {
                    "$ref": "#/$defs/CoverageMapFilterList"
                },
                "lambdaFunctionName": {
                    "$ref": "#/$defs/CoverageStringFilterList"
                },
                "lambdaFunctionTags": {
                    "$ref": "#/$defs/CoverageMapFilterList"
                },
                "lambdaFunctionRuntime": {
                    "$ref": "#/$defs/CoverageStringFilterList"
                },
                "lastScannedAt": {
                    "$ref": "#/$defs/CoverageDateFilterList"
                },
                "scanMode": {
                    "$ref": "#/$defs/CoverageStringFilterList"
                },
                "imagePulledAt": {
                    "$ref": "#/$defs/CoverageDateFilterList"
                }
            }
        },
        "CoverageStringFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CoverageStringFilter"
            }
        },
        "CoverageStringFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/CoverageStringComparison"
                },
                "value": {
                    "$ref": "#/$defs/CoverageStringInput"
                }
            }
        },
        "CoverageStringComparison": {
            "type": "string"
        },
        "CoverageStringInput": {
            "type": "string"
        },
        "CoverageMapFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CoverageMapFilter"
            }
        },
        "CoverageMapFilter": {
            "type": "object",
            "properties": {
                "comparison": {
                    "$ref": "#/$defs/CoverageMapComparison"
                },
                "key": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "value": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "CoverageMapComparison": {
            "type": "string"
        },
        "CoverageDateFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CoverageDateFilter"
            }
        },
        "CoverageDateFilter": {
            "type": "object",
            "properties": {
                "startInclusive": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                },
                "endInclusive": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                }
            }
        },
        "ListCoverageStatisticsResponse": {
            "type": "object",
            "properties": {
                "countsByGroup": {
                    "$ref": "#/$defs/CountsList"
                },
                "totalCounts": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "CountsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Counts"
            }
        },
        "Counts": {
            "type": "object",
            "properties": {
                "count": {
                    "$ref": "#/$defs/AggCounts"
                },
                "groupKey": {
                    "$ref": "#/$defs/GroupKey"
                }
            }
        },
        "AggCounts": {
            "type": "integer",
            "format": "int64"
        },
        "GroupKey": {
            "type": "string"
        },
        "ListCoverageStatisticsRequest": {
            "type": "object",
            "properties": {
                "filterCriteria": {
                    "$ref": "#/$defs/CoverageFilterCriteria"
                },
                "groupBy": {
                    "$ref": "#/$defs/GroupKey"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListDelegatedAdminAccountsResponse": {
            "type": "object",
            "properties": {
                "delegatedAdminAccounts": {
                    "$ref": "#/$defs/DelegatedAdminAccountList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DelegatedAdminAccountList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DelegatedAdminAccount"
            }
        },
        "DelegatedAdminAccount": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "status": {
                    "$ref": "#/$defs/DelegatedAdminStatus"
                }
            }
        },
        "DelegatedAdminStatus": {
            "type": "string"
        },
        "ListDelegatedAdminAccountsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/ListDelegatedAdminMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListDelegatedAdminMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListFiltersResponse": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "FilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/FilterArn"
                },
                "ownerId": {
                    "$ref": "#/$defs/OwnerId"
                },
                "name": {
                    "$ref": "#/$defs/FilterName"
                },
                "criteria": {
                    "$ref": "#/$defs/FilterCriteria"
                },
                "action": {
                    "$ref": "#/$defs/FilterAction"
                },
                "createdAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                },
                "description": {
                    "$ref": "#/$defs/FilterDescription"
                },
                "reason": {
                    "$ref": "#/$defs/FilterReason"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "OwnerId": {
            "type": "string"
        },
        "ListFiltersRequest": {
            "type": "object",
            "properties": {
                "arns": {
                    "$ref": "#/$defs/FilterArnList"
                },
                "action": {
                    "$ref": "#/$defs/FilterAction"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ListFilterMaxResults"
                }
            }
        },
        "FilterArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterArn"
            }
        },
        "ListFilterMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListFindingAggregationsResponse": {
            "type": "object",
            "properties": {
                "aggregationType": {
                    "$ref": "#/$defs/AggregationType"
                },
                "responses": {
                    "$ref": "#/$defs/AggregationResponseList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AggregationType": {
            "type": "string"
        },
        "AggregationResponseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AggregationResponse"
            }
        },
        "AggregationResponse": {
            "type": "object",
            "properties": {
                "accountAggregation": {
                    "$ref": "#/$defs/AccountAggregationResponse"
                },
                "amiAggregation": {
                    "$ref": "#/$defs/AmiAggregationResponse"
                },
                "awsEcrContainerAggregation": {
                    "$ref": "#/$defs/AwsEcrContainerAggregationResponse"
                },
                "ec2InstanceAggregation": {
                    "$ref": "#/$defs/Ec2InstanceAggregationResponse"
                },
                "findingTypeAggregation": {
                    "$ref": "#/$defs/FindingTypeAggregationResponse"
                },
                "imageLayerAggregation": {
                    "$ref": "#/$defs/ImageLayerAggregationResponse"
                },
                "packageAggregation": {
                    "$ref": "#/$defs/PackageAggregationResponse"
                },
                "repositoryAggregation": {
                    "$ref": "#/$defs/RepositoryAggregationResponse"
                },
                "titleAggregation": {
                    "$ref": "#/$defs/TitleAggregationResponse"
                },
                "lambdaLayerAggregation": {
                    "$ref": "#/$defs/LambdaLayerAggregationResponse"
                },
                "lambdaFunctionAggregation": {
                    "$ref": "#/$defs/LambdaFunctionAggregationResponse"
                }
            }
        },
        "AccountAggregationResponse": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "severityCounts": {
                    "$ref": "#/$defs/SeverityCounts"
                },
                "exploitAvailableCount": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "fixAvailableCount": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "SeverityCounts": {
            "type": "object",
            "properties": {
                "all": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "medium": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "high": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "critical": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "AmiAggregationResponse": {
            "type": "object",
            "properties": {
                "ami": {
                    "$ref": "#/$defs/AmiId"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "severityCounts": {
                    "$ref": "#/$defs/SeverityCounts"
                },
                "affectedInstances": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "AwsEcrContainerAggregationResponse": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "imageSha": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "repository": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "architecture": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "imageTags": {
                    "$ref": "#/$defs/StringList"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "severityCounts": {
                    "$ref": "#/$defs/SeverityCounts"
                }
            }
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonEmptyString"
            }
        },
        "Ec2InstanceAggregationResponse": {
            "type": "object",
            "properties": {
                "instanceId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "ami": {
                    "$ref": "#/$defs/AmiId"
                },
                "operatingSystem": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "instanceTags": {
                    "$ref": "#/$defs/TagMap"
                },
                "accountId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "severityCounts": {
                    "$ref": "#/$defs/SeverityCounts"
                },
                "networkFindings": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "FindingTypeAggregationResponse": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "severityCounts": {
                    "$ref": "#/$defs/SeverityCounts"
                },
                "exploitAvailableCount": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "fixAvailableCount": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "ImageLayerAggregationResponse": {
            "type": "object",
            "properties": {
                "repository": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "resourceId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "layerHash": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "severityCounts": {
                    "$ref": "#/$defs/SeverityCounts"
                }
            }
        },
        "PackageAggregationResponse": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "severityCounts": {
                    "$ref": "#/$defs/SeverityCounts"
                }
            }
        },
        "RepositoryAggregationResponse": {
            "type": "object",
            "properties": {
                "repository": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "severityCounts": {
                    "$ref": "#/$defs/SeverityCounts"
                },
                "affectedImages": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "TitleAggregationResponse": {
            "type": "object",
            "properties": {
                "title": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "vulnerabilityId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "severityCounts": {
                    "$ref": "#/$defs/SeverityCounts"
                }
            }
        },
        "LambdaLayerAggregationResponse": {
            "type": "object",
            "properties": {
                "functionName": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "resourceId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "layerArn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "severityCounts": {
                    "$ref": "#/$defs/SeverityCounts"
                }
            }
        },
        "LambdaFunctionAggregationResponse": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "functionName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "runtime": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "lambdaTags": {
                    "$ref": "#/$defs/TagMap"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "severityCounts": {
                    "$ref": "#/$defs/SeverityCounts"
                },
                "lastModifiedAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                }
            }
        },
        "ListFindingAggregationsRequest": {
            "type": "object",
            "properties": {
                "aggregationType": {
                    "$ref": "#/$defs/AggregationType"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ListFindingAggregationsMaxResults"
                },
                "accountIds": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "aggregationRequest": {
                    "$ref": "#/$defs/AggregationRequest"
                }
            }
        },
        "ListFindingAggregationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "AggregationRequest": {
            "type": "object",
            "properties": {
                "accountAggregation": {
                    "$ref": "#/$defs/AccountAggregation"
                },
                "amiAggregation": {
                    "$ref": "#/$defs/AmiAggregation"
                },
                "awsEcrContainerAggregation": {
                    "$ref": "#/$defs/AwsEcrContainerAggregation"
                },
                "ec2InstanceAggregation": {
                    "$ref": "#/$defs/Ec2InstanceAggregation"
                },
                "findingTypeAggregation": {
                    "$ref": "#/$defs/FindingTypeAggregation"
                },
                "imageLayerAggregation": {
                    "$ref": "#/$defs/ImageLayerAggregation"
                },
                "packageAggregation": {
                    "$ref": "#/$defs/PackageAggregation"
                },
                "repositoryAggregation": {
                    "$ref": "#/$defs/RepositoryAggregation"
                },
                "titleAggregation": {
                    "$ref": "#/$defs/TitleAggregation"
                },
                "lambdaLayerAggregation": {
                    "$ref": "#/$defs/LambdaLayerAggregation"
                },
                "lambdaFunctionAggregation": {
                    "$ref": "#/$defs/LambdaFunctionAggregation"
                }
            }
        },
        "AccountAggregation": {
            "type": "object",
            "properties": {
                "findingType": {
                    "$ref": "#/$defs/AggregationFindingType"
                },
                "resourceType": {
                    "$ref": "#/$defs/AggregationResourceType"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "sortBy": {
                    "$ref": "#/$defs/AccountSortBy"
                }
            }
        },
        "AggregationFindingType": {
            "type": "string"
        },
        "AggregationResourceType": {
            "type": "string"
        },
        "SortOrder": {
            "type": "string"
        },
        "AccountSortBy": {
            "type": "string"
        },
        "AmiAggregation": {
            "type": "object",
            "properties": {
                "amis": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "sortBy": {
                    "$ref": "#/$defs/AmiSortBy"
                }
            }
        },
        "AmiSortBy": {
            "type": "string"
        },
        "AwsEcrContainerAggregation": {
            "type": "object",
            "properties": {
                "resourceIds": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "imageShas": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "repositories": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "architectures": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "imageTags": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "sortBy": {
                    "$ref": "#/$defs/AwsEcrContainerSortBy"
                }
            }
        },
        "AwsEcrContainerSortBy": {
            "type": "string"
        },
        "Ec2InstanceAggregation": {
            "type": "object",
            "properties": {
                "amis": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "operatingSystems": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "instanceIds": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "instanceTags": {
                    "$ref": "#/$defs/MapFilterList"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "sortBy": {
                    "$ref": "#/$defs/Ec2InstanceSortBy"
                }
            }
        },
        "Ec2InstanceSortBy": {
            "type": "string"
        },
        "FindingTypeAggregation": {
            "type": "object",
            "properties": {
                "findingType": {
                    "$ref": "#/$defs/AggregationFindingType"
                },
                "resourceType": {
                    "$ref": "#/$defs/AggregationResourceType"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "sortBy": {
                    "$ref": "#/$defs/FindingTypeSortBy"
                }
            }
        },
        "FindingTypeSortBy": {
            "type": "string"
        },
        "ImageLayerAggregation": {
            "type": "object",
            "properties": {
                "repositories": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "resourceIds": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "layerHashes": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "sortBy": {
                    "$ref": "#/$defs/ImageLayerSortBy"
                }
            }
        },
        "ImageLayerSortBy": {
            "type": "string"
        },
        "PackageAggregation": {
            "type": "object",
            "properties": {
                "packageNames": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "sortBy": {
                    "$ref": "#/$defs/PackageSortBy"
                }
            }
        },
        "PackageSortBy": {
            "type": "string"
        },
        "RepositoryAggregation": {
            "type": "object",
            "properties": {
                "repositories": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "sortBy": {
                    "$ref": "#/$defs/RepositorySortBy"
                }
            }
        },
        "RepositorySortBy": {
            "type": "string"
        },
        "TitleAggregation": {
            "type": "object",
            "properties": {
                "titles": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "vulnerabilityIds": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "resourceType": {
                    "$ref": "#/$defs/AggregationResourceType"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "sortBy": {
                    "$ref": "#/$defs/TitleSortBy"
                },
                "findingType": {
                    "$ref": "#/$defs/AggregationFindingType"
                }
            }
        },
        "TitleSortBy": {
            "type": "string"
        },
        "LambdaLayerAggregation": {
            "type": "object",
            "properties": {
                "functionNames": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "resourceIds": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "layerArns": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "sortBy": {
                    "$ref": "#/$defs/LambdaLayerSortBy"
                }
            }
        },
        "LambdaLayerSortBy": {
            "type": "string"
        },
        "LambdaFunctionAggregation": {
            "type": "object",
            "properties": {
                "resourceIds": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "functionNames": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "runtimes": {
                    "$ref": "#/$defs/StringFilterList"
                },
                "functionTags": {
                    "$ref": "#/$defs/MapFilterList"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "sortBy": {
                    "$ref": "#/$defs/LambdaFunctionSortBy"
                }
            }
        },
        "LambdaFunctionSortBy": {
            "type": "string"
        },
        "ListFindingsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "findings": {
                    "$ref": "#/$defs/FindingList"
                }
            }
        },
        "FindingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Finding"
            }
        },
        "Finding": {
            "type": "object",
            "properties": {
                "findingArn": {
                    "$ref": "#/$defs/FindingArn"
                },
                "awsAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "type": {
                    "$ref": "#/$defs/FindingType"
                },
                "description": {
                    "$ref": "#/$defs/FindingDescription"
                },
                "title": {
                    "$ref": "#/$defs/FindingTitle"
                },
                "remediation": {
                    "$ref": "#/$defs/Remediation"
                },
                "severity": {
                    "$ref": "#/$defs/Severity"
                },
                "firstObservedAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                },
                "lastObservedAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                },
                "status": {
                    "$ref": "#/$defs/FindingStatus"
                },
                "resources": {
                    "$ref": "#/$defs/ResourceList"
                },
                "inspectorScore": {
                    "$ref": "#/$defs/smithy.api#Double"
                },
                "inspectorScoreDetails": {
                    "$ref": "#/$defs/InspectorScoreDetails"
                },
                "networkReachabilityDetails": {
                    "$ref": "#/$defs/NetworkReachabilityDetails"
                },
                "packageVulnerabilityDetails": {
                    "$ref": "#/$defs/PackageVulnerabilityDetails"
                },
                "fixAvailable": {
                    "$ref": "#/$defs/FixAvailable"
                },
                "exploitAvailable": {
                    "$ref": "#/$defs/ExploitAvailable"
                },
                "exploitabilityDetails": {
                    "$ref": "#/$defs/ExploitabilityDetails"
                },
                "codeVulnerabilityDetails": {
                    "$ref": "#/$defs/CodeVulnerabilityDetails"
                },
                "epss": {
                    "$ref": "#/$defs/EpssDetails"
                }
            }
        },
        "FindingType": {
            "type": "string"
        },
        "FindingDescription": {
            "type": "string"
        },
        "FindingTitle": {
            "type": "string"
        },
        "Remediation": {
            "type": "object",
            "properties": {
                "recommendation": {
                    "$ref": "#/$defs/Recommendation"
                }
            }
        },
        "Recommendation": {
            "type": "object",
            "properties": {
                "text": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Url": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "Severity": {
            "type": "string"
        },
        "FindingStatus": {
            "type": "string"
        },
        "ResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Resource"
            }
        },
        "Resource": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/ResourceType"
                },
                "id": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "partition": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "region": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "details": {
                    "$ref": "#/$defs/ResourceDetails"
                }
            }
        },
        "ResourceDetails": {
            "type": "object",
            "properties": {
                "awsEc2Instance": {
                    "$ref": "#/$defs/AwsEc2InstanceDetails"
                },
                "awsEcrContainerImage": {
                    "$ref": "#/$defs/AwsEcrContainerImageDetails"
                },
                "awsLambdaFunction": {
                    "$ref": "#/$defs/AwsLambdaFunctionDetails"
                }
            }
        },
        "AwsEc2InstanceDetails": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "imageId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "ipV4Addresses": {
                    "$ref": "#/$defs/IpV4AddressList"
                },
                "ipV6Addresses": {
                    "$ref": "#/$defs/IpV6AddressList"
                },
                "keyName": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "iamInstanceProfileArn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "vpcId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "subnetId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "launchedAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                },
                "platform": {
                    "$ref": "#/$defs/Platform"
                }
            }
        },
        "IpV4AddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpV4Address"
            }
        },
        "IpV4Address": {
            "type": "string"
        },
        "IpV6AddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpV6Address"
            }
        },
        "IpV6Address": {
            "type": "string"
        },
        "Platform": {
            "type": "string"
        },
        "AwsEcrContainerImageDetails": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "imageTags": {
                    "$ref": "#/$defs/ImageTagList"
                },
                "pushedAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                },
                "author": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "architecture": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "imageHash": {
                    "$ref": "#/$defs/ImageHash"
                },
                "registry": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "platform": {
                    "$ref": "#/$defs/Platform"
                }
            }
        },
        "ImageTagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonEmptyString"
            }
        },
        "ImageHash": {
            "type": "string"
        },
        "AwsLambdaFunctionDetails": {
            "type": "object",
            "properties": {
                "functionName": {
                    "$ref": "#/$defs/FunctionName"
                },
                "runtime": {
                    "$ref": "#/$defs/Runtime"
                },
                "codeSha256": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "version": {
                    "$ref": "#/$defs/Version"
                },
                "executionRoleArn": {
                    "$ref": "#/$defs/ExecutionRoleArn"
                },
                "layers": {
                    "$ref": "#/$defs/LayerList"
                },
                "vpcConfig": {
                    "$ref": "#/$defs/LambdaVpcConfig"
                },
                "packageType": {
                    "$ref": "#/$defs/PackageType"
                },
                "architectures": {
                    "$ref": "#/$defs/ArchitectureList"
                },
                "lastModifiedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                }
            }
        },
        "FunctionName": {
            "type": "string"
        },
        "Version": {
            "type": "string"
        },
        "ExecutionRoleArn": {
            "type": "string"
        },
        "LayerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LambdaLayerArn"
            }
        },
        "LambdaLayerArn": {
            "type": "string"
        },
        "LambdaVpcConfig": {
            "type": "object",
            "properties": {
                "subnetIds": {
                    "$ref": "#/$defs/SubnetIdList"
                },
                "securityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdList"
                },
                "vpcId": {
                    "$ref": "#/$defs/VpcId"
                }
            }
        },
        "SubnetIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "SubnetId": {
            "type": "string"
        },
        "SecurityGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "VpcId": {
            "type": "string"
        },
        "PackageType": {
            "type": "string"
        },
        "ArchitectureList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Architecture"
            }
        },
        "Architecture": {
            "type": "string"
        },
        "InspectorScoreDetails": {
            "type": "object",
            "properties": {
                "adjustedCvss": {
                    "$ref": "#/$defs/CvssScoreDetails"
                }
            }
        },
        "CvssScoreDetails": {
            "type": "object",
            "properties": {
                "scoreSource": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "cvssSource": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "version": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "score": {
                    "$ref": "#/$defs/smithy.api#Double"
                },
                "scoringVector": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "adjustments": {
                    "$ref": "#/$defs/CvssScoreAdjustmentList"
                }
            }
        },
        "CvssScoreAdjustmentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CvssScoreAdjustment"
            }
        },
        "CvssScoreAdjustment": {
            "type": "object",
            "properties": {
                "metric": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "reason": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "NetworkReachabilityDetails": {
            "type": "object",
            "properties": {
                "openPortRange": {
                    "$ref": "#/$defs/PortRange"
                },
                "protocol": {
                    "$ref": "#/$defs/NetworkProtocol"
                },
                "networkPath": {
                    "$ref": "#/$defs/NetworkPath"
                }
            }
        },
        "PortRange": {
            "type": "object",
            "properties": {
                "begin": {
                    "$ref": "#/$defs/Port"
                },
                "end": {
                    "$ref": "#/$defs/Port"
                }
            }
        },
        "NetworkProtocol": {
            "type": "string"
        },
        "NetworkPath": {
            "type": "object",
            "properties": {
                "steps": {
                    "$ref": "#/$defs/StepList"
                }
            }
        },
        "StepList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Step"
            }
        },
        "Step": {
            "type": "object",
            "properties": {
                "componentId": {
                    "$ref": "#/$defs/Component"
                },
                "componentType": {
                    "$ref": "#/$defs/ComponentType"
                }
            }
        },
        "Component": {
            "type": "string"
        },
        "ComponentType": {
            "type": "string"
        },
        "PackageVulnerabilityDetails": {
            "type": "object",
            "properties": {
                "vulnerabilityId": {
                    "$ref": "#/$defs/VulnerabilityId"
                },
                "vulnerablePackages": {
                    "$ref": "#/$defs/VulnerablePackageList"
                },
                "source": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "cvss": {
                    "$ref": "#/$defs/CvssScoreList"
                },
                "relatedVulnerabilities": {
                    "$ref": "#/$defs/VulnerabilityIdList"
                },
                "sourceUrl": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "vendorSeverity": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "vendorCreatedAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                },
                "vendorUpdatedAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                },
                "referenceUrls": {
                    "$ref": "#/$defs/NonEmptyStringList"
                }
            }
        },
        "VulnerabilityId": {
            "type": "string"
        },
        "VulnerablePackageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VulnerablePackage"
            }
        },
        "VulnerablePackage": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/PackageName"
                },
                "version": {
                    "$ref": "#/$defs/PackageVersion"
                },
                "sourceLayerHash": {
                    "$ref": "#/$defs/SourceLayerHash"
                },
                "epoch": {
                    "$ref": "#/$defs/PackageEpoch"
                },
                "release": {
                    "$ref": "#/$defs/PackageRelease"
                },
                "arch": {
                    "$ref": "#/$defs/PackageArchitecture"
                },
                "packageManager": {
                    "$ref": "#/$defs/PackageManager"
                },
                "filePath": {
                    "$ref": "#/$defs/FilePath"
                },
                "fixedInVersion": {
                    "$ref": "#/$defs/PackageVersion"
                },
                "remediation": {
                    "$ref": "#/$defs/VulnerablePackageRemediation"
                },
                "sourceLambdaLayerArn": {
                    "$ref": "#/$defs/LambdaLayerArn"
                }
            }
        },
        "PackageName": {
            "type": "string"
        },
        "PackageVersion": {
            "type": "string"
        },
        "SourceLayerHash": {
            "type": "string"
        },
        "PackageEpoch": {
            "type": "integer",
            "format": "int32"
        },
        "PackageRelease": {
            "type": "string"
        },
        "PackageArchitecture": {
            "type": "string"
        },
        "PackageManager": {
            "type": "string"
        },
        "FilePath": {
            "type": "string"
        },
        "VulnerablePackageRemediation": {
            "type": "string"
        },
        "CvssScoreList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CvssScore"
            }
        },
        "CvssScore": {
            "type": "object",
            "properties": {
                "baseScore": {
                    "$ref": "#/$defs/smithy.api#Double"
                },
                "scoringVector": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "version": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "source": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "VulnerabilityIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VulnerabilityId"
            }
        },
        "NonEmptyStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonEmptyString"
            }
        },
        "FixAvailable": {
            "type": "string"
        },
        "ExploitAvailable": {
            "type": "string"
        },
        "ExploitabilityDetails": {
            "type": "object",
            "properties": {
                "lastKnownExploitAt": {
                    "$ref": "#/$defs/DateTimeTimestamp"
                }
            }
        },
        "CodeVulnerabilityDetails": {
            "type": "object",
            "properties": {
                "filePath": {
                    "$ref": "#/$defs/CodeFilePath"
                },
                "detectorTags": {
                    "$ref": "#/$defs/DetectorTagList"
                },
                "referenceUrls": {
                    "$ref": "#/$defs/ReferenceUrls"
                },
                "ruleId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "sourceLambdaLayerArn": {
                    "$ref": "#/$defs/LambdaLayerArn"
                },
                "detectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "detectorName": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "cwes": {
                    "$ref": "#/$defs/CweList"
                }
            }
        },
        "CodeFilePath": {
            "type": "object",
            "properties": {
                "fileName": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "filePath": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "startLine": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "endLine": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "DetectorTagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonEmptyString"
            }
        },
        "ReferenceUrls": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonEmptyString"
            }
        },
        "CweList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonEmptyString"
            }
        },
        "EpssDetails": {
            "type": "object",
            "properties": {
                "score": {
                    "$ref": "#/$defs/EpssScoreValue"
                }
            }
        },
        "EpssScoreValue": {
            "type": "number",
            "format": "double"
        },
        "ListFindingsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/ListFindingsMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "filterCriteria": {
                    "$ref": "#/$defs/FilterCriteria"
                },
                "sortCriteria": {
                    "$ref": "#/$defs/SortCriteria"
                }
            }
        },
        "ListFindingsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "SortCriteria": {
            "type": "object",
            "properties": {
                "field": {
                    "$ref": "#/$defs/SortField"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                }
            }
        },
        "SortField": {
            "type": "string"
        },
        "ListMembersResponse": {
            "type": "object",
            "properties": {
                "members": {
                    "$ref": "#/$defs/MemberList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MemberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Member"
            }
        },
        "ListMembersRequest": {
            "type": "object",
            "properties": {
                "onlyAssociated": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "maxResults": {
                    "$ref": "#/$defs/ListMembersMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListMembersMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "Arn": {
            "type": "string"
        },
        "ListUsageTotalsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/ListUsageTotalsNextToken"
                },
                "totals": {
                    "$ref": "#/$defs/UsageTotalList"
                }
            }
        },
        "ListUsageTotalsNextToken": {
            "type": "string"
        },
        "UsageTotalList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageTotal"
            }
        },
        "UsageTotal": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/MeteringAccountId"
                },
                "usage": {
                    "$ref": "#/$defs/UsageList"
                }
            }
        },
        "UsageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Usage"
            }
        },
        "Usage": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/UsageType"
                },
                "total": {
                    "$ref": "#/$defs/UsageValue"
                },
                "estimatedMonthlyCost": {
                    "$ref": "#/$defs/MonthlyCostEstimate"
                },
                "currency": {
                    "$ref": "#/$defs/Currency"
                }
            }
        },
        "UsageType": {
            "type": "string"
        },
        "UsageValue": {
            "type": "number",
            "format": "double"
        },
        "MonthlyCostEstimate": {
            "type": "number",
            "format": "double"
        },
        "Currency": {
            "type": "string"
        },
        "ListUsageTotalsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/ListUsageTotalsMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/ListUsageTotalsNextToken"
                },
                "accountIds": {
                    "$ref": "#/$defs/UsageAccountIdList"
                }
            }
        },
        "ListUsageTotalsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "UsageAccountIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageAccountId"
            }
        },
        "UsageAccountId": {
            "type": "string"
        },
        "ResetEncryptionKeyResponse": {
            "type": "object",
            "properties": {}
        },
        "ResetEncryptionKeyRequest": {
            "type": "object",
            "properties": {
                "scanType": {
                    "$ref": "#/$defs/ScanType"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "SearchVulnerabilitiesResponse": {
            "type": "object",
            "properties": {
                "vulnerabilities": {
                    "$ref": "#/$defs/Vulnerabilities"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Vulnerabilities": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Vulnerability"
            }
        },
        "Vulnerability": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "cwes": {
                    "$ref": "#/$defs/Cwes"
                },
                "cisaData": {
                    "$ref": "#/$defs/CisaData"
                },
                "source": {
                    "$ref": "#/$defs/VulnerabilitySource"
                },
                "description": {
                    "$ref": "#/$defs/VulnerabilityDescription"
                },
                "atigData": {
                    "$ref": "#/$defs/AtigData"
                },
                "vendorSeverity": {
                    "$ref": "#/$defs/VendorSeverity"
                },
                "cvss3": {
                    "$ref": "#/$defs/Cvss3"
                },
                "relatedVulnerabilities": {
                    "$ref": "#/$defs/RelatedVulnerabilities"
                },
                "cvss2": {
                    "$ref": "#/$defs/Cvss2"
                },
                "vendorCreatedAt": {
                    "$ref": "#/$defs/VendorCreatedAt"
                },
                "vendorUpdatedAt": {
                    "$ref": "#/$defs/VendorUpdatedAt"
                },
                "sourceUrl": {
                    "$ref": "#/$defs/VulnerabilitySourceUrl"
                },
                "referenceUrls": {
                    "$ref": "#/$defs/VulnerabilityReferenceUrls"
                },
                "exploitObserved": {
                    "$ref": "#/$defs/ExploitObserved"
                },
                "detectionPlatforms": {
                    "$ref": "#/$defs/DetectionPlatforms"
                },
                "epss": {
                    "$ref": "#/$defs/Epss"
                }
            }
        },
        "VulnerabilitySource": {
            "type": "string"
        },
        "VulnerabilityDescription": {
            "type": "string"
        },
        "AtigData": {
            "type": "object",
            "properties": {
                "firstSeen": {
                    "$ref": "#/$defs/FirstSeen"
                },
                "lastSeen": {
                    "$ref": "#/$defs/LastSeen"
                },
                "targets": {
                    "$ref": "#/$defs/Targets"
                },
                "ttps": {
                    "$ref": "#/$defs/Ttps"
                }
            }
        },
        "Targets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Target"
            }
        },
        "Target": {
            "type": "string"
        },
        "VendorSeverity": {
            "type": "string"
        },
        "Cvss3": {
            "type": "object",
            "properties": {
                "baseScore": {
                    "$ref": "#/$defs/Cvss3BaseScore"
                },
                "scoringVector": {
                    "$ref": "#/$defs/Cvss3ScoringVector"
                }
            }
        },
        "Cvss3BaseScore": {
            "type": "number",
            "format": "double"
        },
        "Cvss3ScoringVector": {
            "type": "string"
        },
        "RelatedVulnerabilities": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RelatedVulnerability"
            }
        },
        "RelatedVulnerability": {
            "type": "string"
        },
        "Cvss2": {
            "type": "object",
            "properties": {
                "baseScore": {
                    "$ref": "#/$defs/Cvss2BaseScore"
                },
                "scoringVector": {
                    "$ref": "#/$defs/Cvss2ScoringVector"
                }
            }
        },
        "Cvss2BaseScore": {
            "type": "number",
            "format": "double"
        },
        "Cvss2ScoringVector": {
            "type": "string"
        },
        "VendorCreatedAt": {
            "type": "string",
            "format": "date-time"
        },
        "VendorUpdatedAt": {
            "type": "string",
            "format": "date-time"
        },
        "VulnerabilitySourceUrl": {
            "type": "string"
        },
        "DetectionPlatforms": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonEmptyString"
            }
        },
        "Epss": {
            "type": "object",
            "properties": {
                "score": {
                    "$ref": "#/$defs/EpssScore"
                }
            }
        },
        "EpssScore": {
            "type": "number",
            "format": "double"
        },
        "SearchVulnerabilitiesRequest": {
            "type": "object",
            "properties": {
                "filterCriteria": {
                    "$ref": "#/$defs/SearchVulnerabilitiesFilterCriteria"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SearchVulnerabilitiesFilterCriteria": {
            "type": "object",
            "properties": {
                "vulnerabilityIds": {
                    "$ref": "#/$defs/VulnIdList"
                }
            }
        },
        "VulnIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VulnId"
            }
        },
        "VulnId": {
            "type": "string"
        },
        "SendCisSessionHealthResponse": {
            "type": "object",
            "properties": {}
        },
        "SendCisSessionHealthRequest": {
            "type": "object",
            "properties": {
                "scanJobId": {
                    "$ref": "#/$defs/UUID"
                },
                "sessionToken": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "UUID": {
            "type": "string"
        },
        "SendCisSessionTelemetryResponse": {
            "type": "object",
            "properties": {}
        },
        "SendCisSessionTelemetryRequest": {
            "type": "object",
            "properties": {
                "scanJobId": {
                    "$ref": "#/$defs/UUID"
                },
                "sessionToken": {
                    "$ref": "#/$defs/UUID"
                },
                "messages": {
                    "$ref": "#/$defs/CisSessionMessages"
                }
            }
        },
        "CisSessionMessages": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CisSessionMessage"
            }
        },
        "CisSessionMessage": {
            "type": "object",
            "properties": {
                "ruleId": {
                    "$ref": "#/$defs/RuleId"
                },
                "status": {
                    "$ref": "#/$defs/CisRuleStatus"
                },
                "cisRuleDetails": {
                    "$ref": "#/$defs/CisRuleDetails"
                }
            }
        },
        "RuleId": {
            "type": "string"
        },
        "CisRuleStatus": {
            "enum": [
                "FAILED",
                "PASSED",
                "NOT_EVALUATED",
                "INFORMATIONAL",
                "UNKNOWN",
                "NOT_APPLICABLE",
                "ERROR"
            ]
        },
        "CisRuleDetails": {
            "type": "string",
            "format": "binary"
        },
        "StartCisSessionResponse": {
            "type": "object",
            "properties": {}
        },
        "StartCisSessionRequest": {
            "type": "object",
            "properties": {
                "scanJobId": {
                    "$ref": "#/$defs/UUID"
                },
                "message": {
                    "$ref": "#/$defs/StartCisSessionMessage"
                }
            }
        },
        "StartCisSessionMessage": {
            "type": "object",
            "properties": {
                "sessionToken": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "StopCisSessionResponse": {
            "type": "object",
            "properties": {}
        },
        "StopCisSessionRequest": {
            "type": "object",
            "properties": {
                "scanJobId": {
                    "$ref": "#/$defs/UUID"
                },
                "sessionToken": {
                    "$ref": "#/$defs/UUID"
                },
                "message": {
                    "$ref": "#/$defs/StopCisSessionMessage"
                }
            }
        },
        "StopCisSessionMessage": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/StopCisSessionStatus"
                },
                "reason": {
                    "$ref": "#/$defs/Reason"
                },
                "progress": {
                    "$ref": "#/$defs/StopCisMessageProgress"
                },
                "computePlatform": {
                    "$ref": "#/$defs/ComputePlatform"
                },
                "benchmarkVersion": {
                    "$ref": "#/$defs/BenchmarkVersion"
                },
                "benchmarkProfile": {
                    "$ref": "#/$defs/BenchmarkProfile"
                }
            }
        },
        "StopCisSessionStatus": {
            "enum": [
                "SUCCESS",
                "FAILED",
                "INTERRUPTED",
                "UNSUPPORTED_OS"
            ]
        },
        "Reason": {
            "type": "string"
        },
        "StopCisMessageProgress": {
            "type": "object",
            "properties": {
                "totalChecks": {
                    "$ref": "#/$defs/CheckCount"
                },
                "successfulChecks": {
                    "$ref": "#/$defs/CheckCount"
                },
                "failedChecks": {
                    "$ref": "#/$defs/CheckCount"
                },
                "notEvaluatedChecks": {
                    "$ref": "#/$defs/CheckCount"
                },
                "unknownChecks": {
                    "$ref": "#/$defs/CheckCount"
                },
                "notApplicableChecks": {
                    "$ref": "#/$defs/CheckCount"
                },
                "informationalChecks": {
                    "$ref": "#/$defs/CheckCount"
                },
                "errorChecks": {
                    "$ref": "#/$defs/CheckCount"
                }
            }
        },
        "CheckCount": {
            "type": "integer",
            "format": "int32"
        },
        "ComputePlatform": {
            "type": "object",
            "properties": {
                "vendor": {
                    "$ref": "#/$defs/Vendor"
                },
                "product": {
                    "$ref": "#/$defs/Product"
                },
                "version": {
                    "$ref": "#/$defs/PlatformVersion"
                }
            }
        },
        "Vendor": {
            "type": "string"
        },
        "Product": {
            "type": "string"
        },
        "PlatformVersion": {
            "type": "string"
        },
        "BenchmarkVersion": {
            "type": "string"
        },
        "BenchmarkProfile": {
            "type": "string"
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UpdateCisScanConfigurationResponse": {
            "type": "object",
            "properties": {
                "scanConfigurationArn": {
                    "$ref": "#/$defs/CisScanConfigurationArn"
                }
            }
        },
        "UpdateCisScanConfigurationRequest": {
            "type": "object",
            "properties": {
                "scanConfigurationArn": {
                    "$ref": "#/$defs/CisScanConfigurationArn"
                },
                "scanName": {
                    "$ref": "#/$defs/CisScanName"
                },
                "securityLevel": {
                    "$ref": "#/$defs/CisSecurityLevel"
                },
                "schedule": {
                    "$ref": "#/$defs/Schedule"
                },
                "targets": {
                    "$ref": "#/$defs/UpdateCisTargets"
                }
            }
        },
        "UpdateCisTargets": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/TargetAccountList"
                },
                "targetResourceTags": {
                    "$ref": "#/$defs/TargetResourceTags"
                }
            }
        },
        "UpdateConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateConfigurationRequest": {
            "type": "object",
            "properties": {
                "ecrConfiguration": {
                    "$ref": "#/$defs/EcrConfiguration"
                },
                "ec2Configuration": {
                    "$ref": "#/$defs/Ec2Configuration"
                }
            }
        },
        "EcrConfiguration": {
            "type": "object",
            "properties": {
                "rescanDuration": {
                    "$ref": "#/$defs/EcrRescanDuration"
                },
                "pullDateRescanDuration": {
                    "$ref": "#/$defs/EcrPullDateRescanDuration"
                }
            }
        },
        "Ec2Configuration": {
            "type": "object",
            "properties": {
                "scanMode": {
                    "$ref": "#/$defs/Ec2ScanMode"
                }
            }
        },
        "UpdateEc2DeepInspectionConfigurationResponse": {
            "type": "object",
            "properties": {
                "packagePaths": {
                    "$ref": "#/$defs/PathList"
                },
                "orgPackagePaths": {
                    "$ref": "#/$defs/PathList"
                },
                "status": {
                    "$ref": "#/$defs/Ec2DeepInspectionStatus"
                },
                "errorMessage": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "UpdateEc2DeepInspectionConfigurationRequest": {
            "type": "object",
            "properties": {
                "activateDeepInspection": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "packagePaths": {
                    "$ref": "#/$defs/PathList"
                }
            }
        },
        "UpdateEncryptionKeyResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateEncryptionKeyRequest": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyArn"
                },
                "scanType": {
                    "$ref": "#/$defs/ScanType"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "UpdateFilterResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/FilterArn"
                }
            }
        },
        "UpdateFilterRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/$defs/FilterAction"
                },
                "description": {
                    "$ref": "#/$defs/FilterDescription"
                },
                "filterCriteria": {
                    "$ref": "#/$defs/FilterCriteria"
                },
                "name": {
                    "$ref": "#/$defs/FilterName"
                },
                "filterArn": {
                    "$ref": "#/$defs/FilterArn"
                },
                "reason": {
                    "$ref": "#/$defs/FilterReason"
                }
            }
        },
        "UpdateOrganizationConfigurationResponse": {
            "type": "object",
            "properties": {
                "autoEnable": {
                    "$ref": "#/$defs/AutoEnable"
                }
            }
        },
        "UpdateOrganizationConfigurationRequest": {
            "type": "object",
            "properties": {
                "autoEnable": {
                    "$ref": "#/$defs/AutoEnable"
                }
            }
        },
        "UpdateOrgEc2DeepInspectionConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateOrgEc2DeepInspectionConfigurationRequest": {
            "type": "object",
            "properties": {
                "orgPackagePaths": {
                    "$ref": "#/$defs/PathList"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://inspector2-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://inspector2-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://inspector2.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://inspector2.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}