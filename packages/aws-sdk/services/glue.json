{
    "name": "glue",
    "commands": [
        {
            "name": "BatchCreatePartition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchCreatePartition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchCreatePartitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchCreatePartitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchDeleteConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchDeleteConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeleteConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDeleteConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchDeletePartition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchDeletePartition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeletePartitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDeletePartitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchDeleteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchDeleteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeleteTableResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDeleteTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchDeleteTableVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchDeleteTableVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeleteTableVersionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDeleteTableVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetBlueprints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetBlueprints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetBlueprintsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetBlueprintsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetCrawlers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetCrawlers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetCrawlersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetCrawlersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetCustomEntityTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetCustomEntityTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetCustomEntityTypesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetCustomEntityTypesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetDataQualityResult",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetDataQualityResult"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetDataQualityResultResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetDataQualityResultRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetDevEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetDevEndpoints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetDevEndpointsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetDevEndpointsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetPartition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetPartition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetPartitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetPartitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetTableOptimizer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetTableOptimizer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetTableOptimizerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetTableOptimizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetTriggers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetTriggers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetTriggersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetTriggersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetWorkflows",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetWorkflows"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetWorkflowsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetWorkflowsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchPutDataQualityStatisticAnnotation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchPutDataQualityStatisticAnnotation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchPutDataQualityStatisticAnnotationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchPutDataQualityStatisticAnnotationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchStopJobRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchStopJobRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchStopJobRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchStopJobRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchUpdatePartition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchUpdatePartition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchUpdatePartitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchUpdatePartitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelDataQualityRuleRecommendationRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelDataQualityRuleRecommendationRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelDataQualityRuleRecommendationRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelDataQualityRuleRecommendationRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelDataQualityRulesetEvaluationRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelDataQualityRulesetEvaluationRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelDataQualityRulesetEvaluationRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelDataQualityRulesetEvaluationRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelMLTaskRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelMLTaskRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelMLTaskRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelMLTaskRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelStatement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelStatement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelStatementResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelStatementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CheckSchemaVersionValidity",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CheckSchemaVersionValidity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CheckSchemaVersionValidityResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CheckSchemaVersionValidityInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateBlueprint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateBlueprint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBlueprintResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBlueprintRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateClassifier",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateClassifier"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateClassifierResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateClassifierRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCrawler",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCrawler"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCrawlerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCrawlerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCustomEntityType",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCustomEntityType"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCustomEntityTypeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCustomEntityTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDatabase",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDatabase"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDatabaseResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDataQualityRuleset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDataQualityRuleset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDataQualityRulesetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDataQualityRulesetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDevEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDevEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDevEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDevEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateMLTransform",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateMLTransform"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMLTransformResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMLTransformRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePartition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreatePartition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePartitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePartitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePartitionIndex",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreatePartitionIndex"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePartitionIndexResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePartitionIndexRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRegistry",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateRegistry"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRegistryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRegistryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSchema",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateSchema"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSchemaResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSchemaInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateScript",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateScript"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateScriptResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateScriptRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSecurityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateSecurityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSecurityConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSecurityConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTableResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTableOptimizer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateTableOptimizer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTableOptimizerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTableOptimizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTrigger",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateTrigger"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTriggerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTriggerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateUsageProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateUsageProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateUsageProfileResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUsageProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateUserDefinedFunction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateUserDefinedFunction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateUserDefinedFunctionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUserDefinedFunctionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateWorkflow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateWorkflow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateWorkflowResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateWorkflowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteBlueprint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteBlueprint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBlueprintResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBlueprintRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteClassifier",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteClassifier"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteClassifierResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteClassifierRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteColumnStatisticsForPartition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteColumnStatisticsForPartition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteColumnStatisticsForPartitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteColumnStatisticsForPartitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteColumnStatisticsForTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteColumnStatisticsForTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteColumnStatisticsForTableResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteColumnStatisticsForTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCrawler",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCrawler"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCrawlerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCrawlerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCustomEntityType",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCustomEntityType"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCustomEntityTypeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCustomEntityTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDatabase",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteDatabase"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDatabaseResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDataQualityRuleset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteDataQualityRuleset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDataQualityRulesetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDataQualityRulesetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDevEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteDevEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDevEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDevEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteMLTransform",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteMLTransform"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMLTransformResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMLTransformRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePartition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeletePartition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePartitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePartitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePartitionIndex",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeletePartitionIndex"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePartitionIndexResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePartitionIndexRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRegistry",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteRegistry"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRegistryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRegistryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteResourcePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteResourcePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSchema",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteSchema"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSchemaResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSchemaInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSchemaVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteSchemaVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSchemaVersionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSchemaVersionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSecurityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteSecurityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSecurityConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSecurityConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTableResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTableOptimizer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteTableOptimizer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTableOptimizerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTableOptimizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTableVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteTableVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTableVersionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTableVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTrigger",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteTrigger"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTriggerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTriggerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteUsageProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteUsageProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteUsageProfileResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteUsageProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteUserDefinedFunction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteUserDefinedFunction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteUserDefinedFunctionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteUserDefinedFunctionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteWorkflow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteWorkflow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteWorkflowResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteWorkflowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBlueprint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetBlueprint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBlueprintResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBlueprintRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBlueprintRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetBlueprintRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBlueprintRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBlueprintRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBlueprintRuns",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetBlueprintRuns"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBlueprintRunsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBlueprintRunsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCatalogImportStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCatalogImportStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCatalogImportStatusResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCatalogImportStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetClassifier",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetClassifier"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetClassifierResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetClassifierRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetClassifiers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetClassifiers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetClassifiersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetClassifiersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetColumnStatisticsForPartition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetColumnStatisticsForPartition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetColumnStatisticsForPartitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetColumnStatisticsForPartitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetColumnStatisticsForTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetColumnStatisticsForTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetColumnStatisticsForTableResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetColumnStatisticsForTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetColumnStatisticsTaskRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetColumnStatisticsTaskRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetColumnStatisticsTaskRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetColumnStatisticsTaskRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetColumnStatisticsTaskRuns",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetColumnStatisticsTaskRuns"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetColumnStatisticsTaskRunsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetColumnStatisticsTaskRunsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConnectionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConnectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCrawler",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCrawler"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCrawlerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCrawlerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCrawlerMetrics",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCrawlerMetrics"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCrawlerMetricsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCrawlerMetricsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCrawlers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCrawlers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCrawlersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCrawlersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCustomEntityType",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCustomEntityType"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCustomEntityTypeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCustomEntityTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDatabase",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDatabase"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDatabaseResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDatabases",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDatabases"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDatabasesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDatabasesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataCatalogEncryptionSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDataCatalogEncryptionSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataCatalogEncryptionSettingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataCatalogEncryptionSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataflowGraph",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDataflowGraph"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataflowGraphResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataflowGraphRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataQualityModel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDataQualityModel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataQualityModelResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataQualityModelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataQualityModelResult",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDataQualityModelResult"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataQualityModelResultResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataQualityModelResultRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataQualityResult",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDataQualityResult"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataQualityResultResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataQualityResultRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataQualityRuleRecommendationRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDataQualityRuleRecommendationRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataQualityRuleRecommendationRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataQualityRuleRecommendationRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataQualityRuleset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDataQualityRuleset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataQualityRulesetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataQualityRulesetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataQualityRulesetEvaluationRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDataQualityRulesetEvaluationRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataQualityRulesetEvaluationRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataQualityRulesetEvaluationRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDevEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDevEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDevEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDevEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDevEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDevEndpoints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDevEndpointsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDevEndpointsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetJobBookmark",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetJobBookmark"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetJobBookmarkResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetJobBookmarkRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetJobRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetJobRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetJobRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetJobRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetJobRuns",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetJobRuns"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetJobRunsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetJobRunsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMapping",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMapping"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMappingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMappingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMLTaskRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMLTaskRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMLTaskRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMLTaskRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMLTaskRuns",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMLTaskRuns"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMLTaskRunsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMLTaskRunsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMLTransform",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMLTransform"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMLTransformResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMLTransformRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMLTransforms",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMLTransforms"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMLTransformsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMLTransformsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPartition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPartition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPartitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPartitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPartitionIndexes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPartitionIndexes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPartitionIndexesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPartitionIndexesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPartitions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPartitions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPartitionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPartitionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPlan",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPlan"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPlanResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPlanRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRegistry",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetRegistry"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRegistryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRegistryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourcePolicies",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResourcePolicies"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourcePoliciesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourcePoliciesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourcePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourcePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSchema",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSchema"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSchemaResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSchemaInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSchemaByDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSchemaByDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSchemaByDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSchemaByDefinitionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSchemaVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSchemaVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSchemaVersionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSchemaVersionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSchemaVersionsDiff",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSchemaVersionsDiff"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSchemaVersionsDiffResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSchemaVersionsDiffInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSecurityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSecurityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSecurityConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSecurityConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSecurityConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSecurityConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSecurityConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSecurityConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetStatement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetStatement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetStatementResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetStatementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTableResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTableOptimizer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTableOptimizer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTableOptimizerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTableOptimizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTables",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTables"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTablesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTablesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTableVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTableVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTableVersionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTableVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTableVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTableVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTableVersionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTableVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTagsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTrigger",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTrigger"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTriggerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTriggerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTriggers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTriggers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTriggersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTriggersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetUnfilteredPartitionMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetUnfilteredPartitionMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUnfilteredPartitionMetadataResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUnfilteredPartitionMetadataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetUnfilteredPartitionsMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetUnfilteredPartitionsMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUnfilteredPartitionsMetadataResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUnfilteredPartitionsMetadataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetUnfilteredTableMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetUnfilteredTableMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUnfilteredTableMetadataResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUnfilteredTableMetadataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetUsageProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetUsageProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUsageProfileResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUsageProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetUserDefinedFunction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetUserDefinedFunction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUserDefinedFunctionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUserDefinedFunctionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetUserDefinedFunctions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetUserDefinedFunctions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUserDefinedFunctionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUserDefinedFunctionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWorkflow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWorkflow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWorkflowResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWorkflowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWorkflowRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWorkflowRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWorkflowRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWorkflowRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWorkflowRunProperties",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWorkflowRunProperties"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWorkflowRunPropertiesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWorkflowRunPropertiesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWorkflowRuns",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWorkflowRuns"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWorkflowRunsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWorkflowRunsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportCatalogToGlue",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ImportCatalogToGlue"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportCatalogToGlueResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportCatalogToGlueRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListBlueprints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListBlueprints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBlueprintsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBlueprintsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListColumnStatisticsTaskRuns",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListColumnStatisticsTaskRuns"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListColumnStatisticsTaskRunsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListColumnStatisticsTaskRunsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCrawlers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListCrawlers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCrawlersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCrawlersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCrawls",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListCrawls"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCrawlsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCrawlsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCustomEntityTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListCustomEntityTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCustomEntityTypesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCustomEntityTypesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDataQualityResults",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDataQualityResults"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDataQualityResultsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDataQualityResultsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDataQualityRuleRecommendationRuns",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDataQualityRuleRecommendationRuns"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDataQualityRuleRecommendationRunsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDataQualityRuleRecommendationRunsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDataQualityRulesetEvaluationRuns",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDataQualityRulesetEvaluationRuns"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDataQualityRulesetEvaluationRunsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDataQualityRulesetEvaluationRunsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDataQualityRulesets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDataQualityRulesets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDataQualityRulesetsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDataQualityRulesetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDataQualityStatisticAnnotations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDataQualityStatisticAnnotations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDataQualityStatisticAnnotationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDataQualityStatisticAnnotationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDataQualityStatistics",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDataQualityStatistics"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDataQualityStatisticsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDataQualityStatisticsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDevEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDevEndpoints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDevEndpointsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDevEndpointsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMLTransforms",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListMLTransforms"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMLTransformsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMLTransformsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRegistries",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListRegistries"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRegistriesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRegistriesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSchemas",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListSchemas"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSchemasResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSchemasInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSchemaVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListSchemaVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSchemaVersionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSchemaVersionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSessions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListSessions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSessionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSessionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListStatements",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListStatements"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStatementsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListStatementsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTableOptimizerRuns",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTableOptimizerRuns"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTableOptimizerRunsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTableOptimizerRunsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTriggers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTriggers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTriggersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTriggersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListUsageProfiles",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListUsageProfiles"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListUsageProfilesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListUsageProfilesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListWorkflows",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListWorkflows"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListWorkflowsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListWorkflowsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutDataCatalogEncryptionSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutDataCatalogEncryptionSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutDataCatalogEncryptionSettingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutDataCatalogEncryptionSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutDataQualityProfileAnnotation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutDataQualityProfileAnnotation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutDataQualityProfileAnnotationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutDataQualityProfileAnnotationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutResourcePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutResourcePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutSchemaVersionMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutSchemaVersionMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutSchemaVersionMetadataResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutSchemaVersionMetadataInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutWorkflowRunProperties",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutWorkflowRunProperties"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutWorkflowRunPropertiesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutWorkflowRunPropertiesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "QuerySchemaVersionMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "QuerySchemaVersionMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/QuerySchemaVersionMetadataResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/QuerySchemaVersionMetadataInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterSchemaVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RegisterSchemaVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterSchemaVersionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterSchemaVersionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveSchemaVersionMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RemoveSchemaVersionMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveSchemaVersionMetadataResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveSchemaVersionMetadataInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetJobBookmark",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResetJobBookmark"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetJobBookmarkResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetJobBookmarkRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResumeWorkflowRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResumeWorkflowRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResumeWorkflowRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResumeWorkflowRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RunStatement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RunStatement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RunStatementResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RunStatementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchTables",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SearchTables"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchTablesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchTablesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartBlueprintRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartBlueprintRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartBlueprintRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartBlueprintRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartColumnStatisticsTaskRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartColumnStatisticsTaskRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartColumnStatisticsTaskRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartColumnStatisticsTaskRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartCrawler",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartCrawler"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartCrawlerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartCrawlerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartCrawlerSchedule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartCrawlerSchedule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartCrawlerScheduleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartCrawlerScheduleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartDataQualityRuleRecommendationRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartDataQualityRuleRecommendationRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartDataQualityRuleRecommendationRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartDataQualityRuleRecommendationRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartDataQualityRulesetEvaluationRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartDataQualityRulesetEvaluationRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartDataQualityRulesetEvaluationRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartDataQualityRulesetEvaluationRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartExportLabelsTaskRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartExportLabelsTaskRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartExportLabelsTaskRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartExportLabelsTaskRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartImportLabelsTaskRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartImportLabelsTaskRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartImportLabelsTaskRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartImportLabelsTaskRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartJobRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartJobRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartJobRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartJobRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartMLEvaluationTaskRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartMLEvaluationTaskRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartMLEvaluationTaskRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartMLEvaluationTaskRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartMLLabelingSetGenerationTaskRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartMLLabelingSetGenerationTaskRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartMLLabelingSetGenerationTaskRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartMLLabelingSetGenerationTaskRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartTrigger",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartTrigger"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartTriggerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartTriggerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartWorkflowRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartWorkflowRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartWorkflowRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartWorkflowRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopColumnStatisticsTaskRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopColumnStatisticsTaskRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopColumnStatisticsTaskRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopColumnStatisticsTaskRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopCrawler",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopCrawler"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopCrawlerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopCrawlerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopCrawlerSchedule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopCrawlerSchedule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopCrawlerScheduleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopCrawlerScheduleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopTrigger",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopTrigger"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopTriggerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopTriggerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopWorkflowRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopWorkflowRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopWorkflowRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopWorkflowRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TestConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TestConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateBlueprint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateBlueprint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBlueprintResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBlueprintRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateClassifier",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateClassifier"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateClassifierResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateClassifierRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateColumnStatisticsForPartition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateColumnStatisticsForPartition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateColumnStatisticsForPartitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateColumnStatisticsForPartitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateColumnStatisticsForTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateColumnStatisticsForTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateColumnStatisticsForTableResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateColumnStatisticsForTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCrawler",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateCrawler"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCrawlerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCrawlerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCrawlerSchedule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateCrawlerSchedule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCrawlerScheduleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCrawlerScheduleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDatabase",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDatabase"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDatabaseResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDataQualityRuleset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDataQualityRuleset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDataQualityRulesetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDataQualityRulesetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDevEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDevEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDevEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDevEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateJobFromSourceControl",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateJobFromSourceControl"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateJobFromSourceControlResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateJobFromSourceControlRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateMLTransform",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateMLTransform"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMLTransformResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMLTransformRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePartition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdatePartition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePartitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePartitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRegistry",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateRegistry"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRegistryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRegistryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSchema",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateSchema"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSchemaResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSchemaInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSourceControlFromJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateSourceControlFromJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSourceControlFromJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSourceControlFromJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTableResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateTableOptimizer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateTableOptimizer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTableOptimizerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateTableOptimizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateTrigger",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateTrigger"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTriggerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateTriggerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateUsageProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateUsageProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateUsageProfileResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateUsageProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateUserDefinedFunction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateUserDefinedFunction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateUserDefinedFunctionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateUserDefinedFunctionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateWorkflow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateWorkflow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateWorkflowResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateWorkflowRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchCreatePartitionResponse": {
            "type": "object",
            "properties": {
                "Errors": {
                    "$ref": "#/$defs/PartitionErrors"
                }
            }
        },
        "PartitionErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PartitionError"
            }
        },
        "PartitionError": {
            "type": "object",
            "properties": {
                "PartitionValues": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "ErrorDetail": {
                    "$ref": "#/$defs/ErrorDetail"
                }
            }
        },
        "ValueStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValueString"
            }
        },
        "ValueString": {
            "type": "string"
        },
        "ErrorDetail": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "$ref": "#/$defs/NameString"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/DescriptionString"
                }
            }
        },
        "NameString": {
            "type": "string"
        },
        "DescriptionString": {
            "type": "string"
        },
        "BatchCreatePartitionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "PartitionInputList": {
                    "$ref": "#/$defs/PartitionInputList"
                }
            }
        },
        "CatalogIdString": {
            "type": "string"
        },
        "PartitionInputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PartitionInput"
            }
        },
        "PartitionInput": {
            "type": "object",
            "properties": {
                "Values": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "LastAccessTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "StorageDescriptor": {
                    "$ref": "#/$defs/StorageDescriptor"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                },
                "LastAnalyzedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "StorageDescriptor": {
            "type": "object",
            "properties": {
                "Columns": {
                    "$ref": "#/$defs/ColumnList"
                },
                "Location": {
                    "$ref": "#/$defs/LocationString"
                },
                "AdditionalLocations": {
                    "$ref": "#/$defs/LocationStringList"
                },
                "InputFormat": {
                    "$ref": "#/$defs/FormatString"
                },
                "OutputFormat": {
                    "$ref": "#/$defs/FormatString"
                },
                "Compressed": {
                    "$ref": "#/$defs/Boolean"
                },
                "NumberOfBuckets": {
                    "$ref": "#/$defs/Integer"
                },
                "SerdeInfo": {
                    "$ref": "#/$defs/SerDeInfo"
                },
                "BucketColumns": {
                    "$ref": "#/$defs/NameStringList"
                },
                "SortColumns": {
                    "$ref": "#/$defs/OrderList"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                },
                "SkewedInfo": {
                    "$ref": "#/$defs/SkewedInfo"
                },
                "StoredAsSubDirectories": {
                    "$ref": "#/$defs/Boolean"
                },
                "SchemaReference": {
                    "$ref": "#/$defs/SchemaReference"
                }
            }
        },
        "ColumnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Column"
            }
        },
        "Column": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Type": {
                    "$ref": "#/$defs/ColumnTypeString"
                },
                "Comment": {
                    "$ref": "#/$defs/CommentString"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                }
            }
        },
        "ColumnTypeString": {
            "type": "string"
        },
        "CommentString": {
            "type": "string"
        },
        "ParametersMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ParametersMapValue"
            }
        },
        "ParametersMapValue": {
            "type": "string"
        },
        "LocationString": {
            "type": "string"
        },
        "LocationStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocationString"
            }
        },
        "FormatString": {
            "type": "string"
        },
        "Boolean": {
            "type": "boolean"
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "SerDeInfo": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "SerializationLibrary": {
                    "$ref": "#/$defs/NameString"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                }
            }
        },
        "NameStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "OrderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Order"
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "Column": {
                    "$ref": "#/$defs/NameString"
                },
                "SortOrder": {
                    "$ref": "#/$defs/IntegerFlag"
                }
            }
        },
        "IntegerFlag": {
            "type": "integer",
            "format": "int32"
        },
        "SkewedInfo": {
            "type": "object",
            "properties": {
                "SkewedColumnNames": {
                    "$ref": "#/$defs/NameStringList"
                },
                "SkewedColumnValues": {
                    "$ref": "#/$defs/ColumnValueStringList"
                },
                "SkewedColumnValueLocationMaps": {
                    "$ref": "#/$defs/LocationMap"
                }
            }
        },
        "ColumnValueStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnValuesString"
            }
        },
        "ColumnValuesString": {
            "type": "string"
        },
        "LocationMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ColumnValuesString"
            }
        },
        "SchemaReference": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                },
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "SchemaVersionNumber": {
                    "$ref": "#/$defs/VersionLongNumber"
                }
            }
        },
        "SchemaId": {
            "type": "object",
            "properties": {
                "SchemaArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "SchemaName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                }
            }
        },
        "GlueResourceArn": {
            "type": "string"
        },
        "SchemaRegistryNameString": {
            "type": "string"
        },
        "SchemaVersionIdString": {
            "type": "string"
        },
        "VersionLongNumber": {
            "type": "integer",
            "format": "int64"
        },
        "BatchDeleteConnectionResponse": {
            "type": "object",
            "properties": {
                "Succeeded": {
                    "$ref": "#/$defs/NameStringList"
                },
                "Errors": {
                    "$ref": "#/$defs/ErrorByName"
                }
            }
        },
        "ErrorByName": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ErrorDetail"
            }
        },
        "BatchDeleteConnectionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "ConnectionNameList": {
                    "$ref": "#/$defs/DeleteConnectionNameList"
                }
            }
        },
        "DeleteConnectionNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "BatchDeletePartitionResponse": {
            "type": "object",
            "properties": {
                "Errors": {
                    "$ref": "#/$defs/PartitionErrors"
                }
            }
        },
        "BatchDeletePartitionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "PartitionsToDelete": {
                    "$ref": "#/$defs/BatchDeletePartitionValueList"
                }
            }
        },
        "BatchDeletePartitionValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PartitionValueList"
            }
        },
        "PartitionValueList": {
            "type": "object",
            "properties": {
                "Values": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "BatchDeleteTableResponse": {
            "type": "object",
            "properties": {
                "Errors": {
                    "$ref": "#/$defs/TableErrors"
                }
            }
        },
        "TableErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TableError"
            }
        },
        "TableError": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "ErrorDetail": {
                    "$ref": "#/$defs/ErrorDetail"
                }
            }
        },
        "BatchDeleteTableRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TablesToDelete": {
                    "$ref": "#/$defs/BatchDeleteTableNameList"
                },
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                }
            }
        },
        "BatchDeleteTableNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "TransactionIdString": {
            "type": "string"
        },
        "BatchDeleteTableVersionResponse": {
            "type": "object",
            "properties": {
                "Errors": {
                    "$ref": "#/$defs/TableVersionErrors"
                }
            }
        },
        "TableVersionErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TableVersionError"
            }
        },
        "TableVersionError": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "VersionId": {
                    "$ref": "#/$defs/VersionString"
                },
                "ErrorDetail": {
                    "$ref": "#/$defs/ErrorDetail"
                }
            }
        },
        "VersionString": {
            "type": "string"
        },
        "BatchDeleteTableVersionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "VersionIds": {
                    "$ref": "#/$defs/BatchDeleteTableVersionList"
                }
            }
        },
        "BatchDeleteTableVersionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VersionString"
            }
        },
        "BatchGetBlueprintsResponse": {
            "type": "object",
            "properties": {
                "Blueprints": {
                    "$ref": "#/$defs/Blueprints"
                },
                "MissingBlueprints": {
                    "$ref": "#/$defs/BlueprintNames"
                }
            }
        },
        "Blueprints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Blueprint"
            }
        },
        "Blueprint": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrchestrationNameString"
                },
                "Description": {
                    "$ref": "#/$defs/Generic512CharString"
                },
                "CreatedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "ParameterSpec": {
                    "$ref": "#/$defs/BlueprintParameterSpec"
                },
                "BlueprintLocation": {
                    "$ref": "#/$defs/GenericString"
                },
                "BlueprintServiceLocation": {
                    "$ref": "#/$defs/GenericString"
                },
                "Status": {
                    "$ref": "#/$defs/BlueprintStatus"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorString"
                },
                "LastActiveDefinition": {
                    "$ref": "#/$defs/LastActiveDefinition"
                }
            }
        },
        "OrchestrationNameString": {
            "type": "string"
        },
        "Generic512CharString": {
            "type": "string"
        },
        "TimestampValue": {
            "type": "string",
            "format": "date-time"
        },
        "BlueprintParameterSpec": {
            "type": "string"
        },
        "GenericString": {
            "type": "string"
        },
        "BlueprintStatus": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "UPDATING",
                "FAILED"
            ]
        },
        "ErrorString": {
            "type": "string"
        },
        "LastActiveDefinition": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/Generic512CharString"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "ParameterSpec": {
                    "$ref": "#/$defs/BlueprintParameterSpec"
                },
                "BlueprintLocation": {
                    "$ref": "#/$defs/GenericString"
                },
                "BlueprintServiceLocation": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "BlueprintNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrchestrationNameString"
            }
        },
        "BatchGetBlueprintsRequest": {
            "type": "object",
            "properties": {
                "Names": {
                    "$ref": "#/$defs/BatchGetBlueprintNames"
                },
                "IncludeBlueprint": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "IncludeParameterSpec": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "BatchGetBlueprintNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrchestrationNameString"
            }
        },
        "NullableBoolean": {
            "type": "boolean"
        },
        "BatchGetCrawlersResponse": {
            "type": "object",
            "properties": {
                "Crawlers": {
                    "$ref": "#/$defs/CrawlerList"
                },
                "CrawlersNotFound": {
                    "$ref": "#/$defs/CrawlerNameList"
                }
            }
        },
        "CrawlerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Crawler"
            }
        },
        "Crawler": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Role": {
                    "$ref": "#/$defs/Role"
                },
                "Targets": {
                    "$ref": "#/$defs/CrawlerTargets"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Classifiers": {
                    "$ref": "#/$defs/ClassifierNameList"
                },
                "RecrawlPolicy": {
                    "$ref": "#/$defs/RecrawlPolicy"
                },
                "SchemaChangePolicy": {
                    "$ref": "#/$defs/SchemaChangePolicy"
                },
                "LineageConfiguration": {
                    "$ref": "#/$defs/LineageConfiguration"
                },
                "State": {
                    "$ref": "#/$defs/CrawlerState"
                },
                "TablePrefix": {
                    "$ref": "#/$defs/TablePrefix"
                },
                "Schedule": {
                    "$ref": "#/$defs/Schedule"
                },
                "CrawlElapsedTime": {
                    "$ref": "#/$defs/MillisecondsCount"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastCrawl": {
                    "$ref": "#/$defs/LastCrawlInfo"
                },
                "Version": {
                    "$ref": "#/$defs/VersionId"
                },
                "Configuration": {
                    "$ref": "#/$defs/CrawlerConfiguration"
                },
                "CrawlerSecurityConfiguration": {
                    "$ref": "#/$defs/CrawlerSecurityConfiguration"
                },
                "LakeFormationConfiguration": {
                    "$ref": "#/$defs/LakeFormationConfiguration"
                }
            }
        },
        "Role": {
            "type": "string"
        },
        "CrawlerTargets": {
            "type": "object",
            "properties": {
                "S3Targets": {
                    "$ref": "#/$defs/S3TargetList"
                },
                "JdbcTargets": {
                    "$ref": "#/$defs/JdbcTargetList"
                },
                "MongoDBTargets": {
                    "$ref": "#/$defs/MongoDBTargetList"
                },
                "DynamoDBTargets": {
                    "$ref": "#/$defs/DynamoDBTargetList"
                },
                "CatalogTargets": {
                    "$ref": "#/$defs/CatalogTargetList"
                },
                "DeltaTargets": {
                    "$ref": "#/$defs/DeltaTargetList"
                },
                "IcebergTargets": {
                    "$ref": "#/$defs/IcebergTargetList"
                },
                "HudiTargets": {
                    "$ref": "#/$defs/HudiTargetList"
                }
            }
        },
        "S3TargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/S3Target"
            }
        },
        "S3Target": {
            "type": "object",
            "properties": {
                "Path": {
                    "$ref": "#/$defs/Path"
                },
                "Exclusions": {
                    "$ref": "#/$defs/PathList"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "SampleSize": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "EventQueueArn": {
                    "$ref": "#/$defs/EventQueueArn"
                },
                "DlqEventQueueArn": {
                    "$ref": "#/$defs/EventQueueArn"
                }
            }
        },
        "Path": {
            "type": "string"
        },
        "PathList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Path"
            }
        },
        "ConnectionName": {
            "type": "string"
        },
        "NullableInteger": {
            "type": "integer",
            "format": "int32"
        },
        "EventQueueArn": {
            "type": "string"
        },
        "JdbcTargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JdbcTarget"
            }
        },
        "JdbcTarget": {
            "type": "object",
            "properties": {
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "Path": {
                    "$ref": "#/$defs/Path"
                },
                "Exclusions": {
                    "$ref": "#/$defs/PathList"
                },
                "EnableAdditionalMetadata": {
                    "$ref": "#/$defs/EnableAdditionalMetadata"
                }
            }
        },
        "EnableAdditionalMetadata": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JdbcMetadataEntry"
            }
        },
        "JdbcMetadataEntry": {
            "enum": [
                "COMMENTS",
                "RAWTYPES"
            ]
        },
        "MongoDBTargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MongoDBTarget"
            }
        },
        "MongoDBTarget": {
            "type": "object",
            "properties": {
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "Path": {
                    "$ref": "#/$defs/Path"
                },
                "ScanAll": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "DynamoDBTargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DynamoDBTarget"
            }
        },
        "DynamoDBTarget": {
            "type": "object",
            "properties": {
                "Path": {
                    "$ref": "#/$defs/Path"
                },
                "scanAll": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "scanRate": {
                    "$ref": "#/$defs/NullableDouble"
                }
            }
        },
        "NullableDouble": {
            "type": "number",
            "format": "double"
        },
        "CatalogTargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CatalogTarget"
            }
        },
        "CatalogTarget": {
            "type": "object",
            "properties": {
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "Tables": {
                    "$ref": "#/$defs/CatalogTablesList"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "EventQueueArn": {
                    "$ref": "#/$defs/EventQueueArn"
                },
                "DlqEventQueueArn": {
                    "$ref": "#/$defs/EventQueueArn"
                }
            }
        },
        "CatalogTablesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "DeltaTargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeltaTarget"
            }
        },
        "DeltaTarget": {
            "type": "object",
            "properties": {
                "DeltaTables": {
                    "$ref": "#/$defs/PathList"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "WriteManifest": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "CreateNativeDeltaTable": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "IcebergTargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IcebergTarget"
            }
        },
        "IcebergTarget": {
            "type": "object",
            "properties": {
                "Paths": {
                    "$ref": "#/$defs/PathList"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "Exclusions": {
                    "$ref": "#/$defs/PathList"
                },
                "MaximumTraversalDepth": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "HudiTargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HudiTarget"
            }
        },
        "HudiTarget": {
            "type": "object",
            "properties": {
                "Paths": {
                    "$ref": "#/$defs/PathList"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "Exclusions": {
                    "$ref": "#/$defs/PathList"
                },
                "MaximumTraversalDepth": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "DatabaseName": {
            "type": "string"
        },
        "ClassifierNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "RecrawlPolicy": {
            "type": "object",
            "properties": {
                "RecrawlBehavior": {
                    "$ref": "#/$defs/RecrawlBehavior"
                }
            }
        },
        "RecrawlBehavior": {
            "enum": [
                "CRAWL_EVERYTHING",
                "CRAWL_NEW_FOLDERS_ONLY",
                "CRAWL_EVENT_MODE"
            ]
        },
        "SchemaChangePolicy": {
            "type": "object",
            "properties": {
                "UpdateBehavior": {
                    "$ref": "#/$defs/UpdateBehavior"
                },
                "DeleteBehavior": {
                    "$ref": "#/$defs/DeleteBehavior"
                }
            }
        },
        "UpdateBehavior": {
            "enum": [
                "LOG",
                "UPDATE_IN_DATABASE"
            ]
        },
        "DeleteBehavior": {
            "enum": [
                "LOG",
                "DELETE_FROM_DATABASE",
                "DEPRECATE_IN_DATABASE"
            ]
        },
        "LineageConfiguration": {
            "type": "object",
            "properties": {
                "CrawlerLineageSettings": {
                    "$ref": "#/$defs/CrawlerLineageSettings"
                }
            }
        },
        "CrawlerLineageSettings": {
            "enum": [
                "ENABLE",
                "DISABLE"
            ]
        },
        "CrawlerState": {
            "enum": [
                "READY",
                "RUNNING",
                "STOPPING"
            ]
        },
        "TablePrefix": {
            "type": "string"
        },
        "Schedule": {
            "type": "object",
            "properties": {
                "ScheduleExpression": {
                    "$ref": "#/$defs/CronExpression"
                },
                "State": {
                    "$ref": "#/$defs/ScheduleState"
                }
            }
        },
        "CronExpression": {
            "type": "string"
        },
        "ScheduleState": {
            "enum": [
                "SCHEDULED",
                "NOT_SCHEDULED",
                "TRANSITIONING"
            ]
        },
        "MillisecondsCount": {
            "type": "integer",
            "format": "int64"
        },
        "LastCrawlInfo": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/LastCrawlStatus"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "LogGroup": {
                    "$ref": "#/$defs/LogGroup"
                },
                "LogStream": {
                    "$ref": "#/$defs/LogStream"
                },
                "MessagePrefix": {
                    "$ref": "#/$defs/MessagePrefix"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "LastCrawlStatus": {
            "enum": [
                "SUCCEEDED",
                "CANCELLED",
                "FAILED"
            ]
        },
        "LogGroup": {
            "type": "string"
        },
        "LogStream": {
            "type": "string"
        },
        "MessagePrefix": {
            "type": "string"
        },
        "VersionId": {
            "type": "integer",
            "format": "int64"
        },
        "CrawlerConfiguration": {
            "type": "string"
        },
        "CrawlerSecurityConfiguration": {
            "type": "string"
        },
        "LakeFormationConfiguration": {
            "type": "object",
            "properties": {
                "UseLakeFormationCredentials": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "AccountId": {
            "type": "string"
        },
        "CrawlerNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "BatchGetCrawlersRequest": {
            "type": "object",
            "properties": {
                "CrawlerNames": {
                    "$ref": "#/$defs/CrawlerNameList"
                }
            }
        },
        "BatchGetCustomEntityTypesResponse": {
            "type": "object",
            "properties": {
                "CustomEntityTypes": {
                    "$ref": "#/$defs/CustomEntityTypes"
                },
                "CustomEntityTypesNotFound": {
                    "$ref": "#/$defs/CustomEntityTypeNames"
                }
            }
        },
        "CustomEntityTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomEntityType"
            }
        },
        "CustomEntityType": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "RegexString": {
                    "$ref": "#/$defs/NameString"
                },
                "ContextWords": {
                    "$ref": "#/$defs/ContextWords"
                }
            }
        },
        "ContextWords": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "CustomEntityTypeNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "BatchGetCustomEntityTypesRequest": {
            "type": "object",
            "properties": {
                "Names": {
                    "$ref": "#/$defs/CustomEntityTypeNames"
                }
            }
        },
        "BatchGetDataQualityResultResponse": {
            "type": "object",
            "properties": {
                "Results": {
                    "$ref": "#/$defs/DataQualityResultsList"
                },
                "ResultsNotFound": {
                    "$ref": "#/$defs/DataQualityResultIds"
                }
            }
        },
        "DataQualityResultsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataQualityResult"
            }
        },
        "DataQualityResult": {
            "type": "object",
            "properties": {
                "ResultId": {
                    "$ref": "#/$defs/HashString"
                },
                "ProfileId": {
                    "$ref": "#/$defs/HashString"
                },
                "Score": {
                    "$ref": "#/$defs/GenericBoundedDouble"
                },
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "RulesetName": {
                    "$ref": "#/$defs/NameString"
                },
                "EvaluationContext": {
                    "$ref": "#/$defs/GenericString"
                },
                "StartedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "JobRunId": {
                    "$ref": "#/$defs/HashString"
                },
                "RulesetEvaluationRunId": {
                    "$ref": "#/$defs/HashString"
                },
                "RuleResults": {
                    "$ref": "#/$defs/DataQualityRuleResults"
                },
                "AnalyzerResults": {
                    "$ref": "#/$defs/DataQualityAnalyzerResults"
                },
                "Observations": {
                    "$ref": "#/$defs/DataQualityObservations"
                }
            }
        },
        "HashString": {
            "type": "string"
        },
        "GenericBoundedDouble": {
            "type": "number",
            "format": "double"
        },
        "DataSource": {
            "type": "object",
            "properties": {
                "GlueTable": {
                    "$ref": "#/$defs/GlueTable"
                }
            }
        },
        "GlueTable": {
            "type": "object",
            "properties": {
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "CatalogId": {
                    "$ref": "#/$defs/NameString"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/NameString"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/GlueTableAdditionalOptions"
                }
            }
        },
        "GlueTableAdditionalOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DescriptionString"
            }
        },
        "DataQualityRuleResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataQualityRuleResult"
            }
        },
        "DataQualityRuleResult": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DataQualityRuleResultDescription"
                },
                "EvaluationMessage": {
                    "$ref": "#/$defs/DataQualityRuleResultDescription"
                },
                "Result": {
                    "$ref": "#/$defs/DataQualityRuleResultStatus"
                },
                "EvaluatedMetrics": {
                    "$ref": "#/$defs/EvaluatedMetricsMap"
                },
                "EvaluatedRule": {
                    "$ref": "#/$defs/DataQualityRuleResultDescription"
                }
            }
        },
        "DataQualityRuleResultDescription": {
            "type": "string"
        },
        "DataQualityRuleResultStatus": {
            "enum": [
                "PASS",
                "FAIL",
                "ERROR"
            ]
        },
        "EvaluatedMetricsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/NullableDouble"
            }
        },
        "DataQualityAnalyzerResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataQualityAnalyzerResult"
            }
        },
        "DataQualityAnalyzerResult": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DataQualityRuleResultDescription"
                },
                "EvaluationMessage": {
                    "$ref": "#/$defs/DataQualityRuleResultDescription"
                },
                "EvaluatedMetrics": {
                    "$ref": "#/$defs/EvaluatedMetricsMap"
                }
            }
        },
        "DataQualityObservations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataQualityObservation"
            }
        },
        "DataQualityObservation": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/DataQualityObservationDescription"
                },
                "MetricBasedObservation": {
                    "$ref": "#/$defs/MetricBasedObservation"
                }
            }
        },
        "DataQualityObservationDescription": {
            "type": "string"
        },
        "MetricBasedObservation": {
            "type": "object",
            "properties": {
                "MetricName": {
                    "$ref": "#/$defs/NameString"
                },
                "StatisticId": {
                    "$ref": "#/$defs/HashString"
                },
                "MetricValues": {
                    "$ref": "#/$defs/DataQualityMetricValues"
                },
                "NewRules": {
                    "$ref": "#/$defs/NewRules"
                }
            }
        },
        "DataQualityMetricValues": {
            "type": "object",
            "properties": {
                "ActualValue": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "ExpectedValue": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "LowerLimit": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "UpperLimit": {
                    "$ref": "#/$defs/NullableDouble"
                }
            }
        },
        "NewRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "DataQualityResultIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HashString"
            }
        },
        "BatchGetDataQualityResultRequest": {
            "type": "object",
            "properties": {
                "ResultIds": {
                    "$ref": "#/$defs/DataQualityResultIds"
                }
            }
        },
        "BatchGetDevEndpointsResponse": {
            "type": "object",
            "properties": {
                "DevEndpoints": {
                    "$ref": "#/$defs/DevEndpointList"
                },
                "DevEndpointsNotFound": {
                    "$ref": "#/$defs/DevEndpointNames"
                }
            }
        },
        "DevEndpointList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DevEndpoint"
            }
        },
        "DevEndpoint": {
            "type": "object",
            "properties": {
                "EndpointName": {
                    "$ref": "#/$defs/GenericString"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/StringList"
                },
                "SubnetId": {
                    "$ref": "#/$defs/GenericString"
                },
                "YarnEndpointAddress": {
                    "$ref": "#/$defs/GenericString"
                },
                "PrivateAddress": {
                    "$ref": "#/$defs/GenericString"
                },
                "ZeppelinRemoteSparkInterpreterPort": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "PublicAddress": {
                    "$ref": "#/$defs/GenericString"
                },
                "Status": {
                    "$ref": "#/$defs/GenericString"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "NumberOfNodes": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/GenericString"
                },
                "VpcId": {
                    "$ref": "#/$defs/GenericString"
                },
                "ExtraPythonLibsS3Path": {
                    "$ref": "#/$defs/GenericString"
                },
                "ExtraJarsS3Path": {
                    "$ref": "#/$defs/GenericString"
                },
                "FailureReason": {
                    "$ref": "#/$defs/GenericString"
                },
                "LastUpdateStatus": {
                    "$ref": "#/$defs/GenericString"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "LastModifiedTimestamp": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "PublicKey": {
                    "$ref": "#/$defs/GenericString"
                },
                "PublicKeys": {
                    "$ref": "#/$defs/PublicKeysList"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "Arguments": {
                    "$ref": "#/$defs/MapValue"
                }
            }
        },
        "RoleArn": {
            "type": "string"
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "IntegerValue": {
            "type": "integer",
            "format": "int32"
        },
        "WorkerType": {
            "enum": [
                "Standard",
                "G_1X",
                "G_2X",
                "G_025X",
                "G_4X",
                "G_8X",
                "Z_2X"
            ]
        },
        "GlueVersionString": {
            "type": "string"
        },
        "PublicKeysList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "MapValue": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "DevEndpointNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "BatchGetDevEndpointsRequest": {
            "type": "object",
            "properties": {
                "DevEndpointNames": {
                    "$ref": "#/$defs/DevEndpointNames"
                }
            }
        },
        "BatchGetJobsResponse": {
            "type": "object",
            "properties": {
                "Jobs": {
                    "$ref": "#/$defs/JobList"
                },
                "JobsNotFound": {
                    "$ref": "#/$defs/JobNameList"
                }
            }
        },
        "JobList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Job"
            }
        },
        "Job": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "JobMode": {
                    "$ref": "#/$defs/JobMode"
                },
                "JobRunQueuingEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "LogUri": {
                    "$ref": "#/$defs/UriString"
                },
                "Role": {
                    "$ref": "#/$defs/RoleString"
                },
                "CreatedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "ExecutionProperty": {
                    "$ref": "#/$defs/ExecutionProperty"
                },
                "Command": {
                    "$ref": "#/$defs/JobCommand"
                },
                "DefaultArguments": {
                    "$ref": "#/$defs/GenericMap"
                },
                "NonOverridableArguments": {
                    "$ref": "#/$defs/GenericMap"
                },
                "Connections": {
                    "$ref": "#/$defs/ConnectionsList"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/MaxRetries"
                },
                "AllocatedCapacity": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "NotificationProperty": {
                    "$ref": "#/$defs/NotificationProperty"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "CodeGenConfigurationNodes": {
                    "$ref": "#/$defs/CodeGenConfigurationNodes"
                },
                "ExecutionClass": {
                    "$ref": "#/$defs/ExecutionClass"
                },
                "SourceControlDetails": {
                    "$ref": "#/$defs/SourceControlDetails"
                },
                "MaintenanceWindow": {
                    "$ref": "#/$defs/MaintenanceWindow"
                },
                "ProfileName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "JobMode": {
            "enum": [
                "SCRIPT",
                "VISUAL",
                "NOTEBOOK"
            ]
        },
        "UriString": {
            "type": "string"
        },
        "RoleString": {
            "type": "string"
        },
        "ExecutionProperty": {
            "type": "object",
            "properties": {
                "MaxConcurrentRuns": {
                    "$ref": "#/$defs/MaxConcurrentRuns"
                }
            }
        },
        "MaxConcurrentRuns": {
            "type": "integer",
            "format": "int32"
        },
        "JobCommand": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/GenericString"
                },
                "ScriptLocation": {
                    "$ref": "#/$defs/ScriptLocationString"
                },
                "PythonVersion": {
                    "$ref": "#/$defs/PythonVersionString"
                },
                "Runtime": {
                    "$ref": "#/$defs/RuntimeNameString"
                }
            }
        },
        "ScriptLocationString": {
            "type": "string"
        },
        "PythonVersionString": {
            "type": "string"
        },
        "RuntimeNameString": {
            "type": "string"
        },
        "GenericMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "ConnectionsList": {
            "type": "object",
            "properties": {
                "Connections": {
                    "$ref": "#/$defs/OrchestrationStringList"
                }
            }
        },
        "OrchestrationStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "MaxRetries": {
            "type": "integer",
            "format": "int32"
        },
        "Timeout": {
            "type": "integer",
            "format": "int32"
        },
        "NotificationProperty": {
            "type": "object",
            "properties": {
                "NotifyDelayAfter": {
                    "$ref": "#/$defs/NotifyDelayAfter"
                }
            }
        },
        "NotifyDelayAfter": {
            "type": "integer",
            "format": "int32"
        },
        "CodeGenConfigurationNodes": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/CodeGenConfigurationNode"
            }
        },
        "CodeGenConfigurationNode": {
            "type": "object",
            "properties": {
                "AthenaConnectorSource": {
                    "$ref": "#/$defs/AthenaConnectorSource"
                },
                "JDBCConnectorSource": {
                    "$ref": "#/$defs/JDBCConnectorSource"
                },
                "SparkConnectorSource": {
                    "$ref": "#/$defs/SparkConnectorSource"
                },
                "CatalogSource": {
                    "$ref": "#/$defs/CatalogSource"
                },
                "RedshiftSource": {
                    "$ref": "#/$defs/RedshiftSource"
                },
                "S3CatalogSource": {
                    "$ref": "#/$defs/S3CatalogSource"
                },
                "S3CsvSource": {
                    "$ref": "#/$defs/S3CsvSource"
                },
                "S3JsonSource": {
                    "$ref": "#/$defs/S3JsonSource"
                },
                "S3ParquetSource": {
                    "$ref": "#/$defs/S3ParquetSource"
                },
                "RelationalCatalogSource": {
                    "$ref": "#/$defs/RelationalCatalogSource"
                },
                "DynamoDBCatalogSource": {
                    "$ref": "#/$defs/DynamoDBCatalogSource"
                },
                "JDBCConnectorTarget": {
                    "$ref": "#/$defs/JDBCConnectorTarget"
                },
                "SparkConnectorTarget": {
                    "$ref": "#/$defs/SparkConnectorTarget"
                },
                "CatalogTarget": {
                    "$ref": "#/$defs/BasicCatalogTarget"
                },
                "RedshiftTarget": {
                    "$ref": "#/$defs/RedshiftTarget"
                },
                "S3CatalogTarget": {
                    "$ref": "#/$defs/S3CatalogTarget"
                },
                "S3GlueParquetTarget": {
                    "$ref": "#/$defs/S3GlueParquetTarget"
                },
                "S3DirectTarget": {
                    "$ref": "#/$defs/S3DirectTarget"
                },
                "ApplyMapping": {
                    "$ref": "#/$defs/ApplyMapping"
                },
                "SelectFields": {
                    "$ref": "#/$defs/SelectFields"
                },
                "DropFields": {
                    "$ref": "#/$defs/DropFields"
                },
                "RenameField": {
                    "$ref": "#/$defs/RenameField"
                },
                "Spigot": {
                    "$ref": "#/$defs/Spigot"
                },
                "Join": {
                    "$ref": "#/$defs/Join"
                },
                "SplitFields": {
                    "$ref": "#/$defs/SplitFields"
                },
                "SelectFromCollection": {
                    "$ref": "#/$defs/SelectFromCollection"
                },
                "FillMissingValues": {
                    "$ref": "#/$defs/FillMissingValues"
                },
                "Filter": {
                    "$ref": "#/$defs/Filter"
                },
                "CustomCode": {
                    "$ref": "#/$defs/CustomCode"
                },
                "SparkSQL": {
                    "$ref": "#/$defs/SparkSQL"
                },
                "DirectKinesisSource": {
                    "$ref": "#/$defs/DirectKinesisSource"
                },
                "DirectKafkaSource": {
                    "$ref": "#/$defs/DirectKafkaSource"
                },
                "CatalogKinesisSource": {
                    "$ref": "#/$defs/CatalogKinesisSource"
                },
                "CatalogKafkaSource": {
                    "$ref": "#/$defs/CatalogKafkaSource"
                },
                "DropNullFields": {
                    "$ref": "#/$defs/DropNullFields"
                },
                "Merge": {
                    "$ref": "#/$defs/Merge"
                },
                "Union": {
                    "$ref": "#/$defs/Union"
                },
                "PIIDetection": {
                    "$ref": "#/$defs/PIIDetection"
                },
                "Aggregate": {
                    "$ref": "#/$defs/Aggregate"
                },
                "DropDuplicates": {
                    "$ref": "#/$defs/DropDuplicates"
                },
                "GovernedCatalogTarget": {
                    "$ref": "#/$defs/GovernedCatalogTarget"
                },
                "GovernedCatalogSource": {
                    "$ref": "#/$defs/GovernedCatalogSource"
                },
                "MicrosoftSQLServerCatalogSource": {
                    "$ref": "#/$defs/MicrosoftSQLServerCatalogSource"
                },
                "MySQLCatalogSource": {
                    "$ref": "#/$defs/MySQLCatalogSource"
                },
                "OracleSQLCatalogSource": {
                    "$ref": "#/$defs/OracleSQLCatalogSource"
                },
                "PostgreSQLCatalogSource": {
                    "$ref": "#/$defs/PostgreSQLCatalogSource"
                },
                "MicrosoftSQLServerCatalogTarget": {
                    "$ref": "#/$defs/MicrosoftSQLServerCatalogTarget"
                },
                "MySQLCatalogTarget": {
                    "$ref": "#/$defs/MySQLCatalogTarget"
                },
                "OracleSQLCatalogTarget": {
                    "$ref": "#/$defs/OracleSQLCatalogTarget"
                },
                "PostgreSQLCatalogTarget": {
                    "$ref": "#/$defs/PostgreSQLCatalogTarget"
                },
                "DynamicTransform": {
                    "$ref": "#/$defs/DynamicTransform"
                },
                "EvaluateDataQuality": {
                    "$ref": "#/$defs/EvaluateDataQuality"
                },
                "S3CatalogHudiSource": {
                    "$ref": "#/$defs/S3CatalogHudiSource"
                },
                "CatalogHudiSource": {
                    "$ref": "#/$defs/CatalogHudiSource"
                },
                "S3HudiSource": {
                    "$ref": "#/$defs/S3HudiSource"
                },
                "S3HudiCatalogTarget": {
                    "$ref": "#/$defs/S3HudiCatalogTarget"
                },
                "S3HudiDirectTarget": {
                    "$ref": "#/$defs/S3HudiDirectTarget"
                },
                "DirectJDBCSource": {
                    "$ref": "#/$defs/DirectJDBCSource"
                },
                "S3CatalogDeltaSource": {
                    "$ref": "#/$defs/S3CatalogDeltaSource"
                },
                "CatalogDeltaSource": {
                    "$ref": "#/$defs/CatalogDeltaSource"
                },
                "S3DeltaSource": {
                    "$ref": "#/$defs/S3DeltaSource"
                },
                "S3DeltaCatalogTarget": {
                    "$ref": "#/$defs/S3DeltaCatalogTarget"
                },
                "S3DeltaDirectTarget": {
                    "$ref": "#/$defs/S3DeltaDirectTarget"
                },
                "AmazonRedshiftSource": {
                    "$ref": "#/$defs/AmazonRedshiftSource"
                },
                "AmazonRedshiftTarget": {
                    "$ref": "#/$defs/AmazonRedshiftTarget"
                },
                "EvaluateDataQualityMultiFrame": {
                    "$ref": "#/$defs/EvaluateDataQualityMultiFrame"
                },
                "Recipe": {
                    "$ref": "#/$defs/Recipe"
                },
                "SnowflakeSource": {
                    "$ref": "#/$defs/SnowflakeSource"
                },
                "SnowflakeTarget": {
                    "$ref": "#/$defs/SnowflakeTarget"
                },
                "ConnectorDataSource": {
                    "$ref": "#/$defs/ConnectorDataSource"
                },
                "ConnectorDataTarget": {
                    "$ref": "#/$defs/ConnectorDataTarget"
                }
            }
        },
        "AthenaConnectorSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectorName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectionTable": {
                    "$ref": "#/$defs/EnclosedInStringPropertyWithQuote"
                },
                "SchemaName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "NodeName": {
            "type": "string"
        },
        "EnclosedInStringProperty": {
            "type": "string"
        },
        "EnclosedInStringPropertyWithQuote": {
            "type": "string"
        },
        "GlueSchemas": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlueSchema"
            }
        },
        "GlueSchema": {
            "type": "object",
            "properties": {
                "Columns": {
                    "$ref": "#/$defs/GlueStudioSchemaColumnList"
                }
            }
        },
        "GlueStudioSchemaColumnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlueStudioSchemaColumn"
            }
        },
        "GlueStudioSchemaColumn": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/GlueStudioColumnNameString"
                },
                "Type": {
                    "$ref": "#/$defs/ColumnTypeString"
                }
            }
        },
        "GlueStudioColumnNameString": {
            "type": "string"
        },
        "JDBCConnectorSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectorName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/JDBCConnectorOptions"
                },
                "ConnectionTable": {
                    "$ref": "#/$defs/EnclosedInStringPropertyWithQuote"
                },
                "Query": {
                    "$ref": "#/$defs/SqlQuery"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "JDBCConnectorOptions": {
            "type": "object",
            "properties": {
                "FilterPredicate": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "PartitionColumn": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "LowerBound": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "UpperBound": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "NumPartitions": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "JobBookmarkKeys": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "JobBookmarkKeysSortOrder": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "DataTypeMapping": {
                    "$ref": "#/$defs/JDBCDataTypeMapping"
                }
            }
        },
        "BoxedNonNegativeLong": {
            "type": "integer",
            "format": "int64"
        },
        "EnclosedInStringProperties": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnclosedInStringProperty"
            }
        },
        "JDBCDataTypeMapping": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/GlueRecordType"
            }
        },
        "GlueRecordType": {
            "enum": [
                "DATE",
                "STRING",
                "TIMESTAMP",
                "INT",
                "FLOAT",
                "LONG",
                "BIGDECIMAL",
                "BYTE",
                "SHORT",
                "DOUBLE"
            ]
        },
        "SqlQuery": {
            "type": "string"
        },
        "SparkConnectorSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectorName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "AdditionalOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/EnclosedInStringProperty"
            }
        },
        "CatalogSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "RedshiftSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "RedshiftTmpDir": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "TmpDirIAMRole": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "S3CatalogSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "PartitionPredicate": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/S3SourceAdditionalOptions"
                }
            }
        },
        "S3SourceAdditionalOptions": {
            "type": "object",
            "properties": {
                "BoundedSize": {
                    "$ref": "#/$defs/BoxedLong"
                },
                "BoundedFiles": {
                    "$ref": "#/$defs/BoxedLong"
                }
            }
        },
        "BoxedLong": {
            "type": "integer",
            "format": "int64"
        },
        "S3CsvSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Paths": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "CompressionType": {
                    "$ref": "#/$defs/CompressionType"
                },
                "Exclusions": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "GroupSize": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "GroupFiles": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Recurse": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "MaxBand": {
                    "$ref": "#/$defs/BoxedNonNegativeInt"
                },
                "MaxFilesInBand": {
                    "$ref": "#/$defs/BoxedNonNegativeInt"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/S3DirectSourceAdditionalOptions"
                },
                "Separator": {
                    "$ref": "#/$defs/Separator"
                },
                "Escaper": {
                    "$ref": "#/$defs/EnclosedInStringPropertyWithQuote"
                },
                "QuoteChar": {
                    "$ref": "#/$defs/QuoteChar"
                },
                "Multiline": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "WithHeader": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "WriteHeader": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "SkipFirst": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "OptimizePerformance": {
                    "$ref": "#/$defs/BooleanValue"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "CompressionType": {
            "enum": [
                "GZIP",
                "BZIP2"
            ]
        },
        "BoxedBoolean": {
            "type": "boolean"
        },
        "BoxedNonNegativeInt": {
            "type": "integer",
            "format": "int32"
        },
        "S3DirectSourceAdditionalOptions": {
            "type": "object",
            "properties": {
                "BoundedSize": {
                    "$ref": "#/$defs/BoxedLong"
                },
                "BoundedFiles": {
                    "$ref": "#/$defs/BoxedLong"
                },
                "EnableSamplePath": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "SamplePath": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "Separator": {
            "enum": [
                "COMMA",
                "CTRLA",
                "PIPE",
                "SEMICOLON",
                "TAB"
            ]
        },
        "QuoteChar": {
            "enum": [
                "QUOTE",
                "QUILLEMET",
                "SINGLE_QUOTE",
                "DISABLED"
            ]
        },
        "BooleanValue": {
            "type": "boolean"
        },
        "S3JsonSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Paths": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "CompressionType": {
                    "$ref": "#/$defs/CompressionType"
                },
                "Exclusions": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "GroupSize": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "GroupFiles": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Recurse": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "MaxBand": {
                    "$ref": "#/$defs/BoxedNonNegativeInt"
                },
                "MaxFilesInBand": {
                    "$ref": "#/$defs/BoxedNonNegativeInt"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/S3DirectSourceAdditionalOptions"
                },
                "JsonPath": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Multiline": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "S3ParquetSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Paths": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "CompressionType": {
                    "$ref": "#/$defs/ParquetCompressionType"
                },
                "Exclusions": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "GroupSize": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "GroupFiles": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Recurse": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "MaxBand": {
                    "$ref": "#/$defs/BoxedNonNegativeInt"
                },
                "MaxFilesInBand": {
                    "$ref": "#/$defs/BoxedNonNegativeInt"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/S3DirectSourceAdditionalOptions"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "ParquetCompressionType": {
            "enum": [
                "SNAPPY",
                "LZO",
                "GZIP",
                "UNCOMPRESSED",
                "NONE"
            ]
        },
        "RelationalCatalogSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "DynamoDBCatalogSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "JDBCConnectorTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectionTable": {
                    "$ref": "#/$defs/EnclosedInStringPropertyWithQuote"
                },
                "ConnectorName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "OneInput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeId"
            }
        },
        "NodeId": {
            "type": "string"
        },
        "SparkConnectorTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectorName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "BasicCatalogTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/GlueStudioPathList"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "GlueStudioPathList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnclosedInStringProperties"
            }
        },
        "RedshiftTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "RedshiftTmpDir": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "TmpDirIAMRole": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "UpsertRedshiftOptions": {
                    "$ref": "#/$defs/UpsertRedshiftTargetOptions"
                }
            }
        },
        "UpsertRedshiftTargetOptions": {
            "type": "object",
            "properties": {
                "TableLocation": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "UpsertKeys": {
                    "$ref": "#/$defs/EnclosedInStringPropertiesMinOne"
                }
            }
        },
        "EnclosedInStringPropertiesMinOne": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnclosedInStringProperty"
            }
        },
        "S3CatalogTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/GlueStudioPathList"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "SchemaChangePolicy": {
                    "$ref": "#/$defs/CatalogSchemaChangePolicy"
                }
            }
        },
        "CatalogSchemaChangePolicy": {
            "type": "object",
            "properties": {
                "EnableUpdateCatalog": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "UpdateBehavior": {
                    "$ref": "#/$defs/UpdateCatalogBehavior"
                }
            }
        },
        "UpdateCatalogBehavior": {
            "enum": [
                "UPDATE_IN_DATABASE",
                "LOG"
            ]
        },
        "S3GlueParquetTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/GlueStudioPathList"
                },
                "Path": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Compression": {
                    "$ref": "#/$defs/ParquetCompressionType"
                },
                "SchemaChangePolicy": {
                    "$ref": "#/$defs/DirectSchemaChangePolicy"
                }
            }
        },
        "DirectSchemaChangePolicy": {
            "type": "object",
            "properties": {
                "EnableUpdateCatalog": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "UpdateBehavior": {
                    "$ref": "#/$defs/UpdateCatalogBehavior"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "S3DirectTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/GlueStudioPathList"
                },
                "Path": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Compression": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Format": {
                    "$ref": "#/$defs/TargetFormat"
                },
                "SchemaChangePolicy": {
                    "$ref": "#/$defs/DirectSchemaChangePolicy"
                }
            }
        },
        "TargetFormat": {
            "enum": [
                "JSON",
                "CSV",
                "AVRO",
                "ORC",
                "PARQUET",
                "HUDI",
                "DELTA"
            ]
        },
        "ApplyMapping": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Mapping": {
                    "$ref": "#/$defs/Mappings"
                }
            }
        },
        "Mappings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Mapping"
            }
        },
        "Mapping": {
            "type": "object",
            "properties": {
                "ToKey": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "FromPath": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "FromType": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ToType": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Dropped": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "Children": {
                    "$ref": "#/$defs/Mappings"
                }
            }
        },
        "SelectFields": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Paths": {
                    "$ref": "#/$defs/GlueStudioPathList"
                }
            }
        },
        "DropFields": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Paths": {
                    "$ref": "#/$defs/GlueStudioPathList"
                }
            }
        },
        "RenameField": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "SourcePath": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "TargetPath": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                }
            }
        },
        "Spigot": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Path": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Topk": {
                    "$ref": "#/$defs/Topk"
                },
                "Prob": {
                    "$ref": "#/$defs/Prob"
                }
            }
        },
        "Topk": {
            "type": "integer",
            "format": "int32"
        },
        "Prob": {
            "type": "number",
            "format": "double"
        },
        "Join": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/TwoInputs"
                },
                "JoinType": {
                    "$ref": "#/$defs/JoinType"
                },
                "Columns": {
                    "$ref": "#/$defs/JoinColumns"
                }
            }
        },
        "TwoInputs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeId"
            }
        },
        "JoinType": {
            "enum": [
                "EQUIJOIN",
                "LEFT",
                "RIGHT",
                "OUTER",
                "LEFT_SEMI",
                "LEFT_ANTI"
            ]
        },
        "JoinColumns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JoinColumn"
            }
        },
        "JoinColumn": {
            "type": "object",
            "properties": {
                "From": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Keys": {
                    "$ref": "#/$defs/GlueStudioPathList"
                }
            }
        },
        "SplitFields": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Paths": {
                    "$ref": "#/$defs/GlueStudioPathList"
                }
            }
        },
        "SelectFromCollection": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Index": {
                    "$ref": "#/$defs/NonNegativeInt"
                }
            }
        },
        "NonNegativeInt": {
            "type": "integer",
            "format": "int32"
        },
        "FillMissingValues": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "ImputedPath": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "FilledPath": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "LogicalOperator": {
                    "$ref": "#/$defs/FilterLogicalOperator"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterExpressions"
                }
            }
        },
        "FilterLogicalOperator": {
            "enum": [
                "AND",
                "OR"
            ]
        },
        "FilterExpressions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterExpression"
            }
        },
        "FilterExpression": {
            "type": "object",
            "properties": {
                "Operation": {
                    "$ref": "#/$defs/FilterOperation"
                },
                "Negated": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "Values": {
                    "$ref": "#/$defs/FilterValues"
                }
            }
        },
        "FilterOperation": {
            "enum": [
                "EQ",
                "LT",
                "GT",
                "LTE",
                "GTE",
                "REGEX",
                "ISNULL"
            ]
        },
        "FilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterValue"
            }
        },
        "FilterValue": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/FilterValueType"
                },
                "Value": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                }
            }
        },
        "FilterValueType": {
            "enum": [
                "COLUMNEXTRACTED",
                "CONSTANT"
            ]
        },
        "CustomCode": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/ManyInputs"
                },
                "Code": {
                    "$ref": "#/$defs/ExtendedString"
                },
                "ClassName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "ManyInputs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeId"
            }
        },
        "ExtendedString": {
            "type": "string"
        },
        "SparkSQL": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/ManyInputs"
                },
                "SqlQuery": {
                    "$ref": "#/$defs/SqlQuery"
                },
                "SqlAliases": {
                    "$ref": "#/$defs/SqlAliases"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "SqlAliases": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SqlAlias"
            }
        },
        "SqlAlias": {
            "type": "object",
            "properties": {
                "From": {
                    "$ref": "#/$defs/NodeId"
                },
                "Alias": {
                    "$ref": "#/$defs/EnclosedInStringPropertyWithQuote"
                }
            }
        },
        "DirectKinesisSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "WindowSize": {
                    "$ref": "#/$defs/BoxedPositiveInt"
                },
                "DetectSchema": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "StreamingOptions": {
                    "$ref": "#/$defs/KinesisStreamingSourceOptions"
                },
                "DataPreviewOptions": {
                    "$ref": "#/$defs/StreamingDataPreviewOptions"
                }
            }
        },
        "BoxedPositiveInt": {
            "type": "integer",
            "format": "int32"
        },
        "KinesisStreamingSourceOptions": {
            "type": "object",
            "properties": {
                "EndpointUrl": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "StreamName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Classification": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Delimiter": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "StartingPosition": {
                    "$ref": "#/$defs/StartingPosition"
                },
                "MaxFetchTimeInMs": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "MaxFetchRecordsPerShard": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "MaxRecordPerRead": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "AddIdleTimeBetweenReads": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "IdleTimeBetweenReadsInMs": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "DescribeShardInterval": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "NumRetries": {
                    "$ref": "#/$defs/BoxedNonNegativeInt"
                },
                "RetryIntervalMs": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "MaxRetryIntervalMs": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "AvoidEmptyBatches": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "StreamArn": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "RoleArn": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "RoleSessionName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AddRecordTimestamp": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "EmitConsumerLagMetrics": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "StartingTimestamp": {
                    "$ref": "#/$defs/Iso8601DateTime"
                }
            }
        },
        "StartingPosition": {
            "enum": [
                "LATEST",
                "TRIM_HORIZON",
                "EARLIEST",
                "TIMESTAMP"
            ]
        },
        "Iso8601DateTime": {
            "type": "string",
            "format": "date-time"
        },
        "StreamingDataPreviewOptions": {
            "type": "object",
            "properties": {
                "PollingTime": {
                    "$ref": "#/$defs/PollingTime"
                },
                "RecordPollingLimit": {
                    "$ref": "#/$defs/PositiveLong"
                }
            }
        },
        "PollingTime": {
            "type": "integer",
            "format": "int64"
        },
        "PositiveLong": {
            "type": "integer",
            "format": "int64"
        },
        "DirectKafkaSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "StreamingOptions": {
                    "$ref": "#/$defs/KafkaStreamingSourceOptions"
                },
                "WindowSize": {
                    "$ref": "#/$defs/BoxedPositiveInt"
                },
                "DetectSchema": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "DataPreviewOptions": {
                    "$ref": "#/$defs/StreamingDataPreviewOptions"
                }
            }
        },
        "KafkaStreamingSourceOptions": {
            "type": "object",
            "properties": {
                "BootstrapServers": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "SecurityProtocol": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "TopicName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Assign": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "SubscribePattern": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Classification": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Delimiter": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "StartingOffsets": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "EndingOffsets": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "PollTimeoutMs": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "NumRetries": {
                    "$ref": "#/$defs/BoxedNonNegativeInt"
                },
                "RetryIntervalMs": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "MaxOffsetsPerTrigger": {
                    "$ref": "#/$defs/BoxedNonNegativeLong"
                },
                "MinPartitions": {
                    "$ref": "#/$defs/BoxedNonNegativeInt"
                },
                "IncludeHeaders": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "AddRecordTimestamp": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "EmitConsumerLagMetrics": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "StartingTimestamp": {
                    "$ref": "#/$defs/Iso8601DateTime"
                }
            }
        },
        "CatalogKinesisSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "WindowSize": {
                    "$ref": "#/$defs/BoxedPositiveInt"
                },
                "DetectSchema": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "StreamingOptions": {
                    "$ref": "#/$defs/KinesisStreamingSourceOptions"
                },
                "DataPreviewOptions": {
                    "$ref": "#/$defs/StreamingDataPreviewOptions"
                }
            }
        },
        "CatalogKafkaSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "WindowSize": {
                    "$ref": "#/$defs/BoxedPositiveInt"
                },
                "DetectSchema": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "StreamingOptions": {
                    "$ref": "#/$defs/KafkaStreamingSourceOptions"
                },
                "DataPreviewOptions": {
                    "$ref": "#/$defs/StreamingDataPreviewOptions"
                }
            }
        },
        "DropNullFields": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "NullCheckBoxList": {
                    "$ref": "#/$defs/NullCheckBoxList"
                },
                "NullTextList": {
                    "$ref": "#/$defs/NullValueFields"
                }
            }
        },
        "NullCheckBoxList": {
            "type": "object",
            "properties": {
                "IsEmpty": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "IsNullString": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "IsNegOne": {
                    "$ref": "#/$defs/BoxedBoolean"
                }
            }
        },
        "NullValueFields": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NullValueField"
            }
        },
        "NullValueField": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Datatype": {
                    "$ref": "#/$defs/Datatype"
                }
            }
        },
        "Datatype": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/GenericLimitedString"
                },
                "Label": {
                    "$ref": "#/$defs/GenericLimitedString"
                }
            }
        },
        "GenericLimitedString": {
            "type": "string"
        },
        "Merge": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/TwoInputs"
                },
                "Source": {
                    "$ref": "#/$defs/NodeId"
                },
                "PrimaryKeys": {
                    "$ref": "#/$defs/GlueStudioPathList"
                }
            }
        },
        "Union": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/TwoInputs"
                },
                "UnionType": {
                    "$ref": "#/$defs/UnionType"
                }
            }
        },
        "UnionType": {
            "enum": [
                "ALL",
                "DISTINCT"
            ]
        },
        "PIIDetection": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "PiiType": {
                    "$ref": "#/$defs/PiiType"
                },
                "EntityTypesToDetect": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "OutputColumnName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "SampleFraction": {
                    "$ref": "#/$defs/BoxedDoubleFraction"
                },
                "ThresholdFraction": {
                    "$ref": "#/$defs/BoxedDoubleFraction"
                },
                "MaskValue": {
                    "$ref": "#/$defs/MaskValue"
                }
            }
        },
        "PiiType": {
            "enum": [
                "RowAudit",
                "RowMasking",
                "ColumnAudit",
                "ColumnMasking"
            ]
        },
        "BoxedDoubleFraction": {
            "type": "number",
            "format": "double"
        },
        "MaskValue": {
            "type": "string"
        },
        "Aggregate": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Groups": {
                    "$ref": "#/$defs/GlueStudioPathList"
                },
                "Aggs": {
                    "$ref": "#/$defs/AggregateOperations"
                }
            }
        },
        "AggregateOperations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AggregateOperation"
            }
        },
        "AggregateOperation": {
            "type": "object",
            "properties": {
                "Column": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "AggFunc": {
                    "$ref": "#/$defs/AggFunction"
                }
            }
        },
        "AggFunction": {
            "enum": [
                "avg",
                "countDistinct",
                "count",
                "first",
                "last",
                "kurtosis",
                "max",
                "min",
                "skewness",
                "stddev_samp",
                "stddev_pop",
                "sum",
                "sumDistinct",
                "var_samp",
                "var_pop"
            ]
        },
        "DropDuplicates": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Columns": {
                    "$ref": "#/$defs/LimitedPathList"
                }
            }
        },
        "LimitedPathList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LimitedStringList"
            }
        },
        "LimitedStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GenericLimitedString"
            }
        },
        "GovernedCatalogTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/GlueStudioPathList"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "SchemaChangePolicy": {
                    "$ref": "#/$defs/CatalogSchemaChangePolicy"
                }
            }
        },
        "GovernedCatalogSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "PartitionPredicate": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/S3SourceAdditionalOptions"
                }
            }
        },
        "MicrosoftSQLServerCatalogSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "MySQLCatalogSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "OracleSQLCatalogSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "PostgreSQLCatalogSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "MicrosoftSQLServerCatalogTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "MySQLCatalogTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "OracleSQLCatalogTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "PostgreSQLCatalogTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "DynamicTransform": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "TransformName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Parameters": {
                    "$ref": "#/$defs/TransformConfigParameterList"
                },
                "FunctionName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Path": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Version": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "TransformConfigParameterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransformConfigParameter"
            }
        },
        "TransformConfigParameter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Type": {
                    "$ref": "#/$defs/ParamType"
                },
                "ValidationRule": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ValidationMessage": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Value": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "ListType": {
                    "$ref": "#/$defs/ParamType"
                },
                "IsOptional": {
                    "$ref": "#/$defs/BoxedBoolean"
                }
            }
        },
        "ParamType": {
            "enum": [
                "STR",
                "INT",
                "FLOAT",
                "COMPLEX",
                "BOOL",
                "LIST",
                "NULL"
            ]
        },
        "EvaluateDataQuality": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Ruleset": {
                    "$ref": "#/$defs/DQDLString"
                },
                "Output": {
                    "$ref": "#/$defs/DQTransformOutput"
                },
                "PublishingOptions": {
                    "$ref": "#/$defs/DQResultsPublishingOptions"
                },
                "StopJobOnFailureOptions": {
                    "$ref": "#/$defs/DQStopJobOnFailureOptions"
                }
            }
        },
        "DQDLString": {
            "type": "string"
        },
        "DQTransformOutput": {
            "enum": [
                "PrimaryInput",
                "EvaluationResults"
            ]
        },
        "DQResultsPublishingOptions": {
            "type": "object",
            "properties": {
                "EvaluationContext": {
                    "$ref": "#/$defs/GenericLimitedString"
                },
                "ResultsS3Prefix": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "CloudWatchMetricsEnabled": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "ResultsPublishingEnabled": {
                    "$ref": "#/$defs/BoxedBoolean"
                }
            }
        },
        "DQStopJobOnFailureOptions": {
            "type": "object",
            "properties": {
                "StopJobOnFailureTiming": {
                    "$ref": "#/$defs/DQStopJobOnFailureTiming"
                }
            }
        },
        "DQStopJobOnFailureTiming": {
            "enum": [
                "Immediate",
                "AfterDataLoad"
            ]
        },
        "S3CatalogHudiSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AdditionalHudiOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "CatalogHudiSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AdditionalHudiOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "S3HudiSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Paths": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "AdditionalHudiOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/S3DirectSourceAdditionalOptions"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "S3HudiCatalogTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/GlueStudioPathList"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "SchemaChangePolicy": {
                    "$ref": "#/$defs/CatalogSchemaChangePolicy"
                }
            }
        },
        "S3HudiDirectTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "Path": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Compression": {
                    "$ref": "#/$defs/HudiTargetCompressionType"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/GlueStudioPathList"
                },
                "Format": {
                    "$ref": "#/$defs/TargetFormat"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "SchemaChangePolicy": {
                    "$ref": "#/$defs/DirectSchemaChangePolicy"
                }
            }
        },
        "HudiTargetCompressionType": {
            "enum": [
                "GZIP",
                "LZO",
                "UNCOMPRESSED",
                "SNAPPY"
            ]
        },
        "DirectJDBCSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/JDBCConnectionType"
                },
                "RedshiftTmpDir": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "JDBCConnectionType": {
            "enum": [
                "sqlserver",
                "mysql",
                "oracle",
                "postgresql",
                "redshift"
            ]
        },
        "S3CatalogDeltaSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AdditionalDeltaOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "CatalogDeltaSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AdditionalDeltaOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "S3DeltaSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Paths": {
                    "$ref": "#/$defs/EnclosedInStringProperties"
                },
                "AdditionalDeltaOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/S3DirectSourceAdditionalOptions"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "S3DeltaCatalogTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/GlueStudioPathList"
                },
                "Table": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Database": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "SchemaChangePolicy": {
                    "$ref": "#/$defs/CatalogSchemaChangePolicy"
                }
            }
        },
        "S3DeltaDirectTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/GlueStudioPathList"
                },
                "Path": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Compression": {
                    "$ref": "#/$defs/DeltaTargetCompressionType"
                },
                "Format": {
                    "$ref": "#/$defs/TargetFormat"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "SchemaChangePolicy": {
                    "$ref": "#/$defs/DirectSchemaChangePolicy"
                }
            }
        },
        "DeltaTargetCompressionType": {
            "enum": [
                "UNCOMPRESSED",
                "SNAPPY"
            ]
        },
        "AmazonRedshiftSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Data": {
                    "$ref": "#/$defs/AmazonRedshiftNodeData"
                }
            }
        },
        "AmazonRedshiftNodeData": {
            "type": "object",
            "properties": {
                "AccessType": {
                    "$ref": "#/$defs/GenericLimitedString"
                },
                "SourceType": {
                    "$ref": "#/$defs/GenericLimitedString"
                },
                "Connection": {
                    "$ref": "#/$defs/Option"
                },
                "Schema": {
                    "$ref": "#/$defs/Option"
                },
                "Table": {
                    "$ref": "#/$defs/Option"
                },
                "CatalogDatabase": {
                    "$ref": "#/$defs/Option"
                },
                "CatalogTable": {
                    "$ref": "#/$defs/Option"
                },
                "CatalogRedshiftSchema": {
                    "$ref": "#/$defs/GenericString"
                },
                "CatalogRedshiftTable": {
                    "$ref": "#/$defs/GenericString"
                },
                "TempDir": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "IamRole": {
                    "$ref": "#/$defs/Option"
                },
                "AdvancedOptions": {
                    "$ref": "#/$defs/AmazonRedshiftAdvancedOptions"
                },
                "SampleQuery": {
                    "$ref": "#/$defs/GenericString"
                },
                "PreAction": {
                    "$ref": "#/$defs/GenericString"
                },
                "PostAction": {
                    "$ref": "#/$defs/GenericString"
                },
                "Action": {
                    "$ref": "#/$defs/GenericString"
                },
                "TablePrefix": {
                    "$ref": "#/$defs/GenericLimitedString"
                },
                "Upsert": {
                    "$ref": "#/$defs/BooleanValue"
                },
                "MergeAction": {
                    "$ref": "#/$defs/GenericLimitedString"
                },
                "MergeWhenMatched": {
                    "$ref": "#/$defs/GenericLimitedString"
                },
                "MergeWhenNotMatched": {
                    "$ref": "#/$defs/GenericLimitedString"
                },
                "MergeClause": {
                    "$ref": "#/$defs/GenericString"
                },
                "CrawlerConnection": {
                    "$ref": "#/$defs/GenericString"
                },
                "TableSchema": {
                    "$ref": "#/$defs/OptionList"
                },
                "StagingTable": {
                    "$ref": "#/$defs/GenericString"
                },
                "SelectedColumns": {
                    "$ref": "#/$defs/OptionList"
                }
            }
        },
        "Option": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Label": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Description": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                }
            }
        },
        "AmazonRedshiftAdvancedOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AmazonRedshiftAdvancedOption"
            }
        },
        "AmazonRedshiftAdvancedOption": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/GenericString"
                },
                "Value": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "OptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Option"
            }
        },
        "AmazonRedshiftTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Data": {
                    "$ref": "#/$defs/AmazonRedshiftNodeData"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                }
            }
        },
        "EvaluateDataQualityMultiFrame": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/ManyInputs"
                },
                "AdditionalDataSources": {
                    "$ref": "#/$defs/DQDLAliases"
                },
                "Ruleset": {
                    "$ref": "#/$defs/DQDLString"
                },
                "PublishingOptions": {
                    "$ref": "#/$defs/DQResultsPublishingOptions"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/DQAdditionalOptions"
                },
                "StopJobOnFailureOptions": {
                    "$ref": "#/$defs/DQStopJobOnFailureOptions"
                }
            }
        },
        "DQDLAliases": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/EnclosedInStringProperty"
            }
        },
        "DQAdditionalOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "Recipe": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                },
                "RecipeReference": {
                    "$ref": "#/$defs/RecipeReference"
                },
                "RecipeSteps": {
                    "$ref": "#/$defs/RecipeSteps"
                }
            }
        },
        "RecipeReference": {
            "type": "object",
            "properties": {
                "RecipeArn": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "RecipeVersion": {
                    "$ref": "#/$defs/RecipeVersion"
                }
            }
        },
        "RecipeVersion": {
            "type": "string"
        },
        "RecipeSteps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecipeStep"
            }
        },
        "RecipeStep": {
            "type": "object",
            "properties": {
                "Action": {
                    "$ref": "#/$defs/RecipeAction"
                },
                "ConditionExpressions": {
                    "$ref": "#/$defs/ConditionExpressionList"
                }
            }
        },
        "RecipeAction": {
            "type": "object",
            "properties": {
                "Operation": {
                    "$ref": "#/$defs/Operation"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParameterMap"
                }
            }
        },
        "Operation": {
            "type": "string"
        },
        "ParameterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ParameterValue"
            }
        },
        "ParameterValue": {
            "type": "string"
        },
        "ConditionExpressionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConditionExpression"
            }
        },
        "ConditionExpression": {
            "type": "object",
            "properties": {
                "Condition": {
                    "$ref": "#/$defs/DatabrewCondition"
                },
                "Value": {
                    "$ref": "#/$defs/DatabrewConditionValue"
                },
                "TargetColumn": {
                    "$ref": "#/$defs/TargetColumn"
                }
            }
        },
        "DatabrewCondition": {
            "type": "string"
        },
        "DatabrewConditionValue": {
            "type": "string"
        },
        "TargetColumn": {
            "type": "string"
        },
        "SnowflakeSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Data": {
                    "$ref": "#/$defs/SnowflakeNodeData"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "SnowflakeNodeData": {
            "type": "object",
            "properties": {
                "SourceType": {
                    "$ref": "#/$defs/GenericLimitedString"
                },
                "Connection": {
                    "$ref": "#/$defs/Option"
                },
                "Schema": {
                    "$ref": "#/$defs/GenericString"
                },
                "Table": {
                    "$ref": "#/$defs/GenericString"
                },
                "Database": {
                    "$ref": "#/$defs/GenericString"
                },
                "TempDir": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "IamRole": {
                    "$ref": "#/$defs/Option"
                },
                "AdditionalOptions": {
                    "$ref": "#/$defs/AdditionalOptions"
                },
                "SampleQuery": {
                    "$ref": "#/$defs/GenericString"
                },
                "PreAction": {
                    "$ref": "#/$defs/GenericString"
                },
                "PostAction": {
                    "$ref": "#/$defs/GenericString"
                },
                "Action": {
                    "$ref": "#/$defs/GenericString"
                },
                "Upsert": {
                    "$ref": "#/$defs/BooleanValue"
                },
                "MergeAction": {
                    "$ref": "#/$defs/GenericLimitedString"
                },
                "MergeWhenMatched": {
                    "$ref": "#/$defs/GenericLimitedString"
                },
                "MergeWhenNotMatched": {
                    "$ref": "#/$defs/GenericLimitedString"
                },
                "MergeClause": {
                    "$ref": "#/$defs/GenericString"
                },
                "StagingTable": {
                    "$ref": "#/$defs/GenericString"
                },
                "SelectedColumns": {
                    "$ref": "#/$defs/OptionList"
                },
                "AutoPushdown": {
                    "$ref": "#/$defs/BooleanValue"
                },
                "TableSchema": {
                    "$ref": "#/$defs/OptionList"
                }
            }
        },
        "SnowflakeTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Data": {
                    "$ref": "#/$defs/SnowflakeNodeData"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                }
            }
        },
        "ConnectorDataSource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Data": {
                    "$ref": "#/$defs/ConnectorOptions"
                },
                "OutputSchemas": {
                    "$ref": "#/$defs/GlueSchemas"
                }
            }
        },
        "ConnectorOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "ConnectorDataTarget": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/EnclosedInStringProperty"
                },
                "Data": {
                    "$ref": "#/$defs/ConnectorOptions"
                },
                "Inputs": {
                    "$ref": "#/$defs/OneInput"
                }
            }
        },
        "ExecutionClass": {
            "enum": [
                "FLEX",
                "STANDARD"
            ]
        },
        "SourceControlDetails": {
            "type": "object",
            "properties": {
                "Provider": {
                    "$ref": "#/$defs/SourceControlProvider"
                },
                "Repository": {
                    "$ref": "#/$defs/Generic512CharString"
                },
                "Owner": {
                    "$ref": "#/$defs/Generic512CharString"
                },
                "Branch": {
                    "$ref": "#/$defs/Generic512CharString"
                },
                "Folder": {
                    "$ref": "#/$defs/Generic512CharString"
                },
                "LastCommitId": {
                    "$ref": "#/$defs/Generic512CharString"
                },
                "AuthStrategy": {
                    "$ref": "#/$defs/SourceControlAuthStrategy"
                },
                "AuthToken": {
                    "$ref": "#/$defs/Generic512CharString"
                }
            }
        },
        "SourceControlProvider": {
            "enum": [
                "GITHUB",
                "GITLAB",
                "BITBUCKET",
                "AWS_CODE_COMMIT"
            ]
        },
        "SourceControlAuthStrategy": {
            "enum": [
                "PERSONAL_ACCESS_TOKEN",
                "AWS_SECRETS_MANAGER"
            ]
        },
        "MaintenanceWindow": {
            "type": "string"
        },
        "JobNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "BatchGetJobsRequest": {
            "type": "object",
            "properties": {
                "JobNames": {
                    "$ref": "#/$defs/JobNameList"
                }
            }
        },
        "BatchGetPartitionResponse": {
            "type": "object",
            "properties": {
                "Partitions": {
                    "$ref": "#/$defs/PartitionList"
                },
                "UnprocessedKeys": {
                    "$ref": "#/$defs/BatchGetPartitionValueList"
                }
            }
        },
        "PartitionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Partition"
            }
        },
        "Partition": {
            "type": "object",
            "properties": {
                "Values": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastAccessTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "StorageDescriptor": {
                    "$ref": "#/$defs/StorageDescriptor"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                },
                "LastAnalyzedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                }
            }
        },
        "BatchGetPartitionValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PartitionValueList"
            }
        },
        "BatchGetPartitionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "PartitionsToGet": {
                    "$ref": "#/$defs/BatchGetPartitionValueList"
                }
            }
        },
        "BatchGetTableOptimizerResponse": {
            "type": "object",
            "properties": {
                "TableOptimizers": {
                    "$ref": "#/$defs/BatchTableOptimizers"
                },
                "Failures": {
                    "$ref": "#/$defs/BatchGetTableOptimizerErrors"
                }
            }
        },
        "BatchTableOptimizers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchTableOptimizer"
            }
        },
        "BatchTableOptimizer": {
            "type": "object",
            "properties": {
                "catalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "databaseName": {
                    "$ref": "#/$defs/databaseNameString"
                },
                "tableName": {
                    "$ref": "#/$defs/tableNameString"
                },
                "tableOptimizer": {
                    "$ref": "#/$defs/TableOptimizer"
                }
            }
        },
        "databaseNameString": {
            "type": "string"
        },
        "tableNameString": {
            "type": "string"
        },
        "TableOptimizer": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/TableOptimizerType"
                },
                "configuration": {
                    "$ref": "#/$defs/TableOptimizerConfiguration"
                },
                "lastRun": {
                    "$ref": "#/$defs/TableOptimizerRun"
                }
            }
        },
        "TableOptimizerType": {
            "enum": [
                "COMPACTION",
                "RETENTION",
                "ORPHAN_FILE_DELETION"
            ]
        },
        "TableOptimizerConfiguration": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/ArnString"
                },
                "enabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "retentionConfiguration": {
                    "$ref": "#/$defs/RetentionConfiguration"
                },
                "orphanFileDeletionConfiguration": {
                    "$ref": "#/$defs/OrphanFileDeletionConfiguration"
                }
            }
        },
        "ArnString": {
            "type": "string"
        },
        "RetentionConfiguration": {
            "type": "object",
            "properties": {
                "icebergConfiguration": {
                    "$ref": "#/$defs/IcebergRetentionConfiguration"
                }
            }
        },
        "IcebergRetentionConfiguration": {
            "type": "object",
            "properties": {
                "snapshotRetentionPeriodInDays": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "numberOfSnapshotsToRetain": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "cleanExpiredFiles": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "OrphanFileDeletionConfiguration": {
            "type": "object",
            "properties": {
                "icebergConfiguration": {
                    "$ref": "#/$defs/IcebergOrphanFileDeletionConfiguration"
                }
            }
        },
        "IcebergOrphanFileDeletionConfiguration": {
            "type": "object",
            "properties": {
                "orphanFileRetentionPeriodInDays": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "location": {
                    "$ref": "#/$defs/MessageString"
                }
            }
        },
        "MessageString": {
            "type": "string"
        },
        "TableOptimizerRun": {
            "type": "object",
            "properties": {
                "eventType": {
                    "$ref": "#/$defs/TableOptimizerEventType"
                },
                "startTimestamp": {
                    "$ref": "#/$defs/TableOptimizerRunTimestamp"
                },
                "endTimestamp": {
                    "$ref": "#/$defs/TableOptimizerRunTimestamp"
                },
                "metrics": {
                    "$ref": "#/$defs/RunMetrics"
                },
                "error": {
                    "$ref": "#/$defs/MessageString"
                },
                "compactionMetrics": {
                    "$ref": "#/$defs/CompactionMetrics"
                },
                "retentionMetrics": {
                    "$ref": "#/$defs/RetentionMetrics"
                },
                "orphanFileDeletionMetrics": {
                    "$ref": "#/$defs/OrphanFileDeletionMetrics"
                }
            }
        },
        "TableOptimizerEventType": {
            "enum": [
                "STARTING",
                "COMPLETED",
                "FAILED",
                "IN_PROGRESS"
            ]
        },
        "TableOptimizerRunTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "RunMetrics": {
            "type": "object",
            "properties": {
                "NumberOfBytesCompacted": {
                    "$ref": "#/$defs/MessageString"
                },
                "NumberOfFilesCompacted": {
                    "$ref": "#/$defs/MessageString"
                },
                "NumberOfDpus": {
                    "$ref": "#/$defs/MessageString"
                },
                "JobDurationInHour": {
                    "$ref": "#/$defs/MessageString"
                }
            }
        },
        "CompactionMetrics": {
            "type": "object",
            "properties": {
                "IcebergMetrics": {
                    "$ref": "#/$defs/IcebergCompactionMetrics"
                }
            }
        },
        "IcebergCompactionMetrics": {
            "type": "object",
            "properties": {
                "NumberOfBytesCompacted": {
                    "$ref": "#/$defs/metricCounts"
                },
                "NumberOfFilesCompacted": {
                    "$ref": "#/$defs/metricCounts"
                },
                "NumberOfDpus": {
                    "$ref": "#/$defs/dpuCounts"
                },
                "JobDurationInHour": {
                    "$ref": "#/$defs/dpuDurationInHour"
                }
            }
        },
        "metricCounts": {
            "type": "integer",
            "format": "int64"
        },
        "dpuCounts": {
            "type": "integer",
            "format": "int32"
        },
        "dpuDurationInHour": {
            "type": "number",
            "format": "double"
        },
        "RetentionMetrics": {
            "type": "object",
            "properties": {
                "IcebergMetrics": {
                    "$ref": "#/$defs/IcebergRetentionMetrics"
                }
            }
        },
        "IcebergRetentionMetrics": {
            "type": "object",
            "properties": {
                "NumberOfDataFilesDeleted": {
                    "$ref": "#/$defs/metricCounts"
                },
                "NumberOfManifestFilesDeleted": {
                    "$ref": "#/$defs/metricCounts"
                },
                "NumberOfManifestListsDeleted": {
                    "$ref": "#/$defs/metricCounts"
                },
                "NumberOfDpus": {
                    "$ref": "#/$defs/dpuCounts"
                },
                "JobDurationInHour": {
                    "$ref": "#/$defs/dpuDurationInHour"
                }
            }
        },
        "OrphanFileDeletionMetrics": {
            "type": "object",
            "properties": {
                "IcebergMetrics": {
                    "$ref": "#/$defs/IcebergOrphanFileDeletionMetrics"
                }
            }
        },
        "IcebergOrphanFileDeletionMetrics": {
            "type": "object",
            "properties": {
                "NumberOfOrphanFilesDeleted": {
                    "$ref": "#/$defs/metricCounts"
                },
                "NumberOfDpus": {
                    "$ref": "#/$defs/dpuCounts"
                },
                "JobDurationInHour": {
                    "$ref": "#/$defs/dpuDurationInHour"
                }
            }
        },
        "BatchGetTableOptimizerErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetTableOptimizerError"
            }
        },
        "BatchGetTableOptimizerError": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/ErrorDetail"
                },
                "catalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "databaseName": {
                    "$ref": "#/$defs/databaseNameString"
                },
                "tableName": {
                    "$ref": "#/$defs/tableNameString"
                },
                "type": {
                    "$ref": "#/$defs/TableOptimizerType"
                }
            }
        },
        "BatchGetTableOptimizerRequest": {
            "type": "object",
            "properties": {
                "Entries": {
                    "$ref": "#/$defs/BatchGetTableOptimizerEntries"
                }
            }
        },
        "BatchGetTableOptimizerEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetTableOptimizerEntry"
            }
        },
        "BatchGetTableOptimizerEntry": {
            "type": "object",
            "properties": {
                "catalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "databaseName": {
                    "$ref": "#/$defs/databaseNameString"
                },
                "tableName": {
                    "$ref": "#/$defs/tableNameString"
                },
                "type": {
                    "$ref": "#/$defs/TableOptimizerType"
                }
            }
        },
        "BatchGetTriggersResponse": {
            "type": "object",
            "properties": {
                "Triggers": {
                    "$ref": "#/$defs/TriggerList"
                },
                "TriggersNotFound": {
                    "$ref": "#/$defs/TriggerNameList"
                }
            }
        },
        "TriggerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Trigger"
            }
        },
        "Trigger": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "WorkflowName": {
                    "$ref": "#/$defs/NameString"
                },
                "Id": {
                    "$ref": "#/$defs/IdString"
                },
                "Type": {
                    "$ref": "#/$defs/TriggerType"
                },
                "State": {
                    "$ref": "#/$defs/TriggerState"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Schedule": {
                    "$ref": "#/$defs/GenericString"
                },
                "Actions": {
                    "$ref": "#/$defs/ActionList"
                },
                "Predicate": {
                    "$ref": "#/$defs/Predicate"
                },
                "EventBatchingCondition": {
                    "$ref": "#/$defs/EventBatchingCondition"
                }
            }
        },
        "IdString": {
            "type": "string"
        },
        "TriggerType": {
            "enum": [
                "SCHEDULED",
                "CONDITIONAL",
                "ON_DEMAND",
                "EVENT"
            ]
        },
        "TriggerState": {
            "enum": [
                "CREATING",
                "CREATED",
                "ACTIVATING",
                "ACTIVATED",
                "DEACTIVATING",
                "DEACTIVATED",
                "DELETING",
                "UPDATING"
            ]
        },
        "ActionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Action"
            }
        },
        "Action": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "Arguments": {
                    "$ref": "#/$defs/GenericMap"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "NotificationProperty": {
                    "$ref": "#/$defs/NotificationProperty"
                },
                "CrawlerName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "Predicate": {
            "type": "object",
            "properties": {
                "Logical": {
                    "$ref": "#/$defs/Logical"
                },
                "Conditions": {
                    "$ref": "#/$defs/ConditionList"
                }
            }
        },
        "Logical": {
            "enum": [
                "AND",
                "ANY"
            ]
        },
        "ConditionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Condition"
            }
        },
        "Condition": {
            "type": "object",
            "properties": {
                "LogicalOperator": {
                    "$ref": "#/$defs/LogicalOperator"
                },
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "State": {
                    "$ref": "#/$defs/JobRunState"
                },
                "CrawlerName": {
                    "$ref": "#/$defs/NameString"
                },
                "CrawlState": {
                    "$ref": "#/$defs/CrawlState"
                }
            }
        },
        "LogicalOperator": {
            "enum": [
                "EQUALS"
            ]
        },
        "JobRunState": {
            "enum": [
                "STARTING",
                "RUNNING",
                "STOPPING",
                "STOPPED",
                "SUCCEEDED",
                "FAILED",
                "TIMEOUT",
                "ERROR",
                "WAITING",
                "EXPIRED"
            ]
        },
        "CrawlState": {
            "enum": [
                "RUNNING",
                "CANCELLING",
                "CANCELLED",
                "SUCCEEDED",
                "FAILED",
                "ERROR"
            ]
        },
        "EventBatchingCondition": {
            "type": "object",
            "properties": {
                "BatchSize": {
                    "$ref": "#/$defs/BatchSize"
                },
                "BatchWindow": {
                    "$ref": "#/$defs/BatchWindow"
                }
            }
        },
        "BatchSize": {
            "type": "integer",
            "format": "int32"
        },
        "BatchWindow": {
            "type": "integer",
            "format": "int32"
        },
        "TriggerNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "BatchGetTriggersRequest": {
            "type": "object",
            "properties": {
                "TriggerNames": {
                    "$ref": "#/$defs/TriggerNameList"
                }
            }
        },
        "BatchGetWorkflowsResponse": {
            "type": "object",
            "properties": {
                "Workflows": {
                    "$ref": "#/$defs/Workflows"
                },
                "MissingWorkflows": {
                    "$ref": "#/$defs/WorkflowNames"
                }
            }
        },
        "Workflows": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Workflow"
            }
        },
        "Workflow": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/GenericString"
                },
                "DefaultRunProperties": {
                    "$ref": "#/$defs/WorkflowRunProperties"
                },
                "CreatedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "LastRun": {
                    "$ref": "#/$defs/WorkflowRun"
                },
                "Graph": {
                    "$ref": "#/$defs/WorkflowGraph"
                },
                "MaxConcurrentRuns": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "BlueprintDetails": {
                    "$ref": "#/$defs/BlueprintDetails"
                }
            }
        },
        "WorkflowRunProperties": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "WorkflowRun": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "WorkflowRunId": {
                    "$ref": "#/$defs/IdString"
                },
                "PreviousRunId": {
                    "$ref": "#/$defs/IdString"
                },
                "WorkflowRunProperties": {
                    "$ref": "#/$defs/WorkflowRunProperties"
                },
                "StartedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "Status": {
                    "$ref": "#/$defs/WorkflowRunStatus"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorString"
                },
                "Statistics": {
                    "$ref": "#/$defs/WorkflowRunStatistics"
                },
                "Graph": {
                    "$ref": "#/$defs/WorkflowGraph"
                },
                "StartingEventBatchCondition": {
                    "$ref": "#/$defs/StartingEventBatchCondition"
                }
            }
        },
        "WorkflowRunStatus": {
            "enum": [
                "RUNNING",
                "COMPLETED",
                "STOPPING",
                "STOPPED",
                "ERROR"
            ]
        },
        "WorkflowRunStatistics": {
            "type": "object",
            "properties": {
                "TotalActions": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "TimeoutActions": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "FailedActions": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "StoppedActions": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "SucceededActions": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "RunningActions": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "ErroredActions": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "WaitingActions": {
                    "$ref": "#/$defs/IntegerValue"
                }
            }
        },
        "WorkflowGraph": {
            "type": "object",
            "properties": {
                "Nodes": {
                    "$ref": "#/$defs/NodeList"
                },
                "Edges": {
                    "$ref": "#/$defs/EdgeList"
                }
            }
        },
        "NodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Node"
            }
        },
        "Node": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/NodeType"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "UniqueId": {
                    "$ref": "#/$defs/NameString"
                },
                "TriggerDetails": {
                    "$ref": "#/$defs/TriggerNodeDetails"
                },
                "JobDetails": {
                    "$ref": "#/$defs/JobNodeDetails"
                },
                "CrawlerDetails": {
                    "$ref": "#/$defs/CrawlerNodeDetails"
                }
            }
        },
        "NodeType": {
            "enum": [
                "CRAWLER",
                "JOB",
                "TRIGGER"
            ]
        },
        "TriggerNodeDetails": {
            "type": "object",
            "properties": {
                "Trigger": {
                    "$ref": "#/$defs/Trigger"
                }
            }
        },
        "JobNodeDetails": {
            "type": "object",
            "properties": {
                "JobRuns": {
                    "$ref": "#/$defs/JobRunList"
                }
            }
        },
        "JobRunList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobRun"
            }
        },
        "JobRun": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/IdString"
                },
                "Attempt": {
                    "$ref": "#/$defs/AttemptCount"
                },
                "PreviousRunId": {
                    "$ref": "#/$defs/IdString"
                },
                "TriggerName": {
                    "$ref": "#/$defs/NameString"
                },
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "JobMode": {
                    "$ref": "#/$defs/JobMode"
                },
                "JobRunQueuingEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "StartedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "JobRunState": {
                    "$ref": "#/$defs/JobRunState"
                },
                "Arguments": {
                    "$ref": "#/$defs/GenericMap"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorString"
                },
                "PredecessorRuns": {
                    "$ref": "#/$defs/PredecessorList"
                },
                "AllocatedCapacity": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "ExecutionTime": {
                    "$ref": "#/$defs/ExecutionTime"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "LogGroupName": {
                    "$ref": "#/$defs/GenericString"
                },
                "NotificationProperty": {
                    "$ref": "#/$defs/NotificationProperty"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "DPUSeconds": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "ExecutionClass": {
                    "$ref": "#/$defs/ExecutionClass"
                },
                "MaintenanceWindow": {
                    "$ref": "#/$defs/MaintenanceWindow"
                },
                "ProfileName": {
                    "$ref": "#/$defs/NameString"
                },
                "StateDetail": {
                    "$ref": "#/$defs/OrchestrationMessageString"
                }
            }
        },
        "AttemptCount": {
            "type": "integer",
            "format": "int32"
        },
        "PredecessorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Predecessor"
            }
        },
        "Predecessor": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "RunId": {
                    "$ref": "#/$defs/IdString"
                }
            }
        },
        "ExecutionTime": {
            "type": "integer",
            "format": "int32"
        },
        "OrchestrationMessageString": {
            "type": "string"
        },
        "CrawlerNodeDetails": {
            "type": "object",
            "properties": {
                "Crawls": {
                    "$ref": "#/$defs/CrawlList"
                }
            }
        },
        "CrawlList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Crawl"
            }
        },
        "Crawl": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/CrawlState"
                },
                "StartedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "LogGroup": {
                    "$ref": "#/$defs/LogGroup"
                },
                "LogStream": {
                    "$ref": "#/$defs/LogStream"
                }
            }
        },
        "EdgeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Edge"
            }
        },
        "Edge": {
            "type": "object",
            "properties": {
                "SourceId": {
                    "$ref": "#/$defs/NameString"
                },
                "DestinationId": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "StartingEventBatchCondition": {
            "type": "object",
            "properties": {
                "BatchSize": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "BatchWindow": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "BlueprintDetails": {
            "type": "object",
            "properties": {
                "BlueprintName": {
                    "$ref": "#/$defs/OrchestrationNameString"
                },
                "RunId": {
                    "$ref": "#/$defs/IdString"
                }
            }
        },
        "WorkflowNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "BatchGetWorkflowsRequest": {
            "type": "object",
            "properties": {
                "Names": {
                    "$ref": "#/$defs/WorkflowNames"
                },
                "IncludeGraph": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "BatchPutDataQualityStatisticAnnotationResponse": {
            "type": "object",
            "properties": {
                "FailedInclusionAnnotations": {
                    "$ref": "#/$defs/AnnotationErrorList"
                }
            }
        },
        "AnnotationErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnnotationError"
            }
        },
        "AnnotationError": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "$ref": "#/$defs/HashString"
                },
                "StatisticId": {
                    "$ref": "#/$defs/HashString"
                },
                "FailureReason": {
                    "$ref": "#/$defs/DescriptionString"
                }
            }
        },
        "BatchPutDataQualityStatisticAnnotationRequest": {
            "type": "object",
            "properties": {
                "InclusionAnnotations": {
                    "$ref": "#/$defs/InclusionAnnotationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "InclusionAnnotationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatapointInclusionAnnotation"
            }
        },
        "DatapointInclusionAnnotation": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "$ref": "#/$defs/HashString"
                },
                "StatisticId": {
                    "$ref": "#/$defs/HashString"
                },
                "InclusionAnnotation": {
                    "$ref": "#/$defs/InclusionAnnotationValue"
                }
            }
        },
        "InclusionAnnotationValue": {
            "enum": [
                "INCLUDE",
                "EXCLUDE"
            ]
        },
        "BatchStopJobRunResponse": {
            "type": "object",
            "properties": {
                "SuccessfulSubmissions": {
                    "$ref": "#/$defs/BatchStopJobRunSuccessfulSubmissionList"
                },
                "Errors": {
                    "$ref": "#/$defs/BatchStopJobRunErrorList"
                }
            }
        },
        "BatchStopJobRunSuccessfulSubmissionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchStopJobRunSuccessfulSubmission"
            }
        },
        "BatchStopJobRunSuccessfulSubmission": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "JobRunId": {
                    "$ref": "#/$defs/IdString"
                }
            }
        },
        "BatchStopJobRunErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchStopJobRunError"
            }
        },
        "BatchStopJobRunError": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "JobRunId": {
                    "$ref": "#/$defs/IdString"
                },
                "ErrorDetail": {
                    "$ref": "#/$defs/ErrorDetail"
                }
            }
        },
        "BatchStopJobRunRequest": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "JobRunIds": {
                    "$ref": "#/$defs/BatchStopJobRunJobRunIdList"
                }
            }
        },
        "BatchStopJobRunJobRunIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdString"
            }
        },
        "BatchUpdatePartitionResponse": {
            "type": "object",
            "properties": {
                "Errors": {
                    "$ref": "#/$defs/BatchUpdatePartitionFailureList"
                }
            }
        },
        "BatchUpdatePartitionFailureList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchUpdatePartitionFailureEntry"
            }
        },
        "BatchUpdatePartitionFailureEntry": {
            "type": "object",
            "properties": {
                "PartitionValueList": {
                    "$ref": "#/$defs/BoundedPartitionValueList"
                },
                "ErrorDetail": {
                    "$ref": "#/$defs/ErrorDetail"
                }
            }
        },
        "BoundedPartitionValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValueString"
            }
        },
        "BatchUpdatePartitionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "Entries": {
                    "$ref": "#/$defs/BatchUpdatePartitionRequestEntryList"
                }
            }
        },
        "BatchUpdatePartitionRequestEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchUpdatePartitionRequestEntry"
            }
        },
        "BatchUpdatePartitionRequestEntry": {
            "type": "object",
            "properties": {
                "PartitionValueList": {
                    "$ref": "#/$defs/BoundedPartitionValueList"
                },
                "PartitionInput": {
                    "$ref": "#/$defs/PartitionInput"
                }
            }
        },
        "CancelDataQualityRuleRecommendationRunResponse": {
            "type": "object",
            "properties": {}
        },
        "CancelDataQualityRuleRecommendationRunRequest": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "CancelDataQualityRulesetEvaluationRunResponse": {
            "type": "object",
            "properties": {}
        },
        "CancelDataQualityRulesetEvaluationRunRequest": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "CancelMLTaskRunResponse": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                },
                "TaskRunId": {
                    "$ref": "#/$defs/HashString"
                },
                "Status": {
                    "$ref": "#/$defs/TaskStatusType"
                }
            }
        },
        "TaskStatusType": {
            "enum": [
                "STARTING",
                "RUNNING",
                "STOPPING",
                "STOPPED",
                "SUCCEEDED",
                "FAILED",
                "TIMEOUT"
            ]
        },
        "CancelMLTaskRunRequest": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                },
                "TaskRunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "CancelStatementResponse": {
            "type": "object",
            "properties": {}
        },
        "CancelStatementRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/NameString"
                },
                "Id": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "RequestOrigin": {
                    "$ref": "#/$defs/OrchestrationNameString"
                }
            }
        },
        "CheckSchemaVersionValidityResponse": {
            "type": "object",
            "properties": {
                "Valid": {
                    "$ref": "#/$defs/IsVersionValid"
                },
                "Error": {
                    "$ref": "#/$defs/SchemaValidationError"
                }
            }
        },
        "IsVersionValid": {
            "type": "boolean"
        },
        "SchemaValidationError": {
            "type": "string"
        },
        "CheckSchemaVersionValidityInput": {
            "type": "object",
            "properties": {
                "DataFormat": {
                    "$ref": "#/$defs/DataFormat"
                },
                "SchemaDefinition": {
                    "$ref": "#/$defs/SchemaDefinitionString"
                }
            }
        },
        "DataFormat": {
            "enum": [
                "AVRO",
                "JSON",
                "PROTOBUF"
            ]
        },
        "SchemaDefinitionString": {
            "type": "string"
        },
        "CreateBlueprintResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "CreateBlueprintRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrchestrationNameString"
                },
                "Description": {
                    "$ref": "#/$defs/Generic512CharString"
                },
                "BlueprintLocation": {
                    "$ref": "#/$defs/OrchestrationS3Location"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "OrchestrationS3Location": {
            "type": "string"
        },
        "TagsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "CreateClassifierResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateClassifierRequest": {
            "type": "object",
            "properties": {
                "GrokClassifier": {
                    "$ref": "#/$defs/CreateGrokClassifierRequest"
                },
                "XMLClassifier": {
                    "$ref": "#/$defs/CreateXMLClassifierRequest"
                },
                "JsonClassifier": {
                    "$ref": "#/$defs/CreateJsonClassifierRequest"
                },
                "CsvClassifier": {
                    "$ref": "#/$defs/CreateCsvClassifierRequest"
                }
            }
        },
        "CreateGrokClassifierRequest": {
            "type": "object",
            "properties": {
                "Classification": {
                    "$ref": "#/$defs/Classification"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "GrokPattern": {
                    "$ref": "#/$defs/GrokPattern"
                },
                "CustomPatterns": {
                    "$ref": "#/$defs/CustomPatterns"
                }
            }
        },
        "Classification": {
            "type": "string"
        },
        "GrokPattern": {
            "type": "string"
        },
        "CustomPatterns": {
            "type": "string"
        },
        "CreateXMLClassifierRequest": {
            "type": "object",
            "properties": {
                "Classification": {
                    "$ref": "#/$defs/Classification"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "RowTag": {
                    "$ref": "#/$defs/RowTag"
                }
            }
        },
        "RowTag": {
            "type": "string"
        },
        "CreateJsonClassifierRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "JsonPath": {
                    "$ref": "#/$defs/JsonPath"
                }
            }
        },
        "JsonPath": {
            "type": "string"
        },
        "CreateCsvClassifierRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Delimiter": {
                    "$ref": "#/$defs/CsvColumnDelimiter"
                },
                "QuoteSymbol": {
                    "$ref": "#/$defs/CsvQuoteSymbol"
                },
                "ContainsHeader": {
                    "$ref": "#/$defs/CsvHeaderOption"
                },
                "Header": {
                    "$ref": "#/$defs/CsvHeader"
                },
                "DisableValueTrimming": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "AllowSingleColumn": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "CustomDatatypeConfigured": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "CustomDatatypes": {
                    "$ref": "#/$defs/CustomDatatypes"
                },
                "Serde": {
                    "$ref": "#/$defs/CsvSerdeOption"
                }
            }
        },
        "CsvColumnDelimiter": {
            "type": "string"
        },
        "CsvQuoteSymbol": {
            "type": "string"
        },
        "CsvHeaderOption": {
            "enum": [
                "UNKNOWN",
                "PRESENT",
                "ABSENT"
            ]
        },
        "CsvHeader": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "CustomDatatypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "CsvSerdeOption": {
            "enum": [
                "OpenCSVSerDe",
                "LazySimpleSerDe",
                "None"
            ]
        },
        "CreateConnectionResponse": {
            "type": "object",
            "properties": {
                "CreateConnectionStatus": {
                    "$ref": "#/$defs/ConnectionStatus"
                }
            }
        },
        "ConnectionStatus": {
            "enum": [
                "READY",
                "IN_PROGRESS",
                "FAILED"
            ]
        },
        "CreateConnectionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "ConnectionInput": {
                    "$ref": "#/$defs/ConnectionInput"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "ConnectionInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/ConnectionType"
                },
                "MatchCriteria": {
                    "$ref": "#/$defs/MatchCriteria"
                },
                "ConnectionProperties": {
                    "$ref": "#/$defs/ConnectionProperties"
                },
                "AthenaProperties": {
                    "$ref": "#/$defs/PropertyMap"
                },
                "PhysicalConnectionRequirements": {
                    "$ref": "#/$defs/PhysicalConnectionRequirements"
                },
                "AuthenticationConfiguration": {
                    "$ref": "#/$defs/AuthenticationConfigurationInput"
                },
                "ValidateCredentials": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ConnectionType": {
            "enum": [
                "JDBC",
                "SFTP",
                "MONGODB",
                "KAFKA",
                "NETWORK",
                "MARKETPLACE",
                "CUSTOM",
                "SALESFORCE",
                "VIEW_VALIDATION_REDSHIFT",
                "VIEW_VALIDATION_ATHENA"
            ]
        },
        "MatchCriteria": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "ConnectionProperties": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ValueString"
            }
        },
        "PropertyMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/PropertyValue"
            }
        },
        "PropertyValue": {
            "type": "string"
        },
        "PhysicalConnectionRequirements": {
            "type": "object",
            "properties": {
                "SubnetId": {
                    "$ref": "#/$defs/NameString"
                },
                "SecurityGroupIdList": {
                    "$ref": "#/$defs/SecurityGroupIdList"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "SecurityGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "AuthenticationConfigurationInput": {
            "type": "object",
            "properties": {
                "AuthenticationType": {
                    "$ref": "#/$defs/AuthenticationType"
                },
                "OAuth2Properties": {
                    "$ref": "#/$defs/OAuth2PropertiesInput"
                },
                "SecretArn": {
                    "$ref": "#/$defs/SecretArn"
                }
            }
        },
        "AuthenticationType": {
            "enum": [
                "BASIC",
                "OAUTH2",
                "CUSTOM"
            ]
        },
        "OAuth2PropertiesInput": {
            "type": "object",
            "properties": {
                "OAuth2GrantType": {
                    "$ref": "#/$defs/OAuth2GrantType"
                },
                "OAuth2ClientApplication": {
                    "$ref": "#/$defs/OAuth2ClientApplication"
                },
                "TokenUrl": {
                    "$ref": "#/$defs/TokenUrl"
                },
                "TokenUrlParametersMap": {
                    "$ref": "#/$defs/TokenUrlParametersMap"
                },
                "AuthorizationCodeProperties": {
                    "$ref": "#/$defs/AuthorizationCodeProperties"
                }
            }
        },
        "OAuth2GrantType": {
            "enum": [
                "AUTHORIZATION_CODE",
                "CLIENT_CREDENTIALS",
                "JWT_BEARER"
            ]
        },
        "OAuth2ClientApplication": {
            "type": "object",
            "properties": {
                "UserManagedClientApplicationClientId": {
                    "$ref": "#/$defs/UserManagedClientApplicationClientId"
                },
                "AWSManagedClientApplicationReference": {
                    "$ref": "#/$defs/AWSManagedClientApplicationReference"
                }
            }
        },
        "UserManagedClientApplicationClientId": {
            "type": "string"
        },
        "AWSManagedClientApplicationReference": {
            "type": "string"
        },
        "TokenUrl": {
            "type": "string"
        },
        "TokenUrlParametersMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TokenUrlParameterValue"
            }
        },
        "TokenUrlParameterValue": {
            "type": "string"
        },
        "AuthorizationCodeProperties": {
            "type": "object",
            "properties": {
                "AuthorizationCode": {
                    "$ref": "#/$defs/AuthorizationCode"
                },
                "RedirectUri": {
                    "$ref": "#/$defs/RedirectUri"
                }
            }
        },
        "AuthorizationCode": {
            "type": "string"
        },
        "RedirectUri": {
            "type": "string"
        },
        "SecretArn": {
            "type": "string"
        },
        "CreateCrawlerResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateCrawlerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Role": {
                    "$ref": "#/$defs/Role"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Targets": {
                    "$ref": "#/$defs/CrawlerTargets"
                },
                "Schedule": {
                    "$ref": "#/$defs/CronExpression"
                },
                "Classifiers": {
                    "$ref": "#/$defs/ClassifierNameList"
                },
                "TablePrefix": {
                    "$ref": "#/$defs/TablePrefix"
                },
                "SchemaChangePolicy": {
                    "$ref": "#/$defs/SchemaChangePolicy"
                },
                "RecrawlPolicy": {
                    "$ref": "#/$defs/RecrawlPolicy"
                },
                "LineageConfiguration": {
                    "$ref": "#/$defs/LineageConfiguration"
                },
                "LakeFormationConfiguration": {
                    "$ref": "#/$defs/LakeFormationConfiguration"
                },
                "Configuration": {
                    "$ref": "#/$defs/CrawlerConfiguration"
                },
                "CrawlerSecurityConfiguration": {
                    "$ref": "#/$defs/CrawlerSecurityConfiguration"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "CreateCustomEntityTypeResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "CreateCustomEntityTypeRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "RegexString": {
                    "$ref": "#/$defs/NameString"
                },
                "ContextWords": {
                    "$ref": "#/$defs/ContextWords"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "CreateDatabaseResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateDatabaseRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseInput": {
                    "$ref": "#/$defs/DatabaseInput"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "DatabaseInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "LocationUri": {
                    "$ref": "#/$defs/URI"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                },
                "CreateTableDefaultPermissions": {
                    "$ref": "#/$defs/PrincipalPermissionsList"
                },
                "TargetDatabase": {
                    "$ref": "#/$defs/DatabaseIdentifier"
                },
                "FederatedDatabase": {
                    "$ref": "#/$defs/FederatedDatabase"
                }
            }
        },
        "URI": {
            "type": "string"
        },
        "PrincipalPermissionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrincipalPermissions"
            }
        },
        "PrincipalPermissions": {
            "type": "object",
            "properties": {
                "Principal": {
                    "$ref": "#/$defs/DataLakePrincipal"
                },
                "Permissions": {
                    "$ref": "#/$defs/PermissionList"
                }
            }
        },
        "DataLakePrincipal": {
            "type": "object",
            "properties": {
                "DataLakePrincipalIdentifier": {
                    "$ref": "#/$defs/DataLakePrincipalString"
                }
            }
        },
        "DataLakePrincipalString": {
            "type": "string"
        },
        "PermissionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Permission"
            }
        },
        "Permission": {
            "enum": [
                "ALL",
                "SELECT",
                "ALTER",
                "DROP",
                "DELETE",
                "INSERT",
                "CREATE_DATABASE",
                "CREATE_TABLE",
                "DATA_LOCATION_ACCESS"
            ]
        },
        "DatabaseIdentifier": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "Region": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "FederatedDatabase": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/FederationIdentifier"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "FederationIdentifier": {
            "type": "string"
        },
        "CreateDataQualityRulesetResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "CreateDataQualityRulesetRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Ruleset": {
                    "$ref": "#/$defs/DataQualityRulesetString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "TargetTable": {
                    "$ref": "#/$defs/DataQualityTargetTable"
                },
                "DataQualitySecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "ClientToken": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "DataQualityRulesetString": {
            "type": "string"
        },
        "DataQualityTargetTable": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "CatalogId": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "CreateDevEndpointResponse": {
            "type": "object",
            "properties": {
                "EndpointName": {
                    "$ref": "#/$defs/GenericString"
                },
                "Status": {
                    "$ref": "#/$defs/GenericString"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/StringList"
                },
                "SubnetId": {
                    "$ref": "#/$defs/GenericString"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "YarnEndpointAddress": {
                    "$ref": "#/$defs/GenericString"
                },
                "ZeppelinRemoteSparkInterpreterPort": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "NumberOfNodes": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/GenericString"
                },
                "VpcId": {
                    "$ref": "#/$defs/GenericString"
                },
                "ExtraPythonLibsS3Path": {
                    "$ref": "#/$defs/GenericString"
                },
                "ExtraJarsS3Path": {
                    "$ref": "#/$defs/GenericString"
                },
                "FailureReason": {
                    "$ref": "#/$defs/GenericString"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "Arguments": {
                    "$ref": "#/$defs/MapValue"
                }
            }
        },
        "CreateDevEndpointRequest": {
            "type": "object",
            "properties": {
                "EndpointName": {
                    "$ref": "#/$defs/GenericString"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/StringList"
                },
                "SubnetId": {
                    "$ref": "#/$defs/GenericString"
                },
                "PublicKey": {
                    "$ref": "#/$defs/GenericString"
                },
                "PublicKeys": {
                    "$ref": "#/$defs/PublicKeysList"
                },
                "NumberOfNodes": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "ExtraPythonLibsS3Path": {
                    "$ref": "#/$defs/GenericString"
                },
                "ExtraJarsS3Path": {
                    "$ref": "#/$defs/GenericString"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "Arguments": {
                    "$ref": "#/$defs/MapValue"
                }
            }
        },
        "CreateJobResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "CreateJobRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "JobMode": {
                    "$ref": "#/$defs/JobMode"
                },
                "JobRunQueuingEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "LogUri": {
                    "$ref": "#/$defs/UriString"
                },
                "Role": {
                    "$ref": "#/$defs/RoleString"
                },
                "ExecutionProperty": {
                    "$ref": "#/$defs/ExecutionProperty"
                },
                "Command": {
                    "$ref": "#/$defs/JobCommand"
                },
                "DefaultArguments": {
                    "$ref": "#/$defs/GenericMap"
                },
                "NonOverridableArguments": {
                    "$ref": "#/$defs/GenericMap"
                },
                "Connections": {
                    "$ref": "#/$defs/ConnectionsList"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/MaxRetries"
                },
                "AllocatedCapacity": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "NotificationProperty": {
                    "$ref": "#/$defs/NotificationProperty"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "CodeGenConfigurationNodes": {
                    "$ref": "#/$defs/CodeGenConfigurationNodes"
                },
                "ExecutionClass": {
                    "$ref": "#/$defs/ExecutionClass"
                },
                "SourceControlDetails": {
                    "$ref": "#/$defs/SourceControlDetails"
                },
                "MaintenanceWindow": {
                    "$ref": "#/$defs/MaintenanceWindow"
                }
            }
        },
        "CreateMLTransformResponse": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "CreateMLTransformRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "InputRecordTables": {
                    "$ref": "#/$defs/GlueTables"
                },
                "Parameters": {
                    "$ref": "#/$defs/TransformParameters"
                },
                "Role": {
                    "$ref": "#/$defs/RoleString"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "TransformEncryption": {
                    "$ref": "#/$defs/TransformEncryption"
                }
            }
        },
        "GlueTables": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GlueTable"
            }
        },
        "TransformParameters": {
            "type": "object",
            "properties": {
                "TransformType": {
                    "$ref": "#/$defs/TransformType"
                },
                "FindMatchesParameters": {
                    "$ref": "#/$defs/FindMatchesParameters"
                }
            }
        },
        "TransformType": {
            "enum": [
                "FIND_MATCHES"
            ]
        },
        "FindMatchesParameters": {
            "type": "object",
            "properties": {
                "PrimaryKeyColumnName": {
                    "$ref": "#/$defs/ColumnNameString"
                },
                "PrecisionRecallTradeoff": {
                    "$ref": "#/$defs/GenericBoundedDouble"
                },
                "AccuracyCostTradeoff": {
                    "$ref": "#/$defs/GenericBoundedDouble"
                },
                "EnforceProvidedLabels": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "ColumnNameString": {
            "type": "string"
        },
        "TransformEncryption": {
            "type": "object",
            "properties": {
                "MlUserDataEncryption": {
                    "$ref": "#/$defs/MLUserDataEncryption"
                },
                "TaskRunSecurityConfigurationName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "MLUserDataEncryption": {
            "type": "object",
            "properties": {
                "MlUserDataEncryptionMode": {
                    "$ref": "#/$defs/MLUserDataEncryptionModeString"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "MLUserDataEncryptionModeString": {
            "enum": [
                "DISABLED",
                "SSEKMS"
            ]
        },
        "CreatePartitionResponse": {
            "type": "object",
            "properties": {}
        },
        "CreatePartitionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "PartitionInput": {
                    "$ref": "#/$defs/PartitionInput"
                }
            }
        },
        "CreatePartitionIndexResponse": {
            "type": "object",
            "properties": {}
        },
        "CreatePartitionIndexRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "PartitionIndex": {
                    "$ref": "#/$defs/PartitionIndex"
                }
            }
        },
        "PartitionIndex": {
            "type": "object",
            "properties": {
                "Keys": {
                    "$ref": "#/$defs/KeyList"
                },
                "IndexName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "KeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "CreateRegistryResponse": {
            "type": "object",
            "properties": {
                "RegistryArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "CreateRegistryInput": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "CreateSchemaResponse": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "RegistryArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "SchemaName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "SchemaArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "DataFormat": {
                    "$ref": "#/$defs/DataFormat"
                },
                "Compatibility": {
                    "$ref": "#/$defs/Compatibility"
                },
                "SchemaCheckpoint": {
                    "$ref": "#/$defs/SchemaCheckpointNumber"
                },
                "LatestSchemaVersion": {
                    "$ref": "#/$defs/VersionLongNumber"
                },
                "NextSchemaVersion": {
                    "$ref": "#/$defs/VersionLongNumber"
                },
                "SchemaStatus": {
                    "$ref": "#/$defs/SchemaStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "SchemaVersionStatus": {
                    "$ref": "#/$defs/SchemaVersionStatus"
                }
            }
        },
        "Compatibility": {
            "enum": [
                "NONE",
                "DISABLED",
                "BACKWARD",
                "BACKWARD_ALL",
                "FORWARD",
                "FORWARD_ALL",
                "FULL",
                "FULL_ALL"
            ]
        },
        "SchemaCheckpointNumber": {
            "type": "integer",
            "format": "int64"
        },
        "SchemaStatus": {
            "enum": [
                "AVAILABLE",
                "PENDING",
                "DELETING"
            ]
        },
        "SchemaVersionStatus": {
            "enum": [
                "AVAILABLE",
                "PENDING",
                "FAILURE",
                "DELETING"
            ]
        },
        "CreateSchemaInput": {
            "type": "object",
            "properties": {
                "RegistryId": {
                    "$ref": "#/$defs/RegistryId"
                },
                "SchemaName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "DataFormat": {
                    "$ref": "#/$defs/DataFormat"
                },
                "Compatibility": {
                    "$ref": "#/$defs/Compatibility"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "SchemaDefinition": {
                    "$ref": "#/$defs/SchemaDefinitionString"
                }
            }
        },
        "RegistryId": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "RegistryArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                }
            }
        },
        "CreateScriptResponse": {
            "type": "object",
            "properties": {
                "PythonScript": {
                    "$ref": "#/$defs/PythonScript"
                },
                "ScalaCode": {
                    "$ref": "#/$defs/ScalaCode"
                }
            }
        },
        "PythonScript": {
            "type": "string"
        },
        "ScalaCode": {
            "type": "string"
        },
        "CreateScriptRequest": {
            "type": "object",
            "properties": {
                "DagNodes": {
                    "$ref": "#/$defs/DagNodes"
                },
                "DagEdges": {
                    "$ref": "#/$defs/DagEdges"
                },
                "Language": {
                    "$ref": "#/$defs/Language"
                }
            }
        },
        "DagNodes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CodeGenNode"
            }
        },
        "CodeGenNode": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/CodeGenIdentifier"
                },
                "NodeType": {
                    "$ref": "#/$defs/CodeGenNodeType"
                },
                "Args": {
                    "$ref": "#/$defs/CodeGenNodeArgs"
                },
                "LineNumber": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "CodeGenIdentifier": {
            "type": "string"
        },
        "CodeGenNodeType": {
            "type": "string"
        },
        "CodeGenNodeArgs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CodeGenNodeArg"
            }
        },
        "CodeGenNodeArg": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CodeGenArgName"
                },
                "Value": {
                    "$ref": "#/$defs/CodeGenArgValue"
                },
                "Param": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CodeGenArgName": {
            "type": "string"
        },
        "CodeGenArgValue": {
            "type": "string"
        },
        "DagEdges": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CodeGenEdge"
            }
        },
        "CodeGenEdge": {
            "type": "object",
            "properties": {
                "Source": {
                    "$ref": "#/$defs/CodeGenIdentifier"
                },
                "Target": {
                    "$ref": "#/$defs/CodeGenIdentifier"
                },
                "TargetParameter": {
                    "$ref": "#/$defs/CodeGenArgName"
                }
            }
        },
        "Language": {
            "enum": [
                "PYTHON",
                "SCALA"
            ]
        },
        "CreateSecurityConfigurationResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/TimestampValue"
                }
            }
        },
        "CreateSecurityConfigurationRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "EncryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                }
            }
        },
        "EncryptionConfiguration": {
            "type": "object",
            "properties": {
                "S3Encryption": {
                    "$ref": "#/$defs/S3EncryptionList"
                },
                "CloudWatchEncryption": {
                    "$ref": "#/$defs/CloudWatchEncryption"
                },
                "JobBookmarksEncryption": {
                    "$ref": "#/$defs/JobBookmarksEncryption"
                }
            }
        },
        "S3EncryptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/S3Encryption"
            }
        },
        "S3Encryption": {
            "type": "object",
            "properties": {
                "S3EncryptionMode": {
                    "$ref": "#/$defs/S3EncryptionMode"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                }
            }
        },
        "S3EncryptionMode": {
            "enum": [
                "DISABLED",
                "SSEKMS",
                "SSES3"
            ]
        },
        "KmsKeyArn": {
            "type": "string"
        },
        "CloudWatchEncryption": {
            "type": "object",
            "properties": {
                "CloudWatchEncryptionMode": {
                    "$ref": "#/$defs/CloudWatchEncryptionMode"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                }
            }
        },
        "CloudWatchEncryptionMode": {
            "enum": [
                "DISABLED",
                "SSEKMS"
            ]
        },
        "JobBookmarksEncryption": {
            "type": "object",
            "properties": {
                "JobBookmarksEncryptionMode": {
                    "$ref": "#/$defs/JobBookmarksEncryptionMode"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                }
            }
        },
        "JobBookmarksEncryptionMode": {
            "enum": [
                "DISABLED",
                "CSEKMS"
            ]
        },
        "CreateSessionResponse": {
            "type": "object",
            "properties": {
                "Session": {
                    "$ref": "#/$defs/Session"
                }
            }
        },
        "Session": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NameString"
                },
                "CreatedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "Status": {
                    "$ref": "#/$defs/SessionStatus"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Role": {
                    "$ref": "#/$defs/OrchestrationRoleArn"
                },
                "Command": {
                    "$ref": "#/$defs/SessionCommand"
                },
                "DefaultArguments": {
                    "$ref": "#/$defs/OrchestrationArgumentsMap"
                },
                "Connections": {
                    "$ref": "#/$defs/ConnectionsList"
                },
                "Progress": {
                    "$ref": "#/$defs/DoubleValue"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "ExecutionTime": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "DPUSeconds": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "IdleTimeout": {
                    "$ref": "#/$defs/IdleTimeout"
                },
                "ProfileName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "SessionStatus": {
            "enum": [
                "PROVISIONING",
                "READY",
                "FAILED",
                "TIMEOUT",
                "STOPPING",
                "STOPPED"
            ]
        },
        "OrchestrationRoleArn": {
            "type": "string"
        },
        "SessionCommand": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "PythonVersion": {
                    "$ref": "#/$defs/PythonVersionString"
                }
            }
        },
        "OrchestrationArgumentsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/OrchestrationArgumentsValue"
            }
        },
        "OrchestrationArgumentsValue": {
            "type": "string"
        },
        "DoubleValue": {
            "type": "number",
            "format": "double"
        },
        "IdleTimeout": {
            "type": "integer",
            "format": "int32"
        },
        "CreateSessionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Role": {
                    "$ref": "#/$defs/OrchestrationRoleArn"
                },
                "Command": {
                    "$ref": "#/$defs/SessionCommand"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "IdleTimeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "DefaultArguments": {
                    "$ref": "#/$defs/OrchestrationArgumentsMap"
                },
                "Connections": {
                    "$ref": "#/$defs/ConnectionsList"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "RequestOrigin": {
                    "$ref": "#/$defs/OrchestrationNameString"
                }
            }
        },
        "CreateTableResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateTableRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableInput": {
                    "$ref": "#/$defs/TableInput"
                },
                "PartitionIndexes": {
                    "$ref": "#/$defs/PartitionIndexList"
                },
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                },
                "OpenTableFormatInput": {
                    "$ref": "#/$defs/OpenTableFormatInput"
                }
            }
        },
        "TableInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Owner": {
                    "$ref": "#/$defs/NameString"
                },
                "LastAccessTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastAnalyzedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Retention": {
                    "$ref": "#/$defs/NonNegativeInteger"
                },
                "StorageDescriptor": {
                    "$ref": "#/$defs/StorageDescriptor"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/ColumnList"
                },
                "ViewOriginalText": {
                    "$ref": "#/$defs/ViewTextString"
                },
                "ViewExpandedText": {
                    "$ref": "#/$defs/ViewTextString"
                },
                "TableType": {
                    "$ref": "#/$defs/TableTypeString"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                },
                "TargetTable": {
                    "$ref": "#/$defs/TableIdentifier"
                },
                "ViewDefinition": {
                    "$ref": "#/$defs/ViewDefinitionInput"
                }
            }
        },
        "NonNegativeInteger": {
            "type": "integer",
            "format": "int32"
        },
        "ViewTextString": {
            "type": "string"
        },
        "TableTypeString": {
            "type": "string"
        },
        "TableIdentifier": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Region": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "ViewDefinitionInput": {
            "type": "object",
            "properties": {
                "IsProtected": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "Definer": {
                    "$ref": "#/$defs/ArnString"
                },
                "Representations": {
                    "$ref": "#/$defs/ViewRepresentationInputList"
                },
                "SubObjects": {
                    "$ref": "#/$defs/ViewSubObjectsList"
                }
            }
        },
        "ViewRepresentationInputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ViewRepresentationInput"
            }
        },
        "ViewRepresentationInput": {
            "type": "object",
            "properties": {
                "Dialect": {
                    "$ref": "#/$defs/ViewDialect"
                },
                "DialectVersion": {
                    "$ref": "#/$defs/ViewDialectVersionString"
                },
                "ViewOriginalText": {
                    "$ref": "#/$defs/ViewTextString"
                },
                "ValidationConnection": {
                    "$ref": "#/$defs/NameString"
                },
                "ViewExpandedText": {
                    "$ref": "#/$defs/ViewTextString"
                }
            }
        },
        "ViewDialect": {
            "enum": [
                "REDSHIFT",
                "ATHENA",
                "SPARK"
            ]
        },
        "ViewDialectVersionString": {
            "type": "string"
        },
        "ViewSubObjectsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ArnString"
            }
        },
        "PartitionIndexList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PartitionIndex"
            }
        },
        "OpenTableFormatInput": {
            "type": "object",
            "properties": {
                "IcebergInput": {
                    "$ref": "#/$defs/IcebergInput"
                }
            }
        },
        "IcebergInput": {
            "type": "object",
            "properties": {
                "MetadataOperation": {
                    "$ref": "#/$defs/MetadataOperation"
                },
                "Version": {
                    "$ref": "#/$defs/VersionString"
                }
            }
        },
        "MetadataOperation": {
            "enum": [
                "CREATE"
            ]
        },
        "CreateTableOptimizerResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateTableOptimizerRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "Type": {
                    "$ref": "#/$defs/TableOptimizerType"
                },
                "TableOptimizerConfiguration": {
                    "$ref": "#/$defs/TableOptimizerConfiguration"
                }
            }
        },
        "CreateTriggerResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "CreateTriggerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "WorkflowName": {
                    "$ref": "#/$defs/NameString"
                },
                "Type": {
                    "$ref": "#/$defs/TriggerType"
                },
                "Schedule": {
                    "$ref": "#/$defs/GenericString"
                },
                "Predicate": {
                    "$ref": "#/$defs/Predicate"
                },
                "Actions": {
                    "$ref": "#/$defs/ActionList"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "StartOnCreation": {
                    "$ref": "#/$defs/BooleanValue"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "EventBatchingCondition": {
                    "$ref": "#/$defs/EventBatchingCondition"
                }
            }
        },
        "CreateUsageProfileResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "CreateUsageProfileRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Configuration": {
                    "$ref": "#/$defs/ProfileConfiguration"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "ProfileConfiguration": {
            "type": "object",
            "properties": {
                "SessionConfiguration": {
                    "$ref": "#/$defs/ConfigurationMap"
                },
                "JobConfiguration": {
                    "$ref": "#/$defs/ConfigurationMap"
                }
            }
        },
        "ConfigurationMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ConfigurationObject"
            }
        },
        "ConfigurationObject": {
            "type": "object",
            "properties": {
                "DefaultValue": {
                    "$ref": "#/$defs/ConfigValueString"
                },
                "AllowedValues": {
                    "$ref": "#/$defs/AllowedValuesStringList"
                },
                "MinValue": {
                    "$ref": "#/$defs/ConfigValueString"
                },
                "MaxValue": {
                    "$ref": "#/$defs/ConfigValueString"
                }
            }
        },
        "ConfigValueString": {
            "type": "string"
        },
        "AllowedValuesStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConfigValueString"
            }
        },
        "CreateUserDefinedFunctionResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateUserDefinedFunctionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "FunctionInput": {
                    "$ref": "#/$defs/UserDefinedFunctionInput"
                }
            }
        },
        "UserDefinedFunctionInput": {
            "type": "object",
            "properties": {
                "FunctionName": {
                    "$ref": "#/$defs/NameString"
                },
                "ClassName": {
                    "$ref": "#/$defs/NameString"
                },
                "OwnerName": {
                    "$ref": "#/$defs/NameString"
                },
                "OwnerType": {
                    "$ref": "#/$defs/PrincipalType"
                },
                "ResourceUris": {
                    "$ref": "#/$defs/ResourceUriList"
                }
            }
        },
        "PrincipalType": {
            "enum": [
                "USER",
                "ROLE",
                "GROUP"
            ]
        },
        "ResourceUriList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceUri"
            }
        },
        "ResourceUri": {
            "type": "object",
            "properties": {
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "Uri": {
                    "$ref": "#/$defs/URI"
                }
            }
        },
        "ResourceType": {
            "enum": [
                "JAR",
                "FILE",
                "ARCHIVE"
            ]
        },
        "CreateWorkflowResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "CreateWorkflowRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/GenericString"
                },
                "DefaultRunProperties": {
                    "$ref": "#/$defs/WorkflowRunProperties"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "MaxConcurrentRuns": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "DeleteBlueprintResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteBlueprintRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteClassifierResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteClassifierRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteColumnStatisticsForPartitionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteColumnStatisticsForPartitionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "PartitionValues": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "ColumnName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteColumnStatisticsForTableResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteColumnStatisticsForTableRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "ColumnName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteConnectionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteConnectionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteCrawlerResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteCrawlerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteCustomEntityTypeResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteCustomEntityTypeRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteDatabaseResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDatabaseRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteDataQualityRulesetResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDataQualityRulesetRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteDevEndpointResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDevEndpointRequest": {
            "type": "object",
            "properties": {
                "EndpointName": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "DeleteJobResponse": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteJobRequest": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteMLTransformResponse": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "DeleteMLTransformRequest": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "DeletePartitionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeletePartitionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "PartitionValues": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "DeletePartitionIndexResponse": {
            "type": "object",
            "properties": {}
        },
        "DeletePartitionIndexRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "IndexName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteRegistryResponse": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "RegistryArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "Status": {
                    "$ref": "#/$defs/RegistryStatus"
                }
            }
        },
        "RegistryStatus": {
            "enum": [
                "AVAILABLE",
                "DELETING"
            ]
        },
        "DeleteRegistryInput": {
            "type": "object",
            "properties": {
                "RegistryId": {
                    "$ref": "#/$defs/RegistryId"
                }
            }
        },
        "DeleteResourcePolicyResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "PolicyHashCondition": {
                    "$ref": "#/$defs/HashString"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                }
            }
        },
        "DeleteSchemaResponse": {
            "type": "object",
            "properties": {
                "SchemaArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "SchemaName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "Status": {
                    "$ref": "#/$defs/SchemaStatus"
                }
            }
        },
        "DeleteSchemaInput": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                }
            }
        },
        "DeleteSchemaVersionsResponse": {
            "type": "object",
            "properties": {
                "SchemaVersionErrors": {
                    "$ref": "#/$defs/SchemaVersionErrorList"
                }
            }
        },
        "SchemaVersionErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SchemaVersionErrorItem"
            }
        },
        "SchemaVersionErrorItem": {
            "type": "object",
            "properties": {
                "VersionNumber": {
                    "$ref": "#/$defs/VersionLongNumber"
                },
                "ErrorDetails": {
                    "$ref": "#/$defs/ErrorDetails"
                }
            }
        },
        "ErrorDetails": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCodeString"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessageString"
                }
            }
        },
        "ErrorCodeString": {
            "type": "string"
        },
        "ErrorMessageString": {
            "type": "string"
        },
        "DeleteSchemaVersionsInput": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                },
                "Versions": {
                    "$ref": "#/$defs/VersionsString"
                }
            }
        },
        "VersionsString": {
            "type": "string"
        },
        "DeleteSecurityConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteSecurityConfigurationRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteSessionResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteSessionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NameString"
                },
                "RequestOrigin": {
                    "$ref": "#/$defs/OrchestrationNameString"
                }
            }
        },
        "DeleteTableResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteTableRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                }
            }
        },
        "DeleteTableOptimizerResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteTableOptimizerRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "Type": {
                    "$ref": "#/$defs/TableOptimizerType"
                }
            }
        },
        "DeleteTableVersionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteTableVersionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "VersionId": {
                    "$ref": "#/$defs/VersionString"
                }
            }
        },
        "DeleteTriggerResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteTriggerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteUsageProfileResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteUsageProfileRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteUserDefinedFunctionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteUserDefinedFunctionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "FunctionName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteWorkflowResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteWorkflowRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetBlueprintResponse": {
            "type": "object",
            "properties": {
                "Blueprint": {
                    "$ref": "#/$defs/Blueprint"
                }
            }
        },
        "GetBlueprintRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "IncludeBlueprint": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "IncludeParameterSpec": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "GetBlueprintRunResponse": {
            "type": "object",
            "properties": {
                "BlueprintRun": {
                    "$ref": "#/$defs/BlueprintRun"
                }
            }
        },
        "BlueprintRun": {
            "type": "object",
            "properties": {
                "BlueprintName": {
                    "$ref": "#/$defs/OrchestrationNameString"
                },
                "RunId": {
                    "$ref": "#/$defs/IdString"
                },
                "WorkflowName": {
                    "$ref": "#/$defs/NameString"
                },
                "State": {
                    "$ref": "#/$defs/BlueprintRunState"
                },
                "StartedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/MessageString"
                },
                "RollbackErrorMessage": {
                    "$ref": "#/$defs/MessageString"
                },
                "Parameters": {
                    "$ref": "#/$defs/BlueprintParameters"
                },
                "RoleArn": {
                    "$ref": "#/$defs/OrchestrationIAMRoleArn"
                }
            }
        },
        "BlueprintRunState": {
            "enum": [
                "RUNNING",
                "SUCCEEDED",
                "FAILED",
                "ROLLING_BACK"
            ]
        },
        "BlueprintParameters": {
            "type": "string"
        },
        "OrchestrationIAMRoleArn": {
            "type": "string"
        },
        "GetBlueprintRunRequest": {
            "type": "object",
            "properties": {
                "BlueprintName": {
                    "$ref": "#/$defs/OrchestrationNameString"
                },
                "RunId": {
                    "$ref": "#/$defs/IdString"
                }
            }
        },
        "GetBlueprintRunsResponse": {
            "type": "object",
            "properties": {
                "BlueprintRuns": {
                    "$ref": "#/$defs/BlueprintRuns"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "BlueprintRuns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BlueprintRun"
            }
        },
        "GetBlueprintRunsRequest": {
            "type": "object",
            "properties": {
                "BlueprintName": {
                    "$ref": "#/$defs/NameString"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "PageSize": {
            "type": "integer",
            "format": "int32"
        },
        "GetCatalogImportStatusResponse": {
            "type": "object",
            "properties": {
                "ImportStatus": {
                    "$ref": "#/$defs/CatalogImportStatus"
                }
            }
        },
        "CatalogImportStatus": {
            "type": "object",
            "properties": {
                "ImportCompleted": {
                    "$ref": "#/$defs/Boolean"
                },
                "ImportTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ImportedBy": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetCatalogImportStatusRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                }
            }
        },
        "GetClassifierResponse": {
            "type": "object",
            "properties": {
                "Classifier": {
                    "$ref": "#/$defs/Classifier"
                }
            }
        },
        "Classifier": {
            "type": "object",
            "properties": {
                "GrokClassifier": {
                    "$ref": "#/$defs/GrokClassifier"
                },
                "XMLClassifier": {
                    "$ref": "#/$defs/XMLClassifier"
                },
                "JsonClassifier": {
                    "$ref": "#/$defs/JsonClassifier"
                },
                "CsvClassifier": {
                    "$ref": "#/$defs/CsvClassifier"
                }
            }
        },
        "GrokClassifier": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Classification": {
                    "$ref": "#/$defs/Classification"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Version": {
                    "$ref": "#/$defs/VersionId"
                },
                "GrokPattern": {
                    "$ref": "#/$defs/GrokPattern"
                },
                "CustomPatterns": {
                    "$ref": "#/$defs/CustomPatterns"
                }
            }
        },
        "XMLClassifier": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Classification": {
                    "$ref": "#/$defs/Classification"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Version": {
                    "$ref": "#/$defs/VersionId"
                },
                "RowTag": {
                    "$ref": "#/$defs/RowTag"
                }
            }
        },
        "JsonClassifier": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Version": {
                    "$ref": "#/$defs/VersionId"
                },
                "JsonPath": {
                    "$ref": "#/$defs/JsonPath"
                }
            }
        },
        "CsvClassifier": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Version": {
                    "$ref": "#/$defs/VersionId"
                },
                "Delimiter": {
                    "$ref": "#/$defs/CsvColumnDelimiter"
                },
                "QuoteSymbol": {
                    "$ref": "#/$defs/CsvQuoteSymbol"
                },
                "ContainsHeader": {
                    "$ref": "#/$defs/CsvHeaderOption"
                },
                "Header": {
                    "$ref": "#/$defs/CsvHeader"
                },
                "DisableValueTrimming": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "AllowSingleColumn": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "CustomDatatypeConfigured": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "CustomDatatypes": {
                    "$ref": "#/$defs/CustomDatatypes"
                },
                "Serde": {
                    "$ref": "#/$defs/CsvSerdeOption"
                }
            }
        },
        "GetClassifierRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetClassifiersResponse": {
            "type": "object",
            "properties": {
                "Classifiers": {
                    "$ref": "#/$defs/ClassifierList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ClassifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Classifier"
            }
        },
        "Token": {
            "type": "string"
        },
        "GetClassifiersRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetColumnStatisticsForPartitionResponse": {
            "type": "object",
            "properties": {
                "ColumnStatisticsList": {
                    "$ref": "#/$defs/ColumnStatisticsList"
                },
                "Errors": {
                    "$ref": "#/$defs/ColumnErrors"
                }
            }
        },
        "ColumnStatisticsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnStatistics"
            }
        },
        "ColumnStatistics": {
            "type": "object",
            "properties": {
                "ColumnName": {
                    "$ref": "#/$defs/NameString"
                },
                "ColumnType": {
                    "$ref": "#/$defs/TypeString"
                },
                "AnalyzedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "StatisticsData": {
                    "$ref": "#/$defs/ColumnStatisticsData"
                }
            }
        },
        "TypeString": {
            "type": "string"
        },
        "ColumnStatisticsData": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ColumnStatisticsType"
                },
                "BooleanColumnStatisticsData": {
                    "$ref": "#/$defs/BooleanColumnStatisticsData"
                },
                "DateColumnStatisticsData": {
                    "$ref": "#/$defs/DateColumnStatisticsData"
                },
                "DecimalColumnStatisticsData": {
                    "$ref": "#/$defs/DecimalColumnStatisticsData"
                },
                "DoubleColumnStatisticsData": {
                    "$ref": "#/$defs/DoubleColumnStatisticsData"
                },
                "LongColumnStatisticsData": {
                    "$ref": "#/$defs/LongColumnStatisticsData"
                },
                "StringColumnStatisticsData": {
                    "$ref": "#/$defs/StringColumnStatisticsData"
                },
                "BinaryColumnStatisticsData": {
                    "$ref": "#/$defs/BinaryColumnStatisticsData"
                }
            }
        },
        "ColumnStatisticsType": {
            "enum": [
                "BOOLEAN",
                "DATE",
                "DECIMAL",
                "DOUBLE",
                "LONG",
                "STRING",
                "BINARY"
            ]
        },
        "BooleanColumnStatisticsData": {
            "type": "object",
            "properties": {
                "NumberOfTrues": {
                    "$ref": "#/$defs/NonNegativeLong"
                },
                "NumberOfFalses": {
                    "$ref": "#/$defs/NonNegativeLong"
                },
                "NumberOfNulls": {
                    "$ref": "#/$defs/NonNegativeLong"
                }
            }
        },
        "NonNegativeLong": {
            "type": "integer",
            "format": "int64"
        },
        "DateColumnStatisticsData": {
            "type": "object",
            "properties": {
                "MinimumValue": {
                    "$ref": "#/$defs/Timestamp"
                },
                "MaximumValue": {
                    "$ref": "#/$defs/Timestamp"
                },
                "NumberOfNulls": {
                    "$ref": "#/$defs/NonNegativeLong"
                },
                "NumberOfDistinctValues": {
                    "$ref": "#/$defs/NonNegativeLong"
                }
            }
        },
        "DecimalColumnStatisticsData": {
            "type": "object",
            "properties": {
                "MinimumValue": {
                    "$ref": "#/$defs/DecimalNumber"
                },
                "MaximumValue": {
                    "$ref": "#/$defs/DecimalNumber"
                },
                "NumberOfNulls": {
                    "$ref": "#/$defs/NonNegativeLong"
                },
                "NumberOfDistinctValues": {
                    "$ref": "#/$defs/NonNegativeLong"
                }
            }
        },
        "DecimalNumber": {
            "type": "object",
            "properties": {
                "UnscaledValue": {
                    "$ref": "#/$defs/Blob"
                },
                "Scale": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "Blob": {
            "type": "string",
            "format": "binary"
        },
        "DoubleColumnStatisticsData": {
            "type": "object",
            "properties": {
                "MinimumValue": {
                    "$ref": "#/$defs/Double"
                },
                "MaximumValue": {
                    "$ref": "#/$defs/Double"
                },
                "NumberOfNulls": {
                    "$ref": "#/$defs/NonNegativeLong"
                },
                "NumberOfDistinctValues": {
                    "$ref": "#/$defs/NonNegativeLong"
                }
            }
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "LongColumnStatisticsData": {
            "type": "object",
            "properties": {
                "MinimumValue": {
                    "$ref": "#/$defs/Long"
                },
                "MaximumValue": {
                    "$ref": "#/$defs/Long"
                },
                "NumberOfNulls": {
                    "$ref": "#/$defs/NonNegativeLong"
                },
                "NumberOfDistinctValues": {
                    "$ref": "#/$defs/NonNegativeLong"
                }
            }
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "StringColumnStatisticsData": {
            "type": "object",
            "properties": {
                "MaximumLength": {
                    "$ref": "#/$defs/NonNegativeLong"
                },
                "AverageLength": {
                    "$ref": "#/$defs/NonNegativeDouble"
                },
                "NumberOfNulls": {
                    "$ref": "#/$defs/NonNegativeLong"
                },
                "NumberOfDistinctValues": {
                    "$ref": "#/$defs/NonNegativeLong"
                }
            }
        },
        "NonNegativeDouble": {
            "type": "number",
            "format": "double"
        },
        "BinaryColumnStatisticsData": {
            "type": "object",
            "properties": {
                "MaximumLength": {
                    "$ref": "#/$defs/NonNegativeLong"
                },
                "AverageLength": {
                    "$ref": "#/$defs/NonNegativeDouble"
                },
                "NumberOfNulls": {
                    "$ref": "#/$defs/NonNegativeLong"
                }
            }
        },
        "ColumnErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnError"
            }
        },
        "ColumnError": {
            "type": "object",
            "properties": {
                "ColumnName": {
                    "$ref": "#/$defs/NameString"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorDetail"
                }
            }
        },
        "GetColumnStatisticsForPartitionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "PartitionValues": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "ColumnNames": {
                    "$ref": "#/$defs/GetColumnNamesList"
                }
            }
        },
        "GetColumnNamesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "GetColumnStatisticsForTableResponse": {
            "type": "object",
            "properties": {
                "ColumnStatisticsList": {
                    "$ref": "#/$defs/ColumnStatisticsList"
                },
                "Errors": {
                    "$ref": "#/$defs/ColumnErrors"
                }
            }
        },
        "GetColumnStatisticsForTableRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "ColumnNames": {
                    "$ref": "#/$defs/GetColumnNamesList"
                }
            }
        },
        "GetColumnStatisticsTaskRunResponse": {
            "type": "object",
            "properties": {
                "ColumnStatisticsTaskRun": {
                    "$ref": "#/$defs/ColumnStatisticsTaskRun"
                }
            }
        },
        "ColumnStatisticsTaskRun": {
            "type": "object",
            "properties": {
                "CustomerId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ColumnStatisticsTaskRunId": {
                    "$ref": "#/$defs/HashString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "ColumnNameList": {
                    "$ref": "#/$defs/ColumnNameList"
                },
                "CatalogID": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Role": {
                    "$ref": "#/$defs/Role"
                },
                "SampleSize": {
                    "$ref": "#/$defs/SampleSizePercentage"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/CrawlerSecurityConfiguration"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/PositiveInteger"
                },
                "WorkerType": {
                    "$ref": "#/$defs/NameString"
                },
                "Status": {
                    "$ref": "#/$defs/ColumnStatisticsState"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "DPUSeconds": {
                    "$ref": "#/$defs/NonNegativeDouble"
                }
            }
        },
        "TableName": {
            "type": "string"
        },
        "ColumnNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "SampleSizePercentage": {
            "type": "number",
            "format": "double"
        },
        "PositiveInteger": {
            "type": "integer",
            "format": "int32"
        },
        "ColumnStatisticsState": {
            "enum": [
                "STARTING",
                "RUNNING",
                "SUCCEEDED",
                "FAILED",
                "STOPPED"
            ]
        },
        "GetColumnStatisticsTaskRunRequest": {
            "type": "object",
            "properties": {
                "ColumnStatisticsTaskRunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "GetColumnStatisticsTaskRunsResponse": {
            "type": "object",
            "properties": {
                "ColumnStatisticsTaskRuns": {
                    "$ref": "#/$defs/ColumnStatisticsTaskRunsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ColumnStatisticsTaskRunsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnStatisticsTaskRun"
            }
        },
        "GetColumnStatisticsTaskRunsRequest": {
            "type": "object",
            "properties": {
                "DatabaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetConnectionResponse": {
            "type": "object",
            "properties": {
                "Connection": {
                    "$ref": "#/$defs/Connection"
                }
            }
        },
        "Connection": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/ConnectionType"
                },
                "MatchCriteria": {
                    "$ref": "#/$defs/MatchCriteria"
                },
                "ConnectionProperties": {
                    "$ref": "#/$defs/ConnectionProperties"
                },
                "AthenaProperties": {
                    "$ref": "#/$defs/PropertyMap"
                },
                "PhysicalConnectionRequirements": {
                    "$ref": "#/$defs/PhysicalConnectionRequirements"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedBy": {
                    "$ref": "#/$defs/NameString"
                },
                "Status": {
                    "$ref": "#/$defs/ConnectionStatus"
                },
                "StatusReason": {
                    "$ref": "#/$defs/LongValueString"
                },
                "LastConnectionValidationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "AuthenticationConfiguration": {
                    "$ref": "#/$defs/AuthenticationConfiguration"
                }
            }
        },
        "LongValueString": {
            "type": "string"
        },
        "AuthenticationConfiguration": {
            "type": "object",
            "properties": {
                "AuthenticationType": {
                    "$ref": "#/$defs/AuthenticationType"
                },
                "SecretArn": {
                    "$ref": "#/$defs/SecretArn"
                },
                "OAuth2Properties": {
                    "$ref": "#/$defs/OAuth2Properties"
                }
            }
        },
        "OAuth2Properties": {
            "type": "object",
            "properties": {
                "OAuth2GrantType": {
                    "$ref": "#/$defs/OAuth2GrantType"
                },
                "OAuth2ClientApplication": {
                    "$ref": "#/$defs/OAuth2ClientApplication"
                },
                "TokenUrl": {
                    "$ref": "#/$defs/TokenUrl"
                },
                "TokenUrlParametersMap": {
                    "$ref": "#/$defs/TokenUrlParametersMap"
                }
            }
        },
        "GetConnectionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "HidePassword": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetConnectionsResponse": {
            "type": "object",
            "properties": {
                "ConnectionList": {
                    "$ref": "#/$defs/ConnectionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ConnectionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Connection"
            }
        },
        "GetConnectionsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Filter": {
                    "$ref": "#/$defs/GetConnectionsFilter"
                },
                "HidePassword": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "GetConnectionsFilter": {
            "type": "object",
            "properties": {
                "MatchCriteria": {
                    "$ref": "#/$defs/MatchCriteria"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/ConnectionType"
                }
            }
        },
        "GetCrawlerResponse": {
            "type": "object",
            "properties": {
                "Crawler": {
                    "$ref": "#/$defs/Crawler"
                }
            }
        },
        "GetCrawlerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetCrawlerMetricsResponse": {
            "type": "object",
            "properties": {
                "CrawlerMetricsList": {
                    "$ref": "#/$defs/CrawlerMetricsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "CrawlerMetricsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CrawlerMetrics"
            }
        },
        "CrawlerMetrics": {
            "type": "object",
            "properties": {
                "CrawlerName": {
                    "$ref": "#/$defs/NameString"
                },
                "TimeLeftSeconds": {
                    "$ref": "#/$defs/NonNegativeDouble"
                },
                "StillEstimating": {
                    "$ref": "#/$defs/Boolean"
                },
                "LastRuntimeSeconds": {
                    "$ref": "#/$defs/NonNegativeDouble"
                },
                "MedianRuntimeSeconds": {
                    "$ref": "#/$defs/NonNegativeDouble"
                },
                "TablesCreated": {
                    "$ref": "#/$defs/NonNegativeInteger"
                },
                "TablesUpdated": {
                    "$ref": "#/$defs/NonNegativeInteger"
                },
                "TablesDeleted": {
                    "$ref": "#/$defs/NonNegativeInteger"
                }
            }
        },
        "GetCrawlerMetricsRequest": {
            "type": "object",
            "properties": {
                "CrawlerNameList": {
                    "$ref": "#/$defs/CrawlerNameList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetCrawlersResponse": {
            "type": "object",
            "properties": {
                "Crawlers": {
                    "$ref": "#/$defs/CrawlerList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetCrawlersRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetCustomEntityTypeResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "RegexString": {
                    "$ref": "#/$defs/NameString"
                },
                "ContextWords": {
                    "$ref": "#/$defs/ContextWords"
                }
            }
        },
        "GetCustomEntityTypeRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetDatabaseResponse": {
            "type": "object",
            "properties": {
                "Database": {
                    "$ref": "#/$defs/Database"
                }
            }
        },
        "Database": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "LocationUri": {
                    "$ref": "#/$defs/URI"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                },
                "CreateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreateTableDefaultPermissions": {
                    "$ref": "#/$defs/PrincipalPermissionsList"
                },
                "TargetDatabase": {
                    "$ref": "#/$defs/DatabaseIdentifier"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "FederatedDatabase": {
                    "$ref": "#/$defs/FederatedDatabase"
                }
            }
        },
        "GetDatabaseRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetDatabasesResponse": {
            "type": "object",
            "properties": {
                "DatabaseList": {
                    "$ref": "#/$defs/DatabaseList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "DatabaseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Database"
            }
        },
        "GetDatabasesRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/CatalogGetterPageSize"
                },
                "ResourceShareType": {
                    "$ref": "#/$defs/ResourceShareType"
                },
                "AttributesToGet": {
                    "$ref": "#/$defs/DatabaseAttributesList"
                }
            }
        },
        "CatalogGetterPageSize": {
            "type": "integer",
            "format": "int32"
        },
        "ResourceShareType": {
            "enum": [
                "FOREIGN",
                "ALL",
                "FEDERATED"
            ]
        },
        "DatabaseAttributesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatabaseAttributes"
            }
        },
        "DatabaseAttributes": {
            "enum": [
                "NAME"
            ]
        },
        "GetDataCatalogEncryptionSettingsResponse": {
            "type": "object",
            "properties": {
                "DataCatalogEncryptionSettings": {
                    "$ref": "#/$defs/DataCatalogEncryptionSettings"
                }
            }
        },
        "DataCatalogEncryptionSettings": {
            "type": "object",
            "properties": {
                "EncryptionAtRest": {
                    "$ref": "#/$defs/EncryptionAtRest"
                },
                "ConnectionPasswordEncryption": {
                    "$ref": "#/$defs/ConnectionPasswordEncryption"
                }
            }
        },
        "EncryptionAtRest": {
            "type": "object",
            "properties": {
                "CatalogEncryptionMode": {
                    "$ref": "#/$defs/CatalogEncryptionMode"
                },
                "SseAwsKmsKeyId": {
                    "$ref": "#/$defs/NameString"
                },
                "CatalogEncryptionServiceRole": {
                    "$ref": "#/$defs/IAMRoleArn"
                }
            }
        },
        "CatalogEncryptionMode": {
            "enum": [
                "DISABLED",
                "SSEKMS",
                "SSEKMSWITHSERVICEROLE"
            ]
        },
        "IAMRoleArn": {
            "type": "string"
        },
        "ConnectionPasswordEncryption": {
            "type": "object",
            "properties": {
                "ReturnConnectionPasswordEncrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "AwsKmsKeyId": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetDataCatalogEncryptionSettingsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                }
            }
        },
        "GetDataflowGraphResponse": {
            "type": "object",
            "properties": {
                "DagNodes": {
                    "$ref": "#/$defs/DagNodes"
                },
                "DagEdges": {
                    "$ref": "#/$defs/DagEdges"
                }
            }
        },
        "GetDataflowGraphRequest": {
            "type": "object",
            "properties": {
                "PythonScript": {
                    "$ref": "#/$defs/PythonScript"
                }
            }
        },
        "GetDataQualityModelResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/DataQualityModelStatus"
                },
                "StartedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "FailureReason": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "DataQualityModelStatus": {
            "enum": [
                "RUNNING",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "GetDataQualityModelRequest": {
            "type": "object",
            "properties": {
                "StatisticId": {
                    "$ref": "#/$defs/HashString"
                },
                "ProfileId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "GetDataQualityModelResultResponse": {
            "type": "object",
            "properties": {
                "CompletedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Model": {
                    "$ref": "#/$defs/StatisticModelResults"
                }
            }
        },
        "StatisticModelResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StatisticModelResult"
            }
        },
        "StatisticModelResult": {
            "type": "object",
            "properties": {
                "LowerBound": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "UpperBound": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "PredictedValue": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "ActualValue": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "Date": {
                    "$ref": "#/$defs/Timestamp"
                },
                "InclusionAnnotation": {
                    "$ref": "#/$defs/InclusionAnnotationValue"
                }
            }
        },
        "GetDataQualityModelResultRequest": {
            "type": "object",
            "properties": {
                "StatisticId": {
                    "$ref": "#/$defs/HashString"
                },
                "ProfileId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "GetDataQualityResultResponse": {
            "type": "object",
            "properties": {
                "ResultId": {
                    "$ref": "#/$defs/HashString"
                },
                "ProfileId": {
                    "$ref": "#/$defs/HashString"
                },
                "Score": {
                    "$ref": "#/$defs/GenericBoundedDouble"
                },
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "RulesetName": {
                    "$ref": "#/$defs/NameString"
                },
                "EvaluationContext": {
                    "$ref": "#/$defs/GenericString"
                },
                "StartedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "JobRunId": {
                    "$ref": "#/$defs/HashString"
                },
                "RulesetEvaluationRunId": {
                    "$ref": "#/$defs/HashString"
                },
                "RuleResults": {
                    "$ref": "#/$defs/DataQualityRuleResults"
                },
                "AnalyzerResults": {
                    "$ref": "#/$defs/DataQualityAnalyzerResults"
                },
                "Observations": {
                    "$ref": "#/$defs/DataQualityObservations"
                }
            }
        },
        "GetDataQualityResultRequest": {
            "type": "object",
            "properties": {
                "ResultId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "GetDataQualityRuleRecommendationRunResponse": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/HashString"
                },
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "Role": {
                    "$ref": "#/$defs/RoleString"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "Status": {
                    "$ref": "#/$defs/TaskStatusType"
                },
                "ErrorString": {
                    "$ref": "#/$defs/GenericString"
                },
                "StartedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ExecutionTime": {
                    "$ref": "#/$defs/ExecutionTime"
                },
                "RecommendedRuleset": {
                    "$ref": "#/$defs/DataQualityRulesetString"
                },
                "CreatedRulesetName": {
                    "$ref": "#/$defs/NameString"
                },
                "DataQualitySecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetDataQualityRuleRecommendationRunRequest": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "GetDataQualityRulesetResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Ruleset": {
                    "$ref": "#/$defs/DataQualityRulesetString"
                },
                "TargetTable": {
                    "$ref": "#/$defs/DataQualityTargetTable"
                },
                "CreatedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "RecommendationRunId": {
                    "$ref": "#/$defs/HashString"
                },
                "DataQualitySecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetDataQualityRulesetRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetDataQualityRulesetEvaluationRunResponse": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/HashString"
                },
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "Role": {
                    "$ref": "#/$defs/RoleString"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "AdditionalRunOptions": {
                    "$ref": "#/$defs/DataQualityEvaluationRunAdditionalRunOptions"
                },
                "Status": {
                    "$ref": "#/$defs/TaskStatusType"
                },
                "ErrorString": {
                    "$ref": "#/$defs/GenericString"
                },
                "StartedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ExecutionTime": {
                    "$ref": "#/$defs/ExecutionTime"
                },
                "RulesetNames": {
                    "$ref": "#/$defs/RulesetNames"
                },
                "ResultIds": {
                    "$ref": "#/$defs/DataQualityResultIdList"
                },
                "AdditionalDataSources": {
                    "$ref": "#/$defs/DataSourceMap"
                }
            }
        },
        "DataQualityEvaluationRunAdditionalRunOptions": {
            "type": "object",
            "properties": {
                "CloudWatchMetricsEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "ResultsS3Prefix": {
                    "$ref": "#/$defs/UriString"
                },
                "CompositeRuleEvaluationMethod": {
                    "$ref": "#/$defs/DQCompositeRuleEvaluationMethod"
                }
            }
        },
        "DQCompositeRuleEvaluationMethod": {
            "enum": [
                "COLUMN",
                "ROW"
            ]
        },
        "RulesetNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "DataQualityResultIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HashString"
            }
        },
        "DataSourceMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DataSource"
            }
        },
        "GetDataQualityRulesetEvaluationRunRequest": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "GetDevEndpointResponse": {
            "type": "object",
            "properties": {
                "DevEndpoint": {
                    "$ref": "#/$defs/DevEndpoint"
                }
            }
        },
        "GetDevEndpointRequest": {
            "type": "object",
            "properties": {
                "EndpointName": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GetDevEndpointsResponse": {
            "type": "object",
            "properties": {
                "DevEndpoints": {
                    "$ref": "#/$defs/DevEndpointList"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GetDevEndpointsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GetJobResponse": {
            "type": "object",
            "properties": {
                "Job": {
                    "$ref": "#/$defs/Job"
                }
            }
        },
        "GetJobRequest": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetJobBookmarkResponse": {
            "type": "object",
            "properties": {
                "JobBookmarkEntry": {
                    "$ref": "#/$defs/JobBookmarkEntry"
                }
            }
        },
        "JobBookmarkEntry": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "Version": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "Run": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "Attempt": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "PreviousRunId": {
                    "$ref": "#/$defs/RunId"
                },
                "RunId": {
                    "$ref": "#/$defs/RunId"
                },
                "JobBookmark": {
                    "$ref": "#/$defs/JsonValue"
                }
            }
        },
        "JobName": {
            "type": "string"
        },
        "RunId": {
            "type": "string"
        },
        "JsonValue": {
            "type": "string"
        },
        "GetJobBookmarkRequest": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "RunId": {
                    "$ref": "#/$defs/RunId"
                }
            }
        },
        "GetJobRunResponse": {
            "type": "object",
            "properties": {
                "JobRun": {
                    "$ref": "#/$defs/JobRun"
                }
            }
        },
        "GetJobRunRequest": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "RunId": {
                    "$ref": "#/$defs/IdString"
                },
                "PredecessorsIncluded": {
                    "$ref": "#/$defs/BooleanValue"
                }
            }
        },
        "GetJobRunsResponse": {
            "type": "object",
            "properties": {
                "JobRuns": {
                    "$ref": "#/$defs/JobRunList"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GetJobRunsRequest": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/OrchestrationPageSize200"
                }
            }
        },
        "OrchestrationPageSize200": {
            "type": "integer",
            "format": "int32"
        },
        "GetJobsResponse": {
            "type": "object",
            "properties": {
                "Jobs": {
                    "$ref": "#/$defs/JobList"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GetJobsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "GetMappingResponse": {
            "type": "object",
            "properties": {
                "Mapping": {
                    "$ref": "#/$defs/MappingList"
                }
            }
        },
        "MappingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MappingEntry"
            }
        },
        "MappingEntry": {
            "type": "object",
            "properties": {
                "SourceTable": {
                    "$ref": "#/$defs/TableName"
                },
                "SourcePath": {
                    "$ref": "#/$defs/SchemaPathString"
                },
                "SourceType": {
                    "$ref": "#/$defs/FieldType"
                },
                "TargetTable": {
                    "$ref": "#/$defs/TableName"
                },
                "TargetPath": {
                    "$ref": "#/$defs/SchemaPathString"
                },
                "TargetType": {
                    "$ref": "#/$defs/FieldType"
                }
            }
        },
        "SchemaPathString": {
            "type": "string"
        },
        "FieldType": {
            "type": "string"
        },
        "GetMappingRequest": {
            "type": "object",
            "properties": {
                "Source": {
                    "$ref": "#/$defs/CatalogEntry"
                },
                "Sinks": {
                    "$ref": "#/$defs/CatalogEntries"
                },
                "Location": {
                    "$ref": "#/$defs/Location"
                }
            }
        },
        "CatalogEntry": {
            "type": "object",
            "properties": {
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "CatalogEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CatalogEntry"
            }
        },
        "Location": {
            "type": "object",
            "properties": {
                "Jdbc": {
                    "$ref": "#/$defs/CodeGenNodeArgs"
                },
                "S3": {
                    "$ref": "#/$defs/CodeGenNodeArgs"
                },
                "DynamoDB": {
                    "$ref": "#/$defs/CodeGenNodeArgs"
                }
            }
        },
        "GetMLTaskRunResponse": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                },
                "TaskRunId": {
                    "$ref": "#/$defs/HashString"
                },
                "Status": {
                    "$ref": "#/$defs/TaskStatusType"
                },
                "LogGroupName": {
                    "$ref": "#/$defs/GenericString"
                },
                "Properties": {
                    "$ref": "#/$defs/TaskRunProperties"
                },
                "ErrorString": {
                    "$ref": "#/$defs/GenericString"
                },
                "StartedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ExecutionTime": {
                    "$ref": "#/$defs/ExecutionTime"
                }
            }
        },
        "TaskRunProperties": {
            "type": "object",
            "properties": {
                "TaskType": {
                    "$ref": "#/$defs/TaskType"
                },
                "ImportLabelsTaskRunProperties": {
                    "$ref": "#/$defs/ImportLabelsTaskRunProperties"
                },
                "ExportLabelsTaskRunProperties": {
                    "$ref": "#/$defs/ExportLabelsTaskRunProperties"
                },
                "LabelingSetGenerationTaskRunProperties": {
                    "$ref": "#/$defs/LabelingSetGenerationTaskRunProperties"
                },
                "FindMatchesTaskRunProperties": {
                    "$ref": "#/$defs/FindMatchesTaskRunProperties"
                }
            }
        },
        "TaskType": {
            "enum": [
                "EVALUATION",
                "LABELING_SET_GENERATION",
                "IMPORT_LABELS",
                "EXPORT_LABELS",
                "FIND_MATCHES"
            ]
        },
        "ImportLabelsTaskRunProperties": {
            "type": "object",
            "properties": {
                "InputS3Path": {
                    "$ref": "#/$defs/UriString"
                },
                "Replace": {
                    "$ref": "#/$defs/ReplaceBoolean"
                }
            }
        },
        "ReplaceBoolean": {
            "type": "boolean"
        },
        "ExportLabelsTaskRunProperties": {
            "type": "object",
            "properties": {
                "OutputS3Path": {
                    "$ref": "#/$defs/UriString"
                }
            }
        },
        "LabelingSetGenerationTaskRunProperties": {
            "type": "object",
            "properties": {
                "OutputS3Path": {
                    "$ref": "#/$defs/UriString"
                }
            }
        },
        "FindMatchesTaskRunProperties": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/HashString"
                },
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "JobRunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "GetMLTaskRunRequest": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                },
                "TaskRunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "GetMLTaskRunsResponse": {
            "type": "object",
            "properties": {
                "TaskRuns": {
                    "$ref": "#/$defs/TaskRunList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "TaskRunList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaskRun"
            }
        },
        "TaskRun": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                },
                "TaskRunId": {
                    "$ref": "#/$defs/HashString"
                },
                "Status": {
                    "$ref": "#/$defs/TaskStatusType"
                },
                "LogGroupName": {
                    "$ref": "#/$defs/GenericString"
                },
                "Properties": {
                    "$ref": "#/$defs/TaskRunProperties"
                },
                "ErrorString": {
                    "$ref": "#/$defs/GenericString"
                },
                "StartedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ExecutionTime": {
                    "$ref": "#/$defs/ExecutionTime"
                }
            }
        },
        "PaginationToken": {
            "type": "string"
        },
        "GetMLTaskRunsRequest": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "Filter": {
                    "$ref": "#/$defs/TaskRunFilterCriteria"
                },
                "Sort": {
                    "$ref": "#/$defs/TaskRunSortCriteria"
                }
            }
        },
        "TaskRunFilterCriteria": {
            "type": "object",
            "properties": {
                "TaskRunType": {
                    "$ref": "#/$defs/TaskType"
                },
                "Status": {
                    "$ref": "#/$defs/TaskStatusType"
                },
                "StartedBefore": {
                    "$ref": "#/$defs/Timestamp"
                },
                "StartedAfter": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "TaskRunSortCriteria": {
            "type": "object",
            "properties": {
                "Column": {
                    "$ref": "#/$defs/TaskRunSortColumnType"
                },
                "SortDirection": {
                    "$ref": "#/$defs/SortDirectionType"
                }
            }
        },
        "TaskRunSortColumnType": {
            "enum": [
                "TASK_RUN_TYPE",
                "STATUS",
                "STARTED"
            ]
        },
        "SortDirectionType": {
            "enum": [
                "DESCENDING",
                "ASCENDING"
            ]
        },
        "GetMLTransformResponse": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Status": {
                    "$ref": "#/$defs/TransformStatusType"
                },
                "CreatedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "InputRecordTables": {
                    "$ref": "#/$defs/GlueTables"
                },
                "Parameters": {
                    "$ref": "#/$defs/TransformParameters"
                },
                "EvaluationMetrics": {
                    "$ref": "#/$defs/EvaluationMetrics"
                },
                "LabelCount": {
                    "$ref": "#/$defs/LabelCount"
                },
                "Schema": {
                    "$ref": "#/$defs/TransformSchema"
                },
                "Role": {
                    "$ref": "#/$defs/RoleString"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "TransformEncryption": {
                    "$ref": "#/$defs/TransformEncryption"
                }
            }
        },
        "TransformStatusType": {
            "enum": [
                "NOT_READY",
                "READY",
                "DELETING"
            ]
        },
        "EvaluationMetrics": {
            "type": "object",
            "properties": {
                "TransformType": {
                    "$ref": "#/$defs/TransformType"
                },
                "FindMatchesMetrics": {
                    "$ref": "#/$defs/FindMatchesMetrics"
                }
            }
        },
        "FindMatchesMetrics": {
            "type": "object",
            "properties": {
                "AreaUnderPRCurve": {
                    "$ref": "#/$defs/GenericBoundedDouble"
                },
                "Precision": {
                    "$ref": "#/$defs/GenericBoundedDouble"
                },
                "Recall": {
                    "$ref": "#/$defs/GenericBoundedDouble"
                },
                "F1": {
                    "$ref": "#/$defs/GenericBoundedDouble"
                },
                "ConfusionMatrix": {
                    "$ref": "#/$defs/ConfusionMatrix"
                },
                "ColumnImportances": {
                    "$ref": "#/$defs/ColumnImportanceList"
                }
            }
        },
        "ConfusionMatrix": {
            "type": "object",
            "properties": {
                "NumTruePositives": {
                    "$ref": "#/$defs/RecordsCount"
                },
                "NumFalsePositives": {
                    "$ref": "#/$defs/RecordsCount"
                },
                "NumTrueNegatives": {
                    "$ref": "#/$defs/RecordsCount"
                },
                "NumFalseNegatives": {
                    "$ref": "#/$defs/RecordsCount"
                }
            }
        },
        "RecordsCount": {
            "type": "integer",
            "format": "int64"
        },
        "ColumnImportanceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnImportance"
            }
        },
        "ColumnImportance": {
            "type": "object",
            "properties": {
                "ColumnName": {
                    "$ref": "#/$defs/NameString"
                },
                "Importance": {
                    "$ref": "#/$defs/GenericBoundedDouble"
                }
            }
        },
        "LabelCount": {
            "type": "integer",
            "format": "int32"
        },
        "TransformSchema": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SchemaColumn"
            }
        },
        "SchemaColumn": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ColumnNameString"
                },
                "DataType": {
                    "$ref": "#/$defs/ColumnTypeString"
                }
            }
        },
        "GetMLTransformRequest": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "GetMLTransformsResponse": {
            "type": "object",
            "properties": {
                "Transforms": {
                    "$ref": "#/$defs/TransformList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "TransformList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MLTransform"
            }
        },
        "MLTransform": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Status": {
                    "$ref": "#/$defs/TransformStatusType"
                },
                "CreatedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "InputRecordTables": {
                    "$ref": "#/$defs/GlueTables"
                },
                "Parameters": {
                    "$ref": "#/$defs/TransformParameters"
                },
                "EvaluationMetrics": {
                    "$ref": "#/$defs/EvaluationMetrics"
                },
                "LabelCount": {
                    "$ref": "#/$defs/LabelCount"
                },
                "Schema": {
                    "$ref": "#/$defs/TransformSchema"
                },
                "Role": {
                    "$ref": "#/$defs/RoleString"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "TransformEncryption": {
                    "$ref": "#/$defs/TransformEncryption"
                }
            }
        },
        "GetMLTransformsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "Filter": {
                    "$ref": "#/$defs/TransformFilterCriteria"
                },
                "Sort": {
                    "$ref": "#/$defs/TransformSortCriteria"
                }
            }
        },
        "TransformFilterCriteria": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "TransformType": {
                    "$ref": "#/$defs/TransformType"
                },
                "Status": {
                    "$ref": "#/$defs/TransformStatusType"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "CreatedBefore": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedAfter": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedBefore": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedAfter": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Schema": {
                    "$ref": "#/$defs/TransformSchema"
                }
            }
        },
        "TransformSortCriteria": {
            "type": "object",
            "properties": {
                "Column": {
                    "$ref": "#/$defs/TransformSortColumnType"
                },
                "SortDirection": {
                    "$ref": "#/$defs/SortDirectionType"
                }
            }
        },
        "TransformSortColumnType": {
            "enum": [
                "NAME",
                "TRANSFORM_TYPE",
                "STATUS",
                "CREATED",
                "LAST_MODIFIED"
            ]
        },
        "GetPartitionResponse": {
            "type": "object",
            "properties": {
                "Partition": {
                    "$ref": "#/$defs/Partition"
                }
            }
        },
        "GetPartitionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "PartitionValues": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "GetPartitionIndexesResponse": {
            "type": "object",
            "properties": {
                "PartitionIndexDescriptorList": {
                    "$ref": "#/$defs/PartitionIndexDescriptorList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "PartitionIndexDescriptorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PartitionIndexDescriptor"
            }
        },
        "PartitionIndexDescriptor": {
            "type": "object",
            "properties": {
                "IndexName": {
                    "$ref": "#/$defs/NameString"
                },
                "Keys": {
                    "$ref": "#/$defs/KeySchemaElementList"
                },
                "IndexStatus": {
                    "$ref": "#/$defs/PartitionIndexStatus"
                },
                "BackfillErrors": {
                    "$ref": "#/$defs/BackfillErrors"
                }
            }
        },
        "KeySchemaElementList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeySchemaElement"
            }
        },
        "KeySchemaElement": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Type": {
                    "$ref": "#/$defs/ColumnTypeString"
                }
            }
        },
        "PartitionIndexStatus": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "DELETING",
                "FAILED"
            ]
        },
        "BackfillErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackfillError"
            }
        },
        "BackfillError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/BackfillErrorCode"
                },
                "Partitions": {
                    "$ref": "#/$defs/BackfillErroredPartitionsList"
                }
            }
        },
        "BackfillErrorCode": {
            "enum": [
                "ENCRYPTED_PARTITION_ERROR",
                "INTERNAL_ERROR",
                "INVALID_PARTITION_TYPE_DATA_ERROR",
                "MISSING_PARTITION_VALUE_ERROR",
                "UNSUPPORTED_PARTITION_CHARACTER_ERROR"
            ]
        },
        "BackfillErroredPartitionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PartitionValueList"
            }
        },
        "GetPartitionIndexesRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetPartitionsResponse": {
            "type": "object",
            "properties": {
                "Partitions": {
                    "$ref": "#/$defs/PartitionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetPartitionsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "Expression": {
                    "$ref": "#/$defs/PredicateString"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "Segment": {
                    "$ref": "#/$defs/Segment"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "ExcludeColumnSchema": {
                    "$ref": "#/$defs/BooleanNullable"
                },
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                },
                "QueryAsOfTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "PredicateString": {
            "type": "string"
        },
        "Segment": {
            "type": "object",
            "properties": {
                "SegmentNumber": {
                    "$ref": "#/$defs/NonNegativeInteger"
                },
                "TotalSegments": {
                    "$ref": "#/$defs/TotalSegmentsInteger"
                }
            }
        },
        "TotalSegmentsInteger": {
            "type": "integer",
            "format": "int32"
        },
        "BooleanNullable": {
            "type": "boolean"
        },
        "GetPlanResponse": {
            "type": "object",
            "properties": {
                "PythonScript": {
                    "$ref": "#/$defs/PythonScript"
                },
                "ScalaCode": {
                    "$ref": "#/$defs/ScalaCode"
                }
            }
        },
        "GetPlanRequest": {
            "type": "object",
            "properties": {
                "Mapping": {
                    "$ref": "#/$defs/MappingList"
                },
                "Source": {
                    "$ref": "#/$defs/CatalogEntry"
                },
                "Sinks": {
                    "$ref": "#/$defs/CatalogEntries"
                },
                "Location": {
                    "$ref": "#/$defs/Location"
                },
                "Language": {
                    "$ref": "#/$defs/Language"
                },
                "AdditionalPlanOptionsMap": {
                    "$ref": "#/$defs/AdditionalPlanOptionsMap"
                }
            }
        },
        "AdditionalPlanOptionsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "GetRegistryResponse": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "RegistryArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Status": {
                    "$ref": "#/$defs/RegistryStatus"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTimestamp"
                },
                "UpdatedTime": {
                    "$ref": "#/$defs/UpdatedTimestamp"
                }
            }
        },
        "CreatedTimestamp": {
            "type": "string"
        },
        "UpdatedTimestamp": {
            "type": "string"
        },
        "GetRegistryInput": {
            "type": "object",
            "properties": {
                "RegistryId": {
                    "$ref": "#/$defs/RegistryId"
                }
            }
        },
        "GetResourcePoliciesResponse": {
            "type": "object",
            "properties": {
                "GetResourcePoliciesResponseList": {
                    "$ref": "#/$defs/GetResourcePoliciesResponseList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetResourcePoliciesResponseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GluePolicy"
            }
        },
        "GluePolicy": {
            "type": "object",
            "properties": {
                "PolicyInJson": {
                    "$ref": "#/$defs/PolicyJsonString"
                },
                "PolicyHash": {
                    "$ref": "#/$defs/HashString"
                },
                "CreateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "PolicyJsonString": {
            "type": "string"
        },
        "GetResourcePoliciesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "GetResourcePolicyResponse": {
            "type": "object",
            "properties": {
                "PolicyInJson": {
                    "$ref": "#/$defs/PolicyJsonString"
                },
                "PolicyHash": {
                    "$ref": "#/$defs/HashString"
                },
                "CreateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "GetResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                }
            }
        },
        "GetSchemaResponse": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "RegistryArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "SchemaName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "SchemaArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "DataFormat": {
                    "$ref": "#/$defs/DataFormat"
                },
                "Compatibility": {
                    "$ref": "#/$defs/Compatibility"
                },
                "SchemaCheckpoint": {
                    "$ref": "#/$defs/SchemaCheckpointNumber"
                },
                "LatestSchemaVersion": {
                    "$ref": "#/$defs/VersionLongNumber"
                },
                "NextSchemaVersion": {
                    "$ref": "#/$defs/VersionLongNumber"
                },
                "SchemaStatus": {
                    "$ref": "#/$defs/SchemaStatus"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTimestamp"
                },
                "UpdatedTime": {
                    "$ref": "#/$defs/UpdatedTimestamp"
                }
            }
        },
        "GetSchemaInput": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                }
            }
        },
        "GetSchemaByDefinitionResponse": {
            "type": "object",
            "properties": {
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "SchemaArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "DataFormat": {
                    "$ref": "#/$defs/DataFormat"
                },
                "Status": {
                    "$ref": "#/$defs/SchemaVersionStatus"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTimestamp"
                }
            }
        },
        "GetSchemaByDefinitionInput": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                },
                "SchemaDefinition": {
                    "$ref": "#/$defs/SchemaDefinitionString"
                }
            }
        },
        "GetSchemaVersionResponse": {
            "type": "object",
            "properties": {
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "SchemaDefinition": {
                    "$ref": "#/$defs/SchemaDefinitionString"
                },
                "DataFormat": {
                    "$ref": "#/$defs/DataFormat"
                },
                "SchemaArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "VersionNumber": {
                    "$ref": "#/$defs/VersionLongNumber"
                },
                "Status": {
                    "$ref": "#/$defs/SchemaVersionStatus"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTimestamp"
                }
            }
        },
        "GetSchemaVersionInput": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                },
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "SchemaVersionNumber": {
                    "$ref": "#/$defs/SchemaVersionNumber"
                }
            }
        },
        "SchemaVersionNumber": {
            "type": "object",
            "properties": {
                "LatestVersion": {
                    "$ref": "#/$defs/LatestSchemaVersionBoolean"
                },
                "VersionNumber": {
                    "$ref": "#/$defs/VersionLongNumber"
                }
            }
        },
        "LatestSchemaVersionBoolean": {
            "type": "boolean"
        },
        "GetSchemaVersionsDiffResponse": {
            "type": "object",
            "properties": {
                "Diff": {
                    "$ref": "#/$defs/SchemaDefinitionDiff"
                }
            }
        },
        "SchemaDefinitionDiff": {
            "type": "string"
        },
        "GetSchemaVersionsDiffInput": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                },
                "FirstSchemaVersionNumber": {
                    "$ref": "#/$defs/SchemaVersionNumber"
                },
                "SecondSchemaVersionNumber": {
                    "$ref": "#/$defs/SchemaVersionNumber"
                },
                "SchemaDiffType": {
                    "$ref": "#/$defs/SchemaDiffType"
                }
            }
        },
        "SchemaDiffType": {
            "enum": [
                "SYNTAX_DIFF"
            ]
        },
        "GetSecurityConfigurationResponse": {
            "type": "object",
            "properties": {
                "SecurityConfiguration": {
                    "$ref": "#/$defs/SecurityConfiguration"
                }
            }
        },
        "SecurityConfiguration": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "CreatedTimeStamp": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "EncryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                }
            }
        },
        "GetSecurityConfigurationRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetSecurityConfigurationsResponse": {
            "type": "object",
            "properties": {
                "SecurityConfigurations": {
                    "$ref": "#/$defs/SecurityConfigurationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "SecurityConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityConfiguration"
            }
        },
        "GetSecurityConfigurationsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GetSessionResponse": {
            "type": "object",
            "properties": {
                "Session": {
                    "$ref": "#/$defs/Session"
                }
            }
        },
        "GetSessionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NameString"
                },
                "RequestOrigin": {
                    "$ref": "#/$defs/OrchestrationNameString"
                }
            }
        },
        "GetStatementResponse": {
            "type": "object",
            "properties": {
                "Statement": {
                    "$ref": "#/$defs/Statement"
                }
            }
        },
        "Statement": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "Code": {
                    "$ref": "#/$defs/GenericString"
                },
                "State": {
                    "$ref": "#/$defs/StatementState"
                },
                "Output": {
                    "$ref": "#/$defs/StatementOutput"
                },
                "Progress": {
                    "$ref": "#/$defs/DoubleValue"
                },
                "StartedOn": {
                    "$ref": "#/$defs/LongValue"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/LongValue"
                }
            }
        },
        "StatementState": {
            "enum": [
                "WAITING",
                "RUNNING",
                "AVAILABLE",
                "CANCELLING",
                "CANCELLED",
                "ERROR"
            ]
        },
        "StatementOutput": {
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/$defs/StatementOutputData"
                },
                "ExecutionCount": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "Status": {
                    "$ref": "#/$defs/StatementState"
                },
                "ErrorName": {
                    "$ref": "#/$defs/GenericString"
                },
                "ErrorValue": {
                    "$ref": "#/$defs/GenericString"
                },
                "Traceback": {
                    "$ref": "#/$defs/OrchestrationStringList"
                }
            }
        },
        "StatementOutputData": {
            "type": "object",
            "properties": {
                "TextPlain": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "LongValue": {
            "type": "integer",
            "format": "int64"
        },
        "GetStatementRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/NameString"
                },
                "Id": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "RequestOrigin": {
                    "$ref": "#/$defs/OrchestrationNameString"
                }
            }
        },
        "GetTableResponse": {
            "type": "object",
            "properties": {
                "Table": {
                    "$ref": "#/$defs/Table"
                }
            }
        },
        "Table": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Owner": {
                    "$ref": "#/$defs/NameString"
                },
                "CreateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastAccessTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastAnalyzedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Retention": {
                    "$ref": "#/$defs/NonNegativeInteger"
                },
                "StorageDescriptor": {
                    "$ref": "#/$defs/StorageDescriptor"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/ColumnList"
                },
                "ViewOriginalText": {
                    "$ref": "#/$defs/ViewTextString"
                },
                "ViewExpandedText": {
                    "$ref": "#/$defs/ViewTextString"
                },
                "TableType": {
                    "$ref": "#/$defs/TableTypeString"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/NameString"
                },
                "IsRegisteredWithLakeFormation": {
                    "$ref": "#/$defs/Boolean"
                },
                "TargetTable": {
                    "$ref": "#/$defs/TableIdentifier"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "VersionId": {
                    "$ref": "#/$defs/VersionString"
                },
                "FederatedTable": {
                    "$ref": "#/$defs/FederatedTable"
                },
                "ViewDefinition": {
                    "$ref": "#/$defs/ViewDefinition"
                },
                "IsMultiDialectView": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "Status": {
                    "$ref": "#/$defs/TableStatus"
                }
            }
        },
        "FederatedTable": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/FederationIdentifier"
                },
                "DatabaseIdentifier": {
                    "$ref": "#/$defs/FederationIdentifier"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "ViewDefinition": {
            "type": "object",
            "properties": {
                "IsProtected": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "Definer": {
                    "$ref": "#/$defs/ArnString"
                },
                "SubObjects": {
                    "$ref": "#/$defs/ViewSubObjectsList"
                },
                "Representations": {
                    "$ref": "#/$defs/ViewRepresentationList"
                }
            }
        },
        "ViewRepresentationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ViewRepresentation"
            }
        },
        "ViewRepresentation": {
            "type": "object",
            "properties": {
                "Dialect": {
                    "$ref": "#/$defs/ViewDialect"
                },
                "DialectVersion": {
                    "$ref": "#/$defs/ViewDialectVersionString"
                },
                "ViewOriginalText": {
                    "$ref": "#/$defs/ViewTextString"
                },
                "ViewExpandedText": {
                    "$ref": "#/$defs/ViewTextString"
                },
                "ValidationConnection": {
                    "$ref": "#/$defs/NameString"
                },
                "IsStale": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "TableStatus": {
            "type": "object",
            "properties": {
                "RequestedBy": {
                    "$ref": "#/$defs/NameString"
                },
                "UpdatedBy": {
                    "$ref": "#/$defs/NameString"
                },
                "RequestTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Action": {
                    "$ref": "#/$defs/ResourceAction"
                },
                "State": {
                    "$ref": "#/$defs/ResourceState"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorDetail"
                },
                "Details": {
                    "$ref": "#/$defs/StatusDetails"
                }
            }
        },
        "ResourceAction": {
            "enum": [
                "UPDATE",
                "CREATE"
            ]
        },
        "ResourceState": {
            "enum": [
                "QUEUED",
                "IN_PROGRESS",
                "SUCCESS",
                "STOPPED",
                "FAILED"
            ]
        },
        "StatusDetails": {
            "type": "object",
            "properties": {
                "RequestedChange": {
                    "$ref": "#/$defs/Table"
                },
                "ViewValidations": {
                    "$ref": "#/$defs/ViewValidationList"
                }
            }
        },
        "ViewValidationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ViewValidation"
            }
        },
        "ViewValidation": {
            "type": "object",
            "properties": {
                "Dialect": {
                    "$ref": "#/$defs/ViewDialect"
                },
                "DialectVersion": {
                    "$ref": "#/$defs/ViewDialectVersionString"
                },
                "ViewValidationText": {
                    "$ref": "#/$defs/ViewTextString"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "State": {
                    "$ref": "#/$defs/ResourceState"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorDetail"
                }
            }
        },
        "GetTableRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                },
                "QueryAsOfTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "IncludeStatusDetails": {
                    "$ref": "#/$defs/BooleanNullable"
                }
            }
        },
        "GetTableOptimizerResponse": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableOptimizer": {
                    "$ref": "#/$defs/TableOptimizer"
                }
            }
        },
        "GetTableOptimizerRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "Type": {
                    "$ref": "#/$defs/TableOptimizerType"
                }
            }
        },
        "GetTablesResponse": {
            "type": "object",
            "properties": {
                "TableList": {
                    "$ref": "#/$defs/TableList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "TableList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Table"
            }
        },
        "GetTablesRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "Expression": {
                    "$ref": "#/$defs/FilterString"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/CatalogGetterPageSize"
                },
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                },
                "QueryAsOfTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "IncludeStatusDetails": {
                    "$ref": "#/$defs/BooleanNullable"
                },
                "AttributesToGet": {
                    "$ref": "#/$defs/TableAttributesList"
                }
            }
        },
        "FilterString": {
            "type": "string"
        },
        "TableAttributesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TableAttributes"
            }
        },
        "TableAttributes": {
            "enum": [
                "NAME",
                "TABLE_TYPE"
            ]
        },
        "GetTableVersionResponse": {
            "type": "object",
            "properties": {
                "TableVersion": {
                    "$ref": "#/$defs/TableVersion"
                }
            }
        },
        "TableVersion": {
            "type": "object",
            "properties": {
                "Table": {
                    "$ref": "#/$defs/Table"
                },
                "VersionId": {
                    "$ref": "#/$defs/VersionString"
                }
            }
        },
        "GetTableVersionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "VersionId": {
                    "$ref": "#/$defs/VersionString"
                }
            }
        },
        "GetTableVersionsResponse": {
            "type": "object",
            "properties": {
                "TableVersions": {
                    "$ref": "#/$defs/GetTableVersionsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetTableVersionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TableVersion"
            }
        },
        "GetTableVersionsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/CatalogGetterPageSize"
                }
            }
        },
        "GetTagsResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "GetTagsRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                }
            }
        },
        "GetTriggerResponse": {
            "type": "object",
            "properties": {
                "Trigger": {
                    "$ref": "#/$defs/Trigger"
                }
            }
        },
        "GetTriggerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetTriggersResponse": {
            "type": "object",
            "properties": {
                "Triggers": {
                    "$ref": "#/$defs/TriggerList"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GetTriggersRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                },
                "DependentJobName": {
                    "$ref": "#/$defs/NameString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/OrchestrationPageSize200"
                }
            }
        },
        "GetUnfilteredPartitionMetadataResponse": {
            "type": "object",
            "properties": {
                "Partition": {
                    "$ref": "#/$defs/Partition"
                },
                "AuthorizedColumns": {
                    "$ref": "#/$defs/NameStringList"
                },
                "IsRegisteredWithLakeFormation": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetUnfilteredPartitionMetadataRequest": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/ValueString"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "PartitionValues": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "AuditContext": {
                    "$ref": "#/$defs/AuditContext"
                },
                "SupportedPermissionTypes": {
                    "$ref": "#/$defs/PermissionTypeList"
                },
                "QuerySessionContext": {
                    "$ref": "#/$defs/QuerySessionContext"
                }
            }
        },
        "AuditContext": {
            "type": "object",
            "properties": {
                "AdditionalAuditContext": {
                    "$ref": "#/$defs/AuditContextString"
                },
                "RequestedColumns": {
                    "$ref": "#/$defs/AuditColumnNamesList"
                },
                "AllColumnsRequested": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "AuditContextString": {
            "type": "string"
        },
        "AuditColumnNamesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnNameString"
            }
        },
        "PermissionTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PermissionType"
            }
        },
        "PermissionType": {
            "enum": [
                "COLUMN_PERMISSION",
                "CELL_FILTER_PERMISSION",
                "NESTED_PERMISSION",
                "NESTED_CELL_PERMISSION"
            ]
        },
        "QuerySessionContext": {
            "type": "object",
            "properties": {
                "QueryId": {
                    "$ref": "#/$defs/HashString"
                },
                "QueryStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ClusterId": {
                    "$ref": "#/$defs/NullableString"
                },
                "QueryAuthorizationId": {
                    "$ref": "#/$defs/HashString"
                },
                "AdditionalContext": {
                    "$ref": "#/$defs/AdditionalContextMap"
                }
            }
        },
        "NullableString": {
            "type": "string"
        },
        "AdditionalContextMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ContextValue"
            }
        },
        "ContextValue": {
            "type": "string"
        },
        "GetUnfilteredPartitionsMetadataResponse": {
            "type": "object",
            "properties": {
                "UnfilteredPartitions": {
                    "$ref": "#/$defs/UnfilteredPartitionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "UnfilteredPartitionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnfilteredPartition"
            }
        },
        "UnfilteredPartition": {
            "type": "object",
            "properties": {
                "Partition": {
                    "$ref": "#/$defs/Partition"
                },
                "AuthorizedColumns": {
                    "$ref": "#/$defs/NameStringList"
                },
                "IsRegisteredWithLakeFormation": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetUnfilteredPartitionsMetadataRequest": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/ValueString"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "Expression": {
                    "$ref": "#/$defs/PredicateString"
                },
                "AuditContext": {
                    "$ref": "#/$defs/AuditContext"
                },
                "SupportedPermissionTypes": {
                    "$ref": "#/$defs/PermissionTypeList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "Segment": {
                    "$ref": "#/$defs/Segment"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "QuerySessionContext": {
                    "$ref": "#/$defs/QuerySessionContext"
                }
            }
        },
        "GetUnfilteredTableMetadataResponse": {
            "type": "object",
            "properties": {
                "Table": {
                    "$ref": "#/$defs/Table"
                },
                "AuthorizedColumns": {
                    "$ref": "#/$defs/NameStringList"
                },
                "IsRegisteredWithLakeFormation": {
                    "$ref": "#/$defs/Boolean"
                },
                "CellFilters": {
                    "$ref": "#/$defs/ColumnRowFilterList"
                },
                "QueryAuthorizationId": {
                    "$ref": "#/$defs/HashString"
                },
                "IsMultiDialectView": {
                    "$ref": "#/$defs/Boolean"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ArnString"
                },
                "IsProtected": {
                    "$ref": "#/$defs/Boolean"
                },
                "Permissions": {
                    "$ref": "#/$defs/PermissionList"
                },
                "RowFilter": {
                    "$ref": "#/$defs/PredicateString"
                }
            }
        },
        "ColumnRowFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnRowFilter"
            }
        },
        "ColumnRowFilter": {
            "type": "object",
            "properties": {
                "ColumnName": {
                    "$ref": "#/$defs/NameString"
                },
                "RowFilterExpression": {
                    "$ref": "#/$defs/PredicateString"
                }
            }
        },
        "GetUnfilteredTableMetadataRequest": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/ValueString"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "AuditContext": {
                    "$ref": "#/$defs/AuditContext"
                },
                "SupportedPermissionTypes": {
                    "$ref": "#/$defs/PermissionTypeList"
                },
                "ParentResourceArn": {
                    "$ref": "#/$defs/ArnString"
                },
                "RootResourceArn": {
                    "$ref": "#/$defs/ArnString"
                },
                "SupportedDialect": {
                    "$ref": "#/$defs/SupportedDialect"
                },
                "Permissions": {
                    "$ref": "#/$defs/PermissionList"
                },
                "QuerySessionContext": {
                    "$ref": "#/$defs/QuerySessionContext"
                }
            }
        },
        "SupportedDialect": {
            "type": "object",
            "properties": {
                "Dialect": {
                    "$ref": "#/$defs/ViewDialect"
                },
                "DialectVersion": {
                    "$ref": "#/$defs/ViewDialectVersionString"
                }
            }
        },
        "GetUsageProfileResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Configuration": {
                    "$ref": "#/$defs/ProfileConfiguration"
                },
                "CreatedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/TimestampValue"
                }
            }
        },
        "GetUsageProfileRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetUserDefinedFunctionResponse": {
            "type": "object",
            "properties": {
                "UserDefinedFunction": {
                    "$ref": "#/$defs/UserDefinedFunction"
                }
            }
        },
        "UserDefinedFunction": {
            "type": "object",
            "properties": {
                "FunctionName": {
                    "$ref": "#/$defs/NameString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "ClassName": {
                    "$ref": "#/$defs/NameString"
                },
                "OwnerName": {
                    "$ref": "#/$defs/NameString"
                },
                "OwnerType": {
                    "$ref": "#/$defs/PrincipalType"
                },
                "CreateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ResourceUris": {
                    "$ref": "#/$defs/ResourceUriList"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                }
            }
        },
        "GetUserDefinedFunctionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "FunctionName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetUserDefinedFunctionsResponse": {
            "type": "object",
            "properties": {
                "UserDefinedFunctions": {
                    "$ref": "#/$defs/UserDefinedFunctionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "UserDefinedFunctionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserDefinedFunction"
            }
        },
        "GetUserDefinedFunctionsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "Pattern": {
                    "$ref": "#/$defs/NameString"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/CatalogGetterPageSize"
                }
            }
        },
        "GetWorkflowResponse": {
            "type": "object",
            "properties": {
                "Workflow": {
                    "$ref": "#/$defs/Workflow"
                }
            }
        },
        "GetWorkflowRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "IncludeGraph": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "GetWorkflowRunResponse": {
            "type": "object",
            "properties": {
                "Run": {
                    "$ref": "#/$defs/WorkflowRun"
                }
            }
        },
        "GetWorkflowRunRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "RunId": {
                    "$ref": "#/$defs/IdString"
                },
                "IncludeGraph": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "GetWorkflowRunPropertiesResponse": {
            "type": "object",
            "properties": {
                "RunProperties": {
                    "$ref": "#/$defs/WorkflowRunProperties"
                }
            }
        },
        "GetWorkflowRunPropertiesRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "RunId": {
                    "$ref": "#/$defs/IdString"
                }
            }
        },
        "GetWorkflowRunsResponse": {
            "type": "object",
            "properties": {
                "Runs": {
                    "$ref": "#/$defs/WorkflowRuns"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "WorkflowRuns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WorkflowRun"
            }
        },
        "GetWorkflowRunsRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "IncludeGraph": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "ImportCatalogToGlueResponse": {
            "type": "object",
            "properties": {}
        },
        "ImportCatalogToGlueRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                }
            }
        },
        "ListBlueprintsResponse": {
            "type": "object",
            "properties": {
                "Blueprints": {
                    "$ref": "#/$defs/BlueprintNames"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "ListBlueprintsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/OrchestrationPageSize25"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "OrchestrationPageSize25": {
            "type": "integer",
            "format": "int32"
        },
        "ListColumnStatisticsTaskRunsResponse": {
            "type": "object",
            "properties": {
                "ColumnStatisticsTaskRunIds": {
                    "$ref": "#/$defs/ColumnStatisticsTaskRunIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ColumnStatisticsTaskRunIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HashString"
            }
        },
        "ListColumnStatisticsTaskRunsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListCrawlersResponse": {
            "type": "object",
            "properties": {
                "CrawlerNames": {
                    "$ref": "#/$defs/CrawlerNameList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListCrawlersRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "ListCrawlsResponse": {
            "type": "object",
            "properties": {
                "Crawls": {
                    "$ref": "#/$defs/CrawlerHistoryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "CrawlerHistoryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CrawlerHistory"
            }
        },
        "CrawlerHistory": {
            "type": "object",
            "properties": {
                "CrawlId": {
                    "$ref": "#/$defs/CrawlId"
                },
                "State": {
                    "$ref": "#/$defs/CrawlerHistoryState"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Summary": {
                    "$ref": "#/$defs/NameString"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "LogGroup": {
                    "$ref": "#/$defs/LogGroup"
                },
                "LogStream": {
                    "$ref": "#/$defs/LogStream"
                },
                "MessagePrefix": {
                    "$ref": "#/$defs/MessagePrefix"
                },
                "DPUHour": {
                    "$ref": "#/$defs/NonNegativeDouble"
                }
            }
        },
        "CrawlId": {
            "type": "string"
        },
        "CrawlerHistoryState": {
            "enum": [
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "STOPPED"
            ]
        },
        "ListCrawlsRequest": {
            "type": "object",
            "properties": {
                "CrawlerName": {
                    "$ref": "#/$defs/NameString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "Filters": {
                    "$ref": "#/$defs/CrawlsFilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "CrawlsFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CrawlsFilter"
            }
        },
        "CrawlsFilter": {
            "type": "object",
            "properties": {
                "FieldName": {
                    "$ref": "#/$defs/FieldName"
                },
                "FilterOperator": {
                    "$ref": "#/$defs/FilterOperator"
                },
                "FieldValue": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "FieldName": {
            "enum": [
                "CRAWL_ID",
                "STATE",
                "START_TIME",
                "END_TIME",
                "DPU_HOUR"
            ]
        },
        "FilterOperator": {
            "enum": [
                "GT",
                "GE",
                "LT",
                "LE",
                "EQ",
                "NE"
            ]
        },
        "ListCustomEntityTypesResponse": {
            "type": "object",
            "properties": {
                "CustomEntityTypes": {
                    "$ref": "#/$defs/CustomEntityTypes"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ListCustomEntityTypesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "ListDataQualityResultsResponse": {
            "type": "object",
            "properties": {
                "Results": {
                    "$ref": "#/$defs/DataQualityResultDescriptionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "DataQualityResultDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataQualityResultDescription"
            }
        },
        "DataQualityResultDescription": {
            "type": "object",
            "properties": {
                "ResultId": {
                    "$ref": "#/$defs/HashString"
                },
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "JobRunId": {
                    "$ref": "#/$defs/HashString"
                },
                "StartedOn": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListDataQualityResultsRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/DataQualityResultFilterCriteria"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "DataQualityResultFilterCriteria": {
            "type": "object",
            "properties": {
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "JobRunId": {
                    "$ref": "#/$defs/HashString"
                },
                "StartedAfter": {
                    "$ref": "#/$defs/Timestamp"
                },
                "StartedBefore": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListDataQualityRuleRecommendationRunsResponse": {
            "type": "object",
            "properties": {
                "Runs": {
                    "$ref": "#/$defs/DataQualityRuleRecommendationRunList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "DataQualityRuleRecommendationRunList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataQualityRuleRecommendationRunDescription"
            }
        },
        "DataQualityRuleRecommendationRunDescription": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/HashString"
                },
                "Status": {
                    "$ref": "#/$defs/TaskStatusType"
                },
                "StartedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                }
            }
        },
        "ListDataQualityRuleRecommendationRunsRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/DataQualityRuleRecommendationRunFilter"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "DataQualityRuleRecommendationRunFilter": {
            "type": "object",
            "properties": {
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "StartedBefore": {
                    "$ref": "#/$defs/Timestamp"
                },
                "StartedAfter": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListDataQualityRulesetEvaluationRunsResponse": {
            "type": "object",
            "properties": {
                "Runs": {
                    "$ref": "#/$defs/DataQualityRulesetEvaluationRunList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "DataQualityRulesetEvaluationRunList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataQualityRulesetEvaluationRunDescription"
            }
        },
        "DataQualityRulesetEvaluationRunDescription": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/HashString"
                },
                "Status": {
                    "$ref": "#/$defs/TaskStatusType"
                },
                "StartedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                }
            }
        },
        "ListDataQualityRulesetEvaluationRunsRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/DataQualityRulesetEvaluationRunFilter"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "DataQualityRulesetEvaluationRunFilter": {
            "type": "object",
            "properties": {
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "StartedBefore": {
                    "$ref": "#/$defs/Timestamp"
                },
                "StartedAfter": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListDataQualityRulesetsResponse": {
            "type": "object",
            "properties": {
                "Rulesets": {
                    "$ref": "#/$defs/DataQualityRulesetList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "DataQualityRulesetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataQualityRulesetListDetails"
            }
        },
        "DataQualityRulesetListDetails": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "CreatedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "TargetTable": {
                    "$ref": "#/$defs/DataQualityTargetTable"
                },
                "RecommendationRunId": {
                    "$ref": "#/$defs/HashString"
                },
                "RuleCount": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "ListDataQualityRulesetsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "Filter": {
                    "$ref": "#/$defs/DataQualityRulesetFilterCriteria"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "DataQualityRulesetFilterCriteria": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "CreatedBefore": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedAfter": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedBefore": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedAfter": {
                    "$ref": "#/$defs/Timestamp"
                },
                "TargetTable": {
                    "$ref": "#/$defs/DataQualityTargetTable"
                }
            }
        },
        "ListDataQualityStatisticAnnotationsResponse": {
            "type": "object",
            "properties": {
                "Annotations": {
                    "$ref": "#/$defs/AnnotationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "AnnotationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StatisticAnnotation"
            }
        },
        "StatisticAnnotation": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "$ref": "#/$defs/HashString"
                },
                "StatisticId": {
                    "$ref": "#/$defs/HashString"
                },
                "StatisticRecordedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "InclusionAnnotation": {
                    "$ref": "#/$defs/TimestampedInclusionAnnotation"
                }
            }
        },
        "TimestampedInclusionAnnotation": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/InclusionAnnotationValue"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListDataQualityStatisticAnnotationsRequest": {
            "type": "object",
            "properties": {
                "StatisticId": {
                    "$ref": "#/$defs/HashString"
                },
                "ProfileId": {
                    "$ref": "#/$defs/HashString"
                },
                "TimestampFilter": {
                    "$ref": "#/$defs/TimestampFilter"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "TimestampFilter": {
            "type": "object",
            "properties": {
                "RecordedBefore": {
                    "$ref": "#/$defs/Timestamp"
                },
                "RecordedAfter": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListDataQualityStatisticsResponse": {
            "type": "object",
            "properties": {
                "Statistics": {
                    "$ref": "#/$defs/StatisticSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "StatisticSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StatisticSummary"
            }
        },
        "StatisticSummary": {
            "type": "object",
            "properties": {
                "StatisticId": {
                    "$ref": "#/$defs/HashString"
                },
                "ProfileId": {
                    "$ref": "#/$defs/HashString"
                },
                "RunIdentifier": {
                    "$ref": "#/$defs/RunIdentifier"
                },
                "StatisticName": {
                    "$ref": "#/$defs/StatisticNameString"
                },
                "DoubleValue": {
                    "$ref": "#/$defs/Double"
                },
                "EvaluationLevel": {
                    "$ref": "#/$defs/StatisticEvaluationLevel"
                },
                "ColumnsReferenced": {
                    "$ref": "#/$defs/ColumnNameList"
                },
                "ReferencedDatasets": {
                    "$ref": "#/$defs/ReferenceDatasetsList"
                },
                "StatisticProperties": {
                    "$ref": "#/$defs/StatisticPropertiesMap"
                },
                "RecordedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "InclusionAnnotation": {
                    "$ref": "#/$defs/TimestampedInclusionAnnotation"
                }
            }
        },
        "RunIdentifier": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/HashString"
                },
                "JobRunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "StatisticNameString": {
            "type": "string"
        },
        "StatisticEvaluationLevel": {
            "enum": [
                "DATASET",
                "COLUMN",
                "MULTICOLUMN"
            ]
        },
        "ReferenceDatasetsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "StatisticPropertiesMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DescriptionString"
            }
        },
        "ListDataQualityStatisticsRequest": {
            "type": "object",
            "properties": {
                "StatisticId": {
                    "$ref": "#/$defs/HashString"
                },
                "ProfileId": {
                    "$ref": "#/$defs/HashString"
                },
                "TimestampFilter": {
                    "$ref": "#/$defs/TimestampFilter"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ListDevEndpointsResponse": {
            "type": "object",
            "properties": {
                "DevEndpointNames": {
                    "$ref": "#/$defs/DevEndpointNameList"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "DevEndpointNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "ListDevEndpointsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "ListJobsResponse": {
            "type": "object",
            "properties": {
                "JobNames": {
                    "$ref": "#/$defs/JobNameList"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "ListJobsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "ListMLTransformsResponse": {
            "type": "object",
            "properties": {
                "TransformIds": {
                    "$ref": "#/$defs/TransformIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "TransformIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HashString"
            }
        },
        "ListMLTransformsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "Filter": {
                    "$ref": "#/$defs/TransformFilterCriteria"
                },
                "Sort": {
                    "$ref": "#/$defs/TransformSortCriteria"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "ListRegistriesResponse": {
            "type": "object",
            "properties": {
                "Registries": {
                    "$ref": "#/$defs/RegistryListDefinition"
                },
                "NextToken": {
                    "$ref": "#/$defs/SchemaRegistryTokenString"
                }
            }
        },
        "RegistryListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RegistryListItem"
            }
        },
        "RegistryListItem": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "RegistryArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Status": {
                    "$ref": "#/$defs/RegistryStatus"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTimestamp"
                },
                "UpdatedTime": {
                    "$ref": "#/$defs/UpdatedTimestamp"
                }
            }
        },
        "SchemaRegistryTokenString": {
            "type": "string"
        },
        "ListRegistriesInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsNumber"
                },
                "NextToken": {
                    "$ref": "#/$defs/SchemaRegistryTokenString"
                }
            }
        },
        "MaxResultsNumber": {
            "type": "integer",
            "format": "int32"
        },
        "ListSchemasResponse": {
            "type": "object",
            "properties": {
                "Schemas": {
                    "$ref": "#/$defs/SchemaListDefinition"
                },
                "NextToken": {
                    "$ref": "#/$defs/SchemaRegistryTokenString"
                }
            }
        },
        "SchemaListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SchemaListItem"
            }
        },
        "SchemaListItem": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "SchemaName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "SchemaArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "SchemaStatus": {
                    "$ref": "#/$defs/SchemaStatus"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTimestamp"
                },
                "UpdatedTime": {
                    "$ref": "#/$defs/UpdatedTimestamp"
                }
            }
        },
        "ListSchemasInput": {
            "type": "object",
            "properties": {
                "RegistryId": {
                    "$ref": "#/$defs/RegistryId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsNumber"
                },
                "NextToken": {
                    "$ref": "#/$defs/SchemaRegistryTokenString"
                }
            }
        },
        "ListSchemaVersionsResponse": {
            "type": "object",
            "properties": {
                "Schemas": {
                    "$ref": "#/$defs/SchemaVersionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/SchemaRegistryTokenString"
                }
            }
        },
        "SchemaVersionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SchemaVersionListItem"
            }
        },
        "SchemaVersionListItem": {
            "type": "object",
            "properties": {
                "SchemaArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "VersionNumber": {
                    "$ref": "#/$defs/VersionLongNumber"
                },
                "Status": {
                    "$ref": "#/$defs/SchemaVersionStatus"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTimestamp"
                }
            }
        },
        "ListSchemaVersionsInput": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsNumber"
                },
                "NextToken": {
                    "$ref": "#/$defs/SchemaRegistryTokenString"
                }
            }
        },
        "ListSessionsResponse": {
            "type": "object",
            "properties": {
                "Ids": {
                    "$ref": "#/$defs/SessionIdList"
                },
                "Sessions": {
                    "$ref": "#/$defs/SessionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/OrchestrationToken"
                }
            }
        },
        "SessionIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "SessionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Session"
            }
        },
        "OrchestrationToken": {
            "type": "string"
        },
        "ListSessionsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/OrchestrationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "RequestOrigin": {
                    "$ref": "#/$defs/OrchestrationNameString"
                }
            }
        },
        "ListStatementsResponse": {
            "type": "object",
            "properties": {
                "Statements": {
                    "$ref": "#/$defs/StatementList"
                },
                "NextToken": {
                    "$ref": "#/$defs/OrchestrationToken"
                }
            }
        },
        "StatementList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Statement"
            }
        },
        "ListStatementsRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/NameString"
                },
                "RequestOrigin": {
                    "$ref": "#/$defs/OrchestrationNameString"
                },
                "NextToken": {
                    "$ref": "#/$defs/OrchestrationToken"
                }
            }
        },
        "ListTableOptimizerRunsResponse": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "NextToken": {
                    "$ref": "#/$defs/ListTableOptimizerRunsToken"
                },
                "TableOptimizerRuns": {
                    "$ref": "#/$defs/TableOptimizerRuns"
                }
            }
        },
        "ListTableOptimizerRunsToken": {
            "type": "string"
        },
        "TableOptimizerRuns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TableOptimizerRun"
            }
        },
        "ListTableOptimizerRunsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "Type": {
                    "$ref": "#/$defs/TableOptimizerType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxListTableOptimizerRunsTokenResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/ListTableOptimizerRunsToken"
                }
            }
        },
        "MaxListTableOptimizerRunsTokenResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListTriggersResponse": {
            "type": "object",
            "properties": {
                "TriggerNames": {
                    "$ref": "#/$defs/TriggerNameList"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "ListTriggersRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                },
                "DependentJobName": {
                    "$ref": "#/$defs/NameString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/OrchestrationPageSize200"
                },
                "Tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "ListUsageProfilesResponse": {
            "type": "object",
            "properties": {
                "Profiles": {
                    "$ref": "#/$defs/UsageProfileDefinitionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/OrchestrationToken"
                }
            }
        },
        "UsageProfileDefinitionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageProfileDefinition"
            }
        },
        "UsageProfileDefinition": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "CreatedOn": {
                    "$ref": "#/$defs/TimestampValue"
                },
                "LastModifiedOn": {
                    "$ref": "#/$defs/TimestampValue"
                }
            }
        },
        "ListUsageProfilesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/OrchestrationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/OrchestrationPageSize200"
                }
            }
        },
        "ListWorkflowsResponse": {
            "type": "object",
            "properties": {
                "Workflows": {
                    "$ref": "#/$defs/WorkflowNames"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "ListWorkflowsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/OrchestrationPageSize25"
                }
            }
        },
        "PutDataCatalogEncryptionSettingsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutDataCatalogEncryptionSettingsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DataCatalogEncryptionSettings": {
                    "$ref": "#/$defs/DataCatalogEncryptionSettings"
                }
            }
        },
        "PutDataQualityProfileAnnotationResponse": {
            "type": "object",
            "properties": {}
        },
        "PutDataQualityProfileAnnotationRequest": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "$ref": "#/$defs/HashString"
                },
                "InclusionAnnotation": {
                    "$ref": "#/$defs/InclusionAnnotationValue"
                }
            }
        },
        "PutResourcePolicyResponse": {
            "type": "object",
            "properties": {
                "PolicyHash": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "PutResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "PolicyInJson": {
                    "$ref": "#/$defs/PolicyJsonString"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "PolicyHashCondition": {
                    "$ref": "#/$defs/HashString"
                },
                "PolicyExistsCondition": {
                    "$ref": "#/$defs/ExistCondition"
                },
                "EnableHybrid": {
                    "$ref": "#/$defs/EnableHybridValues"
                }
            }
        },
        "ExistCondition": {
            "enum": [
                "MUST_EXIST",
                "NOT_EXIST",
                "NONE"
            ]
        },
        "EnableHybridValues": {
            "enum": [
                "TRUE",
                "FALSE"
            ]
        },
        "PutSchemaVersionMetadataResponse": {
            "type": "object",
            "properties": {
                "SchemaArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "SchemaName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "LatestVersion": {
                    "$ref": "#/$defs/LatestSchemaVersionBoolean"
                },
                "VersionNumber": {
                    "$ref": "#/$defs/VersionLongNumber"
                },
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "MetadataKey": {
                    "$ref": "#/$defs/MetadataKeyString"
                },
                "MetadataValue": {
                    "$ref": "#/$defs/MetadataValueString"
                }
            }
        },
        "MetadataKeyString": {
            "type": "string"
        },
        "MetadataValueString": {
            "type": "string"
        },
        "PutSchemaVersionMetadataInput": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                },
                "SchemaVersionNumber": {
                    "$ref": "#/$defs/SchemaVersionNumber"
                },
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "MetadataKeyValue": {
                    "$ref": "#/$defs/MetadataKeyValuePair"
                }
            }
        },
        "MetadataKeyValuePair": {
            "type": "object",
            "properties": {
                "MetadataKey": {
                    "$ref": "#/$defs/MetadataKeyString"
                },
                "MetadataValue": {
                    "$ref": "#/$defs/MetadataValueString"
                }
            }
        },
        "PutWorkflowRunPropertiesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutWorkflowRunPropertiesRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "RunId": {
                    "$ref": "#/$defs/IdString"
                },
                "RunProperties": {
                    "$ref": "#/$defs/WorkflowRunProperties"
                }
            }
        },
        "QuerySchemaVersionMetadataResponse": {
            "type": "object",
            "properties": {
                "MetadataInfoMap": {
                    "$ref": "#/$defs/MetadataInfoMap"
                },
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "NextToken": {
                    "$ref": "#/$defs/SchemaRegistryTokenString"
                }
            }
        },
        "MetadataInfoMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MetadataInfo"
            }
        },
        "MetadataInfo": {
            "type": "object",
            "properties": {
                "MetadataValue": {
                    "$ref": "#/$defs/MetadataValueString"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTimestamp"
                },
                "OtherMetadataValueList": {
                    "$ref": "#/$defs/OtherMetadataValueList"
                }
            }
        },
        "OtherMetadataValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OtherMetadataValueListItem"
            }
        },
        "OtherMetadataValueListItem": {
            "type": "object",
            "properties": {
                "MetadataValue": {
                    "$ref": "#/$defs/MetadataValueString"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTimestamp"
                }
            }
        },
        "QuerySchemaVersionMetadataInput": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                },
                "SchemaVersionNumber": {
                    "$ref": "#/$defs/SchemaVersionNumber"
                },
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "MetadataList": {
                    "$ref": "#/$defs/MetadataList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/QuerySchemaVersionMetadataMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/SchemaRegistryTokenString"
                }
            }
        },
        "MetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetadataKeyValuePair"
            }
        },
        "QuerySchemaVersionMetadataMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "RegisterSchemaVersionResponse": {
            "type": "object",
            "properties": {
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "VersionNumber": {
                    "$ref": "#/$defs/VersionLongNumber"
                },
                "Status": {
                    "$ref": "#/$defs/SchemaVersionStatus"
                }
            }
        },
        "RegisterSchemaVersionInput": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                },
                "SchemaDefinition": {
                    "$ref": "#/$defs/SchemaDefinitionString"
                }
            }
        },
        "RemoveSchemaVersionMetadataResponse": {
            "type": "object",
            "properties": {
                "SchemaArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "SchemaName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "LatestVersion": {
                    "$ref": "#/$defs/LatestSchemaVersionBoolean"
                },
                "VersionNumber": {
                    "$ref": "#/$defs/VersionLongNumber"
                },
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "MetadataKey": {
                    "$ref": "#/$defs/MetadataKeyString"
                },
                "MetadataValue": {
                    "$ref": "#/$defs/MetadataValueString"
                }
            }
        },
        "RemoveSchemaVersionMetadataInput": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                },
                "SchemaVersionNumber": {
                    "$ref": "#/$defs/SchemaVersionNumber"
                },
                "SchemaVersionId": {
                    "$ref": "#/$defs/SchemaVersionIdString"
                },
                "MetadataKeyValue": {
                    "$ref": "#/$defs/MetadataKeyValuePair"
                }
            }
        },
        "ResetJobBookmarkResponse": {
            "type": "object",
            "properties": {
                "JobBookmarkEntry": {
                    "$ref": "#/$defs/JobBookmarkEntry"
                }
            }
        },
        "ResetJobBookmarkRequest": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "RunId": {
                    "$ref": "#/$defs/RunId"
                }
            }
        },
        "ResumeWorkflowRunResponse": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/IdString"
                },
                "NodeIds": {
                    "$ref": "#/$defs/NodeIdList"
                }
            }
        },
        "NodeIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "ResumeWorkflowRunRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "RunId": {
                    "$ref": "#/$defs/IdString"
                },
                "NodeIds": {
                    "$ref": "#/$defs/NodeIdList"
                }
            }
        },
        "RunStatementResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/IntegerValue"
                }
            }
        },
        "RunStatementRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/NameString"
                },
                "Code": {
                    "$ref": "#/$defs/OrchestrationStatementCodeString"
                },
                "RequestOrigin": {
                    "$ref": "#/$defs/OrchestrationNameString"
                }
            }
        },
        "OrchestrationStatementCodeString": {
            "type": "string"
        },
        "SearchTablesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "TableList": {
                    "$ref": "#/$defs/TableList"
                }
            }
        },
        "SearchTablesRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "Filters": {
                    "$ref": "#/$defs/SearchPropertyPredicates"
                },
                "SearchText": {
                    "$ref": "#/$defs/ValueString"
                },
                "SortCriteria": {
                    "$ref": "#/$defs/SortCriteria"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "ResourceShareType": {
                    "$ref": "#/$defs/ResourceShareType"
                },
                "IncludeStatusDetails": {
                    "$ref": "#/$defs/BooleanNullable"
                }
            }
        },
        "SearchPropertyPredicates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PropertyPredicate"
            }
        },
        "PropertyPredicate": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/ValueString"
                },
                "Value": {
                    "$ref": "#/$defs/ValueString"
                },
                "Comparator": {
                    "$ref": "#/$defs/Comparator"
                }
            }
        },
        "Comparator": {
            "enum": [
                "EQUALS",
                "GREATER_THAN",
                "LESS_THAN",
                "GREATER_THAN_EQUALS",
                "LESS_THAN_EQUALS"
            ]
        },
        "SortCriteria": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SortCriterion"
            }
        },
        "SortCriterion": {
            "type": "object",
            "properties": {
                "FieldName": {
                    "$ref": "#/$defs/ValueString"
                },
                "Sort": {
                    "$ref": "#/$defs/Sort"
                }
            }
        },
        "Sort": {
            "enum": [
                "ASCENDING",
                "DESCENDING"
            ]
        },
        "StartBlueprintRunResponse": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/IdString"
                }
            }
        },
        "StartBlueprintRunRequest": {
            "type": "object",
            "properties": {
                "BlueprintName": {
                    "$ref": "#/$defs/OrchestrationNameString"
                },
                "Parameters": {
                    "$ref": "#/$defs/BlueprintParameters"
                },
                "RoleArn": {
                    "$ref": "#/$defs/OrchestrationIAMRoleArn"
                }
            }
        },
        "StartColumnStatisticsTaskRunResponse": {
            "type": "object",
            "properties": {
                "ColumnStatisticsTaskRunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "StartColumnStatisticsTaskRunRequest": {
            "type": "object",
            "properties": {
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "ColumnNameList": {
                    "$ref": "#/$defs/ColumnNameList"
                },
                "Role": {
                    "$ref": "#/$defs/NameString"
                },
                "SampleSize": {
                    "$ref": "#/$defs/SampleSizePercentage"
                },
                "CatalogID": {
                    "$ref": "#/$defs/NameString"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "StartCrawlerResponse": {
            "type": "object",
            "properties": {}
        },
        "StartCrawlerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "StartCrawlerScheduleResponse": {
            "type": "object",
            "properties": {}
        },
        "StartCrawlerScheduleRequest": {
            "type": "object",
            "properties": {
                "CrawlerName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "StartDataQualityRuleRecommendationRunResponse": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "StartDataQualityRuleRecommendationRunRequest": {
            "type": "object",
            "properties": {
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "Role": {
                    "$ref": "#/$defs/RoleString"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "CreatedRulesetName": {
                    "$ref": "#/$defs/NameString"
                },
                "DataQualitySecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "ClientToken": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "StartDataQualityRulesetEvaluationRunResponse": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "StartDataQualityRulesetEvaluationRunRequest": {
            "type": "object",
            "properties": {
                "DataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "Role": {
                    "$ref": "#/$defs/RoleString"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "ClientToken": {
                    "$ref": "#/$defs/HashString"
                },
                "AdditionalRunOptions": {
                    "$ref": "#/$defs/DataQualityEvaluationRunAdditionalRunOptions"
                },
                "RulesetNames": {
                    "$ref": "#/$defs/RulesetNames"
                },
                "AdditionalDataSources": {
                    "$ref": "#/$defs/DataSourceMap"
                }
            }
        },
        "StartExportLabelsTaskRunResponse": {
            "type": "object",
            "properties": {
                "TaskRunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "StartExportLabelsTaskRunRequest": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                },
                "OutputS3Path": {
                    "$ref": "#/$defs/UriString"
                }
            }
        },
        "StartImportLabelsTaskRunResponse": {
            "type": "object",
            "properties": {
                "TaskRunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "StartImportLabelsTaskRunRequest": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                },
                "InputS3Path": {
                    "$ref": "#/$defs/UriString"
                },
                "ReplaceAllLabels": {
                    "$ref": "#/$defs/ReplaceBoolean"
                }
            }
        },
        "StartJobRunResponse": {
            "type": "object",
            "properties": {
                "JobRunId": {
                    "$ref": "#/$defs/IdString"
                }
            }
        },
        "StartJobRunRequest": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "JobRunQueuingEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "JobRunId": {
                    "$ref": "#/$defs/IdString"
                },
                "Arguments": {
                    "$ref": "#/$defs/GenericMap"
                },
                "AllocatedCapacity": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "NotificationProperty": {
                    "$ref": "#/$defs/NotificationProperty"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "ExecutionClass": {
                    "$ref": "#/$defs/ExecutionClass"
                }
            }
        },
        "StartMLEvaluationTaskRunResponse": {
            "type": "object",
            "properties": {
                "TaskRunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "StartMLEvaluationTaskRunRequest": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "StartMLLabelingSetGenerationTaskRunResponse": {
            "type": "object",
            "properties": {
                "TaskRunId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "StartMLLabelingSetGenerationTaskRunRequest": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                },
                "OutputS3Path": {
                    "$ref": "#/$defs/UriString"
                }
            }
        },
        "StartTriggerResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "StartTriggerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "StartWorkflowRunResponse": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/IdString"
                }
            }
        },
        "StartWorkflowRunRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "RunProperties": {
                    "$ref": "#/$defs/WorkflowRunProperties"
                }
            }
        },
        "StopColumnStatisticsTaskRunResponse": {
            "type": "object",
            "properties": {}
        },
        "StopColumnStatisticsTaskRunRequest": {
            "type": "object",
            "properties": {
                "DatabaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "StopCrawlerResponse": {
            "type": "object",
            "properties": {}
        },
        "StopCrawlerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "StopCrawlerScheduleResponse": {
            "type": "object",
            "properties": {}
        },
        "StopCrawlerScheduleRequest": {
            "type": "object",
            "properties": {
                "CrawlerName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "StopSessionResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "StopSessionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NameString"
                },
                "RequestOrigin": {
                    "$ref": "#/$defs/OrchestrationNameString"
                }
            }
        },
        "StopTriggerResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "StopTriggerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "StopWorkflowRunResponse": {
            "type": "object",
            "properties": {}
        },
        "StopWorkflowRunRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "RunId": {
                    "$ref": "#/$defs/IdString"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "TagsToAdd": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "TestConnectionResponse": {
            "type": "object",
            "properties": {}
        },
        "TestConnectionRequest": {
            "type": "object",
            "properties": {
                "ConnectionName": {
                    "$ref": "#/$defs/NameString"
                },
                "TestConnectionInput": {
                    "$ref": "#/$defs/TestConnectionInput"
                }
            }
        },
        "TestConnectionInput": {
            "type": "object",
            "properties": {
                "ConnectionType": {
                    "$ref": "#/$defs/ConnectionType"
                },
                "ConnectionProperties": {
                    "$ref": "#/$defs/ConnectionProperties"
                },
                "AuthenticationConfiguration": {
                    "$ref": "#/$defs/AuthenticationConfigurationInput"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "TagsToRemove": {
                    "$ref": "#/$defs/TagKeysList"
                }
            }
        },
        "TagKeysList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UpdateBlueprintResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "UpdateBlueprintRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/OrchestrationNameString"
                },
                "Description": {
                    "$ref": "#/$defs/Generic512CharString"
                },
                "BlueprintLocation": {
                    "$ref": "#/$defs/OrchestrationS3Location"
                }
            }
        },
        "UpdateClassifierResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateClassifierRequest": {
            "type": "object",
            "properties": {
                "GrokClassifier": {
                    "$ref": "#/$defs/UpdateGrokClassifierRequest"
                },
                "XMLClassifier": {
                    "$ref": "#/$defs/UpdateXMLClassifierRequest"
                },
                "JsonClassifier": {
                    "$ref": "#/$defs/UpdateJsonClassifierRequest"
                },
                "CsvClassifier": {
                    "$ref": "#/$defs/UpdateCsvClassifierRequest"
                }
            }
        },
        "UpdateGrokClassifierRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Classification": {
                    "$ref": "#/$defs/Classification"
                },
                "GrokPattern": {
                    "$ref": "#/$defs/GrokPattern"
                },
                "CustomPatterns": {
                    "$ref": "#/$defs/CustomPatterns"
                }
            }
        },
        "UpdateXMLClassifierRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Classification": {
                    "$ref": "#/$defs/Classification"
                },
                "RowTag": {
                    "$ref": "#/$defs/RowTag"
                }
            }
        },
        "UpdateJsonClassifierRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "JsonPath": {
                    "$ref": "#/$defs/JsonPath"
                }
            }
        },
        "UpdateCsvClassifierRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Delimiter": {
                    "$ref": "#/$defs/CsvColumnDelimiter"
                },
                "QuoteSymbol": {
                    "$ref": "#/$defs/CsvQuoteSymbol"
                },
                "ContainsHeader": {
                    "$ref": "#/$defs/CsvHeaderOption"
                },
                "Header": {
                    "$ref": "#/$defs/CsvHeader"
                },
                "DisableValueTrimming": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "AllowSingleColumn": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "CustomDatatypeConfigured": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "CustomDatatypes": {
                    "$ref": "#/$defs/CustomDatatypes"
                },
                "Serde": {
                    "$ref": "#/$defs/CsvSerdeOption"
                }
            }
        },
        "UpdateColumnStatisticsForPartitionResponse": {
            "type": "object",
            "properties": {
                "Errors": {
                    "$ref": "#/$defs/ColumnStatisticsErrors"
                }
            }
        },
        "ColumnStatisticsErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnStatisticsError"
            }
        },
        "ColumnStatisticsError": {
            "type": "object",
            "properties": {
                "ColumnStatistics": {
                    "$ref": "#/$defs/ColumnStatistics"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorDetail"
                }
            }
        },
        "UpdateColumnStatisticsForPartitionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "PartitionValues": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "ColumnStatisticsList": {
                    "$ref": "#/$defs/UpdateColumnStatisticsList"
                }
            }
        },
        "UpdateColumnStatisticsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnStatistics"
            }
        },
        "UpdateColumnStatisticsForTableResponse": {
            "type": "object",
            "properties": {
                "Errors": {
                    "$ref": "#/$defs/ColumnStatisticsErrors"
                }
            }
        },
        "UpdateColumnStatisticsForTableRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "ColumnStatisticsList": {
                    "$ref": "#/$defs/UpdateColumnStatisticsList"
                }
            }
        },
        "UpdateConnectionResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateConnectionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "ConnectionInput": {
                    "$ref": "#/$defs/ConnectionInput"
                }
            }
        },
        "UpdateCrawlerResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateCrawlerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Role": {
                    "$ref": "#/$defs/Role"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionStringRemovable"
                },
                "Targets": {
                    "$ref": "#/$defs/CrawlerTargets"
                },
                "Schedule": {
                    "$ref": "#/$defs/CronExpression"
                },
                "Classifiers": {
                    "$ref": "#/$defs/ClassifierNameList"
                },
                "TablePrefix": {
                    "$ref": "#/$defs/TablePrefix"
                },
                "SchemaChangePolicy": {
                    "$ref": "#/$defs/SchemaChangePolicy"
                },
                "RecrawlPolicy": {
                    "$ref": "#/$defs/RecrawlPolicy"
                },
                "LineageConfiguration": {
                    "$ref": "#/$defs/LineageConfiguration"
                },
                "LakeFormationConfiguration": {
                    "$ref": "#/$defs/LakeFormationConfiguration"
                },
                "Configuration": {
                    "$ref": "#/$defs/CrawlerConfiguration"
                },
                "CrawlerSecurityConfiguration": {
                    "$ref": "#/$defs/CrawlerSecurityConfiguration"
                }
            }
        },
        "DescriptionStringRemovable": {
            "type": "string"
        },
        "UpdateCrawlerScheduleResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateCrawlerScheduleRequest": {
            "type": "object",
            "properties": {
                "CrawlerName": {
                    "$ref": "#/$defs/NameString"
                },
                "Schedule": {
                    "$ref": "#/$defs/CronExpression"
                }
            }
        },
        "UpdateDatabaseResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateDatabaseRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "DatabaseInput": {
                    "$ref": "#/$defs/DatabaseInput"
                }
            }
        },
        "UpdateDataQualityRulesetResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Ruleset": {
                    "$ref": "#/$defs/DataQualityRulesetString"
                }
            }
        },
        "UpdateDataQualityRulesetRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Ruleset": {
                    "$ref": "#/$defs/DataQualityRulesetString"
                }
            }
        },
        "UpdateDevEndpointResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateDevEndpointRequest": {
            "type": "object",
            "properties": {
                "EndpointName": {
                    "$ref": "#/$defs/GenericString"
                },
                "PublicKey": {
                    "$ref": "#/$defs/GenericString"
                },
                "AddPublicKeys": {
                    "$ref": "#/$defs/PublicKeysList"
                },
                "DeletePublicKeys": {
                    "$ref": "#/$defs/PublicKeysList"
                },
                "CustomLibraries": {
                    "$ref": "#/$defs/DevEndpointCustomLibraries"
                },
                "UpdateEtlLibraries": {
                    "$ref": "#/$defs/BooleanValue"
                },
                "DeleteArguments": {
                    "$ref": "#/$defs/StringList"
                },
                "AddArguments": {
                    "$ref": "#/$defs/MapValue"
                }
            }
        },
        "DevEndpointCustomLibraries": {
            "type": "object",
            "properties": {
                "ExtraPythonLibsS3Path": {
                    "$ref": "#/$defs/GenericString"
                },
                "ExtraJarsS3Path": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "UpdateJobResponse": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "UpdateJobRequest": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "JobUpdate": {
                    "$ref": "#/$defs/JobUpdate"
                }
            }
        },
        "JobUpdate": {
            "type": "object",
            "properties": {
                "JobMode": {
                    "$ref": "#/$defs/JobMode"
                },
                "JobRunQueuingEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "LogUri": {
                    "$ref": "#/$defs/UriString"
                },
                "Role": {
                    "$ref": "#/$defs/RoleString"
                },
                "ExecutionProperty": {
                    "$ref": "#/$defs/ExecutionProperty"
                },
                "Command": {
                    "$ref": "#/$defs/JobCommand"
                },
                "DefaultArguments": {
                    "$ref": "#/$defs/GenericMap"
                },
                "NonOverridableArguments": {
                    "$ref": "#/$defs/GenericMap"
                },
                "Connections": {
                    "$ref": "#/$defs/ConnectionsList"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/MaxRetries"
                },
                "AllocatedCapacity": {
                    "$ref": "#/$defs/IntegerValue"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "NotificationProperty": {
                    "$ref": "#/$defs/NotificationProperty"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "CodeGenConfigurationNodes": {
                    "$ref": "#/$defs/CodeGenConfigurationNodes"
                },
                "ExecutionClass": {
                    "$ref": "#/$defs/ExecutionClass"
                },
                "SourceControlDetails": {
                    "$ref": "#/$defs/SourceControlDetails"
                },
                "MaintenanceWindow": {
                    "$ref": "#/$defs/MaintenanceWindow"
                }
            }
        },
        "UpdateJobFromSourceControlResponse": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "UpdateJobFromSourceControlRequest": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "Provider": {
                    "$ref": "#/$defs/SourceControlProvider"
                },
                "RepositoryName": {
                    "$ref": "#/$defs/NameString"
                },
                "RepositoryOwner": {
                    "$ref": "#/$defs/NameString"
                },
                "BranchName": {
                    "$ref": "#/$defs/NameString"
                },
                "Folder": {
                    "$ref": "#/$defs/NameString"
                },
                "CommitId": {
                    "$ref": "#/$defs/CommitIdString"
                },
                "AuthStrategy": {
                    "$ref": "#/$defs/SourceControlAuthStrategy"
                },
                "AuthToken": {
                    "$ref": "#/$defs/AuthTokenString"
                }
            }
        },
        "CommitIdString": {
            "type": "string"
        },
        "AuthTokenString": {
            "type": "string"
        },
        "UpdateMLTransformResponse": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                }
            }
        },
        "UpdateMLTransformRequest": {
            "type": "object",
            "properties": {
                "TransformId": {
                    "$ref": "#/$defs/HashString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Parameters": {
                    "$ref": "#/$defs/TransformParameters"
                },
                "Role": {
                    "$ref": "#/$defs/RoleString"
                },
                "GlueVersion": {
                    "$ref": "#/$defs/GlueVersionString"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "WorkerType": {
                    "$ref": "#/$defs/WorkerType"
                },
                "NumberOfWorkers": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "UpdatePartitionResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdatePartitionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "PartitionValueList": {
                    "$ref": "#/$defs/BoundedPartitionValueList"
                },
                "PartitionInput": {
                    "$ref": "#/$defs/PartitionInput"
                }
            }
        },
        "UpdateRegistryResponse": {
            "type": "object",
            "properties": {
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "RegistryArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                }
            }
        },
        "UpdateRegistryInput": {
            "type": "object",
            "properties": {
                "RegistryId": {
                    "$ref": "#/$defs/RegistryId"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                }
            }
        },
        "UpdateSchemaResponse": {
            "type": "object",
            "properties": {
                "SchemaArn": {
                    "$ref": "#/$defs/GlueResourceArn"
                },
                "SchemaName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                },
                "RegistryName": {
                    "$ref": "#/$defs/SchemaRegistryNameString"
                }
            }
        },
        "UpdateSchemaInput": {
            "type": "object",
            "properties": {
                "SchemaId": {
                    "$ref": "#/$defs/SchemaId"
                },
                "SchemaVersionNumber": {
                    "$ref": "#/$defs/SchemaVersionNumber"
                },
                "Compatibility": {
                    "$ref": "#/$defs/Compatibility"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                }
            }
        },
        "UpdateSourceControlFromJobResponse": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "UpdateSourceControlFromJobRequest": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/NameString"
                },
                "Provider": {
                    "$ref": "#/$defs/SourceControlProvider"
                },
                "RepositoryName": {
                    "$ref": "#/$defs/NameString"
                },
                "RepositoryOwner": {
                    "$ref": "#/$defs/NameString"
                },
                "BranchName": {
                    "$ref": "#/$defs/NameString"
                },
                "Folder": {
                    "$ref": "#/$defs/NameString"
                },
                "CommitId": {
                    "$ref": "#/$defs/CommitIdString"
                },
                "AuthStrategy": {
                    "$ref": "#/$defs/SourceControlAuthStrategy"
                },
                "AuthToken": {
                    "$ref": "#/$defs/AuthTokenString"
                }
            }
        },
        "UpdateTableResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateTableRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableInput": {
                    "$ref": "#/$defs/TableInput"
                },
                "SkipArchive": {
                    "$ref": "#/$defs/BooleanNullable"
                },
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                },
                "VersionId": {
                    "$ref": "#/$defs/VersionString"
                },
                "ViewUpdateAction": {
                    "$ref": "#/$defs/ViewUpdateAction"
                },
                "Force": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ViewUpdateAction": {
            "enum": [
                "ADD",
                "REPLACE",
                "ADD_OR_REPLACE",
                "DROP"
            ]
        },
        "UpdateTableOptimizerResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateTableOptimizerRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "Type": {
                    "$ref": "#/$defs/TableOptimizerType"
                },
                "TableOptimizerConfiguration": {
                    "$ref": "#/$defs/TableOptimizerConfiguration"
                }
            }
        },
        "UpdateTriggerResponse": {
            "type": "object",
            "properties": {
                "Trigger": {
                    "$ref": "#/$defs/Trigger"
                }
            }
        },
        "UpdateTriggerRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "TriggerUpdate": {
                    "$ref": "#/$defs/TriggerUpdate"
                }
            }
        },
        "TriggerUpdate": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Schedule": {
                    "$ref": "#/$defs/GenericString"
                },
                "Actions": {
                    "$ref": "#/$defs/ActionList"
                },
                "Predicate": {
                    "$ref": "#/$defs/Predicate"
                },
                "EventBatchingCondition": {
                    "$ref": "#/$defs/EventBatchingCondition"
                }
            }
        },
        "UpdateUsageProfileResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "UpdateUsageProfileRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Configuration": {
                    "$ref": "#/$defs/ProfileConfiguration"
                }
            }
        },
        "UpdateUserDefinedFunctionResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateUserDefinedFunctionRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "FunctionName": {
                    "$ref": "#/$defs/NameString"
                },
                "FunctionInput": {
                    "$ref": "#/$defs/UserDefinedFunctionInput"
                }
            }
        },
        "UpdateWorkflowResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "UpdateWorkflowRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/GenericString"
                },
                "DefaultRunProperties": {
                    "$ref": "#/$defs/WorkflowRunProperties"
                },
                "MaxConcurrentRuns": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://glue-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://glue-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://glue.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://glue.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}