{
    "name": "ds",
    "commands": [
        {
            "name": "AcceptSharedDirectory",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.AcceptSharedDirectory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptSharedDirectoryResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AcceptSharedDirectoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddIpRoutes",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.AddIpRoutes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddIpRoutesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AddIpRoutesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddRegion",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.AddRegion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddRegionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AddRegionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddTagsToResource",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.AddTagsToResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddTagsToResourceResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AddTagsToResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelSchemaExtension",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.CancelSchemaExtension"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelSchemaExtensionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CancelSchemaExtensionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ConnectDirectory",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.ConnectDirectory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ConnectDirectoryResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ConnectDirectoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateAlias",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.CreateAlias"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAliasResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateAliasRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateComputer",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.CreateComputer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateComputerResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateComputerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateConditionalForwarder",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.CreateConditionalForwarder"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateConditionalForwarderResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateConditionalForwarderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDirectory",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.CreateDirectory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDirectoryResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateDirectoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLogSubscription",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.CreateLogSubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLogSubscriptionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateLogSubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateMicrosoftAD",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.CreateMicrosoftAD"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMicrosoftADResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateMicrosoftADRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.CreateSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSnapshotResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTrust",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.CreateTrust"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTrustResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateTrustRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteConditionalForwarder",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DeleteConditionalForwarder"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteConditionalForwarderResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteConditionalForwarderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDirectory",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DeleteDirectory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDirectoryResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteDirectoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLogSubscription",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DeleteLogSubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLogSubscriptionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteLogSubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DeleteSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSnapshotResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTrust",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DeleteTrust"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTrustResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteTrustRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterCertificate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DeregisterCertificate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterCertificateResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeregisterCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterEventTopic",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DeregisterEventTopic"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterEventTopicResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeregisterEventTopicRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCertificate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeCertificate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCertificateResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeClientAuthenticationSettings",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeClientAuthenticationSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClientAuthenticationSettingsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeClientAuthenticationSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeConditionalForwarders",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeConditionalForwarders"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeConditionalForwardersResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeConditionalForwardersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDirectories",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeDirectories"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDirectoriesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeDirectoriesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDirectoryDataAccess",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeDirectoryDataAccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDirectoryDataAccessResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeDirectoryDataAccessRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDomainControllers",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeDomainControllers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDomainControllersResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeDomainControllersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEventTopics",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeEventTopics"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEventTopicsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeEventTopicsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLDAPSSettings",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeLDAPSSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLDAPSSettingsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeLDAPSSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeRegions",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeRegions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRegionsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeRegionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSettings",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSettingsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSharedDirectories",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeSharedDirectories"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSharedDirectoriesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeSharedDirectoriesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSnapshots",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeSnapshots"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSnapshotsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeSnapshotsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTrusts",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeTrusts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTrustsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeTrustsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeUpdateDirectory",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DescribeUpdateDirectory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeUpdateDirectoryResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeUpdateDirectoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableClientAuthentication",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DisableClientAuthentication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableClientAuthenticationResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisableClientAuthenticationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableDirectoryDataAccess",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DisableDirectoryDataAccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableDirectoryDataAccessResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisableDirectoryDataAccessRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableLDAPS",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DisableLDAPS"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableLDAPSResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisableLDAPSRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableRadius",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DisableRadius"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableRadiusResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisableRadiusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableSso",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.DisableSso"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableSsoResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisableSsoRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableClientAuthentication",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.EnableClientAuthentication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableClientAuthenticationResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/EnableClientAuthenticationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableDirectoryDataAccess",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.EnableDirectoryDataAccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableDirectoryDataAccessResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/EnableDirectoryDataAccessRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableLDAPS",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.EnableLDAPS"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableLDAPSResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/EnableLDAPSRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableRadius",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.EnableRadius"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableRadiusResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/EnableRadiusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableSso",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.EnableSso"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableSsoResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/EnableSsoRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDirectoryLimits",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.GetDirectoryLimits"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDirectoryLimitsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetDirectoryLimitsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSnapshotLimits",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.GetSnapshotLimits"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSnapshotLimitsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSnapshotLimitsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCertificates",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.ListCertificates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCertificatesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListCertificatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListIpRoutes",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.ListIpRoutes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListIpRoutesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListIpRoutesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListLogSubscriptions",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.ListLogSubscriptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListLogSubscriptionsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListLogSubscriptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSchemaExtensions",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.ListSchemaExtensions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSchemaExtensionsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListSchemaExtensionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterCertificate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.RegisterCertificate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterCertificateResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RegisterCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterEventTopic",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.RegisterEventTopic"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterEventTopicResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RegisterEventTopicRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RejectSharedDirectory",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.RejectSharedDirectory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RejectSharedDirectoryResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RejectSharedDirectoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveIpRoutes",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.RemoveIpRoutes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveIpRoutesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RemoveIpRoutesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveRegion",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.RemoveRegion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveRegionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RemoveRegionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveTagsFromResource",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.RemoveTagsFromResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveTagsFromResourceResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RemoveTagsFromResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetUserPassword",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.ResetUserPassword"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetUserPasswordResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ResetUserPasswordRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RestoreFromSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.RestoreFromSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestoreFromSnapshotResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RestoreFromSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ShareDirectory",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.ShareDirectory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ShareDirectoryResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ShareDirectoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartSchemaExtension",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.StartSchemaExtension"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartSchemaExtensionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartSchemaExtensionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UnshareDirectory",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.UnshareDirectory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UnshareDirectoryResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UnshareDirectoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateConditionalForwarder",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.UpdateConditionalForwarder"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateConditionalForwarderResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateConditionalForwarderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDirectorySetup",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.UpdateDirectorySetup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDirectorySetupResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateDirectorySetupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateNumberOfDomainControllers",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.UpdateNumberOfDomainControllers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateNumberOfDomainControllersResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateNumberOfDomainControllersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRadius",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.UpdateRadius"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRadiusResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateRadiusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSettings",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.UpdateSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSettingsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateTrust",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.UpdateTrust"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTrustResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateTrustRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "VerifyTrust",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DirectoryService_20150416.VerifyTrust"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/VerifyTrustResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/VerifyTrustRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AcceptSharedDirectoryResult": {
            "type": "object",
            "properties": {
                "SharedDirectory": {
                    "$ref": "#/$defs/SharedDirectory"
                }
            }
        },
        "SharedDirectory": {
            "type": "object",
            "properties": {
                "OwnerAccountId": {
                    "$ref": "#/$defs/CustomerId"
                },
                "OwnerDirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "ShareMethod": {
                    "$ref": "#/$defs/ShareMethod"
                },
                "SharedAccountId": {
                    "$ref": "#/$defs/CustomerId"
                },
                "SharedDirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "ShareStatus": {
                    "$ref": "#/$defs/ShareStatus"
                },
                "ShareNotes": {
                    "$ref": "#/$defs/Notes"
                },
                "CreatedDateTime": {
                    "$ref": "#/$defs/CreatedDateTime"
                },
                "LastUpdatedDateTime": {
                    "$ref": "#/$defs/LastUpdatedDateTime"
                }
            }
        },
        "CustomerId": {
            "type": "string"
        },
        "DirectoryId": {
            "type": "string"
        },
        "ShareMethod": {
            "enum": [
                "ORGANIZATIONS",
                "HANDSHAKE"
            ]
        },
        "ShareStatus": {
            "enum": [
                "SHARED",
                "PENDING_ACCEPTANCE",
                "REJECTED",
                "REJECTING",
                "REJECT_FAILED",
                "SHARING",
                "SHARE_FAILED",
                "DELETED",
                "DELETING"
            ]
        },
        "Notes": {
            "type": "string"
        },
        "CreatedDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "LastUpdatedDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "AcceptSharedDirectoryRequest": {
            "type": "object",
            "properties": {
                "SharedDirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "AddIpRoutesResult": {
            "type": "object",
            "properties": {}
        },
        "AddIpRoutesRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "IpRoutes": {
                    "$ref": "#/$defs/IpRoutes"
                },
                "UpdateSecurityGroupForDirectoryControllers": {
                    "$ref": "#/$defs/UpdateSecurityGroupForDirectoryControllers"
                }
            }
        },
        "IpRoutes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpRoute"
            }
        },
        "IpRoute": {
            "type": "object",
            "properties": {
                "CidrIp": {
                    "$ref": "#/$defs/CidrIp"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "CidrIp": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "UpdateSecurityGroupForDirectoryControllers": {
            "type": "boolean"
        },
        "AddRegionResult": {
            "type": "object",
            "properties": {}
        },
        "AddRegionRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "VPCSettings": {
                    "$ref": "#/$defs/DirectoryVpcSettings"
                }
            }
        },
        "RegionName": {
            "type": "string"
        },
        "DirectoryVpcSettings": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                }
            }
        },
        "VpcId": {
            "type": "string"
        },
        "SubnetIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "SubnetId": {
            "type": "string"
        },
        "AddTagsToResourceResult": {
            "type": "object",
            "properties": {}
        },
        "AddTagsToResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ResourceId": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CancelSchemaExtensionResult": {
            "type": "object",
            "properties": {}
        },
        "CancelSchemaExtensionRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "SchemaExtensionId": {
                    "$ref": "#/$defs/SchemaExtensionId"
                }
            }
        },
        "SchemaExtensionId": {
            "type": "string"
        },
        "ConnectDirectoryResult": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "ConnectDirectoryRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DirectoryName"
                },
                "ShortName": {
                    "$ref": "#/$defs/DirectoryShortName"
                },
                "Password": {
                    "$ref": "#/$defs/ConnectPassword"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Size": {
                    "$ref": "#/$defs/DirectorySize"
                },
                "ConnectSettings": {
                    "$ref": "#/$defs/DirectoryConnectSettings"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DirectoryName": {
            "type": "string"
        },
        "DirectoryShortName": {
            "type": "string"
        },
        "ConnectPassword": {
            "type": "string"
        },
        "DirectorySize": {
            "enum": [
                "SMALL",
                "LARGE"
            ]
        },
        "DirectoryConnectSettings": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "CustomerDnsIps": {
                    "$ref": "#/$defs/DnsIpAddrs"
                },
                "CustomerUserName": {
                    "$ref": "#/$defs/UserName"
                }
            }
        },
        "DnsIpAddrs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpAddr"
            }
        },
        "IpAddr": {
            "type": "string"
        },
        "UserName": {
            "type": "string"
        },
        "CreateAliasResult": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Alias": {
                    "$ref": "#/$defs/AliasName"
                }
            }
        },
        "AliasName": {
            "type": "string"
        },
        "CreateAliasRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Alias": {
                    "$ref": "#/$defs/AliasName"
                }
            }
        },
        "CreateComputerResult": {
            "type": "object",
            "properties": {
                "Computer": {
                    "$ref": "#/$defs/Computer"
                }
            }
        },
        "Computer": {
            "type": "object",
            "properties": {
                "ComputerId": {
                    "$ref": "#/$defs/SID"
                },
                "ComputerName": {
                    "$ref": "#/$defs/ComputerName"
                },
                "ComputerAttributes": {
                    "$ref": "#/$defs/Attributes"
                }
            }
        },
        "SID": {
            "type": "string"
        },
        "ComputerName": {
            "type": "string"
        },
        "Attributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Attribute"
            }
        },
        "Attribute": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/AttributeName"
                },
                "Value": {
                    "$ref": "#/$defs/AttributeValue"
                }
            }
        },
        "AttributeName": {
            "type": "string"
        },
        "AttributeValue": {
            "type": "string"
        },
        "CreateComputerRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "ComputerName": {
                    "$ref": "#/$defs/ComputerName"
                },
                "Password": {
                    "$ref": "#/$defs/ComputerPassword"
                },
                "OrganizationalUnitDistinguishedName": {
                    "$ref": "#/$defs/OrganizationalUnitDN"
                },
                "ComputerAttributes": {
                    "$ref": "#/$defs/Attributes"
                }
            }
        },
        "ComputerPassword": {
            "type": "string"
        },
        "OrganizationalUnitDN": {
            "type": "string"
        },
        "CreateConditionalForwarderResult": {
            "type": "object",
            "properties": {}
        },
        "CreateConditionalForwarderRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "RemoteDomainName": {
                    "$ref": "#/$defs/RemoteDomainName"
                },
                "DnsIpAddrs": {
                    "$ref": "#/$defs/DnsIpAddrs"
                }
            }
        },
        "RemoteDomainName": {
            "type": "string"
        },
        "CreateDirectoryResult": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "CreateDirectoryRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DirectoryName"
                },
                "ShortName": {
                    "$ref": "#/$defs/DirectoryShortName"
                },
                "Password": {
                    "$ref": "#/$defs/Password"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Size": {
                    "$ref": "#/$defs/DirectorySize"
                },
                "VpcSettings": {
                    "$ref": "#/$defs/DirectoryVpcSettings"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "Password": {
            "type": "string"
        },
        "CreateLogSubscriptionResult": {
            "type": "object",
            "properties": {}
        },
        "CreateLogSubscriptionRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "LogGroupName": {
                    "$ref": "#/$defs/LogGroupName"
                }
            }
        },
        "LogGroupName": {
            "type": "string"
        },
        "CreateMicrosoftADResult": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "CreateMicrosoftADRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DirectoryName"
                },
                "ShortName": {
                    "$ref": "#/$defs/DirectoryShortName"
                },
                "Password": {
                    "$ref": "#/$defs/Password"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "VpcSettings": {
                    "$ref": "#/$defs/DirectoryVpcSettings"
                },
                "Edition": {
                    "$ref": "#/$defs/DirectoryEdition"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DirectoryEdition": {
            "enum": [
                "ENTERPRISE",
                "STANDARD"
            ]
        },
        "CreateSnapshotResult": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                }
            }
        },
        "SnapshotId": {
            "type": "string"
        },
        "CreateSnapshotRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Name": {
                    "$ref": "#/$defs/SnapshotName"
                }
            }
        },
        "SnapshotName": {
            "type": "string"
        },
        "CreateTrustResult": {
            "type": "object",
            "properties": {
                "TrustId": {
                    "$ref": "#/$defs/TrustId"
                }
            }
        },
        "TrustId": {
            "type": "string"
        },
        "CreateTrustRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "RemoteDomainName": {
                    "$ref": "#/$defs/RemoteDomainName"
                },
                "TrustPassword": {
                    "$ref": "#/$defs/TrustPassword"
                },
                "TrustDirection": {
                    "$ref": "#/$defs/TrustDirection"
                },
                "TrustType": {
                    "$ref": "#/$defs/TrustType"
                },
                "ConditionalForwarderIpAddrs": {
                    "$ref": "#/$defs/DnsIpAddrs"
                },
                "SelectiveAuth": {
                    "$ref": "#/$defs/SelectiveAuth"
                }
            }
        },
        "TrustPassword": {
            "type": "string"
        },
        "TrustDirection": {
            "enum": [
                "ONE_WAY_OUTGOING",
                "ONE_WAY_INCOMING",
                "TWO_WAY"
            ]
        },
        "TrustType": {
            "enum": [
                "FOREST",
                "EXTERNAL"
            ]
        },
        "SelectiveAuth": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "DeleteConditionalForwarderResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteConditionalForwarderRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "RemoteDomainName": {
                    "$ref": "#/$defs/RemoteDomainName"
                }
            }
        },
        "DeleteDirectoryResult": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "DeleteDirectoryRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "DeleteLogSubscriptionResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteLogSubscriptionRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "DeleteSnapshotResult": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                }
            }
        },
        "DeleteSnapshotRequest": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                }
            }
        },
        "DeleteTrustResult": {
            "type": "object",
            "properties": {
                "TrustId": {
                    "$ref": "#/$defs/TrustId"
                }
            }
        },
        "DeleteTrustRequest": {
            "type": "object",
            "properties": {
                "TrustId": {
                    "$ref": "#/$defs/TrustId"
                },
                "DeleteAssociatedConditionalForwarder": {
                    "$ref": "#/$defs/DeleteAssociatedConditionalForwarder"
                }
            }
        },
        "DeleteAssociatedConditionalForwarder": {
            "type": "boolean"
        },
        "DeregisterCertificateResult": {
            "type": "object",
            "properties": {}
        },
        "DeregisterCertificateRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "CertificateId": {
                    "$ref": "#/$defs/CertificateId"
                }
            }
        },
        "CertificateId": {
            "type": "string"
        },
        "DeregisterEventTopicResult": {
            "type": "object",
            "properties": {}
        },
        "DeregisterEventTopicRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "TopicName": {
                    "$ref": "#/$defs/TopicName"
                }
            }
        },
        "TopicName": {
            "type": "string"
        },
        "DescribeCertificateResult": {
            "type": "object",
            "properties": {
                "Certificate": {
                    "$ref": "#/$defs/Certificate"
                }
            }
        },
        "Certificate": {
            "type": "object",
            "properties": {
                "CertificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "State": {
                    "$ref": "#/$defs/CertificateState"
                },
                "StateReason": {
                    "$ref": "#/$defs/CertificateStateReason"
                },
                "CommonName": {
                    "$ref": "#/$defs/CertificateCN"
                },
                "RegisteredDateTime": {
                    "$ref": "#/$defs/CertificateRegisteredDateTime"
                },
                "ExpiryDateTime": {
                    "$ref": "#/$defs/CertificateExpiryDateTime"
                },
                "Type": {
                    "$ref": "#/$defs/CertificateType"
                },
                "ClientCertAuthSettings": {
                    "$ref": "#/$defs/ClientCertAuthSettings"
                }
            }
        },
        "CertificateState": {
            "enum": [
                "REGISTERING",
                "REGISTERED",
                "REGISTER_FAILED",
                "DEREGISTERING",
                "DEREGISTERED",
                "DEREGISTER_FAILED"
            ]
        },
        "CertificateStateReason": {
            "type": "string"
        },
        "CertificateCN": {
            "type": "string"
        },
        "CertificateRegisteredDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "CertificateExpiryDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "CertificateType": {
            "enum": [
                "CLIENT_CERT_AUTH",
                "CLIENT_LDAPS"
            ]
        },
        "ClientCertAuthSettings": {
            "type": "object",
            "properties": {
                "OCSPUrl": {
                    "$ref": "#/$defs/OCSPUrl"
                }
            }
        },
        "OCSPUrl": {
            "type": "string"
        },
        "DescribeCertificateRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "CertificateId": {
                    "$ref": "#/$defs/CertificateId"
                }
            }
        },
        "DescribeClientAuthenticationSettingsResult": {
            "type": "object",
            "properties": {
                "ClientAuthenticationSettingsInfo": {
                    "$ref": "#/$defs/ClientAuthenticationSettingsInfo"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ClientAuthenticationSettingsInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClientAuthenticationSettingInfo"
            }
        },
        "ClientAuthenticationSettingInfo": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ClientAuthenticationType"
                },
                "Status": {
                    "$ref": "#/$defs/ClientAuthenticationStatus"
                },
                "LastUpdatedDateTime": {
                    "$ref": "#/$defs/LastUpdatedDateTime"
                }
            }
        },
        "ClientAuthenticationType": {
            "enum": [
                "SMART_CARD",
                "SMART_CARD_OR_PASSWORD"
            ]
        },
        "ClientAuthenticationStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "NextToken": {
            "type": "string"
        },
        "DescribeClientAuthenticationSettingsRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Type": {
                    "$ref": "#/$defs/ClientAuthenticationType"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Limit": {
                    "$ref": "#/$defs/PageLimit"
                }
            }
        },
        "PageLimit": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeConditionalForwardersResult": {
            "type": "object",
            "properties": {
                "ConditionalForwarders": {
                    "$ref": "#/$defs/ConditionalForwarders"
                }
            }
        },
        "ConditionalForwarders": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConditionalForwarder"
            }
        },
        "ConditionalForwarder": {
            "type": "object",
            "properties": {
                "RemoteDomainName": {
                    "$ref": "#/$defs/RemoteDomainName"
                },
                "DnsIpAddrs": {
                    "$ref": "#/$defs/DnsIpAddrs"
                },
                "ReplicationScope": {
                    "$ref": "#/$defs/ReplicationScope"
                }
            }
        },
        "ReplicationScope": {
            "enum": [
                "Domain"
            ]
        },
        "DescribeConditionalForwardersRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "RemoteDomainNames": {
                    "$ref": "#/$defs/RemoteDomainNames"
                }
            }
        },
        "RemoteDomainNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RemoteDomainName"
            }
        },
        "DescribeDirectoriesResult": {
            "type": "object",
            "properties": {
                "DirectoryDescriptions": {
                    "$ref": "#/$defs/DirectoryDescriptions"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DirectoryDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DirectoryDescription"
            }
        },
        "DirectoryDescription": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Name": {
                    "$ref": "#/$defs/DirectoryName"
                },
                "ShortName": {
                    "$ref": "#/$defs/DirectoryShortName"
                },
                "Size": {
                    "$ref": "#/$defs/DirectorySize"
                },
                "Edition": {
                    "$ref": "#/$defs/DirectoryEdition"
                },
                "Alias": {
                    "$ref": "#/$defs/AliasName"
                },
                "AccessUrl": {
                    "$ref": "#/$defs/AccessUrl"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "DnsIpAddrs": {
                    "$ref": "#/$defs/DnsIpAddrs"
                },
                "Stage": {
                    "$ref": "#/$defs/DirectoryStage"
                },
                "ShareStatus": {
                    "$ref": "#/$defs/ShareStatus"
                },
                "ShareMethod": {
                    "$ref": "#/$defs/ShareMethod"
                },
                "ShareNotes": {
                    "$ref": "#/$defs/Notes"
                },
                "LaunchTime": {
                    "$ref": "#/$defs/LaunchTime"
                },
                "StageLastUpdatedDateTime": {
                    "$ref": "#/$defs/LastUpdatedDateTime"
                },
                "Type": {
                    "$ref": "#/$defs/DirectoryType"
                },
                "VpcSettings": {
                    "$ref": "#/$defs/DirectoryVpcSettingsDescription"
                },
                "ConnectSettings": {
                    "$ref": "#/$defs/DirectoryConnectSettingsDescription"
                },
                "RadiusSettings": {
                    "$ref": "#/$defs/RadiusSettings"
                },
                "RadiusStatus": {
                    "$ref": "#/$defs/RadiusStatus"
                },
                "StageReason": {
                    "$ref": "#/$defs/StageReason"
                },
                "SsoEnabled": {
                    "$ref": "#/$defs/SsoEnabled"
                },
                "DesiredNumberOfDomainControllers": {
                    "$ref": "#/$defs/DesiredNumberOfDomainControllers"
                },
                "OwnerDirectoryDescription": {
                    "$ref": "#/$defs/OwnerDirectoryDescription"
                },
                "RegionsInfo": {
                    "$ref": "#/$defs/RegionsInfo"
                },
                "OsVersion": {
                    "$ref": "#/$defs/OSVersion"
                }
            }
        },
        "AccessUrl": {
            "type": "string"
        },
        "DirectoryStage": {
            "enum": [
                "REQUESTED",
                "CREATING",
                "CREATED",
                "ACTIVE",
                "INOPERABLE",
                "IMPAIRED",
                "RESTORING",
                "RESTOREFAILED",
                "DELETING",
                "DELETED",
                "FAILED",
                "UPDATING"
            ]
        },
        "LaunchTime": {
            "type": "string",
            "format": "date-time"
        },
        "DirectoryType": {
            "enum": [
                "SIMPLE_AD",
                "AD_CONNECTOR",
                "MICROSOFT_AD",
                "SHARED_MICROSOFT_AD"
            ]
        },
        "DirectoryVpcSettingsDescription": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "SecurityGroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZones"
                }
            }
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "AvailabilityZones": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AvailabilityZone"
            }
        },
        "AvailabilityZone": {
            "type": "string"
        },
        "DirectoryConnectSettingsDescription": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "CustomerUserName": {
                    "$ref": "#/$defs/UserName"
                },
                "SecurityGroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZones"
                },
                "ConnectIps": {
                    "$ref": "#/$defs/IpAddrs"
                }
            }
        },
        "IpAddrs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpAddr"
            }
        },
        "RadiusSettings": {
            "type": "object",
            "properties": {
                "RadiusServers": {
                    "$ref": "#/$defs/Servers"
                },
                "RadiusPort": {
                    "$ref": "#/$defs/PortNumber"
                },
                "RadiusTimeout": {
                    "$ref": "#/$defs/RadiusTimeout"
                },
                "RadiusRetries": {
                    "$ref": "#/$defs/RadiusRetries"
                },
                "SharedSecret": {
                    "$ref": "#/$defs/RadiusSharedSecret"
                },
                "AuthenticationProtocol": {
                    "$ref": "#/$defs/RadiusAuthenticationProtocol"
                },
                "DisplayLabel": {
                    "$ref": "#/$defs/RadiusDisplayLabel"
                },
                "UseSameUsername": {
                    "$ref": "#/$defs/UseSameUsername"
                }
            }
        },
        "Servers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Server"
            }
        },
        "Server": {
            "type": "string"
        },
        "PortNumber": {
            "type": "integer",
            "format": "int32"
        },
        "RadiusTimeout": {
            "type": "integer",
            "format": "int32"
        },
        "RadiusRetries": {
            "type": "integer",
            "format": "int32"
        },
        "RadiusSharedSecret": {
            "type": "string"
        },
        "RadiusAuthenticationProtocol": {
            "enum": [
                "PAP",
                "CHAP",
                "MSCHAPV1",
                "MSCHAPV2"
            ]
        },
        "RadiusDisplayLabel": {
            "type": "string"
        },
        "UseSameUsername": {
            "type": "boolean"
        },
        "RadiusStatus": {
            "enum": [
                "CREATING",
                "COMPLETED",
                "FAILED"
            ]
        },
        "StageReason": {
            "type": "string"
        },
        "SsoEnabled": {
            "type": "boolean"
        },
        "DesiredNumberOfDomainControllers": {
            "type": "integer",
            "format": "int32"
        },
        "OwnerDirectoryDescription": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "AccountId": {
                    "$ref": "#/$defs/CustomerId"
                },
                "DnsIpAddrs": {
                    "$ref": "#/$defs/DnsIpAddrs"
                },
                "VpcSettings": {
                    "$ref": "#/$defs/DirectoryVpcSettingsDescription"
                },
                "RadiusSettings": {
                    "$ref": "#/$defs/RadiusSettings"
                },
                "RadiusStatus": {
                    "$ref": "#/$defs/RadiusStatus"
                }
            }
        },
        "RegionsInfo": {
            "type": "object",
            "properties": {
                "PrimaryRegion": {
                    "$ref": "#/$defs/RegionName"
                },
                "AdditionalRegions": {
                    "$ref": "#/$defs/AdditionalRegions"
                }
            }
        },
        "AdditionalRegions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RegionName"
            }
        },
        "OSVersion": {
            "enum": [
                "VERSION_2012",
                "VERSION_2019"
            ]
        },
        "DescribeDirectoriesRequest": {
            "type": "object",
            "properties": {
                "DirectoryIds": {
                    "$ref": "#/$defs/DirectoryIds"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Limit": {
                    "$ref": "#/$defs/Limit"
                }
            }
        },
        "DirectoryIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DirectoryId"
            }
        },
        "Limit": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeDirectoryDataAccessResult": {
            "type": "object",
            "properties": {
                "DataAccessStatus": {
                    "$ref": "#/$defs/DataAccessStatus"
                }
            }
        },
        "DataAccessStatus": {
            "enum": [
                "DISABLED",
                "DISABLING",
                "ENABLED",
                "ENABLING",
                "FAILED"
            ]
        },
        "DescribeDirectoryDataAccessRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "DescribeDomainControllersResult": {
            "type": "object",
            "properties": {
                "DomainControllers": {
                    "$ref": "#/$defs/DomainControllers"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DomainControllers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainController"
            }
        },
        "DomainController": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "DomainControllerId": {
                    "$ref": "#/$defs/DomainControllerId"
                },
                "DnsIpAddr": {
                    "$ref": "#/$defs/IpAddr"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/AvailabilityZone"
                },
                "Status": {
                    "$ref": "#/$defs/DomainControllerStatus"
                },
                "StatusReason": {
                    "$ref": "#/$defs/DomainControllerStatusReason"
                },
                "LaunchTime": {
                    "$ref": "#/$defs/LaunchTime"
                },
                "StatusLastUpdatedDateTime": {
                    "$ref": "#/$defs/LastUpdatedDateTime"
                }
            }
        },
        "DomainControllerId": {
            "type": "string"
        },
        "DomainControllerStatus": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "IMPAIRED",
                "RESTORING",
                "DELETING",
                "DELETED",
                "FAILED",
                "UPDATING"
            ]
        },
        "DomainControllerStatusReason": {
            "type": "string"
        },
        "DescribeDomainControllersRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "DomainControllerIds": {
                    "$ref": "#/$defs/DomainControllerIds"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Limit": {
                    "$ref": "#/$defs/Limit"
                }
            }
        },
        "DomainControllerIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainControllerId"
            }
        },
        "DescribeEventTopicsResult": {
            "type": "object",
            "properties": {
                "EventTopics": {
                    "$ref": "#/$defs/EventTopics"
                }
            }
        },
        "EventTopics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventTopic"
            }
        },
        "EventTopic": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "TopicName": {
                    "$ref": "#/$defs/TopicName"
                },
                "TopicArn": {
                    "$ref": "#/$defs/TopicArn"
                },
                "CreatedDateTime": {
                    "$ref": "#/$defs/CreatedDateTime"
                },
                "Status": {
                    "$ref": "#/$defs/TopicStatus"
                }
            }
        },
        "TopicArn": {
            "type": "string"
        },
        "TopicStatus": {
            "enum": [
                "REGISTERED",
                "TOPIC_NOT_FOUND",
                "FAILED",
                "DELETED"
            ]
        },
        "DescribeEventTopicsRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "TopicNames": {
                    "$ref": "#/$defs/TopicNames"
                }
            }
        },
        "TopicNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TopicName"
            }
        },
        "DescribeLDAPSSettingsResult": {
            "type": "object",
            "properties": {
                "LDAPSSettingsInfo": {
                    "$ref": "#/$defs/LDAPSSettingsInfo"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "LDAPSSettingsInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LDAPSSettingInfo"
            }
        },
        "LDAPSSettingInfo": {
            "type": "object",
            "properties": {
                "LDAPSStatus": {
                    "$ref": "#/$defs/LDAPSStatus"
                },
                "LDAPSStatusReason": {
                    "$ref": "#/$defs/LDAPSStatusReason"
                },
                "LastUpdatedDateTime": {
                    "$ref": "#/$defs/LastUpdatedDateTime"
                }
            }
        },
        "LDAPSStatus": {
            "enum": [
                "ENABLING",
                "ENABLED",
                "ENABLE_FAILED",
                "DISABLED"
            ]
        },
        "LDAPSStatusReason": {
            "type": "string"
        },
        "DescribeLDAPSSettingsRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Type": {
                    "$ref": "#/$defs/LDAPSType"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Limit": {
                    "$ref": "#/$defs/PageLimit"
                }
            }
        },
        "LDAPSType": {
            "enum": [
                "CLIENT"
            ]
        },
        "DescribeRegionsResult": {
            "type": "object",
            "properties": {
                "RegionsDescription": {
                    "$ref": "#/$defs/RegionsDescription"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RegionsDescription": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RegionDescription"
            }
        },
        "RegionDescription": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "RegionType": {
                    "$ref": "#/$defs/RegionType"
                },
                "Status": {
                    "$ref": "#/$defs/DirectoryStage"
                },
                "VpcSettings": {
                    "$ref": "#/$defs/DirectoryVpcSettings"
                },
                "DesiredNumberOfDomainControllers": {
                    "$ref": "#/$defs/DesiredNumberOfDomainControllers"
                },
                "LaunchTime": {
                    "$ref": "#/$defs/LaunchTime"
                },
                "StatusLastUpdatedDateTime": {
                    "$ref": "#/$defs/StateLastUpdatedDateTime"
                },
                "LastUpdatedDateTime": {
                    "$ref": "#/$defs/LastUpdatedDateTime"
                }
            }
        },
        "RegionType": {
            "enum": [
                "PRIMARY",
                "ADDITIONAL"
            ]
        },
        "StateLastUpdatedDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeRegionsRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeSettingsResult": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "SettingEntries": {
                    "$ref": "#/$defs/SettingEntries"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SettingEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SettingEntry"
            }
        },
        "SettingEntry": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/DirectoryConfigurationSettingType"
                },
                "Name": {
                    "$ref": "#/$defs/DirectoryConfigurationSettingName"
                },
                "AllowedValues": {
                    "$ref": "#/$defs/DirectoryConfigurationSettingAllowedValues"
                },
                "AppliedValue": {
                    "$ref": "#/$defs/DirectoryConfigurationSettingValue"
                },
                "RequestedValue": {
                    "$ref": "#/$defs/DirectoryConfigurationSettingValue"
                },
                "RequestStatus": {
                    "$ref": "#/$defs/DirectoryConfigurationStatus"
                },
                "RequestDetailedStatus": {
                    "$ref": "#/$defs/DirectoryConfigurationSettingRequestDetailedStatus"
                },
                "RequestStatusMessage": {
                    "$ref": "#/$defs/DirectoryConfigurationSettingRequestStatusMessage"
                },
                "LastUpdatedDateTime": {
                    "$ref": "#/$defs/DirectoryConfigurationSettingLastUpdatedDateTime"
                },
                "LastRequestedDateTime": {
                    "$ref": "#/$defs/DirectoryConfigurationSettingLastRequestedDateTime"
                },
                "DataType": {
                    "$ref": "#/$defs/DirectoryConfigurationSettingDataType"
                }
            }
        },
        "DirectoryConfigurationSettingType": {
            "type": "string"
        },
        "DirectoryConfigurationSettingName": {
            "type": "string"
        },
        "DirectoryConfigurationSettingAllowedValues": {
            "type": "string"
        },
        "DirectoryConfigurationSettingValue": {
            "type": "string"
        },
        "DirectoryConfigurationStatus": {
            "enum": [
                "REQUESTED",
                "UPDATING",
                "UPDATED",
                "FAILED",
                "DEFAULT"
            ]
        },
        "DirectoryConfigurationSettingRequestDetailedStatus": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DirectoryConfigurationStatus"
            }
        },
        "DirectoryConfigurationSettingRequestStatusMessage": {
            "type": "string"
        },
        "DirectoryConfigurationSettingLastUpdatedDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "DirectoryConfigurationSettingLastRequestedDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "DirectoryConfigurationSettingDataType": {
            "type": "string"
        },
        "DescribeSettingsRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Status": {
                    "$ref": "#/$defs/DirectoryConfigurationStatus"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeSharedDirectoriesResult": {
            "type": "object",
            "properties": {
                "SharedDirectories": {
                    "$ref": "#/$defs/SharedDirectories"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SharedDirectories": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SharedDirectory"
            }
        },
        "DescribeSharedDirectoriesRequest": {
            "type": "object",
            "properties": {
                "OwnerDirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "SharedDirectoryIds": {
                    "$ref": "#/$defs/DirectoryIds"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Limit": {
                    "$ref": "#/$defs/Limit"
                }
            }
        },
        "DescribeSnapshotsResult": {
            "type": "object",
            "properties": {
                "Snapshots": {
                    "$ref": "#/$defs/Snapshots"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Snapshots": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Snapshot"
            }
        },
        "Snapshot": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "Type": {
                    "$ref": "#/$defs/SnapshotType"
                },
                "Name": {
                    "$ref": "#/$defs/SnapshotName"
                },
                "Status": {
                    "$ref": "#/$defs/SnapshotStatus"
                },
                "StartTime": {
                    "$ref": "#/$defs/StartTime"
                }
            }
        },
        "SnapshotType": {
            "enum": [
                "AUTO",
                "MANUAL"
            ]
        },
        "SnapshotStatus": {
            "enum": [
                "CREATING",
                "COMPLETED",
                "FAILED"
            ]
        },
        "StartTime": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeSnapshotsRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "SnapshotIds": {
                    "$ref": "#/$defs/SnapshotIds"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Limit": {
                    "$ref": "#/$defs/Limit"
                }
            }
        },
        "SnapshotIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SnapshotId"
            }
        },
        "DescribeTrustsResult": {
            "type": "object",
            "properties": {
                "Trusts": {
                    "$ref": "#/$defs/Trusts"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Trusts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Trust"
            }
        },
        "Trust": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "TrustId": {
                    "$ref": "#/$defs/TrustId"
                },
                "RemoteDomainName": {
                    "$ref": "#/$defs/RemoteDomainName"
                },
                "TrustType": {
                    "$ref": "#/$defs/TrustType"
                },
                "TrustDirection": {
                    "$ref": "#/$defs/TrustDirection"
                },
                "TrustState": {
                    "$ref": "#/$defs/TrustState"
                },
                "CreatedDateTime": {
                    "$ref": "#/$defs/CreatedDateTime"
                },
                "LastUpdatedDateTime": {
                    "$ref": "#/$defs/LastUpdatedDateTime"
                },
                "StateLastUpdatedDateTime": {
                    "$ref": "#/$defs/StateLastUpdatedDateTime"
                },
                "TrustStateReason": {
                    "$ref": "#/$defs/TrustStateReason"
                },
                "SelectiveAuth": {
                    "$ref": "#/$defs/SelectiveAuth"
                }
            }
        },
        "TrustState": {
            "enum": [
                "CREATING",
                "CREATED",
                "VERIFYING",
                "VERIFY_FAILED",
                "VERIFIED",
                "UPDATING",
                "UPDATE_FAILED",
                "UPDATED",
                "DELETING",
                "DELETED",
                "FAILED"
            ]
        },
        "TrustStateReason": {
            "type": "string"
        },
        "DescribeTrustsRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "TrustIds": {
                    "$ref": "#/$defs/TrustIds"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Limit": {
                    "$ref": "#/$defs/Limit"
                }
            }
        },
        "TrustIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrustId"
            }
        },
        "DescribeUpdateDirectoryResult": {
            "type": "object",
            "properties": {
                "UpdateActivities": {
                    "$ref": "#/$defs/UpdateActivities"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "UpdateActivities": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpdateInfoEntry"
            }
        },
        "UpdateInfoEntry": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/RegionName"
                },
                "Status": {
                    "$ref": "#/$defs/UpdateStatus"
                },
                "StatusReason": {
                    "$ref": "#/$defs/UpdateStatusReason"
                },
                "InitiatedBy": {
                    "$ref": "#/$defs/InitiatedBy"
                },
                "NewValue": {
                    "$ref": "#/$defs/UpdateValue"
                },
                "PreviousValue": {
                    "$ref": "#/$defs/UpdateValue"
                },
                "StartTime": {
                    "$ref": "#/$defs/StartDateTime"
                },
                "LastUpdatedDateTime": {
                    "$ref": "#/$defs/LastUpdatedDateTime"
                }
            }
        },
        "UpdateStatus": {
            "enum": [
                "UPDATED",
                "UPDATING",
                "UPDATE_FAILED"
            ]
        },
        "UpdateStatusReason": {
            "type": "string"
        },
        "InitiatedBy": {
            "type": "string"
        },
        "UpdateValue": {
            "type": "object",
            "properties": {
                "OSUpdateSettings": {
                    "$ref": "#/$defs/OSUpdateSettings"
                }
            }
        },
        "OSUpdateSettings": {
            "type": "object",
            "properties": {
                "OSVersion": {
                    "$ref": "#/$defs/OSVersion"
                }
            }
        },
        "StartDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeUpdateDirectoryRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "UpdateType": {
                    "$ref": "#/$defs/UpdateType"
                },
                "RegionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "UpdateType": {
            "enum": [
                "OS"
            ]
        },
        "DisableClientAuthenticationResult": {
            "type": "object",
            "properties": {}
        },
        "DisableClientAuthenticationRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Type": {
                    "$ref": "#/$defs/ClientAuthenticationType"
                }
            }
        },
        "DisableDirectoryDataAccessResult": {
            "type": "object",
            "properties": {}
        },
        "DisableDirectoryDataAccessRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "DisableLDAPSResult": {
            "type": "object",
            "properties": {}
        },
        "DisableLDAPSRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Type": {
                    "$ref": "#/$defs/LDAPSType"
                }
            }
        },
        "DisableRadiusResult": {
            "type": "object",
            "properties": {}
        },
        "DisableRadiusRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "DisableSsoResult": {
            "type": "object",
            "properties": {}
        },
        "DisableSsoRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "UserName": {
                    "$ref": "#/$defs/UserName"
                },
                "Password": {
                    "$ref": "#/$defs/ConnectPassword"
                }
            }
        },
        "EnableClientAuthenticationResult": {
            "type": "object",
            "properties": {}
        },
        "EnableClientAuthenticationRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Type": {
                    "$ref": "#/$defs/ClientAuthenticationType"
                }
            }
        },
        "EnableDirectoryDataAccessResult": {
            "type": "object",
            "properties": {}
        },
        "EnableDirectoryDataAccessRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "EnableLDAPSResult": {
            "type": "object",
            "properties": {}
        },
        "EnableLDAPSRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Type": {
                    "$ref": "#/$defs/LDAPSType"
                }
            }
        },
        "EnableRadiusResult": {
            "type": "object",
            "properties": {}
        },
        "EnableRadiusRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "RadiusSettings": {
                    "$ref": "#/$defs/RadiusSettings"
                }
            }
        },
        "EnableSsoResult": {
            "type": "object",
            "properties": {}
        },
        "EnableSsoRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "UserName": {
                    "$ref": "#/$defs/UserName"
                },
                "Password": {
                    "$ref": "#/$defs/ConnectPassword"
                }
            }
        },
        "GetDirectoryLimitsResult": {
            "type": "object",
            "properties": {
                "DirectoryLimits": {
                    "$ref": "#/$defs/DirectoryLimits"
                }
            }
        },
        "DirectoryLimits": {
            "type": "object",
            "properties": {
                "CloudOnlyDirectoriesLimit": {
                    "$ref": "#/$defs/Limit"
                },
                "CloudOnlyDirectoriesCurrentCount": {
                    "$ref": "#/$defs/Limit"
                },
                "CloudOnlyDirectoriesLimitReached": {
                    "$ref": "#/$defs/CloudOnlyDirectoriesLimitReached"
                },
                "CloudOnlyMicrosoftADLimit": {
                    "$ref": "#/$defs/Limit"
                },
                "CloudOnlyMicrosoftADCurrentCount": {
                    "$ref": "#/$defs/Limit"
                },
                "CloudOnlyMicrosoftADLimitReached": {
                    "$ref": "#/$defs/CloudOnlyDirectoriesLimitReached"
                },
                "ConnectedDirectoriesLimit": {
                    "$ref": "#/$defs/Limit"
                },
                "ConnectedDirectoriesCurrentCount": {
                    "$ref": "#/$defs/Limit"
                },
                "ConnectedDirectoriesLimitReached": {
                    "$ref": "#/$defs/ConnectedDirectoriesLimitReached"
                }
            }
        },
        "CloudOnlyDirectoriesLimitReached": {
            "type": "boolean"
        },
        "ConnectedDirectoriesLimitReached": {
            "type": "boolean"
        },
        "GetDirectoryLimitsRequest": {
            "type": "object",
            "properties": {}
        },
        "GetSnapshotLimitsResult": {
            "type": "object",
            "properties": {
                "SnapshotLimits": {
                    "$ref": "#/$defs/SnapshotLimits"
                }
            }
        },
        "SnapshotLimits": {
            "type": "object",
            "properties": {
                "ManualSnapshotsLimit": {
                    "$ref": "#/$defs/Limit"
                },
                "ManualSnapshotsCurrentCount": {
                    "$ref": "#/$defs/Limit"
                },
                "ManualSnapshotsLimitReached": {
                    "$ref": "#/$defs/ManualSnapshotsLimitReached"
                }
            }
        },
        "ManualSnapshotsLimitReached": {
            "type": "boolean"
        },
        "GetSnapshotLimitsRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "ListCertificatesResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "CertificatesInfo": {
                    "$ref": "#/$defs/CertificatesInfo"
                }
            }
        },
        "CertificatesInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CertificateInfo"
            }
        },
        "CertificateInfo": {
            "type": "object",
            "properties": {
                "CertificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "CommonName": {
                    "$ref": "#/$defs/CertificateCN"
                },
                "State": {
                    "$ref": "#/$defs/CertificateState"
                },
                "ExpiryDateTime": {
                    "$ref": "#/$defs/CertificateExpiryDateTime"
                },
                "Type": {
                    "$ref": "#/$defs/CertificateType"
                }
            }
        },
        "ListCertificatesRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Limit": {
                    "$ref": "#/$defs/PageLimit"
                }
            }
        },
        "ListIpRoutesResult": {
            "type": "object",
            "properties": {
                "IpRoutesInfo": {
                    "$ref": "#/$defs/IpRoutesInfo"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IpRoutesInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpRouteInfo"
            }
        },
        "IpRouteInfo": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "CidrIp": {
                    "$ref": "#/$defs/CidrIp"
                },
                "IpRouteStatusMsg": {
                    "$ref": "#/$defs/IpRouteStatusMsg"
                },
                "AddedDateTime": {
                    "$ref": "#/$defs/AddedDateTime"
                },
                "IpRouteStatusReason": {
                    "$ref": "#/$defs/IpRouteStatusReason"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "IpRouteStatusMsg": {
            "enum": [
                "ADDING",
                "ADDED",
                "REMOVING",
                "REMOVED",
                "ADD_FAILED",
                "REMOVE_FAILED"
            ]
        },
        "AddedDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "IpRouteStatusReason": {
            "type": "string"
        },
        "ListIpRoutesRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Limit": {
                    "$ref": "#/$defs/Limit"
                }
            }
        },
        "ListLogSubscriptionsResult": {
            "type": "object",
            "properties": {
                "LogSubscriptions": {
                    "$ref": "#/$defs/LogSubscriptions"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "LogSubscriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LogSubscription"
            }
        },
        "LogSubscription": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "LogGroupName": {
                    "$ref": "#/$defs/LogGroupName"
                },
                "SubscriptionCreatedDateTime": {
                    "$ref": "#/$defs/SubscriptionCreatedDateTime"
                }
            }
        },
        "SubscriptionCreatedDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "ListLogSubscriptionsRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Limit": {
                    "$ref": "#/$defs/Limit"
                }
            }
        },
        "ListSchemaExtensionsResult": {
            "type": "object",
            "properties": {
                "SchemaExtensionsInfo": {
                    "$ref": "#/$defs/SchemaExtensionsInfo"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SchemaExtensionsInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SchemaExtensionInfo"
            }
        },
        "SchemaExtensionInfo": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "SchemaExtensionId": {
                    "$ref": "#/$defs/SchemaExtensionId"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "SchemaExtensionStatus": {
                    "$ref": "#/$defs/SchemaExtensionStatus"
                },
                "SchemaExtensionStatusReason": {
                    "$ref": "#/$defs/SchemaExtensionStatusReason"
                },
                "StartDateTime": {
                    "$ref": "#/$defs/StartDateTime"
                },
                "EndDateTime": {
                    "$ref": "#/$defs/EndDateTime"
                }
            }
        },
        "SchemaExtensionStatus": {
            "enum": [
                "INITIALIZING",
                "CREATING_SNAPSHOT",
                "UPDATING_SCHEMA",
                "REPLICATING",
                "CANCEL_IN_PROGRESS",
                "ROLLBACK_IN_PROGRESS",
                "CANCELLED",
                "FAILED",
                "COMPLETED"
            ]
        },
        "SchemaExtensionStatusReason": {
            "type": "string"
        },
        "EndDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "ListSchemaExtensionsRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Limit": {
                    "$ref": "#/$defs/Limit"
                }
            }
        },
        "ListTagsForResourceResult": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Limit": {
                    "$ref": "#/$defs/Limit"
                }
            }
        },
        "RegisterCertificateResult": {
            "type": "object",
            "properties": {
                "CertificateId": {
                    "$ref": "#/$defs/CertificateId"
                }
            }
        },
        "RegisterCertificateRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "CertificateData": {
                    "$ref": "#/$defs/CertificateData"
                },
                "Type": {
                    "$ref": "#/$defs/CertificateType"
                },
                "ClientCertAuthSettings": {
                    "$ref": "#/$defs/ClientCertAuthSettings"
                }
            }
        },
        "CertificateData": {
            "type": "string"
        },
        "RegisterEventTopicResult": {
            "type": "object",
            "properties": {}
        },
        "RegisterEventTopicRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "TopicName": {
                    "$ref": "#/$defs/TopicName"
                }
            }
        },
        "RejectSharedDirectoryResult": {
            "type": "object",
            "properties": {
                "SharedDirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "RejectSharedDirectoryRequest": {
            "type": "object",
            "properties": {
                "SharedDirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "RemoveIpRoutesResult": {
            "type": "object",
            "properties": {}
        },
        "RemoveIpRoutesRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "CidrIps": {
                    "$ref": "#/$defs/CidrIps"
                }
            }
        },
        "CidrIps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CidrIp"
            }
        },
        "RemoveRegionResult": {
            "type": "object",
            "properties": {}
        },
        "RemoveRegionRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "RemoveTagsFromResourceResult": {
            "type": "object",
            "properties": {}
        },
        "RemoveTagsFromResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "TagKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "ResetUserPasswordResult": {
            "type": "object",
            "properties": {}
        },
        "ResetUserPasswordRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "UserName": {
                    "$ref": "#/$defs/CustomerUserName"
                },
                "NewPassword": {
                    "$ref": "#/$defs/UserPassword"
                }
            }
        },
        "CustomerUserName": {
            "type": "string"
        },
        "UserPassword": {
            "type": "string"
        },
        "RestoreFromSnapshotResult": {
            "type": "object",
            "properties": {}
        },
        "RestoreFromSnapshotRequest": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                }
            }
        },
        "ShareDirectoryResult": {
            "type": "object",
            "properties": {
                "SharedDirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "ShareDirectoryRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "ShareNotes": {
                    "$ref": "#/$defs/Notes"
                },
                "ShareTarget": {
                    "$ref": "#/$defs/ShareTarget"
                },
                "ShareMethod": {
                    "$ref": "#/$defs/ShareMethod"
                }
            }
        },
        "ShareTarget": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/TargetId"
                },
                "Type": {
                    "$ref": "#/$defs/TargetType"
                }
            }
        },
        "TargetId": {
            "type": "string"
        },
        "TargetType": {
            "enum": [
                "ACCOUNT"
            ]
        },
        "StartSchemaExtensionResult": {
            "type": "object",
            "properties": {
                "SchemaExtensionId": {
                    "$ref": "#/$defs/SchemaExtensionId"
                }
            }
        },
        "StartSchemaExtensionRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "CreateSnapshotBeforeSchemaExtension": {
                    "$ref": "#/$defs/CreateSnapshotBeforeSchemaExtension"
                },
                "LdifContent": {
                    "$ref": "#/$defs/LdifContent"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "CreateSnapshotBeforeSchemaExtension": {
            "type": "boolean"
        },
        "LdifContent": {
            "type": "string"
        },
        "UnshareDirectoryResult": {
            "type": "object",
            "properties": {
                "SharedDirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "UnshareDirectoryRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "UnshareTarget": {
                    "$ref": "#/$defs/UnshareTarget"
                }
            }
        },
        "UnshareTarget": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/TargetId"
                },
                "Type": {
                    "$ref": "#/$defs/TargetType"
                }
            }
        },
        "UpdateConditionalForwarderResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateConditionalForwarderRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "RemoteDomainName": {
                    "$ref": "#/$defs/RemoteDomainName"
                },
                "DnsIpAddrs": {
                    "$ref": "#/$defs/DnsIpAddrs"
                }
            }
        },
        "UpdateDirectorySetupResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateDirectorySetupRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "UpdateType": {
                    "$ref": "#/$defs/UpdateType"
                },
                "OSUpdateSettings": {
                    "$ref": "#/$defs/OSUpdateSettings"
                },
                "CreateSnapshotBeforeUpdate": {
                    "$ref": "#/$defs/CreateSnapshotBeforeUpdate"
                }
            }
        },
        "CreateSnapshotBeforeUpdate": {
            "type": "boolean"
        },
        "UpdateNumberOfDomainControllersResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateNumberOfDomainControllersRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "DesiredNumber": {
                    "$ref": "#/$defs/DesiredNumberOfDomainControllers"
                }
            }
        },
        "UpdateRadiusResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateRadiusRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "RadiusSettings": {
                    "$ref": "#/$defs/RadiusSettings"
                }
            }
        },
        "UpdateSettingsResult": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                }
            }
        },
        "UpdateSettingsRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/DirectoryId"
                },
                "Settings": {
                    "$ref": "#/$defs/Settings"
                }
            }
        },
        "Settings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Setting"
            }
        },
        "Setting": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DirectoryConfigurationSettingName"
                },
                "Value": {
                    "$ref": "#/$defs/DirectoryConfigurationSettingValue"
                }
            }
        },
        "UpdateTrustResult": {
            "type": "object",
            "properties": {
                "RequestId": {
                    "$ref": "#/$defs/RequestId"
                },
                "TrustId": {
                    "$ref": "#/$defs/TrustId"
                }
            }
        },
        "RequestId": {
            "type": "string"
        },
        "UpdateTrustRequest": {
            "type": "object",
            "properties": {
                "TrustId": {
                    "$ref": "#/$defs/TrustId"
                },
                "SelectiveAuth": {
                    "$ref": "#/$defs/SelectiveAuth"
                }
            }
        },
        "VerifyTrustResult": {
            "type": "object",
            "properties": {
                "TrustId": {
                    "$ref": "#/$defs/TrustId"
                }
            }
        },
        "VerifyTrustRequest": {
            "type": "object",
            "properties": {
                "TrustId": {
                    "$ref": "#/$defs/TrustId"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://ds-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://ds-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://ds.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://ds.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
