{
    "name": "ecs",
    "commands": [
        {
            "name": "CreateCapacityProvider",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCapacityProvider"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCapacityProviderResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCapacityProviderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTaskSet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateTaskSet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTaskSetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTaskSetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAccountSetting",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteAccountSetting"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAccountSettingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAccountSettingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAttributesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAttributesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCapacityProvider",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCapacityProvider"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCapacityProviderResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCapacityProviderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTaskDefinitions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteTaskDefinitions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTaskDefinitionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTaskDefinitionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTaskSet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteTaskSet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTaskSetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTaskSetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterContainerInstance",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeregisterContainerInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterContainerInstanceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeregisterContainerInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterTaskDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeregisterTaskDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterTaskDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeregisterTaskDefinitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCapacityProviders",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeCapacityProviders"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCapacityProvidersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCapacityProvidersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeClusters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeClusters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClustersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClustersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeContainerInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeContainerInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeContainerInstancesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeContainerInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeServices",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeServices"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeServicesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeServicesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTaskDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeTaskDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTaskDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTaskDefinitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTasksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTaskSets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeTaskSets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTaskSetsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTaskSetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DiscoverPollEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DiscoverPollEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DiscoverPollEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DiscoverPollEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExecuteCommand",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExecuteCommand"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExecuteCommandResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExecuteCommandRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTaskProtection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTaskProtection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTaskProtectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTaskProtectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAccountSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListAccountSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAccountSettingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAccountSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAttributesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAttributesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListClusters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListClusters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListClustersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListClustersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListContainerInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListContainerInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListContainerInstancesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListContainerInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListServices",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListServices"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListServicesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListServicesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListServicesByNamespace",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListServicesByNamespace"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListServicesByNamespaceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListServicesByNamespaceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTaskDefinitionFamilies",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTaskDefinitionFamilies"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTaskDefinitionFamiliesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTaskDefinitionFamiliesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTaskDefinitions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTaskDefinitions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTaskDefinitionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTaskDefinitionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTasksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutAccountSetting",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutAccountSetting"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAccountSettingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAccountSettingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutAccountSettingDefault",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutAccountSettingDefault"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAccountSettingDefaultResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAccountSettingDefaultRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAttributesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAttributesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutClusterCapacityProviders",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutClusterCapacityProviders"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutClusterCapacityProvidersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutClusterCapacityProvidersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterContainerInstance",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RegisterContainerInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterContainerInstanceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterContainerInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterTaskDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RegisterTaskDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterTaskDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterTaskDefinitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RunTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RunTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RunTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RunTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SubmitAttachmentStateChanges",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SubmitAttachmentStateChanges"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SubmitAttachmentStateChangesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SubmitAttachmentStateChangesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SubmitContainerStateChange",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SubmitContainerStateChange"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SubmitContainerStateChangeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SubmitContainerStateChangeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SubmitTaskStateChange",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SubmitTaskStateChange"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SubmitTaskStateChangeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SubmitTaskStateChangeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCapacityProvider",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateCapacityProvider"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCapacityProviderResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCapacityProviderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateClusterSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateClusterSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateClusterSettingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateClusterSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateContainerAgent",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateContainerAgent"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateContainerAgentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateContainerAgentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateContainerInstancesState",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateContainerInstancesState"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateContainerInstancesStateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateContainerInstancesStateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateServicePrimaryTaskSet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateServicePrimaryTaskSet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateServicePrimaryTaskSetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateServicePrimaryTaskSetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateTaskProtection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateTaskProtection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTaskProtectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateTaskProtectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateTaskSet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateTaskSet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTaskSetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateTaskSetRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateCapacityProviderResponse": {
            "type": "object",
            "properties": {
                "capacityProvider": {
                    "$ref": "#/$defs/CapacityProvider"
                }
            }
        },
        "CapacityProvider": {
            "type": "object",
            "properties": {
                "capacityProviderArn": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "status": {
                    "$ref": "#/$defs/CapacityProviderStatus"
                },
                "autoScalingGroupProvider": {
                    "$ref": "#/$defs/AutoScalingGroupProvider"
                },
                "updateStatus": {
                    "$ref": "#/$defs/CapacityProviderUpdateStatus"
                },
                "updateStatusReason": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "CapacityProviderStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "AutoScalingGroupProvider": {
            "type": "object",
            "properties": {
                "autoScalingGroupArn": {
                    "$ref": "#/$defs/String"
                },
                "managedScaling": {
                    "$ref": "#/$defs/ManagedScaling"
                },
                "managedTerminationProtection": {
                    "$ref": "#/$defs/ManagedTerminationProtection"
                },
                "managedDraining": {
                    "$ref": "#/$defs/ManagedDraining"
                }
            }
        },
        "ManagedScaling": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/ManagedScalingStatus"
                },
                "targetCapacity": {
                    "$ref": "#/$defs/ManagedScalingTargetCapacity"
                },
                "minimumScalingStepSize": {
                    "$ref": "#/$defs/ManagedScalingStepSize"
                },
                "maximumScalingStepSize": {
                    "$ref": "#/$defs/ManagedScalingStepSize"
                },
                "instanceWarmupPeriod": {
                    "$ref": "#/$defs/ManagedScalingInstanceWarmupPeriod"
                }
            }
        },
        "ManagedScalingStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "ManagedScalingTargetCapacity": {
            "type": "integer",
            "format": "int32"
        },
        "ManagedScalingStepSize": {
            "type": "integer",
            "format": "int32"
        },
        "ManagedScalingInstanceWarmupPeriod": {
            "type": "integer",
            "format": "int32"
        },
        "ManagedTerminationProtection": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "ManagedDraining": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "CapacityProviderUpdateStatus": {
            "enum": [
                "DELETE_IN_PROGRESS",
                "DELETE_COMPLETE",
                "DELETE_FAILED",
                "UPDATE_IN_PROGRESS",
                "UPDATE_COMPLETE",
                "UPDATE_FAILED"
            ]
        },
        "Tags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateCapacityProviderRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "autoScalingGroupProvider": {
                    "$ref": "#/$defs/AutoScalingGroupProvider"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CreateClusterResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "Cluster": {
            "type": "object",
            "properties": {
                "clusterArn": {
                    "$ref": "#/$defs/String"
                },
                "clusterName": {
                    "$ref": "#/$defs/String"
                },
                "configuration": {
                    "$ref": "#/$defs/ClusterConfiguration"
                },
                "status": {
                    "$ref": "#/$defs/String"
                },
                "registeredContainerInstancesCount": {
                    "$ref": "#/$defs/Integer"
                },
                "runningTasksCount": {
                    "$ref": "#/$defs/Integer"
                },
                "pendingTasksCount": {
                    "$ref": "#/$defs/Integer"
                },
                "activeServicesCount": {
                    "$ref": "#/$defs/Integer"
                },
                "statistics": {
                    "$ref": "#/$defs/Statistics"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "settings": {
                    "$ref": "#/$defs/ClusterSettings"
                },
                "capacityProviders": {
                    "$ref": "#/$defs/StringList"
                },
                "defaultCapacityProviderStrategy": {
                    "$ref": "#/$defs/CapacityProviderStrategy"
                },
                "attachments": {
                    "$ref": "#/$defs/Attachments"
                },
                "attachmentsStatus": {
                    "$ref": "#/$defs/String"
                },
                "serviceConnectDefaults": {
                    "$ref": "#/$defs/ClusterServiceConnectDefaults"
                }
            }
        },
        "ClusterConfiguration": {
            "type": "object",
            "properties": {
                "executeCommandConfiguration": {
                    "$ref": "#/$defs/ExecuteCommandConfiguration"
                },
                "managedStorageConfiguration": {
                    "$ref": "#/$defs/ManagedStorageConfiguration"
                }
            }
        },
        "ExecuteCommandConfiguration": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "logging": {
                    "$ref": "#/$defs/ExecuteCommandLogging"
                },
                "logConfiguration": {
                    "$ref": "#/$defs/ExecuteCommandLogConfiguration"
                }
            }
        },
        "ExecuteCommandLogging": {
            "enum": [
                "NONE",
                "DEFAULT",
                "OVERRIDE"
            ]
        },
        "ExecuteCommandLogConfiguration": {
            "type": "object",
            "properties": {
                "cloudWatchLogGroupName": {
                    "$ref": "#/$defs/String"
                },
                "cloudWatchEncryptionEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "s3BucketName": {
                    "$ref": "#/$defs/String"
                },
                "s3EncryptionEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "s3KeyPrefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "ManagedStorageConfiguration": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "fargateEphemeralStorageKmsKeyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "Statistics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyValuePair"
            }
        },
        "KeyValuePair": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClusterSettings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClusterSetting"
            }
        },
        "ClusterSetting": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ClusterSettingName"
                },
                "value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClusterSettingName": {
            "enum": [
                "CONTAINER_INSIGHTS"
            ]
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CapacityProviderStrategy": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityProviderStrategyItem"
            }
        },
        "CapacityProviderStrategyItem": {
            "type": "object",
            "properties": {
                "capacityProvider": {
                    "$ref": "#/$defs/String"
                },
                "weight": {
                    "$ref": "#/$defs/CapacityProviderStrategyItemWeight"
                },
                "base": {
                    "$ref": "#/$defs/CapacityProviderStrategyItemBase"
                }
            }
        },
        "CapacityProviderStrategyItemWeight": {
            "type": "integer",
            "format": "int32"
        },
        "CapacityProviderStrategyItemBase": {
            "type": "integer",
            "format": "int32"
        },
        "Attachments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Attachment"
            }
        },
        "Attachment": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "type": {
                    "$ref": "#/$defs/String"
                },
                "status": {
                    "$ref": "#/$defs/String"
                },
                "details": {
                    "$ref": "#/$defs/AttachmentDetails"
                }
            }
        },
        "AttachmentDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyValuePair"
            }
        },
        "ClusterServiceConnectDefaults": {
            "type": "object",
            "properties": {
                "namespace": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateClusterRequest": {
            "type": "object",
            "properties": {
                "clusterName": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "settings": {
                    "$ref": "#/$defs/ClusterSettings"
                },
                "configuration": {
                    "$ref": "#/$defs/ClusterConfiguration"
                },
                "capacityProviders": {
                    "$ref": "#/$defs/StringList"
                },
                "defaultCapacityProviderStrategy": {
                    "$ref": "#/$defs/CapacityProviderStrategy"
                },
                "serviceConnectDefaults": {
                    "$ref": "#/$defs/ClusterServiceConnectDefaultsRequest"
                }
            }
        },
        "ClusterServiceConnectDefaultsRequest": {
            "type": "object",
            "properties": {
                "namespace": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateServiceResponse": {
            "type": "object",
            "properties": {
                "service": {
                    "$ref": "#/$defs/Service"
                }
            }
        },
        "Service": {
            "type": "object",
            "properties": {
                "serviceArn": {
                    "$ref": "#/$defs/String"
                },
                "serviceName": {
                    "$ref": "#/$defs/String"
                },
                "clusterArn": {
                    "$ref": "#/$defs/String"
                },
                "loadBalancers": {
                    "$ref": "#/$defs/LoadBalancers"
                },
                "serviceRegistries": {
                    "$ref": "#/$defs/ServiceRegistries"
                },
                "status": {
                    "$ref": "#/$defs/String"
                },
                "desiredCount": {
                    "$ref": "#/$defs/Integer"
                },
                "runningCount": {
                    "$ref": "#/$defs/Integer"
                },
                "pendingCount": {
                    "$ref": "#/$defs/Integer"
                },
                "launchType": {
                    "$ref": "#/$defs/LaunchType"
                },
                "capacityProviderStrategy": {
                    "$ref": "#/$defs/CapacityProviderStrategy"
                },
                "platformVersion": {
                    "$ref": "#/$defs/String"
                },
                "platformFamily": {
                    "$ref": "#/$defs/String"
                },
                "taskDefinition": {
                    "$ref": "#/$defs/String"
                },
                "deploymentConfiguration": {
                    "$ref": "#/$defs/DeploymentConfiguration"
                },
                "taskSets": {
                    "$ref": "#/$defs/TaskSets"
                },
                "deployments": {
                    "$ref": "#/$defs/Deployments"
                },
                "roleArn": {
                    "$ref": "#/$defs/String"
                },
                "events": {
                    "$ref": "#/$defs/ServiceEvents"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "placementConstraints": {
                    "$ref": "#/$defs/PlacementConstraints"
                },
                "placementStrategy": {
                    "$ref": "#/$defs/PlacementStrategies"
                },
                "networkConfiguration": {
                    "$ref": "#/$defs/NetworkConfiguration"
                },
                "healthCheckGracePeriodSeconds": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "schedulingStrategy": {
                    "$ref": "#/$defs/SchedulingStrategy"
                },
                "deploymentController": {
                    "$ref": "#/$defs/DeploymentController"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "createdBy": {
                    "$ref": "#/$defs/String"
                },
                "enableECSManagedTags": {
                    "$ref": "#/$defs/Boolean"
                },
                "propagateTags": {
                    "$ref": "#/$defs/PropagateTags"
                },
                "enableExecuteCommand": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LoadBalancers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancer"
            }
        },
        "LoadBalancer": {
            "type": "object",
            "properties": {
                "targetGroupArn": {
                    "$ref": "#/$defs/String"
                },
                "loadBalancerName": {
                    "$ref": "#/$defs/String"
                },
                "containerName": {
                    "$ref": "#/$defs/String"
                },
                "containerPort": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "BoxedInteger": {
            "type": "integer",
            "format": "int32"
        },
        "ServiceRegistries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceRegistry"
            }
        },
        "ServiceRegistry": {
            "type": "object",
            "properties": {
                "registryArn": {
                    "$ref": "#/$defs/String"
                },
                "port": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "containerName": {
                    "$ref": "#/$defs/String"
                },
                "containerPort": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "LaunchType": {
            "enum": [
                "EC2",
                "FARGATE",
                "EXTERNAL"
            ]
        },
        "DeploymentConfiguration": {
            "type": "object",
            "properties": {
                "deploymentCircuitBreaker": {
                    "$ref": "#/$defs/DeploymentCircuitBreaker"
                },
                "maximumPercent": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "minimumHealthyPercent": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "alarms": {
                    "$ref": "#/$defs/DeploymentAlarms"
                }
            }
        },
        "DeploymentCircuitBreaker": {
            "type": "object",
            "properties": {
                "enable": {
                    "$ref": "#/$defs/Boolean"
                },
                "rollback": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeploymentAlarms": {
            "type": "object",
            "properties": {
                "alarmNames": {
                    "$ref": "#/$defs/StringList"
                },
                "enable": {
                    "$ref": "#/$defs/Boolean"
                },
                "rollback": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TaskSets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaskSet"
            }
        },
        "TaskSet": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "taskSetArn": {
                    "$ref": "#/$defs/String"
                },
                "serviceArn": {
                    "$ref": "#/$defs/String"
                },
                "clusterArn": {
                    "$ref": "#/$defs/String"
                },
                "startedBy": {
                    "$ref": "#/$defs/String"
                },
                "externalId": {
                    "$ref": "#/$defs/String"
                },
                "status": {
                    "$ref": "#/$defs/String"
                },
                "taskDefinition": {
                    "$ref": "#/$defs/String"
                },
                "computedDesiredCount": {
                    "$ref": "#/$defs/Integer"
                },
                "pendingCount": {
                    "$ref": "#/$defs/Integer"
                },
                "runningCount": {
                    "$ref": "#/$defs/Integer"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "launchType": {
                    "$ref": "#/$defs/LaunchType"
                },
                "capacityProviderStrategy": {
                    "$ref": "#/$defs/CapacityProviderStrategy"
                },
                "platformVersion": {
                    "$ref": "#/$defs/String"
                },
                "platformFamily": {
                    "$ref": "#/$defs/String"
                },
                "networkConfiguration": {
                    "$ref": "#/$defs/NetworkConfiguration"
                },
                "loadBalancers": {
                    "$ref": "#/$defs/LoadBalancers"
                },
                "serviceRegistries": {
                    "$ref": "#/$defs/ServiceRegistries"
                },
                "scale": {
                    "$ref": "#/$defs/Scale"
                },
                "stabilityStatus": {
                    "$ref": "#/$defs/StabilityStatus"
                },
                "stabilityStatusAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "fargateEphemeralStorage": {
                    "$ref": "#/$defs/DeploymentEphemeralStorage"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "NetworkConfiguration": {
            "type": "object",
            "properties": {
                "awsvpcConfiguration": {
                    "$ref": "#/$defs/AwsVpcConfiguration"
                }
            }
        },
        "AwsVpcConfiguration": {
            "type": "object",
            "properties": {
                "subnets": {
                    "$ref": "#/$defs/StringList"
                },
                "securityGroups": {
                    "$ref": "#/$defs/StringList"
                },
                "assignPublicIp": {
                    "$ref": "#/$defs/AssignPublicIp"
                }
            }
        },
        "AssignPublicIp": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "Scale": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/$defs/Double"
                },
                "unit": {
                    "$ref": "#/$defs/ScaleUnit"
                }
            }
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "ScaleUnit": {
            "enum": [
                "PERCENT"
            ]
        },
        "StabilityStatus": {
            "enum": [
                "STEADY_STATE",
                "STABILIZING"
            ]
        },
        "DeploymentEphemeralStorage": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Deployments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Deployment"
            }
        },
        "Deployment": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "status": {
                    "$ref": "#/$defs/String"
                },
                "taskDefinition": {
                    "$ref": "#/$defs/String"
                },
                "desiredCount": {
                    "$ref": "#/$defs/Integer"
                },
                "pendingCount": {
                    "$ref": "#/$defs/Integer"
                },
                "runningCount": {
                    "$ref": "#/$defs/Integer"
                },
                "failedTasks": {
                    "$ref": "#/$defs/Integer"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "capacityProviderStrategy": {
                    "$ref": "#/$defs/CapacityProviderStrategy"
                },
                "launchType": {
                    "$ref": "#/$defs/LaunchType"
                },
                "platformVersion": {
                    "$ref": "#/$defs/String"
                },
                "platformFamily": {
                    "$ref": "#/$defs/String"
                },
                "networkConfiguration": {
                    "$ref": "#/$defs/NetworkConfiguration"
                },
                "rolloutState": {
                    "$ref": "#/$defs/DeploymentRolloutState"
                },
                "rolloutStateReason": {
                    "$ref": "#/$defs/String"
                },
                "serviceConnectConfiguration": {
                    "$ref": "#/$defs/ServiceConnectConfiguration"
                },
                "serviceConnectResources": {
                    "$ref": "#/$defs/ServiceConnectServiceResourceList"
                },
                "volumeConfigurations": {
                    "$ref": "#/$defs/ServiceVolumeConfigurations"
                },
                "fargateEphemeralStorage": {
                    "$ref": "#/$defs/DeploymentEphemeralStorage"
                }
            }
        },
        "DeploymentRolloutState": {
            "enum": [
                "COMPLETED",
                "FAILED",
                "IN_PROGRESS"
            ]
        },
        "ServiceConnectConfiguration": {
            "type": "object",
            "properties": {
                "enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "namespace": {
                    "$ref": "#/$defs/String"
                },
                "services": {
                    "$ref": "#/$defs/ServiceConnectServiceList"
                },
                "logConfiguration": {
                    "$ref": "#/$defs/LogConfiguration"
                }
            }
        },
        "ServiceConnectServiceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceConnectService"
            }
        },
        "ServiceConnectService": {
            "type": "object",
            "properties": {
                "portName": {
                    "$ref": "#/$defs/String"
                },
                "discoveryName": {
                    "$ref": "#/$defs/String"
                },
                "clientAliases": {
                    "$ref": "#/$defs/ServiceConnectClientAliasList"
                },
                "ingressPortOverride": {
                    "$ref": "#/$defs/PortNumber"
                },
                "timeout": {
                    "$ref": "#/$defs/TimeoutConfiguration"
                },
                "tls": {
                    "$ref": "#/$defs/ServiceConnectTlsConfiguration"
                }
            }
        },
        "ServiceConnectClientAliasList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceConnectClientAlias"
            }
        },
        "ServiceConnectClientAlias": {
            "type": "object",
            "properties": {
                "port": {
                    "$ref": "#/$defs/PortNumber"
                },
                "dnsName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PortNumber": {
            "type": "integer",
            "format": "int32"
        },
        "TimeoutConfiguration": {
            "type": "object",
            "properties": {
                "idleTimeoutSeconds": {
                    "$ref": "#/$defs/Duration"
                },
                "perRequestTimeoutSeconds": {
                    "$ref": "#/$defs/Duration"
                }
            }
        },
        "Duration": {
            "type": "integer",
            "format": "int32"
        },
        "ServiceConnectTlsConfiguration": {
            "type": "object",
            "properties": {
                "issuerCertificateAuthority": {
                    "$ref": "#/$defs/ServiceConnectTlsCertificateAuthority"
                },
                "kmsKey": {
                    "$ref": "#/$defs/String"
                },
                "roleArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceConnectTlsCertificateAuthority": {
            "type": "object",
            "properties": {
                "awsPcaAuthorityArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LogConfiguration": {
            "type": "object",
            "properties": {
                "logDriver": {
                    "$ref": "#/$defs/LogDriver"
                },
                "options": {
                    "$ref": "#/$defs/LogConfigurationOptionsMap"
                },
                "secretOptions": {
                    "$ref": "#/$defs/SecretList"
                }
            }
        },
        "LogDriver": {
            "enum": [
                "JSON_FILE",
                "SYSLOG",
                "JOURNALD",
                "GELF",
                "FLUENTD",
                "AWSLOGS",
                "SPLUNK",
                "AWSFIRELENS"
            ]
        },
        "LogConfigurationOptionsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "SecretList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Secret"
            }
        },
        "Secret": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "valueFrom": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceConnectServiceResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceConnectServiceResource"
            }
        },
        "ServiceConnectServiceResource": {
            "type": "object",
            "properties": {
                "discoveryName": {
                    "$ref": "#/$defs/String"
                },
                "discoveryArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceVolumeConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceVolumeConfiguration"
            }
        },
        "ServiceVolumeConfiguration": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ECSVolumeName"
                },
                "managedEBSVolume": {
                    "$ref": "#/$defs/ServiceManagedEBSVolumeConfiguration"
                }
            }
        },
        "ECSVolumeName": {
            "type": "string"
        },
        "ServiceManagedEBSVolumeConfiguration": {
            "type": "object",
            "properties": {
                "encrypted": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/EBSKMSKeyId"
                },
                "volumeType": {
                    "$ref": "#/$defs/EBSVolumeType"
                },
                "sizeInGiB": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "snapshotId": {
                    "$ref": "#/$defs/EBSSnapshotId"
                },
                "iops": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "throughput": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "tagSpecifications": {
                    "$ref": "#/$defs/EBSTagSpecifications"
                },
                "roleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "filesystemType": {
                    "$ref": "#/$defs/TaskFilesystemType"
                }
            }
        },
        "BoxedBoolean": {
            "type": "boolean"
        },
        "EBSKMSKeyId": {
            "type": "string"
        },
        "EBSVolumeType": {
            "type": "string"
        },
        "EBSSnapshotId": {
            "type": "string"
        },
        "EBSTagSpecifications": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EBSTagSpecification"
            }
        },
        "EBSTagSpecification": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/EBSResourceType"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "propagateTags": {
                    "$ref": "#/$defs/PropagateTags"
                }
            }
        },
        "EBSResourceType": {
            "enum": [
                "VOLUME"
            ]
        },
        "PropagateTags": {
            "enum": [
                "TASK_DEFINITION",
                "SERVICE",
                "NONE"
            ]
        },
        "IAMRoleArn": {
            "type": "string"
        },
        "TaskFilesystemType": {
            "enum": [
                "EXT3",
                "EXT4",
                "XFS"
            ]
        },
        "ServiceEvents": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceEvent"
            }
        },
        "ServiceEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PlacementConstraints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PlacementConstraint"
            }
        },
        "PlacementConstraint": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/PlacementConstraintType"
                },
                "expression": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PlacementConstraintType": {
            "enum": [
                "DISTINCT_INSTANCE",
                "MEMBER_OF"
            ]
        },
        "PlacementStrategies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PlacementStrategy"
            }
        },
        "PlacementStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/PlacementStrategyType"
                },
                "field": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PlacementStrategyType": {
            "enum": [
                "RANDOM",
                "SPREAD",
                "BINPACK"
            ]
        },
        "SchedulingStrategy": {
            "enum": [
                "REPLICA",
                "DAEMON"
            ]
        },
        "DeploymentController": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/DeploymentControllerType"
                }
            }
        },
        "DeploymentControllerType": {
            "enum": [
                "ECS",
                "CODE_DEPLOY",
                "EXTERNAL"
            ]
        },
        "CreateServiceRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "serviceName": {
                    "$ref": "#/$defs/String"
                },
                "taskDefinition": {
                    "$ref": "#/$defs/String"
                },
                "loadBalancers": {
                    "$ref": "#/$defs/LoadBalancers"
                },
                "serviceRegistries": {
                    "$ref": "#/$defs/ServiceRegistries"
                },
                "desiredCount": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "clientToken": {
                    "$ref": "#/$defs/String"
                },
                "launchType": {
                    "$ref": "#/$defs/LaunchType"
                },
                "capacityProviderStrategy": {
                    "$ref": "#/$defs/CapacityProviderStrategy"
                },
                "platformVersion": {
                    "$ref": "#/$defs/String"
                },
                "role": {
                    "$ref": "#/$defs/String"
                },
                "deploymentConfiguration": {
                    "$ref": "#/$defs/DeploymentConfiguration"
                },
                "placementConstraints": {
                    "$ref": "#/$defs/PlacementConstraints"
                },
                "placementStrategy": {
                    "$ref": "#/$defs/PlacementStrategies"
                },
                "networkConfiguration": {
                    "$ref": "#/$defs/NetworkConfiguration"
                },
                "healthCheckGracePeriodSeconds": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "schedulingStrategy": {
                    "$ref": "#/$defs/SchedulingStrategy"
                },
                "deploymentController": {
                    "$ref": "#/$defs/DeploymentController"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "enableECSManagedTags": {
                    "$ref": "#/$defs/Boolean"
                },
                "propagateTags": {
                    "$ref": "#/$defs/PropagateTags"
                },
                "enableExecuteCommand": {
                    "$ref": "#/$defs/Boolean"
                },
                "serviceConnectConfiguration": {
                    "$ref": "#/$defs/ServiceConnectConfiguration"
                },
                "volumeConfigurations": {
                    "$ref": "#/$defs/ServiceVolumeConfigurations"
                }
            }
        },
        "CreateTaskSetResponse": {
            "type": "object",
            "properties": {
                "taskSet": {
                    "$ref": "#/$defs/TaskSet"
                }
            }
        },
        "CreateTaskSetRequest": {
            "type": "object",
            "properties": {
                "service": {
                    "$ref": "#/$defs/String"
                },
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "externalId": {
                    "$ref": "#/$defs/String"
                },
                "taskDefinition": {
                    "$ref": "#/$defs/String"
                },
                "networkConfiguration": {
                    "$ref": "#/$defs/NetworkConfiguration"
                },
                "loadBalancers": {
                    "$ref": "#/$defs/LoadBalancers"
                },
                "serviceRegistries": {
                    "$ref": "#/$defs/ServiceRegistries"
                },
                "launchType": {
                    "$ref": "#/$defs/LaunchType"
                },
                "capacityProviderStrategy": {
                    "$ref": "#/$defs/CapacityProviderStrategy"
                },
                "platformVersion": {
                    "$ref": "#/$defs/String"
                },
                "scale": {
                    "$ref": "#/$defs/Scale"
                },
                "clientToken": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DeleteAccountSettingResponse": {
            "type": "object",
            "properties": {
                "setting": {
                    "$ref": "#/$defs/Setting"
                }
            }
        },
        "Setting": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/SettingName"
                },
                "value": {
                    "$ref": "#/$defs/String"
                },
                "principalArn": {
                    "$ref": "#/$defs/String"
                },
                "type": {
                    "$ref": "#/$defs/SettingType"
                }
            }
        },
        "SettingName": {
            "enum": [
                "SERVICE_LONG_ARN_FORMAT",
                "TASK_LONG_ARN_FORMAT",
                "CONTAINER_INSTANCE_LONG_ARN_FORMAT",
                "AWSVPC_TRUNKING",
                "CONTAINER_INSIGHTS",
                "FARGATE_FIPS_MODE",
                "TAG_RESOURCE_AUTHORIZATION",
                "FARGATE_TASK_RETIREMENT_WAIT_PERIOD",
                "GUARD_DUTY_ACTIVATE"
            ]
        },
        "SettingType": {
            "enum": [
                "USER",
                "AWS_MANAGED"
            ]
        },
        "DeleteAccountSettingRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/SettingName"
                },
                "principalArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteAttributesResponse": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                }
            }
        },
        "Attributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Attribute"
            }
        },
        "Attribute": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "value": {
                    "$ref": "#/$defs/String"
                },
                "targetType": {
                    "$ref": "#/$defs/TargetType"
                },
                "targetId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TargetType": {
            "enum": [
                "CONTAINER_INSTANCE"
            ]
        },
        "DeleteAttributesRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                }
            }
        },
        "DeleteCapacityProviderResponse": {
            "type": "object",
            "properties": {
                "capacityProvider": {
                    "$ref": "#/$defs/CapacityProvider"
                }
            }
        },
        "DeleteCapacityProviderRequest": {
            "type": "object",
            "properties": {
                "capacityProvider": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteClusterResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "DeleteClusterRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteServiceResponse": {
            "type": "object",
            "properties": {
                "service": {
                    "$ref": "#/$defs/Service"
                }
            }
        },
        "DeleteServiceRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "service": {
                    "$ref": "#/$defs/String"
                },
                "force": {
                    "$ref": "#/$defs/BoxedBoolean"
                }
            }
        },
        "DeleteTaskDefinitionsResponse": {
            "type": "object",
            "properties": {
                "taskDefinitions": {
                    "$ref": "#/$defs/TaskDefinitionList"
                },
                "failures": {
                    "$ref": "#/$defs/Failures"
                }
            }
        },
        "TaskDefinitionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaskDefinition"
            }
        },
        "TaskDefinition": {
            "type": "object",
            "properties": {
                "taskDefinitionArn": {
                    "$ref": "#/$defs/String"
                },
                "containerDefinitions": {
                    "$ref": "#/$defs/ContainerDefinitions"
                },
                "family": {
                    "$ref": "#/$defs/String"
                },
                "taskRoleArn": {
                    "$ref": "#/$defs/String"
                },
                "executionRoleArn": {
                    "$ref": "#/$defs/String"
                },
                "networkMode": {
                    "$ref": "#/$defs/NetworkMode"
                },
                "revision": {
                    "$ref": "#/$defs/Integer"
                },
                "volumes": {
                    "$ref": "#/$defs/VolumeList"
                },
                "status": {
                    "$ref": "#/$defs/TaskDefinitionStatus"
                },
                "requiresAttributes": {
                    "$ref": "#/$defs/RequiresAttributes"
                },
                "placementConstraints": {
                    "$ref": "#/$defs/TaskDefinitionPlacementConstraints"
                },
                "compatibilities": {
                    "$ref": "#/$defs/CompatibilityList"
                },
                "runtimePlatform": {
                    "$ref": "#/$defs/RuntimePlatform"
                },
                "requiresCompatibilities": {
                    "$ref": "#/$defs/CompatibilityList"
                },
                "cpu": {
                    "$ref": "#/$defs/String"
                },
                "memory": {
                    "$ref": "#/$defs/String"
                },
                "inferenceAccelerators": {
                    "$ref": "#/$defs/InferenceAccelerators"
                },
                "pidMode": {
                    "$ref": "#/$defs/PidMode"
                },
                "ipcMode": {
                    "$ref": "#/$defs/IpcMode"
                },
                "proxyConfiguration": {
                    "$ref": "#/$defs/ProxyConfiguration"
                },
                "registeredAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "deregisteredAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "registeredBy": {
                    "$ref": "#/$defs/String"
                },
                "ephemeralStorage": {
                    "$ref": "#/$defs/EphemeralStorage"
                }
            }
        },
        "ContainerDefinitions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerDefinition"
            }
        },
        "ContainerDefinition": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "image": {
                    "$ref": "#/$defs/String"
                },
                "repositoryCredentials": {
                    "$ref": "#/$defs/RepositoryCredentials"
                },
                "cpu": {
                    "$ref": "#/$defs/Integer"
                },
                "memory": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "memoryReservation": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "links": {
                    "$ref": "#/$defs/StringList"
                },
                "portMappings": {
                    "$ref": "#/$defs/PortMappingList"
                },
                "essential": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "restartPolicy": {
                    "$ref": "#/$defs/ContainerRestartPolicy"
                },
                "entryPoint": {
                    "$ref": "#/$defs/StringList"
                },
                "command": {
                    "$ref": "#/$defs/StringList"
                },
                "environment": {
                    "$ref": "#/$defs/EnvironmentVariables"
                },
                "environmentFiles": {
                    "$ref": "#/$defs/EnvironmentFiles"
                },
                "mountPoints": {
                    "$ref": "#/$defs/MountPointList"
                },
                "volumesFrom": {
                    "$ref": "#/$defs/VolumeFromList"
                },
                "linuxParameters": {
                    "$ref": "#/$defs/LinuxParameters"
                },
                "secrets": {
                    "$ref": "#/$defs/SecretList"
                },
                "dependsOn": {
                    "$ref": "#/$defs/ContainerDependencies"
                },
                "startTimeout": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "stopTimeout": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "hostname": {
                    "$ref": "#/$defs/String"
                },
                "user": {
                    "$ref": "#/$defs/String"
                },
                "workingDirectory": {
                    "$ref": "#/$defs/String"
                },
                "disableNetworking": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "privileged": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "readonlyRootFilesystem": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "dnsServers": {
                    "$ref": "#/$defs/StringList"
                },
                "dnsSearchDomains": {
                    "$ref": "#/$defs/StringList"
                },
                "extraHosts": {
                    "$ref": "#/$defs/HostEntryList"
                },
                "dockerSecurityOptions": {
                    "$ref": "#/$defs/StringList"
                },
                "interactive": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "pseudoTerminal": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "dockerLabels": {
                    "$ref": "#/$defs/DockerLabelsMap"
                },
                "ulimits": {
                    "$ref": "#/$defs/UlimitList"
                },
                "logConfiguration": {
                    "$ref": "#/$defs/LogConfiguration"
                },
                "healthCheck": {
                    "$ref": "#/$defs/HealthCheck"
                },
                "systemControls": {
                    "$ref": "#/$defs/SystemControls"
                },
                "resourceRequirements": {
                    "$ref": "#/$defs/ResourceRequirements"
                },
                "firelensConfiguration": {
                    "$ref": "#/$defs/FirelensConfiguration"
                },
                "credentialSpecs": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "RepositoryCredentials": {
            "type": "object",
            "properties": {
                "credentialsParameter": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PortMappingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PortMapping"
            }
        },
        "PortMapping": {
            "type": "object",
            "properties": {
                "containerPort": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "hostPort": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "protocol": {
                    "$ref": "#/$defs/TransportProtocol"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "appProtocol": {
                    "$ref": "#/$defs/ApplicationProtocol"
                },
                "containerPortRange": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransportProtocol": {
            "enum": [
                "TCP",
                "UDP"
            ]
        },
        "ApplicationProtocol": {
            "enum": [
                "HTTP",
                "HTTP2",
                "GRPC"
            ]
        },
        "ContainerRestartPolicy": {
            "type": "object",
            "properties": {
                "enabled": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "ignoredExitCodes": {
                    "$ref": "#/$defs/IntegerList"
                },
                "restartAttemptPeriod": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "IntegerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BoxedInteger"
            }
        },
        "EnvironmentVariables": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyValuePair"
            }
        },
        "EnvironmentFiles": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnvironmentFile"
            }
        },
        "EnvironmentFile": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/$defs/String"
                },
                "type": {
                    "$ref": "#/$defs/EnvironmentFileType"
                }
            }
        },
        "EnvironmentFileType": {
            "enum": [
                "S3"
            ]
        },
        "MountPointList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MountPoint"
            }
        },
        "MountPoint": {
            "type": "object",
            "properties": {
                "sourceVolume": {
                    "$ref": "#/$defs/String"
                },
                "containerPath": {
                    "$ref": "#/$defs/String"
                },
                "readOnly": {
                    "$ref": "#/$defs/BoxedBoolean"
                }
            }
        },
        "VolumeFromList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeFrom"
            }
        },
        "VolumeFrom": {
            "type": "object",
            "properties": {
                "sourceContainer": {
                    "$ref": "#/$defs/String"
                },
                "readOnly": {
                    "$ref": "#/$defs/BoxedBoolean"
                }
            }
        },
        "LinuxParameters": {
            "type": "object",
            "properties": {
                "capabilities": {
                    "$ref": "#/$defs/KernelCapabilities"
                },
                "devices": {
                    "$ref": "#/$defs/DevicesList"
                },
                "initProcessEnabled": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "sharedMemorySize": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "tmpfs": {
                    "$ref": "#/$defs/TmpfsList"
                },
                "maxSwap": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "swappiness": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "KernelCapabilities": {
            "type": "object",
            "properties": {
                "add": {
                    "$ref": "#/$defs/StringList"
                },
                "drop": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "DevicesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Device"
            }
        },
        "Device": {
            "type": "object",
            "properties": {
                "hostPath": {
                    "$ref": "#/$defs/String"
                },
                "containerPath": {
                    "$ref": "#/$defs/String"
                },
                "permissions": {
                    "$ref": "#/$defs/DeviceCgroupPermissions"
                }
            }
        },
        "DeviceCgroupPermissions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeviceCgroupPermission"
            }
        },
        "DeviceCgroupPermission": {
            "enum": [
                "READ",
                "WRITE",
                "MKNOD"
            ]
        },
        "TmpfsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tmpfs"
            }
        },
        "Tmpfs": {
            "type": "object",
            "properties": {
                "containerPath": {
                    "$ref": "#/$defs/String"
                },
                "size": {
                    "$ref": "#/$defs/Integer"
                },
                "mountOptions": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "ContainerDependencies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerDependency"
            }
        },
        "ContainerDependency": {
            "type": "object",
            "properties": {
                "containerName": {
                    "$ref": "#/$defs/String"
                },
                "condition": {
                    "$ref": "#/$defs/ContainerCondition"
                }
            }
        },
        "ContainerCondition": {
            "enum": [
                "START",
                "COMPLETE",
                "SUCCESS",
                "HEALTHY"
            ]
        },
        "HostEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HostEntry"
            }
        },
        "HostEntry": {
            "type": "object",
            "properties": {
                "hostname": {
                    "$ref": "#/$defs/String"
                },
                "ipAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DockerLabelsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "UlimitList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ulimit"
            }
        },
        "Ulimit": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/UlimitName"
                },
                "softLimit": {
                    "$ref": "#/$defs/Integer"
                },
                "hardLimit": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "UlimitName": {
            "enum": [
                "CORE",
                "CPU",
                "DATA",
                "FSIZE",
                "LOCKS",
                "MEMLOCK",
                "MSGQUEUE",
                "NICE",
                "NOFILE",
                "NPROC",
                "RSS",
                "RTPRIO",
                "RTTIME",
                "SIGPENDING",
                "STACK"
            ]
        },
        "HealthCheck": {
            "type": "object",
            "properties": {
                "command": {
                    "$ref": "#/$defs/StringList"
                },
                "interval": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "timeout": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "retries": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "startPeriod": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "SystemControls": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SystemControl"
            }
        },
        "SystemControl": {
            "type": "object",
            "properties": {
                "namespace": {
                    "$ref": "#/$defs/String"
                },
                "value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ResourceRequirements": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceRequirement"
            }
        },
        "ResourceRequirement": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/$defs/String"
                },
                "type": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "ResourceType": {
            "enum": [
                "GPU",
                "INFERENCE_ACCELERATOR"
            ]
        },
        "FirelensConfiguration": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/FirelensConfigurationType"
                },
                "options": {
                    "$ref": "#/$defs/FirelensConfigurationOptionsMap"
                }
            }
        },
        "FirelensConfigurationType": {
            "enum": [
                "FLUENTD",
                "FLUENTBIT"
            ]
        },
        "FirelensConfigurationOptionsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "NetworkMode": {
            "enum": [
                "BRIDGE",
                "HOST",
                "AWSVPC",
                "NONE"
            ]
        },
        "VolumeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Volume"
            }
        },
        "Volume": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "host": {
                    "$ref": "#/$defs/HostVolumeProperties"
                },
                "dockerVolumeConfiguration": {
                    "$ref": "#/$defs/DockerVolumeConfiguration"
                },
                "efsVolumeConfiguration": {
                    "$ref": "#/$defs/EFSVolumeConfiguration"
                },
                "fsxWindowsFileServerVolumeConfiguration": {
                    "$ref": "#/$defs/FSxWindowsFileServerVolumeConfiguration"
                },
                "configuredAtLaunch": {
                    "$ref": "#/$defs/BoxedBoolean"
                }
            }
        },
        "HostVolumeProperties": {
            "type": "object",
            "properties": {
                "sourcePath": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DockerVolumeConfiguration": {
            "type": "object",
            "properties": {
                "scope": {
                    "$ref": "#/$defs/Scope"
                },
                "autoprovision": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "driver": {
                    "$ref": "#/$defs/String"
                },
                "driverOpts": {
                    "$ref": "#/$defs/StringMap"
                },
                "labels": {
                    "$ref": "#/$defs/StringMap"
                }
            }
        },
        "Scope": {
            "enum": [
                "TASK",
                "SHARED"
            ]
        },
        "StringMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "EFSVolumeConfiguration": {
            "type": "object",
            "properties": {
                "fileSystemId": {
                    "$ref": "#/$defs/String"
                },
                "rootDirectory": {
                    "$ref": "#/$defs/String"
                },
                "transitEncryption": {
                    "$ref": "#/$defs/EFSTransitEncryption"
                },
                "transitEncryptionPort": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "authorizationConfig": {
                    "$ref": "#/$defs/EFSAuthorizationConfig"
                }
            }
        },
        "EFSTransitEncryption": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "EFSAuthorizationConfig": {
            "type": "object",
            "properties": {
                "accessPointId": {
                    "$ref": "#/$defs/String"
                },
                "iam": {
                    "$ref": "#/$defs/EFSAuthorizationConfigIAM"
                }
            }
        },
        "EFSAuthorizationConfigIAM": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "FSxWindowsFileServerVolumeConfiguration": {
            "type": "object",
            "properties": {
                "fileSystemId": {
                    "$ref": "#/$defs/String"
                },
                "rootDirectory": {
                    "$ref": "#/$defs/String"
                },
                "authorizationConfig": {
                    "$ref": "#/$defs/FSxWindowsFileServerAuthorizationConfig"
                }
            }
        },
        "FSxWindowsFileServerAuthorizationConfig": {
            "type": "object",
            "properties": {
                "credentialsParameter": {
                    "$ref": "#/$defs/String"
                },
                "domain": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TaskDefinitionStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE",
                "DELETE_IN_PROGRESS"
            ]
        },
        "RequiresAttributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Attribute"
            }
        },
        "TaskDefinitionPlacementConstraints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaskDefinitionPlacementConstraint"
            }
        },
        "TaskDefinitionPlacementConstraint": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/TaskDefinitionPlacementConstraintType"
                },
                "expression": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TaskDefinitionPlacementConstraintType": {
            "enum": [
                "MEMBER_OF"
            ]
        },
        "CompatibilityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Compatibility"
            }
        },
        "Compatibility": {
            "enum": [
                "EC2",
                "FARGATE",
                "EXTERNAL"
            ]
        },
        "RuntimePlatform": {
            "type": "object",
            "properties": {
                "cpuArchitecture": {
                    "$ref": "#/$defs/CPUArchitecture"
                },
                "operatingSystemFamily": {
                    "$ref": "#/$defs/OSFamily"
                }
            }
        },
        "CPUArchitecture": {
            "enum": [
                "X86_64",
                "ARM64"
            ]
        },
        "OSFamily": {
            "enum": [
                "WINDOWS_SERVER_2019_FULL",
                "WINDOWS_SERVER_2019_CORE",
                "WINDOWS_SERVER_2016_FULL",
                "WINDOWS_SERVER_2004_CORE",
                "WINDOWS_SERVER_2022_CORE",
                "WINDOWS_SERVER_2022_FULL",
                "WINDOWS_SERVER_20H2_CORE",
                "LINUX"
            ]
        },
        "InferenceAccelerators": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InferenceAccelerator"
            }
        },
        "InferenceAccelerator": {
            "type": "object",
            "properties": {
                "deviceName": {
                    "$ref": "#/$defs/String"
                },
                "deviceType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PidMode": {
            "enum": [
                "HOST",
                "TASK"
            ]
        },
        "IpcMode": {
            "enum": [
                "HOST",
                "TASK",
                "NONE"
            ]
        },
        "ProxyConfiguration": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/ProxyConfigurationType"
                },
                "containerName": {
                    "$ref": "#/$defs/String"
                },
                "properties": {
                    "$ref": "#/$defs/ProxyConfigurationProperties"
                }
            }
        },
        "ProxyConfigurationType": {
            "enum": [
                "APPMESH"
            ]
        },
        "ProxyConfigurationProperties": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyValuePair"
            }
        },
        "EphemeralStorage": {
            "type": "object",
            "properties": {
                "sizeInGiB": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "Failures": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Failure"
            }
        },
        "Failure": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/String"
                },
                "reason": {
                    "$ref": "#/$defs/String"
                },
                "detail": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteTaskDefinitionsRequest": {
            "type": "object",
            "properties": {
                "taskDefinitions": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "DeleteTaskSetResponse": {
            "type": "object",
            "properties": {
                "taskSet": {
                    "$ref": "#/$defs/TaskSet"
                }
            }
        },
        "DeleteTaskSetRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "service": {
                    "$ref": "#/$defs/String"
                },
                "taskSet": {
                    "$ref": "#/$defs/String"
                },
                "force": {
                    "$ref": "#/$defs/BoxedBoolean"
                }
            }
        },
        "DeregisterContainerInstanceResponse": {
            "type": "object",
            "properties": {
                "containerInstance": {
                    "$ref": "#/$defs/ContainerInstance"
                }
            }
        },
        "ContainerInstance": {
            "type": "object",
            "properties": {
                "containerInstanceArn": {
                    "$ref": "#/$defs/String"
                },
                "ec2InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "capacityProviderName": {
                    "$ref": "#/$defs/String"
                },
                "version": {
                    "$ref": "#/$defs/Long"
                },
                "versionInfo": {
                    "$ref": "#/$defs/VersionInfo"
                },
                "remainingResources": {
                    "$ref": "#/$defs/Resources"
                },
                "registeredResources": {
                    "$ref": "#/$defs/Resources"
                },
                "status": {
                    "$ref": "#/$defs/String"
                },
                "statusReason": {
                    "$ref": "#/$defs/String"
                },
                "agentConnected": {
                    "$ref": "#/$defs/Boolean"
                },
                "runningTasksCount": {
                    "$ref": "#/$defs/Integer"
                },
                "pendingTasksCount": {
                    "$ref": "#/$defs/Integer"
                },
                "agentUpdateStatus": {
                    "$ref": "#/$defs/AgentUpdateStatus"
                },
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "registeredAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "attachments": {
                    "$ref": "#/$defs/Attachments"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "healthStatus": {
                    "$ref": "#/$defs/ContainerInstanceHealthStatus"
                }
            }
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "VersionInfo": {
            "type": "object",
            "properties": {
                "agentVersion": {
                    "$ref": "#/$defs/String"
                },
                "agentHash": {
                    "$ref": "#/$defs/String"
                },
                "dockerVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Resources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Resource"
            }
        },
        "Resource": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "type": {
                    "$ref": "#/$defs/String"
                },
                "doubleValue": {
                    "$ref": "#/$defs/Double"
                },
                "longValue": {
                    "$ref": "#/$defs/Long"
                },
                "integerValue": {
                    "$ref": "#/$defs/Integer"
                },
                "stringSetValue": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "AgentUpdateStatus": {
            "enum": [
                "PENDING",
                "STAGING",
                "STAGED",
                "UPDATING",
                "UPDATED",
                "FAILED"
            ]
        },
        "ContainerInstanceHealthStatus": {
            "type": "object",
            "properties": {
                "overallStatus": {
                    "$ref": "#/$defs/InstanceHealthCheckState"
                },
                "details": {
                    "$ref": "#/$defs/InstanceHealthCheckResultList"
                }
            }
        },
        "InstanceHealthCheckState": {
            "enum": [
                "OK",
                "IMPAIRED",
                "INSUFFICIENT_DATA",
                "INITIALIZING"
            ]
        },
        "InstanceHealthCheckResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceHealthCheckResult"
            }
        },
        "InstanceHealthCheckResult": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/InstanceHealthCheckType"
                },
                "status": {
                    "$ref": "#/$defs/InstanceHealthCheckState"
                },
                "lastUpdated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastStatusChange": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "InstanceHealthCheckType": {
            "enum": [
                "CONTAINER_RUNTIME"
            ]
        },
        "DeregisterContainerInstanceRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "containerInstance": {
                    "$ref": "#/$defs/String"
                },
                "force": {
                    "$ref": "#/$defs/BoxedBoolean"
                }
            }
        },
        "DeregisterTaskDefinitionResponse": {
            "type": "object",
            "properties": {
                "taskDefinition": {
                    "$ref": "#/$defs/TaskDefinition"
                }
            }
        },
        "DeregisterTaskDefinitionRequest": {
            "type": "object",
            "properties": {
                "taskDefinition": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeCapacityProvidersResponse": {
            "type": "object",
            "properties": {
                "capacityProviders": {
                    "$ref": "#/$defs/CapacityProviders"
                },
                "failures": {
                    "$ref": "#/$defs/Failures"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CapacityProviders": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityProvider"
            }
        },
        "DescribeCapacityProvidersRequest": {
            "type": "object",
            "properties": {
                "capacityProviders": {
                    "$ref": "#/$defs/StringList"
                },
                "include": {
                    "$ref": "#/$defs/CapacityProviderFieldList"
                },
                "maxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CapacityProviderFieldList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityProviderField"
            }
        },
        "CapacityProviderField": {
            "enum": [
                "TAGS"
            ]
        },
        "DescribeClustersResponse": {
            "type": "object",
            "properties": {
                "clusters": {
                    "$ref": "#/$defs/Clusters"
                },
                "failures": {
                    "$ref": "#/$defs/Failures"
                }
            }
        },
        "Clusters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Cluster"
            }
        },
        "DescribeClustersRequest": {
            "type": "object",
            "properties": {
                "clusters": {
                    "$ref": "#/$defs/StringList"
                },
                "include": {
                    "$ref": "#/$defs/ClusterFieldList"
                }
            }
        },
        "ClusterFieldList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClusterField"
            }
        },
        "ClusterField": {
            "enum": [
                "ATTACHMENTS",
                "CONFIGURATIONS",
                "SETTINGS",
                "STATISTICS",
                "TAGS"
            ]
        },
        "DescribeContainerInstancesResponse": {
            "type": "object",
            "properties": {
                "containerInstances": {
                    "$ref": "#/$defs/ContainerInstances"
                },
                "failures": {
                    "$ref": "#/$defs/Failures"
                }
            }
        },
        "ContainerInstances": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerInstance"
            }
        },
        "DescribeContainerInstancesRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "containerInstances": {
                    "$ref": "#/$defs/StringList"
                },
                "include": {
                    "$ref": "#/$defs/ContainerInstanceFieldList"
                }
            }
        },
        "ContainerInstanceFieldList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerInstanceField"
            }
        },
        "ContainerInstanceField": {
            "enum": [
                "TAGS",
                "CONTAINER_INSTANCE_HEALTH"
            ]
        },
        "DescribeServicesResponse": {
            "type": "object",
            "properties": {
                "services": {
                    "$ref": "#/$defs/Services"
                },
                "failures": {
                    "$ref": "#/$defs/Failures"
                }
            }
        },
        "Services": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Service"
            }
        },
        "DescribeServicesRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "services": {
                    "$ref": "#/$defs/StringList"
                },
                "include": {
                    "$ref": "#/$defs/ServiceFieldList"
                }
            }
        },
        "ServiceFieldList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceField"
            }
        },
        "ServiceField": {
            "enum": [
                "TAGS"
            ]
        },
        "DescribeTaskDefinitionResponse": {
            "type": "object",
            "properties": {
                "taskDefinition": {
                    "$ref": "#/$defs/TaskDefinition"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DescribeTaskDefinitionRequest": {
            "type": "object",
            "properties": {
                "taskDefinition": {
                    "$ref": "#/$defs/String"
                },
                "include": {
                    "$ref": "#/$defs/TaskDefinitionFieldList"
                }
            }
        },
        "TaskDefinitionFieldList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaskDefinitionField"
            }
        },
        "TaskDefinitionField": {
            "enum": [
                "TAGS"
            ]
        },
        "DescribeTasksResponse": {
            "type": "object",
            "properties": {
                "tasks": {
                    "$ref": "#/$defs/Tasks"
                },
                "failures": {
                    "$ref": "#/$defs/Failures"
                }
            }
        },
        "Tasks": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Task"
            }
        },
        "Task": {
            "type": "object",
            "properties": {
                "attachments": {
                    "$ref": "#/$defs/Attachments"
                },
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "availabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "capacityProviderName": {
                    "$ref": "#/$defs/String"
                },
                "clusterArn": {
                    "$ref": "#/$defs/String"
                },
                "connectivity": {
                    "$ref": "#/$defs/Connectivity"
                },
                "connectivityAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "containerInstanceArn": {
                    "$ref": "#/$defs/String"
                },
                "containers": {
                    "$ref": "#/$defs/Containers"
                },
                "cpu": {
                    "$ref": "#/$defs/String"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "desiredStatus": {
                    "$ref": "#/$defs/String"
                },
                "enableExecuteCommand": {
                    "$ref": "#/$defs/Boolean"
                },
                "executionStoppedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "group": {
                    "$ref": "#/$defs/String"
                },
                "healthStatus": {
                    "$ref": "#/$defs/HealthStatus"
                },
                "inferenceAccelerators": {
                    "$ref": "#/$defs/InferenceAccelerators"
                },
                "lastStatus": {
                    "$ref": "#/$defs/String"
                },
                "launchType": {
                    "$ref": "#/$defs/LaunchType"
                },
                "memory": {
                    "$ref": "#/$defs/String"
                },
                "overrides": {
                    "$ref": "#/$defs/TaskOverride"
                },
                "platformVersion": {
                    "$ref": "#/$defs/String"
                },
                "platformFamily": {
                    "$ref": "#/$defs/String"
                },
                "pullStartedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "pullStoppedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "startedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "startedBy": {
                    "$ref": "#/$defs/String"
                },
                "stopCode": {
                    "$ref": "#/$defs/TaskStopCode"
                },
                "stoppedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "stoppedReason": {
                    "$ref": "#/$defs/String"
                },
                "stoppingAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "taskArn": {
                    "$ref": "#/$defs/String"
                },
                "taskDefinitionArn": {
                    "$ref": "#/$defs/String"
                },
                "version": {
                    "$ref": "#/$defs/Long"
                },
                "ephemeralStorage": {
                    "$ref": "#/$defs/EphemeralStorage"
                },
                "fargateEphemeralStorage": {
                    "$ref": "#/$defs/TaskEphemeralStorage"
                }
            }
        },
        "Connectivity": {
            "enum": [
                "CONNECTED",
                "DISCONNECTED"
            ]
        },
        "Containers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Container"
            }
        },
        "Container": {
            "type": "object",
            "properties": {
                "containerArn": {
                    "$ref": "#/$defs/String"
                },
                "taskArn": {
                    "$ref": "#/$defs/String"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "image": {
                    "$ref": "#/$defs/String"
                },
                "imageDigest": {
                    "$ref": "#/$defs/String"
                },
                "runtimeId": {
                    "$ref": "#/$defs/String"
                },
                "lastStatus": {
                    "$ref": "#/$defs/String"
                },
                "exitCode": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "reason": {
                    "$ref": "#/$defs/String"
                },
                "networkBindings": {
                    "$ref": "#/$defs/NetworkBindings"
                },
                "networkInterfaces": {
                    "$ref": "#/$defs/NetworkInterfaces"
                },
                "healthStatus": {
                    "$ref": "#/$defs/HealthStatus"
                },
                "managedAgents": {
                    "$ref": "#/$defs/ManagedAgents"
                },
                "cpu": {
                    "$ref": "#/$defs/String"
                },
                "memory": {
                    "$ref": "#/$defs/String"
                },
                "memoryReservation": {
                    "$ref": "#/$defs/String"
                },
                "gpuIds": {
                    "$ref": "#/$defs/GpuIds"
                }
            }
        },
        "NetworkBindings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkBinding"
            }
        },
        "NetworkBinding": {
            "type": "object",
            "properties": {
                "bindIP": {
                    "$ref": "#/$defs/String"
                },
                "containerPort": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "hostPort": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "protocol": {
                    "$ref": "#/$defs/TransportProtocol"
                },
                "containerPortRange": {
                    "$ref": "#/$defs/String"
                },
                "hostPortRange": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInterfaces": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInterface"
            }
        },
        "NetworkInterface": {
            "type": "object",
            "properties": {
                "attachmentId": {
                    "$ref": "#/$defs/String"
                },
                "privateIpv4Address": {
                    "$ref": "#/$defs/String"
                },
                "ipv6Address": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "HealthStatus": {
            "enum": [
                "HEALTHY",
                "UNHEALTHY",
                "UNKNOWN"
            ]
        },
        "ManagedAgents": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ManagedAgent"
            }
        },
        "ManagedAgent": {
            "type": "object",
            "properties": {
                "lastStartedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "name": {
                    "$ref": "#/$defs/ManagedAgentName"
                },
                "reason": {
                    "$ref": "#/$defs/String"
                },
                "lastStatus": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ManagedAgentName": {
            "enum": [
                "ExecuteCommandAgent"
            ]
        },
        "GpuIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "TaskOverride": {
            "type": "object",
            "properties": {
                "containerOverrides": {
                    "$ref": "#/$defs/ContainerOverrides"
                },
                "cpu": {
                    "$ref": "#/$defs/String"
                },
                "inferenceAcceleratorOverrides": {
                    "$ref": "#/$defs/InferenceAcceleratorOverrides"
                },
                "executionRoleArn": {
                    "$ref": "#/$defs/String"
                },
                "memory": {
                    "$ref": "#/$defs/String"
                },
                "taskRoleArn": {
                    "$ref": "#/$defs/String"
                },
                "ephemeralStorage": {
                    "$ref": "#/$defs/EphemeralStorage"
                }
            }
        },
        "ContainerOverrides": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerOverride"
            }
        },
        "ContainerOverride": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "command": {
                    "$ref": "#/$defs/StringList"
                },
                "environment": {
                    "$ref": "#/$defs/EnvironmentVariables"
                },
                "environmentFiles": {
                    "$ref": "#/$defs/EnvironmentFiles"
                },
                "cpu": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "memory": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "memoryReservation": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "resourceRequirements": {
                    "$ref": "#/$defs/ResourceRequirements"
                }
            }
        },
        "InferenceAcceleratorOverrides": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InferenceAcceleratorOverride"
            }
        },
        "InferenceAcceleratorOverride": {
            "type": "object",
            "properties": {
                "deviceName": {
                    "$ref": "#/$defs/String"
                },
                "deviceType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TaskStopCode": {
            "enum": [
                "TASK_FAILED_TO_START",
                "ESSENTIAL_CONTAINER_EXITED",
                "USER_INITIATED",
                "SERVICE_SCHEDULER_INITIATED",
                "SPOT_INTERRUPTION",
                "TERMINATION_NOTICE"
            ]
        },
        "TaskEphemeralStorage": {
            "type": "object",
            "properties": {
                "sizeInGiB": {
                    "$ref": "#/$defs/Integer"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeTasksRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "tasks": {
                    "$ref": "#/$defs/StringList"
                },
                "include": {
                    "$ref": "#/$defs/TaskFieldList"
                }
            }
        },
        "TaskFieldList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaskField"
            }
        },
        "TaskField": {
            "enum": [
                "TAGS"
            ]
        },
        "DescribeTaskSetsResponse": {
            "type": "object",
            "properties": {
                "taskSets": {
                    "$ref": "#/$defs/TaskSets"
                },
                "failures": {
                    "$ref": "#/$defs/Failures"
                }
            }
        },
        "DescribeTaskSetsRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "service": {
                    "$ref": "#/$defs/String"
                },
                "taskSets": {
                    "$ref": "#/$defs/StringList"
                },
                "include": {
                    "$ref": "#/$defs/TaskSetFieldList"
                }
            }
        },
        "TaskSetFieldList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaskSetField"
            }
        },
        "TaskSetField": {
            "enum": [
                "TAGS"
            ]
        },
        "DiscoverPollEndpointResponse": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "$ref": "#/$defs/String"
                },
                "telemetryEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "serviceConnectEndpoint": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DiscoverPollEndpointRequest": {
            "type": "object",
            "properties": {
                "containerInstance": {
                    "$ref": "#/$defs/String"
                },
                "cluster": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ExecuteCommandResponse": {
            "type": "object",
            "properties": {
                "clusterArn": {
                    "$ref": "#/$defs/String"
                },
                "containerArn": {
                    "$ref": "#/$defs/String"
                },
                "containerName": {
                    "$ref": "#/$defs/String"
                },
                "interactive": {
                    "$ref": "#/$defs/Boolean"
                },
                "session": {
                    "$ref": "#/$defs/Session"
                },
                "taskArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Session": {
            "type": "object",
            "properties": {
                "sessionId": {
                    "$ref": "#/$defs/String"
                },
                "streamUrl": {
                    "$ref": "#/$defs/String"
                },
                "tokenValue": {
                    "$ref": "#/$defs/SensitiveString"
                }
            }
        },
        "SensitiveString": {
            "type": "string"
        },
        "ExecuteCommandRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "container": {
                    "$ref": "#/$defs/String"
                },
                "command": {
                    "$ref": "#/$defs/String"
                },
                "interactive": {
                    "$ref": "#/$defs/Boolean"
                },
                "task": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetTaskProtectionResponse": {
            "type": "object",
            "properties": {
                "protectedTasks": {
                    "$ref": "#/$defs/ProtectedTasks"
                },
                "failures": {
                    "$ref": "#/$defs/Failures"
                }
            }
        },
        "ProtectedTasks": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProtectedTask"
            }
        },
        "ProtectedTask": {
            "type": "object",
            "properties": {
                "taskArn": {
                    "$ref": "#/$defs/String"
                },
                "protectionEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "expirationDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "GetTaskProtectionRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "tasks": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "ListAccountSettingsResponse": {
            "type": "object",
            "properties": {
                "settings": {
                    "$ref": "#/$defs/Settings"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Settings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Setting"
            }
        },
        "ListAccountSettingsRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/SettingName"
                },
                "value": {
                    "$ref": "#/$defs/String"
                },
                "principalArn": {
                    "$ref": "#/$defs/String"
                },
                "effectiveSettings": {
                    "$ref": "#/$defs/Boolean"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                },
                "maxResults": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ListAttributesResponse": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListAttributesRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "targetType": {
                    "$ref": "#/$defs/TargetType"
                },
                "attributeName": {
                    "$ref": "#/$defs/String"
                },
                "attributeValue": {
                    "$ref": "#/$defs/String"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                },
                "maxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "ListClustersResponse": {
            "type": "object",
            "properties": {
                "clusterArns": {
                    "$ref": "#/$defs/StringList"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListClustersRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/String"
                },
                "maxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "ListContainerInstancesResponse": {
            "type": "object",
            "properties": {
                "containerInstanceArns": {
                    "$ref": "#/$defs/StringList"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListContainerInstancesRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "filter": {
                    "$ref": "#/$defs/String"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                },
                "maxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "status": {
                    "$ref": "#/$defs/ContainerInstanceStatus"
                }
            }
        },
        "ContainerInstanceStatus": {
            "enum": [
                "ACTIVE",
                "DRAINING",
                "REGISTERING",
                "DEREGISTERING",
                "REGISTRATION_FAILED"
            ]
        },
        "ListServicesResponse": {
            "type": "object",
            "properties": {
                "serviceArns": {
                    "$ref": "#/$defs/StringList"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListServicesRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                },
                "maxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "launchType": {
                    "$ref": "#/$defs/LaunchType"
                },
                "schedulingStrategy": {
                    "$ref": "#/$defs/SchedulingStrategy"
                }
            }
        },
        "ListServicesByNamespaceResponse": {
            "type": "object",
            "properties": {
                "serviceArns": {
                    "$ref": "#/$defs/StringList"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListServicesByNamespaceRequest": {
            "type": "object",
            "properties": {
                "namespace": {
                    "$ref": "#/$defs/String"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                },
                "maxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListTaskDefinitionFamiliesResponse": {
            "type": "object",
            "properties": {
                "families": {
                    "$ref": "#/$defs/StringList"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListTaskDefinitionFamiliesRequest": {
            "type": "object",
            "properties": {
                "familyPrefix": {
                    "$ref": "#/$defs/String"
                },
                "status": {
                    "$ref": "#/$defs/TaskDefinitionFamilyStatus"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                },
                "maxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "TaskDefinitionFamilyStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE",
                "ALL"
            ]
        },
        "ListTaskDefinitionsResponse": {
            "type": "object",
            "properties": {
                "taskDefinitionArns": {
                    "$ref": "#/$defs/StringList"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListTaskDefinitionsRequest": {
            "type": "object",
            "properties": {
                "familyPrefix": {
                    "$ref": "#/$defs/String"
                },
                "status": {
                    "$ref": "#/$defs/TaskDefinitionStatus"
                },
                "sort": {
                    "$ref": "#/$defs/SortOrder"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                },
                "maxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "SortOrder": {
            "enum": [
                "ASC",
                "DESC"
            ]
        },
        "ListTasksResponse": {
            "type": "object",
            "properties": {
                "taskArns": {
                    "$ref": "#/$defs/StringList"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListTasksRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "containerInstance": {
                    "$ref": "#/$defs/String"
                },
                "family": {
                    "$ref": "#/$defs/String"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                },
                "maxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "startedBy": {
                    "$ref": "#/$defs/String"
                },
                "serviceName": {
                    "$ref": "#/$defs/String"
                },
                "desiredStatus": {
                    "$ref": "#/$defs/DesiredStatus"
                },
                "launchType": {
                    "$ref": "#/$defs/LaunchType"
                }
            }
        },
        "DesiredStatus": {
            "enum": [
                "RUNNING",
                "PENDING",
                "STOPPED"
            ]
        },
        "PutAccountSettingResponse": {
            "type": "object",
            "properties": {
                "setting": {
                    "$ref": "#/$defs/Setting"
                }
            }
        },
        "PutAccountSettingRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/SettingName"
                },
                "value": {
                    "$ref": "#/$defs/String"
                },
                "principalArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PutAccountSettingDefaultResponse": {
            "type": "object",
            "properties": {
                "setting": {
                    "$ref": "#/$defs/Setting"
                }
            }
        },
        "PutAccountSettingDefaultRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/SettingName"
                },
                "value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PutAttributesResponse": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                }
            }
        },
        "PutAttributesRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                }
            }
        },
        "PutClusterCapacityProvidersResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "PutClusterCapacityProvidersRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "capacityProviders": {
                    "$ref": "#/$defs/StringList"
                },
                "defaultCapacityProviderStrategy": {
                    "$ref": "#/$defs/CapacityProviderStrategy"
                }
            }
        },
        "RegisterContainerInstanceResponse": {
            "type": "object",
            "properties": {
                "containerInstance": {
                    "$ref": "#/$defs/ContainerInstance"
                }
            }
        },
        "RegisterContainerInstanceRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "instanceIdentityDocument": {
                    "$ref": "#/$defs/String"
                },
                "instanceIdentityDocumentSignature": {
                    "$ref": "#/$defs/String"
                },
                "totalResources": {
                    "$ref": "#/$defs/Resources"
                },
                "versionInfo": {
                    "$ref": "#/$defs/VersionInfo"
                },
                "containerInstanceArn": {
                    "$ref": "#/$defs/String"
                },
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "platformDevices": {
                    "$ref": "#/$defs/PlatformDevices"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "PlatformDevices": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PlatformDevice"
            }
        },
        "PlatformDevice": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "type": {
                    "$ref": "#/$defs/PlatformDeviceType"
                }
            }
        },
        "PlatformDeviceType": {
            "enum": [
                "GPU"
            ]
        },
        "RegisterTaskDefinitionResponse": {
            "type": "object",
            "properties": {
                "taskDefinition": {
                    "$ref": "#/$defs/TaskDefinition"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "RegisterTaskDefinitionRequest": {
            "type": "object",
            "properties": {
                "family": {
                    "$ref": "#/$defs/String"
                },
                "taskRoleArn": {
                    "$ref": "#/$defs/String"
                },
                "executionRoleArn": {
                    "$ref": "#/$defs/String"
                },
                "networkMode": {
                    "$ref": "#/$defs/NetworkMode"
                },
                "containerDefinitions": {
                    "$ref": "#/$defs/ContainerDefinitions"
                },
                "volumes": {
                    "$ref": "#/$defs/VolumeList"
                },
                "placementConstraints": {
                    "$ref": "#/$defs/TaskDefinitionPlacementConstraints"
                },
                "requiresCompatibilities": {
                    "$ref": "#/$defs/CompatibilityList"
                },
                "cpu": {
                    "$ref": "#/$defs/String"
                },
                "memory": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "pidMode": {
                    "$ref": "#/$defs/PidMode"
                },
                "ipcMode": {
                    "$ref": "#/$defs/IpcMode"
                },
                "proxyConfiguration": {
                    "$ref": "#/$defs/ProxyConfiguration"
                },
                "inferenceAccelerators": {
                    "$ref": "#/$defs/InferenceAccelerators"
                },
                "ephemeralStorage": {
                    "$ref": "#/$defs/EphemeralStorage"
                },
                "runtimePlatform": {
                    "$ref": "#/$defs/RuntimePlatform"
                }
            }
        },
        "RunTaskResponse": {
            "type": "object",
            "properties": {
                "tasks": {
                    "$ref": "#/$defs/Tasks"
                },
                "failures": {
                    "$ref": "#/$defs/Failures"
                }
            }
        },
        "RunTaskRequest": {
            "type": "object",
            "properties": {
                "capacityProviderStrategy": {
                    "$ref": "#/$defs/CapacityProviderStrategy"
                },
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "count": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "enableECSManagedTags": {
                    "$ref": "#/$defs/Boolean"
                },
                "enableExecuteCommand": {
                    "$ref": "#/$defs/Boolean"
                },
                "group": {
                    "$ref": "#/$defs/String"
                },
                "launchType": {
                    "$ref": "#/$defs/LaunchType"
                },
                "networkConfiguration": {
                    "$ref": "#/$defs/NetworkConfiguration"
                },
                "overrides": {
                    "$ref": "#/$defs/TaskOverride"
                },
                "placementConstraints": {
                    "$ref": "#/$defs/PlacementConstraints"
                },
                "placementStrategy": {
                    "$ref": "#/$defs/PlacementStrategies"
                },
                "platformVersion": {
                    "$ref": "#/$defs/String"
                },
                "propagateTags": {
                    "$ref": "#/$defs/PropagateTags"
                },
                "referenceId": {
                    "$ref": "#/$defs/String"
                },
                "startedBy": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "taskDefinition": {
                    "$ref": "#/$defs/String"
                },
                "clientToken": {
                    "$ref": "#/$defs/String"
                },
                "volumeConfigurations": {
                    "$ref": "#/$defs/TaskVolumeConfigurations"
                }
            }
        },
        "TaskVolumeConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaskVolumeConfiguration"
            }
        },
        "TaskVolumeConfiguration": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ECSVolumeName"
                },
                "managedEBSVolume": {
                    "$ref": "#/$defs/TaskManagedEBSVolumeConfiguration"
                }
            }
        },
        "TaskManagedEBSVolumeConfiguration": {
            "type": "object",
            "properties": {
                "encrypted": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/EBSKMSKeyId"
                },
                "volumeType": {
                    "$ref": "#/$defs/EBSVolumeType"
                },
                "sizeInGiB": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "snapshotId": {
                    "$ref": "#/$defs/EBSSnapshotId"
                },
                "iops": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "throughput": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "tagSpecifications": {
                    "$ref": "#/$defs/EBSTagSpecifications"
                },
                "roleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "terminationPolicy": {
                    "$ref": "#/$defs/TaskManagedEBSVolumeTerminationPolicy"
                },
                "filesystemType": {
                    "$ref": "#/$defs/TaskFilesystemType"
                }
            }
        },
        "TaskManagedEBSVolumeTerminationPolicy": {
            "type": "object",
            "properties": {
                "deleteOnTermination": {
                    "$ref": "#/$defs/BoxedBoolean"
                }
            }
        },
        "StartTaskResponse": {
            "type": "object",
            "properties": {
                "tasks": {
                    "$ref": "#/$defs/Tasks"
                },
                "failures": {
                    "$ref": "#/$defs/Failures"
                }
            }
        },
        "StartTaskRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "containerInstances": {
                    "$ref": "#/$defs/StringList"
                },
                "enableECSManagedTags": {
                    "$ref": "#/$defs/Boolean"
                },
                "enableExecuteCommand": {
                    "$ref": "#/$defs/Boolean"
                },
                "group": {
                    "$ref": "#/$defs/String"
                },
                "networkConfiguration": {
                    "$ref": "#/$defs/NetworkConfiguration"
                },
                "overrides": {
                    "$ref": "#/$defs/TaskOverride"
                },
                "propagateTags": {
                    "$ref": "#/$defs/PropagateTags"
                },
                "referenceId": {
                    "$ref": "#/$defs/String"
                },
                "startedBy": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "taskDefinition": {
                    "$ref": "#/$defs/String"
                },
                "volumeConfigurations": {
                    "$ref": "#/$defs/TaskVolumeConfigurations"
                }
            }
        },
        "StopTaskResponse": {
            "type": "object",
            "properties": {
                "task": {
                    "$ref": "#/$defs/Task"
                }
            }
        },
        "StopTaskRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "task": {
                    "$ref": "#/$defs/String"
                },
                "reason": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubmitAttachmentStateChangesResponse": {
            "type": "object",
            "properties": {
                "acknowledgment": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubmitAttachmentStateChangesRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "attachments": {
                    "$ref": "#/$defs/AttachmentStateChanges"
                }
            }
        },
        "AttachmentStateChanges": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttachmentStateChange"
            }
        },
        "AttachmentStateChange": {
            "type": "object",
            "properties": {
                "attachmentArn": {
                    "$ref": "#/$defs/String"
                },
                "status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubmitContainerStateChangeResponse": {
            "type": "object",
            "properties": {
                "acknowledgment": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubmitContainerStateChangeRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "task": {
                    "$ref": "#/$defs/String"
                },
                "containerName": {
                    "$ref": "#/$defs/String"
                },
                "runtimeId": {
                    "$ref": "#/$defs/String"
                },
                "status": {
                    "$ref": "#/$defs/String"
                },
                "exitCode": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "reason": {
                    "$ref": "#/$defs/String"
                },
                "networkBindings": {
                    "$ref": "#/$defs/NetworkBindings"
                }
            }
        },
        "SubmitTaskStateChangeResponse": {
            "type": "object",
            "properties": {
                "acknowledgment": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubmitTaskStateChangeRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "task": {
                    "$ref": "#/$defs/String"
                },
                "status": {
                    "$ref": "#/$defs/String"
                },
                "reason": {
                    "$ref": "#/$defs/String"
                },
                "containers": {
                    "$ref": "#/$defs/ContainerStateChanges"
                },
                "attachments": {
                    "$ref": "#/$defs/AttachmentStateChanges"
                },
                "managedAgents": {
                    "$ref": "#/$defs/ManagedAgentStateChanges"
                },
                "pullStartedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "pullStoppedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "executionStoppedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ContainerStateChanges": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerStateChange"
            }
        },
        "ContainerStateChange": {
            "type": "object",
            "properties": {
                "containerName": {
                    "$ref": "#/$defs/String"
                },
                "imageDigest": {
                    "$ref": "#/$defs/String"
                },
                "runtimeId": {
                    "$ref": "#/$defs/String"
                },
                "exitCode": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "networkBindings": {
                    "$ref": "#/$defs/NetworkBindings"
                },
                "reason": {
                    "$ref": "#/$defs/String"
                },
                "status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ManagedAgentStateChanges": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ManagedAgentStateChange"
            }
        },
        "ManagedAgentStateChange": {
            "type": "object",
            "properties": {
                "containerName": {
                    "$ref": "#/$defs/String"
                },
                "managedAgentName": {
                    "$ref": "#/$defs/ManagedAgentName"
                },
                "status": {
                    "$ref": "#/$defs/String"
                },
                "reason": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/String"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/String"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "TagKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateCapacityProviderResponse": {
            "type": "object",
            "properties": {
                "capacityProvider": {
                    "$ref": "#/$defs/CapacityProvider"
                }
            }
        },
        "UpdateCapacityProviderRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "autoScalingGroupProvider": {
                    "$ref": "#/$defs/AutoScalingGroupProviderUpdate"
                }
            }
        },
        "AutoScalingGroupProviderUpdate": {
            "type": "object",
            "properties": {
                "managedScaling": {
                    "$ref": "#/$defs/ManagedScaling"
                },
                "managedTerminationProtection": {
                    "$ref": "#/$defs/ManagedTerminationProtection"
                },
                "managedDraining": {
                    "$ref": "#/$defs/ManagedDraining"
                }
            }
        },
        "UpdateClusterResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "UpdateClusterRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "settings": {
                    "$ref": "#/$defs/ClusterSettings"
                },
                "configuration": {
                    "$ref": "#/$defs/ClusterConfiguration"
                },
                "serviceConnectDefaults": {
                    "$ref": "#/$defs/ClusterServiceConnectDefaultsRequest"
                }
            }
        },
        "UpdateClusterSettingsResponse": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "UpdateClusterSettingsRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "settings": {
                    "$ref": "#/$defs/ClusterSettings"
                }
            }
        },
        "UpdateContainerAgentResponse": {
            "type": "object",
            "properties": {
                "containerInstance": {
                    "$ref": "#/$defs/ContainerInstance"
                }
            }
        },
        "UpdateContainerAgentRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "containerInstance": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpdateContainerInstancesStateResponse": {
            "type": "object",
            "properties": {
                "containerInstances": {
                    "$ref": "#/$defs/ContainerInstances"
                },
                "failures": {
                    "$ref": "#/$defs/Failures"
                }
            }
        },
        "UpdateContainerInstancesStateRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "containerInstances": {
                    "$ref": "#/$defs/StringList"
                },
                "status": {
                    "$ref": "#/$defs/ContainerInstanceStatus"
                }
            }
        },
        "UpdateServiceResponse": {
            "type": "object",
            "properties": {
                "service": {
                    "$ref": "#/$defs/Service"
                }
            }
        },
        "UpdateServiceRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "service": {
                    "$ref": "#/$defs/String"
                },
                "desiredCount": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "taskDefinition": {
                    "$ref": "#/$defs/String"
                },
                "capacityProviderStrategy": {
                    "$ref": "#/$defs/CapacityProviderStrategy"
                },
                "deploymentConfiguration": {
                    "$ref": "#/$defs/DeploymentConfiguration"
                },
                "networkConfiguration": {
                    "$ref": "#/$defs/NetworkConfiguration"
                },
                "placementConstraints": {
                    "$ref": "#/$defs/PlacementConstraints"
                },
                "placementStrategy": {
                    "$ref": "#/$defs/PlacementStrategies"
                },
                "platformVersion": {
                    "$ref": "#/$defs/String"
                },
                "forceNewDeployment": {
                    "$ref": "#/$defs/Boolean"
                },
                "healthCheckGracePeriodSeconds": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "enableExecuteCommand": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "enableECSManagedTags": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "loadBalancers": {
                    "$ref": "#/$defs/LoadBalancers"
                },
                "propagateTags": {
                    "$ref": "#/$defs/PropagateTags"
                },
                "serviceRegistries": {
                    "$ref": "#/$defs/ServiceRegistries"
                },
                "serviceConnectConfiguration": {
                    "$ref": "#/$defs/ServiceConnectConfiguration"
                },
                "volumeConfigurations": {
                    "$ref": "#/$defs/ServiceVolumeConfigurations"
                }
            }
        },
        "UpdateServicePrimaryTaskSetResponse": {
            "type": "object",
            "properties": {
                "taskSet": {
                    "$ref": "#/$defs/TaskSet"
                }
            }
        },
        "UpdateServicePrimaryTaskSetRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "service": {
                    "$ref": "#/$defs/String"
                },
                "primaryTaskSet": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpdateTaskProtectionResponse": {
            "type": "object",
            "properties": {
                "protectedTasks": {
                    "$ref": "#/$defs/ProtectedTasks"
                },
                "failures": {
                    "$ref": "#/$defs/Failures"
                }
            }
        },
        "UpdateTaskProtectionRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "tasks": {
                    "$ref": "#/$defs/StringList"
                },
                "protectionEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "expiresInMinutes": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "UpdateTaskSetResponse": {
            "type": "object",
            "properties": {
                "taskSet": {
                    "$ref": "#/$defs/TaskSet"
                }
            }
        },
        "UpdateTaskSetRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "$ref": "#/$defs/String"
                },
                "service": {
                    "$ref": "#/$defs/String"
                },
                "taskSet": {
                    "$ref": "#/$defs/String"
                },
                "scale": {
                    "$ref": "#/$defs/Scale"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://ecs-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://ecs-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://ecs.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://ecs.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}