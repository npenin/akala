{
    "name": "es",
    "commands": [
        {
            "name": "AcceptInboundConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AcceptInboundConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptInboundConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AcceptInboundConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddDataSource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AddDataSource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddDataSourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddDataSourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AddTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociatePackage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociatePackage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociatePackageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociatePackageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AuthorizeVpcEndpointAccess",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AuthorizeVpcEndpointAccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AuthorizeVpcEndpointAccessResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AuthorizeVpcEndpointAccessRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelDomainConfigChange",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelDomainConfigChange"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelDomainConfigChangeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelDomainConfigChangeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelServiceSoftwareUpdate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelServiceSoftwareUpdate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelServiceSoftwareUpdateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelServiceSoftwareUpdateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDomainResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateOutboundConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateOutboundConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateOutboundConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateOutboundConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePackage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreatePackage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePackageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePackageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVpcEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateVpcEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpcEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpcEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDataSource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteDataSource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDataSourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDataSourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDomainResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteInboundConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteInboundConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteInboundConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteInboundConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteOutboundConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteOutboundConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteOutboundConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteOutboundConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePackage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeletePackage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePackageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePackageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVpcEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteVpcEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVpcEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpcEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDomainResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDomainAutoTunes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeDomainAutoTunes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDomainAutoTunesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDomainAutoTunesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDomainChangeProgress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeDomainChangeProgress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDomainChangeProgressResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDomainChangeProgressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDomainConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeDomainConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDomainConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDomainConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDomainHealth",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeDomainHealth"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDomainHealthResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDomainHealthRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDomainNodes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeDomainNodes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDomainNodesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDomainNodesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDomains",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeDomains"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDomainsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDomainsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDryRunProgress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeDryRunProgress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDryRunProgressResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDryRunProgressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInboundConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeInboundConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInboundConnectionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInboundConnectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstanceTypeLimits",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeInstanceTypeLimits"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInstanceTypeLimitsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstanceTypeLimitsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeOutboundConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeOutboundConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeOutboundConnectionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeOutboundConnectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribePackages",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribePackages"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePackagesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePackagesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReservedInstanceOfferings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeReservedInstanceOfferings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReservedInstanceOfferingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReservedInstanceOfferingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReservedInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeReservedInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReservedInstancesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReservedInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeVpcEndpoints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcEndpointsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcEndpointsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DissociatePackage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DissociatePackage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DissociatePackageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DissociatePackageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCompatibleVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCompatibleVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCompatibleVersionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCompatibleVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataSource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDataSource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataSourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataSourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDomainMaintenanceStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDomainMaintenanceStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDomainMaintenanceStatusResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDomainMaintenanceStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPackageVersionHistory",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPackageVersionHistory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPackageVersionHistoryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPackageVersionHistoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetUpgradeHistory",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetUpgradeHistory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUpgradeHistoryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUpgradeHistoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetUpgradeStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetUpgradeStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUpgradeStatusResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUpgradeStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDataSources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDataSources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDataSourcesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDataSourcesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDomainMaintenances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDomainMaintenances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDomainMaintenancesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDomainMaintenancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDomainNames",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDomainNames"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDomainNamesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDomainNamesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDomainsForPackage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDomainsForPackage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDomainsForPackageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDomainsForPackageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListInstanceTypeDetails",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListInstanceTypeDetails"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInstanceTypeDetailsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInstanceTypeDetailsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPackagesForDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListPackagesForDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPackagesForDomainResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPackagesForDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListScheduledActions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListScheduledActions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListScheduledActionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListScheduledActionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVersionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListVpcEndpointAccess",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListVpcEndpointAccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVpcEndpointAccessResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListVpcEndpointAccessRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListVpcEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListVpcEndpoints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVpcEndpointsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListVpcEndpointsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListVpcEndpointsForDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListVpcEndpointsForDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVpcEndpointsForDomainResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListVpcEndpointsForDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PurchaseReservedInstanceOffering",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PurchaseReservedInstanceOffering"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PurchaseReservedInstanceOfferingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PurchaseReservedInstanceOfferingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RejectInboundConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RejectInboundConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RejectInboundConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RejectInboundConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RemoveTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RevokeVpcEndpointAccess",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RevokeVpcEndpointAccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RevokeVpcEndpointAccessResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RevokeVpcEndpointAccessRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartDomainMaintenance",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartDomainMaintenance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartDomainMaintenanceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartDomainMaintenanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartServiceSoftwareUpdate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartServiceSoftwareUpdate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartServiceSoftwareUpdateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartServiceSoftwareUpdateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDataSource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDataSource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDataSourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDataSourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDomainConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDomainConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDomainConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDomainConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePackage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdatePackage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePackageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePackageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateScheduledAction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateScheduledAction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateScheduledActionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateScheduledActionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateVpcEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateVpcEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateVpcEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateVpcEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpgradeDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpgradeDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpgradeDomainResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpgradeDomainRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AcceptInboundConnectionResponse": {
            "type": "object",
            "properties": {
                "Connection": {
                    "$ref": "#/$defs/InboundConnection"
                }
            }
        },
        "InboundConnection": {
            "type": "object",
            "properties": {
                "LocalDomainInfo": {
                    "$ref": "#/$defs/DomainInformationContainer"
                },
                "RemoteDomainInfo": {
                    "$ref": "#/$defs/DomainInformationContainer"
                },
                "ConnectionId": {
                    "$ref": "#/$defs/ConnectionId"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/InboundConnectionStatus"
                },
                "ConnectionMode": {
                    "$ref": "#/$defs/ConnectionMode"
                }
            }
        },
        "DomainInformationContainer": {
            "type": "object",
            "properties": {
                "AWSDomainInformation": {
                    "$ref": "#/$defs/AWSDomainInformation"
                }
            }
        },
        "AWSDomainInformation": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/OwnerId"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Region": {
                    "$ref": "#/$defs/Region"
                }
            }
        },
        "OwnerId": {
            "type": "string"
        },
        "DomainName": {
            "type": "string"
        },
        "Region": {
            "type": "string"
        },
        "ConnectionId": {
            "type": "string"
        },
        "InboundConnectionStatus": {
            "type": "object",
            "properties": {
                "StatusCode": {
                    "$ref": "#/$defs/InboundConnectionStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/ConnectionStatusMessage"
                }
            }
        },
        "InboundConnectionStatusCode": {
            "enum": [
                "PENDING_ACCEPTANCE",
                "APPROVED",
                "PROVISIONING",
                "ACTIVE",
                "REJECTING",
                "REJECTED",
                "DELETING",
                "DELETED"
            ]
        },
        "ConnectionStatusMessage": {
            "type": "string"
        },
        "ConnectionMode": {
            "enum": [
                "DIRECT",
                "VPC_ENDPOINT"
            ]
        },
        "AcceptInboundConnectionRequest": {
            "type": "object",
            "properties": {
                "ConnectionId": {
                    "$ref": "#/$defs/ConnectionId"
                }
            }
        },
        "AddDataSourceResponse": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "AddDataSourceRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Name": {
                    "$ref": "#/$defs/DataSourceName"
                },
                "DataSourceType": {
                    "$ref": "#/$defs/DataSourceType"
                },
                "Description": {
                    "$ref": "#/$defs/DataSourceDescription"
                }
            }
        },
        "DataSourceName": {
            "type": "string"
        },
        "DataSourceType": {
            "type": "object",
            "properties": {
                "S3GlueDataCatalog": {
                    "$ref": "#/$defs/S3GlueDataCatalog"
                }
            }
        },
        "S3GlueDataCatalog": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "RoleArn": {
            "type": "string"
        },
        "DataSourceDescription": {
            "type": "string"
        },
        "AddTagsRequest": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/ARN"
                },
                "TagList": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ARN": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "AssociatePackageResponse": {
            "type": "object",
            "properties": {
                "DomainPackageDetails": {
                    "$ref": "#/$defs/DomainPackageDetails"
                }
            }
        },
        "DomainPackageDetails": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "PackageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "PackageType": {
                    "$ref": "#/$defs/PackageType"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/LastUpdated"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "DomainPackageStatus": {
                    "$ref": "#/$defs/DomainPackageStatus"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/PackageVersion"
                },
                "ReferencePath": {
                    "$ref": "#/$defs/ReferencePath"
                },
                "ErrorDetails": {
                    "$ref": "#/$defs/ErrorDetails"
                }
            }
        },
        "PackageID": {
            "type": "string"
        },
        "PackageName": {
            "type": "string"
        },
        "PackageType": {
            "enum": [
                "TXT_DICTIONARY",
                "ZIP_PLUGIN"
            ]
        },
        "LastUpdated": {
            "type": "string",
            "format": "date-time"
        },
        "DomainPackageStatus": {
            "enum": [
                "ASSOCIATING",
                "ASSOCIATION_FAILED",
                "ACTIVE",
                "DISSOCIATING",
                "DISSOCIATION_FAILED"
            ]
        },
        "PackageVersion": {
            "type": "string"
        },
        "ReferencePath": {
            "type": "string"
        },
        "ErrorDetails": {
            "type": "object",
            "properties": {
                "ErrorType": {
                    "$ref": "#/$defs/ErrorType"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ErrorType": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "AssociatePackageRequest": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "AuthorizeVpcEndpointAccessResponse": {
            "type": "object",
            "properties": {
                "AuthorizedPrincipal": {
                    "$ref": "#/$defs/AuthorizedPrincipal"
                }
            }
        },
        "AuthorizedPrincipal": {
            "type": "object",
            "properties": {
                "PrincipalType": {
                    "$ref": "#/$defs/PrincipalType"
                },
                "Principal": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PrincipalType": {
            "enum": [
                "AWS_ACCOUNT",
                "AWS_SERVICE"
            ]
        },
        "AuthorizeVpcEndpointAccessRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Account": {
                    "$ref": "#/$defs/AWSAccount"
                }
            }
        },
        "AWSAccount": {
            "type": "string"
        },
        "CancelDomainConfigChangeResponse": {
            "type": "object",
            "properties": {
                "CancelledChangeIds": {
                    "$ref": "#/$defs/GUIDList"
                },
                "CancelledChangeProperties": {
                    "$ref": "#/$defs/CancelledChangePropertyList"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "GUIDList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GUID"
            }
        },
        "GUID": {
            "type": "string"
        },
        "CancelledChangePropertyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CancelledChangeProperty"
            }
        },
        "CancelledChangeProperty": {
            "type": "object",
            "properties": {
                "PropertyName": {
                    "$ref": "#/$defs/String"
                },
                "CancelledValue": {
                    "$ref": "#/$defs/String"
                },
                "ActiveValue": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DryRun": {
            "type": "boolean"
        },
        "CancelDomainConfigChangeRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "CancelServiceSoftwareUpdateResponse": {
            "type": "object",
            "properties": {
                "ServiceSoftwareOptions": {
                    "$ref": "#/$defs/ServiceSoftwareOptions"
                }
            }
        },
        "ServiceSoftwareOptions": {
            "type": "object",
            "properties": {
                "CurrentVersion": {
                    "$ref": "#/$defs/String"
                },
                "NewVersion": {
                    "$ref": "#/$defs/String"
                },
                "UpdateAvailable": {
                    "$ref": "#/$defs/Boolean"
                },
                "Cancellable": {
                    "$ref": "#/$defs/Boolean"
                },
                "UpdateStatus": {
                    "$ref": "#/$defs/DeploymentStatus"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "AutomatedUpdateDate": {
                    "$ref": "#/$defs/DeploymentCloseDateTimeStamp"
                },
                "OptionalDeployment": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "DeploymentStatus": {
            "enum": [
                "PENDING_UPDATE",
                "IN_PROGRESS",
                "COMPLETED",
                "NOT_ELIGIBLE",
                "ELIGIBLE"
            ]
        },
        "DeploymentCloseDateTimeStamp": {
            "type": "string",
            "format": "date-time"
        },
        "CancelServiceSoftwareUpdateRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "CreateDomainResponse": {
            "type": "object",
            "properties": {
                "DomainStatus": {
                    "$ref": "#/$defs/DomainStatus"
                }
            }
        },
        "DomainStatus": {
            "type": "object",
            "properties": {
                "DomainId": {
                    "$ref": "#/$defs/DomainId"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "ARN": {
                    "$ref": "#/$defs/ARN"
                },
                "Created": {
                    "$ref": "#/$defs/Boolean"
                },
                "Deleted": {
                    "$ref": "#/$defs/Boolean"
                },
                "Endpoint": {
                    "$ref": "#/$defs/ServiceUrl"
                },
                "EndpointV2": {
                    "$ref": "#/$defs/ServiceUrl"
                },
                "Endpoints": {
                    "$ref": "#/$defs/EndpointsMap"
                },
                "DomainEndpointV2HostedZoneId": {
                    "$ref": "#/$defs/HostedZoneId"
                },
                "Processing": {
                    "$ref": "#/$defs/Boolean"
                },
                "UpgradeProcessing": {
                    "$ref": "#/$defs/Boolean"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/VersionString"
                },
                "ClusterConfig": {
                    "$ref": "#/$defs/ClusterConfig"
                },
                "EBSOptions": {
                    "$ref": "#/$defs/EBSOptions"
                },
                "AccessPolicies": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "IPAddressType": {
                    "$ref": "#/$defs/IPAddressType"
                },
                "SnapshotOptions": {
                    "$ref": "#/$defs/SnapshotOptions"
                },
                "VPCOptions": {
                    "$ref": "#/$defs/VPCDerivedInfo"
                },
                "CognitoOptions": {
                    "$ref": "#/$defs/CognitoOptions"
                },
                "EncryptionAtRestOptions": {
                    "$ref": "#/$defs/EncryptionAtRestOptions"
                },
                "NodeToNodeEncryptionOptions": {
                    "$ref": "#/$defs/NodeToNodeEncryptionOptions"
                },
                "AdvancedOptions": {
                    "$ref": "#/$defs/AdvancedOptions"
                },
                "LogPublishingOptions": {
                    "$ref": "#/$defs/LogPublishingOptions"
                },
                "ServiceSoftwareOptions": {
                    "$ref": "#/$defs/ServiceSoftwareOptions"
                },
                "DomainEndpointOptions": {
                    "$ref": "#/$defs/DomainEndpointOptions"
                },
                "AdvancedSecurityOptions": {
                    "$ref": "#/$defs/AdvancedSecurityOptions"
                },
                "AutoTuneOptions": {
                    "$ref": "#/$defs/AutoTuneOptionsOutput"
                },
                "ChangeProgressDetails": {
                    "$ref": "#/$defs/ChangeProgressDetails"
                },
                "OffPeakWindowOptions": {
                    "$ref": "#/$defs/OffPeakWindowOptions"
                },
                "SoftwareUpdateOptions": {
                    "$ref": "#/$defs/SoftwareUpdateOptions"
                },
                "DomainProcessingStatus": {
                    "$ref": "#/$defs/DomainProcessingStatusType"
                },
                "ModifyingProperties": {
                    "$ref": "#/$defs/ModifyingPropertiesList"
                },
                "AIMLOptions": {
                    "$ref": "#/$defs/AIMLOptionsOutput"
                }
            }
        },
        "DomainId": {
            "type": "string"
        },
        "ServiceUrl": {
            "type": "string"
        },
        "EndpointsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ServiceUrl"
            }
        },
        "HostedZoneId": {
            "type": "string"
        },
        "VersionString": {
            "type": "string"
        },
        "ClusterConfig": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/OpenSearchPartitionInstanceType"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/IntegerClass"
                },
                "DedicatedMasterEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "ZoneAwarenessEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "ZoneAwarenessConfig": {
                    "$ref": "#/$defs/ZoneAwarenessConfig"
                },
                "DedicatedMasterType": {
                    "$ref": "#/$defs/OpenSearchPartitionInstanceType"
                },
                "DedicatedMasterCount": {
                    "$ref": "#/$defs/IntegerClass"
                },
                "WarmEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "WarmType": {
                    "$ref": "#/$defs/OpenSearchWarmPartitionInstanceType"
                },
                "WarmCount": {
                    "$ref": "#/$defs/IntegerClass"
                },
                "ColdStorageOptions": {
                    "$ref": "#/$defs/ColdStorageOptions"
                },
                "MultiAZWithStandbyEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "OpenSearchPartitionInstanceType": {
            "enum": [
                "m3_medium_search",
                "m3_large_search",
                "m3_xlarge_search",
                "m3_2xlarge_search",
                "m4_large_search",
                "m4_xlarge_search",
                "m4_2xlarge_search",
                "m4_4xlarge_search",
                "m4_10xlarge_search",
                "m5_large_search",
                "m5_xlarge_search",
                "m5_2xlarge_search",
                "m5_4xlarge_search",
                "m5_12xlarge_search",
                "m5_24xlarge_search",
                "r5_large_search",
                "r5_xlarge_search",
                "r5_2xlarge_search",
                "r5_4xlarge_search",
                "r5_12xlarge_search",
                "r5_24xlarge_search",
                "c5_large_search",
                "c5_xlarge_search",
                "c5_2xlarge_search",
                "c5_4xlarge_search",
                "c5_9xlarge_search",
                "c5_18xlarge_search",
                "t3_nano_search",
                "t3_micro_search",
                "t3_small_search",
                "t3_medium_search",
                "t3_large_search",
                "t3_xlarge_search",
                "t3_2xlarge_search",
                "or1_medium_search",
                "or1_large_search",
                "or1_xlarge_search",
                "or1_2xlarge_search",
                "or1_4xlarge_search",
                "or1_8xlarge_search",
                "or1_12xlarge_search",
                "or1_16xlarge_search",
                "ultrawarm1_medium_search",
                "ultrawarm1_large_search",
                "ultrawarm1_xlarge_search",
                "t2_micro_search",
                "t2_small_search",
                "t2_medium_search",
                "r3_large_search",
                "r3_xlarge_search",
                "r3_2xlarge_search",
                "r3_4xlarge_search",
                "r3_8xlarge_search",
                "i2_xlarge_search",
                "i2_2xlarge_search",
                "d2_xlarge_search",
                "d2_2xlarge_search",
                "d2_4xlarge_search",
                "d2_8xlarge_search",
                "c4_large_search",
                "c4_xlarge_search",
                "c4_2xlarge_search",
                "c4_4xlarge_search",
                "c4_8xlarge_search",
                "r4_large_search",
                "r4_xlarge_search",
                "r4_2xlarge_search",
                "r4_4xlarge_search",
                "r4_8xlarge_search",
                "r4_16xlarge_search",
                "i3_large_search",
                "i3_xlarge_search",
                "i3_2xlarge_search",
                "i3_4xlarge_search",
                "i3_8xlarge_search",
                "i3_16xlarge_search",
                "r6g_large_search",
                "r6g_xlarge_search",
                "r6g_2xlarge_search",
                "r6g_4xlarge_search",
                "r6g_8xlarge_search",
                "r6g_12xlarge_search",
                "m6g_large_search",
                "m6g_xlarge_search",
                "m6g_2xlarge_search",
                "m6g_4xlarge_search",
                "m6g_8xlarge_search",
                "m6g_12xlarge_search",
                "c6g_large_search",
                "c6g_xlarge_search",
                "c6g_2xlarge_search",
                "c6g_4xlarge_search",
                "c6g_8xlarge_search",
                "c6g_12xlarge_search",
                "r6gd_large_search",
                "r6gd_xlarge_search",
                "r6gd_2xlarge_search",
                "r6gd_4xlarge_search",
                "r6gd_8xlarge_search",
                "r6gd_12xlarge_search",
                "r6gd_16xlarge_search",
                "t4g_small_search",
                "t4g_medium_search"
            ]
        },
        "IntegerClass": {
            "type": "integer",
            "format": "int32"
        },
        "ZoneAwarenessConfig": {
            "type": "object",
            "properties": {
                "AvailabilityZoneCount": {
                    "$ref": "#/$defs/IntegerClass"
                }
            }
        },
        "OpenSearchWarmPartitionInstanceType": {
            "enum": [
                "ultrawarm1_medium_search",
                "ultrawarm1_large_search",
                "ultrawarm1_xlarge_search"
            ]
        },
        "ColdStorageOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EBSOptions": {
            "type": "object",
            "properties": {
                "EBSEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "VolumeType": {
                    "$ref": "#/$defs/VolumeType"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/IntegerClass"
                },
                "Iops": {
                    "$ref": "#/$defs/IntegerClass"
                },
                "Throughput": {
                    "$ref": "#/$defs/IntegerClass"
                }
            }
        },
        "VolumeType": {
            "enum": [
                "standard",
                "gp2",
                "io1",
                "gp3"
            ]
        },
        "PolicyDocument": {
            "type": "string"
        },
        "IPAddressType": {
            "enum": [
                "IPV4",
                "DUALSTACK"
            ]
        },
        "SnapshotOptions": {
            "type": "object",
            "properties": {
                "AutomatedSnapshotStartHour": {
                    "$ref": "#/$defs/IntegerClass"
                }
            }
        },
        "VPCDerivedInfo": {
            "type": "object",
            "properties": {
                "VPCId": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/StringList"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/StringList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CognitoOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "UserPoolId": {
                    "$ref": "#/$defs/UserPoolId"
                },
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "UserPoolId": {
            "type": "string"
        },
        "IdentityPoolId": {
            "type": "string"
        },
        "EncryptionAtRestOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                }
            }
        },
        "KmsKeyId": {
            "type": "string"
        },
        "NodeToNodeEncryptionOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AdvancedOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "LogPublishingOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/LogPublishingOption"
            }
        },
        "LogPublishingOption": {
            "type": "object",
            "properties": {
                "CloudWatchLogsLogGroupArn": {
                    "$ref": "#/$defs/CloudWatchLogsLogGroupArn"
                },
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CloudWatchLogsLogGroupArn": {
            "type": "string"
        },
        "DomainEndpointOptions": {
            "type": "object",
            "properties": {
                "EnforceHTTPS": {
                    "$ref": "#/$defs/Boolean"
                },
                "TLSSecurityPolicy": {
                    "$ref": "#/$defs/TLSSecurityPolicy"
                },
                "CustomEndpointEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "CustomEndpoint": {
                    "$ref": "#/$defs/DomainNameFqdn"
                },
                "CustomEndpointCertificateArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "TLSSecurityPolicy": {
            "enum": [
                "POLICY_MIN_TLS_1_0_2019_07",
                "POLICY_MIN_TLS_1_2_2019_07",
                "POLICY_MIN_TLS_1_2_PFS_2023_10"
            ]
        },
        "DomainNameFqdn": {
            "type": "string"
        },
        "AdvancedSecurityOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "InternalUserDatabaseEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "SAMLOptions": {
                    "$ref": "#/$defs/SAMLOptionsOutput"
                },
                "JWTOptions": {
                    "$ref": "#/$defs/JWTOptionsOutput"
                },
                "AnonymousAuthDisableDate": {
                    "$ref": "#/$defs/DisableTimestamp"
                },
                "AnonymousAuthEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SAMLOptionsOutput": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "Idp": {
                    "$ref": "#/$defs/SAMLIdp"
                },
                "SubjectKey": {
                    "$ref": "#/$defs/String"
                },
                "RolesKey": {
                    "$ref": "#/$defs/String"
                },
                "SessionTimeoutMinutes": {
                    "$ref": "#/$defs/IntegerClass"
                }
            }
        },
        "SAMLIdp": {
            "type": "object",
            "properties": {
                "MetadataContent": {
                    "$ref": "#/$defs/SAMLMetadata"
                },
                "EntityId": {
                    "$ref": "#/$defs/SAMLEntityId"
                }
            }
        },
        "SAMLMetadata": {
            "type": "string"
        },
        "SAMLEntityId": {
            "type": "string"
        },
        "JWTOptionsOutput": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "SubjectKey": {
                    "$ref": "#/$defs/String"
                },
                "RolesKey": {
                    "$ref": "#/$defs/String"
                },
                "PublicKey": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DisableTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "AutoTuneOptionsOutput": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/AutoTuneState"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                },
                "UseOffPeakWindow": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AutoTuneState": {
            "enum": [
                "ENABLED",
                "DISABLED",
                "ENABLE_IN_PROGRESS",
                "DISABLE_IN_PROGRESS",
                "DISABLED_AND_ROLLBACK_SCHEDULED",
                "DISABLED_AND_ROLLBACK_IN_PROGRESS",
                "DISABLED_AND_ROLLBACK_COMPLETE",
                "DISABLED_AND_ROLLBACK_ERROR",
                "ERROR"
            ]
        },
        "ChangeProgressDetails": {
            "type": "object",
            "properties": {
                "ChangeId": {
                    "$ref": "#/$defs/GUID"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                },
                "ConfigChangeStatus": {
                    "$ref": "#/$defs/ConfigChangeStatus"
                },
                "InitiatedBy": {
                    "$ref": "#/$defs/InitiatedBy"
                },
                "StartTime": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/UpdateTimestamp"
                }
            }
        },
        "Message": {
            "type": "string"
        },
        "ConfigChangeStatus": {
            "enum": [
                "PENDING",
                "INITIALIZING",
                "VALIDATING",
                "VALIDATION_FAILED",
                "APPLYING_CHANGES",
                "COMPLETED",
                "PENDING_USER_INPUT",
                "CANCELLED"
            ]
        },
        "InitiatedBy": {
            "enum": [
                "CUSTOMER",
                "SERVICE"
            ]
        },
        "UpdateTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "OffPeakWindowOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "OffPeakWindow": {
                    "$ref": "#/$defs/OffPeakWindow"
                }
            }
        },
        "OffPeakWindow": {
            "type": "object",
            "properties": {
                "WindowStartTime": {
                    "$ref": "#/$defs/WindowStartTime"
                }
            }
        },
        "WindowStartTime": {
            "type": "object",
            "properties": {
                "Hours": {
                    "$ref": "#/$defs/StartTimeHours"
                },
                "Minutes": {
                    "$ref": "#/$defs/StartTimeMinutes"
                }
            }
        },
        "StartTimeHours": {
            "type": "integer",
            "format": "int64"
        },
        "StartTimeMinutes": {
            "type": "integer",
            "format": "int64"
        },
        "SoftwareUpdateOptions": {
            "type": "object",
            "properties": {
                "AutoSoftwareUpdateEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DomainProcessingStatusType": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "MODIFYING",
                "UPGRADING",
                "UPDATING",
                "ISOLATED",
                "DELETING"
            ]
        },
        "ModifyingPropertiesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ModifyingProperties"
            }
        },
        "ModifyingProperties": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "ActiveValue": {
                    "$ref": "#/$defs/String"
                },
                "PendingValue": {
                    "$ref": "#/$defs/String"
                },
                "ValueType": {
                    "$ref": "#/$defs/PropertyValueType"
                }
            }
        },
        "PropertyValueType": {
            "enum": [
                "PLAIN_TEXT",
                "STRINGIFIED_JSON"
            ]
        },
        "AIMLOptionsOutput": {
            "type": "object",
            "properties": {
                "NaturalLanguageQueryGenerationOptions": {
                    "$ref": "#/$defs/NaturalLanguageQueryGenerationOptionsOutput"
                }
            }
        },
        "NaturalLanguageQueryGenerationOptionsOutput": {
            "type": "object",
            "properties": {
                "DesiredState": {
                    "$ref": "#/$defs/NaturalLanguageQueryGenerationDesiredState"
                },
                "CurrentState": {
                    "$ref": "#/$defs/NaturalLanguageQueryGenerationCurrentState"
                }
            }
        },
        "NaturalLanguageQueryGenerationDesiredState": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "NaturalLanguageQueryGenerationCurrentState": {
            "enum": [
                "NotEnabled",
                "EnableComplete",
                "EnableInProgress",
                "EnableFailed",
                "DisableComplete",
                "DisableInProgress",
                "DisableFailed"
            ]
        },
        "CreateDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/VersionString"
                },
                "ClusterConfig": {
                    "$ref": "#/$defs/ClusterConfig"
                },
                "EBSOptions": {
                    "$ref": "#/$defs/EBSOptions"
                },
                "AccessPolicies": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "IPAddressType": {
                    "$ref": "#/$defs/IPAddressType"
                },
                "SnapshotOptions": {
                    "$ref": "#/$defs/SnapshotOptions"
                },
                "VPCOptions": {
                    "$ref": "#/$defs/VPCOptions"
                },
                "CognitoOptions": {
                    "$ref": "#/$defs/CognitoOptions"
                },
                "EncryptionAtRestOptions": {
                    "$ref": "#/$defs/EncryptionAtRestOptions"
                },
                "NodeToNodeEncryptionOptions": {
                    "$ref": "#/$defs/NodeToNodeEncryptionOptions"
                },
                "AdvancedOptions": {
                    "$ref": "#/$defs/AdvancedOptions"
                },
                "LogPublishingOptions": {
                    "$ref": "#/$defs/LogPublishingOptions"
                },
                "DomainEndpointOptions": {
                    "$ref": "#/$defs/DomainEndpointOptions"
                },
                "AdvancedSecurityOptions": {
                    "$ref": "#/$defs/AdvancedSecurityOptionsInput"
                },
                "TagList": {
                    "$ref": "#/$defs/TagList"
                },
                "AutoTuneOptions": {
                    "$ref": "#/$defs/AutoTuneOptionsInput"
                },
                "OffPeakWindowOptions": {
                    "$ref": "#/$defs/OffPeakWindowOptions"
                },
                "SoftwareUpdateOptions": {
                    "$ref": "#/$defs/SoftwareUpdateOptions"
                },
                "AIMLOptions": {
                    "$ref": "#/$defs/AIMLOptionsInput"
                }
            }
        },
        "VPCOptions": {
            "type": "object",
            "properties": {
                "SubnetIds": {
                    "$ref": "#/$defs/StringList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "AdvancedSecurityOptionsInput": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "InternalUserDatabaseEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "MasterUserOptions": {
                    "$ref": "#/$defs/mainUserOptions"
                },
                "SAMLOptions": {
                    "$ref": "#/$defs/SAMLOptionsInput"
                },
                "JWTOptions": {
                    "$ref": "#/$defs/JWTOptionsInput"
                },
                "AnonymousAuthEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "MasterUserOptions": {
            "type": "object",
            "properties": {
                "MasterUserARN": {
                    "$ref": "#/$defs/ARN"
                },
                "MasterUserName": {
                    "$ref": "#/$defs/Username"
                },
                "MasterUserPassword": {
                    "$ref": "#/$defs/Password"
                }
            }
        },
        "Username": {
            "type": "string"
        },
        "Password": {
            "type": "string"
        },
        "SAMLOptionsInput": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "Idp": {
                    "$ref": "#/$defs/SAMLIdp"
                },
                "MasterUserName": {
                    "$ref": "#/$defs/Username"
                },
                "MasterBackendRole": {
                    "$ref": "#/$defs/BackendRole"
                },
                "SubjectKey": {
                    "$ref": "#/$defs/String"
                },
                "RolesKey": {
                    "$ref": "#/$defs/String"
                },
                "SessionTimeoutMinutes": {
                    "$ref": "#/$defs/IntegerClass"
                }
            }
        },
        "BackendRole": {
            "type": "string"
        },
        "JWTOptionsInput": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "SubjectKey": {
                    "$ref": "#/$defs/SubjectKey"
                },
                "RolesKey": {
                    "$ref": "#/$defs/RolesKey"
                },
                "PublicKey": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubjectKey": {
            "type": "string"
        },
        "RolesKey": {
            "type": "string"
        },
        "AutoTuneOptionsInput": {
            "type": "object",
            "properties": {
                "DesiredState": {
                    "$ref": "#/$defs/AutoTuneDesiredState"
                },
                "MaintenanceSchedules": {
                    "$ref": "#/$defs/AutoTuneMaintenanceScheduleList"
                },
                "UseOffPeakWindow": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AutoTuneDesiredState": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "AutoTuneMaintenanceScheduleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoTuneMaintenanceSchedule"
            }
        },
        "AutoTuneMaintenanceSchedule": {
            "type": "object",
            "properties": {
                "StartAt": {
                    "$ref": "#/$defs/StartAt"
                },
                "Duration": {
                    "$ref": "#/$defs/Duration"
                },
                "CronExpressionForRecurrence": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StartAt": {
            "type": "string",
            "format": "date-time"
        },
        "Duration": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/DurationValue"
                },
                "Unit": {
                    "$ref": "#/$defs/TimeUnit"
                }
            }
        },
        "DurationValue": {
            "type": "integer",
            "format": "int64"
        },
        "TimeUnit": {
            "enum": [
                "HOURS"
            ]
        },
        "AIMLOptionsInput": {
            "type": "object",
            "properties": {
                "NaturalLanguageQueryGenerationOptions": {
                    "$ref": "#/$defs/NaturalLanguageQueryGenerationOptionsInput"
                }
            }
        },
        "NaturalLanguageQueryGenerationOptionsInput": {
            "type": "object",
            "properties": {
                "DesiredState": {
                    "$ref": "#/$defs/NaturalLanguageQueryGenerationDesiredState"
                }
            }
        },
        "CreateOutboundConnectionResponse": {
            "type": "object",
            "properties": {
                "LocalDomainInfo": {
                    "$ref": "#/$defs/DomainInformationContainer"
                },
                "RemoteDomainInfo": {
                    "$ref": "#/$defs/DomainInformationContainer"
                },
                "ConnectionAlias": {
                    "$ref": "#/$defs/ConnectionAlias"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/OutboundConnectionStatus"
                },
                "ConnectionId": {
                    "$ref": "#/$defs/ConnectionId"
                },
                "ConnectionMode": {
                    "$ref": "#/$defs/ConnectionMode"
                },
                "ConnectionProperties": {
                    "$ref": "#/$defs/ConnectionProperties"
                }
            }
        },
        "ConnectionAlias": {
            "type": "string"
        },
        "OutboundConnectionStatus": {
            "type": "object",
            "properties": {
                "StatusCode": {
                    "$ref": "#/$defs/OutboundConnectionStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/ConnectionStatusMessage"
                }
            }
        },
        "OutboundConnectionStatusCode": {
            "enum": [
                "VALIDATING",
                "VALIDATION_FAILED",
                "PENDING_ACCEPTANCE",
                "APPROVED",
                "PROVISIONING",
                "ACTIVE",
                "REJECTING",
                "REJECTED",
                "DELETING",
                "DELETED"
            ]
        },
        "ConnectionProperties": {
            "type": "object",
            "properties": {
                "Endpoint": {
                    "$ref": "#/$defs/Endpoint"
                },
                "CrossClusterSearch": {
                    "$ref": "#/$defs/CrossClusterSearchConnectionProperties"
                }
            }
        },
        "Endpoint": {
            "type": "string"
        },
        "CrossClusterSearchConnectionProperties": {
            "type": "object",
            "properties": {
                "SkipUnavailable": {
                    "$ref": "#/$defs/SkipUnavailableStatus"
                }
            }
        },
        "SkipUnavailableStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "CreateOutboundConnectionRequest": {
            "type": "object",
            "properties": {
                "LocalDomainInfo": {
                    "$ref": "#/$defs/DomainInformationContainer"
                },
                "RemoteDomainInfo": {
                    "$ref": "#/$defs/DomainInformationContainer"
                },
                "ConnectionAlias": {
                    "$ref": "#/$defs/ConnectionAlias"
                },
                "ConnectionMode": {
                    "$ref": "#/$defs/ConnectionMode"
                },
                "ConnectionProperties": {
                    "$ref": "#/$defs/ConnectionProperties"
                }
            }
        },
        "CreatePackageResponse": {
            "type": "object",
            "properties": {
                "PackageDetails": {
                    "$ref": "#/$defs/PackageDetails"
                }
            }
        },
        "PackageDetails": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "PackageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "PackageType": {
                    "$ref": "#/$defs/PackageType"
                },
                "PackageDescription": {
                    "$ref": "#/$defs/PackageDescription"
                },
                "PackageStatus": {
                    "$ref": "#/$defs/PackageStatus"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/CreatedAt"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/LastUpdated"
                },
                "AvailablePackageVersion": {
                    "$ref": "#/$defs/PackageVersion"
                },
                "ErrorDetails": {
                    "$ref": "#/$defs/ErrorDetails"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/EngineVersion"
                },
                "AvailablePluginProperties": {
                    "$ref": "#/$defs/PluginProperties"
                }
            }
        },
        "PackageDescription": {
            "type": "string"
        },
        "PackageStatus": {
            "enum": [
                "COPYING",
                "COPY_FAILED",
                "VALIDATING",
                "VALIDATION_FAILED",
                "AVAILABLE",
                "DELETING",
                "DELETED",
                "DELETE_FAILED"
            ]
        },
        "CreatedAt": {
            "type": "string",
            "format": "date-time"
        },
        "EngineVersion": {
            "type": "string"
        },
        "PluginProperties": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/PluginName"
                },
                "Description": {
                    "$ref": "#/$defs/PluginDescription"
                },
                "Version": {
                    "$ref": "#/$defs/PluginVersion"
                },
                "ClassName": {
                    "$ref": "#/$defs/PluginClassName"
                },
                "UncompressedSizeInBytes": {
                    "$ref": "#/$defs/UncompressedPluginSizeInBytes"
                }
            }
        },
        "PluginName": {
            "type": "string"
        },
        "PluginDescription": {
            "type": "string"
        },
        "PluginVersion": {
            "type": "string"
        },
        "PluginClassName": {
            "type": "string"
        },
        "UncompressedPluginSizeInBytes": {
            "type": "integer",
            "format": "int64"
        },
        "CreatePackageRequest": {
            "type": "object",
            "properties": {
                "PackageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "PackageType": {
                    "$ref": "#/$defs/PackageType"
                },
                "PackageDescription": {
                    "$ref": "#/$defs/PackageDescription"
                },
                "PackageSource": {
                    "$ref": "#/$defs/PackageSource"
                }
            }
        },
        "PackageSource": {
            "type": "object",
            "properties": {
                "S3BucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "S3Key": {
                    "$ref": "#/$defs/S3Key"
                }
            }
        },
        "S3BucketName": {
            "type": "string"
        },
        "S3Key": {
            "type": "string"
        },
        "CreateVpcEndpointResponse": {
            "type": "object",
            "properties": {
                "VpcEndpoint": {
                    "$ref": "#/$defs/VpcEndpoint"
                }
            }
        },
        "VpcEndpoint": {
            "type": "object",
            "properties": {
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "VpcEndpointOwner": {
                    "$ref": "#/$defs/AWSAccount"
                },
                "DomainArn": {
                    "$ref": "#/$defs/DomainArn"
                },
                "VpcOptions": {
                    "$ref": "#/$defs/VPCDerivedInfo"
                },
                "Status": {
                    "$ref": "#/$defs/VpcEndpointStatus"
                },
                "Endpoint": {
                    "$ref": "#/$defs/Endpoint"
                }
            }
        },
        "VpcEndpointId": {
            "type": "string"
        },
        "DomainArn": {
            "type": "string"
        },
        "VpcEndpointStatus": {
            "enum": [
                "CREATING",
                "CREATE_FAILED",
                "ACTIVE",
                "UPDATING",
                "UPDATE_FAILED",
                "DELETING",
                "DELETE_FAILED"
            ]
        },
        "CreateVpcEndpointRequest": {
            "type": "object",
            "properties": {
                "DomainArn": {
                    "$ref": "#/$defs/DomainArn"
                },
                "VpcOptions": {
                    "$ref": "#/$defs/VPCOptions"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "DeleteDataSourceResponse": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteDataSourceRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Name": {
                    "$ref": "#/$defs/DataSourceName"
                }
            }
        },
        "DeleteDomainResponse": {
            "type": "object",
            "properties": {
                "DomainStatus": {
                    "$ref": "#/$defs/DomainStatus"
                }
            }
        },
        "DeleteDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "DeleteInboundConnectionResponse": {
            "type": "object",
            "properties": {
                "Connection": {
                    "$ref": "#/$defs/InboundConnection"
                }
            }
        },
        "DeleteInboundConnectionRequest": {
            "type": "object",
            "properties": {
                "ConnectionId": {
                    "$ref": "#/$defs/ConnectionId"
                }
            }
        },
        "DeleteOutboundConnectionResponse": {
            "type": "object",
            "properties": {
                "Connection": {
                    "$ref": "#/$defs/OutboundConnection"
                }
            }
        },
        "OutboundConnection": {
            "type": "object",
            "properties": {
                "LocalDomainInfo": {
                    "$ref": "#/$defs/DomainInformationContainer"
                },
                "RemoteDomainInfo": {
                    "$ref": "#/$defs/DomainInformationContainer"
                },
                "ConnectionId": {
                    "$ref": "#/$defs/ConnectionId"
                },
                "ConnectionAlias": {
                    "$ref": "#/$defs/ConnectionAlias"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/OutboundConnectionStatus"
                },
                "ConnectionMode": {
                    "$ref": "#/$defs/ConnectionMode"
                },
                "ConnectionProperties": {
                    "$ref": "#/$defs/ConnectionProperties"
                }
            }
        },
        "DeleteOutboundConnectionRequest": {
            "type": "object",
            "properties": {
                "ConnectionId": {
                    "$ref": "#/$defs/ConnectionId"
                }
            }
        },
        "DeletePackageResponse": {
            "type": "object",
            "properties": {
                "PackageDetails": {
                    "$ref": "#/$defs/PackageDetails"
                }
            }
        },
        "DeletePackageRequest": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                }
            }
        },
        "DeleteVpcEndpointResponse": {
            "type": "object",
            "properties": {
                "VpcEndpointSummary": {
                    "$ref": "#/$defs/VpcEndpointSummary"
                }
            }
        },
        "VpcEndpointSummary": {
            "type": "object",
            "properties": {
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "VpcEndpointOwner": {
                    "$ref": "#/$defs/String"
                },
                "DomainArn": {
                    "$ref": "#/$defs/DomainArn"
                },
                "Status": {
                    "$ref": "#/$defs/VpcEndpointStatus"
                }
            }
        },
        "DeleteVpcEndpointRequest": {
            "type": "object",
            "properties": {
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                }
            }
        },
        "DescribeDomainResponse": {
            "type": "object",
            "properties": {
                "DomainStatus": {
                    "$ref": "#/$defs/DomainStatus"
                }
            }
        },
        "DescribeDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "DescribeDomainAutoTunesResponse": {
            "type": "object",
            "properties": {
                "AutoTunes": {
                    "$ref": "#/$defs/AutoTuneList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AutoTuneList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoTune"
            }
        },
        "AutoTune": {
            "type": "object",
            "properties": {
                "AutoTuneType": {
                    "$ref": "#/$defs/AutoTuneType"
                },
                "AutoTuneDetails": {
                    "$ref": "#/$defs/AutoTuneDetails"
                }
            }
        },
        "AutoTuneType": {
            "enum": [
                "SCHEDULED_ACTION"
            ]
        },
        "AutoTuneDetails": {
            "type": "object",
            "properties": {
                "ScheduledAutoTuneDetails": {
                    "$ref": "#/$defs/ScheduledAutoTuneDetails"
                }
            }
        },
        "ScheduledAutoTuneDetails": {
            "type": "object",
            "properties": {
                "Date": {
                    "$ref": "#/$defs/AutoTuneDate"
                },
                "ActionType": {
                    "$ref": "#/$defs/ScheduledAutoTuneActionType"
                },
                "Action": {
                    "$ref": "#/$defs/ScheduledAutoTuneDescription"
                },
                "Severity": {
                    "$ref": "#/$defs/ScheduledAutoTuneSeverityType"
                }
            }
        },
        "AutoTuneDate": {
            "type": "string",
            "format": "date-time"
        },
        "ScheduledAutoTuneActionType": {
            "enum": [
                "JVM_HEAP_SIZE_TUNING",
                "JVM_YOUNG_GEN_TUNING"
            ]
        },
        "ScheduledAutoTuneDescription": {
            "type": "string"
        },
        "ScheduledAutoTuneSeverityType": {
            "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
            ]
        },
        "NextToken": {
            "type": "string"
        },
        "DescribeDomainAutoTunesRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeDomainChangeProgressResponse": {
            "type": "object",
            "properties": {
                "ChangeProgressStatus": {
                    "$ref": "#/$defs/ChangeProgressStatusDetails"
                }
            }
        },
        "ChangeProgressStatusDetails": {
            "type": "object",
            "properties": {
                "ChangeId": {
                    "$ref": "#/$defs/GUID"
                },
                "StartTime": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "Status": {
                    "$ref": "#/$defs/OverallChangeStatus"
                },
                "PendingProperties": {
                    "$ref": "#/$defs/StringList"
                },
                "CompletedProperties": {
                    "$ref": "#/$defs/StringList"
                },
                "TotalNumberOfStages": {
                    "$ref": "#/$defs/TotalNumberOfStages"
                },
                "ChangeProgressStages": {
                    "$ref": "#/$defs/ChangeProgressStageList"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "ConfigChangeStatus": {
                    "$ref": "#/$defs/ConfigChangeStatus"
                },
                "InitiatedBy": {
                    "$ref": "#/$defs/InitiatedBy"
                }
            }
        },
        "OverallChangeStatus": {
            "enum": [
                "PENDING",
                "PROCESSING",
                "COMPLETED",
                "FAILED"
            ]
        },
        "TotalNumberOfStages": {
            "type": "integer",
            "format": "int32"
        },
        "ChangeProgressStageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChangeProgressStage"
            }
        },
        "ChangeProgressStage": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ChangeProgressStageName"
                },
                "Status": {
                    "$ref": "#/$defs/ChangeProgressStageStatus"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/LastUpdated"
                }
            }
        },
        "ChangeProgressStageName": {
            "type": "string"
        },
        "ChangeProgressStageStatus": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "DescribeDomainChangeProgressRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "ChangeId": {
                    "$ref": "#/$defs/GUID"
                }
            }
        },
        "DescribeDomainConfigResponse": {
            "type": "object",
            "properties": {
                "DomainConfig": {
                    "$ref": "#/$defs/DomainConfig"
                }
            }
        },
        "DomainConfig": {
            "type": "object",
            "properties": {
                "EngineVersion": {
                    "$ref": "#/$defs/VersionStatus"
                },
                "ClusterConfig": {
                    "$ref": "#/$defs/ClusterConfigStatus"
                },
                "EBSOptions": {
                    "$ref": "#/$defs/EBSOptionsStatus"
                },
                "AccessPolicies": {
                    "$ref": "#/$defs/AccessPoliciesStatus"
                },
                "IPAddressType": {
                    "$ref": "#/$defs/IPAddressTypeStatus"
                },
                "SnapshotOptions": {
                    "$ref": "#/$defs/SnapshotOptionsStatus"
                },
                "VPCOptions": {
                    "$ref": "#/$defs/VPCDerivedInfoStatus"
                },
                "CognitoOptions": {
                    "$ref": "#/$defs/CognitoOptionsStatus"
                },
                "EncryptionAtRestOptions": {
                    "$ref": "#/$defs/EncryptionAtRestOptionsStatus"
                },
                "NodeToNodeEncryptionOptions": {
                    "$ref": "#/$defs/NodeToNodeEncryptionOptionsStatus"
                },
                "AdvancedOptions": {
                    "$ref": "#/$defs/AdvancedOptionsStatus"
                },
                "LogPublishingOptions": {
                    "$ref": "#/$defs/LogPublishingOptionsStatus"
                },
                "DomainEndpointOptions": {
                    "$ref": "#/$defs/DomainEndpointOptionsStatus"
                },
                "AdvancedSecurityOptions": {
                    "$ref": "#/$defs/AdvancedSecurityOptionsStatus"
                },
                "AutoTuneOptions": {
                    "$ref": "#/$defs/AutoTuneOptionsStatus"
                },
                "ChangeProgressDetails": {
                    "$ref": "#/$defs/ChangeProgressDetails"
                },
                "OffPeakWindowOptions": {
                    "$ref": "#/$defs/OffPeakWindowOptionsStatus"
                },
                "SoftwareUpdateOptions": {
                    "$ref": "#/$defs/SoftwareUpdateOptionsStatus"
                },
                "ModifyingProperties": {
                    "$ref": "#/$defs/ModifyingPropertiesList"
                },
                "AIMLOptions": {
                    "$ref": "#/$defs/AIMLOptionsStatus"
                }
            }
        },
        "VersionStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/VersionString"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "OptionStatus": {
            "type": "object",
            "properties": {
                "CreationDate": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "UpdateDate": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "UpdateVersion": {
                    "$ref": "#/$defs/UIntValue"
                },
                "State": {
                    "$ref": "#/$defs/OptionState"
                },
                "PendingDeletion": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UIntValue": {
            "type": "integer",
            "format": "int32"
        },
        "OptionState": {
            "enum": [
                "RequiresIndexDocuments",
                "Processing",
                "Active"
            ]
        },
        "ClusterConfigStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/ClusterConfig"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "EBSOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/EBSOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "AccessPoliciesStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "IPAddressTypeStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/IPAddressType"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "SnapshotOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/SnapshotOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "VPCDerivedInfoStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/VPCDerivedInfo"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "CognitoOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/CognitoOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "EncryptionAtRestOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/EncryptionAtRestOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "NodeToNodeEncryptionOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/NodeToNodeEncryptionOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "AdvancedOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/AdvancedOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "LogPublishingOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/LogPublishingOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "DomainEndpointOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/DomainEndpointOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "AdvancedSecurityOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/AdvancedSecurityOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "AutoTuneOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/AutoTuneOptions"
                },
                "Status": {
                    "$ref": "#/$defs/AutoTuneStatus"
                }
            }
        },
        "AutoTuneOptions": {
            "type": "object",
            "properties": {
                "DesiredState": {
                    "$ref": "#/$defs/AutoTuneDesiredState"
                },
                "RollbackOnDisable": {
                    "$ref": "#/$defs/RollbackOnDisable"
                },
                "MaintenanceSchedules": {
                    "$ref": "#/$defs/AutoTuneMaintenanceScheduleList"
                },
                "UseOffPeakWindow": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RollbackOnDisable": {
            "enum": [
                "NO_ROLLBACK",
                "DEFAULT_ROLLBACK"
            ]
        },
        "AutoTuneStatus": {
            "type": "object",
            "properties": {
                "CreationDate": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "UpdateDate": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "UpdateVersion": {
                    "$ref": "#/$defs/UIntValue"
                },
                "State": {
                    "$ref": "#/$defs/AutoTuneState"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                },
                "PendingDeletion": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "OffPeakWindowOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/OffPeakWindowOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "SoftwareUpdateOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/SoftwareUpdateOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "AIMLOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/AIMLOptionsOutput"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "DescribeDomainConfigRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "DescribeDomainHealthResponse": {
            "type": "object",
            "properties": {
                "DomainState": {
                    "$ref": "#/$defs/DomainState"
                },
                "AvailabilityZoneCount": {
                    "$ref": "#/$defs/NumberOfAZs"
                },
                "ActiveAvailabilityZoneCount": {
                    "$ref": "#/$defs/NumberOfAZs"
                },
                "StandByAvailabilityZoneCount": {
                    "$ref": "#/$defs/NumberOfAZs"
                },
                "DataNodeCount": {
                    "$ref": "#/$defs/NumberOfNodes"
                },
                "DedicatedMaster": {
                    "$ref": "#/$defs/Boolean"
                },
                "MasterEligibleNodeCount": {
                    "$ref": "#/$defs/NumberOfNodes"
                },
                "WarmNodeCount": {
                    "$ref": "#/$defs/NumberOfNodes"
                },
                "MasterNode": {
                    "$ref": "#/$defs/mainNodeStatus"
                },
                "ClusterHealth": {
                    "$ref": "#/$defs/DomainHealth"
                },
                "TotalShards": {
                    "$ref": "#/$defs/NumberOfShards"
                },
                "TotalUnAssignedShards": {
                    "$ref": "#/$defs/NumberOfShards"
                },
                "EnvironmentInformation": {
                    "$ref": "#/$defs/EnvironmentInfoList"
                }
            }
        },
        "DomainState": {
            "enum": [
                "Active",
                "Processing",
                "NotAvailable"
            ]
        },
        "NumberOfAZs": {
            "type": "string"
        },
        "NumberOfNodes": {
            "type": "string"
        },
        "MasterNodeStatus": {
            "enum": [
                "Available",
                "UnAvailable"
            ]
        },
        "DomainHealth": {
            "enum": [
                "Red",
                "Yellow",
                "Green",
                "NotAvailable"
            ]
        },
        "NumberOfShards": {
            "type": "string"
        },
        "EnvironmentInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnvironmentInfo"
            }
        },
        "EnvironmentInfo": {
            "type": "object",
            "properties": {
                "AvailabilityZoneInformation": {
                    "$ref": "#/$defs/AvailabilityZoneInfoList"
                }
            }
        },
        "AvailabilityZoneInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AvailabilityZoneInfo"
            }
        },
        "AvailabilityZoneInfo": {
            "type": "object",
            "properties": {
                "AvailabilityZoneName": {
                    "$ref": "#/$defs/AvailabilityZone"
                },
                "ZoneStatus": {
                    "$ref": "#/$defs/ZoneStatus"
                },
                "ConfiguredDataNodeCount": {
                    "$ref": "#/$defs/NumberOfNodes"
                },
                "AvailableDataNodeCount": {
                    "$ref": "#/$defs/NumberOfNodes"
                },
                "TotalShards": {
                    "$ref": "#/$defs/NumberOfShards"
                },
                "TotalUnAssignedShards": {
                    "$ref": "#/$defs/NumberOfShards"
                }
            }
        },
        "AvailabilityZone": {
            "type": "string"
        },
        "ZoneStatus": {
            "enum": [
                "Active",
                "StandBy",
                "NotAvailable"
            ]
        },
        "DescribeDomainHealthRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "DescribeDomainNodesResponse": {
            "type": "object",
            "properties": {
                "DomainNodesStatusList": {
                    "$ref": "#/$defs/DomainNodesStatusList"
                }
            }
        },
        "DomainNodesStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainNodesStatus"
            }
        },
        "DomainNodesStatus": {
            "type": "object",
            "properties": {
                "NodeId": {
                    "$ref": "#/$defs/NodeId"
                },
                "NodeType": {
                    "$ref": "#/$defs/NodeType"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/AvailabilityZone"
                },
                "InstanceType": {
                    "$ref": "#/$defs/OpenSearchPartitionInstanceType"
                },
                "NodeStatus": {
                    "$ref": "#/$defs/NodeStatus"
                },
                "StorageType": {
                    "$ref": "#/$defs/StorageTypeName"
                },
                "StorageVolumeType": {
                    "$ref": "#/$defs/VolumeType"
                },
                "StorageSize": {
                    "$ref": "#/$defs/VolumeSize"
                }
            }
        },
        "NodeId": {
            "type": "string"
        },
        "NodeType": {
            "enum": [
                "Data",
                "Ultrawarm",
                "Master"
            ]
        },
        "NodeStatus": {
            "enum": [
                "Active",
                "StandBy",
                "NotAvailable"
            ]
        },
        "StorageTypeName": {
            "type": "string"
        },
        "VolumeSize": {
            "type": "string"
        },
        "DescribeDomainNodesRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "DescribeDomainsResponse": {
            "type": "object",
            "properties": {
                "DomainStatusList": {
                    "$ref": "#/$defs/DomainStatusList"
                }
            }
        },
        "DomainStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainStatus"
            }
        },
        "DescribeDomainsRequest": {
            "type": "object",
            "properties": {
                "DomainNames": {
                    "$ref": "#/$defs/DomainNameList"
                }
            }
        },
        "DomainNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainName"
            }
        },
        "DescribeDryRunProgressResponse": {
            "type": "object",
            "properties": {
                "DryRunProgressStatus": {
                    "$ref": "#/$defs/DryRunProgressStatus"
                },
                "DryRunConfig": {
                    "$ref": "#/$defs/DomainStatus"
                },
                "DryRunResults": {
                    "$ref": "#/$defs/DryRunResults"
                }
            }
        },
        "DryRunProgressStatus": {
            "type": "object",
            "properties": {
                "DryRunId": {
                    "$ref": "#/$defs/GUID"
                },
                "DryRunStatus": {
                    "$ref": "#/$defs/String"
                },
                "CreationDate": {
                    "$ref": "#/$defs/String"
                },
                "UpdateDate": {
                    "$ref": "#/$defs/String"
                },
                "ValidationFailures": {
                    "$ref": "#/$defs/ValidationFailures"
                }
            }
        },
        "ValidationFailures": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValidationFailure"
            }
        },
        "ValidationFailure": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DryRunResults": {
            "type": "object",
            "properties": {
                "DeploymentType": {
                    "$ref": "#/$defs/DeploymentType"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                }
            }
        },
        "DeploymentType": {
            "type": "string"
        },
        "DescribeDryRunProgressRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "DryRunId": {
                    "$ref": "#/$defs/GUID"
                },
                "LoadDryRunConfig": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeInboundConnectionsResponse": {
            "type": "object",
            "properties": {
                "Connections": {
                    "$ref": "#/$defs/InboundConnections"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "InboundConnections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InboundConnection"
            }
        },
        "DescribeInboundConnectionsRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "FilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Values": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "NonEmptyString": {
            "type": "string"
        },
        "ValueStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonEmptyString"
            }
        },
        "DescribeInstanceTypeLimitsResponse": {
            "type": "object",
            "properties": {
                "LimitsByRole": {
                    "$ref": "#/$defs/LimitsByRole"
                }
            }
        },
        "LimitsByRole": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Limits"
            }
        },
        "Limits": {
            "type": "object",
            "properties": {
                "StorageTypes": {
                    "$ref": "#/$defs/StorageTypeList"
                },
                "InstanceLimits": {
                    "$ref": "#/$defs/InstanceLimits"
                },
                "AdditionalLimits": {
                    "$ref": "#/$defs/AdditionalLimitList"
                }
            }
        },
        "StorageTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StorageType"
            }
        },
        "StorageType": {
            "type": "object",
            "properties": {
                "StorageTypeName": {
                    "$ref": "#/$defs/StorageTypeName"
                },
                "StorageSubTypeName": {
                    "$ref": "#/$defs/StorageSubTypeName"
                },
                "StorageTypeLimits": {
                    "$ref": "#/$defs/StorageTypeLimitList"
                }
            }
        },
        "StorageSubTypeName": {
            "type": "string"
        },
        "StorageTypeLimitList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StorageTypeLimit"
            }
        },
        "StorageTypeLimit": {
            "type": "object",
            "properties": {
                "LimitName": {
                    "$ref": "#/$defs/LimitName"
                },
                "LimitValues": {
                    "$ref": "#/$defs/LimitValueList"
                }
            }
        },
        "LimitName": {
            "type": "string"
        },
        "LimitValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LimitValue"
            }
        },
        "LimitValue": {
            "type": "string"
        },
        "InstanceLimits": {
            "type": "object",
            "properties": {
                "InstanceCountLimits": {
                    "$ref": "#/$defs/InstanceCountLimits"
                }
            }
        },
        "InstanceCountLimits": {
            "type": "object",
            "properties": {
                "MinimumInstanceCount": {
                    "$ref": "#/$defs/MinimumInstanceCount"
                },
                "MaximumInstanceCount": {
                    "$ref": "#/$defs/MaximumInstanceCount"
                }
            }
        },
        "MinimumInstanceCount": {
            "type": "integer",
            "format": "int32"
        },
        "MaximumInstanceCount": {
            "type": "integer",
            "format": "int32"
        },
        "AdditionalLimitList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AdditionalLimit"
            }
        },
        "AdditionalLimit": {
            "type": "object",
            "properties": {
                "LimitName": {
                    "$ref": "#/$defs/LimitName"
                },
                "LimitValues": {
                    "$ref": "#/$defs/LimitValueList"
                }
            }
        },
        "DescribeInstanceTypeLimitsRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "InstanceType": {
                    "$ref": "#/$defs/OpenSearchPartitionInstanceType"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/VersionString"
                }
            }
        },
        "DescribeOutboundConnectionsResponse": {
            "type": "object",
            "properties": {
                "Connections": {
                    "$ref": "#/$defs/OutboundConnections"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "OutboundConnections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OutboundConnection"
            }
        },
        "DescribeOutboundConnectionsRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribePackagesResponse": {
            "type": "object",
            "properties": {
                "PackageDetailsList": {
                    "$ref": "#/$defs/PackageDetailsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PackageDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackageDetails"
            }
        },
        "DescribePackagesRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/DescribePackagesFilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribePackagesFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribePackagesFilter"
            }
        },
        "DescribePackagesFilter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DescribePackagesFilterName"
                },
                "Value": {
                    "$ref": "#/$defs/DescribePackagesFilterValues"
                }
            }
        },
        "DescribePackagesFilterName": {
            "enum": [
                "PackageID",
                "PackageName",
                "PackageStatus",
                "PackageType",
                "EngineVersion"
            ]
        },
        "DescribePackagesFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribePackagesFilterValue"
            }
        },
        "DescribePackagesFilterValue": {
            "type": "string"
        },
        "DescribeReservedInstanceOfferingsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ReservedInstanceOfferings": {
                    "$ref": "#/$defs/ReservedInstanceOfferingList"
                }
            }
        },
        "ReservedInstanceOfferingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedInstanceOffering"
            }
        },
        "ReservedInstanceOffering": {
            "type": "object",
            "properties": {
                "ReservedInstanceOfferingId": {
                    "$ref": "#/$defs/GUID"
                },
                "InstanceType": {
                    "$ref": "#/$defs/OpenSearchPartitionInstanceType"
                },
                "Duration": {
                    "$ref": "#/$defs/Integer"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/Double"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/Double"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/String"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/ReservedInstancePaymentOption"
                },
                "RecurringCharges": {
                    "$ref": "#/$defs/RecurringChargeList"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "ReservedInstancePaymentOption": {
            "enum": [
                "ALL_UPFRONT",
                "PARTIAL_UPFRONT",
                "NO_UPFRONT"
            ]
        },
        "RecurringChargeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecurringCharge"
            }
        },
        "RecurringCharge": {
            "type": "object",
            "properties": {
                "RecurringChargeAmount": {
                    "$ref": "#/$defs/Double"
                },
                "RecurringChargeFrequency": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeReservedInstanceOfferingsRequest": {
            "type": "object",
            "properties": {
                "ReservedInstanceOfferingId": {
                    "$ref": "#/$defs/GUID"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeReservedInstancesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ReservedInstances": {
                    "$ref": "#/$defs/ReservedInstanceList"
                }
            }
        },
        "ReservedInstanceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedInstance"
            }
        },
        "ReservedInstance": {
            "type": "object",
            "properties": {
                "ReservationName": {
                    "$ref": "#/$defs/ReservationToken"
                },
                "ReservedInstanceId": {
                    "$ref": "#/$defs/GUID"
                },
                "BillingSubscriptionId": {
                    "$ref": "#/$defs/Long"
                },
                "ReservedInstanceOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/OpenSearchPartitionInstanceType"
                },
                "StartTime": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "Duration": {
                    "$ref": "#/$defs/Integer"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/Double"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/Double"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/String"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/ReservedInstancePaymentOption"
                },
                "RecurringCharges": {
                    "$ref": "#/$defs/RecurringChargeList"
                }
            }
        },
        "ReservationToken": {
            "type": "string"
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "DescribeReservedInstancesRequest": {
            "type": "object",
            "properties": {
                "ReservedInstanceId": {
                    "$ref": "#/$defs/GUID"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeVpcEndpointsResponse": {
            "type": "object",
            "properties": {
                "VpcEndpoints": {
                    "$ref": "#/$defs/VpcEndpoints"
                },
                "VpcEndpointErrors": {
                    "$ref": "#/$defs/VpcEndpointErrorList"
                }
            }
        },
        "VpcEndpoints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpoint"
            }
        },
        "VpcEndpointErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointError"
            }
        },
        "VpcEndpointError": {
            "type": "object",
            "properties": {
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/VpcEndpointErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcEndpointErrorCode": {
            "enum": [
                "ENDPOINT_NOT_FOUND",
                "SERVER_ERROR"
            ]
        },
        "DescribeVpcEndpointsRequest": {
            "type": "object",
            "properties": {
                "VpcEndpointIds": {
                    "$ref": "#/$defs/VpcEndpointIdList"
                }
            }
        },
        "VpcEndpointIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointId"
            }
        },
        "DissociatePackageResponse": {
            "type": "object",
            "properties": {
                "DomainPackageDetails": {
                    "$ref": "#/$defs/DomainPackageDetails"
                }
            }
        },
        "DissociatePackageRequest": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "GetCompatibleVersionsResponse": {
            "type": "object",
            "properties": {
                "CompatibleVersions": {
                    "$ref": "#/$defs/CompatibleVersionsList"
                }
            }
        },
        "CompatibleVersionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CompatibleVersionsMap"
            }
        },
        "CompatibleVersionsMap": {
            "type": "object",
            "properties": {
                "SourceVersion": {
                    "$ref": "#/$defs/VersionString"
                },
                "TargetVersions": {
                    "$ref": "#/$defs/VersionList"
                }
            }
        },
        "VersionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VersionString"
            }
        },
        "GetCompatibleVersionsRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "GetDataSourceResponse": {
            "type": "object",
            "properties": {
                "DataSourceType": {
                    "$ref": "#/$defs/DataSourceType"
                },
                "Name": {
                    "$ref": "#/$defs/DataSourceName"
                },
                "Description": {
                    "$ref": "#/$defs/DataSourceDescription"
                },
                "Status": {
                    "$ref": "#/$defs/DataSourceStatus"
                }
            }
        },
        "DataSourceStatus": {
            "enum": [
                "ACTIVE",
                "DISABLED"
            ]
        },
        "GetDataSourceRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Name": {
                    "$ref": "#/$defs/DataSourceName"
                }
            }
        },
        "GetDomainMaintenanceStatusResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/MaintenanceStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/MaintenanceStatusMessage"
                },
                "NodeId": {
                    "$ref": "#/$defs/NodeId"
                },
                "Action": {
                    "$ref": "#/$defs/MaintenanceType"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/UpdateTimestamp"
                }
            }
        },
        "MaintenanceStatus": {
            "enum": [
                "PENDING",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "TIMED_OUT"
            ]
        },
        "MaintenanceStatusMessage": {
            "type": "string"
        },
        "MaintenanceType": {
            "enum": [
                "REBOOT_NODE",
                "RESTART_SEARCH_PROCESS",
                "RESTART_DASHBOARD"
            ]
        },
        "GetDomainMaintenanceStatusRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "MaintenanceId": {
                    "$ref": "#/$defs/RequestId"
                }
            }
        },
        "RequestId": {
            "type": "string"
        },
        "GetPackageVersionHistoryResponse": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "PackageVersionHistoryList": {
                    "$ref": "#/$defs/PackageVersionHistoryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PackageVersionHistoryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackageVersionHistory"
            }
        },
        "PackageVersionHistory": {
            "type": "object",
            "properties": {
                "PackageVersion": {
                    "$ref": "#/$defs/PackageVersion"
                },
                "CommitMessage": {
                    "$ref": "#/$defs/CommitMessage"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/CreatedAt"
                },
                "PluginProperties": {
                    "$ref": "#/$defs/PluginProperties"
                }
            }
        },
        "CommitMessage": {
            "type": "string"
        },
        "GetPackageVersionHistoryRequest": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GetUpgradeHistoryResponse": {
            "type": "object",
            "properties": {
                "UpgradeHistories": {
                    "$ref": "#/$defs/UpgradeHistoryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpgradeHistoryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpgradeHistory"
            }
        },
        "UpgradeHistory": {
            "type": "object",
            "properties": {
                "UpgradeName": {
                    "$ref": "#/$defs/UpgradeName"
                },
                "StartTimestamp": {
                    "$ref": "#/$defs/StartTimestamp"
                },
                "UpgradeStatus": {
                    "$ref": "#/$defs/UpgradeStatus"
                },
                "StepsList": {
                    "$ref": "#/$defs/UpgradeStepsList"
                }
            }
        },
        "UpgradeName": {
            "type": "string"
        },
        "StartTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "UpgradeStatus": {
            "enum": [
                "IN_PROGRESS",
                "SUCCEEDED",
                "SUCCEEDED_WITH_ISSUES",
                "FAILED"
            ]
        },
        "UpgradeStepsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpgradeStepItem"
            }
        },
        "UpgradeStepItem": {
            "type": "object",
            "properties": {
                "UpgradeStep": {
                    "$ref": "#/$defs/UpgradeStep"
                },
                "UpgradeStepStatus": {
                    "$ref": "#/$defs/UpgradeStatus"
                },
                "Issues": {
                    "$ref": "#/$defs/Issues"
                },
                "ProgressPercent": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "UpgradeStep": {
            "enum": [
                "PRE_UPGRADE_CHECK",
                "SNAPSHOT",
                "UPGRADE"
            ]
        },
        "Issues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Issue"
            }
        },
        "Issue": {
            "type": "string"
        },
        "GetUpgradeHistoryRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GetUpgradeStatusResponse": {
            "type": "object",
            "properties": {
                "UpgradeStep": {
                    "$ref": "#/$defs/UpgradeStep"
                },
                "StepStatus": {
                    "$ref": "#/$defs/UpgradeStatus"
                },
                "UpgradeName": {
                    "$ref": "#/$defs/UpgradeName"
                }
            }
        },
        "GetUpgradeStatusRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "ListDataSourcesResponse": {
            "type": "object",
            "properties": {
                "DataSources": {
                    "$ref": "#/$defs/DataSourceList"
                }
            }
        },
        "DataSourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataSourceDetails"
            }
        },
        "DataSourceDetails": {
            "type": "object",
            "properties": {
                "DataSourceType": {
                    "$ref": "#/$defs/DataSourceType"
                },
                "Name": {
                    "$ref": "#/$defs/DataSourceName"
                },
                "Description": {
                    "$ref": "#/$defs/DataSourceDescription"
                },
                "Status": {
                    "$ref": "#/$defs/DataSourceStatus"
                }
            }
        },
        "ListDataSourcesRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "ListDomainMaintenancesResponse": {
            "type": "object",
            "properties": {
                "DomainMaintenances": {
                    "$ref": "#/$defs/DomainMaintenanceList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DomainMaintenanceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainMaintenanceDetails"
            }
        },
        "DomainMaintenanceDetails": {
            "type": "object",
            "properties": {
                "MaintenanceId": {
                    "$ref": "#/$defs/RequestId"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Action": {
                    "$ref": "#/$defs/MaintenanceType"
                },
                "NodeId": {
                    "$ref": "#/$defs/NodeId"
                },
                "Status": {
                    "$ref": "#/$defs/MaintenanceStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/MaintenanceStatusMessage"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/UpdateTimestamp"
                }
            }
        },
        "ListDomainMaintenancesRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Action": {
                    "$ref": "#/$defs/MaintenanceType"
                },
                "Status": {
                    "$ref": "#/$defs/MaintenanceStatus"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListDomainNamesResponse": {
            "type": "object",
            "properties": {
                "DomainNames": {
                    "$ref": "#/$defs/DomainInfoList"
                }
            }
        },
        "DomainInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainInfo"
            }
        },
        "DomainInfo": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "EngineType": {
                    "$ref": "#/$defs/EngineType"
                }
            }
        },
        "EngineType": {
            "enum": [
                "OpenSearch",
                "Elasticsearch"
            ]
        },
        "ListDomainNamesRequest": {
            "type": "object",
            "properties": {
                "EngineType": {
                    "$ref": "#/$defs/EngineType"
                }
            }
        },
        "ListDomainsForPackageResponse": {
            "type": "object",
            "properties": {
                "DomainPackageDetailsList": {
                    "$ref": "#/$defs/DomainPackageDetailsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DomainPackageDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainPackageDetails"
            }
        },
        "ListDomainsForPackageRequest": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListInstanceTypeDetailsResponse": {
            "type": "object",
            "properties": {
                "InstanceTypeDetails": {
                    "$ref": "#/$defs/InstanceTypeDetailsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "InstanceTypeDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceTypeDetails"
            }
        },
        "InstanceTypeDetails": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/OpenSearchPartitionInstanceType"
                },
                "EncryptionEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "CognitoEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "AppLogsEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "AdvancedSecurityEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "WarmEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceRole": {
                    "$ref": "#/$defs/InstanceRoleList"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZoneList"
                }
            }
        },
        "InstanceRoleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceRole"
            }
        },
        "InstanceRole": {
            "type": "string"
        },
        "AvailabilityZoneList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AvailabilityZone"
            }
        },
        "ListInstanceTypeDetailsRequest": {
            "type": "object",
            "properties": {
                "EngineVersion": {
                    "$ref": "#/$defs/VersionString"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "RetrieveAZs": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceTypeString"
                }
            }
        },
        "InstanceTypeString": {
            "type": "string"
        },
        "ListPackagesForDomainResponse": {
            "type": "object",
            "properties": {
                "DomainPackageDetailsList": {
                    "$ref": "#/$defs/DomainPackageDetailsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListPackagesForDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListScheduledActionsResponse": {
            "type": "object",
            "properties": {
                "ScheduledActions": {
                    "$ref": "#/$defs/ScheduledActionsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ScheduledActionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledAction"
            }
        },
        "ScheduledAction": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/ActionType"
                },
                "Severity": {
                    "$ref": "#/$defs/ActionSeverity"
                },
                "ScheduledTime": {
                    "$ref": "#/$defs/Long"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ScheduledBy": {
                    "$ref": "#/$defs/ScheduledBy"
                },
                "Status": {
                    "$ref": "#/$defs/ActionStatus"
                },
                "Mandatory": {
                    "$ref": "#/$defs/Boolean"
                },
                "Cancellable": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ActionType": {
            "enum": [
                "SERVICE_SOFTWARE_UPDATE",
                "JVM_HEAP_SIZE_TUNING",
                "JVM_YOUNG_GEN_TUNING"
            ]
        },
        "ActionSeverity": {
            "enum": [
                "HIGH",
                "MEDIUM",
                "LOW"
            ]
        },
        "ScheduledBy": {
            "enum": [
                "CUSTOMER",
                "SYSTEM"
            ]
        },
        "ActionStatus": {
            "enum": [
                "PENDING_UPDATE",
                "IN_PROGRESS",
                "FAILED",
                "COMPLETED",
                "NOT_ELIGIBLE",
                "ELIGIBLE"
            ]
        },
        "ListScheduledActionsRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTagsResponse": {
            "type": "object",
            "properties": {
                "TagList": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListTagsRequest": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "ListVersionsResponse": {
            "type": "object",
            "properties": {
                "Versions": {
                    "$ref": "#/$defs/VersionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListVersionsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListVpcEndpointAccessResponse": {
            "type": "object",
            "properties": {
                "AuthorizedPrincipalList": {
                    "$ref": "#/$defs/AuthorizedPrincipalList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AuthorizedPrincipalList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuthorizedPrincipal"
            }
        },
        "ListVpcEndpointAccessRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListVpcEndpointsResponse": {
            "type": "object",
            "properties": {
                "VpcEndpointSummaryList": {
                    "$ref": "#/$defs/VpcEndpointSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "VpcEndpointSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointSummary"
            }
        },
        "ListVpcEndpointsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListVpcEndpointsForDomainResponse": {
            "type": "object",
            "properties": {
                "VpcEndpointSummaryList": {
                    "$ref": "#/$defs/VpcEndpointSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListVpcEndpointsForDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PurchaseReservedInstanceOfferingResponse": {
            "type": "object",
            "properties": {
                "ReservedInstanceId": {
                    "$ref": "#/$defs/GUID"
                },
                "ReservationName": {
                    "$ref": "#/$defs/ReservationToken"
                }
            }
        },
        "PurchaseReservedInstanceOfferingRequest": {
            "type": "object",
            "properties": {
                "ReservedInstanceOfferingId": {
                    "$ref": "#/$defs/GUID"
                },
                "ReservationName": {
                    "$ref": "#/$defs/ReservationToken"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/InstanceCount"
                }
            }
        },
        "InstanceCount": {
            "type": "integer",
            "format": "int32"
        },
        "RejectInboundConnectionResponse": {
            "type": "object",
            "properties": {
                "Connection": {
                    "$ref": "#/$defs/InboundConnection"
                }
            }
        },
        "RejectInboundConnectionRequest": {
            "type": "object",
            "properties": {
                "ConnectionId": {
                    "$ref": "#/$defs/ConnectionId"
                }
            }
        },
        "RemoveTagsRequest": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/ARN"
                },
                "TagKeys": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "RevokeVpcEndpointAccessResponse": {
            "type": "object",
            "properties": {}
        },
        "RevokeVpcEndpointAccessRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Account": {
                    "$ref": "#/$defs/AWSAccount"
                }
            }
        },
        "StartDomainMaintenanceResponse": {
            "type": "object",
            "properties": {
                "MaintenanceId": {
                    "$ref": "#/$defs/RequestId"
                }
            }
        },
        "StartDomainMaintenanceRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Action": {
                    "$ref": "#/$defs/MaintenanceType"
                },
                "NodeId": {
                    "$ref": "#/$defs/NodeId"
                }
            }
        },
        "StartServiceSoftwareUpdateResponse": {
            "type": "object",
            "properties": {
                "ServiceSoftwareOptions": {
                    "$ref": "#/$defs/ServiceSoftwareOptions"
                }
            }
        },
        "StartServiceSoftwareUpdateRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "ScheduleAt": {
                    "$ref": "#/$defs/ScheduleAt"
                },
                "DesiredStartTime": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "ScheduleAt": {
            "enum": [
                "NOW",
                "TIMESTAMP",
                "OFF_PEAK_WINDOW"
            ]
        },
        "UpdateDataSourceResponse": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpdateDataSourceRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Name": {
                    "$ref": "#/$defs/DataSourceName"
                },
                "DataSourceType": {
                    "$ref": "#/$defs/DataSourceType"
                },
                "Description": {
                    "$ref": "#/$defs/DataSourceDescription"
                },
                "Status": {
                    "$ref": "#/$defs/DataSourceStatus"
                }
            }
        },
        "UpdateDomainConfigResponse": {
            "type": "object",
            "properties": {
                "DomainConfig": {
                    "$ref": "#/$defs/DomainConfig"
                },
                "DryRunResults": {
                    "$ref": "#/$defs/DryRunResults"
                },
                "DryRunProgressStatus": {
                    "$ref": "#/$defs/DryRunProgressStatus"
                }
            }
        },
        "UpdateDomainConfigRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "ClusterConfig": {
                    "$ref": "#/$defs/ClusterConfig"
                },
                "EBSOptions": {
                    "$ref": "#/$defs/EBSOptions"
                },
                "SnapshotOptions": {
                    "$ref": "#/$defs/SnapshotOptions"
                },
                "VPCOptions": {
                    "$ref": "#/$defs/VPCOptions"
                },
                "CognitoOptions": {
                    "$ref": "#/$defs/CognitoOptions"
                },
                "AdvancedOptions": {
                    "$ref": "#/$defs/AdvancedOptions"
                },
                "AccessPolicies": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "IPAddressType": {
                    "$ref": "#/$defs/IPAddressType"
                },
                "LogPublishingOptions": {
                    "$ref": "#/$defs/LogPublishingOptions"
                },
                "EncryptionAtRestOptions": {
                    "$ref": "#/$defs/EncryptionAtRestOptions"
                },
                "DomainEndpointOptions": {
                    "$ref": "#/$defs/DomainEndpointOptions"
                },
                "NodeToNodeEncryptionOptions": {
                    "$ref": "#/$defs/NodeToNodeEncryptionOptions"
                },
                "AdvancedSecurityOptions": {
                    "$ref": "#/$defs/AdvancedSecurityOptionsInput"
                },
                "AutoTuneOptions": {
                    "$ref": "#/$defs/AutoTuneOptions"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                },
                "DryRunMode": {
                    "$ref": "#/$defs/DryRunMode"
                },
                "OffPeakWindowOptions": {
                    "$ref": "#/$defs/OffPeakWindowOptions"
                },
                "SoftwareUpdateOptions": {
                    "$ref": "#/$defs/SoftwareUpdateOptions"
                },
                "AIMLOptions": {
                    "$ref": "#/$defs/AIMLOptionsInput"
                }
            }
        },
        "DryRunMode": {
            "enum": [
                "Basic",
                "Verbose"
            ]
        },
        "UpdatePackageResponse": {
            "type": "object",
            "properties": {
                "PackageDetails": {
                    "$ref": "#/$defs/PackageDetails"
                }
            }
        },
        "UpdatePackageRequest": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "PackageSource": {
                    "$ref": "#/$defs/PackageSource"
                },
                "PackageDescription": {
                    "$ref": "#/$defs/PackageDescription"
                },
                "CommitMessage": {
                    "$ref": "#/$defs/CommitMessage"
                }
            }
        },
        "UpdateScheduledActionResponse": {
            "type": "object",
            "properties": {
                "ScheduledAction": {
                    "$ref": "#/$defs/ScheduledAction"
                }
            }
        },
        "UpdateScheduledActionRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "ActionID": {
                    "$ref": "#/$defs/String"
                },
                "ActionType": {
                    "$ref": "#/$defs/ActionType"
                },
                "ScheduleAt": {
                    "$ref": "#/$defs/ScheduleAt"
                },
                "DesiredStartTime": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "UpdateVpcEndpointResponse": {
            "type": "object",
            "properties": {
                "VpcEndpoint": {
                    "$ref": "#/$defs/VpcEndpoint"
                }
            }
        },
        "UpdateVpcEndpointRequest": {
            "type": "object",
            "properties": {
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "VpcOptions": {
                    "$ref": "#/$defs/VPCOptions"
                }
            }
        },
        "UpgradeDomainResponse": {
            "type": "object",
            "properties": {
                "UpgradeId": {
                    "$ref": "#/$defs/String"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "TargetVersion": {
                    "$ref": "#/$defs/VersionString"
                },
                "PerformCheckOnly": {
                    "$ref": "#/$defs/Boolean"
                },
                "AdvancedOptions": {
                    "$ref": "#/$defs/AdvancedOptions"
                },
                "ChangeProgressDetails": {
                    "$ref": "#/$defs/ChangeProgressDetails"
                }
            }
        },
        "UpgradeDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "TargetVersion": {
                    "$ref": "#/$defs/VersionString"
                },
                "PerformCheckOnly": {
                    "$ref": "#/$defs/Boolean"
                },
                "AdvancedOptions": {
                    "$ref": "#/$defs/AdvancedOptions"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://es-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://es-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "stringEquals",
                                                        "argv": [
                                                            "aws",
                                                            {
                                                                "fn": "getAttr",
                                                                "argv": [
                                                                    {
                                                                        "ref": "PartitionResult"
                                                                    },
                                                                    "name"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "endpoint": {
                                                    "url": "https://aos.{Region}.api.aws",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            },
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "stringEquals",
                                                        "argv": [
                                                            "aws-cn",
                                                            {
                                                                "fn": "getAttr",
                                                                "argv": [
                                                                    {
                                                                        "ref": "PartitionResult"
                                                                    },
                                                                    "name"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "endpoint": {
                                                    "url": "https://aos.{Region}.api.amazonwebservices.com.cn",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            },
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "stringEquals",
                                                        "argv": [
                                                            "aws-us-gov",
                                                            {
                                                                "fn": "getAttr",
                                                                "argv": [
                                                                    {
                                                                        "ref": "PartitionResult"
                                                                    },
                                                                    "name"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "endpoint": {
                                                    "url": "https://aos.{Region}.api.aws",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            },
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://es.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://es.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}