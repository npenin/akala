{
    "name": "sso-oauth",
    "commands": [
        {
            "name": "CreateToken",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/token"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTokenResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTokenRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientId": {},
                        "clientSecret": {},
                        "grantType": {},
                        "deviceCode": {},
                        "code": {},
                        "refreshToken": {},
                        "scope": {},
                        "redirectUri": {},
                        "codeVerifier": {}
                    }
                }
            }
        },
        {
            "name": "CreateTokenWithIAM",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/token"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTokenWithIAMResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTokenWithIAMRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientId": {},
                        "grantType": {},
                        "code": {},
                        "refreshToken": {},
                        "assertion": {},
                        "scope": {},
                        "redirectUri": {},
                        "subjectToken": {},
                        "subjectTokenType": {},
                        "requestedTokenType": {},
                        "codeVerifier": {}
                    }
                }
            }
        },
        {
            "name": "RegisterClient",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/client/register"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterClientResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterClientRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientName": {},
                        "clientType": {},
                        "scopes": {},
                        "redirectUris": {},
                        "grantTypes": {},
                        "issuerUrl": {},
                        "entitledApplicationArn": {}
                    }
                }
            }
        },
        {
            "name": "StartDeviceAuthorization",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/device_authorization"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartDeviceAuthorizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartDeviceAuthorizationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientId": {},
                        "clientSecret": {},
                        "startUrl": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateTokenRequest": {
            "type": "object",
            "properties": {
                "clientId": {
                    "$ref": "#/$defs/ClientId"
                },
                "clientSecret": {
                    "$ref": "#/$defs/ClientSecret"
                },
                "grantType": {
                    "$ref": "#/$defs/GrantType"
                },
                "deviceCode": {
                    "$ref": "#/$defs/DeviceCode"
                },
                "code": {
                    "$ref": "#/$defs/AuthCode"
                },
                "refreshToken": {
                    "$ref": "#/$defs/RefreshToken"
                },
                "scope": {
                    "$ref": "#/$defs/Scopes"
                },
                "redirectUri": {
                    "$ref": "#/$defs/URI"
                },
                "codeVerifier": {
                    "$ref": "#/$defs/CodeVerifier"
                }
            }
        },
        "ClientId": {
            "type": "string"
        },
        "ClientSecret": {
            "type": "string"
        },
        "GrantType": {
            "type": "string"
        },
        "DeviceCode": {
            "type": "string"
        },
        "AuthCode": {
            "type": "string"
        },
        "RefreshToken": {
            "type": "string"
        },
        "Scopes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Scope"
            }
        },
        "Scope": {
            "type": "string"
        },
        "URI": {
            "type": "string"
        },
        "CodeVerifier": {
            "type": "string"
        },
        "CreateTokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "$ref": "#/$defs/AccessToken"
                },
                "tokenType": {
                    "$ref": "#/$defs/TokenType"
                },
                "expiresIn": {
                    "$ref": "#/$defs/ExpirationInSeconds"
                },
                "refreshToken": {
                    "$ref": "#/$defs/RefreshToken"
                },
                "idToken": {
                    "$ref": "#/$defs/IdToken"
                }
            }
        },
        "AccessToken": {
            "type": "string"
        },
        "TokenType": {
            "type": "string"
        },
        "ExpirationInSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "IdToken": {
            "type": "string"
        },
        "CreateTokenWithIAMRequest": {
            "type": "object",
            "properties": {
                "clientId": {
                    "$ref": "#/$defs/ClientId"
                },
                "grantType": {
                    "$ref": "#/$defs/GrantType"
                },
                "code": {
                    "$ref": "#/$defs/AuthCode"
                },
                "refreshToken": {
                    "$ref": "#/$defs/RefreshToken"
                },
                "assertion": {
                    "$ref": "#/$defs/Assertion"
                },
                "scope": {
                    "$ref": "#/$defs/Scopes"
                },
                "redirectUri": {
                    "$ref": "#/$defs/URI"
                },
                "subjectToken": {
                    "$ref": "#/$defs/SubjectToken"
                },
                "subjectTokenType": {
                    "$ref": "#/$defs/TokenTypeURI"
                },
                "requestedTokenType": {
                    "$ref": "#/$defs/TokenTypeURI"
                },
                "codeVerifier": {
                    "$ref": "#/$defs/CodeVerifier"
                }
            }
        },
        "Assertion": {
            "type": "string"
        },
        "SubjectToken": {
            "type": "string"
        },
        "TokenTypeURI": {
            "type": "string"
        },
        "CreateTokenWithIAMResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "$ref": "#/$defs/AccessToken"
                },
                "tokenType": {
                    "$ref": "#/$defs/TokenType"
                },
                "expiresIn": {
                    "$ref": "#/$defs/ExpirationInSeconds"
                },
                "refreshToken": {
                    "$ref": "#/$defs/RefreshToken"
                },
                "idToken": {
                    "$ref": "#/$defs/IdToken"
                },
                "issuedTokenType": {
                    "$ref": "#/$defs/TokenTypeURI"
                },
                "scope": {
                    "$ref": "#/$defs/Scopes"
                }
            }
        },
        "RegisterClientRequest": {
            "type": "object",
            "properties": {
                "clientName": {
                    "$ref": "#/$defs/ClientName"
                },
                "clientType": {
                    "$ref": "#/$defs/ClientType"
                },
                "scopes": {
                    "$ref": "#/$defs/Scopes"
                },
                "redirectUris": {
                    "$ref": "#/$defs/RedirectUris"
                },
                "grantTypes": {
                    "$ref": "#/$defs/GrantTypes"
                },
                "issuerUrl": {
                    "$ref": "#/$defs/URI"
                },
                "entitledApplicationArn": {
                    "$ref": "#/$defs/ArnType"
                }
            }
        },
        "ClientName": {
            "type": "string"
        },
        "ClientType": {
            "type": "string"
        },
        "RedirectUris": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/URI"
            }
        },
        "GrantTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GrantType"
            }
        },
        "ArnType": {
            "type": "string"
        },
        "RegisterClientResponse": {
            "type": "object",
            "properties": {
                "clientId": {
                    "$ref": "#/$defs/ClientId"
                },
                "clientSecret": {
                    "$ref": "#/$defs/ClientSecret"
                },
                "clientIdIssuedAt": {
                    "$ref": "#/$defs/LongTimeStampType"
                },
                "clientSecretExpiresAt": {
                    "$ref": "#/$defs/LongTimeStampType"
                },
                "authorizationEndpoint": {
                    "$ref": "#/$defs/URI"
                },
                "tokenEndpoint": {
                    "$ref": "#/$defs/URI"
                }
            }
        },
        "LongTimeStampType": {
            "type": "integer",
            "format": "int64"
        },
        "StartDeviceAuthorizationRequest": {
            "type": "object",
            "properties": {
                "clientId": {
                    "$ref": "#/$defs/ClientId"
                },
                "clientSecret": {
                    "$ref": "#/$defs/ClientSecret"
                },
                "startUrl": {
                    "$ref": "#/$defs/URI"
                }
            }
        },
        "StartDeviceAuthorizationResponse": {
            "type": "object",
            "properties": {
                "deviceCode": {
                    "$ref": "#/$defs/DeviceCode"
                },
                "userCode": {
                    "$ref": "#/$defs/UserCode"
                },
                "verificationUri": {
                    "$ref": "#/$defs/URI"
                },
                "verificationUriComplete": {
                    "$ref": "#/$defs/URI"
                },
                "expiresIn": {
                    "$ref": "#/$defs/ExpirationInSeconds"
                },
                "interval": {
                    "$ref": "#/$defs/IntervalInSeconds"
                }
            }
        },
        "UserCode": {
            "type": "string"
        },
        "IntervalInSeconds": {
            "type": "integer",
            "format": "int32"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://oidc-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://oidc.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://oidc-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://oidc.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://oidc.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}