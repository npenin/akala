{
    "name": "ses",
    "commands": [
        {
            "name": "GetArchiveExport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.GetArchiveExport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetArchiveExportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetArchiveExportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetArchiveMessage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.GetArchiveMessage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetArchiveMessageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetArchiveMessageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetArchiveMessageContent",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.GetArchiveMessageContent"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetArchiveMessageContentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetArchiveMessageContentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetArchiveSearch",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.GetArchiveSearch"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetArchiveSearchResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetArchiveSearchRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetArchiveSearchResults",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.GetArchiveSearchResults"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetArchiveSearchResultsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetArchiveSearchResultsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListArchiveExports",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.ListArchiveExports"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListArchiveExportsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListArchiveExportsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListArchiveSearches",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.ListArchiveSearches"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListArchiveSearchesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListArchiveSearchesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartArchiveExport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.StartArchiveExport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartArchiveExportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartArchiveExportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartArchiveSearch",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.StartArchiveSearch"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartArchiveSearchResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartArchiveSearchRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopArchiveExport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.StopArchiveExport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopArchiveExportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopArchiveExportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopArchiveSearch",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.StopArchiveSearch"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopArchiveSearchResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopArchiveSearchRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "MailManagerSvc.UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "GetArchiveExportResponse": {
            "type": "object",
            "properties": {
                "ArchiveId": {
                    "$ref": "#/$defs/ArchiveId"
                },
                "Filters": {
                    "$ref": "#/$defs/ArchiveFilters"
                },
                "FromTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "ToTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ExportMaxResults"
                },
                "ExportDestinationConfiguration": {
                    "$ref": "#/$defs/ExportDestinationConfiguration"
                },
                "Status": {
                    "$ref": "#/$defs/ExportStatus"
                }
            }
        },
        "ArchiveId": {
            "type": "string"
        },
        "ArchiveFilters": {
            "type": "object",
            "properties": {
                "Include": {
                    "$ref": "#/$defs/ArchiveFilterConditions"
                },
                "Unless": {
                    "$ref": "#/$defs/ArchiveFilterConditions"
                }
            }
        },
        "ArchiveFilterConditions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ArchiveFilterCondition"
            }
        },
        "ArchiveFilterCondition": {
            "type": "object",
            "properties": {
                "StringExpression": {
                    "$ref": "#/$defs/ArchiveStringExpression"
                },
                "BooleanExpression": {
                    "$ref": "#/$defs/ArchiveBooleanExpression"
                }
            }
        },
        "ArchiveStringExpression": {
            "type": "object",
            "properties": {
                "Evaluate": {
                    "$ref": "#/$defs/ArchiveStringToEvaluate"
                },
                "Operator": {
                    "$ref": "#/$defs/ArchiveStringOperator"
                },
                "Values": {
                    "$ref": "#/$defs/StringValueList"
                }
            }
        },
        "ArchiveStringToEvaluate": {
            "type": "object",
            "properties": {
                "Attribute": {
                    "$ref": "#/$defs/ArchiveStringEmailAttribute"
                }
            }
        },
        "ArchiveStringEmailAttribute": {
            "enum": [
                "TO",
                "FROM",
                "CC",
                "SUBJECT"
            ]
        },
        "ArchiveStringOperator": {
            "enum": [
                "CONTAINS"
            ]
        },
        "StringValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StringValue"
            }
        },
        "StringValue": {
            "type": "string"
        },
        "ArchiveBooleanExpression": {
            "type": "object",
            "properties": {
                "Evaluate": {
                    "$ref": "#/$defs/ArchiveBooleanToEvaluate"
                },
                "Operator": {
                    "$ref": "#/$defs/ArchiveBooleanOperator"
                }
            }
        },
        "ArchiveBooleanToEvaluate": {
            "type": "object",
            "properties": {
                "Attribute": {
                    "$ref": "#/$defs/ArchiveBooleanEmailAttribute"
                }
            }
        },
        "ArchiveBooleanEmailAttribute": {
            "enum": [
                "HAS_ATTACHMENTS"
            ]
        },
        "ArchiveBooleanOperator": {
            "enum": [
                "IS_TRUE",
                "IS_FALSE"
            ]
        },
        "ExportMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ExportDestinationConfiguration": {
            "type": "object",
            "properties": {
                "S3": {
                    "$ref": "#/$defs/S3ExportDestinationConfiguration"
                }
            }
        },
        "S3ExportDestinationConfiguration": {
            "type": "object",
            "properties": {
                "S3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "S3Location": {
            "type": "string"
        },
        "ExportStatus": {
            "type": "object",
            "properties": {
                "SubmissionTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "CompletionTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "State": {
                    "$ref": "#/$defs/ExportState"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ExportState": {
            "enum": [
                "QUEUED",
                "PREPROCESSING",
                "PROCESSING",
                "COMPLETED",
                "FAILED",
                "CANCELLED"
            ]
        },
        "ErrorMessage": {
            "type": "string"
        },
        "GetArchiveExportRequest": {
            "type": "object",
            "properties": {
                "ExportId": {
                    "$ref": "#/$defs/ExportId"
                }
            }
        },
        "ExportId": {
            "type": "string"
        },
        "GetArchiveMessageResponse": {
            "type": "object",
            "properties": {
                "MessageDownloadLink": {
                    "$ref": "#/$defs/S3PresignedURL"
                }
            }
        },
        "S3PresignedURL": {
            "type": "string"
        },
        "GetArchiveMessageRequest": {
            "type": "object",
            "properties": {
                "ArchivedMessageId": {
                    "$ref": "#/$defs/ArchivedMessageId"
                }
            }
        },
        "ArchivedMessageId": {
            "type": "string"
        },
        "GetArchiveMessageContentResponse": {
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/$defs/MessageBody"
                }
            }
        },
        "MessageBody": {
            "type": "object",
            "properties": {
                "Text": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Html": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "MessageMalformed": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "GetArchiveMessageContentRequest": {
            "type": "object",
            "properties": {
                "ArchivedMessageId": {
                    "$ref": "#/$defs/ArchivedMessageId"
                }
            }
        },
        "GetArchiveSearchResponse": {
            "type": "object",
            "properties": {
                "ArchiveId": {
                    "$ref": "#/$defs/ArchiveId"
                },
                "Filters": {
                    "$ref": "#/$defs/ArchiveFilters"
                },
                "FromTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "ToTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "MaxResults": {
                    "$ref": "#/$defs/SearchMaxResults"
                },
                "Status": {
                    "$ref": "#/$defs/SearchStatus"
                }
            }
        },
        "SearchMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "SearchStatus": {
            "type": "object",
            "properties": {
                "SubmissionTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "CompletionTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "State": {
                    "$ref": "#/$defs/SearchState"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "SearchState": {
            "enum": [
                "QUEUED",
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "CANCELLED"
            ]
        },
        "GetArchiveSearchRequest": {
            "type": "object",
            "properties": {
                "SearchId": {
                    "$ref": "#/$defs/SearchId"
                }
            }
        },
        "SearchId": {
            "type": "string"
        },
        "GetArchiveSearchResultsResponse": {
            "type": "object",
            "properties": {
                "Rows": {
                    "$ref": "#/$defs/RowsList"
                }
            }
        },
        "RowsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Row"
            }
        },
        "Row": {
            "type": "object",
            "properties": {
                "ArchivedMessageId": {
                    "$ref": "#/$defs/ArchivedMessageId"
                },
                "ReceivedTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "Date": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "To": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "From": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Cc": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Subject": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "MessageId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "HasAttachments": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "ReceivedHeaders": {
                    "$ref": "#/$defs/EmailReceivedHeadersList"
                },
                "InReplyTo": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "XMailer": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "XOriginalMailer": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "XPriority": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "EmailReceivedHeadersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "GetArchiveSearchResultsRequest": {
            "type": "object",
            "properties": {
                "SearchId": {
                    "$ref": "#/$defs/SearchId"
                }
            }
        },
        "ListArchiveExportsResponse": {
            "type": "object",
            "properties": {
                "Exports": {
                    "$ref": "#/$defs/ExportSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ExportSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportSummary"
            }
        },
        "ExportSummary": {
            "type": "object",
            "properties": {
                "ExportId": {
                    "$ref": "#/$defs/ExportId"
                },
                "Status": {
                    "$ref": "#/$defs/ExportStatus"
                }
            }
        },
        "PaginationToken": {
            "type": "string"
        },
        "ListArchiveExportsRequest": {
            "type": "object",
            "properties": {
                "ArchiveId": {
                    "$ref": "#/$defs/ArchiveId"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "PageSize": {
            "type": "integer",
            "format": "int32"
        },
        "ListArchiveSearchesResponse": {
            "type": "object",
            "properties": {
                "Searches": {
                    "$ref": "#/$defs/SearchSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "SearchSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SearchSummary"
            }
        },
        "SearchSummary": {
            "type": "object",
            "properties": {
                "SearchId": {
                    "$ref": "#/$defs/SearchId"
                },
                "Status": {
                    "$ref": "#/$defs/SearchStatus"
                }
            }
        },
        "ListArchiveSearchesRequest": {
            "type": "object",
            "properties": {
                "ArchiveId": {
                    "$ref": "#/$defs/ArchiveId"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/TaggableResourceArn"
                }
            }
        },
        "TaggableResourceArn": {
            "type": "string"
        },
        "StartArchiveExportResponse": {
            "type": "object",
            "properties": {
                "ExportId": {
                    "$ref": "#/$defs/ExportId"
                }
            }
        },
        "StartArchiveExportRequest": {
            "type": "object",
            "properties": {
                "ArchiveId": {
                    "$ref": "#/$defs/ArchiveId"
                },
                "Filters": {
                    "$ref": "#/$defs/ArchiveFilters"
                },
                "FromTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "ToTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ExportMaxResults"
                },
                "ExportDestinationConfiguration": {
                    "$ref": "#/$defs/ExportDestinationConfiguration"
                }
            }
        },
        "StartArchiveSearchResponse": {
            "type": "object",
            "properties": {
                "SearchId": {
                    "$ref": "#/$defs/SearchId"
                }
            }
        },
        "StartArchiveSearchRequest": {
            "type": "object",
            "properties": {
                "ArchiveId": {
                    "$ref": "#/$defs/ArchiveId"
                },
                "Filters": {
                    "$ref": "#/$defs/ArchiveFilters"
                },
                "FromTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "ToTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "MaxResults": {
                    "$ref": "#/$defs/SearchMaxResults"
                }
            }
        },
        "StopArchiveExportResponse": {
            "type": "object",
            "properties": {}
        },
        "StopArchiveExportRequest": {
            "type": "object",
            "properties": {
                "ExportId": {
                    "$ref": "#/$defs/ExportId"
                }
            }
        },
        "StopArchiveSearchResponse": {
            "type": "object",
            "properties": {}
        },
        "StopArchiveSearchRequest": {
            "type": "object",
            "properties": {
                "SearchId": {
                    "$ref": "#/$defs/SearchId"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/TaggableResourceArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/TaggableResourceArn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://mail-manager-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://mail-manager-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://mail-manager.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mail-manager.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                }
            ]
        }
    }
}