{
    "name": "medialive",
    "commands": [
        {
            "name": "AcceptInputDeviceTransfer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputDeviceId": "route.InputDeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/inputDevices/{InputDeviceId}/accept"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptInputDeviceTransferResponse"
                    },
                    "inject": [
                        "param.0.InputDeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AcceptInputDeviceTransferRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "BatchDelete",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/batch/delete"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeleteResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDeleteRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "BatchStart",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/batch/start"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchStartResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchStartRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "BatchStop",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/batch/stop"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchStopResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchStopRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "BatchUpdateSchedule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ChannelId": "route.ChannelId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/channels/{ChannelId}/schedule"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchUpdateScheduleResponse"
                    },
                    "inject": [
                        "param.0.ChannelId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchUpdateScheduleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CancelInputDeviceTransfer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputDeviceId": "route.InputDeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/inputDevices/{InputDeviceId}/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelInputDeviceTransferResponse"
                    },
                    "inject": [
                        "param.0.InputDeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelInputDeviceTransferRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ClaimDevice",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/claimDevice"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ClaimDeviceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ClaimDeviceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateChannel",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/channels"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateChannelResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateChannelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateChannelPlacementGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/clusters/{ClusterId}/channelplacementgroups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateChannelPlacementGroupResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateChannelPlacementGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateCloudWatchAlarmTemplate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/cloudwatch-alarm-templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCloudWatchAlarmTemplateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCloudWatchAlarmTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateCloudWatchAlarmTemplateGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/cloudwatch-alarm-template-groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCloudWatchAlarmTemplateGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCloudWatchAlarmTemplateGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateCluster",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/clusters"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateClusterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateEventBridgeRuleTemplate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/eventbridge-rule-templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEventBridgeRuleTemplateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateEventBridgeRuleTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateEventBridgeRuleTemplateGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/eventbridge-rule-template-groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEventBridgeRuleTemplateGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateEventBridgeRuleTemplateGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateInput",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/inputs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateInputResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateInputRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateInputSecurityGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/inputSecurityGroups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateInputSecurityGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateInputSecurityGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateMultiplex",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/multiplexes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMultiplexResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMultiplexRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateMultiplexProgram",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MultiplexId": "route.MultiplexId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/multiplexes/{MultiplexId}/programs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMultiplexProgramResponse"
                    },
                    "inject": [
                        "param.0.MultiplexId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMultiplexProgramRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateNetwork",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/networks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNetworkResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNetworkRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateNode",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/clusters/{ClusterId}/nodes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNodeResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNodeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateNodeRegistrationScript",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/clusters/{ClusterId}/nodeRegistrationScript"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNodeRegistrationScriptResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNodeRegistrationScriptRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreatePartnerInput",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputId": "route.InputId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/inputs/{InputId}/partners"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePartnerInputResponse"
                    },
                    "inject": [
                        "param.0.InputId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePartnerInputRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateSignalMap",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/prod/signal-maps"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSignalMapResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSignalMapRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateTags",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteChannel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ChannelId": "route.ChannelId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/channels/{ChannelId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteChannelResponse"
                    },
                    "inject": [
                        "param.0.ChannelId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteChannelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteChannelPlacementGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "ChannelPlacementGroupId": "route.ChannelPlacementGroupId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/clusters/{ClusterId}/channelplacementgroups/{ChannelPlacementGroupId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteChannelPlacementGroupResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0.ChannelPlacementGroupId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteChannelPlacementGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteCloudWatchAlarmTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/cloudwatch-alarm-templates/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCloudWatchAlarmTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteCloudWatchAlarmTemplateGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/cloudwatch-alarm-template-groups/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCloudWatchAlarmTemplateGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteCluster",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/clusters/{ClusterId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteClusterResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteClusterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteEventBridgeRuleTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/eventbridge-rule-templates/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEventBridgeRuleTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteEventBridgeRuleTemplateGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/eventbridge-rule-template-groups/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEventBridgeRuleTemplateGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteInput",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputId": "route.InputId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/inputs/{InputId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteInputResponse"
                    },
                    "inject": [
                        "param.0.InputId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteInputRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteInputSecurityGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputSecurityGroupId": "route.InputSecurityGroupId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/inputSecurityGroups/{InputSecurityGroupId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteInputSecurityGroupResponse"
                    },
                    "inject": [
                        "param.0.InputSecurityGroupId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteInputSecurityGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMultiplex",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MultiplexId": "route.MultiplexId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/multiplexes/{MultiplexId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMultiplexResponse"
                    },
                    "inject": [
                        "param.0.MultiplexId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMultiplexRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMultiplexProgram",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MultiplexId": "route.MultiplexId",
                            "ProgramName": "route.ProgramName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/multiplexes/{MultiplexId}/programs/{ProgramName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMultiplexProgramResponse"
                    },
                    "inject": [
                        "param.0.MultiplexId",
                        "param.0.ProgramName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMultiplexProgramRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteNetwork",
            "config": {
                "http": {
                    "inject": [
                        {
                            "NetworkId": "route.NetworkId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/networks/{NetworkId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNetworkResponse"
                    },
                    "inject": [
                        "param.0.NetworkId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNetworkRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteNode",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "NodeId": "route.NodeId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/clusters/{ClusterId}/nodes/{NodeId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNodeResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0.NodeId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNodeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteReservation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReservationId": "route.ReservationId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/reservations/{ReservationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteReservationResponse"
                    },
                    "inject": [
                        "param.0.ReservationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteReservationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSchedule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ChannelId": "route.ChannelId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/channels/{ChannelId}/schedule"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteScheduleResponse"
                    },
                    "inject": [
                        "param.0.ChannelId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteScheduleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSignalMap",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/signal-maps/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSignalMapRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteTags",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeAccountConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/accountConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAccountConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAccountConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeChannel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ChannelId": "route.ChannelId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/channels/{ChannelId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeChannelResponse"
                    },
                    "inject": [
                        "param.0.ChannelId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeChannelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeChannelPlacementGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "ChannelPlacementGroupId": "route.ChannelPlacementGroupId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/clusters/{ClusterId}/channelplacementgroups/{ChannelPlacementGroupId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeChannelPlacementGroupResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0.ChannelPlacementGroupId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeChannelPlacementGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeCluster",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/clusters/{ClusterId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClusterResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClusterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeInput",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputId": "route.InputId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/inputs/{InputId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInputResponse"
                    },
                    "inject": [
                        "param.0.InputId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInputRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeInputDevice",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputDeviceId": "route.InputDeviceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/inputDevices/{InputDeviceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInputDeviceResponse"
                    },
                    "inject": [
                        "param.0.InputDeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInputDeviceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeInputDeviceThumbnail",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputDeviceId": "route.InputDeviceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/inputDevices/{InputDeviceId}/thumbnailData"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInputDeviceThumbnailResponse"
                    },
                    "inject": [
                        "param.0.InputDeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInputDeviceThumbnailRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeInputSecurityGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputSecurityGroupId": "route.InputSecurityGroupId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/inputSecurityGroups/{InputSecurityGroupId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInputSecurityGroupResponse"
                    },
                    "inject": [
                        "param.0.InputSecurityGroupId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInputSecurityGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeMultiplex",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MultiplexId": "route.MultiplexId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/multiplexes/{MultiplexId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMultiplexResponse"
                    },
                    "inject": [
                        "param.0.MultiplexId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMultiplexRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeMultiplexProgram",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MultiplexId": "route.MultiplexId",
                            "ProgramName": "route.ProgramName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/multiplexes/{MultiplexId}/programs/{ProgramName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMultiplexProgramResponse"
                    },
                    "inject": [
                        "param.0.MultiplexId",
                        "param.0.ProgramName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMultiplexProgramRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeNetwork",
            "config": {
                "http": {
                    "inject": [
                        {
                            "NetworkId": "route.NetworkId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/networks/{NetworkId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNetworkResponse"
                    },
                    "inject": [
                        "param.0.NetworkId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNetworkRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeNode",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "NodeId": "route.NodeId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/clusters/{ClusterId}/nodes/{NodeId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNodeResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0.NodeId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNodeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeOffering",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OfferingId": "route.OfferingId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/offerings/{OfferingId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeOfferingResponse"
                    },
                    "inject": [
                        "param.0.OfferingId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeOfferingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeReservation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReservationId": "route.ReservationId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/reservations/{ReservationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReservationResponse"
                    },
                    "inject": [
                        "param.0.ReservationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReservationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeSchedule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ChannelId": "route.ChannelId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/channels/{ChannelId}/schedule"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeScheduleResponse"
                    },
                    "inject": [
                        "param.0.ChannelId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeScheduleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeThumbnails",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ChannelId": "route.ChannelId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/channels/{ChannelId}/thumbnails"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeThumbnailsResponse"
                    },
                    "inject": [
                        "param.0.ChannelId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeThumbnailsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetCloudWatchAlarmTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/cloudwatch-alarm-templates/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCloudWatchAlarmTemplateResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCloudWatchAlarmTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetCloudWatchAlarmTemplateGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/cloudwatch-alarm-template-groups/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCloudWatchAlarmTemplateGroupResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCloudWatchAlarmTemplateGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetEventBridgeRuleTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/eventbridge-rule-templates/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEventBridgeRuleTemplateResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEventBridgeRuleTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetEventBridgeRuleTemplateGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/eventbridge-rule-template-groups/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEventBridgeRuleTemplateGroupResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEventBridgeRuleTemplateGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetSignalMap",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/signal-maps/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSignalMapResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSignalMapRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListChannelPlacementGroups",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/clusters/{ClusterId}/channelplacementgroups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListChannelPlacementGroupsResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListChannelPlacementGroupsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListChannels",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/channels"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListChannelsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListChannelsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCloudWatchAlarmTemplateGroups",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/cloudwatch-alarm-template-groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCloudWatchAlarmTemplateGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCloudWatchAlarmTemplateGroupsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCloudWatchAlarmTemplates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/cloudwatch-alarm-templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCloudWatchAlarmTemplatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCloudWatchAlarmTemplatesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListClusters",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/clusters"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListClustersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListClustersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListEventBridgeRuleTemplateGroups",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/eventbridge-rule-template-groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEventBridgeRuleTemplateGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEventBridgeRuleTemplateGroupsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListEventBridgeRuleTemplates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/eventbridge-rule-templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEventBridgeRuleTemplatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEventBridgeRuleTemplatesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListInputDevices",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/inputDevices"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInputDevicesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInputDevicesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListInputDeviceTransfers",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/inputDeviceTransfers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInputDeviceTransfersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInputDeviceTransfersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListInputs",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/inputs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInputsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInputsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListInputSecurityGroups",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/inputSecurityGroups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInputSecurityGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInputSecurityGroupsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListMultiplexes",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/multiplexes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMultiplexesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMultiplexesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListMultiplexPrograms",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MultiplexId": "route.MultiplexId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/multiplexes/{MultiplexId}/programs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMultiplexProgramsResponse"
                    },
                    "inject": [
                        "param.0.MultiplexId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMultiplexProgramsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListNetworks",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/networks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNetworksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListNetworksRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListNodes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/clusters/{ClusterId}/nodes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNodesResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListNodesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListOfferings",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/offerings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOfferingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOfferingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListReservations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/reservations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListReservationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListReservationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListSignalMaps",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/signal-maps"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSignalMapsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSignalMapsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/prod/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListVersions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/prod/versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVersionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PurchaseOffering",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OfferingId": "route.OfferingId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/offerings/{OfferingId}/purchase"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PurchaseOfferingResponse"
                    },
                    "inject": [
                        "param.0.OfferingId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PurchaseOfferingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "RebootInputDevice",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputDeviceId": "route.InputDeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/inputDevices/{InputDeviceId}/reboot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RebootInputDeviceResponse"
                    },
                    "inject": [
                        "param.0.InputDeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RebootInputDeviceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "RejectInputDeviceTransfer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputDeviceId": "route.InputDeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/inputDevices/{InputDeviceId}/reject"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RejectInputDeviceTransferResponse"
                    },
                    "inject": [
                        "param.0.InputDeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RejectInputDeviceTransferRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "RestartChannelPipelines",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ChannelId": "route.ChannelId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/channels/{ChannelId}/restartChannelPipelines"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestartChannelPipelinesResponse"
                    },
                    "inject": [
                        "param.0.ChannelId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RestartChannelPipelinesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartChannel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ChannelId": "route.ChannelId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/channels/{ChannelId}/start"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartChannelResponse"
                    },
                    "inject": [
                        "param.0.ChannelId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartChannelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartDeleteMonitorDeployment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/prod/signal-maps/{Identifier}/monitor-deployment"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartDeleteMonitorDeploymentResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartDeleteMonitorDeploymentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartInputDevice",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputDeviceId": "route.InputDeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/inputDevices/{InputDeviceId}/start"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartInputDeviceResponse"
                    },
                    "inject": [
                        "param.0.InputDeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartInputDeviceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartInputDeviceMaintenanceWindow",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputDeviceId": "route.InputDeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/inputDevices/{InputDeviceId}/startInputDeviceMaintenanceWindow"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartInputDeviceMaintenanceWindowResponse"
                    },
                    "inject": [
                        "param.0.InputDeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartInputDeviceMaintenanceWindowRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartMonitorDeployment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/signal-maps/{Identifier}/monitor-deployment"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartMonitorDeploymentResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartMonitorDeploymentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartMultiplex",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MultiplexId": "route.MultiplexId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/multiplexes/{MultiplexId}/start"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartMultiplexResponse"
                    },
                    "inject": [
                        "param.0.MultiplexId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartMultiplexRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartUpdateSignalMap",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/prod/signal-maps/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartUpdateSignalMapResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartUpdateSignalMapRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StopChannel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ChannelId": "route.ChannelId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/channels/{ChannelId}/stop"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopChannelResponse"
                    },
                    "inject": [
                        "param.0.ChannelId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopChannelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StopInputDevice",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputDeviceId": "route.InputDeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/inputDevices/{InputDeviceId}/stop"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopInputDeviceResponse"
                    },
                    "inject": [
                        "param.0.InputDeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopInputDeviceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StopMultiplex",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MultiplexId": "route.MultiplexId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/multiplexes/{MultiplexId}/stop"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopMultiplexResponse"
                    },
                    "inject": [
                        "param.0.MultiplexId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopMultiplexRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TransferInputDevice",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputDeviceId": "route.InputDeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/prod/inputDevices/{InputDeviceId}/transfer"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TransferInputDeviceResponse"
                    },
                    "inject": [
                        "param.0.InputDeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TransferInputDeviceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateAccountConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/prod/accountConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAccountConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAccountConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateChannel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ChannelId": "route.ChannelId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/channels/{ChannelId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateChannelResponse"
                    },
                    "inject": [
                        "param.0.ChannelId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateChannelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateChannelClass",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ChannelId": "route.ChannelId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/channels/{ChannelId}/channelClass"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateChannelClassResponse"
                    },
                    "inject": [
                        "param.0.ChannelId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateChannelClassRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateChannelPlacementGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "ChannelPlacementGroupId": "route.ChannelPlacementGroupId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/clusters/{ClusterId}/channelplacementgroups/{ChannelPlacementGroupId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateChannelPlacementGroupResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0.ChannelPlacementGroupId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateChannelPlacementGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateCloudWatchAlarmTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/prod/cloudwatch-alarm-templates/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCloudWatchAlarmTemplateResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCloudWatchAlarmTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateCloudWatchAlarmTemplateGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/prod/cloudwatch-alarm-template-groups/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCloudWatchAlarmTemplateGroupResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCloudWatchAlarmTemplateGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateCluster",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/clusters/{ClusterId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateClusterResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateClusterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateEventBridgeRuleTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/prod/eventbridge-rule-templates/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEventBridgeRuleTemplateResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateEventBridgeRuleTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateEventBridgeRuleTemplateGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/prod/eventbridge-rule-template-groups/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEventBridgeRuleTemplateGroupResponse"
                    },
                    "inject": [
                        "param.0.Identifier",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateEventBridgeRuleTemplateGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateInput",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputId": "route.InputId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/inputs/{InputId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateInputResponse"
                    },
                    "inject": [
                        "param.0.InputId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateInputRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateInputDevice",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputDeviceId": "route.InputDeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/inputDevices/{InputDeviceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateInputDeviceResponse"
                    },
                    "inject": [
                        "param.0.InputDeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateInputDeviceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateInputSecurityGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "InputSecurityGroupId": "route.InputSecurityGroupId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/inputSecurityGroups/{InputSecurityGroupId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateInputSecurityGroupResponse"
                    },
                    "inject": [
                        "param.0.InputSecurityGroupId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateInputSecurityGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMultiplex",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MultiplexId": "route.MultiplexId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/multiplexes/{MultiplexId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMultiplexResponse"
                    },
                    "inject": [
                        "param.0.MultiplexId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMultiplexRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMultiplexProgram",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MultiplexId": "route.MultiplexId",
                            "ProgramName": "route.ProgramName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/multiplexes/{MultiplexId}/programs/{ProgramName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMultiplexProgramResponse"
                    },
                    "inject": [
                        "param.0.MultiplexId",
                        "param.0.ProgramName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMultiplexProgramRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateNetwork",
            "config": {
                "http": {
                    "inject": [
                        {
                            "NetworkId": "route.NetworkId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/networks/{NetworkId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateNetworkResponse"
                    },
                    "inject": [
                        "param.0.NetworkId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateNetworkRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateNode",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "NodeId": "route.NodeId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/clusters/{ClusterId}/nodes/{NodeId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateNodeResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0.NodeId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateNodeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateNodeState",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterId": "route.ClusterId",
                            "NodeId": "route.NodeId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/clusters/{ClusterId}/nodes/{NodeId}/state"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateNodeStateResponse"
                    },
                    "inject": [
                        "param.0.ClusterId",
                        "param.0.NodeId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateNodeStateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateReservation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReservationId": "route.ReservationId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/prod/reservations/{ReservationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateReservationResponse"
                    },
                    "inject": [
                        "param.0.ReservationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateReservationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AcceptInputDeviceTransferResponse": {
            "type": "object",
            "properties": {}
        },
        "AcceptInputDeviceTransferRequest": {
            "type": "object",
            "properties": {
                "InputDeviceId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__string": {
            "type": "string"
        },
        "BatchDeleteResponse": {
            "type": "object",
            "properties": {
                "Failed": {
                    "$ref": "#/$defs/__listOfBatchFailedResultModel"
                },
                "Successful": {
                    "$ref": "#/$defs/__listOfBatchSuccessfulResultModel"
                }
            }
        },
        "__listOfBatchFailedResultModel": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchFailedResultModel"
            }
        },
        "BatchFailedResultModel": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Code": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Message": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfBatchSuccessfulResultModel": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchSuccessfulResultModel"
            }
        },
        "BatchSuccessfulResultModel": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "BatchDeleteRequest": {
            "type": "object",
            "properties": {
                "ChannelIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "InputIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "InputSecurityGroupIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "MultiplexIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "__listOf__string": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__string"
            }
        },
        "BatchStartResponse": {
            "type": "object",
            "properties": {
                "Failed": {
                    "$ref": "#/$defs/__listOfBatchFailedResultModel"
                },
                "Successful": {
                    "$ref": "#/$defs/__listOfBatchSuccessfulResultModel"
                }
            }
        },
        "BatchStartRequest": {
            "type": "object",
            "properties": {
                "ChannelIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "MultiplexIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "BatchStopResponse": {
            "type": "object",
            "properties": {
                "Failed": {
                    "$ref": "#/$defs/__listOfBatchFailedResultModel"
                },
                "Successful": {
                    "$ref": "#/$defs/__listOfBatchSuccessfulResultModel"
                }
            }
        },
        "BatchStopRequest": {
            "type": "object",
            "properties": {
                "ChannelIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "MultiplexIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "BatchUpdateScheduleResponse": {
            "type": "object",
            "properties": {
                "Creates": {
                    "$ref": "#/$defs/BatchScheduleActionCreateResult"
                },
                "Deletes": {
                    "$ref": "#/$defs/BatchScheduleActionDeleteResult"
                }
            }
        },
        "BatchScheduleActionCreateResult": {
            "type": "object",
            "properties": {
                "ScheduleActions": {
                    "$ref": "#/$defs/__listOfScheduleAction"
                }
            }
        },
        "__listOfScheduleAction": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduleAction"
            }
        },
        "ScheduleAction": {
            "type": "object",
            "properties": {
                "ActionName": {
                    "$ref": "#/$defs/__string"
                },
                "ScheduleActionSettings": {
                    "$ref": "#/$defs/ScheduleActionSettings"
                },
                "ScheduleActionStartSettings": {
                    "$ref": "#/$defs/ScheduleActionStartSettings"
                }
            }
        },
        "ScheduleActionSettings": {
            "type": "object",
            "properties": {
                "HlsId3SegmentTaggingSettings": {
                    "$ref": "#/$defs/HlsId3SegmentTaggingScheduleActionSettings"
                },
                "HlsTimedMetadataSettings": {
                    "$ref": "#/$defs/HlsTimedMetadataScheduleActionSettings"
                },
                "InputPrepareSettings": {
                    "$ref": "#/$defs/InputPrepareScheduleActionSettings"
                },
                "InputSwitchSettings": {
                    "$ref": "#/$defs/InputSwitchScheduleActionSettings"
                },
                "MotionGraphicsImageActivateSettings": {
                    "$ref": "#/$defs/MotionGraphicsActivateScheduleActionSettings"
                },
                "MotionGraphicsImageDeactivateSettings": {
                    "$ref": "#/$defs/MotionGraphicsDeactivateScheduleActionSettings"
                },
                "PauseStateSettings": {
                    "$ref": "#/$defs/PauseStateScheduleActionSettings"
                },
                "Scte35InputSettings": {
                    "$ref": "#/$defs/Scte35InputScheduleActionSettings"
                },
                "Scte35ReturnToNetworkSettings": {
                    "$ref": "#/$defs/Scte35ReturnToNetworkScheduleActionSettings"
                },
                "Scte35SpliceInsertSettings": {
                    "$ref": "#/$defs/Scte35SpliceInsertScheduleActionSettings"
                },
                "Scte35TimeSignalSettings": {
                    "$ref": "#/$defs/Scte35TimeSignalScheduleActionSettings"
                },
                "StaticImageActivateSettings": {
                    "$ref": "#/$defs/StaticImageActivateScheduleActionSettings"
                },
                "StaticImageDeactivateSettings": {
                    "$ref": "#/$defs/StaticImageDeactivateScheduleActionSettings"
                },
                "StaticImageOutputActivateSettings": {
                    "$ref": "#/$defs/StaticImageOutputActivateScheduleActionSettings"
                },
                "StaticImageOutputDeactivateSettings": {
                    "$ref": "#/$defs/StaticImageOutputDeactivateScheduleActionSettings"
                },
                "Id3SegmentTaggingSettings": {
                    "$ref": "#/$defs/Id3SegmentTaggingScheduleActionSettings"
                },
                "TimedMetadataSettings": {
                    "$ref": "#/$defs/TimedMetadataScheduleActionSettings"
                }
            }
        },
        "HlsId3SegmentTaggingScheduleActionSettings": {
            "type": "object",
            "properties": {
                "Tag": {
                    "$ref": "#/$defs/__string"
                },
                "Id3": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "HlsTimedMetadataScheduleActionSettings": {
            "type": "object",
            "properties": {
                "Id3": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "InputPrepareScheduleActionSettings": {
            "type": "object",
            "properties": {
                "InputAttachmentNameReference": {
                    "$ref": "#/$defs/__string"
                },
                "InputClippingSettings": {
                    "$ref": "#/$defs/InputClippingSettings"
                },
                "UrlPath": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "InputClippingSettings": {
            "type": "object",
            "properties": {
                "InputTimecodeSource": {
                    "$ref": "#/$defs/InputTimecodeSource"
                },
                "StartTimecode": {
                    "$ref": "#/$defs/StartTimecode"
                },
                "StopTimecode": {
                    "$ref": "#/$defs/StopTimecode"
                }
            }
        },
        "InputTimecodeSource": {
            "enum": [
                "ZEROBASED",
                "EMBEDDED"
            ]
        },
        "StartTimecode": {
            "type": "object",
            "properties": {
                "Timecode": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StopTimecode": {
            "type": "object",
            "properties": {
                "LastFrameClippingBehavior": {
                    "$ref": "#/$defs/LastFrameClippingBehavior"
                },
                "Timecode": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "LastFrameClippingBehavior": {
            "enum": [
                "EXCLUDE_LAST_FRAME",
                "INCLUDE_LAST_FRAME"
            ]
        },
        "InputSwitchScheduleActionSettings": {
            "type": "object",
            "properties": {
                "InputAttachmentNameReference": {
                    "$ref": "#/$defs/__string"
                },
                "InputClippingSettings": {
                    "$ref": "#/$defs/InputClippingSettings"
                },
                "UrlPath": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "MotionGraphicsActivateScheduleActionSettings": {
            "type": "object",
            "properties": {
                "Duration": {
                    "$ref": "#/$defs/__longMin0Max86400000"
                },
                "PasswordParam": {
                    "$ref": "#/$defs/__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                },
                "Username": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__longMin0Max86400000": {
            "type": "integer",
            "format": "int64"
        },
        "MotionGraphicsDeactivateScheduleActionSettings": {
            "type": "object",
            "properties": {}
        },
        "PauseStateScheduleActionSettings": {
            "type": "object",
            "properties": {
                "Pipelines": {
                    "$ref": "#/$defs/__listOfPipelinePauseStateSettings"
                }
            }
        },
        "__listOfPipelinePauseStateSettings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PipelinePauseStateSettings"
            }
        },
        "PipelinePauseStateSettings": {
            "type": "object",
            "properties": {
                "PipelineId": {
                    "$ref": "#/$defs/PipelineId"
                }
            }
        },
        "PipelineId": {
            "enum": [
                "PIPELINE_0",
                "PIPELINE_1"
            ]
        },
        "Scte35InputScheduleActionSettings": {
            "type": "object",
            "properties": {
                "InputAttachmentNameReference": {
                    "$ref": "#/$defs/__string"
                },
                "Mode": {
                    "$ref": "#/$defs/Scte35InputMode"
                }
            }
        },
        "Scte35InputMode": {
            "enum": [
                "FIXED",
                "FOLLOW_ACTIVE"
            ]
        },
        "Scte35ReturnToNetworkScheduleActionSettings": {
            "type": "object",
            "properties": {
                "SpliceEventId": {
                    "$ref": "#/$defs/__longMin0Max4294967295"
                }
            }
        },
        "__longMin0Max4294967295": {
            "type": "integer",
            "format": "int64"
        },
        "Scte35SpliceInsertScheduleActionSettings": {
            "type": "object",
            "properties": {
                "Duration": {
                    "$ref": "#/$defs/__longMin0Max8589934591"
                },
                "SpliceEventId": {
                    "$ref": "#/$defs/__longMin0Max4294967295"
                }
            }
        },
        "__longMin0Max8589934591": {
            "type": "integer",
            "format": "int64"
        },
        "Scte35TimeSignalScheduleActionSettings": {
            "type": "object",
            "properties": {
                "Scte35Descriptors": {
                    "$ref": "#/$defs/__listOfScte35Descriptor"
                }
            }
        },
        "__listOfScte35Descriptor": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Scte35Descriptor"
            }
        },
        "Scte35Descriptor": {
            "type": "object",
            "properties": {
                "Scte35DescriptorSettings": {
                    "$ref": "#/$defs/Scte35DescriptorSettings"
                }
            }
        },
        "Scte35DescriptorSettings": {
            "type": "object",
            "properties": {
                "SegmentationDescriptorScte35DescriptorSettings": {
                    "$ref": "#/$defs/Scte35SegmentationDescriptor"
                }
            }
        },
        "Scte35SegmentationDescriptor": {
            "type": "object",
            "properties": {
                "DeliveryRestrictions": {
                    "$ref": "#/$defs/Scte35DeliveryRestrictions"
                },
                "SegmentNum": {
                    "$ref": "#/$defs/__integerMin0Max255"
                },
                "SegmentationCancelIndicator": {
                    "$ref": "#/$defs/Scte35SegmentationCancelIndicator"
                },
                "SegmentationDuration": {
                    "$ref": "#/$defs/__longMin0Max1099511627775"
                },
                "SegmentationEventId": {
                    "$ref": "#/$defs/__longMin0Max4294967295"
                },
                "SegmentationTypeId": {
                    "$ref": "#/$defs/__integerMin0Max255"
                },
                "SegmentationUpid": {
                    "$ref": "#/$defs/__string"
                },
                "SegmentationUpidType": {
                    "$ref": "#/$defs/__integerMin0Max255"
                },
                "SegmentsExpected": {
                    "$ref": "#/$defs/__integerMin0Max255"
                },
                "SubSegmentNum": {
                    "$ref": "#/$defs/__integerMin0Max255"
                },
                "SubSegmentsExpected": {
                    "$ref": "#/$defs/__integerMin0Max255"
                }
            }
        },
        "Scte35DeliveryRestrictions": {
            "type": "object",
            "properties": {
                "ArchiveAllowedFlag": {
                    "$ref": "#/$defs/Scte35ArchiveAllowedFlag"
                },
                "DeviceRestrictions": {
                    "$ref": "#/$defs/Scte35DeviceRestrictions"
                },
                "NoRegionalBlackoutFlag": {
                    "$ref": "#/$defs/Scte35NoRegionalBlackoutFlag"
                },
                "WebDeliveryAllowedFlag": {
                    "$ref": "#/$defs/Scte35WebDeliveryAllowedFlag"
                }
            }
        },
        "Scte35ArchiveAllowedFlag": {
            "enum": [
                "ARCHIVE_NOT_ALLOWED",
                "ARCHIVE_ALLOWED"
            ]
        },
        "Scte35DeviceRestrictions": {
            "enum": [
                "NONE",
                "RESTRICT_GROUP0",
                "RESTRICT_GROUP1",
                "RESTRICT_GROUP2"
            ]
        },
        "Scte35NoRegionalBlackoutFlag": {
            "enum": [
                "REGIONAL_BLACKOUT",
                "NO_REGIONAL_BLACKOUT"
            ]
        },
        "Scte35WebDeliveryAllowedFlag": {
            "enum": [
                "WEB_DELIVERY_NOT_ALLOWED",
                "WEB_DELIVERY_ALLOWED"
            ]
        },
        "__integerMin0Max255": {
            "type": "integer",
            "format": "int32"
        },
        "Scte35SegmentationCancelIndicator": {
            "enum": [
                "SEGMENTATION_EVENT_NOT_CANCELED",
                "SEGMENTATION_EVENT_CANCELED"
            ]
        },
        "__longMin0Max1099511627775": {
            "type": "integer",
            "format": "int64"
        },
        "StaticImageActivateScheduleActionSettings": {
            "type": "object",
            "properties": {
                "Duration": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "FadeIn": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "FadeOut": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "Height": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "Image": {
                    "$ref": "#/$defs/InputLocation"
                },
                "ImageX": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "ImageY": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "Layer": {
                    "$ref": "#/$defs/__integerMin0Max7"
                },
                "Opacity": {
                    "$ref": "#/$defs/__integerMin0Max100"
                },
                "Width": {
                    "$ref": "#/$defs/__integerMin1"
                }
            }
        },
        "__integerMin0": {
            "type": "integer",
            "format": "int32"
        },
        "__integerMin1": {
            "type": "integer",
            "format": "int32"
        },
        "InputLocation": {
            "type": "object",
            "properties": {
                "PasswordParam": {
                    "$ref": "#/$defs/__string"
                },
                "Uri": {
                    "$ref": "#/$defs/__stringMax2048"
                },
                "Username": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__stringMax2048": {
            "type": "string"
        },
        "__integerMin0Max7": {
            "type": "integer",
            "format": "int32"
        },
        "__integerMin0Max100": {
            "type": "integer",
            "format": "int32"
        },
        "StaticImageDeactivateScheduleActionSettings": {
            "type": "object",
            "properties": {
                "FadeOut": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "Layer": {
                    "$ref": "#/$defs/__integerMin0Max7"
                }
            }
        },
        "StaticImageOutputActivateScheduleActionSettings": {
            "type": "object",
            "properties": {
                "Duration": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "FadeIn": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "FadeOut": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "Height": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "Image": {
                    "$ref": "#/$defs/InputLocation"
                },
                "ImageX": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "ImageY": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "Layer": {
                    "$ref": "#/$defs/__integerMin0Max7"
                },
                "Opacity": {
                    "$ref": "#/$defs/__integerMin0Max100"
                },
                "OutputNames": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Width": {
                    "$ref": "#/$defs/__integerMin1"
                }
            }
        },
        "StaticImageOutputDeactivateScheduleActionSettings": {
            "type": "object",
            "properties": {
                "FadeOut": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "Layer": {
                    "$ref": "#/$defs/__integerMin0Max7"
                },
                "OutputNames": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "Id3SegmentTaggingScheduleActionSettings": {
            "type": "object",
            "properties": {
                "Id3": {
                    "$ref": "#/$defs/__string"
                },
                "Tag": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "TimedMetadataScheduleActionSettings": {
            "type": "object",
            "properties": {
                "Id3": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ScheduleActionStartSettings": {
            "type": "object",
            "properties": {
                "FixedModeScheduleActionStartSettings": {
                    "$ref": "#/$defs/FixedModeScheduleActionStartSettings"
                },
                "FollowModeScheduleActionStartSettings": {
                    "$ref": "#/$defs/FollowModeScheduleActionStartSettings"
                },
                "ImmediateModeScheduleActionStartSettings": {
                    "$ref": "#/$defs/ImmediateModeScheduleActionStartSettings"
                }
            }
        },
        "FixedModeScheduleActionStartSettings": {
            "type": "object",
            "properties": {
                "Time": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "FollowModeScheduleActionStartSettings": {
            "type": "object",
            "properties": {
                "FollowPoint": {
                    "$ref": "#/$defs/FollowPoint"
                },
                "ReferenceActionName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "FollowPoint": {
            "enum": [
                "END",
                "START"
            ]
        },
        "ImmediateModeScheduleActionStartSettings": {
            "type": "object",
            "properties": {}
        },
        "BatchScheduleActionDeleteResult": {
            "type": "object",
            "properties": {
                "ScheduleActions": {
                    "$ref": "#/$defs/__listOfScheduleAction"
                }
            }
        },
        "BatchUpdateScheduleRequest": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "Creates": {
                    "$ref": "#/$defs/BatchScheduleActionCreateRequest"
                },
                "Deletes": {
                    "$ref": "#/$defs/BatchScheduleActionDeleteRequest"
                }
            }
        },
        "BatchScheduleActionCreateRequest": {
            "type": "object",
            "properties": {
                "ScheduleActions": {
                    "$ref": "#/$defs/__listOfScheduleAction"
                }
            }
        },
        "BatchScheduleActionDeleteRequest": {
            "type": "object",
            "properties": {
                "ActionNames": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "CancelInputDeviceTransferResponse": {
            "type": "object",
            "properties": {}
        },
        "CancelInputDeviceTransferRequest": {
            "type": "object",
            "properties": {
                "InputDeviceId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ClaimDeviceResponse": {
            "type": "object",
            "properties": {}
        },
        "ClaimDeviceRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateChannelResponse": {
            "type": "object",
            "properties": {
                "Channel": {
                    "$ref": "#/$defs/Channel"
                }
            }
        },
        "Channel": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CdiInputSpecification": {
                    "$ref": "#/$defs/CdiInputSpecification"
                },
                "ChannelClass": {
                    "$ref": "#/$defs/ChannelClass"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfOutputDestination"
                },
                "EgressEndpoints": {
                    "$ref": "#/$defs/__listOfChannelEgressEndpoint"
                },
                "EncoderSettings": {
                    "$ref": "#/$defs/EncoderSettings"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InputAttachments": {
                    "$ref": "#/$defs/__listOfInputAttachment"
                },
                "InputSpecification": {
                    "$ref": "#/$defs/InputSpecification"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "Maintenance": {
                    "$ref": "#/$defs/MaintenanceStatus"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelineDetails": {
                    "$ref": "#/$defs/__listOfPipelineDetail"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ChannelState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Vpc": {
                    "$ref": "#/$defs/VpcOutputSettingsDescription"
                },
                "AnywhereSettings": {
                    "$ref": "#/$defs/DescribeAnywhereSettings"
                },
                "ChannelEngineVersion": {
                    "$ref": "#/$defs/ChannelEngineVersionResponse"
                }
            }
        },
        "CdiInputSpecification": {
            "type": "object",
            "properties": {
                "Resolution": {
                    "$ref": "#/$defs/CdiInputResolution"
                }
            }
        },
        "CdiInputResolution": {
            "enum": [
                "SD",
                "HD",
                "FHD",
                "UHD"
            ]
        },
        "ChannelClass": {
            "enum": [
                "STANDARD",
                "SINGLE_PIPELINE"
            ]
        },
        "__listOfOutputDestination": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OutputDestination"
            }
        },
        "OutputDestination": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MediaPackageSettings": {
                    "$ref": "#/$defs/__listOfMediaPackageOutputDestinationSettings"
                },
                "MultiplexSettings": {
                    "$ref": "#/$defs/MultiplexProgramChannelDestinationSettings"
                },
                "Settings": {
                    "$ref": "#/$defs/__listOfOutputDestinationSettings"
                },
                "SrtSettings": {
                    "$ref": "#/$defs/__listOfSrtOutputDestinationSettings"
                }
            }
        },
        "__listOfMediaPackageOutputDestinationSettings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaPackageOutputDestinationSettings"
            }
        },
        "MediaPackageOutputDestinationSettings": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__stringMin1"
                },
                "ChannelGroup": {
                    "$ref": "#/$defs/__stringMin1"
                },
                "ChannelName": {
                    "$ref": "#/$defs/__stringMin1"
                }
            }
        },
        "__stringMin1": {
            "type": "string"
        },
        "MultiplexProgramChannelDestinationSettings": {
            "type": "object",
            "properties": {
                "MultiplexId": {
                    "$ref": "#/$defs/__stringMin1"
                },
                "ProgramName": {
                    "$ref": "#/$defs/__stringMin1"
                }
            }
        },
        "__listOfOutputDestinationSettings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OutputDestinationSettings"
            }
        },
        "OutputDestinationSettings": {
            "type": "object",
            "properties": {
                "PasswordParam": {
                    "$ref": "#/$defs/__string"
                },
                "StreamName": {
                    "$ref": "#/$defs/__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                },
                "Username": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfSrtOutputDestinationSettings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SrtOutputDestinationSettings"
            }
        },
        "SrtOutputDestinationSettings": {
            "type": "object",
            "properties": {
                "EncryptionPassphraseSecretArn": {
                    "$ref": "#/$defs/__string"
                },
                "StreamId": {
                    "$ref": "#/$defs/__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfChannelEgressEndpoint": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChannelEgressEndpoint"
            }
        },
        "ChannelEgressEndpoint": {
            "type": "object",
            "properties": {
                "SourceIp": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "EncoderSettings": {
            "type": "object",
            "properties": {
                "AudioDescriptions": {
                    "$ref": "#/$defs/__listOfAudioDescription"
                },
                "AvailBlanking": {
                    "$ref": "#/$defs/AvailBlanking"
                },
                "AvailConfiguration": {
                    "$ref": "#/$defs/AvailConfiguration"
                },
                "BlackoutSlate": {
                    "$ref": "#/$defs/BlackoutSlate"
                },
                "CaptionDescriptions": {
                    "$ref": "#/$defs/__listOfCaptionDescription"
                },
                "FeatureActivations": {
                    "$ref": "#/$defs/FeatureActivations"
                },
                "GlobalConfiguration": {
                    "$ref": "#/$defs/GlobalConfiguration"
                },
                "MotionGraphicsConfiguration": {
                    "$ref": "#/$defs/MotionGraphicsConfiguration"
                },
                "NielsenConfiguration": {
                    "$ref": "#/$defs/NielsenConfiguration"
                },
                "OutputGroups": {
                    "$ref": "#/$defs/__listOfOutputGroup"
                },
                "TimecodeConfig": {
                    "$ref": "#/$defs/TimecodeConfig"
                },
                "VideoDescriptions": {
                    "$ref": "#/$defs/__listOfVideoDescription"
                },
                "ThumbnailConfiguration": {
                    "$ref": "#/$defs/ThumbnailConfiguration"
                },
                "ColorCorrectionSettings": {
                    "$ref": "#/$defs/ColorCorrectionSettings"
                }
            }
        },
        "__listOfAudioDescription": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AudioDescription"
            }
        },
        "AudioDescription": {
            "type": "object",
            "properties": {
                "AudioNormalizationSettings": {
                    "$ref": "#/$defs/AudioNormalizationSettings"
                },
                "AudioSelectorName": {
                    "$ref": "#/$defs/__string"
                },
                "AudioType": {
                    "$ref": "#/$defs/AudioType"
                },
                "AudioTypeControl": {
                    "$ref": "#/$defs/AudioDescriptionAudioTypeControl"
                },
                "AudioWatermarkingSettings": {
                    "$ref": "#/$defs/AudioWatermarkSettings"
                },
                "CodecSettings": {
                    "$ref": "#/$defs/AudioCodecSettings"
                },
                "LanguageCode": {
                    "$ref": "#/$defs/__stringMin1Max35"
                },
                "LanguageCodeControl": {
                    "$ref": "#/$defs/AudioDescriptionLanguageCodeControl"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMax255"
                },
                "RemixSettings": {
                    "$ref": "#/$defs/RemixSettings"
                },
                "StreamName": {
                    "$ref": "#/$defs/__string"
                },
                "AudioDashRoles": {
                    "$ref": "#/$defs/__listOfDashRoleAudio"
                },
                "DvbDashAccessibility": {
                    "$ref": "#/$defs/DvbDashAccessibility"
                }
            }
        },
        "AudioNormalizationSettings": {
            "type": "object",
            "properties": {
                "Algorithm": {
                    "$ref": "#/$defs/AudioNormalizationAlgorithm"
                },
                "AlgorithmControl": {
                    "$ref": "#/$defs/AudioNormalizationAlgorithmControl"
                },
                "TargetLkfs": {
                    "$ref": "#/$defs/__doubleMinNegative59Max0"
                }
            }
        },
        "AudioNormalizationAlgorithm": {
            "enum": [
                "ITU_1770_1",
                "ITU_1770_2"
            ]
        },
        "AudioNormalizationAlgorithmControl": {
            "enum": [
                "CORRECT_AUDIO"
            ]
        },
        "__doubleMinNegative59Max0": {
            "type": "number",
            "format": "double"
        },
        "AudioType": {
            "enum": [
                "CLEAN_EFFECTS",
                "HEARING_IMPAIRED",
                "UNDEFINED",
                "VISUAL_IMPAIRED_COMMENTARY"
            ]
        },
        "AudioDescriptionAudioTypeControl": {
            "enum": [
                "FOLLOW_INPUT",
                "USE_CONFIGURED"
            ]
        },
        "AudioWatermarkSettings": {
            "type": "object",
            "properties": {
                "NielsenWatermarksSettings": {
                    "$ref": "#/$defs/NielsenWatermarksSettings"
                }
            }
        },
        "NielsenWatermarksSettings": {
            "type": "object",
            "properties": {
                "NielsenCbetSettings": {
                    "$ref": "#/$defs/NielsenCBET"
                },
                "NielsenDistributionType": {
                    "$ref": "#/$defs/NielsenWatermarksDistributionTypes"
                },
                "NielsenNaesIiNwSettings": {
                    "$ref": "#/$defs/NielsenNaesIiNw"
                }
            }
        },
        "NielsenCBET": {
            "type": "object",
            "properties": {
                "CbetCheckDigitString": {
                    "$ref": "#/$defs/__stringMin2Max2"
                },
                "CbetStepaside": {
                    "$ref": "#/$defs/NielsenWatermarksCbetStepaside"
                },
                "Csid": {
                    "$ref": "#/$defs/__stringMin1Max7"
                }
            }
        },
        "__stringMin2Max2": {
            "type": "string"
        },
        "NielsenWatermarksCbetStepaside": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "__stringMin1Max7": {
            "type": "string"
        },
        "NielsenWatermarksDistributionTypes": {
            "enum": [
                "FINAL_DISTRIBUTOR",
                "PROGRAM_CONTENT"
            ]
        },
        "NielsenNaesIiNw": {
            "type": "object",
            "properties": {
                "CheckDigitString": {
                    "$ref": "#/$defs/__stringMin2Max2"
                },
                "Sid": {
                    "$ref": "#/$defs/__doubleMin1Max65535"
                },
                "Timezone": {
                    "$ref": "#/$defs/NielsenWatermarkTimezones"
                }
            }
        },
        "__doubleMin1Max65535": {
            "type": "number",
            "format": "double"
        },
        "NielsenWatermarkTimezones": {
            "enum": [
                "AMERICA_PUERTO_RICO",
                "US_ALASKA",
                "US_ARIZONA",
                "US_CENTRAL",
                "US_EASTERN",
                "US_HAWAII",
                "US_MOUNTAIN",
                "US_PACIFIC",
                "US_SAMOA",
                "UTC"
            ]
        },
        "AudioCodecSettings": {
            "type": "object",
            "properties": {
                "AacSettings": {
                    "$ref": "#/$defs/AacSettings"
                },
                "Ac3Settings": {
                    "$ref": "#/$defs/Ac3Settings"
                },
                "Eac3AtmosSettings": {
                    "$ref": "#/$defs/Eac3AtmosSettings"
                },
                "Eac3Settings": {
                    "$ref": "#/$defs/Eac3Settings"
                },
                "Mp2Settings": {
                    "$ref": "#/$defs/Mp2Settings"
                },
                "PassThroughSettings": {
                    "$ref": "#/$defs/PassThroughSettings"
                },
                "WavSettings": {
                    "$ref": "#/$defs/WavSettings"
                }
            }
        },
        "AacSettings": {
            "type": "object",
            "properties": {
                "Bitrate": {
                    "$ref": "#/$defs/__double"
                },
                "CodingMode": {
                    "$ref": "#/$defs/AacCodingMode"
                },
                "InputType": {
                    "$ref": "#/$defs/AacInputType"
                },
                "Profile": {
                    "$ref": "#/$defs/AacProfile"
                },
                "RateControlMode": {
                    "$ref": "#/$defs/AacRateControlMode"
                },
                "RawFormat": {
                    "$ref": "#/$defs/AacRawFormat"
                },
                "SampleRate": {
                    "$ref": "#/$defs/__double"
                },
                "Spec": {
                    "$ref": "#/$defs/AacSpec"
                },
                "VbrQuality": {
                    "$ref": "#/$defs/AacVbrQuality"
                }
            }
        },
        "__double": {
            "type": "number",
            "format": "double"
        },
        "AacCodingMode": {
            "enum": [
                "AD_RECEIVER_MIX",
                "CODING_MODE_1_0",
                "CODING_MODE_1_1",
                "CODING_MODE_2_0",
                "CODING_MODE_5_1"
            ]
        },
        "AacInputType": {
            "enum": [
                "BROADCASTER_MIXED_AD",
                "NORMAL"
            ]
        },
        "AacProfile": {
            "enum": [
                "HEV1",
                "HEV2",
                "LC"
            ]
        },
        "AacRateControlMode": {
            "enum": [
                "CBR",
                "VBR"
            ]
        },
        "AacRawFormat": {
            "enum": [
                "LATM_LOAS",
                "NONE"
            ]
        },
        "AacSpec": {
            "enum": [
                "MPEG2",
                "MPEG4"
            ]
        },
        "AacVbrQuality": {
            "enum": [
                "HIGH",
                "LOW",
                "MEDIUM_HIGH",
                "MEDIUM_LOW"
            ]
        },
        "Ac3Settings": {
            "type": "object",
            "properties": {
                "Bitrate": {
                    "$ref": "#/$defs/__double"
                },
                "BitstreamMode": {
                    "$ref": "#/$defs/Ac3BitstreamMode"
                },
                "CodingMode": {
                    "$ref": "#/$defs/Ac3CodingMode"
                },
                "Dialnorm": {
                    "$ref": "#/$defs/__integerMin1Max31"
                },
                "DrcProfile": {
                    "$ref": "#/$defs/Ac3DrcProfile"
                },
                "LfeFilter": {
                    "$ref": "#/$defs/Ac3LfeFilter"
                },
                "MetadataControl": {
                    "$ref": "#/$defs/Ac3MetadataControl"
                },
                "AttenuationControl": {
                    "$ref": "#/$defs/Ac3AttenuationControl"
                }
            }
        },
        "Ac3BitstreamMode": {
            "enum": [
                "COMMENTARY",
                "COMPLETE_MAIN",
                "DIALOGUE",
                "EMERGENCY",
                "HEARING_IMPAIRED",
                "MUSIC_AND_EFFECTS",
                "VISUALLY_IMPAIRED",
                "VOICE_OVER"
            ]
        },
        "Ac3CodingMode": {
            "enum": [
                "CODING_MODE_1_0",
                "CODING_MODE_1_1",
                "CODING_MODE_2_0",
                "CODING_MODE_3_2_LFE"
            ]
        },
        "__integerMin1Max31": {
            "type": "integer",
            "format": "int32"
        },
        "Ac3DrcProfile": {
            "enum": [
                "FILM_STANDARD",
                "NONE"
            ]
        },
        "Ac3LfeFilter": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "Ac3MetadataControl": {
            "enum": [
                "FOLLOW_INPUT",
                "USE_CONFIGURED"
            ]
        },
        "Ac3AttenuationControl": {
            "enum": [
                "ATTENUATE_3_DB",
                "NONE"
            ]
        },
        "Eac3AtmosSettings": {
            "type": "object",
            "properties": {
                "Bitrate": {
                    "$ref": "#/$defs/__double"
                },
                "CodingMode": {
                    "$ref": "#/$defs/Eac3AtmosCodingMode"
                },
                "Dialnorm": {
                    "$ref": "#/$defs/__integerMin1Max31"
                },
                "DrcLine": {
                    "$ref": "#/$defs/Eac3AtmosDrcLine"
                },
                "DrcRf": {
                    "$ref": "#/$defs/Eac3AtmosDrcRf"
                },
                "HeightTrim": {
                    "$ref": "#/$defs/__double"
                },
                "SurroundTrim": {
                    "$ref": "#/$defs/__double"
                }
            }
        },
        "Eac3AtmosCodingMode": {
            "enum": [
                "CODING_MODE_5_1_4",
                "CODING_MODE_7_1_4",
                "CODING_MODE_9_1_6"
            ]
        },
        "Eac3AtmosDrcLine": {
            "enum": [
                "FILM_LIGHT",
                "FILM_STANDARD",
                "MUSIC_LIGHT",
                "MUSIC_STANDARD",
                "NONE",
                "SPEECH"
            ]
        },
        "Eac3AtmosDrcRf": {
            "enum": [
                "FILM_LIGHT",
                "FILM_STANDARD",
                "MUSIC_LIGHT",
                "MUSIC_STANDARD",
                "NONE",
                "SPEECH"
            ]
        },
        "Eac3Settings": {
            "type": "object",
            "properties": {
                "AttenuationControl": {
                    "$ref": "#/$defs/Eac3AttenuationControl"
                },
                "Bitrate": {
                    "$ref": "#/$defs/__double"
                },
                "BitstreamMode": {
                    "$ref": "#/$defs/Eac3BitstreamMode"
                },
                "CodingMode": {
                    "$ref": "#/$defs/Eac3CodingMode"
                },
                "DcFilter": {
                    "$ref": "#/$defs/Eac3DcFilter"
                },
                "Dialnorm": {
                    "$ref": "#/$defs/__integerMin1Max31"
                },
                "DrcLine": {
                    "$ref": "#/$defs/Eac3DrcLine"
                },
                "DrcRf": {
                    "$ref": "#/$defs/Eac3DrcRf"
                },
                "LfeControl": {
                    "$ref": "#/$defs/Eac3LfeControl"
                },
                "LfeFilter": {
                    "$ref": "#/$defs/Eac3LfeFilter"
                },
                "LoRoCenterMixLevel": {
                    "$ref": "#/$defs/__double"
                },
                "LoRoSurroundMixLevel": {
                    "$ref": "#/$defs/__double"
                },
                "LtRtCenterMixLevel": {
                    "$ref": "#/$defs/__double"
                },
                "LtRtSurroundMixLevel": {
                    "$ref": "#/$defs/__double"
                },
                "MetadataControl": {
                    "$ref": "#/$defs/Eac3MetadataControl"
                },
                "PassthroughControl": {
                    "$ref": "#/$defs/Eac3PassthroughControl"
                },
                "PhaseControl": {
                    "$ref": "#/$defs/Eac3PhaseControl"
                },
                "StereoDownmix": {
                    "$ref": "#/$defs/Eac3StereoDownmix"
                },
                "SurroundExMode": {
                    "$ref": "#/$defs/Eac3SurroundExMode"
                },
                "SurroundMode": {
                    "$ref": "#/$defs/Eac3SurroundMode"
                }
            }
        },
        "Eac3AttenuationControl": {
            "enum": [
                "ATTENUATE_3_DB",
                "NONE"
            ]
        },
        "Eac3BitstreamMode": {
            "enum": [
                "COMMENTARY",
                "COMPLETE_MAIN",
                "EMERGENCY",
                "HEARING_IMPAIRED",
                "VISUALLY_IMPAIRED"
            ]
        },
        "Eac3CodingMode": {
            "enum": [
                "CODING_MODE_1_0",
                "CODING_MODE_2_0",
                "CODING_MODE_3_2"
            ]
        },
        "Eac3DcFilter": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "Eac3DrcLine": {
            "enum": [
                "FILM_LIGHT",
                "FILM_STANDARD",
                "MUSIC_LIGHT",
                "MUSIC_STANDARD",
                "NONE",
                "SPEECH"
            ]
        },
        "Eac3DrcRf": {
            "enum": [
                "FILM_LIGHT",
                "FILM_STANDARD",
                "MUSIC_LIGHT",
                "MUSIC_STANDARD",
                "NONE",
                "SPEECH"
            ]
        },
        "Eac3LfeControl": {
            "enum": [
                "LFE",
                "NO_LFE"
            ]
        },
        "Eac3LfeFilter": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "Eac3MetadataControl": {
            "enum": [
                "FOLLOW_INPUT",
                "USE_CONFIGURED"
            ]
        },
        "Eac3PassthroughControl": {
            "enum": [
                "NO_PASSTHROUGH",
                "WHEN_POSSIBLE"
            ]
        },
        "Eac3PhaseControl": {
            "enum": [
                "NO_SHIFT",
                "SHIFT_90_DEGREES"
            ]
        },
        "Eac3StereoDownmix": {
            "enum": [
                "DPL2",
                "LO_RO",
                "LT_RT",
                "NOT_INDICATED"
            ]
        },
        "Eac3SurroundExMode": {
            "enum": [
                "DISABLED",
                "ENABLED",
                "NOT_INDICATED"
            ]
        },
        "Eac3SurroundMode": {
            "enum": [
                "DISABLED",
                "ENABLED",
                "NOT_INDICATED"
            ]
        },
        "Mp2Settings": {
            "type": "object",
            "properties": {
                "Bitrate": {
                    "$ref": "#/$defs/__double"
                },
                "CodingMode": {
                    "$ref": "#/$defs/Mp2CodingMode"
                },
                "SampleRate": {
                    "$ref": "#/$defs/__double"
                }
            }
        },
        "Mp2CodingMode": {
            "enum": [
                "CODING_MODE_1_0",
                "CODING_MODE_2_0"
            ]
        },
        "PassThroughSettings": {
            "type": "object",
            "properties": {}
        },
        "WavSettings": {
            "type": "object",
            "properties": {
                "BitDepth": {
                    "$ref": "#/$defs/__double"
                },
                "CodingMode": {
                    "$ref": "#/$defs/WavCodingMode"
                },
                "SampleRate": {
                    "$ref": "#/$defs/__double"
                }
            }
        },
        "WavCodingMode": {
            "enum": [
                "CODING_MODE_1_0",
                "CODING_MODE_2_0",
                "CODING_MODE_4_0",
                "CODING_MODE_8_0"
            ]
        },
        "__stringMin1Max35": {
            "type": "string"
        },
        "AudioDescriptionLanguageCodeControl": {
            "enum": [
                "FOLLOW_INPUT",
                "USE_CONFIGURED"
            ]
        },
        "__stringMax255": {
            "type": "string"
        },
        "RemixSettings": {
            "type": "object",
            "properties": {
                "ChannelMappings": {
                    "$ref": "#/$defs/__listOfAudioChannelMapping"
                },
                "ChannelsIn": {
                    "$ref": "#/$defs/__integerMin1Max16"
                },
                "ChannelsOut": {
                    "$ref": "#/$defs/__integerMin1Max8"
                }
            }
        },
        "__listOfAudioChannelMapping": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AudioChannelMapping"
            }
        },
        "AudioChannelMapping": {
            "type": "object",
            "properties": {
                "InputChannelLevels": {
                    "$ref": "#/$defs/__listOfInputChannelLevel"
                },
                "OutputChannel": {
                    "$ref": "#/$defs/__integerMin0Max7"
                }
            }
        },
        "__listOfInputChannelLevel": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputChannelLevel"
            }
        },
        "InputChannelLevel": {
            "type": "object",
            "properties": {
                "Gain": {
                    "$ref": "#/$defs/__integerMinNegative60Max6"
                },
                "InputChannel": {
                    "$ref": "#/$defs/__integerMin0Max15"
                }
            }
        },
        "__integerMinNegative60Max6": {
            "type": "integer",
            "format": "int32"
        },
        "__integerMin0Max15": {
            "type": "integer",
            "format": "int32"
        },
        "__integerMin1Max16": {
            "type": "integer",
            "format": "int32"
        },
        "__integerMin1Max8": {
            "type": "integer",
            "format": "int32"
        },
        "__listOfDashRoleAudio": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DashRoleAudio"
            }
        },
        "DashRoleAudio": {
            "enum": [
                "ALTERNATE",
                "COMMENTARY",
                "DESCRIPTION",
                "DUB",
                "EMERGENCY",
                "ENHANCED_AUDIO_INTELLIGIBILITY",
                "KARAOKE",
                "MAIN",
                "SUPPLEMENTARY"
            ]
        },
        "DvbDashAccessibility": {
            "enum": [
                "DVBDASH_1_VISUALLY_IMPAIRED",
                "DVBDASH_2_HARD_OF_HEARING",
                "DVBDASH_3_SUPPLEMENTAL_COMMENTARY",
                "DVBDASH_4_DIRECTORS_COMMENTARY",
                "DVBDASH_5_EDUCATIONAL_NOTES",
                "DVBDASH_6_MAIN_PROGRAM",
                "DVBDASH_7_CLEAN_FEED"
            ]
        },
        "AvailBlanking": {
            "type": "object",
            "properties": {
                "AvailBlankingImage": {
                    "$ref": "#/$defs/InputLocation"
                },
                "State": {
                    "$ref": "#/$defs/AvailBlankingState"
                }
            }
        },
        "AvailBlankingState": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "AvailConfiguration": {
            "type": "object",
            "properties": {
                "AvailSettings": {
                    "$ref": "#/$defs/AvailSettings"
                },
                "Scte35SegmentationScope": {
                    "$ref": "#/$defs/Scte35SegmentationScope"
                }
            }
        },
        "AvailSettings": {
            "type": "object",
            "properties": {
                "Esam": {
                    "$ref": "#/$defs/Esam"
                },
                "Scte35SpliceInsert": {
                    "$ref": "#/$defs/Scte35SpliceInsert"
                },
                "Scte35TimeSignalApos": {
                    "$ref": "#/$defs/Scte35TimeSignalApos"
                }
            }
        },
        "Esam": {
            "type": "object",
            "properties": {
                "AcquisitionPointId": {
                    "$ref": "#/$defs/__stringMax256"
                },
                "AdAvailOffset": {
                    "$ref": "#/$defs/__integerMinNegative1000Max1000"
                },
                "PasswordParam": {
                    "$ref": "#/$defs/__string"
                },
                "PoisEndpoint": {
                    "$ref": "#/$defs/__stringMax2048"
                },
                "Username": {
                    "$ref": "#/$defs/__string"
                },
                "ZoneIdentity": {
                    "$ref": "#/$defs/__stringMax256"
                }
            }
        },
        "__stringMax256": {
            "type": "string"
        },
        "__integerMinNegative1000Max1000": {
            "type": "integer",
            "format": "int32"
        },
        "Scte35SpliceInsert": {
            "type": "object",
            "properties": {
                "AdAvailOffset": {
                    "$ref": "#/$defs/__integerMinNegative1000Max1000"
                },
                "NoRegionalBlackoutFlag": {
                    "$ref": "#/$defs/Scte35SpliceInsertNoRegionalBlackoutBehavior"
                },
                "WebDeliveryAllowedFlag": {
                    "$ref": "#/$defs/Scte35SpliceInsertWebDeliveryAllowedBehavior"
                }
            }
        },
        "Scte35SpliceInsertNoRegionalBlackoutBehavior": {
            "enum": [
                "FOLLOW",
                "IGNORE"
            ]
        },
        "Scte35SpliceInsertWebDeliveryAllowedBehavior": {
            "enum": [
                "FOLLOW",
                "IGNORE"
            ]
        },
        "Scte35TimeSignalApos": {
            "type": "object",
            "properties": {
                "AdAvailOffset": {
                    "$ref": "#/$defs/__integerMinNegative1000Max1000"
                },
                "NoRegionalBlackoutFlag": {
                    "$ref": "#/$defs/Scte35AposNoRegionalBlackoutBehavior"
                },
                "WebDeliveryAllowedFlag": {
                    "$ref": "#/$defs/Scte35AposWebDeliveryAllowedBehavior"
                }
            }
        },
        "Scte35AposNoRegionalBlackoutBehavior": {
            "enum": [
                "FOLLOW",
                "IGNORE"
            ]
        },
        "Scte35AposWebDeliveryAllowedBehavior": {
            "enum": [
                "FOLLOW",
                "IGNORE"
            ]
        },
        "Scte35SegmentationScope": {
            "enum": [
                "ALL_OUTPUT_GROUPS",
                "SCTE35_ENABLED_OUTPUT_GROUPS"
            ]
        },
        "BlackoutSlate": {
            "type": "object",
            "properties": {
                "BlackoutSlateImage": {
                    "$ref": "#/$defs/InputLocation"
                },
                "NetworkEndBlackout": {
                    "$ref": "#/$defs/BlackoutSlateNetworkEndBlackout"
                },
                "NetworkEndBlackoutImage": {
                    "$ref": "#/$defs/InputLocation"
                },
                "NetworkId": {
                    "$ref": "#/$defs/__stringMin34Max34"
                },
                "State": {
                    "$ref": "#/$defs/BlackoutSlateState"
                }
            }
        },
        "BlackoutSlateNetworkEndBlackout": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "__stringMin34Max34": {
            "type": "string"
        },
        "BlackoutSlateState": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "__listOfCaptionDescription": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CaptionDescription"
            }
        },
        "CaptionDescription": {
            "type": "object",
            "properties": {
                "Accessibility": {
                    "$ref": "#/$defs/AccessibilityType"
                },
                "CaptionSelectorName": {
                    "$ref": "#/$defs/__string"
                },
                "DestinationSettings": {
                    "$ref": "#/$defs/CaptionDestinationSettings"
                },
                "LanguageCode": {
                    "$ref": "#/$defs/__string"
                },
                "LanguageDescription": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "CaptionDashRoles": {
                    "$ref": "#/$defs/__listOfDashRoleCaption"
                },
                "DvbDashAccessibility": {
                    "$ref": "#/$defs/DvbDashAccessibility"
                }
            }
        },
        "AccessibilityType": {
            "enum": [
                "DOES_NOT_IMPLEMENT_ACCESSIBILITY_FEATURES",
                "IMPLEMENTS_ACCESSIBILITY_FEATURES"
            ]
        },
        "CaptionDestinationSettings": {
            "type": "object",
            "properties": {
                "AribDestinationSettings": {
                    "$ref": "#/$defs/AribDestinationSettings"
                },
                "BurnInDestinationSettings": {
                    "$ref": "#/$defs/BurnInDestinationSettings"
                },
                "DvbSubDestinationSettings": {
                    "$ref": "#/$defs/DvbSubDestinationSettings"
                },
                "EbuTtDDestinationSettings": {
                    "$ref": "#/$defs/EbuTtDDestinationSettings"
                },
                "EmbeddedDestinationSettings": {
                    "$ref": "#/$defs/EmbeddedDestinationSettings"
                },
                "EmbeddedPlusScte20DestinationSettings": {
                    "$ref": "#/$defs/EmbeddedPlusScte20DestinationSettings"
                },
                "RtmpCaptionInfoDestinationSettings": {
                    "$ref": "#/$defs/RtmpCaptionInfoDestinationSettings"
                },
                "Scte20PlusEmbeddedDestinationSettings": {
                    "$ref": "#/$defs/Scte20PlusEmbeddedDestinationSettings"
                },
                "Scte27DestinationSettings": {
                    "$ref": "#/$defs/Scte27DestinationSettings"
                },
                "SmpteTtDestinationSettings": {
                    "$ref": "#/$defs/SmpteTtDestinationSettings"
                },
                "TeletextDestinationSettings": {
                    "$ref": "#/$defs/TeletextDestinationSettings"
                },
                "TtmlDestinationSettings": {
                    "$ref": "#/$defs/TtmlDestinationSettings"
                },
                "WebvttDestinationSettings": {
                    "$ref": "#/$defs/WebvttDestinationSettings"
                }
            }
        },
        "AribDestinationSettings": {
            "type": "object",
            "properties": {}
        },
        "BurnInDestinationSettings": {
            "type": "object",
            "properties": {
                "Alignment": {
                    "$ref": "#/$defs/BurnInAlignment"
                },
                "BackgroundColor": {
                    "$ref": "#/$defs/BurnInBackgroundColor"
                },
                "BackgroundOpacity": {
                    "$ref": "#/$defs/__integerMin0Max255"
                },
                "Font": {
                    "$ref": "#/$defs/InputLocation"
                },
                "FontColor": {
                    "$ref": "#/$defs/BurnInFontColor"
                },
                "FontOpacity": {
                    "$ref": "#/$defs/__integerMin0Max255"
                },
                "FontResolution": {
                    "$ref": "#/$defs/__integerMin96Max600"
                },
                "FontSize": {
                    "$ref": "#/$defs/__string"
                },
                "OutlineColor": {
                    "$ref": "#/$defs/BurnInOutlineColor"
                },
                "OutlineSize": {
                    "$ref": "#/$defs/__integerMin0Max10"
                },
                "ShadowColor": {
                    "$ref": "#/$defs/BurnInShadowColor"
                },
                "ShadowOpacity": {
                    "$ref": "#/$defs/__integerMin0Max255"
                },
                "ShadowXOffset": {
                    "$ref": "#/$defs/__integer"
                },
                "ShadowYOffset": {
                    "$ref": "#/$defs/__integer"
                },
                "TeletextGridControl": {
                    "$ref": "#/$defs/BurnInTeletextGridControl"
                },
                "XPosition": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "YPosition": {
                    "$ref": "#/$defs/__integerMin0"
                }
            }
        },
        "BurnInAlignment": {
            "enum": [
                "CENTERED",
                "LEFT",
                "SMART"
            ]
        },
        "BurnInBackgroundColor": {
            "enum": [
                "BLACK",
                "NONE",
                "WHITE"
            ]
        },
        "BurnInFontColor": {
            "enum": [
                "BLACK",
                "BLUE",
                "GREEN",
                "RED",
                "WHITE",
                "YELLOW"
            ]
        },
        "__integerMin96Max600": {
            "type": "integer",
            "format": "int32"
        },
        "BurnInOutlineColor": {
            "enum": [
                "BLACK",
                "BLUE",
                "GREEN",
                "RED",
                "WHITE",
                "YELLOW"
            ]
        },
        "__integerMin0Max10": {
            "type": "integer",
            "format": "int32"
        },
        "BurnInShadowColor": {
            "enum": [
                "BLACK",
                "NONE",
                "WHITE"
            ]
        },
        "__integer": {
            "type": "integer",
            "format": "int32"
        },
        "BurnInTeletextGridControl": {
            "enum": [
                "FIXED",
                "SCALED"
            ]
        },
        "DvbSubDestinationSettings": {
            "type": "object",
            "properties": {
                "Alignment": {
                    "$ref": "#/$defs/DvbSubDestinationAlignment"
                },
                "BackgroundColor": {
                    "$ref": "#/$defs/DvbSubDestinationBackgroundColor"
                },
                "BackgroundOpacity": {
                    "$ref": "#/$defs/__integerMin0Max255"
                },
                "Font": {
                    "$ref": "#/$defs/InputLocation"
                },
                "FontColor": {
                    "$ref": "#/$defs/DvbSubDestinationFontColor"
                },
                "FontOpacity": {
                    "$ref": "#/$defs/__integerMin0Max255"
                },
                "FontResolution": {
                    "$ref": "#/$defs/__integerMin96Max600"
                },
                "FontSize": {
                    "$ref": "#/$defs/__string"
                },
                "OutlineColor": {
                    "$ref": "#/$defs/DvbSubDestinationOutlineColor"
                },
                "OutlineSize": {
                    "$ref": "#/$defs/__integerMin0Max10"
                },
                "ShadowColor": {
                    "$ref": "#/$defs/DvbSubDestinationShadowColor"
                },
                "ShadowOpacity": {
                    "$ref": "#/$defs/__integerMin0Max255"
                },
                "ShadowXOffset": {
                    "$ref": "#/$defs/__integer"
                },
                "ShadowYOffset": {
                    "$ref": "#/$defs/__integer"
                },
                "TeletextGridControl": {
                    "$ref": "#/$defs/DvbSubDestinationTeletextGridControl"
                },
                "XPosition": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "YPosition": {
                    "$ref": "#/$defs/__integerMin0"
                }
            }
        },
        "DvbSubDestinationAlignment": {
            "enum": [
                "CENTERED",
                "LEFT",
                "SMART"
            ]
        },
        "DvbSubDestinationBackgroundColor": {
            "enum": [
                "BLACK",
                "NONE",
                "WHITE"
            ]
        },
        "DvbSubDestinationFontColor": {
            "enum": [
                "BLACK",
                "BLUE",
                "GREEN",
                "RED",
                "WHITE",
                "YELLOW"
            ]
        },
        "DvbSubDestinationOutlineColor": {
            "enum": [
                "BLACK",
                "BLUE",
                "GREEN",
                "RED",
                "WHITE",
                "YELLOW"
            ]
        },
        "DvbSubDestinationShadowColor": {
            "enum": [
                "BLACK",
                "NONE",
                "WHITE"
            ]
        },
        "DvbSubDestinationTeletextGridControl": {
            "enum": [
                "FIXED",
                "SCALED"
            ]
        },
        "EbuTtDDestinationSettings": {
            "type": "object",
            "properties": {
                "CopyrightHolder": {
                    "$ref": "#/$defs/__stringMax1000"
                },
                "FillLineGap": {
                    "$ref": "#/$defs/EbuTtDFillLineGapControl"
                },
                "FontFamily": {
                    "$ref": "#/$defs/__string"
                },
                "StyleControl": {
                    "$ref": "#/$defs/EbuTtDDestinationStyleControl"
                }
            }
        },
        "__stringMax1000": {
            "type": "string"
        },
        "EbuTtDFillLineGapControl": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "EbuTtDDestinationStyleControl": {
            "enum": [
                "EXCLUDE",
                "INCLUDE"
            ]
        },
        "EmbeddedDestinationSettings": {
            "type": "object",
            "properties": {}
        },
        "EmbeddedPlusScte20DestinationSettings": {
            "type": "object",
            "properties": {}
        },
        "RtmpCaptionInfoDestinationSettings": {
            "type": "object",
            "properties": {}
        },
        "Scte20PlusEmbeddedDestinationSettings": {
            "type": "object",
            "properties": {}
        },
        "Scte27DestinationSettings": {
            "type": "object",
            "properties": {}
        },
        "SmpteTtDestinationSettings": {
            "type": "object",
            "properties": {}
        },
        "TeletextDestinationSettings": {
            "type": "object",
            "properties": {}
        },
        "TtmlDestinationSettings": {
            "type": "object",
            "properties": {
                "StyleControl": {
                    "$ref": "#/$defs/TtmlDestinationStyleControl"
                }
            }
        },
        "TtmlDestinationStyleControl": {
            "enum": [
                "PASSTHROUGH",
                "USE_CONFIGURED"
            ]
        },
        "WebvttDestinationSettings": {
            "type": "object",
            "properties": {
                "StyleControl": {
                    "$ref": "#/$defs/WebvttDestinationStyleControl"
                }
            }
        },
        "WebvttDestinationStyleControl": {
            "enum": [
                "NO_STYLE_DATA",
                "PASSTHROUGH"
            ]
        },
        "__listOfDashRoleCaption": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DashRoleCaption"
            }
        },
        "DashRoleCaption": {
            "enum": [
                "ALTERNATE",
                "CAPTION",
                "COMMENTARY",
                "DESCRIPTION",
                "DUB",
                "EASYREADER",
                "EMERGENCY",
                "FORCED_SUBTITLE",
                "KARAOKE",
                "MAIN",
                "METADATA",
                "SUBTITLE",
                "SUPPLEMENTARY"
            ]
        },
        "FeatureActivations": {
            "type": "object",
            "properties": {
                "InputPrepareScheduleActions": {
                    "$ref": "#/$defs/FeatureActivationsInputPrepareScheduleActions"
                },
                "OutputStaticImageOverlayScheduleActions": {
                    "$ref": "#/$defs/FeatureActivationsOutputStaticImageOverlayScheduleActions"
                }
            }
        },
        "FeatureActivationsInputPrepareScheduleActions": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "FeatureActivationsOutputStaticImageOverlayScheduleActions": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "GlobalConfiguration": {
            "type": "object",
            "properties": {
                "InitialAudioGain": {
                    "$ref": "#/$defs/__integerMinNegative60Max60"
                },
                "InputEndAction": {
                    "$ref": "#/$defs/GlobalConfigurationInputEndAction"
                },
                "InputLossBehavior": {
                    "$ref": "#/$defs/InputLossBehavior"
                },
                "OutputLockingMode": {
                    "$ref": "#/$defs/GlobalConfigurationOutputLockingMode"
                },
                "OutputTimingSource": {
                    "$ref": "#/$defs/GlobalConfigurationOutputTimingSource"
                },
                "SupportLowFramerateInputs": {
                    "$ref": "#/$defs/GlobalConfigurationLowFramerateInputs"
                },
                "OutputLockingSettings": {
                    "$ref": "#/$defs/OutputLockingSettings"
                }
            }
        },
        "__integerMinNegative60Max60": {
            "type": "integer",
            "format": "int32"
        },
        "GlobalConfigurationInputEndAction": {
            "enum": [
                "NONE",
                "SWITCH_AND_LOOP_INPUTS"
            ]
        },
        "InputLossBehavior": {
            "type": "object",
            "properties": {
                "BlackFrameMsec": {
                    "$ref": "#/$defs/__integerMin0Max1000000"
                },
                "InputLossImageColor": {
                    "$ref": "#/$defs/__stringMin6Max6"
                },
                "InputLossImageSlate": {
                    "$ref": "#/$defs/InputLocation"
                },
                "InputLossImageType": {
                    "$ref": "#/$defs/InputLossImageType"
                },
                "RepeatFrameMsec": {
                    "$ref": "#/$defs/__integerMin0Max1000000"
                }
            }
        },
        "__integerMin0Max1000000": {
            "type": "integer",
            "format": "int32"
        },
        "__stringMin6Max6": {
            "type": "string"
        },
        "InputLossImageType": {
            "enum": [
                "COLOR",
                "SLATE"
            ]
        },
        "GlobalConfigurationOutputLockingMode": {
            "enum": [
                "EPOCH_LOCKING",
                "PIPELINE_LOCKING"
            ]
        },
        "GlobalConfigurationOutputTimingSource": {
            "enum": [
                "INPUT_CLOCK",
                "SYSTEM_CLOCK"
            ]
        },
        "GlobalConfigurationLowFramerateInputs": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "OutputLockingSettings": {
            "type": "object",
            "properties": {
                "EpochLockingSettings": {
                    "$ref": "#/$defs/EpochLockingSettings"
                },
                "PipelineLockingSettings": {
                    "$ref": "#/$defs/PipelineLockingSettings"
                }
            }
        },
        "EpochLockingSettings": {
            "type": "object",
            "properties": {
                "CustomEpoch": {
                    "$ref": "#/$defs/__string"
                },
                "JamSyncTime": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "PipelineLockingSettings": {
            "type": "object",
            "properties": {}
        },
        "MotionGraphicsConfiguration": {
            "type": "object",
            "properties": {
                "MotionGraphicsInsertion": {
                    "$ref": "#/$defs/MotionGraphicsInsertion"
                },
                "MotionGraphicsSettings": {
                    "$ref": "#/$defs/MotionGraphicsSettings"
                }
            }
        },
        "MotionGraphicsInsertion": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "MotionGraphicsSettings": {
            "type": "object",
            "properties": {
                "HtmlMotionGraphicsSettings": {
                    "$ref": "#/$defs/HtmlMotionGraphicsSettings"
                }
            }
        },
        "HtmlMotionGraphicsSettings": {
            "type": "object",
            "properties": {}
        },
        "NielsenConfiguration": {
            "type": "object",
            "properties": {
                "DistributorId": {
                    "$ref": "#/$defs/__string"
                },
                "NielsenPcmToId3Tagging": {
                    "$ref": "#/$defs/NielsenPcmToId3TaggingState"
                }
            }
        },
        "NielsenPcmToId3TaggingState": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "__listOfOutputGroup": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OutputGroup"
            }
        },
        "OutputGroup": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/__stringMax32"
                },
                "OutputGroupSettings": {
                    "$ref": "#/$defs/OutputGroupSettings"
                },
                "Outputs": {
                    "$ref": "#/$defs/__listOfOutput"
                }
            }
        },
        "__stringMax32": {
            "type": "string"
        },
        "OutputGroupSettings": {
            "type": "object",
            "properties": {
                "ArchiveGroupSettings": {
                    "$ref": "#/$defs/ArchiveGroupSettings"
                },
                "FrameCaptureGroupSettings": {
                    "$ref": "#/$defs/FrameCaptureGroupSettings"
                },
                "HlsGroupSettings": {
                    "$ref": "#/$defs/HlsGroupSettings"
                },
                "MediaPackageGroupSettings": {
                    "$ref": "#/$defs/MediaPackageGroupSettings"
                },
                "MsSmoothGroupSettings": {
                    "$ref": "#/$defs/MsSmoothGroupSettings"
                },
                "MultiplexGroupSettings": {
                    "$ref": "#/$defs/MultiplexGroupSettings"
                },
                "RtmpGroupSettings": {
                    "$ref": "#/$defs/RtmpGroupSettings"
                },
                "UdpGroupSettings": {
                    "$ref": "#/$defs/UdpGroupSettings"
                },
                "CmafIngestGroupSettings": {
                    "$ref": "#/$defs/CmafIngestGroupSettings"
                },
                "SrtGroupSettings": {
                    "$ref": "#/$defs/SrtGroupSettings"
                }
            }
        },
        "ArchiveGroupSettings": {
            "type": "object",
            "properties": {
                "ArchiveCdnSettings": {
                    "$ref": "#/$defs/ArchiveCdnSettings"
                },
                "Destination": {
                    "$ref": "#/$defs/OutputLocationRef"
                },
                "RolloverInterval": {
                    "$ref": "#/$defs/__integerMin1"
                }
            }
        },
        "ArchiveCdnSettings": {
            "type": "object",
            "properties": {
                "ArchiveS3Settings": {
                    "$ref": "#/$defs/ArchiveS3Settings"
                }
            }
        },
        "ArchiveS3Settings": {
            "type": "object",
            "properties": {
                "CannedAcl": {
                    "$ref": "#/$defs/S3CannedAcl"
                }
            }
        },
        "S3CannedAcl": {
            "enum": [
                "AUTHENTICATED_READ",
                "BUCKET_OWNER_FULL_CONTROL",
                "BUCKET_OWNER_READ",
                "PUBLIC_READ"
            ]
        },
        "OutputLocationRef": {
            "type": "object",
            "properties": {
                "DestinationRefId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "FrameCaptureGroupSettings": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/OutputLocationRef"
                },
                "FrameCaptureCdnSettings": {
                    "$ref": "#/$defs/FrameCaptureCdnSettings"
                }
            }
        },
        "FrameCaptureCdnSettings": {
            "type": "object",
            "properties": {
                "FrameCaptureS3Settings": {
                    "$ref": "#/$defs/FrameCaptureS3Settings"
                }
            }
        },
        "FrameCaptureS3Settings": {
            "type": "object",
            "properties": {
                "CannedAcl": {
                    "$ref": "#/$defs/S3CannedAcl"
                }
            }
        },
        "HlsGroupSettings": {
            "type": "object",
            "properties": {
                "AdMarkers": {
                    "$ref": "#/$defs/__listOfHlsAdMarkers"
                },
                "BaseUrlContent": {
                    "$ref": "#/$defs/__string"
                },
                "BaseUrlContent1": {
                    "$ref": "#/$defs/__string"
                },
                "BaseUrlManifest": {
                    "$ref": "#/$defs/__string"
                },
                "BaseUrlManifest1": {
                    "$ref": "#/$defs/__string"
                },
                "CaptionLanguageMappings": {
                    "$ref": "#/$defs/__listOfCaptionLanguageMapping"
                },
                "CaptionLanguageSetting": {
                    "$ref": "#/$defs/HlsCaptionLanguageSetting"
                },
                "ClientCache": {
                    "$ref": "#/$defs/HlsClientCache"
                },
                "CodecSpecification": {
                    "$ref": "#/$defs/HlsCodecSpecification"
                },
                "ConstantIv": {
                    "$ref": "#/$defs/__stringMin32Max32"
                },
                "Destination": {
                    "$ref": "#/$defs/OutputLocationRef"
                },
                "DirectoryStructure": {
                    "$ref": "#/$defs/HlsDirectoryStructure"
                },
                "DiscontinuityTags": {
                    "$ref": "#/$defs/HlsDiscontinuityTags"
                },
                "EncryptionType": {
                    "$ref": "#/$defs/HlsEncryptionType"
                },
                "HlsCdnSettings": {
                    "$ref": "#/$defs/HlsCdnSettings"
                },
                "HlsId3SegmentTagging": {
                    "$ref": "#/$defs/HlsId3SegmentTaggingState"
                },
                "IFrameOnlyPlaylists": {
                    "$ref": "#/$defs/IFrameOnlyPlaylistType"
                },
                "IncompleteSegmentBehavior": {
                    "$ref": "#/$defs/HlsIncompleteSegmentBehavior"
                },
                "IndexNSegments": {
                    "$ref": "#/$defs/__integerMin3"
                },
                "InputLossAction": {
                    "$ref": "#/$defs/InputLossActionForHlsOut"
                },
                "IvInManifest": {
                    "$ref": "#/$defs/HlsIvInManifest"
                },
                "IvSource": {
                    "$ref": "#/$defs/HlsIvSource"
                },
                "KeepSegments": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "KeyFormat": {
                    "$ref": "#/$defs/__string"
                },
                "KeyFormatVersions": {
                    "$ref": "#/$defs/__string"
                },
                "KeyProviderSettings": {
                    "$ref": "#/$defs/KeyProviderSettings"
                },
                "ManifestCompression": {
                    "$ref": "#/$defs/HlsManifestCompression"
                },
                "ManifestDurationFormat": {
                    "$ref": "#/$defs/HlsManifestDurationFormat"
                },
                "MinSegmentLength": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "Mode": {
                    "$ref": "#/$defs/HlsMode"
                },
                "OutputSelection": {
                    "$ref": "#/$defs/HlsOutputSelection"
                },
                "ProgramDateTime": {
                    "$ref": "#/$defs/HlsProgramDateTime"
                },
                "ProgramDateTimeClock": {
                    "$ref": "#/$defs/HlsProgramDateTimeClock"
                },
                "ProgramDateTimePeriod": {
                    "$ref": "#/$defs/__integerMin0Max3600"
                },
                "RedundantManifest": {
                    "$ref": "#/$defs/HlsRedundantManifest"
                },
                "SegmentLength": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "SegmentationMode": {
                    "$ref": "#/$defs/HlsSegmentationMode"
                },
                "SegmentsPerSubdirectory": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "StreamInfResolution": {
                    "$ref": "#/$defs/HlsStreamInfResolution"
                },
                "TimedMetadataId3Frame": {
                    "$ref": "#/$defs/HlsTimedMetadataId3Frame"
                },
                "TimedMetadataId3Period": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "TimestampDeltaMilliseconds": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "TsFileMode": {
                    "$ref": "#/$defs/HlsTsFileMode"
                }
            }
        },
        "__listOfHlsAdMarkers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HlsAdMarkers"
            }
        },
        "HlsAdMarkers": {
            "enum": [
                "ADOBE",
                "ELEMENTAL",
                "ELEMENTAL_SCTE35"
            ]
        },
        "__listOfCaptionLanguageMapping": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CaptionLanguageMapping"
            }
        },
        "CaptionLanguageMapping": {
            "type": "object",
            "properties": {
                "CaptionChannel": {
                    "$ref": "#/$defs/__integerMin1Max4"
                },
                "LanguageCode": {
                    "$ref": "#/$defs/__stringMin3Max3"
                },
                "LanguageDescription": {
                    "$ref": "#/$defs/__stringMin1"
                }
            }
        },
        "__integerMin1Max4": {
            "type": "integer",
            "format": "int32"
        },
        "__stringMin3Max3": {
            "type": "string"
        },
        "HlsCaptionLanguageSetting": {
            "enum": [
                "INSERT",
                "NONE",
                "OMIT"
            ]
        },
        "HlsClientCache": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "HlsCodecSpecification": {
            "enum": [
                "RFC_4281",
                "RFC_6381"
            ]
        },
        "__stringMin32Max32": {
            "type": "string"
        },
        "HlsDirectoryStructure": {
            "enum": [
                "SINGLE_DIRECTORY",
                "SUBDIRECTORY_PER_STREAM"
            ]
        },
        "HlsDiscontinuityTags": {
            "enum": [
                "INSERT",
                "NEVER_INSERT"
            ]
        },
        "HlsEncryptionType": {
            "enum": [
                "AES128",
                "SAMPLE_AES"
            ]
        },
        "HlsCdnSettings": {
            "type": "object",
            "properties": {
                "HlsAkamaiSettings": {
                    "$ref": "#/$defs/HlsAkamaiSettings"
                },
                "HlsBasicPutSettings": {
                    "$ref": "#/$defs/HlsBasicPutSettings"
                },
                "HlsMediaStoreSettings": {
                    "$ref": "#/$defs/HlsMediaStoreSettings"
                },
                "HlsS3Settings": {
                    "$ref": "#/$defs/HlsS3Settings"
                },
                "HlsWebdavSettings": {
                    "$ref": "#/$defs/HlsWebdavSettings"
                }
            }
        },
        "HlsAkamaiSettings": {
            "type": "object",
            "properties": {
                "ConnectionRetryInterval": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "FilecacheDuration": {
                    "$ref": "#/$defs/__integerMin0Max600"
                },
                "HttpTransferMode": {
                    "$ref": "#/$defs/HlsAkamaiHttpTransferMode"
                },
                "NumRetries": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "RestartDelay": {
                    "$ref": "#/$defs/__integerMin0Max15"
                },
                "Salt": {
                    "$ref": "#/$defs/__string"
                },
                "Token": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__integerMin0Max600": {
            "type": "integer",
            "format": "int32"
        },
        "HlsAkamaiHttpTransferMode": {
            "enum": [
                "CHUNKED",
                "NON_CHUNKED"
            ]
        },
        "HlsBasicPutSettings": {
            "type": "object",
            "properties": {
                "ConnectionRetryInterval": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "FilecacheDuration": {
                    "$ref": "#/$defs/__integerMin0Max600"
                },
                "NumRetries": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "RestartDelay": {
                    "$ref": "#/$defs/__integerMin0Max15"
                }
            }
        },
        "HlsMediaStoreSettings": {
            "type": "object",
            "properties": {
                "ConnectionRetryInterval": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "FilecacheDuration": {
                    "$ref": "#/$defs/__integerMin0Max600"
                },
                "MediaStoreStorageClass": {
                    "$ref": "#/$defs/HlsMediaStoreStorageClass"
                },
                "NumRetries": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "RestartDelay": {
                    "$ref": "#/$defs/__integerMin0Max15"
                }
            }
        },
        "HlsMediaStoreStorageClass": {
            "enum": [
                "TEMPORAL"
            ]
        },
        "HlsS3Settings": {
            "type": "object",
            "properties": {
                "CannedAcl": {
                    "$ref": "#/$defs/S3CannedAcl"
                }
            }
        },
        "HlsWebdavSettings": {
            "type": "object",
            "properties": {
                "ConnectionRetryInterval": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "FilecacheDuration": {
                    "$ref": "#/$defs/__integerMin0Max600"
                },
                "HttpTransferMode": {
                    "$ref": "#/$defs/HlsWebdavHttpTransferMode"
                },
                "NumRetries": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "RestartDelay": {
                    "$ref": "#/$defs/__integerMin0Max15"
                }
            }
        },
        "HlsWebdavHttpTransferMode": {
            "enum": [
                "CHUNKED",
                "NON_CHUNKED"
            ]
        },
        "HlsId3SegmentTaggingState": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "IFrameOnlyPlaylistType": {
            "enum": [
                "DISABLED",
                "STANDARD"
            ]
        },
        "HlsIncompleteSegmentBehavior": {
            "enum": [
                "AUTO",
                "SUPPRESS"
            ]
        },
        "__integerMin3": {
            "type": "integer",
            "format": "int32"
        },
        "InputLossActionForHlsOut": {
            "enum": [
                "EMIT_OUTPUT",
                "PAUSE_OUTPUT"
            ]
        },
        "HlsIvInManifest": {
            "enum": [
                "EXCLUDE",
                "INCLUDE"
            ]
        },
        "HlsIvSource": {
            "enum": [
                "EXPLICIT",
                "FOLLOWS_SEGMENT_NUMBER"
            ]
        },
        "KeyProviderSettings": {
            "type": "object",
            "properties": {
                "StaticKeySettings": {
                    "$ref": "#/$defs/StaticKeySettings"
                }
            }
        },
        "StaticKeySettings": {
            "type": "object",
            "properties": {
                "KeyProviderServer": {
                    "$ref": "#/$defs/InputLocation"
                },
                "StaticKeyValue": {
                    "$ref": "#/$defs/__stringMin32Max32"
                }
            }
        },
        "HlsManifestCompression": {
            "enum": [
                "GZIP",
                "NONE"
            ]
        },
        "HlsManifestDurationFormat": {
            "enum": [
                "FLOATING_POINT",
                "INTEGER"
            ]
        },
        "HlsMode": {
            "enum": [
                "LIVE",
                "VOD"
            ]
        },
        "HlsOutputSelection": {
            "enum": [
                "MANIFESTS_AND_SEGMENTS",
                "SEGMENTS_ONLY",
                "VARIANT_MANIFESTS_AND_SEGMENTS"
            ]
        },
        "HlsProgramDateTime": {
            "enum": [
                "EXCLUDE",
                "INCLUDE"
            ]
        },
        "HlsProgramDateTimeClock": {
            "enum": [
                "INITIALIZE_FROM_OUTPUT_TIMECODE",
                "SYSTEM_CLOCK"
            ]
        },
        "__integerMin0Max3600": {
            "type": "integer",
            "format": "int32"
        },
        "HlsRedundantManifest": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "HlsSegmentationMode": {
            "enum": [
                "USE_INPUT_SEGMENTATION",
                "USE_SEGMENT_DURATION"
            ]
        },
        "HlsStreamInfResolution": {
            "enum": [
                "EXCLUDE",
                "INCLUDE"
            ]
        },
        "HlsTimedMetadataId3Frame": {
            "enum": [
                "NONE",
                "PRIV",
                "TDRL"
            ]
        },
        "HlsTsFileMode": {
            "enum": [
                "SEGMENTED_FILES",
                "SINGLE_FILE"
            ]
        },
        "MediaPackageGroupSettings": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/OutputLocationRef"
                }
            }
        },
        "MsSmoothGroupSettings": {
            "type": "object",
            "properties": {
                "AcquisitionPointId": {
                    "$ref": "#/$defs/__string"
                },
                "AudioOnlyTimecodeControl": {
                    "$ref": "#/$defs/SmoothGroupAudioOnlyTimecodeControl"
                },
                "CertificateMode": {
                    "$ref": "#/$defs/SmoothGroupCertificateMode"
                },
                "ConnectionRetryInterval": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "Destination": {
                    "$ref": "#/$defs/OutputLocationRef"
                },
                "EventId": {
                    "$ref": "#/$defs/__string"
                },
                "EventIdMode": {
                    "$ref": "#/$defs/SmoothGroupEventIdMode"
                },
                "EventStopBehavior": {
                    "$ref": "#/$defs/SmoothGroupEventStopBehavior"
                },
                "FilecacheDuration": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "FragmentLength": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "InputLossAction": {
                    "$ref": "#/$defs/InputLossActionForMsSmoothOut"
                },
                "NumRetries": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "RestartDelay": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "SegmentationMode": {
                    "$ref": "#/$defs/SmoothGroupSegmentationMode"
                },
                "SendDelayMs": {
                    "$ref": "#/$defs/__integerMin0Max10000"
                },
                "SparseTrackType": {
                    "$ref": "#/$defs/SmoothGroupSparseTrackType"
                },
                "StreamManifestBehavior": {
                    "$ref": "#/$defs/SmoothGroupStreamManifestBehavior"
                },
                "TimestampOffset": {
                    "$ref": "#/$defs/__string"
                },
                "TimestampOffsetMode": {
                    "$ref": "#/$defs/SmoothGroupTimestampOffsetMode"
                }
            }
        },
        "SmoothGroupAudioOnlyTimecodeControl": {
            "enum": [
                "PASSTHROUGH",
                "USE_CONFIGURED_CLOCK"
            ]
        },
        "SmoothGroupCertificateMode": {
            "enum": [
                "SELF_SIGNED",
                "VERIFY_AUTHENTICITY"
            ]
        },
        "SmoothGroupEventIdMode": {
            "enum": [
                "NO_EVENT_ID",
                "USE_CONFIGURED",
                "USE_TIMESTAMP"
            ]
        },
        "SmoothGroupEventStopBehavior": {
            "enum": [
                "NONE",
                "SEND_EOS"
            ]
        },
        "InputLossActionForMsSmoothOut": {
            "enum": [
                "EMIT_OUTPUT",
                "PAUSE_OUTPUT"
            ]
        },
        "SmoothGroupSegmentationMode": {
            "enum": [
                "USE_INPUT_SEGMENTATION",
                "USE_SEGMENT_DURATION"
            ]
        },
        "__integerMin0Max10000": {
            "type": "integer",
            "format": "int32"
        },
        "SmoothGroupSparseTrackType": {
            "enum": [
                "NONE",
                "SCTE_35",
                "SCTE_35_WITHOUT_SEGMENTATION"
            ]
        },
        "SmoothGroupStreamManifestBehavior": {
            "enum": [
                "DO_NOT_SEND",
                "SEND"
            ]
        },
        "SmoothGroupTimestampOffsetMode": {
            "enum": [
                "USE_CONFIGURED_OFFSET",
                "USE_EVENT_START_DATE"
            ]
        },
        "MultiplexGroupSettings": {
            "type": "object",
            "properties": {}
        },
        "RtmpGroupSettings": {
            "type": "object",
            "properties": {
                "AdMarkers": {
                    "$ref": "#/$defs/__listOfRtmpAdMarkers"
                },
                "AuthenticationScheme": {
                    "$ref": "#/$defs/AuthenticationScheme"
                },
                "CacheFullBehavior": {
                    "$ref": "#/$defs/RtmpCacheFullBehavior"
                },
                "CacheLength": {
                    "$ref": "#/$defs/__integerMin30"
                },
                "CaptionData": {
                    "$ref": "#/$defs/RtmpCaptionData"
                },
                "InputLossAction": {
                    "$ref": "#/$defs/InputLossActionForRtmpOut"
                },
                "RestartDelay": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "IncludeFillerNalUnits": {
                    "$ref": "#/$defs/IncludeFillerNalUnits"
                }
            }
        },
        "__listOfRtmpAdMarkers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RtmpAdMarkers"
            }
        },
        "RtmpAdMarkers": {
            "enum": [
                "ON_CUE_POINT_SCTE35"
            ]
        },
        "AuthenticationScheme": {
            "enum": [
                "AKAMAI",
                "COMMON"
            ]
        },
        "RtmpCacheFullBehavior": {
            "enum": [
                "DISCONNECT_IMMEDIATELY",
                "WAIT_FOR_SERVER"
            ]
        },
        "__integerMin30": {
            "type": "integer",
            "format": "int32"
        },
        "RtmpCaptionData": {
            "enum": [
                "ALL",
                "FIELD1_608",
                "FIELD1_AND_FIELD2_608"
            ]
        },
        "InputLossActionForRtmpOut": {
            "enum": [
                "EMIT_OUTPUT",
                "PAUSE_OUTPUT"
            ]
        },
        "IncludeFillerNalUnits": {
            "enum": [
                "AUTO",
                "DROP",
                "INCLUDE"
            ]
        },
        "UdpGroupSettings": {
            "type": "object",
            "properties": {
                "InputLossAction": {
                    "$ref": "#/$defs/InputLossActionForUdpOut"
                },
                "TimedMetadataId3Frame": {
                    "$ref": "#/$defs/UdpTimedMetadataId3Frame"
                },
                "TimedMetadataId3Period": {
                    "$ref": "#/$defs/__integerMin0"
                }
            }
        },
        "InputLossActionForUdpOut": {
            "enum": [
                "DROP_PROGRAM",
                "DROP_TS",
                "EMIT_PROGRAM"
            ]
        },
        "UdpTimedMetadataId3Frame": {
            "enum": [
                "NONE",
                "PRIV",
                "TDRL"
            ]
        },
        "CmafIngestGroupSettings": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/OutputLocationRef"
                },
                "NielsenId3Behavior": {
                    "$ref": "#/$defs/CmafNielsenId3Behavior"
                },
                "Scte35Type": {
                    "$ref": "#/$defs/Scte35Type"
                },
                "SegmentLength": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "SegmentLengthUnits": {
                    "$ref": "#/$defs/CmafIngestSegmentLengthUnits"
                },
                "SendDelayMs": {
                    "$ref": "#/$defs/__integerMin0Max2000"
                },
                "KlvBehavior": {
                    "$ref": "#/$defs/CmafKLVBehavior"
                },
                "KlvNameModifier": {
                    "$ref": "#/$defs/__stringMax100"
                },
                "NielsenId3NameModifier": {
                    "$ref": "#/$defs/__stringMax100"
                },
                "Scte35NameModifier": {
                    "$ref": "#/$defs/__stringMax100"
                },
                "Id3Behavior": {
                    "$ref": "#/$defs/CmafId3Behavior"
                },
                "Id3NameModifier": {
                    "$ref": "#/$defs/__stringMax100"
                }
            }
        },
        "CmafNielsenId3Behavior": {
            "enum": [
                "NO_PASSTHROUGH",
                "PASSTHROUGH"
            ]
        },
        "Scte35Type": {
            "enum": [
                "NONE",
                "SCTE_35_WITHOUT_SEGMENTATION"
            ]
        },
        "CmafIngestSegmentLengthUnits": {
            "enum": [
                "MILLISECONDS",
                "SECONDS"
            ]
        },
        "__integerMin0Max2000": {
            "type": "integer",
            "format": "int32"
        },
        "CmafKLVBehavior": {
            "enum": [
                "NO_PASSTHROUGH",
                "PASSTHROUGH"
            ]
        },
        "__stringMax100": {
            "type": "string"
        },
        "CmafId3Behavior": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "SrtGroupSettings": {
            "type": "object",
            "properties": {
                "InputLossAction": {
                    "$ref": "#/$defs/InputLossActionForUdpOut"
                }
            }
        },
        "__listOfOutput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Output"
            }
        },
        "Output": {
            "type": "object",
            "properties": {
                "AudioDescriptionNames": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "CaptionDescriptionNames": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "OutputName": {
                    "$ref": "#/$defs/__stringMin1Max255"
                },
                "OutputSettings": {
                    "$ref": "#/$defs/OutputSettings"
                },
                "VideoDescriptionName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__stringMin1Max255": {
            "type": "string"
        },
        "OutputSettings": {
            "type": "object",
            "properties": {
                "ArchiveOutputSettings": {
                    "$ref": "#/$defs/ArchiveOutputSettings"
                },
                "FrameCaptureOutputSettings": {
                    "$ref": "#/$defs/FrameCaptureOutputSettings"
                },
                "HlsOutputSettings": {
                    "$ref": "#/$defs/HlsOutputSettings"
                },
                "MediaPackageOutputSettings": {
                    "$ref": "#/$defs/MediaPackageOutputSettings"
                },
                "MsSmoothOutputSettings": {
                    "$ref": "#/$defs/MsSmoothOutputSettings"
                },
                "MultiplexOutputSettings": {
                    "$ref": "#/$defs/MultiplexOutputSettings"
                },
                "RtmpOutputSettings": {
                    "$ref": "#/$defs/RtmpOutputSettings"
                },
                "UdpOutputSettings": {
                    "$ref": "#/$defs/UdpOutputSettings"
                },
                "CmafIngestOutputSettings": {
                    "$ref": "#/$defs/CmafIngestOutputSettings"
                },
                "SrtOutputSettings": {
                    "$ref": "#/$defs/SrtOutputSettings"
                }
            }
        },
        "ArchiveOutputSettings": {
            "type": "object",
            "properties": {
                "ContainerSettings": {
                    "$ref": "#/$defs/ArchiveContainerSettings"
                },
                "Extension": {
                    "$ref": "#/$defs/__string"
                },
                "NameModifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ArchiveContainerSettings": {
            "type": "object",
            "properties": {
                "M2tsSettings": {
                    "$ref": "#/$defs/M2tsSettings"
                },
                "RawSettings": {
                    "$ref": "#/$defs/RawSettings"
                }
            }
        },
        "M2tsSettings": {
            "type": "object",
            "properties": {
                "AbsentInputAudioBehavior": {
                    "$ref": "#/$defs/M2tsAbsentInputAudioBehavior"
                },
                "Arib": {
                    "$ref": "#/$defs/M2tsArib"
                },
                "AribCaptionsPid": {
                    "$ref": "#/$defs/__string"
                },
                "AribCaptionsPidControl": {
                    "$ref": "#/$defs/M2tsAribCaptionsPidControl"
                },
                "AudioBufferModel": {
                    "$ref": "#/$defs/M2tsAudioBufferModel"
                },
                "AudioFramesPerPes": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "AudioPids": {
                    "$ref": "#/$defs/__string"
                },
                "AudioStreamType": {
                    "$ref": "#/$defs/M2tsAudioStreamType"
                },
                "Bitrate": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "BufferModel": {
                    "$ref": "#/$defs/M2tsBufferModel"
                },
                "CcDescriptor": {
                    "$ref": "#/$defs/M2tsCcDescriptor"
                },
                "DvbNitSettings": {
                    "$ref": "#/$defs/DvbNitSettings"
                },
                "DvbSdtSettings": {
                    "$ref": "#/$defs/DvbSdtSettings"
                },
                "DvbSubPids": {
                    "$ref": "#/$defs/__string"
                },
                "DvbTdtSettings": {
                    "$ref": "#/$defs/DvbTdtSettings"
                },
                "DvbTeletextPid": {
                    "$ref": "#/$defs/__string"
                },
                "Ebif": {
                    "$ref": "#/$defs/M2tsEbifControl"
                },
                "EbpAudioInterval": {
                    "$ref": "#/$defs/M2tsAudioInterval"
                },
                "EbpLookaheadMs": {
                    "$ref": "#/$defs/__integerMin0Max10000"
                },
                "EbpPlacement": {
                    "$ref": "#/$defs/M2tsEbpPlacement"
                },
                "EcmPid": {
                    "$ref": "#/$defs/__string"
                },
                "EsRateInPes": {
                    "$ref": "#/$defs/M2tsEsRateInPes"
                },
                "EtvPlatformPid": {
                    "$ref": "#/$defs/__string"
                },
                "EtvSignalPid": {
                    "$ref": "#/$defs/__string"
                },
                "FragmentTime": {
                    "$ref": "#/$defs/__doubleMin0"
                },
                "Klv": {
                    "$ref": "#/$defs/M2tsKlv"
                },
                "KlvDataPids": {
                    "$ref": "#/$defs/__string"
                },
                "NielsenId3Behavior": {
                    "$ref": "#/$defs/M2tsNielsenId3Behavior"
                },
                "NullPacketBitrate": {
                    "$ref": "#/$defs/__doubleMin0"
                },
                "PatInterval": {
                    "$ref": "#/$defs/__integerMin0Max1000"
                },
                "PcrControl": {
                    "$ref": "#/$defs/M2tsPcrControl"
                },
                "PcrPeriod": {
                    "$ref": "#/$defs/__integerMin0Max500"
                },
                "PcrPid": {
                    "$ref": "#/$defs/__string"
                },
                "PmtInterval": {
                    "$ref": "#/$defs/__integerMin0Max1000"
                },
                "PmtPid": {
                    "$ref": "#/$defs/__string"
                },
                "ProgramNum": {
                    "$ref": "#/$defs/__integerMin0Max65535"
                },
                "RateMode": {
                    "$ref": "#/$defs/M2tsRateMode"
                },
                "Scte27Pids": {
                    "$ref": "#/$defs/__string"
                },
                "Scte35Control": {
                    "$ref": "#/$defs/M2tsScte35Control"
                },
                "Scte35Pid": {
                    "$ref": "#/$defs/__string"
                },
                "SegmentationMarkers": {
                    "$ref": "#/$defs/M2tsSegmentationMarkers"
                },
                "SegmentationStyle": {
                    "$ref": "#/$defs/M2tsSegmentationStyle"
                },
                "SegmentationTime": {
                    "$ref": "#/$defs/__doubleMin1"
                },
                "TimedMetadataBehavior": {
                    "$ref": "#/$defs/M2tsTimedMetadataBehavior"
                },
                "TimedMetadataPid": {
                    "$ref": "#/$defs/__string"
                },
                "TransportStreamId": {
                    "$ref": "#/$defs/__integerMin0Max65535"
                },
                "VideoPid": {
                    "$ref": "#/$defs/__string"
                },
                "Scte35PrerollPullupMilliseconds": {
                    "$ref": "#/$defs/__doubleMin0Max5000"
                }
            }
        },
        "M2tsAbsentInputAudioBehavior": {
            "enum": [
                "DROP",
                "ENCODE_SILENCE"
            ]
        },
        "M2tsArib": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "M2tsAribCaptionsPidControl": {
            "enum": [
                "AUTO",
                "USE_CONFIGURED"
            ]
        },
        "M2tsAudioBufferModel": {
            "enum": [
                "ATSC",
                "DVB"
            ]
        },
        "M2tsAudioStreamType": {
            "enum": [
                "ATSC",
                "DVB"
            ]
        },
        "M2tsBufferModel": {
            "enum": [
                "MULTIPLEX",
                "NONE"
            ]
        },
        "M2tsCcDescriptor": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "DvbNitSettings": {
            "type": "object",
            "properties": {
                "NetworkId": {
                    "$ref": "#/$defs/__integerMin0Max65536"
                },
                "NetworkName": {
                    "$ref": "#/$defs/__stringMin1Max256"
                },
                "RepInterval": {
                    "$ref": "#/$defs/__integerMin25Max10000"
                }
            }
        },
        "__integerMin0Max65536": {
            "type": "integer",
            "format": "int32"
        },
        "__stringMin1Max256": {
            "type": "string"
        },
        "__integerMin25Max10000": {
            "type": "integer",
            "format": "int32"
        },
        "DvbSdtSettings": {
            "type": "object",
            "properties": {
                "OutputSdt": {
                    "$ref": "#/$defs/DvbSdtOutputSdt"
                },
                "RepInterval": {
                    "$ref": "#/$defs/__integerMin25Max2000"
                },
                "ServiceName": {
                    "$ref": "#/$defs/__stringMin1Max256"
                },
                "ServiceProviderName": {
                    "$ref": "#/$defs/__stringMin1Max256"
                }
            }
        },
        "DvbSdtOutputSdt": {
            "enum": [
                "SDT_FOLLOW",
                "SDT_FOLLOW_IF_PRESENT",
                "SDT_MANUAL",
                "SDT_NONE"
            ]
        },
        "__integerMin25Max2000": {
            "type": "integer",
            "format": "int32"
        },
        "DvbTdtSettings": {
            "type": "object",
            "properties": {
                "RepInterval": {
                    "$ref": "#/$defs/__integerMin1000Max30000"
                }
            }
        },
        "__integerMin1000Max30000": {
            "type": "integer",
            "format": "int32"
        },
        "M2tsEbifControl": {
            "enum": [
                "NONE",
                "PASSTHROUGH"
            ]
        },
        "M2tsAudioInterval": {
            "enum": [
                "VIDEO_AND_FIXED_INTERVALS",
                "VIDEO_INTERVAL"
            ]
        },
        "M2tsEbpPlacement": {
            "enum": [
                "VIDEO_AND_AUDIO_PIDS",
                "VIDEO_PID"
            ]
        },
        "M2tsEsRateInPes": {
            "enum": [
                "EXCLUDE",
                "INCLUDE"
            ]
        },
        "__doubleMin0": {
            "type": "number",
            "format": "double"
        },
        "M2tsKlv": {
            "enum": [
                "NONE",
                "PASSTHROUGH"
            ]
        },
        "M2tsNielsenId3Behavior": {
            "enum": [
                "NO_PASSTHROUGH",
                "PASSTHROUGH"
            ]
        },
        "__integerMin0Max1000": {
            "type": "integer",
            "format": "int32"
        },
        "M2tsPcrControl": {
            "enum": [
                "CONFIGURED_PCR_PERIOD",
                "PCR_EVERY_PES_PACKET"
            ]
        },
        "__integerMin0Max500": {
            "type": "integer",
            "format": "int32"
        },
        "__integerMin0Max65535": {
            "type": "integer",
            "format": "int32"
        },
        "M2tsRateMode": {
            "enum": [
                "CBR",
                "VBR"
            ]
        },
        "M2tsScte35Control": {
            "enum": [
                "NONE",
                "PASSTHROUGH"
            ]
        },
        "M2tsSegmentationMarkers": {
            "enum": [
                "EBP",
                "EBP_LEGACY",
                "NONE",
                "PSI_SEGSTART",
                "RAI_ADAPT",
                "RAI_SEGSTART"
            ]
        },
        "M2tsSegmentationStyle": {
            "enum": [
                "MAINTAIN_CADENCE",
                "RESET_CADENCE"
            ]
        },
        "__doubleMin1": {
            "type": "number",
            "format": "double"
        },
        "M2tsTimedMetadataBehavior": {
            "enum": [
                "NO_PASSTHROUGH",
                "PASSTHROUGH"
            ]
        },
        "__doubleMin0Max5000": {
            "type": "number",
            "format": "double"
        },
        "RawSettings": {
            "type": "object",
            "properties": {}
        },
        "FrameCaptureOutputSettings": {
            "type": "object",
            "properties": {
                "NameModifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "HlsOutputSettings": {
            "type": "object",
            "properties": {
                "H265PackagingType": {
                    "$ref": "#/$defs/HlsH265PackagingType"
                },
                "HlsSettings": {
                    "$ref": "#/$defs/HlsSettings"
                },
                "NameModifier": {
                    "$ref": "#/$defs/__stringMin1"
                },
                "SegmentModifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "HlsH265PackagingType": {
            "enum": [
                "HEV1",
                "HVC1"
            ]
        },
        "HlsSettings": {
            "type": "object",
            "properties": {
                "AudioOnlyHlsSettings": {
                    "$ref": "#/$defs/AudioOnlyHlsSettings"
                },
                "Fmp4HlsSettings": {
                    "$ref": "#/$defs/Fmp4HlsSettings"
                },
                "FrameCaptureHlsSettings": {
                    "$ref": "#/$defs/FrameCaptureHlsSettings"
                },
                "StandardHlsSettings": {
                    "$ref": "#/$defs/StandardHlsSettings"
                }
            }
        },
        "AudioOnlyHlsSettings": {
            "type": "object",
            "properties": {
                "AudioGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "AudioOnlyImage": {
                    "$ref": "#/$defs/InputLocation"
                },
                "AudioTrackType": {
                    "$ref": "#/$defs/AudioOnlyHlsTrackType"
                },
                "SegmentType": {
                    "$ref": "#/$defs/AudioOnlyHlsSegmentType"
                }
            }
        },
        "AudioOnlyHlsTrackType": {
            "enum": [
                "ALTERNATE_AUDIO_AUTO_SELECT",
                "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
                "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
                "AUDIO_ONLY_VARIANT_STREAM"
            ]
        },
        "AudioOnlyHlsSegmentType": {
            "enum": [
                "AAC",
                "FMP4"
            ]
        },
        "Fmp4HlsSettings": {
            "type": "object",
            "properties": {
                "AudioRenditionSets": {
                    "$ref": "#/$defs/__string"
                },
                "NielsenId3Behavior": {
                    "$ref": "#/$defs/Fmp4NielsenId3Behavior"
                },
                "TimedMetadataBehavior": {
                    "$ref": "#/$defs/Fmp4TimedMetadataBehavior"
                }
            }
        },
        "Fmp4NielsenId3Behavior": {
            "enum": [
                "NO_PASSTHROUGH",
                "PASSTHROUGH"
            ]
        },
        "Fmp4TimedMetadataBehavior": {
            "enum": [
                "NO_PASSTHROUGH",
                "PASSTHROUGH"
            ]
        },
        "FrameCaptureHlsSettings": {
            "type": "object",
            "properties": {}
        },
        "StandardHlsSettings": {
            "type": "object",
            "properties": {
                "AudioRenditionSets": {
                    "$ref": "#/$defs/__string"
                },
                "M3u8Settings": {
                    "$ref": "#/$defs/M3u8Settings"
                }
            }
        },
        "M3u8Settings": {
            "type": "object",
            "properties": {
                "AudioFramesPerPes": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "AudioPids": {
                    "$ref": "#/$defs/__string"
                },
                "EcmPid": {
                    "$ref": "#/$defs/__string"
                },
                "NielsenId3Behavior": {
                    "$ref": "#/$defs/M3u8NielsenId3Behavior"
                },
                "PatInterval": {
                    "$ref": "#/$defs/__integerMin0Max1000"
                },
                "PcrControl": {
                    "$ref": "#/$defs/M3u8PcrControl"
                },
                "PcrPeriod": {
                    "$ref": "#/$defs/__integerMin0Max500"
                },
                "PcrPid": {
                    "$ref": "#/$defs/__string"
                },
                "PmtInterval": {
                    "$ref": "#/$defs/__integerMin0Max1000"
                },
                "PmtPid": {
                    "$ref": "#/$defs/__string"
                },
                "ProgramNum": {
                    "$ref": "#/$defs/__integerMin0Max65535"
                },
                "Scte35Behavior": {
                    "$ref": "#/$defs/M3u8Scte35Behavior"
                },
                "Scte35Pid": {
                    "$ref": "#/$defs/__string"
                },
                "TimedMetadataBehavior": {
                    "$ref": "#/$defs/M3u8TimedMetadataBehavior"
                },
                "TimedMetadataPid": {
                    "$ref": "#/$defs/__string"
                },
                "TransportStreamId": {
                    "$ref": "#/$defs/__integerMin0Max65535"
                },
                "VideoPid": {
                    "$ref": "#/$defs/__string"
                },
                "KlvBehavior": {
                    "$ref": "#/$defs/M3u8KlvBehavior"
                },
                "KlvDataPids": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "M3u8NielsenId3Behavior": {
            "enum": [
                "NO_PASSTHROUGH",
                "PASSTHROUGH"
            ]
        },
        "M3u8PcrControl": {
            "enum": [
                "CONFIGURED_PCR_PERIOD",
                "PCR_EVERY_PES_PACKET"
            ]
        },
        "M3u8Scte35Behavior": {
            "enum": [
                "NO_PASSTHROUGH",
                "PASSTHROUGH"
            ]
        },
        "M3u8TimedMetadataBehavior": {
            "enum": [
                "NO_PASSTHROUGH",
                "PASSTHROUGH"
            ]
        },
        "M3u8KlvBehavior": {
            "enum": [
                "NO_PASSTHROUGH",
                "PASSTHROUGH"
            ]
        },
        "MediaPackageOutputSettings": {
            "type": "object",
            "properties": {}
        },
        "MsSmoothOutputSettings": {
            "type": "object",
            "properties": {
                "H265PackagingType": {
                    "$ref": "#/$defs/MsSmoothH265PackagingType"
                },
                "NameModifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MsSmoothH265PackagingType": {
            "enum": [
                "HEV1",
                "HVC1"
            ]
        },
        "MultiplexOutputSettings": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/OutputLocationRef"
                },
                "ContainerSettings": {
                    "$ref": "#/$defs/MultiplexContainerSettings"
                }
            }
        },
        "MultiplexContainerSettings": {
            "type": "object",
            "properties": {
                "MultiplexM2tsSettings": {
                    "$ref": "#/$defs/MultiplexM2tsSettings"
                }
            }
        },
        "MultiplexM2tsSettings": {
            "type": "object",
            "properties": {
                "AbsentInputAudioBehavior": {
                    "$ref": "#/$defs/M2tsAbsentInputAudioBehavior"
                },
                "Arib": {
                    "$ref": "#/$defs/M2tsArib"
                },
                "AudioBufferModel": {
                    "$ref": "#/$defs/M2tsAudioBufferModel"
                },
                "AudioFramesPerPes": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "AudioStreamType": {
                    "$ref": "#/$defs/M2tsAudioStreamType"
                },
                "CcDescriptor": {
                    "$ref": "#/$defs/M2tsCcDescriptor"
                },
                "Ebif": {
                    "$ref": "#/$defs/M2tsEbifControl"
                },
                "EsRateInPes": {
                    "$ref": "#/$defs/M2tsEsRateInPes"
                },
                "Klv": {
                    "$ref": "#/$defs/M2tsKlv"
                },
                "NielsenId3Behavior": {
                    "$ref": "#/$defs/M2tsNielsenId3Behavior"
                },
                "PcrControl": {
                    "$ref": "#/$defs/M2tsPcrControl"
                },
                "PcrPeriod": {
                    "$ref": "#/$defs/__integerMin0Max500"
                },
                "Scte35Control": {
                    "$ref": "#/$defs/M2tsScte35Control"
                },
                "Scte35PrerollPullupMilliseconds": {
                    "$ref": "#/$defs/__doubleMin0Max5000"
                }
            }
        },
        "RtmpOutputSettings": {
            "type": "object",
            "properties": {
                "CertificateMode": {
                    "$ref": "#/$defs/RtmpOutputCertificateMode"
                },
                "ConnectionRetryInterval": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "Destination": {
                    "$ref": "#/$defs/OutputLocationRef"
                },
                "NumRetries": {
                    "$ref": "#/$defs/__integerMin0"
                }
            }
        },
        "RtmpOutputCertificateMode": {
            "enum": [
                "SELF_SIGNED",
                "VERIFY_AUTHENTICITY"
            ]
        },
        "UdpOutputSettings": {
            "type": "object",
            "properties": {
                "BufferMsec": {
                    "$ref": "#/$defs/__integerMin0Max10000"
                },
                "ContainerSettings": {
                    "$ref": "#/$defs/UdpContainerSettings"
                },
                "Destination": {
                    "$ref": "#/$defs/OutputLocationRef"
                },
                "FecOutputSettings": {
                    "$ref": "#/$defs/FecOutputSettings"
                }
            }
        },
        "UdpContainerSettings": {
            "type": "object",
            "properties": {
                "M2tsSettings": {
                    "$ref": "#/$defs/M2tsSettings"
                }
            }
        },
        "FecOutputSettings": {
            "type": "object",
            "properties": {
                "ColumnDepth": {
                    "$ref": "#/$defs/__integerMin4Max20"
                },
                "IncludeFec": {
                    "$ref": "#/$defs/FecOutputIncludeFec"
                },
                "RowLength": {
                    "$ref": "#/$defs/__integerMin1Max20"
                }
            }
        },
        "__integerMin4Max20": {
            "type": "integer",
            "format": "int32"
        },
        "FecOutputIncludeFec": {
            "enum": [
                "COLUMN",
                "COLUMN_AND_ROW"
            ]
        },
        "__integerMin1Max20": {
            "type": "integer",
            "format": "int32"
        },
        "CmafIngestOutputSettings": {
            "type": "object",
            "properties": {
                "NameModifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "SrtOutputSettings": {
            "type": "object",
            "properties": {
                "BufferMsec": {
                    "$ref": "#/$defs/__integerMin0Max10000"
                },
                "ContainerSettings": {
                    "$ref": "#/$defs/UdpContainerSettings"
                },
                "Destination": {
                    "$ref": "#/$defs/OutputLocationRef"
                },
                "EncryptionType": {
                    "$ref": "#/$defs/SrtEncryptionType"
                },
                "Latency": {
                    "$ref": "#/$defs/__integerMin40Max16000"
                }
            }
        },
        "SrtEncryptionType": {
            "enum": [
                "AES128",
                "AES192",
                "AES256"
            ]
        },
        "__integerMin40Max16000": {
            "type": "integer",
            "format": "int32"
        },
        "TimecodeConfig": {
            "type": "object",
            "properties": {
                "Source": {
                    "$ref": "#/$defs/TimecodeConfigSource"
                },
                "SyncThreshold": {
                    "$ref": "#/$defs/__integerMin1Max1000000"
                }
            }
        },
        "TimecodeConfigSource": {
            "enum": [
                "EMBEDDED",
                "SYSTEMCLOCK",
                "ZEROBASED"
            ]
        },
        "__integerMin1Max1000000": {
            "type": "integer",
            "format": "int32"
        },
        "__listOfVideoDescription": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VideoDescription"
            }
        },
        "VideoDescription": {
            "type": "object",
            "properties": {
                "CodecSettings": {
                    "$ref": "#/$defs/VideoCodecSettings"
                },
                "Height": {
                    "$ref": "#/$defs/__integer"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "RespondToAfd": {
                    "$ref": "#/$defs/VideoDescriptionRespondToAfd"
                },
                "ScalingBehavior": {
                    "$ref": "#/$defs/VideoDescriptionScalingBehavior"
                },
                "Sharpness": {
                    "$ref": "#/$defs/__integerMin0Max100"
                },
                "Width": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "VideoCodecSettings": {
            "type": "object",
            "properties": {
                "FrameCaptureSettings": {
                    "$ref": "#/$defs/FrameCaptureSettings"
                },
                "H264Settings": {
                    "$ref": "#/$defs/H264Settings"
                },
                "H265Settings": {
                    "$ref": "#/$defs/H265Settings"
                },
                "Mpeg2Settings": {
                    "$ref": "#/$defs/Mpeg2Settings"
                },
                "Av1Settings": {
                    "$ref": "#/$defs/Av1Settings"
                }
            }
        },
        "FrameCaptureSettings": {
            "type": "object",
            "properties": {
                "CaptureInterval": {
                    "$ref": "#/$defs/__integerMin1Max3600000"
                },
                "CaptureIntervalUnits": {
                    "$ref": "#/$defs/FrameCaptureIntervalUnit"
                },
                "TimecodeBurninSettings": {
                    "$ref": "#/$defs/TimecodeBurninSettings"
                }
            }
        },
        "__integerMin1Max3600000": {
            "type": "integer",
            "format": "int32"
        },
        "FrameCaptureIntervalUnit": {
            "enum": [
                "MILLISECONDS",
                "SECONDS"
            ]
        },
        "TimecodeBurninSettings": {
            "type": "object",
            "properties": {
                "FontSize": {
                    "$ref": "#/$defs/TimecodeBurninFontSize"
                },
                "Position": {
                    "$ref": "#/$defs/TimecodeBurninPosition"
                },
                "Prefix": {
                    "$ref": "#/$defs/__stringMax255"
                }
            }
        },
        "TimecodeBurninFontSize": {
            "enum": [
                "EXTRA_SMALL_10",
                "LARGE_48",
                "MEDIUM_32",
                "SMALL_16"
            ]
        },
        "TimecodeBurninPosition": {
            "enum": [
                "BOTTOM_CENTER",
                "BOTTOM_LEFT",
                "BOTTOM_RIGHT",
                "MIDDLE_CENTER",
                "MIDDLE_LEFT",
                "MIDDLE_RIGHT",
                "TOP_CENTER",
                "TOP_LEFT",
                "TOP_RIGHT"
            ]
        },
        "H264Settings": {
            "type": "object",
            "properties": {
                "AdaptiveQuantization": {
                    "$ref": "#/$defs/H264AdaptiveQuantization"
                },
                "AfdSignaling": {
                    "$ref": "#/$defs/AfdSignaling"
                },
                "Bitrate": {
                    "$ref": "#/$defs/__integerMin1000"
                },
                "BufFillPct": {
                    "$ref": "#/$defs/__integerMin0Max100"
                },
                "BufSize": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "ColorMetadata": {
                    "$ref": "#/$defs/H264ColorMetadata"
                },
                "ColorSpaceSettings": {
                    "$ref": "#/$defs/H264ColorSpaceSettings"
                },
                "EntropyEncoding": {
                    "$ref": "#/$defs/H264EntropyEncoding"
                },
                "FilterSettings": {
                    "$ref": "#/$defs/H264FilterSettings"
                },
                "FixedAfd": {
                    "$ref": "#/$defs/FixedAfd"
                },
                "FlickerAq": {
                    "$ref": "#/$defs/H264FlickerAq"
                },
                "ForceFieldPictures": {
                    "$ref": "#/$defs/H264ForceFieldPictures"
                },
                "FramerateControl": {
                    "$ref": "#/$defs/H264FramerateControl"
                },
                "FramerateDenominator": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "FramerateNumerator": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "GopBReference": {
                    "$ref": "#/$defs/H264GopBReference"
                },
                "GopClosedCadence": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "GopNumBFrames": {
                    "$ref": "#/$defs/__integerMin0Max7"
                },
                "GopSize": {
                    "$ref": "#/$defs/__double"
                },
                "GopSizeUnits": {
                    "$ref": "#/$defs/H264GopSizeUnits"
                },
                "Level": {
                    "$ref": "#/$defs/H264Level"
                },
                "LookAheadRateControl": {
                    "$ref": "#/$defs/H264LookAheadRateControl"
                },
                "MaxBitrate": {
                    "$ref": "#/$defs/__integerMin1000"
                },
                "MinIInterval": {
                    "$ref": "#/$defs/__integerMin0Max30"
                },
                "NumRefFrames": {
                    "$ref": "#/$defs/__integerMin1Max6"
                },
                "ParControl": {
                    "$ref": "#/$defs/H264ParControl"
                },
                "ParDenominator": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "ParNumerator": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "Profile": {
                    "$ref": "#/$defs/H264Profile"
                },
                "QualityLevel": {
                    "$ref": "#/$defs/H264QualityLevel"
                },
                "QvbrQualityLevel": {
                    "$ref": "#/$defs/__integerMin1Max10"
                },
                "RateControlMode": {
                    "$ref": "#/$defs/H264RateControlMode"
                },
                "ScanType": {
                    "$ref": "#/$defs/H264ScanType"
                },
                "SceneChangeDetect": {
                    "$ref": "#/$defs/H264SceneChangeDetect"
                },
                "Slices": {
                    "$ref": "#/$defs/__integerMin1Max32"
                },
                "Softness": {
                    "$ref": "#/$defs/__integerMin0Max128"
                },
                "SpatialAq": {
                    "$ref": "#/$defs/H264SpatialAq"
                },
                "SubgopLength": {
                    "$ref": "#/$defs/H264SubGopLength"
                },
                "Syntax": {
                    "$ref": "#/$defs/H264Syntax"
                },
                "TemporalAq": {
                    "$ref": "#/$defs/H264TemporalAq"
                },
                "TimecodeInsertion": {
                    "$ref": "#/$defs/H264TimecodeInsertionBehavior"
                },
                "TimecodeBurninSettings": {
                    "$ref": "#/$defs/TimecodeBurninSettings"
                },
                "MinQp": {
                    "$ref": "#/$defs/__integerMin1Max51"
                }
            }
        },
        "H264AdaptiveQuantization": {
            "enum": [
                "AUTO",
                "HIGH",
                "HIGHER",
                "LOW",
                "MAX",
                "MEDIUM",
                "OFF"
            ]
        },
        "AfdSignaling": {
            "enum": [
                "AUTO",
                "FIXED",
                "NONE"
            ]
        },
        "__integerMin1000": {
            "type": "integer",
            "format": "int32"
        },
        "H264ColorMetadata": {
            "enum": [
                "IGNORE",
                "INSERT"
            ]
        },
        "H264ColorSpaceSettings": {
            "type": "object",
            "properties": {
                "ColorSpacePassthroughSettings": {
                    "$ref": "#/$defs/ColorSpacePassthroughSettings"
                },
                "Rec601Settings": {
                    "$ref": "#/$defs/Rec601Settings"
                },
                "Rec709Settings": {
                    "$ref": "#/$defs/Rec709Settings"
                }
            }
        },
        "ColorSpacePassthroughSettings": {
            "type": "object",
            "properties": {}
        },
        "Rec601Settings": {
            "type": "object",
            "properties": {}
        },
        "Rec709Settings": {
            "type": "object",
            "properties": {}
        },
        "H264EntropyEncoding": {
            "enum": [
                "CABAC",
                "CAVLC"
            ]
        },
        "H264FilterSettings": {
            "type": "object",
            "properties": {
                "TemporalFilterSettings": {
                    "$ref": "#/$defs/TemporalFilterSettings"
                },
                "BandwidthReductionFilterSettings": {
                    "$ref": "#/$defs/BandwidthReductionFilterSettings"
                }
            }
        },
        "TemporalFilterSettings": {
            "type": "object",
            "properties": {
                "PostFilterSharpening": {
                    "$ref": "#/$defs/TemporalFilterPostFilterSharpening"
                },
                "Strength": {
                    "$ref": "#/$defs/TemporalFilterStrength"
                }
            }
        },
        "TemporalFilterPostFilterSharpening": {
            "enum": [
                "AUTO",
                "DISABLED",
                "ENABLED"
            ]
        },
        "TemporalFilterStrength": {
            "enum": [
                "AUTO",
                "STRENGTH_1",
                "STRENGTH_2",
                "STRENGTH_3",
                "STRENGTH_4",
                "STRENGTH_5",
                "STRENGTH_6",
                "STRENGTH_7",
                "STRENGTH_8",
                "STRENGTH_9",
                "STRENGTH_10",
                "STRENGTH_11",
                "STRENGTH_12",
                "STRENGTH_13",
                "STRENGTH_14",
                "STRENGTH_15",
                "STRENGTH_16"
            ]
        },
        "BandwidthReductionFilterSettings": {
            "type": "object",
            "properties": {
                "PostFilterSharpening": {
                    "$ref": "#/$defs/BandwidthReductionPostFilterSharpening"
                },
                "Strength": {
                    "$ref": "#/$defs/BandwidthReductionFilterStrength"
                }
            }
        },
        "BandwidthReductionPostFilterSharpening": {
            "enum": [
                "DISABLED",
                "SHARPENING_1",
                "SHARPENING_2",
                "SHARPENING_3"
            ]
        },
        "BandwidthReductionFilterStrength": {
            "enum": [
                "AUTO",
                "STRENGTH_1",
                "STRENGTH_2",
                "STRENGTH_3",
                "STRENGTH_4"
            ]
        },
        "FixedAfd": {
            "enum": [
                "AFD_0000",
                "AFD_0010",
                "AFD_0011",
                "AFD_0100",
                "AFD_1000",
                "AFD_1001",
                "AFD_1010",
                "AFD_1011",
                "AFD_1101",
                "AFD_1110",
                "AFD_1111"
            ]
        },
        "H264FlickerAq": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "H264ForceFieldPictures": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "H264FramerateControl": {
            "enum": [
                "INITIALIZE_FROM_SOURCE",
                "SPECIFIED"
            ]
        },
        "H264GopBReference": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "H264GopSizeUnits": {
            "enum": [
                "FRAMES",
                "SECONDS"
            ]
        },
        "H264Level": {
            "enum": [
                "H264_LEVEL_1",
                "H264_LEVEL_1_1",
                "H264_LEVEL_1_2",
                "H264_LEVEL_1_3",
                "H264_LEVEL_2",
                "H264_LEVEL_2_1",
                "H264_LEVEL_2_2",
                "H264_LEVEL_3",
                "H264_LEVEL_3_1",
                "H264_LEVEL_3_2",
                "H264_LEVEL_4",
                "H264_LEVEL_4_1",
                "H264_LEVEL_4_2",
                "H264_LEVEL_5",
                "H264_LEVEL_5_1",
                "H264_LEVEL_5_2",
                "H264_LEVEL_AUTO"
            ]
        },
        "H264LookAheadRateControl": {
            "enum": [
                "HIGH",
                "LOW",
                "MEDIUM"
            ]
        },
        "__integerMin0Max30": {
            "type": "integer",
            "format": "int32"
        },
        "__integerMin1Max6": {
            "type": "integer",
            "format": "int32"
        },
        "H264ParControl": {
            "enum": [
                "INITIALIZE_FROM_SOURCE",
                "SPECIFIED"
            ]
        },
        "H264Profile": {
            "enum": [
                "BASELINE",
                "HIGH",
                "HIGH_10BIT",
                "HIGH_422",
                "HIGH_422_10BIT",
                "MAIN"
            ]
        },
        "H264QualityLevel": {
            "enum": [
                "ENHANCED_QUALITY",
                "STANDARD_QUALITY"
            ]
        },
        "__integerMin1Max10": {
            "type": "integer",
            "format": "int32"
        },
        "H264RateControlMode": {
            "enum": [
                "CBR",
                "MULTIPLEX",
                "QVBR",
                "VBR"
            ]
        },
        "H264ScanType": {
            "enum": [
                "INTERLACED",
                "PROGRESSIVE"
            ]
        },
        "H264SceneChangeDetect": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "__integerMin1Max32": {
            "type": "integer",
            "format": "int32"
        },
        "__integerMin0Max128": {
            "type": "integer",
            "format": "int32"
        },
        "H264SpatialAq": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "H264SubGopLength": {
            "enum": [
                "DYNAMIC",
                "FIXED"
            ]
        },
        "H264Syntax": {
            "enum": [
                "DEFAULT",
                "RP2027"
            ]
        },
        "H264TemporalAq": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "H264TimecodeInsertionBehavior": {
            "enum": [
                "DISABLED",
                "PIC_TIMING_SEI"
            ]
        },
        "__integerMin1Max51": {
            "type": "integer",
            "format": "int32"
        },
        "H265Settings": {
            "type": "object",
            "properties": {
                "AdaptiveQuantization": {
                    "$ref": "#/$defs/H265AdaptiveQuantization"
                },
                "AfdSignaling": {
                    "$ref": "#/$defs/AfdSignaling"
                },
                "AlternativeTransferFunction": {
                    "$ref": "#/$defs/H265AlternativeTransferFunction"
                },
                "Bitrate": {
                    "$ref": "#/$defs/__integerMin100000Max40000000"
                },
                "BufSize": {
                    "$ref": "#/$defs/__integerMin100000Max80000000"
                },
                "ColorMetadata": {
                    "$ref": "#/$defs/H265ColorMetadata"
                },
                "ColorSpaceSettings": {
                    "$ref": "#/$defs/H265ColorSpaceSettings"
                },
                "FilterSettings": {
                    "$ref": "#/$defs/H265FilterSettings"
                },
                "FixedAfd": {
                    "$ref": "#/$defs/FixedAfd"
                },
                "FlickerAq": {
                    "$ref": "#/$defs/H265FlickerAq"
                },
                "FramerateDenominator": {
                    "$ref": "#/$defs/__integerMin1Max3003"
                },
                "FramerateNumerator": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "GopClosedCadence": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "GopSize": {
                    "$ref": "#/$defs/__double"
                },
                "GopSizeUnits": {
                    "$ref": "#/$defs/H265GopSizeUnits"
                },
                "Level": {
                    "$ref": "#/$defs/H265Level"
                },
                "LookAheadRateControl": {
                    "$ref": "#/$defs/H265LookAheadRateControl"
                },
                "MaxBitrate": {
                    "$ref": "#/$defs/__integerMin100000Max40000000"
                },
                "MinIInterval": {
                    "$ref": "#/$defs/__integerMin0Max30"
                },
                "ParDenominator": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "ParNumerator": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "Profile": {
                    "$ref": "#/$defs/H265Profile"
                },
                "QvbrQualityLevel": {
                    "$ref": "#/$defs/__integerMin1Max10"
                },
                "RateControlMode": {
                    "$ref": "#/$defs/H265RateControlMode"
                },
                "ScanType": {
                    "$ref": "#/$defs/H265ScanType"
                },
                "SceneChangeDetect": {
                    "$ref": "#/$defs/H265SceneChangeDetect"
                },
                "Slices": {
                    "$ref": "#/$defs/__integerMin1Max16"
                },
                "Tier": {
                    "$ref": "#/$defs/H265Tier"
                },
                "TimecodeInsertion": {
                    "$ref": "#/$defs/H265TimecodeInsertionBehavior"
                },
                "TimecodeBurninSettings": {
                    "$ref": "#/$defs/TimecodeBurninSettings"
                },
                "MvOverPictureBoundaries": {
                    "$ref": "#/$defs/H265MvOverPictureBoundaries"
                },
                "MvTemporalPredictor": {
                    "$ref": "#/$defs/H265MvTemporalPredictor"
                },
                "TileHeight": {
                    "$ref": "#/$defs/__integerMin64Max2160"
                },
                "TilePadding": {
                    "$ref": "#/$defs/H265TilePadding"
                },
                "TileWidth": {
                    "$ref": "#/$defs/__integerMin256Max3840"
                },
                "TreeblockSize": {
                    "$ref": "#/$defs/H265TreeblockSize"
                },
                "MinQp": {
                    "$ref": "#/$defs/__integerMin1Max51"
                },
                "Deblocking": {
                    "$ref": "#/$defs/H265Deblocking"
                }
            }
        },
        "H265AdaptiveQuantization": {
            "enum": [
                "AUTO",
                "HIGH",
                "HIGHER",
                "LOW",
                "MAX",
                "MEDIUM",
                "OFF"
            ]
        },
        "H265AlternativeTransferFunction": {
            "enum": [
                "INSERT",
                "OMIT"
            ]
        },
        "__integerMin100000Max40000000": {
            "type": "integer",
            "format": "int32"
        },
        "__integerMin100000Max80000000": {
            "type": "integer",
            "format": "int32"
        },
        "H265ColorMetadata": {
            "enum": [
                "IGNORE",
                "INSERT"
            ]
        },
        "H265ColorSpaceSettings": {
            "type": "object",
            "properties": {
                "ColorSpacePassthroughSettings": {
                    "$ref": "#/$defs/ColorSpacePassthroughSettings"
                },
                "DolbyVision81Settings": {
                    "$ref": "#/$defs/DolbyVision81Settings"
                },
                "Hdr10Settings": {
                    "$ref": "#/$defs/Hdr10Settings"
                },
                "Rec601Settings": {
                    "$ref": "#/$defs/Rec601Settings"
                },
                "Rec709Settings": {
                    "$ref": "#/$defs/Rec709Settings"
                }
            }
        },
        "DolbyVision81Settings": {
            "type": "object",
            "properties": {}
        },
        "Hdr10Settings": {
            "type": "object",
            "properties": {
                "MaxCll": {
                    "$ref": "#/$defs/__integerMin0Max32768"
                },
                "MaxFall": {
                    "$ref": "#/$defs/__integerMin0Max32768"
                }
            }
        },
        "__integerMin0Max32768": {
            "type": "integer",
            "format": "int32"
        },
        "H265FilterSettings": {
            "type": "object",
            "properties": {
                "TemporalFilterSettings": {
                    "$ref": "#/$defs/TemporalFilterSettings"
                },
                "BandwidthReductionFilterSettings": {
                    "$ref": "#/$defs/BandwidthReductionFilterSettings"
                }
            }
        },
        "H265FlickerAq": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "__integerMin1Max3003": {
            "type": "integer",
            "format": "int32"
        },
        "H265GopSizeUnits": {
            "enum": [
                "FRAMES",
                "SECONDS"
            ]
        },
        "H265Level": {
            "enum": [
                "H265_LEVEL_1",
                "H265_LEVEL_2",
                "H265_LEVEL_2_1",
                "H265_LEVEL_3",
                "H265_LEVEL_3_1",
                "H265_LEVEL_4",
                "H265_LEVEL_4_1",
                "H265_LEVEL_5",
                "H265_LEVEL_5_1",
                "H265_LEVEL_5_2",
                "H265_LEVEL_6",
                "H265_LEVEL_6_1",
                "H265_LEVEL_6_2",
                "H265_LEVEL_AUTO"
            ]
        },
        "H265LookAheadRateControl": {
            "enum": [
                "HIGH",
                "LOW",
                "MEDIUM"
            ]
        },
        "H265Profile": {
            "enum": [
                "MAIN",
                "MAIN_10BIT"
            ]
        },
        "H265RateControlMode": {
            "enum": [
                "CBR",
                "MULTIPLEX",
                "QVBR"
            ]
        },
        "H265ScanType": {
            "enum": [
                "INTERLACED",
                "PROGRESSIVE"
            ]
        },
        "H265SceneChangeDetect": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "H265Tier": {
            "enum": [
                "HIGH",
                "MAIN"
            ]
        },
        "H265TimecodeInsertionBehavior": {
            "enum": [
                "DISABLED",
                "PIC_TIMING_SEI"
            ]
        },
        "H265MvOverPictureBoundaries": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "H265MvTemporalPredictor": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "__integerMin64Max2160": {
            "type": "integer",
            "format": "int32"
        },
        "H265TilePadding": {
            "enum": [
                "NONE",
                "PADDED"
            ]
        },
        "__integerMin256Max3840": {
            "type": "integer",
            "format": "int32"
        },
        "H265TreeblockSize": {
            "enum": [
                "AUTO",
                "TREE_SIZE_32X32"
            ]
        },
        "H265Deblocking": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "Mpeg2Settings": {
            "type": "object",
            "properties": {
                "AdaptiveQuantization": {
                    "$ref": "#/$defs/Mpeg2AdaptiveQuantization"
                },
                "AfdSignaling": {
                    "$ref": "#/$defs/AfdSignaling"
                },
                "ColorMetadata": {
                    "$ref": "#/$defs/Mpeg2ColorMetadata"
                },
                "ColorSpace": {
                    "$ref": "#/$defs/Mpeg2ColorSpace"
                },
                "DisplayAspectRatio": {
                    "$ref": "#/$defs/Mpeg2DisplayRatio"
                },
                "FilterSettings": {
                    "$ref": "#/$defs/Mpeg2FilterSettings"
                },
                "FixedAfd": {
                    "$ref": "#/$defs/FixedAfd"
                },
                "FramerateDenominator": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "FramerateNumerator": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "GopClosedCadence": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "GopNumBFrames": {
                    "$ref": "#/$defs/__integerMin0Max7"
                },
                "GopSize": {
                    "$ref": "#/$defs/__double"
                },
                "GopSizeUnits": {
                    "$ref": "#/$defs/Mpeg2GopSizeUnits"
                },
                "ScanType": {
                    "$ref": "#/$defs/Mpeg2ScanType"
                },
                "SubgopLength": {
                    "$ref": "#/$defs/Mpeg2SubGopLength"
                },
                "TimecodeInsertion": {
                    "$ref": "#/$defs/Mpeg2TimecodeInsertionBehavior"
                },
                "TimecodeBurninSettings": {
                    "$ref": "#/$defs/TimecodeBurninSettings"
                }
            }
        },
        "Mpeg2AdaptiveQuantization": {
            "enum": [
                "AUTO",
                "HIGH",
                "LOW",
                "MEDIUM",
                "OFF"
            ]
        },
        "Mpeg2ColorMetadata": {
            "enum": [
                "IGNORE",
                "INSERT"
            ]
        },
        "Mpeg2ColorSpace": {
            "enum": [
                "AUTO",
                "PASSTHROUGH"
            ]
        },
        "Mpeg2DisplayRatio": {
            "enum": [
                "DISPLAYRATIO16X9",
                "DISPLAYRATIO4X3"
            ]
        },
        "Mpeg2FilterSettings": {
            "type": "object",
            "properties": {
                "TemporalFilterSettings": {
                    "$ref": "#/$defs/TemporalFilterSettings"
                }
            }
        },
        "Mpeg2GopSizeUnits": {
            "enum": [
                "FRAMES",
                "SECONDS"
            ]
        },
        "Mpeg2ScanType": {
            "enum": [
                "INTERLACED",
                "PROGRESSIVE"
            ]
        },
        "Mpeg2SubGopLength": {
            "enum": [
                "DYNAMIC",
                "FIXED"
            ]
        },
        "Mpeg2TimecodeInsertionBehavior": {
            "enum": [
                "DISABLED",
                "GOP_TIMECODE"
            ]
        },
        "Av1Settings": {
            "type": "object",
            "properties": {
                "AfdSignaling": {
                    "$ref": "#/$defs/AfdSignaling"
                },
                "BufSize": {
                    "$ref": "#/$defs/__integerMin50000Max16000000"
                },
                "ColorSpaceSettings": {
                    "$ref": "#/$defs/Av1ColorSpaceSettings"
                },
                "FixedAfd": {
                    "$ref": "#/$defs/FixedAfd"
                },
                "FramerateDenominator": {
                    "$ref": "#/$defs/__integerMin1Max3003"
                },
                "FramerateNumerator": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "GopSize": {
                    "$ref": "#/$defs/__doubleMin0"
                },
                "GopSizeUnits": {
                    "$ref": "#/$defs/Av1GopSizeUnits"
                },
                "Level": {
                    "$ref": "#/$defs/Av1Level"
                },
                "LookAheadRateControl": {
                    "$ref": "#/$defs/Av1LookAheadRateControl"
                },
                "MaxBitrate": {
                    "$ref": "#/$defs/__integerMin50000Max8000000"
                },
                "MinIInterval": {
                    "$ref": "#/$defs/__integerMin0Max30"
                },
                "ParDenominator": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "ParNumerator": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "QvbrQualityLevel": {
                    "$ref": "#/$defs/__integerMin1Max10"
                },
                "SceneChangeDetect": {
                    "$ref": "#/$defs/Av1SceneChangeDetect"
                },
                "TimecodeBurninSettings": {
                    "$ref": "#/$defs/TimecodeBurninSettings"
                }
            }
        },
        "__integerMin50000Max16000000": {
            "type": "integer",
            "format": "int32"
        },
        "Av1ColorSpaceSettings": {
            "type": "object",
            "properties": {
                "ColorSpacePassthroughSettings": {
                    "$ref": "#/$defs/ColorSpacePassthroughSettings"
                },
                "Hdr10Settings": {
                    "$ref": "#/$defs/Hdr10Settings"
                },
                "Rec601Settings": {
                    "$ref": "#/$defs/Rec601Settings"
                },
                "Rec709Settings": {
                    "$ref": "#/$defs/Rec709Settings"
                }
            }
        },
        "Av1GopSizeUnits": {
            "enum": [
                "FRAMES",
                "SECONDS"
            ]
        },
        "Av1Level": {
            "enum": [
                "AV1_LEVEL_2",
                "AV1_LEVEL_2_1",
                "AV1_LEVEL_3",
                "AV1_LEVEL_3_1",
                "AV1_LEVEL_4",
                "AV1_LEVEL_4_1",
                "AV1_LEVEL_5",
                "AV1_LEVEL_5_1",
                "AV1_LEVEL_5_2",
                "AV1_LEVEL_5_3",
                "AV1_LEVEL_6",
                "AV1_LEVEL_6_1",
                "AV1_LEVEL_6_2",
                "AV1_LEVEL_6_3",
                "AV1_LEVEL_AUTO"
            ]
        },
        "Av1LookAheadRateControl": {
            "enum": [
                "HIGH",
                "LOW",
                "MEDIUM"
            ]
        },
        "__integerMin50000Max8000000": {
            "type": "integer",
            "format": "int32"
        },
        "Av1SceneChangeDetect": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "VideoDescriptionRespondToAfd": {
            "enum": [
                "NONE",
                "PASSTHROUGH",
                "RESPOND"
            ]
        },
        "VideoDescriptionScalingBehavior": {
            "enum": [
                "DEFAULT",
                "STRETCH_TO_OUTPUT"
            ]
        },
        "ThumbnailConfiguration": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/ThumbnailState"
                }
            }
        },
        "ThumbnailState": {
            "enum": [
                "AUTO",
                "DISABLED"
            ]
        },
        "ColorCorrectionSettings": {
            "type": "object",
            "properties": {
                "GlobalColorCorrections": {
                    "$ref": "#/$defs/__listOfColorCorrection"
                }
            }
        },
        "__listOfColorCorrection": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColorCorrection"
            }
        },
        "ColorCorrection": {
            "type": "object",
            "properties": {
                "InputColorSpace": {
                    "$ref": "#/$defs/ColorSpace"
                },
                "OutputColorSpace": {
                    "$ref": "#/$defs/ColorSpace"
                },
                "Uri": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ColorSpace": {
            "enum": [
                "HDR10",
                "HLG_2020",
                "REC_601",
                "REC_709"
            ]
        },
        "__listOfInputAttachment": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputAttachment"
            }
        },
        "InputAttachment": {
            "type": "object",
            "properties": {
                "AutomaticInputFailoverSettings": {
                    "$ref": "#/$defs/AutomaticInputFailoverSettings"
                },
                "InputAttachmentName": {
                    "$ref": "#/$defs/__string"
                },
                "InputId": {
                    "$ref": "#/$defs/__string"
                },
                "InputSettings": {
                    "$ref": "#/$defs/InputSettings"
                },
                "LogicalInterfaceNames": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "AutomaticInputFailoverSettings": {
            "type": "object",
            "properties": {
                "ErrorClearTimeMsec": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "FailoverConditions": {
                    "$ref": "#/$defs/__listOfFailoverCondition"
                },
                "InputPreference": {
                    "$ref": "#/$defs/InputPreference"
                },
                "SecondaryInputId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfFailoverCondition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FailoverCondition"
            }
        },
        "FailoverCondition": {
            "type": "object",
            "properties": {
                "FailoverConditionSettings": {
                    "$ref": "#/$defs/FailoverConditionSettings"
                }
            }
        },
        "FailoverConditionSettings": {
            "type": "object",
            "properties": {
                "AudioSilenceSettings": {
                    "$ref": "#/$defs/AudioSilenceFailoverSettings"
                },
                "InputLossSettings": {
                    "$ref": "#/$defs/InputLossFailoverSettings"
                },
                "VideoBlackSettings": {
                    "$ref": "#/$defs/VideoBlackFailoverSettings"
                }
            }
        },
        "AudioSilenceFailoverSettings": {
            "type": "object",
            "properties": {
                "AudioSelectorName": {
                    "$ref": "#/$defs/__string"
                },
                "AudioSilenceThresholdMsec": {
                    "$ref": "#/$defs/__integerMin1000"
                }
            }
        },
        "InputLossFailoverSettings": {
            "type": "object",
            "properties": {
                "InputLossThresholdMsec": {
                    "$ref": "#/$defs/__integerMin100"
                }
            }
        },
        "__integerMin100": {
            "type": "integer",
            "format": "int32"
        },
        "VideoBlackFailoverSettings": {
            "type": "object",
            "properties": {
                "BlackDetectThreshold": {
                    "$ref": "#/$defs/__doubleMin0Max1"
                },
                "VideoBlackThresholdMsec": {
                    "$ref": "#/$defs/__integerMin1000"
                }
            }
        },
        "__doubleMin0Max1": {
            "type": "number",
            "format": "double"
        },
        "InputPreference": {
            "enum": [
                "EQUAL_INPUT_PREFERENCE",
                "PRIMARY_INPUT_PREFERRED"
            ]
        },
        "InputSettings": {
            "type": "object",
            "properties": {
                "AudioSelectors": {
                    "$ref": "#/$defs/__listOfAudioSelector"
                },
                "CaptionSelectors": {
                    "$ref": "#/$defs/__listOfCaptionSelector"
                },
                "DeblockFilter": {
                    "$ref": "#/$defs/InputDeblockFilter"
                },
                "DenoiseFilter": {
                    "$ref": "#/$defs/InputDenoiseFilter"
                },
                "FilterStrength": {
                    "$ref": "#/$defs/__integerMin1Max5"
                },
                "InputFilter": {
                    "$ref": "#/$defs/InputFilter"
                },
                "NetworkInputSettings": {
                    "$ref": "#/$defs/NetworkInputSettings"
                },
                "Scte35Pid": {
                    "$ref": "#/$defs/__integerMin32Max8191"
                },
                "Smpte2038DataPreference": {
                    "$ref": "#/$defs/Smpte2038DataPreference"
                },
                "SourceEndBehavior": {
                    "$ref": "#/$defs/InputSourceEndBehavior"
                },
                "VideoSelector": {
                    "$ref": "#/$defs/VideoSelector"
                }
            }
        },
        "__listOfAudioSelector": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AudioSelector"
            }
        },
        "AudioSelector": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/__stringMin1"
                },
                "SelectorSettings": {
                    "$ref": "#/$defs/AudioSelectorSettings"
                }
            }
        },
        "AudioSelectorSettings": {
            "type": "object",
            "properties": {
                "AudioHlsRenditionSelection": {
                    "$ref": "#/$defs/AudioHlsRenditionSelection"
                },
                "AudioLanguageSelection": {
                    "$ref": "#/$defs/AudioLanguageSelection"
                },
                "AudioPidSelection": {
                    "$ref": "#/$defs/AudioPidSelection"
                },
                "AudioTrackSelection": {
                    "$ref": "#/$defs/AudioTrackSelection"
                }
            }
        },
        "AudioHlsRenditionSelection": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/__stringMin1"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1"
                }
            }
        },
        "AudioLanguageSelection": {
            "type": "object",
            "properties": {
                "LanguageCode": {
                    "$ref": "#/$defs/__string"
                },
                "LanguageSelectionPolicy": {
                    "$ref": "#/$defs/AudioLanguageSelectionPolicy"
                }
            }
        },
        "AudioLanguageSelectionPolicy": {
            "enum": [
                "LOOSE",
                "STRICT"
            ]
        },
        "AudioPidSelection": {
            "type": "object",
            "properties": {
                "Pid": {
                    "$ref": "#/$defs/__integerMin0Max8191"
                }
            }
        },
        "__integerMin0Max8191": {
            "type": "integer",
            "format": "int32"
        },
        "AudioTrackSelection": {
            "type": "object",
            "properties": {
                "Tracks": {
                    "$ref": "#/$defs/__listOfAudioTrack"
                },
                "DolbyEDecode": {
                    "$ref": "#/$defs/AudioDolbyEDecode"
                }
            }
        },
        "__listOfAudioTrack": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AudioTrack"
            }
        },
        "AudioTrack": {
            "type": "object",
            "properties": {
                "Track": {
                    "$ref": "#/$defs/__integerMin1"
                }
            }
        },
        "AudioDolbyEDecode": {
            "type": "object",
            "properties": {
                "ProgramSelection": {
                    "$ref": "#/$defs/DolbyEProgramSelection"
                }
            }
        },
        "DolbyEProgramSelection": {
            "enum": [
                "ALL_CHANNELS",
                "PROGRAM_1",
                "PROGRAM_2",
                "PROGRAM_3",
                "PROGRAM_4",
                "PROGRAM_5",
                "PROGRAM_6",
                "PROGRAM_7",
                "PROGRAM_8"
            ]
        },
        "__listOfCaptionSelector": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CaptionSelector"
            }
        },
        "CaptionSelector": {
            "type": "object",
            "properties": {
                "LanguageCode": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1"
                },
                "SelectorSettings": {
                    "$ref": "#/$defs/CaptionSelectorSettings"
                }
            }
        },
        "CaptionSelectorSettings": {
            "type": "object",
            "properties": {
                "AncillarySourceSettings": {
                    "$ref": "#/$defs/AncillarySourceSettings"
                },
                "AribSourceSettings": {
                    "$ref": "#/$defs/AribSourceSettings"
                },
                "DvbSubSourceSettings": {
                    "$ref": "#/$defs/DvbSubSourceSettings"
                },
                "EmbeddedSourceSettings": {
                    "$ref": "#/$defs/EmbeddedSourceSettings"
                },
                "Scte20SourceSettings": {
                    "$ref": "#/$defs/Scte20SourceSettings"
                },
                "Scte27SourceSettings": {
                    "$ref": "#/$defs/Scte27SourceSettings"
                },
                "TeletextSourceSettings": {
                    "$ref": "#/$defs/TeletextSourceSettings"
                }
            }
        },
        "AncillarySourceSettings": {
            "type": "object",
            "properties": {
                "SourceAncillaryChannelNumber": {
                    "$ref": "#/$defs/__integerMin1Max4"
                }
            }
        },
        "AribSourceSettings": {
            "type": "object",
            "properties": {}
        },
        "DvbSubSourceSettings": {
            "type": "object",
            "properties": {
                "OcrLanguage": {
                    "$ref": "#/$defs/DvbSubOcrLanguage"
                },
                "Pid": {
                    "$ref": "#/$defs/__integerMin1"
                }
            }
        },
        "DvbSubOcrLanguage": {
            "enum": [
                "DEU",
                "ENG",
                "FRA",
                "NLD",
                "POR",
                "SPA"
            ]
        },
        "EmbeddedSourceSettings": {
            "type": "object",
            "properties": {
                "Convert608To708": {
                    "$ref": "#/$defs/EmbeddedConvert608To708"
                },
                "Scte20Detection": {
                    "$ref": "#/$defs/EmbeddedScte20Detection"
                },
                "Source608ChannelNumber": {
                    "$ref": "#/$defs/__integerMin1Max4"
                },
                "Source608TrackNumber": {
                    "$ref": "#/$defs/__integerMin1Max5"
                }
            }
        },
        "EmbeddedConvert608To708": {
            "enum": [
                "DISABLED",
                "UPCONVERT"
            ]
        },
        "EmbeddedScte20Detection": {
            "enum": [
                "AUTO",
                "OFF"
            ]
        },
        "__integerMin1Max5": {
            "type": "integer",
            "format": "int32"
        },
        "Scte20SourceSettings": {
            "type": "object",
            "properties": {
                "Convert608To708": {
                    "$ref": "#/$defs/Scte20Convert608To708"
                },
                "Source608ChannelNumber": {
                    "$ref": "#/$defs/__integerMin1Max4"
                }
            }
        },
        "Scte20Convert608To708": {
            "enum": [
                "DISABLED",
                "UPCONVERT"
            ]
        },
        "Scte27SourceSettings": {
            "type": "object",
            "properties": {
                "OcrLanguage": {
                    "$ref": "#/$defs/Scte27OcrLanguage"
                },
                "Pid": {
                    "$ref": "#/$defs/__integerMin1"
                }
            }
        },
        "Scte27OcrLanguage": {
            "enum": [
                "DEU",
                "ENG",
                "FRA",
                "NLD",
                "POR",
                "SPA"
            ]
        },
        "TeletextSourceSettings": {
            "type": "object",
            "properties": {
                "OutputRectangle": {
                    "$ref": "#/$defs/CaptionRectangle"
                },
                "PageNumber": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CaptionRectangle": {
            "type": "object",
            "properties": {
                "Height": {
                    "$ref": "#/$defs/__doubleMin0Max100"
                },
                "LeftOffset": {
                    "$ref": "#/$defs/__doubleMin0Max100"
                },
                "TopOffset": {
                    "$ref": "#/$defs/__doubleMin0Max100"
                },
                "Width": {
                    "$ref": "#/$defs/__doubleMin0Max100"
                }
            }
        },
        "__doubleMin0Max100": {
            "type": "number",
            "format": "double"
        },
        "InputDeblockFilter": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "InputDenoiseFilter": {
            "enum": [
                "DISABLED",
                "ENABLED"
            ]
        },
        "InputFilter": {
            "enum": [
                "AUTO",
                "DISABLED",
                "FORCED"
            ]
        },
        "NetworkInputSettings": {
            "type": "object",
            "properties": {
                "HlsInputSettings": {
                    "$ref": "#/$defs/HlsInputSettings"
                },
                "ServerValidation": {
                    "$ref": "#/$defs/NetworkInputServerValidation"
                },
                "MulticastInputSettings": {
                    "$ref": "#/$defs/MulticastInputSettings"
                }
            }
        },
        "HlsInputSettings": {
            "type": "object",
            "properties": {
                "Bandwidth": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "BufferSegments": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "Retries": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "RetryInterval": {
                    "$ref": "#/$defs/__integerMin0"
                },
                "Scte35Source": {
                    "$ref": "#/$defs/HlsScte35SourceType"
                }
            }
        },
        "HlsScte35SourceType": {
            "enum": [
                "MANIFEST",
                "SEGMENTS"
            ]
        },
        "NetworkInputServerValidation": {
            "enum": [
                "CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME",
                "CHECK_CRYPTOGRAPHY_ONLY"
            ]
        },
        "MulticastInputSettings": {
            "type": "object",
            "properties": {
                "SourceIpAddress": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__integerMin32Max8191": {
            "type": "integer",
            "format": "int32"
        },
        "Smpte2038DataPreference": {
            "enum": [
                "IGNORE",
                "PREFER"
            ]
        },
        "InputSourceEndBehavior": {
            "enum": [
                "CONTINUE",
                "LOOP"
            ]
        },
        "VideoSelector": {
            "type": "object",
            "properties": {
                "ColorSpace": {
                    "$ref": "#/$defs/VideoSelectorColorSpace"
                },
                "ColorSpaceSettings": {
                    "$ref": "#/$defs/VideoSelectorColorSpaceSettings"
                },
                "ColorSpaceUsage": {
                    "$ref": "#/$defs/VideoSelectorColorSpaceUsage"
                },
                "SelectorSettings": {
                    "$ref": "#/$defs/VideoSelectorSettings"
                }
            }
        },
        "VideoSelectorColorSpace": {
            "enum": [
                "FOLLOW",
                "HDR10",
                "HLG_2020",
                "REC_601",
                "REC_709"
            ]
        },
        "VideoSelectorColorSpaceSettings": {
            "type": "object",
            "properties": {
                "Hdr10Settings": {
                    "$ref": "#/$defs/Hdr10Settings"
                }
            }
        },
        "VideoSelectorColorSpaceUsage": {
            "enum": [
                "FALLBACK",
                "FORCE"
            ]
        },
        "VideoSelectorSettings": {
            "type": "object",
            "properties": {
                "VideoSelectorPid": {
                    "$ref": "#/$defs/VideoSelectorPid"
                },
                "VideoSelectorProgramId": {
                    "$ref": "#/$defs/VideoSelectorProgramId"
                }
            }
        },
        "VideoSelectorPid": {
            "type": "object",
            "properties": {
                "Pid": {
                    "$ref": "#/$defs/__integerMin0Max8191"
                }
            }
        },
        "VideoSelectorProgramId": {
            "type": "object",
            "properties": {
                "ProgramId": {
                    "$ref": "#/$defs/__integerMin0Max65536"
                }
            }
        },
        "InputSpecification": {
            "type": "object",
            "properties": {
                "Codec": {
                    "$ref": "#/$defs/InputCodec"
                },
                "MaximumBitrate": {
                    "$ref": "#/$defs/InputMaximumBitrate"
                },
                "Resolution": {
                    "$ref": "#/$defs/InputResolution"
                }
            }
        },
        "InputCodec": {
            "enum": [
                "MPEG2",
                "AVC",
                "HEVC"
            ]
        },
        "InputMaximumBitrate": {
            "enum": [
                "MAX_10_MBPS",
                "MAX_20_MBPS",
                "MAX_50_MBPS"
            ]
        },
        "InputResolution": {
            "enum": [
                "SD",
                "HD",
                "UHD"
            ]
        },
        "LogLevel": {
            "enum": [
                "ERROR",
                "WARNING",
                "INFO",
                "DEBUG",
                "DISABLED"
            ]
        },
        "MaintenanceStatus": {
            "type": "object",
            "properties": {
                "MaintenanceDay": {
                    "$ref": "#/$defs/MaintenanceDay"
                },
                "MaintenanceDeadline": {
                    "$ref": "#/$defs/__string"
                },
                "MaintenanceScheduledDate": {
                    "$ref": "#/$defs/__string"
                },
                "MaintenanceStartTime": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MaintenanceDay": {
            "enum": [
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
            ]
        },
        "__listOfPipelineDetail": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PipelineDetail"
            }
        },
        "PipelineDetail": {
            "type": "object",
            "properties": {
                "ActiveInputAttachmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ActiveInputSwitchActionName": {
                    "$ref": "#/$defs/__string"
                },
                "ActiveMotionGraphicsActionName": {
                    "$ref": "#/$defs/__string"
                },
                "ActiveMotionGraphicsUri": {
                    "$ref": "#/$defs/__string"
                },
                "PipelineId": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelEngineVersion": {
                    "$ref": "#/$defs/ChannelEngineVersionResponse"
                }
            }
        },
        "ChannelEngineVersionResponse": {
            "type": "object",
            "properties": {
                "ExpirationDate": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Version": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__timestampIso8601": {
            "type": "string",
            "format": "date-time"
        },
        "ChannelState": {
            "enum": [
                "CREATING",
                "CREATE_FAILED",
                "IDLE",
                "STARTING",
                "RUNNING",
                "RECOVERING",
                "STOPPING",
                "DELETING",
                "DELETED",
                "UPDATING",
                "UPDATE_FAILED"
            ]
        },
        "Tags": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/__string"
            }
        },
        "VpcOutputSettingsDescription": {
            "type": "object",
            "properties": {
                "AvailabilityZones": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "NetworkInterfaceIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "DescribeAnywhereSettings": {
            "type": "object",
            "properties": {
                "ChannelPlacementGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateChannelRequest": {
            "type": "object",
            "properties": {
                "CdiInputSpecification": {
                    "$ref": "#/$defs/CdiInputSpecification"
                },
                "ChannelClass": {
                    "$ref": "#/$defs/ChannelClass"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfOutputDestination"
                },
                "EncoderSettings": {
                    "$ref": "#/$defs/EncoderSettings"
                },
                "InputAttachments": {
                    "$ref": "#/$defs/__listOfInputAttachment"
                },
                "InputSpecification": {
                    "$ref": "#/$defs/InputSpecification"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "Maintenance": {
                    "$ref": "#/$defs/MaintenanceCreateSettings"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "RequestId": {
                    "$ref": "#/$defs/__string"
                },
                "Reserved": {
                    "$ref": "#/$defs/__string"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Vpc": {
                    "$ref": "#/$defs/VpcOutputSettings"
                },
                "AnywhereSettings": {
                    "$ref": "#/$defs/AnywhereSettings"
                },
                "ChannelEngineVersion": {
                    "$ref": "#/$defs/ChannelEngineVersionRequest"
                },
                "DryRun": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "MaintenanceCreateSettings": {
            "type": "object",
            "properties": {
                "MaintenanceDay": {
                    "$ref": "#/$defs/MaintenanceDay"
                },
                "MaintenanceStartTime": {
                    "$ref": "#/$defs/__stringPattern010920300"
                }
            }
        },
        "__stringPattern010920300": {
            "type": "string"
        },
        "VpcOutputSettings": {
            "type": "object",
            "properties": {
                "PublicAddressAllocationIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "AnywhereSettings": {
            "type": "object",
            "properties": {
                "ChannelPlacementGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ChannelEngineVersionRequest": {
            "type": "object",
            "properties": {
                "Version": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__boolean": {
            "type": "boolean"
        },
        "CreateChannelPlacementGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Channels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Nodes": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "State": {
                    "$ref": "#/$defs/ChannelPlacementGroupState"
                }
            }
        },
        "ChannelPlacementGroupState": {
            "enum": [
                "UNASSIGNED",
                "ASSIGNING",
                "ASSIGNED",
                "DELETING",
                "DELETE_FAILED",
                "DELETED",
                "UNASSIGNING"
            ]
        },
        "CreateChannelPlacementGroupRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Nodes": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "RequestId": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CreateCloudWatchAlarmTemplateResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveCloudwatchAlarmTemplate"
                },
                "ComparisonOperator": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateComparisonOperator"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "DatapointsToAlarm": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "EvaluationPeriods": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "GroupId": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "MetricName": {
                    "$ref": "#/$defs/__stringMax64"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Period": {
                    "$ref": "#/$defs/__integerMin10Max86400"
                },
                "Statistic": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateStatistic"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "TargetResourceType": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateTargetResourceType"
                },
                "Threshold": {
                    "$ref": "#/$defs/__double"
                },
                "TreatMissingData": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateTreatMissingData"
                }
            }
        },
        "__stringPatternArnMedialiveCloudwatchAlarmTemplate": {
            "type": "string"
        },
        "CloudWatchAlarmTemplateComparisonOperator": {
            "enum": [
                "GreaterThanOrEqualToThreshold",
                "GreaterThanThreshold",
                "LessThanThreshold",
                "LessThanOrEqualToThreshold"
            ]
        },
        "__stringMin0Max1024": {
            "type": "string"
        },
        "__stringMin7Max11PatternAws097": {
            "type": "string"
        },
        "__stringMax64": {
            "type": "string"
        },
        "__stringMin1Max255PatternS": {
            "type": "string"
        },
        "__integerMin10Max86400": {
            "type": "integer",
            "format": "int32"
        },
        "CloudWatchAlarmTemplateStatistic": {
            "enum": [
                "SampleCount",
                "Average",
                "Sum",
                "Minimum",
                "Maximum"
            ]
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/__string"
            }
        },
        "CloudWatchAlarmTemplateTargetResourceType": {
            "enum": [
                "CLOUDFRONT_DISTRIBUTION",
                "MEDIALIVE_MULTIPLEX",
                "MEDIALIVE_CHANNEL",
                "MEDIALIVE_INPUT_DEVICE",
                "MEDIAPACKAGE_CHANNEL",
                "MEDIAPACKAGE_ORIGIN_ENDPOINT",
                "MEDIACONNECT_FLOW",
                "S3_BUCKET",
                "MEDIATAILOR_PLAYBACK_CONFIGURATION"
            ]
        },
        "CloudWatchAlarmTemplateTreatMissingData": {
            "enum": [
                "notBreaching",
                "breaching",
                "ignore",
                "missing"
            ]
        },
        "CreateCloudWatchAlarmTemplateRequest": {
            "type": "object",
            "properties": {
                "ComparisonOperator": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateComparisonOperator"
                },
                "DatapointsToAlarm": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "EvaluationPeriods": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "GroupIdentifier": {
                    "$ref": "#/$defs/__stringPatternS"
                },
                "MetricName": {
                    "$ref": "#/$defs/__stringMax64"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Period": {
                    "$ref": "#/$defs/__integerMin10Max86400"
                },
                "Statistic": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateStatistic"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "TargetResourceType": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateTargetResourceType"
                },
                "Threshold": {
                    "$ref": "#/$defs/__double"
                },
                "TreatMissingData": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateTreatMissingData"
                },
                "RequestId": {
                    "$ref": "#/$defs/__stringMin1Max256PatternS"
                }
            }
        },
        "__stringPatternS": {
            "type": "string"
        },
        "__stringMin1Max256PatternS": {
            "type": "string"
        },
        "CreateCloudWatchAlarmTemplateGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveCloudwatchAlarmTemplateGroup"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "__stringPatternArnMedialiveCloudwatchAlarmTemplateGroup": {
            "type": "string"
        },
        "CreateCloudWatchAlarmTemplateGroupRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "RequestId": {
                    "$ref": "#/$defs/__stringMin1Max256PatternS"
                }
            }
        },
        "CreateClusterResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterType": {
                    "$ref": "#/$defs/ClusterType"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceRoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkSettings": {
                    "$ref": "#/$defs/ClusterNetworkSettings"
                },
                "State": {
                    "$ref": "#/$defs/ClusterState"
                }
            }
        },
        "ClusterType": {
            "enum": [
                "ON_PREMISES"
            ]
        },
        "ClusterNetworkSettings": {
            "type": "object",
            "properties": {
                "DefaultRoute": {
                    "$ref": "#/$defs/__string"
                },
                "InterfaceMappings": {
                    "$ref": "#/$defs/__listOfInterfaceMapping"
                }
            }
        },
        "__listOfInterfaceMapping": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InterfaceMapping"
            }
        },
        "InterfaceMapping": {
            "type": "object",
            "properties": {
                "LogicalInterfaceName": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ClusterState": {
            "enum": [
                "CREATING",
                "CREATE_FAILED",
                "ACTIVE",
                "DELETING",
                "DELETE_FAILED",
                "DELETED"
            ]
        },
        "CreateClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterType": {
                    "$ref": "#/$defs/ClusterType"
                },
                "InstanceRoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkSettings": {
                    "$ref": "#/$defs/ClusterNetworkSettingsCreateRequest"
                },
                "RequestId": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ClusterNetworkSettingsCreateRequest": {
            "type": "object",
            "properties": {
                "DefaultRoute": {
                    "$ref": "#/$defs/__string"
                },
                "InterfaceMappings": {
                    "$ref": "#/$defs/__listOfInterfaceMappingCreateRequest"
                }
            }
        },
        "__listOfInterfaceMappingCreateRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InterfaceMappingCreateRequest"
            }
        },
        "InterfaceMappingCreateRequest": {
            "type": "object",
            "properties": {
                "LogicalInterfaceName": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateEventBridgeRuleTemplateResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveEventbridgeRuleTemplate"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "EventTargets": {
                    "$ref": "#/$defs/__listOfEventBridgeRuleTemplateTarget"
                },
                "EventType": {
                    "$ref": "#/$defs/EventBridgeRuleTemplateEventType"
                },
                "GroupId": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "__stringPatternArnMedialiveEventbridgeRuleTemplate": {
            "type": "string"
        },
        "__listOfEventBridgeRuleTemplateTarget": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventBridgeRuleTemplateTarget"
            }
        },
        "EventBridgeRuleTemplateTarget": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringMin1Max2048PatternArn"
                }
            }
        },
        "__stringMin1Max2048PatternArn": {
            "type": "string"
        },
        "EventBridgeRuleTemplateEventType": {
            "enum": [
                "MEDIALIVE_MULTIPLEX_ALERT",
                "MEDIALIVE_MULTIPLEX_STATE_CHANGE",
                "MEDIALIVE_CHANNEL_ALERT",
                "MEDIALIVE_CHANNEL_INPUT_CHANGE",
                "MEDIALIVE_CHANNEL_STATE_CHANGE",
                "MEDIAPACKAGE_INPUT_NOTIFICATION",
                "MEDIAPACKAGE_KEY_PROVIDER_NOTIFICATION",
                "MEDIAPACKAGE_HARVEST_JOB_NOTIFICATION",
                "SIGNAL_MAP_ACTIVE_ALARM",
                "MEDIACONNECT_ALERT",
                "MEDIACONNECT_SOURCE_HEALTH",
                "MEDIACONNECT_OUTPUT_HEALTH",
                "MEDIACONNECT_FLOW_STATUS_CHANGE"
            ]
        },
        "CreateEventBridgeRuleTemplateRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "EventTargets": {
                    "$ref": "#/$defs/__listOfEventBridgeRuleTemplateTarget"
                },
                "EventType": {
                    "$ref": "#/$defs/EventBridgeRuleTemplateEventType"
                },
                "GroupIdentifier": {
                    "$ref": "#/$defs/__stringPatternS"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "RequestId": {
                    "$ref": "#/$defs/__stringMin1Max256PatternS"
                }
            }
        },
        "CreateEventBridgeRuleTemplateGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveEventbridgeRuleTemplateGroup"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "__stringPatternArnMedialiveEventbridgeRuleTemplateGroup": {
            "type": "string"
        },
        "CreateEventBridgeRuleTemplateGroupRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "RequestId": {
                    "$ref": "#/$defs/__stringMin1Max256PatternS"
                }
            }
        },
        "CreateInputResponse": {
            "type": "object",
            "properties": {
                "Input": {
                    "$ref": "#/$defs/Input"
                }
            }
        },
        "Input": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AttachedChannels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfInputDestination"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InputClass": {
                    "$ref": "#/$defs/InputClass"
                },
                "InputDevices": {
                    "$ref": "#/$defs/__listOfInputDeviceSettings"
                },
                "InputPartnerIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "InputSourceType": {
                    "$ref": "#/$defs/InputSourceType"
                },
                "MediaConnectFlows": {
                    "$ref": "#/$defs/__listOfMediaConnectFlow"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfInputSource"
                },
                "State": {
                    "$ref": "#/$defs/InputState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Type": {
                    "$ref": "#/$defs/InputType"
                },
                "SrtSettings": {
                    "$ref": "#/$defs/SrtSettings"
                },
                "InputNetworkLocation": {
                    "$ref": "#/$defs/InputNetworkLocation"
                },
                "MulticastSettings": {
                    "$ref": "#/$defs/MulticastSettings"
                }
            }
        },
        "__listOfInputDestination": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputDestination"
            }
        },
        "InputDestination": {
            "type": "object",
            "properties": {
                "Ip": {
                    "$ref": "#/$defs/__string"
                },
                "Port": {
                    "$ref": "#/$defs/__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                },
                "Vpc": {
                    "$ref": "#/$defs/InputDestinationVpc"
                },
                "Network": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkRoutes": {
                    "$ref": "#/$defs/__listOfInputDestinationRoute"
                }
            }
        },
        "InputDestinationVpc": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfInputDestinationRoute": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputDestinationRoute"
            }
        },
        "InputDestinationRoute": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/__string"
                },
                "Gateway": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "InputClass": {
            "enum": [
                "STANDARD",
                "SINGLE_PIPELINE"
            ]
        },
        "__listOfInputDeviceSettings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputDeviceSettings"
            }
        },
        "InputDeviceSettings": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "InputSourceType": {
            "enum": [
                "STATIC",
                "DYNAMIC"
            ]
        },
        "__listOfMediaConnectFlow": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaConnectFlow"
            }
        },
        "MediaConnectFlow": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfInputSource": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputSource"
            }
        },
        "InputSource": {
            "type": "object",
            "properties": {
                "PasswordParam": {
                    "$ref": "#/$defs/__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                },
                "Username": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "InputState": {
            "enum": [
                "CREATING",
                "DETACHED",
                "ATTACHED",
                "DELETING",
                "DELETED"
            ]
        },
        "InputType": {
            "enum": [
                "UDP_PUSH",
                "RTP_PUSH",
                "RTMP_PUSH",
                "RTMP_PULL",
                "URL_PULL",
                "MP4_FILE",
                "MEDIACONNECT",
                "INPUT_DEVICE",
                "AWS_CDI",
                "TS_FILE",
                "SRT_CALLER",
                "MULTICAST"
            ]
        },
        "SrtSettings": {
            "type": "object",
            "properties": {
                "SrtCallerSources": {
                    "$ref": "#/$defs/__listOfSrtCallerSource"
                }
            }
        },
        "__listOfSrtCallerSource": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SrtCallerSource"
            }
        },
        "SrtCallerSource": {
            "type": "object",
            "properties": {
                "Decryption": {
                    "$ref": "#/$defs/SrtCallerDecryption"
                },
                "MinimumLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "SrtListenerAddress": {
                    "$ref": "#/$defs/__string"
                },
                "SrtListenerPort": {
                    "$ref": "#/$defs/__string"
                },
                "StreamId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "SrtCallerDecryption": {
            "type": "object",
            "properties": {
                "Algorithm": {
                    "$ref": "#/$defs/Algorithm"
                },
                "PassphraseSecretArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "Algorithm": {
            "enum": [
                "AES128",
                "AES192",
                "AES256"
            ]
        },
        "InputNetworkLocation": {
            "enum": [
                "AWS",
                "ON_PREMISES"
            ]
        },
        "MulticastSettings": {
            "type": "object",
            "properties": {
                "Sources": {
                    "$ref": "#/$defs/__listOfMulticastSource"
                }
            }
        },
        "__listOfMulticastSource": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MulticastSource"
            }
        },
        "MulticastSource": {
            "type": "object",
            "properties": {
                "SourceIp": {
                    "$ref": "#/$defs/__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateInputRequest": {
            "type": "object",
            "properties": {
                "Destinations": {
                    "$ref": "#/$defs/__listOfInputDestinationRequest"
                },
                "InputDevices": {
                    "$ref": "#/$defs/__listOfInputDeviceSettings"
                },
                "InputSecurityGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "MediaConnectFlows": {
                    "$ref": "#/$defs/__listOfMediaConnectFlowRequest"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "RequestId": {
                    "$ref": "#/$defs/__string"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfInputSourceRequest"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Type": {
                    "$ref": "#/$defs/InputType"
                },
                "Vpc": {
                    "$ref": "#/$defs/InputVpcRequest"
                },
                "SrtSettings": {
                    "$ref": "#/$defs/SrtSettingsRequest"
                },
                "InputNetworkLocation": {
                    "$ref": "#/$defs/InputNetworkLocation"
                },
                "MulticastSettings": {
                    "$ref": "#/$defs/MulticastSettingsCreateRequest"
                }
            }
        },
        "__listOfInputDestinationRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputDestinationRequest"
            }
        },
        "InputDestinationRequest": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/__string"
                },
                "Network": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkRoutes": {
                    "$ref": "#/$defs/__listOfInputRequestDestinationRoute"
                },
                "StaticIpAddress": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfInputRequestDestinationRoute": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputRequestDestinationRoute"
            }
        },
        "InputRequestDestinationRoute": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/__string"
                },
                "Gateway": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfMediaConnectFlowRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaConnectFlowRequest"
            }
        },
        "MediaConnectFlowRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfInputSourceRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputSourceRequest"
            }
        },
        "InputSourceRequest": {
            "type": "object",
            "properties": {
                "PasswordParam": {
                    "$ref": "#/$defs/__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                },
                "Username": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "InputVpcRequest": {
            "type": "object",
            "properties": {
                "SecurityGroupIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "SrtSettingsRequest": {
            "type": "object",
            "properties": {
                "SrtCallerSources": {
                    "$ref": "#/$defs/__listOfSrtCallerSourceRequest"
                }
            }
        },
        "__listOfSrtCallerSourceRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SrtCallerSourceRequest"
            }
        },
        "SrtCallerSourceRequest": {
            "type": "object",
            "properties": {
                "Decryption": {
                    "$ref": "#/$defs/SrtCallerDecryptionRequest"
                },
                "MinimumLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "SrtListenerAddress": {
                    "$ref": "#/$defs/__string"
                },
                "SrtListenerPort": {
                    "$ref": "#/$defs/__string"
                },
                "StreamId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "SrtCallerDecryptionRequest": {
            "type": "object",
            "properties": {
                "Algorithm": {
                    "$ref": "#/$defs/Algorithm"
                },
                "PassphraseSecretArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MulticastSettingsCreateRequest": {
            "type": "object",
            "properties": {
                "Sources": {
                    "$ref": "#/$defs/__listOfMulticastSourceCreateRequest"
                }
            }
        },
        "__listOfMulticastSourceCreateRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MulticastSourceCreateRequest"
            }
        },
        "MulticastSourceCreateRequest": {
            "type": "object",
            "properties": {
                "SourceIp": {
                    "$ref": "#/$defs/__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateInputSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "SecurityGroup": {
                    "$ref": "#/$defs/InputSecurityGroup"
                }
            }
        },
        "InputSecurityGroup": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Inputs": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "State": {
                    "$ref": "#/$defs/InputSecurityGroupState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "WhitelistRules": {
                    "$ref": "#/$defs/__listOfInputWhitelistRule"
                }
            }
        },
        "InputSecurityGroupState": {
            "enum": [
                "IDLE",
                "IN_USE",
                "UPDATING",
                "DELETED"
            ]
        },
        "__listOfInputWhitelistRule": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputWhitelistRule"
            }
        },
        "InputWhitelistRule": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateInputSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "WhitelistRules": {
                    "$ref": "#/$defs/__listOfInputWhitelistRuleCidr"
                }
            }
        },
        "__listOfInputWhitelistRuleCidr": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputWhitelistRuleCidr"
            }
        },
        "InputWhitelistRuleCidr": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateMultiplexResponse": {
            "type": "object",
            "properties": {
                "Multiplex": {
                    "$ref": "#/$defs/Multiplex"
                }
            }
        },
        "Multiplex": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfMultiplexOutputDestination"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MultiplexSettings": {
                    "$ref": "#/$defs/MultiplexSettings"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "ProgramCount": {
                    "$ref": "#/$defs/__integer"
                },
                "State": {
                    "$ref": "#/$defs/MultiplexState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "__listOfMultiplexOutputDestination": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MultiplexOutputDestination"
            }
        },
        "MultiplexOutputDestination": {
            "type": "object",
            "properties": {
                "MediaConnectSettings": {
                    "$ref": "#/$defs/MultiplexMediaConnectOutputDestinationSettings"
                }
            }
        },
        "MultiplexMediaConnectOutputDestinationSettings": {
            "type": "object",
            "properties": {
                "EntitlementArn": {
                    "$ref": "#/$defs/__stringMin1"
                }
            }
        },
        "MultiplexSettings": {
            "type": "object",
            "properties": {
                "MaximumVideoBufferDelayMilliseconds": {
                    "$ref": "#/$defs/__integerMin800Max3000"
                },
                "TransportStreamBitrate": {
                    "$ref": "#/$defs/__integerMin1000000Max100000000"
                },
                "TransportStreamId": {
                    "$ref": "#/$defs/__integerMin0Max65535"
                },
                "TransportStreamReservedBitrate": {
                    "$ref": "#/$defs/__integerMin0Max100000000"
                }
            }
        },
        "__integerMin800Max3000": {
            "type": "integer",
            "format": "int32"
        },
        "__integerMin1000000Max100000000": {
            "type": "integer",
            "format": "int32"
        },
        "__integerMin0Max100000000": {
            "type": "integer",
            "format": "int32"
        },
        "MultiplexState": {
            "enum": [
                "CREATING",
                "CREATE_FAILED",
                "IDLE",
                "STARTING",
                "RUNNING",
                "RECOVERING",
                "STOPPING",
                "DELETING",
                "DELETED"
            ]
        },
        "CreateMultiplexRequest": {
            "type": "object",
            "properties": {
                "AvailabilityZones": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "MultiplexSettings": {
                    "$ref": "#/$defs/MultiplexSettings"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "RequestId": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CreateMultiplexProgramResponse": {
            "type": "object",
            "properties": {
                "MultiplexProgram": {
                    "$ref": "#/$defs/MultiplexProgram"
                }
            }
        },
        "MultiplexProgram": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "MultiplexProgramSettings": {
                    "$ref": "#/$defs/MultiplexProgramSettings"
                },
                "PacketIdentifiersMap": {
                    "$ref": "#/$defs/MultiplexProgramPacketIdentifiersMap"
                },
                "PipelineDetails": {
                    "$ref": "#/$defs/__listOfMultiplexProgramPipelineDetail"
                },
                "ProgramName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MultiplexProgramSettings": {
            "type": "object",
            "properties": {
                "PreferredChannelPipeline": {
                    "$ref": "#/$defs/PreferredChannelPipeline"
                },
                "ProgramNumber": {
                    "$ref": "#/$defs/__integerMin0Max65535"
                },
                "ServiceDescriptor": {
                    "$ref": "#/$defs/MultiplexProgramServiceDescriptor"
                },
                "VideoSettings": {
                    "$ref": "#/$defs/MultiplexVideoSettings"
                }
            }
        },
        "PreferredChannelPipeline": {
            "enum": [
                "CURRENTLY_ACTIVE",
                "PIPELINE_0",
                "PIPELINE_1"
            ]
        },
        "MultiplexProgramServiceDescriptor": {
            "type": "object",
            "properties": {
                "ProviderName": {
                    "$ref": "#/$defs/__stringMax256"
                },
                "ServiceName": {
                    "$ref": "#/$defs/__stringMax256"
                }
            }
        },
        "MultiplexVideoSettings": {
            "type": "object",
            "properties": {
                "ConstantBitrate": {
                    "$ref": "#/$defs/__integerMin100000Max100000000"
                },
                "StatmuxSettings": {
                    "$ref": "#/$defs/MultiplexStatmuxVideoSettings"
                }
            }
        },
        "__integerMin100000Max100000000": {
            "type": "integer",
            "format": "int32"
        },
        "MultiplexStatmuxVideoSettings": {
            "type": "object",
            "properties": {
                "MaximumBitrate": {
                    "$ref": "#/$defs/__integerMin100000Max100000000"
                },
                "MinimumBitrate": {
                    "$ref": "#/$defs/__integerMin100000Max100000000"
                },
                "Priority": {
                    "$ref": "#/$defs/__integerMinNegative5Max5"
                }
            }
        },
        "__integerMinNegative5Max5": {
            "type": "integer",
            "format": "int32"
        },
        "MultiplexProgramPacketIdentifiersMap": {
            "type": "object",
            "properties": {
                "AudioPids": {
                    "$ref": "#/$defs/__listOf__integer"
                },
                "DvbSubPids": {
                    "$ref": "#/$defs/__listOf__integer"
                },
                "DvbTeletextPid": {
                    "$ref": "#/$defs/__integer"
                },
                "EtvPlatformPid": {
                    "$ref": "#/$defs/__integer"
                },
                "EtvSignalPid": {
                    "$ref": "#/$defs/__integer"
                },
                "KlvDataPids": {
                    "$ref": "#/$defs/__listOf__integer"
                },
                "PcrPid": {
                    "$ref": "#/$defs/__integer"
                },
                "PmtPid": {
                    "$ref": "#/$defs/__integer"
                },
                "PrivateMetadataPid": {
                    "$ref": "#/$defs/__integer"
                },
                "Scte27Pids": {
                    "$ref": "#/$defs/__listOf__integer"
                },
                "Scte35Pid": {
                    "$ref": "#/$defs/__integer"
                },
                "TimedMetadataPid": {
                    "$ref": "#/$defs/__integer"
                },
                "VideoPid": {
                    "$ref": "#/$defs/__integer"
                },
                "AribCaptionsPid": {
                    "$ref": "#/$defs/__integer"
                },
                "DvbTeletextPids": {
                    "$ref": "#/$defs/__listOf__integer"
                },
                "EcmPid": {
                    "$ref": "#/$defs/__integer"
                },
                "Smpte2038Pid": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "__listOf__integer": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__integer"
            }
        },
        "__listOfMultiplexProgramPipelineDetail": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MultiplexProgramPipelineDetail"
            }
        },
        "MultiplexProgramPipelineDetail": {
            "type": "object",
            "properties": {
                "ActiveChannelPipeline": {
                    "$ref": "#/$defs/__string"
                },
                "PipelineId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateMultiplexProgramRequest": {
            "type": "object",
            "properties": {
                "MultiplexId": {
                    "$ref": "#/$defs/__string"
                },
                "MultiplexProgramSettings": {
                    "$ref": "#/$defs/MultiplexProgramSettings"
                },
                "ProgramName": {
                    "$ref": "#/$defs/__string"
                },
                "RequestId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateNetworkResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AssociatedClusterIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IpPools": {
                    "$ref": "#/$defs/__listOfIpPool"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Routes": {
                    "$ref": "#/$defs/__listOfRoute"
                },
                "State": {
                    "$ref": "#/$defs/NetworkState"
                }
            }
        },
        "__listOfIpPool": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpPool"
            }
        },
        "IpPool": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfRoute": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Route"
            }
        },
        "Route": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/__string"
                },
                "Gateway": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "NetworkState": {
            "enum": [
                "CREATING",
                "CREATE_FAILED",
                "ACTIVE",
                "DELETING",
                "IDLE",
                "IN_USE",
                "UPDATING",
                "DELETE_FAILED",
                "DELETED"
            ]
        },
        "CreateNetworkRequest": {
            "type": "object",
            "properties": {
                "IpPools": {
                    "$ref": "#/$defs/__listOfIpPoolCreateRequest"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "RequestId": {
                    "$ref": "#/$defs/__string"
                },
                "Routes": {
                    "$ref": "#/$defs/__listOfRouteCreateRequest"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "__listOfIpPoolCreateRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpPoolCreateRequest"
            }
        },
        "IpPoolCreateRequest": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfRouteCreateRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RouteCreateRequest"
            }
        },
        "RouteCreateRequest": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/__string"
                },
                "Gateway": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateNodeResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelPlacementGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "ConnectionState": {
                    "$ref": "#/$defs/NodeConnectionState"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NodeInterfaceMappings": {
                    "$ref": "#/$defs/__listOfNodeInterfaceMapping"
                },
                "Role": {
                    "$ref": "#/$defs/NodeRole"
                },
                "State": {
                    "$ref": "#/$defs/NodeState"
                }
            }
        },
        "NodeConnectionState": {
            "enum": [
                "CONNECTED",
                "DISCONNECTED"
            ]
        },
        "__listOfNodeInterfaceMapping": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeInterfaceMapping"
            }
        },
        "NodeInterfaceMapping": {
            "type": "object",
            "properties": {
                "LogicalInterfaceName": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkInterfaceMode": {
                    "$ref": "#/$defs/NetworkInterfaceMode"
                },
                "PhysicalInterfaceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "NetworkInterfaceMode": {
            "enum": [
                "NAT",
                "BRIDGE"
            ]
        },
        "NodeRole": {
            "enum": [
                "BACKUP",
                "ACTIVE"
            ]
        },
        "NodeState": {
            "enum": [
                "CREATED",
                "REGISTERING",
                "READY_TO_ACTIVATE",
                "REGISTRATION_FAILED",
                "ACTIVATION_FAILED",
                "ACTIVE",
                "READY",
                "IN_USE",
                "DEREGISTERING",
                "DRAINING",
                "DEREGISTRATION_FAILED",
                "DEREGISTERED"
            ]
        },
        "CreateNodeRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NodeInterfaceMappings": {
                    "$ref": "#/$defs/__listOfNodeInterfaceMappingCreateRequest"
                },
                "RequestId": {
                    "$ref": "#/$defs/__string"
                },
                "Role": {
                    "$ref": "#/$defs/NodeRole"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "__listOfNodeInterfaceMappingCreateRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeInterfaceMappingCreateRequest"
            }
        },
        "NodeInterfaceMappingCreateRequest": {
            "type": "object",
            "properties": {
                "LogicalInterfaceName": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkInterfaceMode": {
                    "$ref": "#/$defs/NetworkInterfaceMode"
                },
                "PhysicalInterfaceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateNodeRegistrationScriptResponse": {
            "type": "object",
            "properties": {
                "NodeRegistrationScript": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateNodeRegistrationScriptRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NodeInterfaceMappings": {
                    "$ref": "#/$defs/__listOfNodeInterfaceMapping"
                },
                "RequestId": {
                    "$ref": "#/$defs/__string"
                },
                "Role": {
                    "$ref": "#/$defs/NodeRole"
                }
            }
        },
        "CreatePartnerInputResponse": {
            "type": "object",
            "properties": {
                "Input": {
                    "$ref": "#/$defs/Input"
                }
            }
        },
        "CreatePartnerInputRequest": {
            "type": "object",
            "properties": {
                "InputId": {
                    "$ref": "#/$defs/__string"
                },
                "RequestId": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CreateSignalMapResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveSignalMap"
                },
                "CloudWatchAlarmTemplateGroupIds": {
                    "$ref": "#/$defs/__listOf__stringMin7Max11PatternAws097"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "DiscoveryEntryPointArn": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "EventBridgeRuleTemplateGroupIds": {
                    "$ref": "#/$defs/__listOf__stringMin7Max11PatternAws097"
                },
                "FailedMediaResourceMap": {
                    "$ref": "#/$defs/FailedMediaResourceMap"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "LastDiscoveredAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "LastSuccessfulMonitorDeployment": {
                    "$ref": "#/$defs/SuccessfulMonitorDeployment"
                },
                "MediaResourceMap": {
                    "$ref": "#/$defs/MediaResourceMap"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "MonitorChangesPendingDeployment": {
                    "$ref": "#/$defs/__boolean"
                },
                "MonitorDeployment": {
                    "$ref": "#/$defs/MonitorDeployment"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Status": {
                    "$ref": "#/$defs/SignalMapStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "__stringPatternArnMedialiveSignalMap": {
            "type": "string"
        },
        "__listOf__stringMin7Max11PatternAws097": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__stringMin7Max11PatternAws097"
            }
        },
        "__stringMin1Max2048": {
            "type": "string"
        },
        "FailedMediaResourceMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MediaResource"
            }
        },
        "MediaResource": {
            "type": "object",
            "properties": {
                "Destinations": {
                    "$ref": "#/$defs/__listOfMediaResourceNeighbor"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max256"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfMediaResourceNeighbor"
                }
            }
        },
        "__listOfMediaResourceNeighbor": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaResourceNeighbor"
            }
        },
        "MediaResourceNeighbor": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringMin1Max2048PatternArn"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max256"
                }
            }
        },
        "SuccessfulMonitorDeployment": {
            "type": "object",
            "properties": {
                "DetailsUri": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "Status": {
                    "$ref": "#/$defs/SignalMapMonitorDeploymentStatus"
                }
            }
        },
        "SignalMapMonitorDeploymentStatus": {
            "enum": [
                "NOT_DEPLOYED",
                "DRY_RUN_DEPLOYMENT_COMPLETE",
                "DRY_RUN_DEPLOYMENT_FAILED",
                "DRY_RUN_DEPLOYMENT_IN_PROGRESS",
                "DEPLOYMENT_COMPLETE",
                "DEPLOYMENT_FAILED",
                "DEPLOYMENT_IN_PROGRESS",
                "DELETE_COMPLETE",
                "DELETE_FAILED",
                "DELETE_IN_PROGRESS"
            ]
        },
        "MediaResourceMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MediaResource"
            }
        },
        "MonitorDeployment": {
            "type": "object",
            "properties": {
                "DetailsUri": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "Status": {
                    "$ref": "#/$defs/SignalMapMonitorDeploymentStatus"
                }
            }
        },
        "SignalMapStatus": {
            "enum": [
                "CREATE_IN_PROGRESS",
                "CREATE_COMPLETE",
                "CREATE_FAILED",
                "UPDATE_IN_PROGRESS",
                "UPDATE_COMPLETE",
                "UPDATE_REVERTED",
                "UPDATE_FAILED",
                "READY",
                "NOT_READY"
            ]
        },
        "CreateSignalMapRequest": {
            "type": "object",
            "properties": {
                "CloudWatchAlarmTemplateGroupIdentifiers": {
                    "$ref": "#/$defs/__listOf__stringPatternS"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "DiscoveryEntryPointArn": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "EventBridgeRuleTemplateGroupIdentifiers": {
                    "$ref": "#/$defs/__listOf__stringPatternS"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "RequestId": {
                    "$ref": "#/$defs/__stringMin1Max256PatternS"
                }
            }
        },
        "__listOf__stringPatternS": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__stringPatternS"
            }
        },
        "CreateTagsRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DeleteChannelResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CdiInputSpecification": {
                    "$ref": "#/$defs/CdiInputSpecification"
                },
                "ChannelClass": {
                    "$ref": "#/$defs/ChannelClass"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfOutputDestination"
                },
                "EgressEndpoints": {
                    "$ref": "#/$defs/__listOfChannelEgressEndpoint"
                },
                "EncoderSettings": {
                    "$ref": "#/$defs/EncoderSettings"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InputAttachments": {
                    "$ref": "#/$defs/__listOfInputAttachment"
                },
                "InputSpecification": {
                    "$ref": "#/$defs/InputSpecification"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "Maintenance": {
                    "$ref": "#/$defs/MaintenanceStatus"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelineDetails": {
                    "$ref": "#/$defs/__listOfPipelineDetail"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ChannelState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Vpc": {
                    "$ref": "#/$defs/VpcOutputSettingsDescription"
                },
                "AnywhereSettings": {
                    "$ref": "#/$defs/DescribeAnywhereSettings"
                },
                "ChannelEngineVersion": {
                    "$ref": "#/$defs/ChannelEngineVersionResponse"
                }
            }
        },
        "DeleteChannelRequest": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteChannelPlacementGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Channels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Nodes": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "State": {
                    "$ref": "#/$defs/ChannelPlacementGroupState"
                }
            }
        },
        "DeleteChannelPlacementGroupRequest": {
            "type": "object",
            "properties": {
                "ChannelPlacementGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteCloudWatchAlarmTemplateRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteCloudWatchAlarmTemplateGroupRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteClusterResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterType": {
                    "$ref": "#/$defs/ClusterType"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceRoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkSettings": {
                    "$ref": "#/$defs/ClusterNetworkSettings"
                },
                "State": {
                    "$ref": "#/$defs/ClusterState"
                }
            }
        },
        "DeleteClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteEventBridgeRuleTemplateRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteEventBridgeRuleTemplateGroupRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteInputResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteInputRequest": {
            "type": "object",
            "properties": {
                "InputId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteInputSecurityGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteInputSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "InputSecurityGroupId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteMultiplexResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfMultiplexOutputDestination"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MultiplexSettings": {
                    "$ref": "#/$defs/MultiplexSettings"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "ProgramCount": {
                    "$ref": "#/$defs/__integer"
                },
                "State": {
                    "$ref": "#/$defs/MultiplexState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DeleteMultiplexRequest": {
            "type": "object",
            "properties": {
                "MultiplexId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteMultiplexProgramResponse": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "MultiplexProgramSettings": {
                    "$ref": "#/$defs/MultiplexProgramSettings"
                },
                "PacketIdentifiersMap": {
                    "$ref": "#/$defs/MultiplexProgramPacketIdentifiersMap"
                },
                "PipelineDetails": {
                    "$ref": "#/$defs/__listOfMultiplexProgramPipelineDetail"
                },
                "ProgramName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteMultiplexProgramRequest": {
            "type": "object",
            "properties": {
                "MultiplexId": {
                    "$ref": "#/$defs/__string"
                },
                "ProgramName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteNetworkResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AssociatedClusterIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IpPools": {
                    "$ref": "#/$defs/__listOfIpPool"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Routes": {
                    "$ref": "#/$defs/__listOfRoute"
                },
                "State": {
                    "$ref": "#/$defs/NetworkState"
                }
            }
        },
        "DeleteNetworkRequest": {
            "type": "object",
            "properties": {
                "NetworkId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteNodeResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelPlacementGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "ConnectionState": {
                    "$ref": "#/$defs/NodeConnectionState"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NodeInterfaceMappings": {
                    "$ref": "#/$defs/__listOfNodeInterfaceMapping"
                },
                "Role": {
                    "$ref": "#/$defs/NodeRole"
                },
                "State": {
                    "$ref": "#/$defs/NodeState"
                }
            }
        },
        "DeleteNodeRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "NodeId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteReservationResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Count": {
                    "$ref": "#/$defs/__integer"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/__string"
                },
                "Duration": {
                    "$ref": "#/$defs/__integer"
                },
                "DurationUnits": {
                    "$ref": "#/$defs/OfferingDurationUnits"
                },
                "End": {
                    "$ref": "#/$defs/__string"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/__double"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingDescription": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingId": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingType": {
                    "$ref": "#/$defs/OfferingType"
                },
                "Region": {
                    "$ref": "#/$defs/__string"
                },
                "RenewalSettings": {
                    "$ref": "#/$defs/RenewalSettings"
                },
                "ReservationId": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceSpecification": {
                    "$ref": "#/$defs/ReservationResourceSpecification"
                },
                "Start": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ReservationState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/__double"
                }
            }
        },
        "OfferingDurationUnits": {
            "enum": [
                "MONTHS"
            ]
        },
        "OfferingType": {
            "enum": [
                "NO_UPFRONT"
            ]
        },
        "RenewalSettings": {
            "type": "object",
            "properties": {
                "AutomaticRenewal": {
                    "$ref": "#/$defs/ReservationAutomaticRenewal"
                },
                "RenewalCount": {
                    "$ref": "#/$defs/__integerMin1"
                }
            }
        },
        "ReservationAutomaticRenewal": {
            "enum": [
                "DISABLED",
                "ENABLED",
                "UNAVAILABLE"
            ]
        },
        "ReservationResourceSpecification": {
            "type": "object",
            "properties": {
                "ChannelClass": {
                    "$ref": "#/$defs/ChannelClass"
                },
                "Codec": {
                    "$ref": "#/$defs/ReservationCodec"
                },
                "MaximumBitrate": {
                    "$ref": "#/$defs/ReservationMaximumBitrate"
                },
                "MaximumFramerate": {
                    "$ref": "#/$defs/ReservationMaximumFramerate"
                },
                "Resolution": {
                    "$ref": "#/$defs/ReservationResolution"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ReservationResourceType"
                },
                "SpecialFeature": {
                    "$ref": "#/$defs/ReservationSpecialFeature"
                },
                "VideoQuality": {
                    "$ref": "#/$defs/ReservationVideoQuality"
                }
            }
        },
        "ReservationCodec": {
            "enum": [
                "MPEG2",
                "AVC",
                "HEVC",
                "AUDIO",
                "LINK",
                "AV1"
            ]
        },
        "ReservationMaximumBitrate": {
            "enum": [
                "MAX_10_MBPS",
                "MAX_20_MBPS",
                "MAX_50_MBPS"
            ]
        },
        "ReservationMaximumFramerate": {
            "enum": [
                "MAX_30_FPS",
                "MAX_60_FPS"
            ]
        },
        "ReservationResolution": {
            "enum": [
                "SD",
                "HD",
                "FHD",
                "UHD"
            ]
        },
        "ReservationResourceType": {
            "enum": [
                "INPUT",
                "OUTPUT",
                "MULTIPLEX",
                "CHANNEL"
            ]
        },
        "ReservationSpecialFeature": {
            "enum": [
                "ADVANCED_AUDIO",
                "AUDIO_NORMALIZATION",
                "MGHD",
                "MGUHD"
            ]
        },
        "ReservationVideoQuality": {
            "enum": [
                "STANDARD",
                "ENHANCED",
                "PREMIUM"
            ]
        },
        "ReservationState": {
            "enum": [
                "ACTIVE",
                "EXPIRED",
                "CANCELED",
                "DELETED"
            ]
        },
        "DeleteReservationRequest": {
            "type": "object",
            "properties": {
                "ReservationId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteScheduleResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteScheduleRequest": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteSignalMapRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteTagsRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "TagKeys": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "DescribeAccountConfigurationResponse": {
            "type": "object",
            "properties": {
                "AccountConfiguration": {
                    "$ref": "#/$defs/AccountConfiguration"
                }
            }
        },
        "AccountConfiguration": {
            "type": "object",
            "properties": {
                "KmsKeyId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeAccountConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "DescribeChannelResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CdiInputSpecification": {
                    "$ref": "#/$defs/CdiInputSpecification"
                },
                "ChannelClass": {
                    "$ref": "#/$defs/ChannelClass"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfOutputDestination"
                },
                "EgressEndpoints": {
                    "$ref": "#/$defs/__listOfChannelEgressEndpoint"
                },
                "EncoderSettings": {
                    "$ref": "#/$defs/EncoderSettings"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InputAttachments": {
                    "$ref": "#/$defs/__listOfInputAttachment"
                },
                "InputSpecification": {
                    "$ref": "#/$defs/InputSpecification"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "Maintenance": {
                    "$ref": "#/$defs/MaintenanceStatus"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelineDetails": {
                    "$ref": "#/$defs/__listOfPipelineDetail"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ChannelState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Vpc": {
                    "$ref": "#/$defs/VpcOutputSettingsDescription"
                },
                "AnywhereSettings": {
                    "$ref": "#/$defs/DescribeAnywhereSettings"
                },
                "ChannelEngineVersion": {
                    "$ref": "#/$defs/ChannelEngineVersionResponse"
                }
            }
        },
        "DescribeChannelRequest": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeChannelPlacementGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Channels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Nodes": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "State": {
                    "$ref": "#/$defs/ChannelPlacementGroupState"
                }
            }
        },
        "DescribeChannelPlacementGroupRequest": {
            "type": "object",
            "properties": {
                "ChannelPlacementGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeClusterResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterType": {
                    "$ref": "#/$defs/ClusterType"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceRoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkSettings": {
                    "$ref": "#/$defs/ClusterNetworkSettings"
                },
                "State": {
                    "$ref": "#/$defs/ClusterState"
                }
            }
        },
        "DescribeClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeInputResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AttachedChannels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfInputDestination"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InputClass": {
                    "$ref": "#/$defs/InputClass"
                },
                "InputDevices": {
                    "$ref": "#/$defs/__listOfInputDeviceSettings"
                },
                "InputPartnerIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "InputSourceType": {
                    "$ref": "#/$defs/InputSourceType"
                },
                "MediaConnectFlows": {
                    "$ref": "#/$defs/__listOfMediaConnectFlow"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfInputSource"
                },
                "State": {
                    "$ref": "#/$defs/InputState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Type": {
                    "$ref": "#/$defs/InputType"
                },
                "SrtSettings": {
                    "$ref": "#/$defs/SrtSettings"
                },
                "InputNetworkLocation": {
                    "$ref": "#/$defs/InputNetworkLocation"
                },
                "MulticastSettings": {
                    "$ref": "#/$defs/MulticastSettings"
                }
            }
        },
        "DescribeInputRequest": {
            "type": "object",
            "properties": {
                "InputId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeInputDeviceResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ConnectionState": {
                    "$ref": "#/$defs/InputDeviceConnectionState"
                },
                "DeviceSettingsSyncState": {
                    "$ref": "#/$defs/DeviceSettingsSyncState"
                },
                "DeviceUpdateStatus": {
                    "$ref": "#/$defs/DeviceUpdateStatus"
                },
                "HdDeviceSettings": {
                    "$ref": "#/$defs/InputDeviceHdSettings"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MacAddress": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkSettings": {
                    "$ref": "#/$defs/InputDeviceNetworkSettings"
                },
                "SerialNumber": {
                    "$ref": "#/$defs/__string"
                },
                "Type": {
                    "$ref": "#/$defs/InputDeviceType"
                },
                "UhdDeviceSettings": {
                    "$ref": "#/$defs/InputDeviceUhdSettings"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/__string"
                },
                "MedialiveInputArns": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "OutputType": {
                    "$ref": "#/$defs/InputDeviceOutputType"
                }
            }
        },
        "InputDeviceConnectionState": {
            "enum": [
                "DISCONNECTED",
                "CONNECTED"
            ]
        },
        "DeviceSettingsSyncState": {
            "enum": [
                "SYNCED",
                "SYNCING"
            ]
        },
        "DeviceUpdateStatus": {
            "enum": [
                "UP_TO_DATE",
                "NOT_UP_TO_DATE",
                "UPDATING"
            ]
        },
        "InputDeviceHdSettings": {
            "type": "object",
            "properties": {
                "ActiveInput": {
                    "$ref": "#/$defs/InputDeviceActiveInput"
                },
                "ConfiguredInput": {
                    "$ref": "#/$defs/InputDeviceConfiguredInput"
                },
                "DeviceState": {
                    "$ref": "#/$defs/InputDeviceState"
                },
                "Framerate": {
                    "$ref": "#/$defs/__double"
                },
                "Height": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxBitrate": {
                    "$ref": "#/$defs/__integer"
                },
                "ScanType": {
                    "$ref": "#/$defs/InputDeviceScanType"
                },
                "Width": {
                    "$ref": "#/$defs/__integer"
                },
                "LatencyMs": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "InputDeviceActiveInput": {
            "enum": [
                "HDMI",
                "SDI"
            ]
        },
        "InputDeviceConfiguredInput": {
            "enum": [
                "AUTO",
                "HDMI",
                "SDI"
            ]
        },
        "InputDeviceState": {
            "enum": [
                "IDLE",
                "STREAMING"
            ]
        },
        "InputDeviceScanType": {
            "enum": [
                "INTERLACED",
                "PROGRESSIVE"
            ]
        },
        "InputDeviceNetworkSettings": {
            "type": "object",
            "properties": {
                "DnsAddresses": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Gateway": {
                    "$ref": "#/$defs/__string"
                },
                "IpAddress": {
                    "$ref": "#/$defs/__string"
                },
                "IpScheme": {
                    "$ref": "#/$defs/InputDeviceIpScheme"
                },
                "SubnetMask": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "InputDeviceIpScheme": {
            "enum": [
                "STATIC",
                "DHCP"
            ]
        },
        "InputDeviceType": {
            "enum": [
                "HD",
                "UHD"
            ]
        },
        "InputDeviceUhdSettings": {
            "type": "object",
            "properties": {
                "ActiveInput": {
                    "$ref": "#/$defs/InputDeviceActiveInput"
                },
                "ConfiguredInput": {
                    "$ref": "#/$defs/InputDeviceConfiguredInput"
                },
                "DeviceState": {
                    "$ref": "#/$defs/InputDeviceState"
                },
                "Framerate": {
                    "$ref": "#/$defs/__double"
                },
                "Height": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxBitrate": {
                    "$ref": "#/$defs/__integer"
                },
                "ScanType": {
                    "$ref": "#/$defs/InputDeviceScanType"
                },
                "Width": {
                    "$ref": "#/$defs/__integer"
                },
                "LatencyMs": {
                    "$ref": "#/$defs/__integer"
                },
                "Codec": {
                    "$ref": "#/$defs/InputDeviceCodec"
                },
                "MediaconnectSettings": {
                    "$ref": "#/$defs/InputDeviceMediaConnectSettings"
                },
                "AudioChannelPairs": {
                    "$ref": "#/$defs/__listOfInputDeviceUhdAudioChannelPairConfig"
                }
            }
        },
        "InputDeviceCodec": {
            "enum": [
                "HEVC",
                "AVC"
            ]
        },
        "InputDeviceMediaConnectSettings": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "SecretArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfInputDeviceUhdAudioChannelPairConfig": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputDeviceUhdAudioChannelPairConfig"
            }
        },
        "InputDeviceUhdAudioChannelPairConfig": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__integer"
                },
                "Profile": {
                    "$ref": "#/$defs/InputDeviceUhdAudioChannelPairProfile"
                }
            }
        },
        "InputDeviceUhdAudioChannelPairProfile": {
            "enum": [
                "DISABLED",
                "VBR_AAC_HHE_16000",
                "VBR_AAC_HE_64000",
                "VBR_AAC_LC_128000",
                "CBR_AAC_HQ_192000",
                "CBR_AAC_HQ_256000",
                "CBR_AAC_HQ_384000",
                "CBR_AAC_HQ_512000"
            ]
        },
        "InputDeviceOutputType": {
            "enum": [
                "NONE",
                "MEDIALIVE_INPUT",
                "MEDIACONNECT_FLOW"
            ]
        },
        "DescribeInputDeviceRequest": {
            "type": "object",
            "properties": {
                "InputDeviceId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeInputDeviceThumbnailResponse": {
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/$defs/InputDeviceThumbnail"
                },
                "ContentType": {
                    "$ref": "#/$defs/ContentType"
                },
                "ContentLength": {
                    "$ref": "#/$defs/__long"
                },
                "ETag": {
                    "$ref": "#/$defs/__string"
                },
                "LastModified": {
                    "$ref": "#/$defs/__timestamp"
                }
            }
        },
        "InputDeviceThumbnail": {
            "type": "string",
            "format": "binary"
        },
        "ContentType": {
            "enum": [
                "image_jpeg"
            ]
        },
        "__long": {
            "type": "integer",
            "format": "int64"
        },
        "__timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeInputDeviceThumbnailRequest": {
            "type": "object",
            "properties": {
                "InputDeviceId": {
                    "$ref": "#/$defs/__string"
                },
                "Accept": {
                    "$ref": "#/$defs/AcceptHeader"
                }
            }
        },
        "AcceptHeader": {
            "enum": [
                "image_jpeg"
            ]
        },
        "DescribeInputSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Inputs": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "State": {
                    "$ref": "#/$defs/InputSecurityGroupState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "WhitelistRules": {
                    "$ref": "#/$defs/__listOfInputWhitelistRule"
                }
            }
        },
        "DescribeInputSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "InputSecurityGroupId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeMultiplexResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfMultiplexOutputDestination"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MultiplexSettings": {
                    "$ref": "#/$defs/MultiplexSettings"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "ProgramCount": {
                    "$ref": "#/$defs/__integer"
                },
                "State": {
                    "$ref": "#/$defs/MultiplexState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DescribeMultiplexRequest": {
            "type": "object",
            "properties": {
                "MultiplexId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeMultiplexProgramResponse": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "MultiplexProgramSettings": {
                    "$ref": "#/$defs/MultiplexProgramSettings"
                },
                "PacketIdentifiersMap": {
                    "$ref": "#/$defs/MultiplexProgramPacketIdentifiersMap"
                },
                "PipelineDetails": {
                    "$ref": "#/$defs/__listOfMultiplexProgramPipelineDetail"
                },
                "ProgramName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeMultiplexProgramRequest": {
            "type": "object",
            "properties": {
                "MultiplexId": {
                    "$ref": "#/$defs/__string"
                },
                "ProgramName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeNetworkResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AssociatedClusterIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IpPools": {
                    "$ref": "#/$defs/__listOfIpPool"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Routes": {
                    "$ref": "#/$defs/__listOfRoute"
                },
                "State": {
                    "$ref": "#/$defs/NetworkState"
                }
            }
        },
        "DescribeNetworkRequest": {
            "type": "object",
            "properties": {
                "NetworkId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeNodeResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelPlacementGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "ConnectionState": {
                    "$ref": "#/$defs/NodeConnectionState"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NodeInterfaceMappings": {
                    "$ref": "#/$defs/__listOfNodeInterfaceMapping"
                },
                "Role": {
                    "$ref": "#/$defs/NodeRole"
                },
                "State": {
                    "$ref": "#/$defs/NodeState"
                }
            }
        },
        "DescribeNodeRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "NodeId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeOfferingResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/__string"
                },
                "Duration": {
                    "$ref": "#/$defs/__integer"
                },
                "DurationUnits": {
                    "$ref": "#/$defs/OfferingDurationUnits"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/__double"
                },
                "OfferingDescription": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingId": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingType": {
                    "$ref": "#/$defs/OfferingType"
                },
                "Region": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceSpecification": {
                    "$ref": "#/$defs/ReservationResourceSpecification"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/__double"
                }
            }
        },
        "DescribeOfferingRequest": {
            "type": "object",
            "properties": {
                "OfferingId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeReservationResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Count": {
                    "$ref": "#/$defs/__integer"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/__string"
                },
                "Duration": {
                    "$ref": "#/$defs/__integer"
                },
                "DurationUnits": {
                    "$ref": "#/$defs/OfferingDurationUnits"
                },
                "End": {
                    "$ref": "#/$defs/__string"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/__double"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingDescription": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingId": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingType": {
                    "$ref": "#/$defs/OfferingType"
                },
                "Region": {
                    "$ref": "#/$defs/__string"
                },
                "RenewalSettings": {
                    "$ref": "#/$defs/RenewalSettings"
                },
                "ReservationId": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceSpecification": {
                    "$ref": "#/$defs/ReservationResourceSpecification"
                },
                "Start": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ReservationState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/__double"
                }
            }
        },
        "DescribeReservationRequest": {
            "type": "object",
            "properties": {
                "ReservationId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeScheduleResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "ScheduleActions": {
                    "$ref": "#/$defs/__listOfScheduleAction"
                }
            }
        },
        "DescribeScheduleRequest": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeThumbnailsResponse": {
            "type": "object",
            "properties": {
                "ThumbnailDetails": {
                    "$ref": "#/$defs/__listOfThumbnailDetail"
                }
            }
        },
        "__listOfThumbnailDetail": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThumbnailDetail"
            }
        },
        "ThumbnailDetail": {
            "type": "object",
            "properties": {
                "PipelineId": {
                    "$ref": "#/$defs/__string"
                },
                "Thumbnails": {
                    "$ref": "#/$defs/__listOfThumbnail"
                }
            }
        },
        "__listOfThumbnail": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Thumbnail"
            }
        },
        "Thumbnail": {
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/$defs/__string"
                },
                "ContentType": {
                    "$ref": "#/$defs/__string"
                },
                "ThumbnailType": {
                    "$ref": "#/$defs/ThumbnailType"
                },
                "TimeStamp": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "ThumbnailType": {
            "enum": [
                "UNSPECIFIED",
                "CURRENT_ACTIVE"
            ]
        },
        "DescribeThumbnailsRequest": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "PipelineId": {
                    "$ref": "#/$defs/__string"
                },
                "ThumbnailType": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetCloudWatchAlarmTemplateResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveCloudwatchAlarmTemplate"
                },
                "ComparisonOperator": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateComparisonOperator"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "DatapointsToAlarm": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "EvaluationPeriods": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "GroupId": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "MetricName": {
                    "$ref": "#/$defs/__stringMax64"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Period": {
                    "$ref": "#/$defs/__integerMin10Max86400"
                },
                "Statistic": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateStatistic"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "TargetResourceType": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateTargetResourceType"
                },
                "Threshold": {
                    "$ref": "#/$defs/__double"
                },
                "TreatMissingData": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateTreatMissingData"
                }
            }
        },
        "GetCloudWatchAlarmTemplateRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetCloudWatchAlarmTemplateGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveCloudwatchAlarmTemplateGroup"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetCloudWatchAlarmTemplateGroupRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetEventBridgeRuleTemplateResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveEventbridgeRuleTemplate"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "EventTargets": {
                    "$ref": "#/$defs/__listOfEventBridgeRuleTemplateTarget"
                },
                "EventType": {
                    "$ref": "#/$defs/EventBridgeRuleTemplateEventType"
                },
                "GroupId": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetEventBridgeRuleTemplateRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetEventBridgeRuleTemplateGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveEventbridgeRuleTemplateGroup"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetEventBridgeRuleTemplateGroupRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetSignalMapResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveSignalMap"
                },
                "CloudWatchAlarmTemplateGroupIds": {
                    "$ref": "#/$defs/__listOf__stringMin7Max11PatternAws097"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "DiscoveryEntryPointArn": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "EventBridgeRuleTemplateGroupIds": {
                    "$ref": "#/$defs/__listOf__stringMin7Max11PatternAws097"
                },
                "FailedMediaResourceMap": {
                    "$ref": "#/$defs/FailedMediaResourceMap"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "LastDiscoveredAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "LastSuccessfulMonitorDeployment": {
                    "$ref": "#/$defs/SuccessfulMonitorDeployment"
                },
                "MediaResourceMap": {
                    "$ref": "#/$defs/MediaResourceMap"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "MonitorChangesPendingDeployment": {
                    "$ref": "#/$defs/__boolean"
                },
                "MonitorDeployment": {
                    "$ref": "#/$defs/MonitorDeployment"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Status": {
                    "$ref": "#/$defs/SignalMapStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetSignalMapRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListChannelPlacementGroupsResponse": {
            "type": "object",
            "properties": {
                "ChannelPlacementGroups": {
                    "$ref": "#/$defs/__listOfDescribeChannelPlacementGroupSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfDescribeChannelPlacementGroupSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribeChannelPlacementGroupSummary"
            }
        },
        "DescribeChannelPlacementGroupSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Channels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Nodes": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "State": {
                    "$ref": "#/$defs/ChannelPlacementGroupState"
                }
            }
        },
        "ListChannelPlacementGroupsRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListChannelsResponse": {
            "type": "object",
            "properties": {
                "Channels": {
                    "$ref": "#/$defs/__listOfChannelSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfChannelSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChannelSummary"
            }
        },
        "ChannelSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CdiInputSpecification": {
                    "$ref": "#/$defs/CdiInputSpecification"
                },
                "ChannelClass": {
                    "$ref": "#/$defs/ChannelClass"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfOutputDestination"
                },
                "EgressEndpoints": {
                    "$ref": "#/$defs/__listOfChannelEgressEndpoint"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InputAttachments": {
                    "$ref": "#/$defs/__listOfInputAttachment"
                },
                "InputSpecification": {
                    "$ref": "#/$defs/InputSpecification"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "Maintenance": {
                    "$ref": "#/$defs/MaintenanceStatus"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ChannelState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Vpc": {
                    "$ref": "#/$defs/VpcOutputSettingsDescription"
                },
                "AnywhereSettings": {
                    "$ref": "#/$defs/DescribeAnywhereSettings"
                },
                "ChannelEngineVersion": {
                    "$ref": "#/$defs/ChannelEngineVersionResponse"
                },
                "UsedChannelEngineVersions": {
                    "$ref": "#/$defs/__listOfChannelEngineVersionResponse"
                }
            }
        },
        "__listOfChannelEngineVersionResponse": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChannelEngineVersionResponse"
            }
        },
        "ListChannelsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListCloudWatchAlarmTemplateGroupsResponse": {
            "type": "object",
            "properties": {
                "CloudWatchAlarmTemplateGroups": {
                    "$ref": "#/$defs/__listOfCloudWatchAlarmTemplateGroupSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                }
            }
        },
        "__listOfCloudWatchAlarmTemplateGroupSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudWatchAlarmTemplateGroupSummary"
            }
        },
        "CloudWatchAlarmTemplateGroupSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveCloudwatchAlarmTemplateGroup"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "TemplateCount": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "ListCloudWatchAlarmTemplateGroupsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Scope": {
                    "$ref": "#/$defs/__string"
                },
                "SignalMapIdentifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListCloudWatchAlarmTemplatesResponse": {
            "type": "object",
            "properties": {
                "CloudWatchAlarmTemplates": {
                    "$ref": "#/$defs/__listOfCloudWatchAlarmTemplateSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                }
            }
        },
        "__listOfCloudWatchAlarmTemplateSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudWatchAlarmTemplateSummary"
            }
        },
        "CloudWatchAlarmTemplateSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveCloudwatchAlarmTemplate"
                },
                "ComparisonOperator": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateComparisonOperator"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "DatapointsToAlarm": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "EvaluationPeriods": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "GroupId": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "MetricName": {
                    "$ref": "#/$defs/__stringMax64"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Period": {
                    "$ref": "#/$defs/__integerMin10Max86400"
                },
                "Statistic": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateStatistic"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "TargetResourceType": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateTargetResourceType"
                },
                "Threshold": {
                    "$ref": "#/$defs/__double"
                },
                "TreatMissingData": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateTreatMissingData"
                }
            }
        },
        "ListCloudWatchAlarmTemplatesRequest": {
            "type": "object",
            "properties": {
                "GroupIdentifier": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Scope": {
                    "$ref": "#/$defs/__string"
                },
                "SignalMapIdentifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListClustersResponse": {
            "type": "object",
            "properties": {
                "Clusters": {
                    "$ref": "#/$defs/__listOfDescribeClusterSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfDescribeClusterSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribeClusterSummary"
            }
        },
        "DescribeClusterSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterType": {
                    "$ref": "#/$defs/ClusterType"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceRoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkSettings": {
                    "$ref": "#/$defs/ClusterNetworkSettings"
                },
                "State": {
                    "$ref": "#/$defs/ClusterState"
                }
            }
        },
        "ListClustersRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListEventBridgeRuleTemplateGroupsResponse": {
            "type": "object",
            "properties": {
                "EventBridgeRuleTemplateGroups": {
                    "$ref": "#/$defs/__listOfEventBridgeRuleTemplateGroupSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                }
            }
        },
        "__listOfEventBridgeRuleTemplateGroupSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventBridgeRuleTemplateGroupSummary"
            }
        },
        "EventBridgeRuleTemplateGroupSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveEventbridgeRuleTemplateGroup"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "TemplateCount": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "ListEventBridgeRuleTemplateGroupsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "SignalMapIdentifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListEventBridgeRuleTemplatesResponse": {
            "type": "object",
            "properties": {
                "EventBridgeRuleTemplates": {
                    "$ref": "#/$defs/__listOfEventBridgeRuleTemplateSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                }
            }
        },
        "__listOfEventBridgeRuleTemplateSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventBridgeRuleTemplateSummary"
            }
        },
        "EventBridgeRuleTemplateSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveEventbridgeRuleTemplate"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "EventTargetCount": {
                    "$ref": "#/$defs/__integerMax5"
                },
                "EventType": {
                    "$ref": "#/$defs/EventBridgeRuleTemplateEventType"
                },
                "GroupId": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "__integerMax5": {
            "type": "integer",
            "format": "int32"
        },
        "ListEventBridgeRuleTemplatesRequest": {
            "type": "object",
            "properties": {
                "GroupIdentifier": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "SignalMapIdentifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListInputDevicesResponse": {
            "type": "object",
            "properties": {
                "InputDevices": {
                    "$ref": "#/$defs/__listOfInputDeviceSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfInputDeviceSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputDeviceSummary"
            }
        },
        "InputDeviceSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ConnectionState": {
                    "$ref": "#/$defs/InputDeviceConnectionState"
                },
                "DeviceSettingsSyncState": {
                    "$ref": "#/$defs/DeviceSettingsSyncState"
                },
                "DeviceUpdateStatus": {
                    "$ref": "#/$defs/DeviceUpdateStatus"
                },
                "HdDeviceSettings": {
                    "$ref": "#/$defs/InputDeviceHdSettings"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MacAddress": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkSettings": {
                    "$ref": "#/$defs/InputDeviceNetworkSettings"
                },
                "SerialNumber": {
                    "$ref": "#/$defs/__string"
                },
                "Type": {
                    "$ref": "#/$defs/InputDeviceType"
                },
                "UhdDeviceSettings": {
                    "$ref": "#/$defs/InputDeviceUhdSettings"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/__string"
                },
                "MedialiveInputArns": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "OutputType": {
                    "$ref": "#/$defs/InputDeviceOutputType"
                }
            }
        },
        "ListInputDevicesRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListInputDeviceTransfersResponse": {
            "type": "object",
            "properties": {
                "InputDeviceTransfers": {
                    "$ref": "#/$defs/__listOfTransferringInputDeviceSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfTransferringInputDeviceSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransferringInputDeviceSummary"
            }
        },
        "TransferringInputDeviceSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Message": {
                    "$ref": "#/$defs/__string"
                },
                "TargetCustomerId": {
                    "$ref": "#/$defs/__string"
                },
                "TransferType": {
                    "$ref": "#/$defs/InputDeviceTransferType"
                }
            }
        },
        "InputDeviceTransferType": {
            "enum": [
                "OUTGOING",
                "INCOMING"
            ]
        },
        "ListInputDeviceTransfersRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "TransferType": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListInputsResponse": {
            "type": "object",
            "properties": {
                "Inputs": {
                    "$ref": "#/$defs/__listOfInput"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfInput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Input"
            }
        },
        "ListInputsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListInputSecurityGroupsResponse": {
            "type": "object",
            "properties": {
                "InputSecurityGroups": {
                    "$ref": "#/$defs/__listOfInputSecurityGroup"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfInputSecurityGroup": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputSecurityGroup"
            }
        },
        "ListInputSecurityGroupsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListMultiplexesResponse": {
            "type": "object",
            "properties": {
                "Multiplexes": {
                    "$ref": "#/$defs/__listOfMultiplexSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfMultiplexSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MultiplexSummary"
            }
        },
        "MultiplexSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MultiplexSettings": {
                    "$ref": "#/$defs/MultiplexSettingsSummary"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "ProgramCount": {
                    "$ref": "#/$defs/__integer"
                },
                "State": {
                    "$ref": "#/$defs/MultiplexState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "MultiplexSettingsSummary": {
            "type": "object",
            "properties": {
                "TransportStreamBitrate": {
                    "$ref": "#/$defs/__integerMin1000000Max100000000"
                }
            }
        },
        "ListMultiplexesRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListMultiplexProgramsResponse": {
            "type": "object",
            "properties": {
                "MultiplexPrograms": {
                    "$ref": "#/$defs/__listOfMultiplexProgramSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfMultiplexProgramSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MultiplexProgramSummary"
            }
        },
        "MultiplexProgramSummary": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "ProgramName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListMultiplexProgramsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "MultiplexId": {
                    "$ref": "#/$defs/__string"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListNetworksResponse": {
            "type": "object",
            "properties": {
                "Networks": {
                    "$ref": "#/$defs/__listOfDescribeNetworkSummary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfDescribeNetworkSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribeNetworkSummary"
            }
        },
        "DescribeNetworkSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AssociatedClusterIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IpPools": {
                    "$ref": "#/$defs/__listOfIpPool"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Routes": {
                    "$ref": "#/$defs/__listOfRoute"
                },
                "State": {
                    "$ref": "#/$defs/NetworkState"
                }
            }
        },
        "ListNetworksRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListNodesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Nodes": {
                    "$ref": "#/$defs/__listOfDescribeNodeSummary"
                }
            }
        },
        "__listOfDescribeNodeSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribeNodeSummary"
            }
        },
        "DescribeNodeSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelPlacementGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "ConnectionState": {
                    "$ref": "#/$defs/NodeConnectionState"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceArn": {
                    "$ref": "#/$defs/__string"
                },
                "ManagedInstanceId": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NodeInterfaceMappings": {
                    "$ref": "#/$defs/__listOfNodeInterfaceMapping"
                },
                "Role": {
                    "$ref": "#/$defs/NodeRole"
                },
                "State": {
                    "$ref": "#/$defs/NodeState"
                }
            }
        },
        "ListNodesRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListOfferingsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Offerings": {
                    "$ref": "#/$defs/__listOfOffering"
                }
            }
        },
        "__listOfOffering": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Offering"
            }
        },
        "Offering": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/__string"
                },
                "Duration": {
                    "$ref": "#/$defs/__integer"
                },
                "DurationUnits": {
                    "$ref": "#/$defs/OfferingDurationUnits"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/__double"
                },
                "OfferingDescription": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingId": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingType": {
                    "$ref": "#/$defs/OfferingType"
                },
                "Region": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceSpecification": {
                    "$ref": "#/$defs/ReservationResourceSpecification"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/__double"
                }
            }
        },
        "ListOfferingsRequest": {
            "type": "object",
            "properties": {
                "ChannelClass": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelConfiguration": {
                    "$ref": "#/$defs/__string"
                },
                "Codec": {
                    "$ref": "#/$defs/__string"
                },
                "Duration": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "MaximumBitrate": {
                    "$ref": "#/$defs/__string"
                },
                "MaximumFramerate": {
                    "$ref": "#/$defs/__string"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Resolution": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceType": {
                    "$ref": "#/$defs/__string"
                },
                "SpecialFeature": {
                    "$ref": "#/$defs/__string"
                },
                "VideoQuality": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListReservationsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Reservations": {
                    "$ref": "#/$defs/__listOfReservation"
                }
            }
        },
        "__listOfReservation": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Reservation"
            }
        },
        "Reservation": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Count": {
                    "$ref": "#/$defs/__integer"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/__string"
                },
                "Duration": {
                    "$ref": "#/$defs/__integer"
                },
                "DurationUnits": {
                    "$ref": "#/$defs/OfferingDurationUnits"
                },
                "End": {
                    "$ref": "#/$defs/__string"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/__double"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingDescription": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingId": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingType": {
                    "$ref": "#/$defs/OfferingType"
                },
                "Region": {
                    "$ref": "#/$defs/__string"
                },
                "RenewalSettings": {
                    "$ref": "#/$defs/RenewalSettings"
                },
                "ReservationId": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceSpecification": {
                    "$ref": "#/$defs/ReservationResourceSpecification"
                },
                "Start": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ReservationState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/__double"
                }
            }
        },
        "ListReservationsRequest": {
            "type": "object",
            "properties": {
                "ChannelClass": {
                    "$ref": "#/$defs/__string"
                },
                "Codec": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "MaximumBitrate": {
                    "$ref": "#/$defs/__string"
                },
                "MaximumFramerate": {
                    "$ref": "#/$defs/__string"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Resolution": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceType": {
                    "$ref": "#/$defs/__string"
                },
                "SpecialFeature": {
                    "$ref": "#/$defs/__string"
                },
                "VideoQuality": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListSignalMapsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "SignalMaps": {
                    "$ref": "#/$defs/__listOfSignalMapSummary"
                }
            }
        },
        "__listOfSignalMapSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SignalMapSummary"
            }
        },
        "SignalMapSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveSignalMap"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "MonitorDeploymentStatus": {
                    "$ref": "#/$defs/SignalMapMonitorDeploymentStatus"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Status": {
                    "$ref": "#/$defs/SignalMapStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListSignalMapsRequest": {
            "type": "object",
            "properties": {
                "CloudWatchAlarmTemplateGroupIdentifier": {
                    "$ref": "#/$defs/__string"
                },
                "EventBridgeRuleTemplateGroupIdentifier": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListVersionsResponse": {
            "type": "object",
            "properties": {
                "Versions": {
                    "$ref": "#/$defs/__listOfChannelEngineVersionResponse"
                }
            }
        },
        "ListVersionsRequest": {
            "type": "object",
            "properties": {}
        },
        "PurchaseOfferingResponse": {
            "type": "object",
            "properties": {
                "Reservation": {
                    "$ref": "#/$defs/Reservation"
                }
            }
        },
        "PurchaseOfferingRequest": {
            "type": "object",
            "properties": {
                "Count": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingId": {
                    "$ref": "#/$defs/__string"
                },
                "RenewalSettings": {
                    "$ref": "#/$defs/RenewalSettings"
                },
                "RequestId": {
                    "$ref": "#/$defs/__string"
                },
                "Start": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "RebootInputDeviceResponse": {
            "type": "object",
            "properties": {}
        },
        "RebootInputDeviceRequest": {
            "type": "object",
            "properties": {
                "Force": {
                    "$ref": "#/$defs/RebootInputDeviceForce"
                },
                "InputDeviceId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RebootInputDeviceForce": {
            "enum": [
                "NO",
                "YES"
            ]
        },
        "RejectInputDeviceTransferResponse": {
            "type": "object",
            "properties": {}
        },
        "RejectInputDeviceTransferRequest": {
            "type": "object",
            "properties": {
                "InputDeviceId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RestartChannelPipelinesResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CdiInputSpecification": {
                    "$ref": "#/$defs/CdiInputSpecification"
                },
                "ChannelClass": {
                    "$ref": "#/$defs/ChannelClass"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfOutputDestination"
                },
                "EgressEndpoints": {
                    "$ref": "#/$defs/__listOfChannelEgressEndpoint"
                },
                "EncoderSettings": {
                    "$ref": "#/$defs/EncoderSettings"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InputAttachments": {
                    "$ref": "#/$defs/__listOfInputAttachment"
                },
                "InputSpecification": {
                    "$ref": "#/$defs/InputSpecification"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "Maintenance": {
                    "$ref": "#/$defs/MaintenanceStatus"
                },
                "MaintenanceStatus": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelineDetails": {
                    "$ref": "#/$defs/__listOfPipelineDetail"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ChannelState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Vpc": {
                    "$ref": "#/$defs/VpcOutputSettingsDescription"
                },
                "AnywhereSettings": {
                    "$ref": "#/$defs/DescribeAnywhereSettings"
                },
                "ChannelEngineVersion": {
                    "$ref": "#/$defs/ChannelEngineVersionResponse"
                }
            }
        },
        "RestartChannelPipelinesRequest": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "PipelineIds": {
                    "$ref": "#/$defs/__listOfChannelPipelineIdToRestart"
                }
            }
        },
        "__listOfChannelPipelineIdToRestart": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChannelPipelineIdToRestart"
            }
        },
        "ChannelPipelineIdToRestart": {
            "enum": [
                "PIPELINE_0",
                "PIPELINE_1"
            ]
        },
        "StartChannelResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CdiInputSpecification": {
                    "$ref": "#/$defs/CdiInputSpecification"
                },
                "ChannelClass": {
                    "$ref": "#/$defs/ChannelClass"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfOutputDestination"
                },
                "EgressEndpoints": {
                    "$ref": "#/$defs/__listOfChannelEgressEndpoint"
                },
                "EncoderSettings": {
                    "$ref": "#/$defs/EncoderSettings"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InputAttachments": {
                    "$ref": "#/$defs/__listOfInputAttachment"
                },
                "InputSpecification": {
                    "$ref": "#/$defs/InputSpecification"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "Maintenance": {
                    "$ref": "#/$defs/MaintenanceStatus"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelineDetails": {
                    "$ref": "#/$defs/__listOfPipelineDetail"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ChannelState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Vpc": {
                    "$ref": "#/$defs/VpcOutputSettingsDescription"
                },
                "AnywhereSettings": {
                    "$ref": "#/$defs/DescribeAnywhereSettings"
                },
                "ChannelEngineVersion": {
                    "$ref": "#/$defs/ChannelEngineVersionResponse"
                }
            }
        },
        "StartChannelRequest": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StartDeleteMonitorDeploymentResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveSignalMap"
                },
                "CloudWatchAlarmTemplateGroupIds": {
                    "$ref": "#/$defs/__listOf__stringMin7Max11PatternAws097"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "DiscoveryEntryPointArn": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "EventBridgeRuleTemplateGroupIds": {
                    "$ref": "#/$defs/__listOf__stringMin7Max11PatternAws097"
                },
                "FailedMediaResourceMap": {
                    "$ref": "#/$defs/FailedMediaResourceMap"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "LastDiscoveredAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "LastSuccessfulMonitorDeployment": {
                    "$ref": "#/$defs/SuccessfulMonitorDeployment"
                },
                "MediaResourceMap": {
                    "$ref": "#/$defs/MediaResourceMap"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "MonitorChangesPendingDeployment": {
                    "$ref": "#/$defs/__boolean"
                },
                "MonitorDeployment": {
                    "$ref": "#/$defs/MonitorDeployment"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Status": {
                    "$ref": "#/$defs/SignalMapStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "StartDeleteMonitorDeploymentRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StartInputDeviceResponse": {
            "type": "object",
            "properties": {}
        },
        "StartInputDeviceRequest": {
            "type": "object",
            "properties": {
                "InputDeviceId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StartInputDeviceMaintenanceWindowResponse": {
            "type": "object",
            "properties": {}
        },
        "StartInputDeviceMaintenanceWindowRequest": {
            "type": "object",
            "properties": {
                "InputDeviceId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StartMonitorDeploymentResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveSignalMap"
                },
                "CloudWatchAlarmTemplateGroupIds": {
                    "$ref": "#/$defs/__listOf__stringMin7Max11PatternAws097"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "DiscoveryEntryPointArn": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "EventBridgeRuleTemplateGroupIds": {
                    "$ref": "#/$defs/__listOf__stringMin7Max11PatternAws097"
                },
                "FailedMediaResourceMap": {
                    "$ref": "#/$defs/FailedMediaResourceMap"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "LastDiscoveredAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "LastSuccessfulMonitorDeployment": {
                    "$ref": "#/$defs/SuccessfulMonitorDeployment"
                },
                "MediaResourceMap": {
                    "$ref": "#/$defs/MediaResourceMap"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "MonitorChangesPendingDeployment": {
                    "$ref": "#/$defs/__boolean"
                },
                "MonitorDeployment": {
                    "$ref": "#/$defs/MonitorDeployment"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Status": {
                    "$ref": "#/$defs/SignalMapStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "StartMonitorDeploymentRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/__boolean"
                },
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StartMultiplexResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfMultiplexOutputDestination"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MultiplexSettings": {
                    "$ref": "#/$defs/MultiplexSettings"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "ProgramCount": {
                    "$ref": "#/$defs/__integer"
                },
                "State": {
                    "$ref": "#/$defs/MultiplexState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "StartMultiplexRequest": {
            "type": "object",
            "properties": {
                "MultiplexId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StartUpdateSignalMapResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveSignalMap"
                },
                "CloudWatchAlarmTemplateGroupIds": {
                    "$ref": "#/$defs/__listOf__stringMin7Max11PatternAws097"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "DiscoveryEntryPointArn": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "EventBridgeRuleTemplateGroupIds": {
                    "$ref": "#/$defs/__listOf__stringMin7Max11PatternAws097"
                },
                "FailedMediaResourceMap": {
                    "$ref": "#/$defs/FailedMediaResourceMap"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "LastDiscoveredAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "LastSuccessfulMonitorDeployment": {
                    "$ref": "#/$defs/SuccessfulMonitorDeployment"
                },
                "MediaResourceMap": {
                    "$ref": "#/$defs/MediaResourceMap"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "MonitorChangesPendingDeployment": {
                    "$ref": "#/$defs/__boolean"
                },
                "MonitorDeployment": {
                    "$ref": "#/$defs/MonitorDeployment"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Status": {
                    "$ref": "#/$defs/SignalMapStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "StartUpdateSignalMapRequest": {
            "type": "object",
            "properties": {
                "CloudWatchAlarmTemplateGroupIdentifiers": {
                    "$ref": "#/$defs/__listOf__stringPatternS"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "DiscoveryEntryPointArn": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "EventBridgeRuleTemplateGroupIdentifiers": {
                    "$ref": "#/$defs/__listOf__stringPatternS"
                },
                "ForceRediscovery": {
                    "$ref": "#/$defs/__boolean"
                },
                "Identifier": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                }
            }
        },
        "StopChannelResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CdiInputSpecification": {
                    "$ref": "#/$defs/CdiInputSpecification"
                },
                "ChannelClass": {
                    "$ref": "#/$defs/ChannelClass"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfOutputDestination"
                },
                "EgressEndpoints": {
                    "$ref": "#/$defs/__listOfChannelEgressEndpoint"
                },
                "EncoderSettings": {
                    "$ref": "#/$defs/EncoderSettings"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InputAttachments": {
                    "$ref": "#/$defs/__listOfInputAttachment"
                },
                "InputSpecification": {
                    "$ref": "#/$defs/InputSpecification"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "Maintenance": {
                    "$ref": "#/$defs/MaintenanceStatus"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelineDetails": {
                    "$ref": "#/$defs/__listOfPipelineDetail"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ChannelState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Vpc": {
                    "$ref": "#/$defs/VpcOutputSettingsDescription"
                },
                "AnywhereSettings": {
                    "$ref": "#/$defs/DescribeAnywhereSettings"
                },
                "ChannelEngineVersion": {
                    "$ref": "#/$defs/ChannelEngineVersionResponse"
                }
            }
        },
        "StopChannelRequest": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StopInputDeviceResponse": {
            "type": "object",
            "properties": {}
        },
        "StopInputDeviceRequest": {
            "type": "object",
            "properties": {
                "InputDeviceId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StopMultiplexResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfMultiplexOutputDestination"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MultiplexSettings": {
                    "$ref": "#/$defs/MultiplexSettings"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PipelinesRunningCount": {
                    "$ref": "#/$defs/__integer"
                },
                "ProgramCount": {
                    "$ref": "#/$defs/__integer"
                },
                "State": {
                    "$ref": "#/$defs/MultiplexState"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "StopMultiplexRequest": {
            "type": "object",
            "properties": {
                "MultiplexId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "TransferInputDeviceResponse": {
            "type": "object",
            "properties": {}
        },
        "TransferInputDeviceRequest": {
            "type": "object",
            "properties": {
                "InputDeviceId": {
                    "$ref": "#/$defs/__string"
                },
                "TargetCustomerId": {
                    "$ref": "#/$defs/__string"
                },
                "TargetRegion": {
                    "$ref": "#/$defs/__string"
                },
                "TransferMessage": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateAccountConfigurationResponse": {
            "type": "object",
            "properties": {
                "AccountConfiguration": {
                    "$ref": "#/$defs/AccountConfiguration"
                }
            }
        },
        "UpdateAccountConfigurationRequest": {
            "type": "object",
            "properties": {
                "AccountConfiguration": {
                    "$ref": "#/$defs/AccountConfiguration"
                }
            }
        },
        "UpdateChannelResponse": {
            "type": "object",
            "properties": {
                "Channel": {
                    "$ref": "#/$defs/Channel"
                }
            }
        },
        "UpdateChannelRequest": {
            "type": "object",
            "properties": {
                "CdiInputSpecification": {
                    "$ref": "#/$defs/CdiInputSpecification"
                },
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfOutputDestination"
                },
                "EncoderSettings": {
                    "$ref": "#/$defs/EncoderSettings"
                },
                "InputAttachments": {
                    "$ref": "#/$defs/__listOfInputAttachment"
                },
                "InputSpecification": {
                    "$ref": "#/$defs/InputSpecification"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "Maintenance": {
                    "$ref": "#/$defs/MaintenanceUpdateSettings"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelEngineVersion": {
                    "$ref": "#/$defs/ChannelEngineVersionRequest"
                },
                "DryRun": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "MaintenanceUpdateSettings": {
            "type": "object",
            "properties": {
                "MaintenanceDay": {
                    "$ref": "#/$defs/MaintenanceDay"
                },
                "MaintenanceScheduledDate": {
                    "$ref": "#/$defs/__string"
                },
                "MaintenanceStartTime": {
                    "$ref": "#/$defs/__stringPattern010920300"
                }
            }
        },
        "UpdateChannelClassResponse": {
            "type": "object",
            "properties": {
                "Channel": {
                    "$ref": "#/$defs/Channel"
                }
            }
        },
        "UpdateChannelClassRequest": {
            "type": "object",
            "properties": {
                "ChannelClass": {
                    "$ref": "#/$defs/ChannelClass"
                },
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "Destinations": {
                    "$ref": "#/$defs/__listOfOutputDestination"
                }
            }
        },
        "UpdateChannelPlacementGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Channels": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Nodes": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "State": {
                    "$ref": "#/$defs/ChannelPlacementGroupState"
                }
            }
        },
        "UpdateChannelPlacementGroupRequest": {
            "type": "object",
            "properties": {
                "ChannelPlacementGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Nodes": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "UpdateCloudWatchAlarmTemplateResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveCloudwatchAlarmTemplate"
                },
                "ComparisonOperator": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateComparisonOperator"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "DatapointsToAlarm": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "EvaluationPeriods": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "GroupId": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "MetricName": {
                    "$ref": "#/$defs/__stringMax64"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Period": {
                    "$ref": "#/$defs/__integerMin10Max86400"
                },
                "Statistic": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateStatistic"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "TargetResourceType": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateTargetResourceType"
                },
                "Threshold": {
                    "$ref": "#/$defs/__double"
                },
                "TreatMissingData": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateTreatMissingData"
                }
            }
        },
        "UpdateCloudWatchAlarmTemplateRequest": {
            "type": "object",
            "properties": {
                "ComparisonOperator": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateComparisonOperator"
                },
                "DatapointsToAlarm": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "EvaluationPeriods": {
                    "$ref": "#/$defs/__integerMin1"
                },
                "GroupIdentifier": {
                    "$ref": "#/$defs/__stringPatternS"
                },
                "Identifier": {
                    "$ref": "#/$defs/__string"
                },
                "MetricName": {
                    "$ref": "#/$defs/__stringMax64"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Period": {
                    "$ref": "#/$defs/__integerMin10Max86400"
                },
                "Statistic": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateStatistic"
                },
                "TargetResourceType": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateTargetResourceType"
                },
                "Threshold": {
                    "$ref": "#/$defs/__double"
                },
                "TreatMissingData": {
                    "$ref": "#/$defs/CloudWatchAlarmTemplateTreatMissingData"
                }
            }
        },
        "UpdateCloudWatchAlarmTemplateGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveCloudwatchAlarmTemplateGroup"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UpdateCloudWatchAlarmTemplateGroupRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateClusterResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterType": {
                    "$ref": "#/$defs/ClusterType"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkSettings": {
                    "$ref": "#/$defs/ClusterNetworkSettings"
                },
                "State": {
                    "$ref": "#/$defs/ClusterState"
                }
            }
        },
        "UpdateClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkSettings": {
                    "$ref": "#/$defs/ClusterNetworkSettingsUpdateRequest"
                }
            }
        },
        "ClusterNetworkSettingsUpdateRequest": {
            "type": "object",
            "properties": {
                "DefaultRoute": {
                    "$ref": "#/$defs/__string"
                },
                "InterfaceMappings": {
                    "$ref": "#/$defs/__listOfInterfaceMappingUpdateRequest"
                }
            }
        },
        "__listOfInterfaceMappingUpdateRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InterfaceMappingUpdateRequest"
            }
        },
        "InterfaceMappingUpdateRequest": {
            "type": "object",
            "properties": {
                "LogicalInterfaceName": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateEventBridgeRuleTemplateResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveEventbridgeRuleTemplate"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "EventTargets": {
                    "$ref": "#/$defs/__listOfEventBridgeRuleTemplateTarget"
                },
                "EventType": {
                    "$ref": "#/$defs/EventBridgeRuleTemplateEventType"
                },
                "GroupId": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UpdateEventBridgeRuleTemplateRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "EventTargets": {
                    "$ref": "#/$defs/__listOfEventBridgeRuleTemplateTarget"
                },
                "EventType": {
                    "$ref": "#/$defs/EventBridgeRuleTemplateEventType"
                },
                "GroupIdentifier": {
                    "$ref": "#/$defs/__stringPatternS"
                },
                "Identifier": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                }
            }
        },
        "UpdateEventBridgeRuleTemplateGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__stringPatternArnMedialiveEventbridgeRuleTemplateGroup"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Id": {
                    "$ref": "#/$defs/__stringMin7Max11PatternAws097"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Name": {
                    "$ref": "#/$defs/__stringMin1Max255PatternS"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UpdateEventBridgeRuleTemplateGroupRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__stringMin0Max1024"
                },
                "Identifier": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateInputResponse": {
            "type": "object",
            "properties": {
                "Input": {
                    "$ref": "#/$defs/Input"
                }
            }
        },
        "UpdateInputRequest": {
            "type": "object",
            "properties": {
                "Destinations": {
                    "$ref": "#/$defs/__listOfInputDestinationRequest"
                },
                "InputDevices": {
                    "$ref": "#/$defs/__listOfInputDeviceRequest"
                },
                "InputId": {
                    "$ref": "#/$defs/__string"
                },
                "InputSecurityGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "MediaConnectFlows": {
                    "$ref": "#/$defs/__listOfMediaConnectFlowRequest"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfInputSourceRequest"
                },
                "SrtSettings": {
                    "$ref": "#/$defs/SrtSettingsRequest"
                },
                "MulticastSettings": {
                    "$ref": "#/$defs/MulticastSettingsUpdateRequest"
                }
            }
        },
        "__listOfInputDeviceRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputDeviceRequest"
            }
        },
        "InputDeviceRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MulticastSettingsUpdateRequest": {
            "type": "object",
            "properties": {
                "Sources": {
                    "$ref": "#/$defs/__listOfMulticastSourceUpdateRequest"
                }
            }
        },
        "__listOfMulticastSourceUpdateRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MulticastSourceUpdateRequest"
            }
        },
        "MulticastSourceUpdateRequest": {
            "type": "object",
            "properties": {
                "SourceIp": {
                    "$ref": "#/$defs/__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateInputDeviceResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ConnectionState": {
                    "$ref": "#/$defs/InputDeviceConnectionState"
                },
                "DeviceSettingsSyncState": {
                    "$ref": "#/$defs/DeviceSettingsSyncState"
                },
                "DeviceUpdateStatus": {
                    "$ref": "#/$defs/DeviceUpdateStatus"
                },
                "HdDeviceSettings": {
                    "$ref": "#/$defs/InputDeviceHdSettings"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MacAddress": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkSettings": {
                    "$ref": "#/$defs/InputDeviceNetworkSettings"
                },
                "SerialNumber": {
                    "$ref": "#/$defs/__string"
                },
                "Type": {
                    "$ref": "#/$defs/InputDeviceType"
                },
                "UhdDeviceSettings": {
                    "$ref": "#/$defs/InputDeviceUhdSettings"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/__string"
                },
                "MedialiveInputArns": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "OutputType": {
                    "$ref": "#/$defs/InputDeviceOutputType"
                }
            }
        },
        "UpdateInputDeviceRequest": {
            "type": "object",
            "properties": {
                "HdDeviceSettings": {
                    "$ref": "#/$defs/InputDeviceConfigurableSettings"
                },
                "InputDeviceId": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "UhdDeviceSettings": {
                    "$ref": "#/$defs/InputDeviceConfigurableSettings"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "InputDeviceConfigurableSettings": {
            "type": "object",
            "properties": {
                "ConfiguredInput": {
                    "$ref": "#/$defs/InputDeviceConfiguredInput"
                },
                "MaxBitrate": {
                    "$ref": "#/$defs/__integer"
                },
                "LatencyMs": {
                    "$ref": "#/$defs/__integer"
                },
                "Codec": {
                    "$ref": "#/$defs/InputDeviceCodec"
                },
                "MediaconnectSettings": {
                    "$ref": "#/$defs/InputDeviceMediaConnectConfigurableSettings"
                },
                "AudioChannelPairs": {
                    "$ref": "#/$defs/__listOfInputDeviceConfigurableAudioChannelPairConfig"
                }
            }
        },
        "InputDeviceMediaConnectConfigurableSettings": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "SecretArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfInputDeviceConfigurableAudioChannelPairConfig": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputDeviceConfigurableAudioChannelPairConfig"
            }
        },
        "InputDeviceConfigurableAudioChannelPairConfig": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__integer"
                },
                "Profile": {
                    "$ref": "#/$defs/InputDeviceConfigurableAudioChannelPairProfile"
                }
            }
        },
        "InputDeviceConfigurableAudioChannelPairProfile": {
            "enum": [
                "DISABLED",
                "VBR_AAC_HHE_16000",
                "VBR_AAC_HE_64000",
                "VBR_AAC_LC_128000",
                "CBR_AAC_HQ_192000",
                "CBR_AAC_HQ_256000",
                "CBR_AAC_HQ_384000",
                "CBR_AAC_HQ_512000"
            ]
        },
        "UpdateInputSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "SecurityGroup": {
                    "$ref": "#/$defs/InputSecurityGroup"
                }
            }
        },
        "UpdateInputSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "InputSecurityGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "WhitelistRules": {
                    "$ref": "#/$defs/__listOfInputWhitelistRuleCidr"
                }
            }
        },
        "UpdateMultiplexResponse": {
            "type": "object",
            "properties": {
                "Multiplex": {
                    "$ref": "#/$defs/Multiplex"
                }
            }
        },
        "UpdateMultiplexRequest": {
            "type": "object",
            "properties": {
                "MultiplexId": {
                    "$ref": "#/$defs/__string"
                },
                "MultiplexSettings": {
                    "$ref": "#/$defs/MultiplexSettings"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PacketIdentifiersMapping": {
                    "$ref": "#/$defs/MultiplexPacketIdentifiersMapping"
                }
            }
        },
        "MultiplexPacketIdentifiersMapping": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MultiplexProgramPacketIdentifiersMap"
            }
        },
        "UpdateMultiplexProgramResponse": {
            "type": "object",
            "properties": {
                "MultiplexProgram": {
                    "$ref": "#/$defs/MultiplexProgram"
                }
            }
        },
        "UpdateMultiplexProgramRequest": {
            "type": "object",
            "properties": {
                "MultiplexId": {
                    "$ref": "#/$defs/__string"
                },
                "MultiplexProgramSettings": {
                    "$ref": "#/$defs/MultiplexProgramSettings"
                },
                "ProgramName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateNetworkResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "AssociatedClusterIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IpPools": {
                    "$ref": "#/$defs/__listOfIpPool"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Routes": {
                    "$ref": "#/$defs/__listOfRoute"
                },
                "State": {
                    "$ref": "#/$defs/NetworkState"
                }
            }
        },
        "UpdateNetworkRequest": {
            "type": "object",
            "properties": {
                "IpPools": {
                    "$ref": "#/$defs/__listOfIpPoolUpdateRequest"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkId": {
                    "$ref": "#/$defs/__string"
                },
                "Routes": {
                    "$ref": "#/$defs/__listOfRouteUpdateRequest"
                }
            }
        },
        "__listOfIpPoolUpdateRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpPoolUpdateRequest"
            }
        },
        "IpPoolUpdateRequest": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfRouteUpdateRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RouteUpdateRequest"
            }
        },
        "RouteUpdateRequest": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/__string"
                },
                "Gateway": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateNodeResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelPlacementGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "ConnectionState": {
                    "$ref": "#/$defs/NodeConnectionState"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NodeInterfaceMappings": {
                    "$ref": "#/$defs/__listOfNodeInterfaceMapping"
                },
                "Role": {
                    "$ref": "#/$defs/NodeRole"
                },
                "State": {
                    "$ref": "#/$defs/NodeState"
                }
            }
        },
        "UpdateNodeRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NodeId": {
                    "$ref": "#/$defs/__string"
                },
                "Role": {
                    "$ref": "#/$defs/NodeRole"
                }
            }
        },
        "UpdateNodeStateResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelPlacementGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "ConnectionState": {
                    "$ref": "#/$defs/NodeConnectionState"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NodeInterfaceMappings": {
                    "$ref": "#/$defs/__listOfNodeInterfaceMapping"
                },
                "Role": {
                    "$ref": "#/$defs/NodeRole"
                },
                "State": {
                    "$ref": "#/$defs/NodeState"
                }
            }
        },
        "UpdateNodeStateRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/__string"
                },
                "NodeId": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/UpdateNodeStateShape"
                }
            }
        },
        "UpdateNodeStateShape": {
            "enum": [
                "ACTIVE",
                "DRAINING"
            ]
        },
        "UpdateReservationResponse": {
            "type": "object",
            "properties": {
                "Reservation": {
                    "$ref": "#/$defs/Reservation"
                }
            }
        },
        "UpdateReservationRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "RenewalSettings": {
                    "$ref": "#/$defs/RenewalSettings"
                },
                "ReservationId": {
                    "$ref": "#/$defs/__string"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://medialive-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://medialive-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://medialive.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://medialive.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}