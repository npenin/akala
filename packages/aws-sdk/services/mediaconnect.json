{
    "name": "mediaconnect",
    "commands": [
        {
            "name": "AddBridgeOutputs",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BridgeArn": "route.BridgeArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/bridges/{BridgeArn}/outputs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddBridgeOutputsResponse"
                    },
                    "inject": [
                        "param.0.BridgeArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddBridgeOutputsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddBridgeSources",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BridgeArn": "route.BridgeArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/bridges/{BridgeArn}/sources"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddBridgeSourcesResponse"
                    },
                    "inject": [
                        "param.0.BridgeArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddBridgeSourcesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddFlowMediaStreams",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/flows/{FlowArn}/mediaStreams"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddFlowMediaStreamsResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddFlowMediaStreamsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddFlowOutputs",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/flows/{FlowArn}/outputs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddFlowOutputsResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddFlowOutputsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddFlowSources",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/flows/{FlowArn}/source"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddFlowSourcesResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddFlowSourcesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddFlowVpcInterfaces",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/flows/{FlowArn}/vpcInterfaces"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddFlowVpcInterfacesResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddFlowVpcInterfacesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateBridge",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/bridges"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBridgeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBridgeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFlow",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/flows"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFlowResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFlowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateGateway",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/gateways"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateGatewayResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteBridge",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BridgeArn": "route.BridgeArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/bridges/{BridgeArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBridgeResponse"
                    },
                    "inject": [
                        "param.0.BridgeArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBridgeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFlow",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/flows/{FlowArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFlowResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFlowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteGateway",
            "config": {
                "http": {
                    "inject": [
                        {
                            "GatewayArn": "route.GatewayArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/gateways/{GatewayArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteGatewayResponse"
                    },
                    "inject": [
                        "param.0.GatewayArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterGatewayInstance",
            "config": {
                "http": {
                    "inject": [
                        {
                            "GatewayInstanceArn": "route.GatewayInstanceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/gateway-instances/{GatewayInstanceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterGatewayInstanceResponse"
                    },
                    "inject": [
                        "param.0.GatewayInstanceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeregisterGatewayInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeBridge",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BridgeArn": "route.BridgeArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/bridges/{BridgeArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeBridgeResponse"
                    },
                    "inject": [
                        "param.0.BridgeArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeBridgeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFlow",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/flows/{FlowArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFlowResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFlowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFlowSourceMetadata",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/flows/{FlowArn}/source-metadata"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFlowSourceMetadataResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFlowSourceMetadataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFlowSourceThumbnail",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/flows/{FlowArn}/source-thumbnail"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFlowSourceThumbnailResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFlowSourceThumbnailRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeGateway",
            "config": {
                "http": {
                    "inject": [
                        {
                            "GatewayArn": "route.GatewayArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/gateways/{GatewayArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeGatewayResponse"
                    },
                    "inject": [
                        "param.0.GatewayArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeGatewayInstance",
            "config": {
                "http": {
                    "inject": [
                        {
                            "GatewayInstanceArn": "route.GatewayInstanceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/gateway-instances/{GatewayInstanceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeGatewayInstanceResponse"
                    },
                    "inject": [
                        "param.0.GatewayInstanceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeGatewayInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeOffering",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OfferingArn": "route.OfferingArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/offerings/{OfferingArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeOfferingResponse"
                    },
                    "inject": [
                        "param.0.OfferingArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeOfferingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReservation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReservationArn": "route.ReservationArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/reservations/{ReservationArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReservationResponse"
                    },
                    "inject": [
                        "param.0.ReservationArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReservationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GrantFlowEntitlements",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/flows/{FlowArn}/entitlements"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GrantFlowEntitlementsResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GrantFlowEntitlementsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListBridges",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/bridges"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBridgesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBridgesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListEntitlements",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/entitlements"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEntitlementsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEntitlementsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFlows",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/flows"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFlowsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFlowsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListGatewayInstances",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/gateway-instances"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListGatewayInstancesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListGatewayInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListGateways",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/gateways"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListGatewaysResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListGatewaysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListOfferings",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/offerings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOfferingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOfferingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListReservations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/reservations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListReservationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListReservationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PurchaseOffering",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OfferingArn": "route.OfferingArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/offerings/{OfferingArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PurchaseOfferingResponse"
                    },
                    "inject": [
                        "param.0.OfferingArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PurchaseOfferingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveBridgeOutput",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BridgeArn": "route.BridgeArn",
                            "OutputName": "route.OutputName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/bridges/{BridgeArn}/outputs/{OutputName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveBridgeOutputResponse"
                    },
                    "inject": [
                        "param.0.BridgeArn",
                        "param.0.OutputName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveBridgeOutputRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveBridgeSource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BridgeArn": "route.BridgeArn",
                            "SourceName": "route.SourceName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/bridges/{BridgeArn}/sources/{SourceName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveBridgeSourceResponse"
                    },
                    "inject": [
                        "param.0.BridgeArn",
                        "param.0.SourceName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveBridgeSourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveFlowMediaStream",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "MediaStreamName": "route.MediaStreamName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/flows/{FlowArn}/mediaStreams/{MediaStreamName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveFlowMediaStreamResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0.MediaStreamName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveFlowMediaStreamRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveFlowOutput",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "OutputArn": "route.OutputArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/flows/{FlowArn}/outputs/{OutputArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveFlowOutputResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0.OutputArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveFlowOutputRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveFlowSource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "SourceArn": "route.SourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/flows/{FlowArn}/source/{SourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveFlowSourceResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0.SourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveFlowSourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveFlowVpcInterface",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "VpcInterfaceName": "route.VpcInterfaceName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/flows/{FlowArn}/vpcInterfaces/{VpcInterfaceName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveFlowVpcInterfaceResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0.VpcInterfaceName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveFlowVpcInterfaceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RevokeFlowEntitlement",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "EntitlementArn": "route.EntitlementArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/flows/{FlowArn}/entitlements/{EntitlementArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RevokeFlowEntitlementResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0.EntitlementArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RevokeFlowEntitlementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartFlow",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/flows/start/{FlowArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartFlowResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartFlowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopFlow",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/flows/stop/{FlowArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopFlowResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopFlowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateBridge",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BridgeArn": "route.BridgeArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/bridges/{BridgeArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBridgeResponse"
                    },
                    "inject": [
                        "param.0.BridgeArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBridgeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateBridgeOutput",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BridgeArn": "route.BridgeArn",
                            "OutputName": "route.OutputName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/bridges/{BridgeArn}/outputs/{OutputName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBridgeOutputResponse"
                    },
                    "inject": [
                        "param.0.BridgeArn",
                        "param.0.OutputName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBridgeOutputRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateBridgeSource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BridgeArn": "route.BridgeArn",
                            "SourceName": "route.SourceName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/bridges/{BridgeArn}/sources/{SourceName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBridgeSourceResponse"
                    },
                    "inject": [
                        "param.0.BridgeArn",
                        "param.0.SourceName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBridgeSourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateBridgeState",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BridgeArn": "route.BridgeArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/bridges/{BridgeArn}/state"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBridgeStateResponse"
                    },
                    "inject": [
                        "param.0.BridgeArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBridgeStateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFlow",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/flows/{FlowArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFlowResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFlowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFlowEntitlement",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "EntitlementArn": "route.EntitlementArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/flows/{FlowArn}/entitlements/{EntitlementArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFlowEntitlementResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0.EntitlementArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFlowEntitlementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFlowMediaStream",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "MediaStreamName": "route.MediaStreamName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/flows/{FlowArn}/mediaStreams/{MediaStreamName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFlowMediaStreamResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0.MediaStreamName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFlowMediaStreamRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFlowOutput",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "OutputArn": "route.OutputArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/flows/{FlowArn}/outputs/{OutputArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFlowOutputResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0.OutputArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFlowOutputRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFlowSource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FlowArn": "route.FlowArn",
                            "SourceArn": "route.SourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/flows/{FlowArn}/source/{SourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFlowSourceResponse"
                    },
                    "inject": [
                        "param.0.FlowArn",
                        "param.0.SourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFlowSourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateGatewayInstance",
            "config": {
                "http": {
                    "inject": [
                        {
                            "GatewayInstanceArn": "route.GatewayInstanceArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/gateway-instances/{GatewayInstanceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateGatewayInstanceResponse"
                    },
                    "inject": [
                        "param.0.GatewayInstanceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateGatewayInstanceRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AddBridgeOutputsResponse": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "Outputs": {
                    "$ref": "#/$defs/__listOfBridgeOutput"
                }
            }
        },
        "__string": {
            "type": "string"
        },
        "__listOfBridgeOutput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BridgeOutput"
            }
        },
        "BridgeOutput": {
            "type": "object",
            "properties": {
                "FlowOutput": {
                    "$ref": "#/$defs/BridgeFlowOutput"
                },
                "NetworkOutput": {
                    "$ref": "#/$defs/BridgeNetworkOutput"
                }
            }
        },
        "BridgeFlowOutput": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "FlowSourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "BridgeNetworkOutput": {
            "type": "object",
            "properties": {
                "IpAddress": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkName": {
                    "$ref": "#/$defs/__string"
                },
                "Port": {
                    "$ref": "#/$defs/__integer"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                },
                "Ttl": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "__integer": {
            "type": "integer",
            "format": "int32"
        },
        "Protocol": {
            "enum": [
                "zixi_push",
                "rtp_fec",
                "rtp",
                "zixi_pull",
                "rist",
                "st2110_jpegxs",
                "cdi",
                "srt_listener",
                "srt_caller",
                "fujitsu_qos",
                "udp"
            ]
        },
        "AddBridgeOutputsRequest": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "Outputs": {
                    "$ref": "#/$defs/__listOfAddBridgeOutputRequest"
                }
            }
        },
        "__listOfAddBridgeOutputRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AddBridgeOutputRequest"
            }
        },
        "AddBridgeOutputRequest": {
            "type": "object",
            "properties": {
                "NetworkOutput": {
                    "$ref": "#/$defs/AddBridgeNetworkOutputRequest"
                }
            }
        },
        "AddBridgeNetworkOutputRequest": {
            "type": "object",
            "properties": {
                "IpAddress": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkName": {
                    "$ref": "#/$defs/__string"
                },
                "Port": {
                    "$ref": "#/$defs/__integer"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                },
                "Ttl": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "AddBridgeSourcesResponse": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfBridgeSource"
                }
            }
        },
        "__listOfBridgeSource": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BridgeSource"
            }
        },
        "BridgeSource": {
            "type": "object",
            "properties": {
                "FlowSource": {
                    "$ref": "#/$defs/BridgeFlowSource"
                },
                "NetworkSource": {
                    "$ref": "#/$defs/BridgeNetworkSource"
                }
            }
        },
        "BridgeFlowSource": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "FlowVpcInterfaceAttachment": {
                    "$ref": "#/$defs/VpcInterfaceAttachment"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "OutputArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "VpcInterfaceAttachment": {
            "type": "object",
            "properties": {
                "VpcInterfaceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "BridgeNetworkSource": {
            "type": "object",
            "properties": {
                "MulticastIp": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkName": {
                    "$ref": "#/$defs/__string"
                },
                "Port": {
                    "$ref": "#/$defs/__integer"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                }
            }
        },
        "AddBridgeSourcesRequest": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfAddBridgeSourceRequest"
                }
            }
        },
        "__listOfAddBridgeSourceRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AddBridgeSourceRequest"
            }
        },
        "AddBridgeSourceRequest": {
            "type": "object",
            "properties": {
                "FlowSource": {
                    "$ref": "#/$defs/AddBridgeFlowSourceRequest"
                },
                "NetworkSource": {
                    "$ref": "#/$defs/AddBridgeNetworkSourceRequest"
                }
            }
        },
        "AddBridgeFlowSourceRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "FlowVpcInterfaceAttachment": {
                    "$ref": "#/$defs/VpcInterfaceAttachment"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "AddBridgeNetworkSourceRequest": {
            "type": "object",
            "properties": {
                "MulticastIp": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkName": {
                    "$ref": "#/$defs/__string"
                },
                "Port": {
                    "$ref": "#/$defs/__integer"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                }
            }
        },
        "AddFlowMediaStreamsResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "MediaStreams": {
                    "$ref": "#/$defs/__listOfMediaStream"
                }
            }
        },
        "__listOfMediaStream": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaStream"
            }
        },
        "MediaStream": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/MediaStreamAttributes"
                },
                "ClockRate": {
                    "$ref": "#/$defs/__integer"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "Fmt": {
                    "$ref": "#/$defs/__integer"
                },
                "MediaStreamId": {
                    "$ref": "#/$defs/__integer"
                },
                "MediaStreamName": {
                    "$ref": "#/$defs/__string"
                },
                "MediaStreamType": {
                    "$ref": "#/$defs/MediaStreamType"
                },
                "VideoFormat": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MediaStreamAttributes": {
            "type": "object",
            "properties": {
                "Fmtp": {
                    "$ref": "#/$defs/Fmtp"
                },
                "Lang": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "Fmtp": {
            "type": "object",
            "properties": {
                "ChannelOrder": {
                    "$ref": "#/$defs/__string"
                },
                "Colorimetry": {
                    "$ref": "#/$defs/Colorimetry"
                },
                "ExactFramerate": {
                    "$ref": "#/$defs/__string"
                },
                "Par": {
                    "$ref": "#/$defs/__string"
                },
                "Range": {
                    "$ref": "#/$defs/Range"
                },
                "ScanMode": {
                    "$ref": "#/$defs/ScanMode"
                },
                "Tcs": {
                    "$ref": "#/$defs/Tcs"
                }
            }
        },
        "Colorimetry": {
            "enum": [
                "BT601",
                "BT709",
                "BT2020",
                "BT2100",
                "ST2065_1",
                "ST2065_3",
                "XYZ"
            ]
        },
        "Range": {
            "enum": [
                "NARROW",
                "FULL",
                "FULLPROTECT"
            ]
        },
        "ScanMode": {
            "enum": [
                "progressive",
                "interlace",
                "progressive_segmented_frame"
            ]
        },
        "Tcs": {
            "enum": [
                "SDR",
                "PQ",
                "HLG",
                "LINEAR",
                "BT2100LINPQ",
                "BT2100LINHLG",
                "ST2065_1",
                "ST428_1",
                "DENSITY"
            ]
        },
        "MediaStreamType": {
            "enum": [
                "video",
                "audio",
                "ancillary_data"
            ]
        },
        "AddFlowMediaStreamsRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "MediaStreams": {
                    "$ref": "#/$defs/__listOfAddMediaStreamRequest"
                }
            }
        },
        "__listOfAddMediaStreamRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AddMediaStreamRequest"
            }
        },
        "AddMediaStreamRequest": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/MediaStreamAttributesRequest"
                },
                "ClockRate": {
                    "$ref": "#/$defs/__integer"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "MediaStreamId": {
                    "$ref": "#/$defs/__integer"
                },
                "MediaStreamName": {
                    "$ref": "#/$defs/__string"
                },
                "MediaStreamType": {
                    "$ref": "#/$defs/MediaStreamType"
                },
                "VideoFormat": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MediaStreamAttributesRequest": {
            "type": "object",
            "properties": {
                "Fmtp": {
                    "$ref": "#/$defs/FmtpRequest"
                },
                "Lang": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "FmtpRequest": {
            "type": "object",
            "properties": {
                "ChannelOrder": {
                    "$ref": "#/$defs/__string"
                },
                "Colorimetry": {
                    "$ref": "#/$defs/Colorimetry"
                },
                "ExactFramerate": {
                    "$ref": "#/$defs/__string"
                },
                "Par": {
                    "$ref": "#/$defs/__string"
                },
                "Range": {
                    "$ref": "#/$defs/Range"
                },
                "ScanMode": {
                    "$ref": "#/$defs/ScanMode"
                },
                "Tcs": {
                    "$ref": "#/$defs/Tcs"
                }
            }
        },
        "AddFlowOutputsResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Outputs": {
                    "$ref": "#/$defs/__listOfOutput"
                }
            }
        },
        "__listOfOutput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Output"
            }
        },
        "Output": {
            "type": "object",
            "properties": {
                "DataTransferSubscriberFeePercent": {
                    "$ref": "#/$defs/__integer"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "Destination": {
                    "$ref": "#/$defs/__string"
                },
                "Encryption": {
                    "$ref": "#/$defs/Encryption"
                },
                "EntitlementArn": {
                    "$ref": "#/$defs/__string"
                },
                "ListenerAddress": {
                    "$ref": "#/$defs/__string"
                },
                "MediaLiveInputArn": {
                    "$ref": "#/$defs/__string"
                },
                "MediaStreamOutputConfigurations": {
                    "$ref": "#/$defs/__listOfMediaStreamOutputConfiguration"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "OutputArn": {
                    "$ref": "#/$defs/__string"
                },
                "Port": {
                    "$ref": "#/$defs/__integer"
                },
                "Transport": {
                    "$ref": "#/$defs/Transport"
                },
                "VpcInterfaceAttachment": {
                    "$ref": "#/$defs/VpcInterfaceAttachment"
                },
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "BridgePorts": {
                    "$ref": "#/$defs/__listOf__integer"
                },
                "OutputStatus": {
                    "$ref": "#/$defs/OutputStatus"
                }
            }
        },
        "Encryption": {
            "type": "object",
            "properties": {
                "Algorithm": {
                    "$ref": "#/$defs/Algorithm"
                },
                "ConstantInitializationVector": {
                    "$ref": "#/$defs/__string"
                },
                "DeviceId": {
                    "$ref": "#/$defs/__string"
                },
                "KeyType": {
                    "$ref": "#/$defs/KeyType"
                },
                "Region": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceId": {
                    "$ref": "#/$defs/__string"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "SecretArn": {
                    "$ref": "#/$defs/__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "Algorithm": {
            "enum": [
                "aes128",
                "aes192",
                "aes256"
            ]
        },
        "KeyType": {
            "enum": [
                "speke",
                "static_key",
                "srt_password"
            ]
        },
        "__listOfMediaStreamOutputConfiguration": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaStreamOutputConfiguration"
            }
        },
        "MediaStreamOutputConfiguration": {
            "type": "object",
            "properties": {
                "DestinationConfigurations": {
                    "$ref": "#/$defs/__listOfDestinationConfiguration"
                },
                "EncodingName": {
                    "$ref": "#/$defs/EncodingName"
                },
                "EncodingParameters": {
                    "$ref": "#/$defs/EncodingParameters"
                },
                "MediaStreamName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfDestinationConfiguration": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DestinationConfiguration"
            }
        },
        "DestinationConfiguration": {
            "type": "object",
            "properties": {
                "DestinationIp": {
                    "$ref": "#/$defs/__string"
                },
                "DestinationPort": {
                    "$ref": "#/$defs/__integer"
                },
                "Interface": {
                    "$ref": "#/$defs/Interface"
                },
                "OutboundIp": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "Interface": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "EncodingName": {
            "enum": [
                "jxsv",
                "raw",
                "smpte291",
                "pcm"
            ]
        },
        "EncodingParameters": {
            "type": "object",
            "properties": {
                "CompressionFactor": {
                    "$ref": "#/$defs/__double"
                },
                "EncoderProfile": {
                    "$ref": "#/$defs/EncoderProfile"
                }
            }
        },
        "__double": {
            "type": "number",
            "format": "double"
        },
        "EncoderProfile": {
            "enum": [
                "main",
                "high"
            ]
        },
        "Transport": {
            "type": "object",
            "properties": {
                "CidrAllowList": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "MaxBitrate": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxSyncBuffer": {
                    "$ref": "#/$defs/__integer"
                },
                "MinLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                },
                "RemoteId": {
                    "$ref": "#/$defs/__string"
                },
                "SenderControlPort": {
                    "$ref": "#/$defs/__integer"
                },
                "SenderIpAddress": {
                    "$ref": "#/$defs/__string"
                },
                "SmoothingLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "SourceListenerAddress": {
                    "$ref": "#/$defs/__string"
                },
                "SourceListenerPort": {
                    "$ref": "#/$defs/__integer"
                },
                "StreamId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOf__string": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__string"
            }
        },
        "__listOf__integer": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__integer"
            }
        },
        "OutputStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "AddFlowOutputsRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Outputs": {
                    "$ref": "#/$defs/__listOfAddOutputRequest"
                }
            }
        },
        "__listOfAddOutputRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AddOutputRequest"
            }
        },
        "AddOutputRequest": {
            "type": "object",
            "properties": {
                "CidrAllowList": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "Destination": {
                    "$ref": "#/$defs/__string"
                },
                "Encryption": {
                    "$ref": "#/$defs/Encryption"
                },
                "MaxLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "MediaStreamOutputConfigurations": {
                    "$ref": "#/$defs/__listOfMediaStreamOutputConfigurationRequest"
                },
                "MinLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Port": {
                    "$ref": "#/$defs/__integer"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                },
                "RemoteId": {
                    "$ref": "#/$defs/__string"
                },
                "SenderControlPort": {
                    "$ref": "#/$defs/__integer"
                },
                "SmoothingLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "StreamId": {
                    "$ref": "#/$defs/__string"
                },
                "VpcInterfaceAttachment": {
                    "$ref": "#/$defs/VpcInterfaceAttachment"
                },
                "OutputStatus": {
                    "$ref": "#/$defs/OutputStatus"
                }
            }
        },
        "__listOfMediaStreamOutputConfigurationRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaStreamOutputConfigurationRequest"
            }
        },
        "MediaStreamOutputConfigurationRequest": {
            "type": "object",
            "properties": {
                "DestinationConfigurations": {
                    "$ref": "#/$defs/__listOfDestinationConfigurationRequest"
                },
                "EncodingName": {
                    "$ref": "#/$defs/EncodingName"
                },
                "EncodingParameters": {
                    "$ref": "#/$defs/EncodingParametersRequest"
                },
                "MediaStreamName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfDestinationConfigurationRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DestinationConfigurationRequest"
            }
        },
        "DestinationConfigurationRequest": {
            "type": "object",
            "properties": {
                "DestinationIp": {
                    "$ref": "#/$defs/__string"
                },
                "DestinationPort": {
                    "$ref": "#/$defs/__integer"
                },
                "Interface": {
                    "$ref": "#/$defs/InterfaceRequest"
                }
            }
        },
        "InterfaceRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "EncodingParametersRequest": {
            "type": "object",
            "properties": {
                "CompressionFactor": {
                    "$ref": "#/$defs/__double"
                },
                "EncoderProfile": {
                    "$ref": "#/$defs/EncoderProfile"
                }
            }
        },
        "AddFlowSourcesResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfSource"
                }
            }
        },
        "__listOfSource": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Source"
            }
        },
        "Source": {
            "type": "object",
            "properties": {
                "DataTransferSubscriberFeePercent": {
                    "$ref": "#/$defs/__integer"
                },
                "Decryption": {
                    "$ref": "#/$defs/Encryption"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "EntitlementArn": {
                    "$ref": "#/$defs/__string"
                },
                "IngestIp": {
                    "$ref": "#/$defs/__string"
                },
                "IngestPort": {
                    "$ref": "#/$defs/__integer"
                },
                "MediaStreamSourceConfigurations": {
                    "$ref": "#/$defs/__listOfMediaStreamSourceConfiguration"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "SenderControlPort": {
                    "$ref": "#/$defs/__integer"
                },
                "SenderIpAddress": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Transport": {
                    "$ref": "#/$defs/Transport"
                },
                "VpcInterfaceName": {
                    "$ref": "#/$defs/__string"
                },
                "WhitelistCidr": {
                    "$ref": "#/$defs/__string"
                },
                "GatewayBridgeSource": {
                    "$ref": "#/$defs/GatewayBridgeSource"
                }
            }
        },
        "__listOfMediaStreamSourceConfiguration": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaStreamSourceConfiguration"
            }
        },
        "MediaStreamSourceConfiguration": {
            "type": "object",
            "properties": {
                "EncodingName": {
                    "$ref": "#/$defs/EncodingName"
                },
                "InputConfigurations": {
                    "$ref": "#/$defs/__listOfInputConfiguration"
                },
                "MediaStreamName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfInputConfiguration": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputConfiguration"
            }
        },
        "InputConfiguration": {
            "type": "object",
            "properties": {
                "InputIp": {
                    "$ref": "#/$defs/__string"
                },
                "InputPort": {
                    "$ref": "#/$defs/__integer"
                },
                "Interface": {
                    "$ref": "#/$defs/Interface"
                }
            }
        },
        "GatewayBridgeSource": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "VpcInterfaceAttachment": {
                    "$ref": "#/$defs/VpcInterfaceAttachment"
                }
            }
        },
        "AddFlowSourcesRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfSetSourceRequest"
                }
            }
        },
        "__listOfSetSourceRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SetSourceRequest"
            }
        },
        "SetSourceRequest": {
            "type": "object",
            "properties": {
                "Decryption": {
                    "$ref": "#/$defs/Encryption"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "EntitlementArn": {
                    "$ref": "#/$defs/__string"
                },
                "IngestPort": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxBitrate": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxSyncBuffer": {
                    "$ref": "#/$defs/__integer"
                },
                "MediaStreamSourceConfigurations": {
                    "$ref": "#/$defs/__listOfMediaStreamSourceConfigurationRequest"
                },
                "MinLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                },
                "SenderControlPort": {
                    "$ref": "#/$defs/__integer"
                },
                "SenderIpAddress": {
                    "$ref": "#/$defs/__string"
                },
                "SourceListenerAddress": {
                    "$ref": "#/$defs/__string"
                },
                "SourceListenerPort": {
                    "$ref": "#/$defs/__integer"
                },
                "StreamId": {
                    "$ref": "#/$defs/__string"
                },
                "VpcInterfaceName": {
                    "$ref": "#/$defs/__string"
                },
                "WhitelistCidr": {
                    "$ref": "#/$defs/__string"
                },
                "GatewayBridgeSource": {
                    "$ref": "#/$defs/SetGatewayBridgeSourceRequest"
                }
            }
        },
        "__listOfMediaStreamSourceConfigurationRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaStreamSourceConfigurationRequest"
            }
        },
        "MediaStreamSourceConfigurationRequest": {
            "type": "object",
            "properties": {
                "EncodingName": {
                    "$ref": "#/$defs/EncodingName"
                },
                "InputConfigurations": {
                    "$ref": "#/$defs/__listOfInputConfigurationRequest"
                },
                "MediaStreamName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfInputConfigurationRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputConfigurationRequest"
            }
        },
        "InputConfigurationRequest": {
            "type": "object",
            "properties": {
                "InputPort": {
                    "$ref": "#/$defs/__integer"
                },
                "Interface": {
                    "$ref": "#/$defs/InterfaceRequest"
                }
            }
        },
        "SetGatewayBridgeSourceRequest": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "VpcInterfaceAttachment": {
                    "$ref": "#/$defs/VpcInterfaceAttachment"
                }
            }
        },
        "AddFlowVpcInterfacesResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "VpcInterfaces": {
                    "$ref": "#/$defs/__listOfVpcInterface"
                }
            }
        },
        "__listOfVpcInterface": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcInterface"
            }
        },
        "VpcInterface": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkInterfaceIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "NetworkInterfaceType": {
                    "$ref": "#/$defs/NetworkInterfaceType"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "SubnetId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "NetworkInterfaceType": {
            "enum": [
                "ena",
                "efa"
            ]
        },
        "AddFlowVpcInterfacesRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "VpcInterfaces": {
                    "$ref": "#/$defs/__listOfVpcInterfaceRequest"
                }
            }
        },
        "__listOfVpcInterfaceRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcInterfaceRequest"
            }
        },
        "VpcInterfaceRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkInterfaceType": {
                    "$ref": "#/$defs/NetworkInterfaceType"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "SubnetId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateBridgeResponse": {
            "type": "object",
            "properties": {
                "Bridge": {
                    "$ref": "#/$defs/Bridge"
                }
            }
        },
        "Bridge": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "BridgeMessages": {
                    "$ref": "#/$defs/__listOfMessageDetail"
                },
                "BridgeState": {
                    "$ref": "#/$defs/BridgeState"
                },
                "EgressGatewayBridge": {
                    "$ref": "#/$defs/EgressGatewayBridge"
                },
                "IngressGatewayBridge": {
                    "$ref": "#/$defs/IngressGatewayBridge"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Outputs": {
                    "$ref": "#/$defs/__listOfBridgeOutput"
                },
                "PlacementArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceFailoverConfig": {
                    "$ref": "#/$defs/FailoverConfig"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfBridgeSource"
                }
            }
        },
        "__listOfMessageDetail": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MessageDetail"
            }
        },
        "MessageDetail": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/__string"
                },
                "Message": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "BridgeState": {
            "enum": [
                "CREATING",
                "STANDBY",
                "STARTING",
                "DEPLOYING",
                "ACTIVE",
                "STOPPING",
                "DELETING",
                "DELETED",
                "START_FAILED",
                "START_PENDING",
                "STOP_FAILED",
                "UPDATING"
            ]
        },
        "EgressGatewayBridge": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/__string"
                },
                "MaxBitrate": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "IngressGatewayBridge": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/__string"
                },
                "MaxBitrate": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxOutputs": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "FailoverConfig": {
            "type": "object",
            "properties": {
                "FailoverMode": {
                    "$ref": "#/$defs/FailoverMode"
                },
                "RecoveryWindow": {
                    "$ref": "#/$defs/__integer"
                },
                "SourcePriority": {
                    "$ref": "#/$defs/SourcePriority"
                },
                "State": {
                    "$ref": "#/$defs/State"
                }
            }
        },
        "FailoverMode": {
            "enum": [
                "MERGE",
                "FAILOVER"
            ]
        },
        "SourcePriority": {
            "type": "object",
            "properties": {
                "PrimarySource": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "State": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "CreateBridgeRequest": {
            "type": "object",
            "properties": {
                "EgressGatewayBridge": {
                    "$ref": "#/$defs/AddEgressGatewayBridgeRequest"
                },
                "IngressGatewayBridge": {
                    "$ref": "#/$defs/AddIngressGatewayBridgeRequest"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Outputs": {
                    "$ref": "#/$defs/__listOfAddBridgeOutputRequest"
                },
                "PlacementArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceFailoverConfig": {
                    "$ref": "#/$defs/FailoverConfig"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfAddBridgeSourceRequest"
                }
            }
        },
        "AddEgressGatewayBridgeRequest": {
            "type": "object",
            "properties": {
                "MaxBitrate": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "AddIngressGatewayBridgeRequest": {
            "type": "object",
            "properties": {
                "MaxBitrate": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxOutputs": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "CreateFlowResponse": {
            "type": "object",
            "properties": {
                "Flow": {
                    "$ref": "#/$defs/Flow"
                }
            }
        },
        "Flow": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "EgressIp": {
                    "$ref": "#/$defs/__string"
                },
                "Entitlements": {
                    "$ref": "#/$defs/__listOfEntitlement"
                },
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "MediaStreams": {
                    "$ref": "#/$defs/__listOfMediaStream"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Outputs": {
                    "$ref": "#/$defs/__listOfOutput"
                },
                "Source": {
                    "$ref": "#/$defs/Source"
                },
                "SourceFailoverConfig": {
                    "$ref": "#/$defs/FailoverConfig"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfSource"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "VpcInterfaces": {
                    "$ref": "#/$defs/__listOfVpcInterface"
                },
                "Maintenance": {
                    "$ref": "#/$defs/Maintenance"
                },
                "SourceMonitoringConfig": {
                    "$ref": "#/$defs/MonitoringConfig"
                }
            }
        },
        "__listOfEntitlement": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Entitlement"
            }
        },
        "Entitlement": {
            "type": "object",
            "properties": {
                "DataTransferSubscriberFeePercent": {
                    "$ref": "#/$defs/__integer"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "Encryption": {
                    "$ref": "#/$defs/Encryption"
                },
                "EntitlementArn": {
                    "$ref": "#/$defs/__string"
                },
                "EntitlementStatus": {
                    "$ref": "#/$defs/EntitlementStatus"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Subscribers": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "EntitlementStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "Status": {
            "enum": [
                "STANDBY",
                "ACTIVE",
                "UPDATING",
                "DELETING",
                "STARTING",
                "STOPPING",
                "ERROR"
            ]
        },
        "Maintenance": {
            "type": "object",
            "properties": {
                "MaintenanceDay": {
                    "$ref": "#/$defs/MaintenanceDay"
                },
                "MaintenanceDeadline": {
                    "$ref": "#/$defs/__string"
                },
                "MaintenanceScheduledDate": {
                    "$ref": "#/$defs/__string"
                },
                "MaintenanceStartHour": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MaintenanceDay": {
            "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
            ]
        },
        "MonitoringConfig": {
            "type": "object",
            "properties": {
                "ThumbnailState": {
                    "$ref": "#/$defs/ThumbnailState"
                }
            }
        },
        "ThumbnailState": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "CreateFlowRequest": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/__string"
                },
                "Entitlements": {
                    "$ref": "#/$defs/__listOfGrantEntitlementRequest"
                },
                "MediaStreams": {
                    "$ref": "#/$defs/__listOfAddMediaStreamRequest"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Outputs": {
                    "$ref": "#/$defs/__listOfAddOutputRequest"
                },
                "Source": {
                    "$ref": "#/$defs/SetSourceRequest"
                },
                "SourceFailoverConfig": {
                    "$ref": "#/$defs/FailoverConfig"
                },
                "Sources": {
                    "$ref": "#/$defs/__listOfSetSourceRequest"
                },
                "VpcInterfaces": {
                    "$ref": "#/$defs/__listOfVpcInterfaceRequest"
                },
                "Maintenance": {
                    "$ref": "#/$defs/AddMaintenance"
                },
                "SourceMonitoringConfig": {
                    "$ref": "#/$defs/MonitoringConfig"
                }
            }
        },
        "__listOfGrantEntitlementRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GrantEntitlementRequest"
            }
        },
        "GrantEntitlementRequest": {
            "type": "object",
            "properties": {
                "DataTransferSubscriberFeePercent": {
                    "$ref": "#/$defs/__integer"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "Encryption": {
                    "$ref": "#/$defs/Encryption"
                },
                "EntitlementStatus": {
                    "$ref": "#/$defs/EntitlementStatus"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Subscribers": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "AddMaintenance": {
            "type": "object",
            "properties": {
                "MaintenanceDay": {
                    "$ref": "#/$defs/MaintenanceDay"
                },
                "MaintenanceStartHour": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateGatewayResponse": {
            "type": "object",
            "properties": {
                "Gateway": {
                    "$ref": "#/$defs/Gateway"
                }
            }
        },
        "Gateway": {
            "type": "object",
            "properties": {
                "EgressCidrBlocks": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "GatewayArn": {
                    "$ref": "#/$defs/__string"
                },
                "GatewayMessages": {
                    "$ref": "#/$defs/__listOfMessageDetail"
                },
                "GatewayState": {
                    "$ref": "#/$defs/GatewayState"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Networks": {
                    "$ref": "#/$defs/__listOfGatewayNetwork"
                }
            }
        },
        "GatewayState": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "UPDATING",
                "ERROR",
                "DELETING",
                "DELETED"
            ]
        },
        "__listOfGatewayNetwork": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GatewayNetwork"
            }
        },
        "GatewayNetwork": {
            "type": "object",
            "properties": {
                "CidrBlock": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateGatewayRequest": {
            "type": "object",
            "properties": {
                "EgressCidrBlocks": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "Networks": {
                    "$ref": "#/$defs/__listOfGatewayNetwork"
                }
            }
        },
        "DeleteBridgeResponse": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteBridgeRequest": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteFlowResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                }
            }
        },
        "DeleteFlowRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteGatewayResponse": {
            "type": "object",
            "properties": {
                "GatewayArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteGatewayRequest": {
            "type": "object",
            "properties": {
                "GatewayArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeregisterGatewayInstanceResponse": {
            "type": "object",
            "properties": {
                "GatewayInstanceArn": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceState": {
                    "$ref": "#/$defs/InstanceState"
                }
            }
        },
        "InstanceState": {
            "enum": [
                "REGISTERING",
                "ACTIVE",
                "DEREGISTERING",
                "DEREGISTERED",
                "REGISTRATION_ERROR",
                "DEREGISTRATION_ERROR"
            ]
        },
        "DeregisterGatewayInstanceRequest": {
            "type": "object",
            "properties": {
                "Force": {
                    "$ref": "#/$defs/__boolean"
                },
                "GatewayInstanceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__boolean": {
            "type": "boolean"
        },
        "DescribeBridgeResponse": {
            "type": "object",
            "properties": {
                "Bridge": {
                    "$ref": "#/$defs/Bridge"
                }
            }
        },
        "DescribeBridgeRequest": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeFlowResponse": {
            "type": "object",
            "properties": {
                "Flow": {
                    "$ref": "#/$defs/Flow"
                },
                "Messages": {
                    "$ref": "#/$defs/Messages"
                }
            }
        },
        "Messages": {
            "type": "object",
            "properties": {
                "Errors": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "DescribeFlowRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeFlowSourceMetadataResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Messages": {
                    "$ref": "#/$defs/__listOfMessageDetail"
                },
                "Timestamp": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "TransportMediaInfo": {
                    "$ref": "#/$defs/TransportMediaInfo"
                }
            }
        },
        "__timestampIso8601": {
            "type": "string",
            "format": "date-time"
        },
        "TransportMediaInfo": {
            "type": "object",
            "properties": {
                "Programs": {
                    "$ref": "#/$defs/__listOfTransportStreamProgram"
                }
            }
        },
        "__listOfTransportStreamProgram": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransportStreamProgram"
            }
        },
        "TransportStreamProgram": {
            "type": "object",
            "properties": {
                "PcrPid": {
                    "$ref": "#/$defs/__integer"
                },
                "ProgramName": {
                    "$ref": "#/$defs/__string"
                },
                "ProgramNumber": {
                    "$ref": "#/$defs/__integer"
                },
                "ProgramPid": {
                    "$ref": "#/$defs/__integer"
                },
                "Streams": {
                    "$ref": "#/$defs/__listOfTransportStream"
                }
            }
        },
        "__listOfTransportStream": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransportStream"
            }
        },
        "TransportStream": {
            "type": "object",
            "properties": {
                "Channels": {
                    "$ref": "#/$defs/__integer"
                },
                "Codec": {
                    "$ref": "#/$defs/__string"
                },
                "FrameRate": {
                    "$ref": "#/$defs/__string"
                },
                "FrameResolution": {
                    "$ref": "#/$defs/FrameResolution"
                },
                "Pid": {
                    "$ref": "#/$defs/__integer"
                },
                "SampleRate": {
                    "$ref": "#/$defs/__integer"
                },
                "SampleSize": {
                    "$ref": "#/$defs/__integer"
                },
                "StreamType": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "FrameResolution": {
            "type": "object",
            "properties": {
                "FrameHeight": {
                    "$ref": "#/$defs/__integer"
                },
                "FrameWidth": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "DescribeFlowSourceMetadataRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeFlowSourceThumbnailResponse": {
            "type": "object",
            "properties": {
                "ThumbnailDetails": {
                    "$ref": "#/$defs/ThumbnailDetails"
                }
            }
        },
        "ThumbnailDetails": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Thumbnail": {
                    "$ref": "#/$defs/__string"
                },
                "ThumbnailMessages": {
                    "$ref": "#/$defs/__listOfMessageDetail"
                },
                "Timecode": {
                    "$ref": "#/$defs/__string"
                },
                "Timestamp": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "DescribeFlowSourceThumbnailRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeGatewayResponse": {
            "type": "object",
            "properties": {
                "Gateway": {
                    "$ref": "#/$defs/Gateway"
                }
            }
        },
        "DescribeGatewayRequest": {
            "type": "object",
            "properties": {
                "GatewayArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeGatewayInstanceResponse": {
            "type": "object",
            "properties": {
                "GatewayInstance": {
                    "$ref": "#/$defs/GatewayInstance"
                }
            }
        },
        "GatewayInstance": {
            "type": "object",
            "properties": {
                "BridgePlacement": {
                    "$ref": "#/$defs/BridgePlacement"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/ConnectionStatus"
                },
                "GatewayArn": {
                    "$ref": "#/$defs/__string"
                },
                "GatewayInstanceArn": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceId": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceMessages": {
                    "$ref": "#/$defs/__listOfMessageDetail"
                },
                "InstanceState": {
                    "$ref": "#/$defs/InstanceState"
                },
                "RunningBridgeCount": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "BridgePlacement": {
            "enum": [
                "AVAILABLE",
                "LOCKED"
            ]
        },
        "ConnectionStatus": {
            "enum": [
                "CONNECTED",
                "DISCONNECTED"
            ]
        },
        "DescribeGatewayInstanceRequest": {
            "type": "object",
            "properties": {
                "GatewayInstanceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeOfferingResponse": {
            "type": "object",
            "properties": {
                "Offering": {
                    "$ref": "#/$defs/Offering"
                }
            }
        },
        "Offering": {
            "type": "object",
            "properties": {
                "CurrencyCode": {
                    "$ref": "#/$defs/__string"
                },
                "Duration": {
                    "$ref": "#/$defs/__integer"
                },
                "DurationUnits": {
                    "$ref": "#/$defs/DurationUnits"
                },
                "OfferingArn": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingDescription": {
                    "$ref": "#/$defs/__string"
                },
                "PricePerUnit": {
                    "$ref": "#/$defs/__string"
                },
                "PriceUnits": {
                    "$ref": "#/$defs/PriceUnits"
                },
                "ResourceSpecification": {
                    "$ref": "#/$defs/ResourceSpecification"
                }
            }
        },
        "DurationUnits": {
            "enum": [
                "MONTHS"
            ]
        },
        "PriceUnits": {
            "enum": [
                "HOURLY"
            ]
        },
        "ResourceSpecification": {
            "type": "object",
            "properties": {
                "ReservedBitrate": {
                    "$ref": "#/$defs/__integer"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "ResourceType": {
            "enum": [
                "Mbps_Outbound_Bandwidth"
            ]
        },
        "DescribeOfferingRequest": {
            "type": "object",
            "properties": {
                "OfferingArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeReservationResponse": {
            "type": "object",
            "properties": {
                "Reservation": {
                    "$ref": "#/$defs/Reservation"
                }
            }
        },
        "Reservation": {
            "type": "object",
            "properties": {
                "CurrencyCode": {
                    "$ref": "#/$defs/__string"
                },
                "Duration": {
                    "$ref": "#/$defs/__integer"
                },
                "DurationUnits": {
                    "$ref": "#/$defs/DurationUnits"
                },
                "End": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingArn": {
                    "$ref": "#/$defs/__string"
                },
                "OfferingDescription": {
                    "$ref": "#/$defs/__string"
                },
                "PricePerUnit": {
                    "$ref": "#/$defs/__string"
                },
                "PriceUnits": {
                    "$ref": "#/$defs/PriceUnits"
                },
                "ReservationArn": {
                    "$ref": "#/$defs/__string"
                },
                "ReservationName": {
                    "$ref": "#/$defs/__string"
                },
                "ReservationState": {
                    "$ref": "#/$defs/ReservationState"
                },
                "ResourceSpecification": {
                    "$ref": "#/$defs/ResourceSpecification"
                },
                "Start": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ReservationState": {
            "enum": [
                "ACTIVE",
                "EXPIRED",
                "PROCESSING",
                "CANCELED"
            ]
        },
        "DescribeReservationRequest": {
            "type": "object",
            "properties": {
                "ReservationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GrantFlowEntitlementsResponse": {
            "type": "object",
            "properties": {
                "Entitlements": {
                    "$ref": "#/$defs/__listOfEntitlement"
                },
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GrantFlowEntitlementsRequest": {
            "type": "object",
            "properties": {
                "Entitlements": {
                    "$ref": "#/$defs/__listOfGrantEntitlementRequest"
                },
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListBridgesResponse": {
            "type": "object",
            "properties": {
                "Bridges": {
                    "$ref": "#/$defs/__listOfListedBridge"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfListedBridge": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListedBridge"
            }
        },
        "ListedBridge": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "BridgeState": {
                    "$ref": "#/$defs/BridgeState"
                },
                "BridgeType": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "PlacementArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListBridgesRequest": {
            "type": "object",
            "properties": {
                "FilterArn": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListEntitlementsResponse": {
            "type": "object",
            "properties": {
                "Entitlements": {
                    "$ref": "#/$defs/__listOfListedEntitlement"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfListedEntitlement": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListedEntitlement"
            }
        },
        "ListedEntitlement": {
            "type": "object",
            "properties": {
                "DataTransferSubscriberFeePercent": {
                    "$ref": "#/$defs/__integer"
                },
                "EntitlementArn": {
                    "$ref": "#/$defs/__string"
                },
                "EntitlementName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListEntitlementsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListFlowsResponse": {
            "type": "object",
            "properties": {
                "Flows": {
                    "$ref": "#/$defs/__listOfListedFlow"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfListedFlow": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListedFlow"
            }
        },
        "ListedFlow": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "SourceType": {
                    "$ref": "#/$defs/SourceType"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "Maintenance": {
                    "$ref": "#/$defs/Maintenance"
                }
            }
        },
        "SourceType": {
            "enum": [
                "OWNED",
                "ENTITLED"
            ]
        },
        "ListFlowsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListGatewayInstancesResponse": {
            "type": "object",
            "properties": {
                "Instances": {
                    "$ref": "#/$defs/__listOfListedGatewayInstance"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfListedGatewayInstance": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListedGatewayInstance"
            }
        },
        "ListedGatewayInstance": {
            "type": "object",
            "properties": {
                "GatewayArn": {
                    "$ref": "#/$defs/__string"
                },
                "GatewayInstanceArn": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceId": {
                    "$ref": "#/$defs/__string"
                },
                "InstanceState": {
                    "$ref": "#/$defs/InstanceState"
                }
            }
        },
        "ListGatewayInstancesRequest": {
            "type": "object",
            "properties": {
                "FilterArn": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListGatewaysResponse": {
            "type": "object",
            "properties": {
                "Gateways": {
                    "$ref": "#/$defs/__listOfListedGateway"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfListedGateway": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListedGateway"
            }
        },
        "ListedGateway": {
            "type": "object",
            "properties": {
                "GatewayArn": {
                    "$ref": "#/$defs/__string"
                },
                "GatewayState": {
                    "$ref": "#/$defs/GatewayState"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListGatewaysRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListOfferingsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Offerings": {
                    "$ref": "#/$defs/__listOfOffering"
                }
            }
        },
        "__listOfOffering": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Offering"
            }
        },
        "ListOfferingsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListReservationsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Reservations": {
                    "$ref": "#/$defs/__listOfReservation"
                }
            }
        },
        "__listOfReservation": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Reservation"
            }
        },
        "ListReservationsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "__mapOf__string": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/__string"
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "PurchaseOfferingResponse": {
            "type": "object",
            "properties": {
                "Reservation": {
                    "$ref": "#/$defs/Reservation"
                }
            }
        },
        "PurchaseOfferingRequest": {
            "type": "object",
            "properties": {
                "OfferingArn": {
                    "$ref": "#/$defs/__string"
                },
                "ReservationName": {
                    "$ref": "#/$defs/__string"
                },
                "Start": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveBridgeOutputResponse": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "OutputName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveBridgeOutputRequest": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "OutputName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveBridgeSourceResponse": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveBridgeSourceRequest": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveFlowMediaStreamResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "MediaStreamName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveFlowMediaStreamRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "MediaStreamName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveFlowOutputResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "OutputArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveFlowOutputRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "OutputArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveFlowSourceResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveFlowSourceRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveFlowVpcInterfaceResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "NonDeletedNetworkInterfaceIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "VpcInterfaceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveFlowVpcInterfaceRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "VpcInterfaceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RevokeFlowEntitlementResponse": {
            "type": "object",
            "properties": {
                "EntitlementArn": {
                    "$ref": "#/$defs/__string"
                },
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RevokeFlowEntitlementRequest": {
            "type": "object",
            "properties": {
                "EntitlementArn": {
                    "$ref": "#/$defs/__string"
                },
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StartFlowResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                }
            }
        },
        "StartFlowRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StopFlowResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                }
            }
        },
        "StopFlowRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "TagKeys": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "UpdateBridgeResponse": {
            "type": "object",
            "properties": {
                "Bridge": {
                    "$ref": "#/$defs/Bridge"
                }
            }
        },
        "UpdateBridgeRequest": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "EgressGatewayBridge": {
                    "$ref": "#/$defs/UpdateEgressGatewayBridgeRequest"
                },
                "IngressGatewayBridge": {
                    "$ref": "#/$defs/UpdateIngressGatewayBridgeRequest"
                },
                "SourceFailoverConfig": {
                    "$ref": "#/$defs/UpdateFailoverConfig"
                }
            }
        },
        "UpdateEgressGatewayBridgeRequest": {
            "type": "object",
            "properties": {
                "MaxBitrate": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "UpdateIngressGatewayBridgeRequest": {
            "type": "object",
            "properties": {
                "MaxBitrate": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxOutputs": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "UpdateFailoverConfig": {
            "type": "object",
            "properties": {
                "FailoverMode": {
                    "$ref": "#/$defs/FailoverMode"
                },
                "RecoveryWindow": {
                    "$ref": "#/$defs/__integer"
                },
                "SourcePriority": {
                    "$ref": "#/$defs/SourcePriority"
                },
                "State": {
                    "$ref": "#/$defs/State"
                }
            }
        },
        "UpdateBridgeOutputResponse": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "Output": {
                    "$ref": "#/$defs/BridgeOutput"
                }
            }
        },
        "UpdateBridgeOutputRequest": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkOutput": {
                    "$ref": "#/$defs/UpdateBridgeNetworkOutputRequest"
                },
                "OutputName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBridgeNetworkOutputRequest": {
            "type": "object",
            "properties": {
                "IpAddress": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkName": {
                    "$ref": "#/$defs/__string"
                },
                "Port": {
                    "$ref": "#/$defs/__integer"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                },
                "Ttl": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "UpdateBridgeSourceResponse": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "Source": {
                    "$ref": "#/$defs/BridgeSource"
                }
            }
        },
        "UpdateBridgeSourceRequest": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "FlowSource": {
                    "$ref": "#/$defs/UpdateBridgeFlowSourceRequest"
                },
                "NetworkSource": {
                    "$ref": "#/$defs/UpdateBridgeNetworkSourceRequest"
                },
                "SourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBridgeFlowSourceRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "FlowVpcInterfaceAttachment": {
                    "$ref": "#/$defs/VpcInterfaceAttachment"
                }
            }
        },
        "UpdateBridgeNetworkSourceRequest": {
            "type": "object",
            "properties": {
                "MulticastIp": {
                    "$ref": "#/$defs/__string"
                },
                "NetworkName": {
                    "$ref": "#/$defs/__string"
                },
                "Port": {
                    "$ref": "#/$defs/__integer"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                }
            }
        },
        "UpdateBridgeStateResponse": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "DesiredState": {
                    "$ref": "#/$defs/DesiredState"
                }
            }
        },
        "DesiredState": {
            "enum": [
                "ACTIVE",
                "STANDBY",
                "DELETED"
            ]
        },
        "UpdateBridgeStateRequest": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "DesiredState": {
                    "$ref": "#/$defs/DesiredState"
                }
            }
        },
        "UpdateFlowResponse": {
            "type": "object",
            "properties": {
                "Flow": {
                    "$ref": "#/$defs/Flow"
                }
            }
        },
        "UpdateFlowRequest": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceFailoverConfig": {
                    "$ref": "#/$defs/UpdateFailoverConfig"
                },
                "Maintenance": {
                    "$ref": "#/$defs/UpdateMaintenance"
                },
                "SourceMonitoringConfig": {
                    "$ref": "#/$defs/MonitoringConfig"
                }
            }
        },
        "UpdateMaintenance": {
            "type": "object",
            "properties": {
                "MaintenanceDay": {
                    "$ref": "#/$defs/MaintenanceDay"
                },
                "MaintenanceScheduledDate": {
                    "$ref": "#/$defs/__string"
                },
                "MaintenanceStartHour": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateFlowEntitlementResponse": {
            "type": "object",
            "properties": {
                "Entitlement": {
                    "$ref": "#/$defs/Entitlement"
                },
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateFlowEntitlementRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "Encryption": {
                    "$ref": "#/$defs/UpdateEncryption"
                },
                "EntitlementArn": {
                    "$ref": "#/$defs/__string"
                },
                "EntitlementStatus": {
                    "$ref": "#/$defs/EntitlementStatus"
                },
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Subscribers": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "UpdateEncryption": {
            "type": "object",
            "properties": {
                "Algorithm": {
                    "$ref": "#/$defs/Algorithm"
                },
                "ConstantInitializationVector": {
                    "$ref": "#/$defs/__string"
                },
                "DeviceId": {
                    "$ref": "#/$defs/__string"
                },
                "KeyType": {
                    "$ref": "#/$defs/KeyType"
                },
                "Region": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceId": {
                    "$ref": "#/$defs/__string"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "SecretArn": {
                    "$ref": "#/$defs/__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateFlowMediaStreamResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "MediaStream": {
                    "$ref": "#/$defs/MediaStream"
                }
            }
        },
        "UpdateFlowMediaStreamRequest": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/MediaStreamAttributesRequest"
                },
                "ClockRate": {
                    "$ref": "#/$defs/__integer"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "MediaStreamName": {
                    "$ref": "#/$defs/__string"
                },
                "MediaStreamType": {
                    "$ref": "#/$defs/MediaStreamType"
                },
                "VideoFormat": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateFlowOutputResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Output": {
                    "$ref": "#/$defs/Output"
                }
            }
        },
        "UpdateFlowOutputRequest": {
            "type": "object",
            "properties": {
                "CidrAllowList": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "Destination": {
                    "$ref": "#/$defs/__string"
                },
                "Encryption": {
                    "$ref": "#/$defs/UpdateEncryption"
                },
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "MaxLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "MediaStreamOutputConfigurations": {
                    "$ref": "#/$defs/__listOfMediaStreamOutputConfigurationRequest"
                },
                "MinLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "OutputArn": {
                    "$ref": "#/$defs/__string"
                },
                "Port": {
                    "$ref": "#/$defs/__integer"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                },
                "RemoteId": {
                    "$ref": "#/$defs/__string"
                },
                "SenderControlPort": {
                    "$ref": "#/$defs/__integer"
                },
                "SenderIpAddress": {
                    "$ref": "#/$defs/__string"
                },
                "SmoothingLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "StreamId": {
                    "$ref": "#/$defs/__string"
                },
                "VpcInterfaceAttachment": {
                    "$ref": "#/$defs/VpcInterfaceAttachment"
                },
                "OutputStatus": {
                    "$ref": "#/$defs/OutputStatus"
                }
            }
        },
        "UpdateFlowSourceResponse": {
            "type": "object",
            "properties": {
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "Source": {
                    "$ref": "#/$defs/Source"
                }
            }
        },
        "UpdateFlowSourceRequest": {
            "type": "object",
            "properties": {
                "Decryption": {
                    "$ref": "#/$defs/UpdateEncryption"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "EntitlementArn": {
                    "$ref": "#/$defs/__string"
                },
                "FlowArn": {
                    "$ref": "#/$defs/__string"
                },
                "IngestPort": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxBitrate": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "MaxSyncBuffer": {
                    "$ref": "#/$defs/__integer"
                },
                "MediaStreamSourceConfigurations": {
                    "$ref": "#/$defs/__listOfMediaStreamSourceConfigurationRequest"
                },
                "MinLatency": {
                    "$ref": "#/$defs/__integer"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                },
                "SenderControlPort": {
                    "$ref": "#/$defs/__integer"
                },
                "SenderIpAddress": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceListenerAddress": {
                    "$ref": "#/$defs/__string"
                },
                "SourceListenerPort": {
                    "$ref": "#/$defs/__integer"
                },
                "StreamId": {
                    "$ref": "#/$defs/__string"
                },
                "VpcInterfaceName": {
                    "$ref": "#/$defs/__string"
                },
                "WhitelistCidr": {
                    "$ref": "#/$defs/__string"
                },
                "GatewayBridgeSource": {
                    "$ref": "#/$defs/UpdateGatewayBridgeSourceRequest"
                }
            }
        },
        "UpdateGatewayBridgeSourceRequest": {
            "type": "object",
            "properties": {
                "BridgeArn": {
                    "$ref": "#/$defs/__string"
                },
                "VpcInterfaceAttachment": {
                    "$ref": "#/$defs/VpcInterfaceAttachment"
                }
            }
        },
        "UpdateGatewayInstanceResponse": {
            "type": "object",
            "properties": {
                "BridgePlacement": {
                    "$ref": "#/$defs/BridgePlacement"
                },
                "GatewayInstanceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateGatewayInstanceRequest": {
            "type": "object",
            "properties": {
                "BridgePlacement": {
                    "$ref": "#/$defs/BridgePlacement"
                },
                "GatewayInstanceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mediaconnect-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mediaconnect-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mediaconnect.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://mediaconnect.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}