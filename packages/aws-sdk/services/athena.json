{
    "name": "athena",
    "commands": [
        {
            "name": "BatchGetNamedQuery",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetNamedQuery"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetNamedQueryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetNamedQueryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetPreparedStatement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetPreparedStatement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetPreparedStatementOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetPreparedStatementInput"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetQueryExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchGetQueryExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetQueryExecutionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetQueryExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelCapacityReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelCapacityReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelCapacityReservationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelCapacityReservationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCapacityReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCapacityReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCapacityReservationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCapacityReservationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDataCatalog",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDataCatalog"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDataCatalogOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDataCatalogInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateNamedQuery",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateNamedQuery"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNamedQueryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNamedQueryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateNotebook",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateNotebook"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNotebookOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNotebookInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePreparedStatement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreatePreparedStatement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePreparedStatementOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePreparedStatementInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePresignedNotebookUrl",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreatePresignedNotebookUrl"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePresignedNotebookUrlResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePresignedNotebookUrlRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateWorkGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateWorkGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateWorkGroupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateWorkGroupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCapacityReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCapacityReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCapacityReservationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCapacityReservationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDataCatalog",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteDataCatalog"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDataCatalogOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDataCatalogInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNamedQuery",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteNamedQuery"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNamedQueryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNamedQueryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNotebook",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteNotebook"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNotebookOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNotebookInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePreparedStatement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeletePreparedStatement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePreparedStatementOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePreparedStatementInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteWorkGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteWorkGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteWorkGroupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteWorkGroupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportNotebook",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExportNotebook"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportNotebookOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportNotebookInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCalculationExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCalculationExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCalculationExecutionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCalculationExecutionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCalculationExecutionCode",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCalculationExecutionCode"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCalculationExecutionCodeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCalculationExecutionCodeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCalculationExecutionStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCalculationExecutionStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCalculationExecutionStatusResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCalculationExecutionStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCapacityAssignmentConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCapacityAssignmentConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCapacityAssignmentConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCapacityAssignmentConfigurationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCapacityReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCapacityReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCapacityReservationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCapacityReservationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDatabase",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDatabase"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDatabaseOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDatabaseInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataCatalog",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDataCatalog"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataCatalogOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataCatalogInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetNamedQuery",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetNamedQuery"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetNamedQueryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetNamedQueryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetNotebookMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetNotebookMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetNotebookMetadataOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetNotebookMetadataInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPreparedStatement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPreparedStatement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPreparedStatementOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPreparedStatementInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetQueryExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetQueryExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetQueryExecutionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetQueryExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetQueryResults",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetQueryResults"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetQueryResultsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetQueryResultsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetQueryRuntimeStatistics",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetQueryRuntimeStatistics"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetQueryRuntimeStatisticsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetQueryRuntimeStatisticsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSessionStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSessionStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSessionStatusResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSessionStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTableMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTableMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTableMetadataOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTableMetadataInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWorkGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWorkGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWorkGroupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWorkGroupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportNotebook",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ImportNotebook"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportNotebookOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportNotebookInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListApplicationDPUSizes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListApplicationDPUSizes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApplicationDPUSizesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListApplicationDPUSizesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCalculationExecutions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListCalculationExecutions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCalculationExecutionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCalculationExecutionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCapacityReservations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListCapacityReservations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCapacityReservationsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCapacityReservationsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDatabases",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDatabases"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDatabasesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDatabasesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDataCatalogs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDataCatalogs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDataCatalogsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDataCatalogsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListEngineVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListEngineVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEngineVersionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEngineVersionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListExecutors",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListExecutors"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListExecutorsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListExecutorsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListNamedQueries",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListNamedQueries"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNamedQueriesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListNamedQueriesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListNotebookMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListNotebookMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNotebookMetadataOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListNotebookMetadataInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListNotebookSessions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListNotebookSessions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNotebookSessionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListNotebookSessionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPreparedStatements",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListPreparedStatements"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPreparedStatementsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPreparedStatementsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListQueryExecutions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListQueryExecutions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListQueryExecutionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListQueryExecutionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSessions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListSessions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSessionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSessionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTableMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTableMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTableMetadataOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTableMetadataInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListWorkGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListWorkGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListWorkGroupsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListWorkGroupsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutCapacityAssignmentConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutCapacityAssignmentConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutCapacityAssignmentConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutCapacityAssignmentConfigurationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StartCalculationExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartCalculationExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartCalculationExecutionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartCalculationExecutionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartQueryExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartQueryExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartQueryExecutionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartQueryExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StartSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopCalculationExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopCalculationExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopCalculationExecutionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopCalculationExecutionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopQueryExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopQueryExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopQueryExecutionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopQueryExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TerminateSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TerminateSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TerminateSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TerminateSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCapacityReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateCapacityReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCapacityReservationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCapacityReservationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDataCatalog",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDataCatalog"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDataCatalogOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDataCatalogInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateNamedQuery",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateNamedQuery"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateNamedQueryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateNamedQueryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateNotebook",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateNotebook"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateNotebookOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateNotebookInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateNotebookMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateNotebookMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateNotebookMetadataOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateNotebookMetadataInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePreparedStatement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdatePreparedStatement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePreparedStatementOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePreparedStatementInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateWorkGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateWorkGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateWorkGroupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateWorkGroupInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchGetNamedQueryOutput": {
            "type": "object",
            "properties": {
                "NamedQueries": {
                    "$ref": "#/$defs/NamedQueryList"
                },
                "UnprocessedNamedQueryIds": {
                    "$ref": "#/$defs/UnprocessedNamedQueryIdList"
                }
            }
        },
        "NamedQueryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NamedQuery"
            }
        },
        "NamedQuery": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Database": {
                    "$ref": "#/$defs/DatabaseString"
                },
                "QueryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "NamedQueryId": {
                    "$ref": "#/$defs/NamedQueryId"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "NameString": {
            "type": "string"
        },
        "DescriptionString": {
            "type": "string"
        },
        "DatabaseString": {
            "type": "string"
        },
        "QueryString": {
            "type": "string"
        },
        "NamedQueryId": {
            "type": "string"
        },
        "WorkGroupName": {
            "type": "string"
        },
        "UnprocessedNamedQueryIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnprocessedNamedQueryId"
            }
        },
        "UnprocessedNamedQueryId": {
            "type": "object",
            "properties": {
                "NamedQueryId": {
                    "$ref": "#/$defs/NamedQueryId"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ErrorCode": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "BatchGetNamedQueryInput": {
            "type": "object",
            "properties": {
                "NamedQueryIds": {
                    "$ref": "#/$defs/NamedQueryIdList"
                }
            }
        },
        "NamedQueryIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NamedQueryId"
            }
        },
        "BatchGetPreparedStatementOutput": {
            "type": "object",
            "properties": {
                "PreparedStatements": {
                    "$ref": "#/$defs/PreparedStatementDetailsList"
                },
                "UnprocessedPreparedStatementNames": {
                    "$ref": "#/$defs/UnprocessedPreparedStatementNameList"
                }
            }
        },
        "PreparedStatementDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PreparedStatement"
            }
        },
        "PreparedStatement": {
            "type": "object",
            "properties": {
                "StatementName": {
                    "$ref": "#/$defs/StatementName"
                },
                "QueryStatement": {
                    "$ref": "#/$defs/QueryString"
                },
                "WorkGroupName": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "StatementName": {
            "type": "string"
        },
        "Date": {
            "type": "string",
            "format": "date-time"
        },
        "UnprocessedPreparedStatementNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnprocessedPreparedStatementName"
            }
        },
        "UnprocessedPreparedStatementName": {
            "type": "object",
            "properties": {
                "StatementName": {
                    "$ref": "#/$defs/StatementName"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "BatchGetPreparedStatementInput": {
            "type": "object",
            "properties": {
                "PreparedStatementNames": {
                    "$ref": "#/$defs/PreparedStatementNameList"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "PreparedStatementNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StatementName"
            }
        },
        "BatchGetQueryExecutionOutput": {
            "type": "object",
            "properties": {
                "QueryExecutions": {
                    "$ref": "#/$defs/QueryExecutionList"
                },
                "UnprocessedQueryExecutionIds": {
                    "$ref": "#/$defs/UnprocessedQueryExecutionIdList"
                }
            }
        },
        "QueryExecutionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/QueryExecution"
            }
        },
        "QueryExecution": {
            "type": "object",
            "properties": {
                "QueryExecutionId": {
                    "$ref": "#/$defs/QueryExecutionId"
                },
                "Query": {
                    "$ref": "#/$defs/QueryString"
                },
                "StatementType": {
                    "$ref": "#/$defs/StatementType"
                },
                "ResultConfiguration": {
                    "$ref": "#/$defs/ResultConfiguration"
                },
                "ResultReuseConfiguration": {
                    "$ref": "#/$defs/ResultReuseConfiguration"
                },
                "QueryExecutionContext": {
                    "$ref": "#/$defs/QueryExecutionContext"
                },
                "Status": {
                    "$ref": "#/$defs/QueryExecutionStatus"
                },
                "Statistics": {
                    "$ref": "#/$defs/QueryExecutionStatistics"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/EngineVersion"
                },
                "ExecutionParameters": {
                    "$ref": "#/$defs/ExecutionParameters"
                },
                "SubstatementType": {
                    "$ref": "#/$defs/String"
                },
                "QueryResultsS3AccessGrantsConfiguration": {
                    "$ref": "#/$defs/QueryResultsS3AccessGrantsConfiguration"
                }
            }
        },
        "QueryExecutionId": {
            "type": "string"
        },
        "StatementType": {
            "enum": [
                "DDL",
                "DML",
                "UTILITY"
            ]
        },
        "ResultConfiguration": {
            "type": "object",
            "properties": {
                "OutputLocation": {
                    "$ref": "#/$defs/ResultOutputLocation"
                },
                "EncryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "AclConfiguration": {
                    "$ref": "#/$defs/AclConfiguration"
                }
            }
        },
        "ResultOutputLocation": {
            "type": "string"
        },
        "EncryptionConfiguration": {
            "type": "object",
            "properties": {
                "EncryptionOption": {
                    "$ref": "#/$defs/EncryptionOption"
                },
                "KmsKey": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EncryptionOption": {
            "enum": [
                "SSE_S3",
                "SSE_KMS",
                "CSE_KMS"
            ]
        },
        "String": {
            "type": "string"
        },
        "AwsAccountId": {
            "type": "string"
        },
        "AclConfiguration": {
            "type": "object",
            "properties": {
                "S3AclOption": {
                    "$ref": "#/$defs/S3AclOption"
                }
            }
        },
        "S3AclOption": {
            "enum": [
                "BUCKET_OWNER_FULL_CONTROL"
            ]
        },
        "ResultReuseConfiguration": {
            "type": "object",
            "properties": {
                "ResultReuseByAgeConfiguration": {
                    "$ref": "#/$defs/ResultReuseByAgeConfiguration"
                }
            }
        },
        "ResultReuseByAgeConfiguration": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "MaxAgeInMinutes": {
                    "$ref": "#/$defs/Age"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "Age": {
            "type": "integer",
            "format": "int32"
        },
        "QueryExecutionContext": {
            "type": "object",
            "properties": {
                "Database": {
                    "$ref": "#/$defs/DatabaseString"
                },
                "Catalog": {
                    "$ref": "#/$defs/CatalogNameString"
                }
            }
        },
        "CatalogNameString": {
            "type": "string"
        },
        "QueryExecutionStatus": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/QueryExecutionState"
                },
                "StateChangeReason": {
                    "$ref": "#/$defs/String"
                },
                "SubmissionDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "CompletionDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "AthenaError": {
                    "$ref": "#/$defs/AthenaError"
                }
            }
        },
        "QueryExecutionState": {
            "enum": [
                "QUEUED",
                "RUNNING",
                "SUCCEEDED",
                "FAILED",
                "CANCELLED"
            ]
        },
        "AthenaError": {
            "type": "object",
            "properties": {
                "ErrorCategory": {
                    "$ref": "#/$defs/ErrorCategory"
                },
                "ErrorType": {
                    "$ref": "#/$defs/ErrorType"
                },
                "Retryable": {
                    "$ref": "#/$defs/Boolean"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ErrorCategory": {
            "type": "integer",
            "format": "int32"
        },
        "ErrorType": {
            "type": "integer",
            "format": "int32"
        },
        "QueryExecutionStatistics": {
            "type": "object",
            "properties": {
                "EngineExecutionTimeInMillis": {
                    "$ref": "#/$defs/Long"
                },
                "DataScannedInBytes": {
                    "$ref": "#/$defs/Long"
                },
                "DataManifestLocation": {
                    "$ref": "#/$defs/String"
                },
                "TotalExecutionTimeInMillis": {
                    "$ref": "#/$defs/Long"
                },
                "QueryQueueTimeInMillis": {
                    "$ref": "#/$defs/Long"
                },
                "ServicePreProcessingTimeInMillis": {
                    "$ref": "#/$defs/Long"
                },
                "QueryPlanningTimeInMillis": {
                    "$ref": "#/$defs/Long"
                },
                "ServiceProcessingTimeInMillis": {
                    "$ref": "#/$defs/Long"
                },
                "ResultReuseInformation": {
                    "$ref": "#/$defs/ResultReuseInformation"
                }
            }
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "ResultReuseInformation": {
            "type": "object",
            "properties": {
                "ReusedPreviousResult": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EngineVersion": {
            "type": "object",
            "properties": {
                "SelectedEngineVersion": {
                    "$ref": "#/$defs/NameString"
                },
                "EffectiveEngineVersion": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "ExecutionParameters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExecutionParameter"
            }
        },
        "ExecutionParameter": {
            "type": "string"
        },
        "QueryResultsS3AccessGrantsConfiguration": {
            "type": "object",
            "properties": {
                "EnableS3AccessGrants": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "CreateUserLevelPrefix": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "AuthenticationType": {
                    "$ref": "#/$defs/AuthenticationType"
                }
            }
        },
        "BoxedBoolean": {
            "type": "boolean"
        },
        "AuthenticationType": {
            "enum": [
                "DIRECTORY_IDENTITY"
            ]
        },
        "UnprocessedQueryExecutionIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnprocessedQueryExecutionId"
            }
        },
        "UnprocessedQueryExecutionId": {
            "type": "object",
            "properties": {
                "QueryExecutionId": {
                    "$ref": "#/$defs/QueryExecutionId"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "BatchGetQueryExecutionInput": {
            "type": "object",
            "properties": {
                "QueryExecutionIds": {
                    "$ref": "#/$defs/QueryExecutionIdList"
                }
            }
        },
        "QueryExecutionIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/QueryExecutionId"
            }
        },
        "CancelCapacityReservationOutput": {
            "type": "object",
            "properties": {}
        },
        "CancelCapacityReservationInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CapacityReservationName"
                }
            }
        },
        "CapacityReservationName": {
            "type": "string"
        },
        "CreateCapacityReservationOutput": {
            "type": "object",
            "properties": {}
        },
        "CreateCapacityReservationInput": {
            "type": "object",
            "properties": {
                "TargetDpus": {
                    "$ref": "#/$defs/TargetDpusInteger"
                },
                "Name": {
                    "$ref": "#/$defs/CapacityReservationName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TargetDpusInteger": {
            "type": "integer",
            "format": "int32"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateDataCatalogOutput": {
            "type": "object",
            "properties": {
                "DataCatalog": {
                    "$ref": "#/$defs/DataCatalog"
                }
            }
        },
        "DataCatalog": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CatalogNameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Type": {
                    "$ref": "#/$defs/DataCatalogType"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                },
                "Status": {
                    "$ref": "#/$defs/DataCatalogStatus"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/ConnectionType"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "DataCatalogType": {
            "enum": [
                "LAMBDA",
                "GLUE",
                "HIVE",
                "FEDERATED"
            ]
        },
        "ParametersMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ParametersMapValue"
            }
        },
        "ParametersMapValue": {
            "type": "string"
        },
        "DataCatalogStatus": {
            "enum": [
                "CREATE_IN_PROGRESS",
                "CREATE_COMPLETE",
                "CREATE_FAILED",
                "CREATE_FAILED_CLEANUP_IN_PROGRESS",
                "CREATE_FAILED_CLEANUP_COMPLETE",
                "CREATE_FAILED_CLEANUP_FAILED",
                "DELETE_IN_PROGRESS",
                "DELETE_COMPLETE",
                "DELETE_FAILED"
            ]
        },
        "ConnectionType": {
            "enum": [
                "DYNAMODB",
                "MYSQL",
                "POSTGRESQL",
                "REDSHIFT",
                "ORACLE",
                "SYNAPSE",
                "SQLSERVER",
                "DB2",
                "OPENSEARCH",
                "BIGQUERY",
                "GOOGLECLOUDSTORAGE",
                "HBASE",
                "DOCUMENTDB",
                "MSK",
                "NEPTUNE",
                "CMDB",
                "TPCDS",
                "REDIS",
                "CLOUDWATCH",
                "TIMESTREAM",
                "SAPHANA",
                "SNOWFLAKE",
                "TERADATA",
                "VERTICA",
                "CLOUDERAIMPALA",
                "CLOUDERAHIVE",
                "HORTONWORKSHIVE",
                "DATALAKEGEN2",
                "DB2AS400",
                "CLOUDWATCHMETRICS"
            ]
        },
        "CreateDataCatalogInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CatalogNameString"
                },
                "Type": {
                    "$ref": "#/$defs/DataCatalogType"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateNamedQueryOutput": {
            "type": "object",
            "properties": {
                "NamedQueryId": {
                    "$ref": "#/$defs/NamedQueryId"
                }
            }
        },
        "CreateNamedQueryInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Database": {
                    "$ref": "#/$defs/DatabaseString"
                },
                "QueryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/IdempotencyToken"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "IdempotencyToken": {
            "type": "string"
        },
        "CreateNotebookOutput": {
            "type": "object",
            "properties": {
                "NotebookId": {
                    "$ref": "#/$defs/NotebookId"
                }
            }
        },
        "NotebookId": {
            "type": "string"
        },
        "CreateNotebookInput": {
            "type": "object",
            "properties": {
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "Name": {
                    "$ref": "#/$defs/NotebookName"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "NotebookName": {
            "type": "string"
        },
        "ClientRequestToken": {
            "type": "string"
        },
        "CreatePreparedStatementOutput": {
            "type": "object",
            "properties": {}
        },
        "CreatePreparedStatementInput": {
            "type": "object",
            "properties": {
                "StatementName": {
                    "$ref": "#/$defs/StatementName"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "QueryStatement": {
                    "$ref": "#/$defs/QueryString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                }
            }
        },
        "CreatePresignedNotebookUrlResponse": {
            "type": "object",
            "properties": {
                "NotebookUrl": {
                    "$ref": "#/$defs/String"
                },
                "AuthToken": {
                    "$ref": "#/$defs/AuthToken"
                },
                "AuthTokenExpirationTime": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "AuthToken": {
            "type": "string"
        },
        "CreatePresignedNotebookUrlRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                }
            }
        },
        "SessionId": {
            "type": "string"
        },
        "CreateWorkGroupOutput": {
            "type": "object",
            "properties": {}
        },
        "CreateWorkGroupInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "Configuration": {
                    "$ref": "#/$defs/WorkGroupConfiguration"
                },
                "Description": {
                    "$ref": "#/$defs/WorkGroupDescriptionString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "WorkGroupConfiguration": {
            "type": "object",
            "properties": {
                "ResultConfiguration": {
                    "$ref": "#/$defs/ResultConfiguration"
                },
                "EnforceWorkGroupConfiguration": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "PublishCloudWatchMetricsEnabled": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "BytesScannedCutoffPerQuery": {
                    "$ref": "#/$defs/BytesScannedCutoffValue"
                },
                "RequesterPaysEnabled": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/EngineVersion"
                },
                "AdditionalConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "ExecutionRole": {
                    "$ref": "#/$defs/RoleArn"
                },
                "CustomerContentEncryptionConfiguration": {
                    "$ref": "#/$defs/CustomerContentEncryptionConfiguration"
                },
                "EnableMinimumEncryptionConfiguration": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "IdentityCenterConfiguration": {
                    "$ref": "#/$defs/IdentityCenterConfiguration"
                },
                "QueryResultsS3AccessGrantsConfiguration": {
                    "$ref": "#/$defs/QueryResultsS3AccessGrantsConfiguration"
                }
            }
        },
        "BytesScannedCutoffValue": {
            "type": "integer",
            "format": "int64"
        },
        "RoleArn": {
            "type": "string"
        },
        "CustomerContentEncryptionConfiguration": {
            "type": "object",
            "properties": {
                "KmsKey": {
                    "$ref": "#/$defs/KmsKey"
                }
            }
        },
        "KmsKey": {
            "type": "string"
        },
        "IdentityCenterConfiguration": {
            "type": "object",
            "properties": {
                "EnableIdentityCenter": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "IdentityCenterInstanceArn": {
                    "$ref": "#/$defs/IdentityCenterInstanceArn"
                }
            }
        },
        "IdentityCenterInstanceArn": {
            "type": "string"
        },
        "WorkGroupDescriptionString": {
            "type": "string"
        },
        "DeleteCapacityReservationOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteCapacityReservationInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CapacityReservationName"
                }
            }
        },
        "DeleteDataCatalogOutput": {
            "type": "object",
            "properties": {
                "DataCatalog": {
                    "$ref": "#/$defs/DataCatalog"
                }
            }
        },
        "DeleteDataCatalogInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CatalogNameString"
                }
            }
        },
        "DeleteNamedQueryOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteNamedQueryInput": {
            "type": "object",
            "properties": {
                "NamedQueryId": {
                    "$ref": "#/$defs/NamedQueryId"
                }
            }
        },
        "DeleteNotebookOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteNotebookInput": {
            "type": "object",
            "properties": {
                "NotebookId": {
                    "$ref": "#/$defs/NotebookId"
                }
            }
        },
        "DeletePreparedStatementOutput": {
            "type": "object",
            "properties": {}
        },
        "DeletePreparedStatementInput": {
            "type": "object",
            "properties": {
                "StatementName": {
                    "$ref": "#/$defs/StatementName"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "DeleteWorkGroupOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteWorkGroupInput": {
            "type": "object",
            "properties": {
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "RecursiveDeleteOption": {
                    "$ref": "#/$defs/BoxedBoolean"
                }
            }
        },
        "ExportNotebookOutput": {
            "type": "object",
            "properties": {
                "NotebookMetadata": {
                    "$ref": "#/$defs/NotebookMetadata"
                },
                "Payload": {
                    "$ref": "#/$defs/Payload"
                }
            }
        },
        "NotebookMetadata": {
            "type": "object",
            "properties": {
                "NotebookId": {
                    "$ref": "#/$defs/NotebookId"
                },
                "Name": {
                    "$ref": "#/$defs/NotebookName"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Date"
                },
                "Type": {
                    "$ref": "#/$defs/NotebookType"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "NotebookType": {
            "enum": [
                "IPYNB"
            ]
        },
        "Payload": {
            "type": "string"
        },
        "ExportNotebookInput": {
            "type": "object",
            "properties": {
                "NotebookId": {
                    "$ref": "#/$defs/NotebookId"
                }
            }
        },
        "GetCalculationExecutionResponse": {
            "type": "object",
            "properties": {
                "CalculationExecutionId": {
                    "$ref": "#/$defs/CalculationExecutionId"
                },
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "WorkingDirectory": {
                    "$ref": "#/$defs/S3Uri"
                },
                "Status": {
                    "$ref": "#/$defs/CalculationStatus"
                },
                "Statistics": {
                    "$ref": "#/$defs/CalculationStatistics"
                },
                "Result": {
                    "$ref": "#/$defs/CalculationResult"
                }
            }
        },
        "CalculationExecutionId": {
            "type": "string"
        },
        "S3Uri": {
            "type": "string"
        },
        "CalculationStatus": {
            "type": "object",
            "properties": {
                "SubmissionDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "CompletionDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "State": {
                    "$ref": "#/$defs/CalculationExecutionState"
                },
                "StateChangeReason": {
                    "$ref": "#/$defs/DescriptionString"
                }
            }
        },
        "CalculationExecutionState": {
            "enum": [
                "CREATING",
                "CREATED",
                "QUEUED",
                "RUNNING",
                "CANCELING",
                "CANCELED",
                "COMPLETED",
                "FAILED"
            ]
        },
        "CalculationStatistics": {
            "type": "object",
            "properties": {
                "DpuExecutionInMillis": {
                    "$ref": "#/$defs/Long"
                },
                "Progress": {
                    "$ref": "#/$defs/DescriptionString"
                }
            }
        },
        "CalculationResult": {
            "type": "object",
            "properties": {
                "StdOutS3Uri": {
                    "$ref": "#/$defs/S3Uri"
                },
                "StdErrorS3Uri": {
                    "$ref": "#/$defs/S3Uri"
                },
                "ResultS3Uri": {
                    "$ref": "#/$defs/S3Uri"
                },
                "ResultType": {
                    "$ref": "#/$defs/CalculationResultType"
                }
            }
        },
        "CalculationResultType": {
            "type": "string"
        },
        "GetCalculationExecutionRequest": {
            "type": "object",
            "properties": {
                "CalculationExecutionId": {
                    "$ref": "#/$defs/CalculationExecutionId"
                }
            }
        },
        "GetCalculationExecutionCodeResponse": {
            "type": "object",
            "properties": {
                "CodeBlock": {
                    "$ref": "#/$defs/CodeBlock"
                }
            }
        },
        "CodeBlock": {
            "type": "string"
        },
        "GetCalculationExecutionCodeRequest": {
            "type": "object",
            "properties": {
                "CalculationExecutionId": {
                    "$ref": "#/$defs/CalculationExecutionId"
                }
            }
        },
        "GetCalculationExecutionStatusResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/CalculationStatus"
                },
                "Statistics": {
                    "$ref": "#/$defs/CalculationStatistics"
                }
            }
        },
        "GetCalculationExecutionStatusRequest": {
            "type": "object",
            "properties": {
                "CalculationExecutionId": {
                    "$ref": "#/$defs/CalculationExecutionId"
                }
            }
        },
        "GetCapacityAssignmentConfigurationOutput": {
            "type": "object",
            "properties": {
                "CapacityAssignmentConfiguration": {
                    "$ref": "#/$defs/CapacityAssignmentConfiguration"
                }
            }
        },
        "CapacityAssignmentConfiguration": {
            "type": "object",
            "properties": {
                "CapacityReservationName": {
                    "$ref": "#/$defs/CapacityReservationName"
                },
                "CapacityAssignments": {
                    "$ref": "#/$defs/CapacityAssignmentsList"
                }
            }
        },
        "CapacityAssignmentsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityAssignment"
            }
        },
        "CapacityAssignment": {
            "type": "object",
            "properties": {
                "WorkGroupNames": {
                    "$ref": "#/$defs/WorkGroupNamesList"
                }
            }
        },
        "WorkGroupNamesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WorkGroupName"
            }
        },
        "GetCapacityAssignmentConfigurationInput": {
            "type": "object",
            "properties": {
                "CapacityReservationName": {
                    "$ref": "#/$defs/CapacityReservationName"
                }
            }
        },
        "GetCapacityReservationOutput": {
            "type": "object",
            "properties": {
                "CapacityReservation": {
                    "$ref": "#/$defs/CapacityReservation"
                }
            }
        },
        "CapacityReservation": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CapacityReservationName"
                },
                "Status": {
                    "$ref": "#/$defs/CapacityReservationStatus"
                },
                "TargetDpus": {
                    "$ref": "#/$defs/TargetDpusInteger"
                },
                "AllocatedDpus": {
                    "$ref": "#/$defs/AllocatedDpusInteger"
                },
                "LastAllocation": {
                    "$ref": "#/$defs/CapacityAllocation"
                },
                "LastSuccessfulAllocationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "CapacityReservationStatus": {
            "enum": [
                "PENDING",
                "ACTIVE",
                "CANCELLING",
                "CANCELLED",
                "FAILED",
                "UPDATE_PENDING"
            ]
        },
        "AllocatedDpusInteger": {
            "type": "integer",
            "format": "int32"
        },
        "CapacityAllocation": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/CapacityAllocationStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "RequestTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "RequestCompletionTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "CapacityAllocationStatus": {
            "enum": [
                "PENDING",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "GetCapacityReservationInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CapacityReservationName"
                }
            }
        },
        "GetDatabaseOutput": {
            "type": "object",
            "properties": {
                "Database": {
                    "$ref": "#/$defs/Database"
                }
            }
        },
        "Database": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                }
            }
        },
        "GetDatabaseInput": {
            "type": "object",
            "properties": {
                "CatalogName": {
                    "$ref": "#/$defs/CatalogNameString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "GetDataCatalogOutput": {
            "type": "object",
            "properties": {
                "DataCatalog": {
                    "$ref": "#/$defs/DataCatalog"
                }
            }
        },
        "GetDataCatalogInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CatalogNameString"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "GetNamedQueryOutput": {
            "type": "object",
            "properties": {
                "NamedQuery": {
                    "$ref": "#/$defs/NamedQuery"
                }
            }
        },
        "GetNamedQueryInput": {
            "type": "object",
            "properties": {
                "NamedQueryId": {
                    "$ref": "#/$defs/NamedQueryId"
                }
            }
        },
        "GetNotebookMetadataOutput": {
            "type": "object",
            "properties": {
                "NotebookMetadata": {
                    "$ref": "#/$defs/NotebookMetadata"
                }
            }
        },
        "GetNotebookMetadataInput": {
            "type": "object",
            "properties": {
                "NotebookId": {
                    "$ref": "#/$defs/NotebookId"
                }
            }
        },
        "GetPreparedStatementOutput": {
            "type": "object",
            "properties": {
                "PreparedStatement": {
                    "$ref": "#/$defs/PreparedStatement"
                }
            }
        },
        "GetPreparedStatementInput": {
            "type": "object",
            "properties": {
                "StatementName": {
                    "$ref": "#/$defs/StatementName"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "GetQueryExecutionOutput": {
            "type": "object",
            "properties": {
                "QueryExecution": {
                    "$ref": "#/$defs/QueryExecution"
                }
            }
        },
        "GetQueryExecutionInput": {
            "type": "object",
            "properties": {
                "QueryExecutionId": {
                    "$ref": "#/$defs/QueryExecutionId"
                }
            }
        },
        "GetQueryResultsOutput": {
            "type": "object",
            "properties": {
                "UpdateCount": {
                    "$ref": "#/$defs/Long"
                },
                "ResultSet": {
                    "$ref": "#/$defs/ResultSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ResultSet": {
            "type": "object",
            "properties": {
                "Rows": {
                    "$ref": "#/$defs/RowList"
                },
                "ResultSetMetadata": {
                    "$ref": "#/$defs/ResultSetMetadata"
                }
            }
        },
        "RowList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Row"
            }
        },
        "Row": {
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/$defs/datumList"
                }
            }
        },
        "datumList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Datum"
            }
        },
        "Datum": {
            "type": "object",
            "properties": {
                "VarCharValue": {
                    "$ref": "#/$defs/datumString"
                }
            }
        },
        "datumString": {
            "type": "string"
        },
        "ResultSetMetadata": {
            "type": "object",
            "properties": {
                "ColumnInfo": {
                    "$ref": "#/$defs/ColumnInfoList"
                }
            }
        },
        "ColumnInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnInfo"
            }
        },
        "ColumnInfo": {
            "type": "object",
            "properties": {
                "CatalogName": {
                    "$ref": "#/$defs/String"
                },
                "SchemaName": {
                    "$ref": "#/$defs/String"
                },
                "TableName": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Label": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "Precision": {
                    "$ref": "#/$defs/Integer"
                },
                "Scale": {
                    "$ref": "#/$defs/Integer"
                },
                "Nullable": {
                    "$ref": "#/$defs/ColumnNullable"
                },
                "CaseSensitive": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "ColumnNullable": {
            "enum": [
                "NOT_NULL",
                "NULLABLE",
                "UNKNOWN"
            ]
        },
        "Token": {
            "type": "string"
        },
        "GetQueryResultsInput": {
            "type": "object",
            "properties": {
                "QueryExecutionId": {
                    "$ref": "#/$defs/QueryExecutionId"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxQueryResults"
                }
            }
        },
        "MaxQueryResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetQueryRuntimeStatisticsOutput": {
            "type": "object",
            "properties": {
                "QueryRuntimeStatistics": {
                    "$ref": "#/$defs/QueryRuntimeStatistics"
                }
            }
        },
        "QueryRuntimeStatistics": {
            "type": "object",
            "properties": {
                "Timeline": {
                    "$ref": "#/$defs/QueryRuntimeStatisticsTimeline"
                },
                "Rows": {
                    "$ref": "#/$defs/QueryRuntimeStatisticsRows"
                },
                "OutputStage": {
                    "$ref": "#/$defs/QueryStage"
                }
            }
        },
        "QueryRuntimeStatisticsTimeline": {
            "type": "object",
            "properties": {
                "QueryQueueTimeInMillis": {
                    "$ref": "#/$defs/Long"
                },
                "ServicePreProcessingTimeInMillis": {
                    "$ref": "#/$defs/Long"
                },
                "QueryPlanningTimeInMillis": {
                    "$ref": "#/$defs/Long"
                },
                "EngineExecutionTimeInMillis": {
                    "$ref": "#/$defs/Long"
                },
                "ServiceProcessingTimeInMillis": {
                    "$ref": "#/$defs/Long"
                },
                "TotalExecutionTimeInMillis": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "QueryRuntimeStatisticsRows": {
            "type": "object",
            "properties": {
                "InputRows": {
                    "$ref": "#/$defs/Long"
                },
                "InputBytes": {
                    "$ref": "#/$defs/Long"
                },
                "OutputBytes": {
                    "$ref": "#/$defs/Long"
                },
                "OutputRows": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "QueryStage": {
            "type": "object",
            "properties": {
                "StageId": {
                    "$ref": "#/$defs/Long"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "OutputBytes": {
                    "$ref": "#/$defs/Long"
                },
                "OutputRows": {
                    "$ref": "#/$defs/Long"
                },
                "InputBytes": {
                    "$ref": "#/$defs/Long"
                },
                "InputRows": {
                    "$ref": "#/$defs/Long"
                },
                "ExecutionTime": {
                    "$ref": "#/$defs/Long"
                },
                "QueryStagePlan": {
                    "$ref": "#/$defs/QueryStagePlanNode"
                },
                "SubStages": {
                    "$ref": "#/$defs/QueryStages"
                }
            }
        },
        "QueryStagePlanNode": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Identifier": {
                    "$ref": "#/$defs/String"
                },
                "Children": {
                    "$ref": "#/$defs/QueryStagePlanNodes"
                },
                "RemoteSources": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "QueryStagePlanNodes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/QueryStagePlanNode"
            }
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "QueryStages": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/QueryStage"
            }
        },
        "GetQueryRuntimeStatisticsInput": {
            "type": "object",
            "properties": {
                "QueryExecutionId": {
                    "$ref": "#/$defs/QueryExecutionId"
                }
            }
        },
        "GetSessionResponse": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/NameString"
                },
                "EngineConfiguration": {
                    "$ref": "#/$defs/EngineConfiguration"
                },
                "NotebookVersion": {
                    "$ref": "#/$defs/NameString"
                },
                "SessionConfiguration": {
                    "$ref": "#/$defs/SessionConfiguration"
                },
                "Status": {
                    "$ref": "#/$defs/SessionStatus"
                },
                "Statistics": {
                    "$ref": "#/$defs/SessionStatistics"
                }
            }
        },
        "EngineConfiguration": {
            "type": "object",
            "properties": {
                "CoordinatorDpuSize": {
                    "$ref": "#/$defs/CoordinatorDpuSize"
                },
                "MaxConcurrentDpus": {
                    "$ref": "#/$defs/MaxConcurrentDpus"
                },
                "DefaultExecutorDpuSize": {
                    "$ref": "#/$defs/DefaultExecutorDpuSize"
                },
                "AdditionalConfigs": {
                    "$ref": "#/$defs/ParametersMap"
                },
                "SparkProperties": {
                    "$ref": "#/$defs/ParametersMap"
                }
            }
        },
        "CoordinatorDpuSize": {
            "type": "integer",
            "format": "int32"
        },
        "MaxConcurrentDpus": {
            "type": "integer",
            "format": "int32"
        },
        "DefaultExecutorDpuSize": {
            "type": "integer",
            "format": "int32"
        },
        "SessionConfiguration": {
            "type": "object",
            "properties": {
                "ExecutionRole": {
                    "$ref": "#/$defs/RoleArn"
                },
                "WorkingDirectory": {
                    "$ref": "#/$defs/ResultOutputLocation"
                },
                "IdleTimeoutSeconds": {
                    "$ref": "#/$defs/Long"
                },
                "EncryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                }
            }
        },
        "SessionStatus": {
            "type": "object",
            "properties": {
                "StartDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "LastModifiedDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "EndDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "IdleSinceDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "State": {
                    "$ref": "#/$defs/SessionState"
                },
                "StateChangeReason": {
                    "$ref": "#/$defs/DescriptionString"
                }
            }
        },
        "SessionState": {
            "enum": [
                "CREATING",
                "CREATED",
                "IDLE",
                "BUSY",
                "TERMINATING",
                "TERMINATED",
                "DEGRADED",
                "FAILED"
            ]
        },
        "SessionStatistics": {
            "type": "object",
            "properties": {
                "DpuExecutionInMillis": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "GetSessionRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                }
            }
        },
        "GetSessionStatusResponse": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "Status": {
                    "$ref": "#/$defs/SessionStatus"
                }
            }
        },
        "GetSessionStatusRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                }
            }
        },
        "GetTableMetadataOutput": {
            "type": "object",
            "properties": {
                "TableMetadata": {
                    "$ref": "#/$defs/TableMetadata"
                }
            }
        },
        "TableMetadata": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "CreateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastAccessTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "TableType": {
                    "$ref": "#/$defs/TableTypeString"
                },
                "Columns": {
                    "$ref": "#/$defs/ColumnList"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/ColumnList"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                }
            }
        },
        "TableTypeString": {
            "type": "string"
        },
        "ColumnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Column"
            }
        },
        "Column": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Type": {
                    "$ref": "#/$defs/TypeString"
                },
                "Comment": {
                    "$ref": "#/$defs/CommentString"
                }
            }
        },
        "TypeString": {
            "type": "string"
        },
        "CommentString": {
            "type": "string"
        },
        "GetTableMetadataInput": {
            "type": "object",
            "properties": {
                "CatalogName": {
                    "$ref": "#/$defs/CatalogNameString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "GetWorkGroupOutput": {
            "type": "object",
            "properties": {
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroup"
                }
            }
        },
        "WorkGroup": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "State": {
                    "$ref": "#/$defs/WorkGroupState"
                },
                "Configuration": {
                    "$ref": "#/$defs/WorkGroupConfiguration"
                },
                "Description": {
                    "$ref": "#/$defs/WorkGroupDescriptionString"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Date"
                },
                "IdentityCenterApplicationArn": {
                    "$ref": "#/$defs/IdentityCenterApplicationArn"
                }
            }
        },
        "WorkGroupState": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "IdentityCenterApplicationArn": {
            "type": "string"
        },
        "GetWorkGroupInput": {
            "type": "object",
            "properties": {
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "ImportNotebookOutput": {
            "type": "object",
            "properties": {
                "NotebookId": {
                    "$ref": "#/$defs/NotebookId"
                }
            }
        },
        "ImportNotebookInput": {
            "type": "object",
            "properties": {
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "Name": {
                    "$ref": "#/$defs/NotebookName"
                },
                "Payload": {
                    "$ref": "#/$defs/Payload"
                },
                "Type": {
                    "$ref": "#/$defs/NotebookType"
                },
                "NotebookS3LocationUri": {
                    "$ref": "#/$defs/S3Uri"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "ListApplicationDPUSizesOutput": {
            "type": "object",
            "properties": {
                "ApplicationDPUSizes": {
                    "$ref": "#/$defs/ApplicationDPUSizesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ApplicationDPUSizesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationDPUSizes"
            }
        },
        "ApplicationDPUSizes": {
            "type": "object",
            "properties": {
                "ApplicationRuntimeId": {
                    "$ref": "#/$defs/NameString"
                },
                "SupportedDPUSizes": {
                    "$ref": "#/$defs/SupportedDPUSizeList"
                }
            }
        },
        "SupportedDPUSizeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Integer"
            }
        },
        "ListApplicationDPUSizesInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxApplicationDPUSizesCount"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "MaxApplicationDPUSizesCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListCalculationExecutionsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/SessionManagerToken"
                },
                "Calculations": {
                    "$ref": "#/$defs/CalculationsList"
                }
            }
        },
        "SessionManagerToken": {
            "type": "string"
        },
        "CalculationsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CalculationSummary"
            }
        },
        "CalculationSummary": {
            "type": "object",
            "properties": {
                "CalculationExecutionId": {
                    "$ref": "#/$defs/CalculationExecutionId"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Status": {
                    "$ref": "#/$defs/CalculationStatus"
                }
            }
        },
        "ListCalculationExecutionsRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "StateFilter": {
                    "$ref": "#/$defs/CalculationExecutionState"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxCalculationsCount"
                },
                "NextToken": {
                    "$ref": "#/$defs/SessionManagerToken"
                }
            }
        },
        "MaxCalculationsCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListCapacityReservationsOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "CapacityReservations": {
                    "$ref": "#/$defs/CapacityReservationsList"
                }
            }
        },
        "CapacityReservationsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityReservation"
            }
        },
        "ListCapacityReservationsInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxCapacityReservationsCount"
                }
            }
        },
        "MaxCapacityReservationsCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListDatabasesOutput": {
            "type": "object",
            "properties": {
                "DatabaseList": {
                    "$ref": "#/$defs/DatabaseList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "DatabaseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Database"
            }
        },
        "ListDatabasesInput": {
            "type": "object",
            "properties": {
                "CatalogName": {
                    "$ref": "#/$defs/CatalogNameString"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxDatabasesCount"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "MaxDatabasesCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListDataCatalogsOutput": {
            "type": "object",
            "properties": {
                "DataCatalogsSummary": {
                    "$ref": "#/$defs/DataCatalogSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "DataCatalogSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataCatalogSummary"
            }
        },
        "DataCatalogSummary": {
            "type": "object",
            "properties": {
                "CatalogName": {
                    "$ref": "#/$defs/CatalogNameString"
                },
                "Type": {
                    "$ref": "#/$defs/DataCatalogType"
                },
                "Status": {
                    "$ref": "#/$defs/DataCatalogStatus"
                },
                "ConnectionType": {
                    "$ref": "#/$defs/ConnectionType"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ListDataCatalogsInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxDataCatalogsCount"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "MaxDataCatalogsCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListEngineVersionsOutput": {
            "type": "object",
            "properties": {
                "EngineVersions": {
                    "$ref": "#/$defs/EngineVersionsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "EngineVersionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EngineVersion"
            }
        },
        "ListEngineVersionsInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxEngineVersionsCount"
                }
            }
        },
        "MaxEngineVersionsCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListExecutorsResponse": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "NextToken": {
                    "$ref": "#/$defs/SessionManagerToken"
                },
                "ExecutorsSummary": {
                    "$ref": "#/$defs/ExecutorsSummaryList"
                }
            }
        },
        "ExecutorsSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExecutorsSummary"
            }
        },
        "ExecutorsSummary": {
            "type": "object",
            "properties": {
                "ExecutorId": {
                    "$ref": "#/$defs/ExecutorId"
                },
                "ExecutorType": {
                    "$ref": "#/$defs/ExecutorType"
                },
                "StartDateTime": {
                    "$ref": "#/$defs/Long"
                },
                "TerminationDateTime": {
                    "$ref": "#/$defs/Long"
                },
                "ExecutorState": {
                    "$ref": "#/$defs/ExecutorState"
                },
                "ExecutorSize": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "ExecutorId": {
            "type": "string"
        },
        "ExecutorType": {
            "enum": [
                "COORDINATOR",
                "GATEWAY",
                "WORKER"
            ]
        },
        "ExecutorState": {
            "enum": [
                "CREATING",
                "CREATED",
                "REGISTERED",
                "TERMINATING",
                "TERMINATED",
                "FAILED"
            ]
        },
        "ListExecutorsRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "ExecutorStateFilter": {
                    "$ref": "#/$defs/ExecutorState"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxListExecutorsCount"
                },
                "NextToken": {
                    "$ref": "#/$defs/SessionManagerToken"
                }
            }
        },
        "MaxListExecutorsCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListNamedQueriesOutput": {
            "type": "object",
            "properties": {
                "NamedQueryIds": {
                    "$ref": "#/$defs/NamedQueryIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListNamedQueriesInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxNamedQueriesCount"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "MaxNamedQueriesCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListNotebookMetadataOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "NotebookMetadataList": {
                    "$ref": "#/$defs/NotebookMetadataArray"
                }
            }
        },
        "NotebookMetadataArray": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NotebookMetadata"
            }
        },
        "ListNotebookMetadataInput": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterDefinition"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxNotebooksCount"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "FilterDefinition": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NotebookName"
                }
            }
        },
        "MaxNotebooksCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListNotebookSessionsResponse": {
            "type": "object",
            "properties": {
                "NotebookSessionsList": {
                    "$ref": "#/$defs/NotebookSessionsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "NotebookSessionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NotebookSessionSummary"
            }
        },
        "NotebookSessionSummary": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "ListNotebookSessionsRequest": {
            "type": "object",
            "properties": {
                "NotebookId": {
                    "$ref": "#/$defs/NotebookId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSessionsCount"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "MaxSessionsCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListPreparedStatementsOutput": {
            "type": "object",
            "properties": {
                "PreparedStatements": {
                    "$ref": "#/$defs/PreparedStatementsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "PreparedStatementsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PreparedStatementSummary"
            }
        },
        "PreparedStatementSummary": {
            "type": "object",
            "properties": {
                "StatementName": {
                    "$ref": "#/$defs/StatementName"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "ListPreparedStatementsInput": {
            "type": "object",
            "properties": {
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxPreparedStatementsCount"
                }
            }
        },
        "MaxPreparedStatementsCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListQueryExecutionsOutput": {
            "type": "object",
            "properties": {
                "QueryExecutionIds": {
                    "$ref": "#/$defs/QueryExecutionIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListQueryExecutionsInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxQueryExecutionsCount"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "MaxQueryExecutionsCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListSessionsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/SessionManagerToken"
                },
                "Sessions": {
                    "$ref": "#/$defs/SessionsList"
                }
            }
        },
        "SessionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SessionSummary"
            }
        },
        "SessionSummary": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/EngineVersion"
                },
                "NotebookVersion": {
                    "$ref": "#/$defs/NameString"
                },
                "Status": {
                    "$ref": "#/$defs/SessionStatus"
                }
            }
        },
        "ListSessionsRequest": {
            "type": "object",
            "properties": {
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "StateFilter": {
                    "$ref": "#/$defs/SessionState"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSessionsCount"
                },
                "NextToken": {
                    "$ref": "#/$defs/SessionManagerToken"
                }
            }
        },
        "ListTableMetadataOutput": {
            "type": "object",
            "properties": {
                "TableMetadataList": {
                    "$ref": "#/$defs/TableMetadataList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "TableMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TableMetadata"
            }
        },
        "ListTableMetadataInput": {
            "type": "object",
            "properties": {
                "CatalogName": {
                    "$ref": "#/$defs/CatalogNameString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "Expression": {
                    "$ref": "#/$defs/ExpressionString"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxTableMetadataCount"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                }
            }
        },
        "ExpressionString": {
            "type": "string"
        },
        "MaxTableMetadataCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListTagsForResourceOutput": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListTagsForResourceInput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxTagsCount"
                }
            }
        },
        "AmazonResourceName": {
            "type": "string"
        },
        "MaxTagsCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListWorkGroupsOutput": {
            "type": "object",
            "properties": {
                "WorkGroups": {
                    "$ref": "#/$defs/WorkGroupsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "WorkGroupsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WorkGroupSummary"
            }
        },
        "WorkGroupSummary": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "State": {
                    "$ref": "#/$defs/WorkGroupState"
                },
                "Description": {
                    "$ref": "#/$defs/WorkGroupDescriptionString"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Date"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/EngineVersion"
                },
                "IdentityCenterApplicationArn": {
                    "$ref": "#/$defs/IdentityCenterApplicationArn"
                }
            }
        },
        "ListWorkGroupsInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxWorkGroupsCount"
                }
            }
        },
        "MaxWorkGroupsCount": {
            "type": "integer",
            "format": "int32"
        },
        "PutCapacityAssignmentConfigurationOutput": {
            "type": "object",
            "properties": {}
        },
        "PutCapacityAssignmentConfigurationInput": {
            "type": "object",
            "properties": {
                "CapacityReservationName": {
                    "$ref": "#/$defs/CapacityReservationName"
                },
                "CapacityAssignments": {
                    "$ref": "#/$defs/CapacityAssignmentsList"
                }
            }
        },
        "StartCalculationExecutionResponse": {
            "type": "object",
            "properties": {
                "CalculationExecutionId": {
                    "$ref": "#/$defs/CalculationExecutionId"
                },
                "State": {
                    "$ref": "#/$defs/CalculationExecutionState"
                }
            }
        },
        "StartCalculationExecutionRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "CalculationConfiguration": {
                    "$ref": "#/$defs/CalculationConfiguration"
                },
                "CodeBlock": {
                    "$ref": "#/$defs/CodeBlock"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/IdempotencyToken"
                }
            }
        },
        "CalculationConfiguration": {
            "type": "object",
            "properties": {
                "CodeBlock": {
                    "$ref": "#/$defs/CodeBlock"
                }
            }
        },
        "StartQueryExecutionOutput": {
            "type": "object",
            "properties": {
                "QueryExecutionId": {
                    "$ref": "#/$defs/QueryExecutionId"
                }
            }
        },
        "StartQueryExecutionInput": {
            "type": "object",
            "properties": {
                "QueryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/IdempotencyToken"
                },
                "QueryExecutionContext": {
                    "$ref": "#/$defs/QueryExecutionContext"
                },
                "ResultConfiguration": {
                    "$ref": "#/$defs/ResultConfiguration"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "ExecutionParameters": {
                    "$ref": "#/$defs/ExecutionParameters"
                },
                "ResultReuseConfiguration": {
                    "$ref": "#/$defs/ResultReuseConfiguration"
                }
            }
        },
        "StartSessionResponse": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "State": {
                    "$ref": "#/$defs/SessionState"
                }
            }
        },
        "StartSessionRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "EngineConfiguration": {
                    "$ref": "#/$defs/EngineConfiguration"
                },
                "NotebookVersion": {
                    "$ref": "#/$defs/NameString"
                },
                "SessionIdleTimeoutInMinutes": {
                    "$ref": "#/$defs/SessionIdleTimeoutInMinutes"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/IdempotencyToken"
                }
            }
        },
        "SessionIdleTimeoutInMinutes": {
            "type": "integer",
            "format": "int32"
        },
        "StopCalculationExecutionResponse": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/CalculationExecutionState"
                }
            }
        },
        "StopCalculationExecutionRequest": {
            "type": "object",
            "properties": {
                "CalculationExecutionId": {
                    "$ref": "#/$defs/CalculationExecutionId"
                }
            }
        },
        "StopQueryExecutionOutput": {
            "type": "object",
            "properties": {}
        },
        "StopQueryExecutionInput": {
            "type": "object",
            "properties": {
                "QueryExecutionId": {
                    "$ref": "#/$defs/QueryExecutionId"
                }
            }
        },
        "TagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "TagResourceInput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TerminateSessionResponse": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/SessionState"
                }
            }
        },
        "TerminateSessionRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                }
            }
        },
        "UntagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceInput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateCapacityReservationOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateCapacityReservationInput": {
            "type": "object",
            "properties": {
                "TargetDpus": {
                    "$ref": "#/$defs/TargetDpusInteger"
                },
                "Name": {
                    "$ref": "#/$defs/CapacityReservationName"
                }
            }
        },
        "UpdateDataCatalogOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateDataCatalogInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CatalogNameString"
                },
                "Type": {
                    "$ref": "#/$defs/DataCatalogType"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                }
            }
        },
        "UpdateNamedQueryOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateNamedQueryInput": {
            "type": "object",
            "properties": {
                "NamedQueryId": {
                    "$ref": "#/$defs/NamedQueryId"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/NamedQueryDescriptionString"
                },
                "QueryString": {
                    "$ref": "#/$defs/QueryString"
                }
            }
        },
        "NamedQueryDescriptionString": {
            "type": "string"
        },
        "UpdateNotebookOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateNotebookInput": {
            "type": "object",
            "properties": {
                "NotebookId": {
                    "$ref": "#/$defs/NotebookId"
                },
                "Payload": {
                    "$ref": "#/$defs/Payload"
                },
                "Type": {
                    "$ref": "#/$defs/NotebookType"
                },
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "UpdateNotebookMetadataOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateNotebookMetadataInput": {
            "type": "object",
            "properties": {
                "NotebookId": {
                    "$ref": "#/$defs/NotebookId"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "Name": {
                    "$ref": "#/$defs/NotebookName"
                }
            }
        },
        "UpdatePreparedStatementOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdatePreparedStatementInput": {
            "type": "object",
            "properties": {
                "StatementName": {
                    "$ref": "#/$defs/StatementName"
                },
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "QueryStatement": {
                    "$ref": "#/$defs/QueryString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                }
            }
        },
        "UpdateWorkGroupOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateWorkGroupInput": {
            "type": "object",
            "properties": {
                "WorkGroup": {
                    "$ref": "#/$defs/WorkGroupName"
                },
                "Description": {
                    "$ref": "#/$defs/WorkGroupDescriptionString"
                },
                "ConfigurationUpdates": {
                    "$ref": "#/$defs/WorkGroupConfigurationUpdates"
                },
                "State": {
                    "$ref": "#/$defs/WorkGroupState"
                }
            }
        },
        "WorkGroupConfigurationUpdates": {
            "type": "object",
            "properties": {
                "EnforceWorkGroupConfiguration": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "ResultConfigurationUpdates": {
                    "$ref": "#/$defs/ResultConfigurationUpdates"
                },
                "PublishCloudWatchMetricsEnabled": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "BytesScannedCutoffPerQuery": {
                    "$ref": "#/$defs/BytesScannedCutoffValue"
                },
                "RemoveBytesScannedCutoffPerQuery": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "RequesterPaysEnabled": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/EngineVersion"
                },
                "RemoveCustomerContentEncryptionConfiguration": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "AdditionalConfiguration": {
                    "$ref": "#/$defs/NameString"
                },
                "ExecutionRole": {
                    "$ref": "#/$defs/RoleArn"
                },
                "CustomerContentEncryptionConfiguration": {
                    "$ref": "#/$defs/CustomerContentEncryptionConfiguration"
                },
                "EnableMinimumEncryptionConfiguration": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "QueryResultsS3AccessGrantsConfiguration": {
                    "$ref": "#/$defs/QueryResultsS3AccessGrantsConfiguration"
                }
            }
        },
        "ResultConfigurationUpdates": {
            "type": "object",
            "properties": {
                "OutputLocation": {
                    "$ref": "#/$defs/ResultOutputLocation"
                },
                "RemoveOutputLocation": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "EncryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                },
                "RemoveEncryptionConfiguration": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "RemoveExpectedBucketOwner": {
                    "$ref": "#/$defs/BoxedBoolean"
                },
                "AclConfiguration": {
                    "$ref": "#/$defs/AclConfiguration"
                },
                "RemoveAclConfiguration": {
                    "$ref": "#/$defs/BoxedBoolean"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://athena-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://athena-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://athena.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://athena.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}