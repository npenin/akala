{
    "name": "sms-voice",
    "commands": [
        {
            "name": "CreateConfigurationSet",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/sms-voice/configuration-sets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateConfigurationSetResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateConfigurationSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ConfigurationSetName": {}
                    }
                }
            }
        },
        {
            "name": "CreateConfigurationSetEventDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/sms-voice/configuration-sets/{ConfigurationSetName}/event-destinations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateConfigurationSetEventDestinationResponse"
                    },
                    "inject": [
                        "params.0.ConfigurationSetName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateConfigurationSetEventDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ConfigurationSetName": {},
                        "EventDestination": {},
                        "EventDestinationName": {}
                    }
                }
            }
        },
        {
            "name": "DeleteConfigurationSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/sms-voice/configuration-sets/{ConfigurationSetName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteConfigurationSetResponse"
                    },
                    "inject": [
                        "params.0.ConfigurationSetName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteConfigurationSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ConfigurationSetName": {}
                    }
                }
            }
        },
        {
            "name": "DeleteConfigurationSetEventDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "EventDestinationName": "route.EventDestinationName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/sms-voice/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteConfigurationSetEventDestinationResponse"
                    },
                    "inject": [
                        "params.0.ConfigurationSetName",
                        "params.0.EventDestinationName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteConfigurationSetEventDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ConfigurationSetName": {},
                        "EventDestinationName": {}
                    }
                }
            }
        },
        {
            "name": "GetConfigurationSetEventDestinations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/sms-voice/configuration-sets/{ConfigurationSetName}/event-destinations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConfigurationSetEventDestinationsResponse"
                    },
                    "inject": [
                        "params.0.ConfigurationSetName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetConfigurationSetEventDestinationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ConfigurationSetName": {}
                    }
                }
            }
        },
        {
            "name": "ListConfigurationSets",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/sms-voice/configuration-sets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListConfigurationSetsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListConfigurationSetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "PageSize": {}
                    }
                }
            }
        },
        {
            "name": "SendVoiceMessage",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/sms-voice/voice/message"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendVoiceMessageResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SendVoiceMessageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CallerId": {},
                        "ConfigurationSetName": {},
                        "Content": {},
                        "DestinationPhoneNumber": {},
                        "OriginationPhoneNumber": {}
                    }
                }
            }
        },
        {
            "name": "UpdateConfigurationSetEventDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "EventDestinationName": "route.EventDestinationName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/sms-voice/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateConfigurationSetEventDestinationResponse"
                    },
                    "inject": [
                        "params.0.ConfigurationSetName",
                        "params.0.EventDestinationName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateConfigurationSetEventDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ConfigurationSetName": {},
                        "EventDestination": {},
                        "EventDestinationName": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateConfigurationSetRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/WordCharactersWithDelimiters"
                }
            }
        },
        "WordCharactersWithDelimiters": {
            "type": "string"
        },
        "CreateConfigurationSetResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateConfigurationSetEventDestinationRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/__string"
                },
                "EventDestination": {
                    "$ref": "#/$defs/EventDestinationDefinition"
                },
                "EventDestinationName": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "__string": {
            "type": "string"
        },
        "EventDestinationDefinition": {
            "type": "object",
            "properties": {
                "CloudWatchLogsDestination": {
                    "$ref": "#/$defs/CloudWatchLogsDestination"
                },
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "KinesisFirehoseDestination": {
                    "$ref": "#/$defs/KinesisFirehoseDestination"
                },
                "MatchingEventTypes": {
                    "$ref": "#/$defs/EventTypes"
                },
                "SnsDestination": {
                    "$ref": "#/$defs/SnsDestination"
                }
            }
        },
        "CloudWatchLogsDestination": {
            "type": "object",
            "properties": {
                "IamRoleArn": {
                    "$ref": "#/$defs/String"
                },
                "LogGroupArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "Boolean": {
            "type": "boolean"
        },
        "KinesisFirehoseDestination": {
            "type": "object",
            "properties": {
                "DeliveryStreamArn": {
                    "$ref": "#/$defs/String"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EventTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventType"
            }
        },
        "EventType": {
            "enum": [
                "INITIATED_CALL",
                "RINGING",
                "ANSWERED",
                "COMPLETED_CALL",
                "BUSY",
                "FAILED",
                "NO_ANSWER"
            ]
        },
        "SnsDestination": {
            "type": "object",
            "properties": {
                "TopicArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NonEmptyString": {
            "type": "string"
        },
        "CreateConfigurationSetEventDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteConfigurationSetRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteConfigurationSetResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteConfigurationSetEventDestinationRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/__string"
                },
                "EventDestinationName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteConfigurationSetEventDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "GetConfigurationSetEventDestinationsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetConfigurationSetEventDestinationsResponse": {
            "type": "object",
            "properties": {
                "EventDestinations": {
                    "$ref": "#/$defs/EventDestinations"
                }
            }
        },
        "EventDestinations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventDestination"
            }
        },
        "EventDestination": {
            "type": "object",
            "properties": {
                "CloudWatchLogsDestination": {
                    "$ref": "#/$defs/CloudWatchLogsDestination"
                },
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "KinesisFirehoseDestination": {
                    "$ref": "#/$defs/KinesisFirehoseDestination"
                },
                "MatchingEventTypes": {
                    "$ref": "#/$defs/EventTypes"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "SnsDestination": {
                    "$ref": "#/$defs/SnsDestination"
                }
            }
        },
        "ListConfigurationSetsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "PageSize": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListConfigurationSetsResponse": {
            "type": "object",
            "properties": {
                "ConfigurationSets": {
                    "$ref": "#/$defs/ConfigurationSets"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenString"
                }
            }
        },
        "ConfigurationSets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WordCharactersWithDelimiters"
            }
        },
        "NextTokenString": {
            "type": "string"
        },
        "SendVoiceMessageRequest": {
            "type": "object",
            "properties": {
                "CallerId": {
                    "$ref": "#/$defs/String"
                },
                "ConfigurationSetName": {
                    "$ref": "#/$defs/WordCharactersWithDelimiters"
                },
                "Content": {
                    "$ref": "#/$defs/VoiceMessageContent"
                },
                "DestinationPhoneNumber": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "OriginationPhoneNumber": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "VoiceMessageContent": {
            "type": "object",
            "properties": {
                "CallInstructionsMessage": {
                    "$ref": "#/$defs/CallInstructionsMessageType"
                },
                "PlainTextMessage": {
                    "$ref": "#/$defs/PlainTextMessageType"
                },
                "SSMLMessage": {
                    "$ref": "#/$defs/SSMLMessageType"
                }
            }
        },
        "CallInstructionsMessageType": {
            "type": "object",
            "properties": {
                "Text": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "PlainTextMessageType": {
            "type": "object",
            "properties": {
                "LanguageCode": {
                    "$ref": "#/$defs/String"
                },
                "Text": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "VoiceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SSMLMessageType": {
            "type": "object",
            "properties": {
                "LanguageCode": {
                    "$ref": "#/$defs/String"
                },
                "Text": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "VoiceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SendVoiceMessageResponse": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpdateConfigurationSetEventDestinationRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/__string"
                },
                "EventDestination": {
                    "$ref": "#/$defs/EventDestinationDefinition"
                },
                "EventDestinationName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateConfigurationSetEventDestinationResponse": {
            "type": "object",
            "properties": {}
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://sms-voice.pinpoint-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://sms-voice.pinpoint-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://sms-voice.pinpoint.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://sms-voice.pinpoint.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                }
            ]
        }
    }
}
