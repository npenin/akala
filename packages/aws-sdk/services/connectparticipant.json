{
    "name": "connect",
    "commands": [
        {
            "name": "CancelParticipantAuthentication",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/participant/cancel-authentication"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelParticipantAuthenticationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelParticipantAuthenticationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SessionId": {},
                        "ConnectionToken": {}
                    }
                }
            }
        },
        {
            "name": "CompleteAttachmentUpload",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/participant/complete-attachment-upload"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CompleteAttachmentUploadResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CompleteAttachmentUploadRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AttachmentIds": {},
                        "ClientToken": {},
                        "ConnectionToken": {}
                    }
                }
            }
        },
        {
            "name": "CreateParticipantConnection",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/participant/connection"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateParticipantConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateParticipantConnectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Type": {},
                        "ParticipantToken": {},
                        "ConnectParticipant": {}
                    }
                }
            }
        },
        {
            "name": "DescribeView",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ViewToken": "route.ViewToken",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/participant/views/{ViewToken}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeViewResponse"
                    },
                    "inject": [
                        "param.0.ViewToken",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeViewRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ViewToken": {},
                        "ConnectionToken": {}
                    }
                }
            }
        },
        {
            "name": "DisconnectParticipant",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/participant/disconnect"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisconnectParticipantResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisconnectParticipantRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ClientToken": {},
                        "ConnectionToken": {}
                    }
                }
            }
        },
        {
            "name": "GetAttachment",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/participant/attachment"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAttachmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAttachmentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AttachmentId": {},
                        "ConnectionToken": {},
                        "UrlExpiryInSeconds": {}
                    }
                }
            }
        },
        {
            "name": "GetAuthenticationUrl",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/participant/authentication-url"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAuthenticationUrlResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAuthenticationUrlRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SessionId": {},
                        "RedirectUri": {},
                        "ConnectionToken": {}
                    }
                }
            }
        },
        {
            "name": "GetTranscript",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/participant/transcript"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTranscriptResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTranscriptRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ContactId": {},
                        "MaxResults": {},
                        "NextToken": {},
                        "ScanDirection": {},
                        "SortOrder": {},
                        "StartPosition": {},
                        "ConnectionToken": {}
                    }
                }
            }
        },
        {
            "name": "SendEvent",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/participant/event"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendEventResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendEventRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ContentType": {},
                        "Content": {},
                        "ClientToken": {},
                        "ConnectionToken": {}
                    }
                }
            }
        },
        {
            "name": "SendMessage",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/participant/message"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendMessageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendMessageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ContentType": {},
                        "Content": {},
                        "ClientToken": {},
                        "ConnectionToken": {}
                    }
                }
            }
        },
        {
            "name": "StartAttachmentUpload",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/participant/start-attachment-upload"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartAttachmentUploadResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartAttachmentUploadRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ContentType": {},
                        "AttachmentSizeInBytes": {},
                        "AttachmentName": {},
                        "ClientToken": {},
                        "ConnectionToken": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CancelParticipantAuthenticationRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "ConnectionToken": {
                    "$ref": "#/$defs/ParticipantToken"
                }
            }
        },
        "SessionId": {
            "type": "string"
        },
        "ParticipantToken": {
            "type": "string"
        },
        "CancelParticipantAuthenticationResponse": {
            "type": "object",
            "properties": {}
        },
        "CompleteAttachmentUploadRequest": {
            "type": "object",
            "properties": {
                "AttachmentIds": {
                    "$ref": "#/$defs/AttachmentIdList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/NonEmptyClientToken"
                },
                "ConnectionToken": {
                    "$ref": "#/$defs/ParticipantToken"
                }
            }
        },
        "AttachmentIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ArtifactId"
            }
        },
        "ArtifactId": {
            "type": "string"
        },
        "NonEmptyClientToken": {
            "type": "string"
        },
        "CompleteAttachmentUploadResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateParticipantConnectionRequest": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ConnectionTypeList"
                },
                "ParticipantToken": {
                    "$ref": "#/$defs/ParticipantToken"
                },
                "ConnectParticipant": {
                    "$ref": "#/$defs/Bool"
                }
            }
        },
        "ConnectionTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConnectionType"
            }
        },
        "ConnectionType": {
            "enum": [
                "WEBSOCKET",
                "CONNECTION_CREDENTIALS"
            ]
        },
        "Bool": {
            "type": "boolean"
        },
        "CreateParticipantConnectionResponse": {
            "type": "object",
            "properties": {
                "Websocket": {
                    "$ref": "#/$defs/Websocket"
                },
                "ConnectionCredentials": {
                    "$ref": "#/$defs/ConnectionCredentials"
                }
            }
        },
        "Websocket": {
            "type": "object",
            "properties": {
                "Url": {
                    "$ref": "#/$defs/PreSignedConnectionUrl"
                },
                "ConnectionExpiry": {
                    "$ref": "#/$defs/ISO8601Datetime"
                }
            }
        },
        "PreSignedConnectionUrl": {
            "type": "string"
        },
        "ISO8601Datetime": {
            "type": "string"
        },
        "ConnectionCredentials": {
            "type": "object",
            "properties": {
                "ConnectionToken": {
                    "$ref": "#/$defs/ParticipantToken"
                },
                "Expiry": {
                    "$ref": "#/$defs/ISO8601Datetime"
                }
            }
        },
        "DescribeViewRequest": {
            "type": "object",
            "properties": {
                "ViewToken": {
                    "$ref": "#/$defs/ViewToken"
                },
                "ConnectionToken": {
                    "$ref": "#/$defs/ParticipantToken"
                }
            }
        },
        "ViewToken": {
            "type": "string"
        },
        "DescribeViewResponse": {
            "type": "object",
            "properties": {
                "View": {
                    "$ref": "#/$defs/View"
                }
            }
        },
        "View": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ViewId"
                },
                "Arn": {
                    "$ref": "#/$defs/ARN"
                },
                "Name": {
                    "$ref": "#/$defs/ViewName"
                },
                "Version": {
                    "$ref": "#/$defs/ViewVersion"
                },
                "Content": {
                    "$ref": "#/$defs/ViewContent"
                }
            }
        },
        "ViewId": {
            "type": "string"
        },
        "ARN": {
            "type": "string"
        },
        "ViewName": {
            "type": "string"
        },
        "ViewVersion": {
            "type": "integer",
            "format": "int32"
        },
        "ViewContent": {
            "type": "object",
            "properties": {
                "InputSchema": {
                    "$ref": "#/$defs/ViewInputSchema"
                },
                "Template": {
                    "$ref": "#/$defs/ViewTemplate"
                },
                "Actions": {
                    "$ref": "#/$defs/ViewActions"
                }
            }
        },
        "ViewInputSchema": {
            "type": "string"
        },
        "ViewTemplate": {
            "type": "string"
        },
        "ViewActions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ViewAction"
            }
        },
        "ViewAction": {
            "type": "string"
        },
        "DisconnectParticipantRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "ConnectionToken": {
                    "$ref": "#/$defs/ParticipantToken"
                }
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "DisconnectParticipantResponse": {
            "type": "object",
            "properties": {}
        },
        "GetAttachmentRequest": {
            "type": "object",
            "properties": {
                "AttachmentId": {
                    "$ref": "#/$defs/ArtifactId"
                },
                "ConnectionToken": {
                    "$ref": "#/$defs/ParticipantToken"
                },
                "UrlExpiryInSeconds": {
                    "$ref": "#/$defs/URLExpiryInSeconds"
                }
            }
        },
        "URLExpiryInSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "GetAttachmentResponse": {
            "type": "object",
            "properties": {
                "Url": {
                    "$ref": "#/$defs/PreSignedAttachmentUrl"
                },
                "UrlExpiry": {
                    "$ref": "#/$defs/ISO8601Datetime"
                },
                "AttachmentSizeInBytes": {
                    "$ref": "#/$defs/AttachmentSizeInBytes"
                }
            }
        },
        "PreSignedAttachmentUrl": {
            "type": "string"
        },
        "AttachmentSizeInBytes": {
            "type": "integer",
            "format": "int64"
        },
        "GetAuthenticationUrlRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/SessionId"
                },
                "RedirectUri": {
                    "$ref": "#/$defs/RedirectURI"
                },
                "ConnectionToken": {
                    "$ref": "#/$defs/ParticipantToken"
                }
            }
        },
        "RedirectURI": {
            "type": "string"
        },
        "GetAuthenticationUrlResponse": {
            "type": "object",
            "properties": {
                "AuthenticationUrl": {
                    "$ref": "#/$defs/AuthenticationUrl"
                }
            }
        },
        "AuthenticationUrl": {
            "type": "string"
        },
        "GetTranscriptRequest": {
            "type": "object",
            "properties": {
                "ContactId": {
                    "$ref": "#/$defs/ContactId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ScanDirection": {
                    "$ref": "#/$defs/ScanDirection"
                },
                "SortOrder": {
                    "$ref": "#/$defs/SortKey"
                },
                "StartPosition": {
                    "$ref": "#/$defs/StartPosition"
                },
                "ConnectionToken": {
                    "$ref": "#/$defs/ParticipantToken"
                }
            }
        },
        "ContactId": {
            "type": "string"
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "NextToken": {
            "type": "string"
        },
        "ScanDirection": {
            "enum": [
                "FORWARD",
                "BACKWARD"
            ]
        },
        "SortKey": {
            "enum": [
                "DESCENDING",
                "ASCENDING"
            ]
        },
        "StartPosition": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ChatItemId"
                },
                "AbsoluteTime": {
                    "$ref": "#/$defs/Instant"
                },
                "MostRecent": {
                    "$ref": "#/$defs/MostRecent"
                }
            }
        },
        "ChatItemId": {
            "type": "string"
        },
        "Instant": {
            "type": "string"
        },
        "MostRecent": {
            "type": "integer",
            "format": "int32"
        },
        "GetTranscriptResponse": {
            "type": "object",
            "properties": {
                "InitialContactId": {
                    "$ref": "#/$defs/ContactId"
                },
                "Transcript": {
                    "$ref": "#/$defs/Transcript"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Transcript": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Item"
            }
        },
        "Item": {
            "type": "object",
            "properties": {
                "AbsoluteTime": {
                    "$ref": "#/$defs/Instant"
                },
                "Content": {
                    "$ref": "#/$defs/ChatContent"
                },
                "ContentType": {
                    "$ref": "#/$defs/ChatContentType"
                },
                "Id": {
                    "$ref": "#/$defs/ChatItemId"
                },
                "Type": {
                    "$ref": "#/$defs/ChatItemType"
                },
                "ParticipantId": {
                    "$ref": "#/$defs/ParticipantId"
                },
                "DisplayName": {
                    "$ref": "#/$defs/DisplayName"
                },
                "ParticipantRole": {
                    "$ref": "#/$defs/ParticipantRole"
                },
                "Attachments": {
                    "$ref": "#/$defs/Attachments"
                },
                "MessageMetadata": {
                    "$ref": "#/$defs/MessageMetadata"
                },
                "RelatedContactId": {
                    "$ref": "#/$defs/ContactId"
                },
                "ContactId": {
                    "$ref": "#/$defs/ContactId"
                }
            }
        },
        "ChatContent": {
            "type": "string"
        },
        "ChatContentType": {
            "type": "string"
        },
        "ChatItemType": {
            "enum": [
                "TYPING",
                "PARTICIPANT_JOINED",
                "PARTICIPANT_LEFT",
                "CHAT_ENDED",
                "TRANSFER_SUCCEEDED",
                "TRANSFER_FAILED",
                "MESSAGE",
                "EVENT",
                "ATTACHMENT",
                "CONNECTION_ACK",
                "MESSAGE_DELIVERED",
                "MESSAGE_READ"
            ]
        },
        "ParticipantId": {
            "type": "string"
        },
        "DisplayName": {
            "type": "string"
        },
        "ParticipantRole": {
            "enum": [
                "AGENT",
                "CUSTOMER",
                "SYSTEM",
                "CUSTOM_BOT",
                "SUPERVISOR"
            ]
        },
        "Attachments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttachmentItem"
            }
        },
        "AttachmentItem": {
            "type": "object",
            "properties": {
                "ContentType": {
                    "$ref": "#/$defs/ContentType"
                },
                "AttachmentId": {
                    "$ref": "#/$defs/ArtifactId"
                },
                "AttachmentName": {
                    "$ref": "#/$defs/AttachmentName"
                },
                "Status": {
                    "$ref": "#/$defs/ArtifactStatus"
                }
            }
        },
        "ContentType": {
            "type": "string"
        },
        "AttachmentName": {
            "type": "string"
        },
        "ArtifactStatus": {
            "enum": [
                "APPROVED",
                "REJECTED",
                "IN_PROGRESS"
            ]
        },
        "MessageMetadata": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "$ref": "#/$defs/ChatItemId"
                },
                "Receipts": {
                    "$ref": "#/$defs/Receipts"
                }
            }
        },
        "Receipts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Receipt"
            }
        },
        "Receipt": {
            "type": "object",
            "properties": {
                "DeliveredTimestamp": {
                    "$ref": "#/$defs/Instant"
                },
                "ReadTimestamp": {
                    "$ref": "#/$defs/Instant"
                },
                "RecipientParticipantId": {
                    "$ref": "#/$defs/ParticipantId"
                }
            }
        },
        "SendEventRequest": {
            "type": "object",
            "properties": {
                "ContentType": {
                    "$ref": "#/$defs/ChatContentType"
                },
                "Content": {
                    "$ref": "#/$defs/ChatContent"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "ConnectionToken": {
                    "$ref": "#/$defs/ParticipantToken"
                }
            }
        },
        "SendEventResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ChatItemId"
                },
                "AbsoluteTime": {
                    "$ref": "#/$defs/Instant"
                }
            }
        },
        "SendMessageRequest": {
            "type": "object",
            "properties": {
                "ContentType": {
                    "$ref": "#/$defs/ChatContentType"
                },
                "Content": {
                    "$ref": "#/$defs/ChatContent"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "ConnectionToken": {
                    "$ref": "#/$defs/ParticipantToken"
                }
            }
        },
        "SendMessageResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ChatItemId"
                },
                "AbsoluteTime": {
                    "$ref": "#/$defs/Instant"
                }
            }
        },
        "StartAttachmentUploadRequest": {
            "type": "object",
            "properties": {
                "ContentType": {
                    "$ref": "#/$defs/ContentType"
                },
                "AttachmentSizeInBytes": {
                    "$ref": "#/$defs/AttachmentSizeInBytes"
                },
                "AttachmentName": {
                    "$ref": "#/$defs/AttachmentName"
                },
                "ClientToken": {
                    "$ref": "#/$defs/NonEmptyClientToken"
                },
                "ConnectionToken": {
                    "$ref": "#/$defs/ParticipantToken"
                }
            }
        },
        "StartAttachmentUploadResponse": {
            "type": "object",
            "properties": {
                "AttachmentId": {
                    "$ref": "#/$defs/ArtifactId"
                },
                "UploadMetadata": {
                    "$ref": "#/$defs/UploadMetadata"
                }
            }
        },
        "UploadMetadata": {
            "type": "object",
            "properties": {
                "Url": {
                    "$ref": "#/$defs/UploadMetadataUrl"
                },
                "UrlExpiry": {
                    "$ref": "#/$defs/ISO8601Datetime"
                },
                "HeadersToInclude": {
                    "$ref": "#/$defs/UploadMetadataSignedHeaders"
                }
            }
        },
        "UploadMetadataUrl": {
            "type": "string"
        },
        "UploadMetadataSignedHeaders": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/UploadMetadataSignedHeadersValue"
            }
        },
        "UploadMetadataSignedHeadersValue": {
            "type": "string"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://participant.connect-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://participant.connect.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://participant.connect-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://participant.connect.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://participant.connect.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}