{
    "name": "apprunner",
    "commands": [
        {
            "name": "AssociateCustomDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateCustomDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateCustomDomainResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateCustomDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateAutoScalingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateAutoScalingConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAutoScalingConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAutoScalingConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateObservabilityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateObservabilityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateObservabilityConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateObservabilityConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVpcConnector",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateVpcConnector"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpcConnectorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpcConnectorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVpcIngressConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateVpcIngressConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpcIngressConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpcIngressConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAutoScalingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteAutoScalingConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAutoScalingConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAutoScalingConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteObservabilityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteObservabilityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteObservabilityConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteObservabilityConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVpcConnector",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteVpcConnector"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVpcConnectorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpcConnectorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVpcIngressConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteVpcIngressConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVpcIngressConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpcIngressConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAutoScalingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeAutoScalingConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAutoScalingConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAutoScalingConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCustomDomains",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeCustomDomains"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCustomDomainsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCustomDomainsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeObservabilityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeObservabilityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeObservabilityConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeObservabilityConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcConnector",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeVpcConnector"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcConnectorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcConnectorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcIngressConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeVpcIngressConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcIngressConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcIngressConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateCustomDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateCustomDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateCustomDomainResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateCustomDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAutoScalingConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListAutoScalingConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAutoScalingConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAutoScalingConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListConnectionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListConnectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListObservabilityConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListObservabilityConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListObservabilityConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListObservabilityConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListOperations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListOperations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOperationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOperationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListServices",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListServices"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListServicesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListServicesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListServicesForAutoScalingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListServicesForAutoScalingConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListServicesForAutoScalingConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListServicesForAutoScalingConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListVpcConnectors",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListVpcConnectors"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVpcConnectorsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListVpcConnectorsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListVpcIngressConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListVpcIngressConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVpcIngressConnectionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListVpcIngressConnectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PauseService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PauseService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PauseServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PauseServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResumeService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResumeService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResumeServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResumeServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartDeployment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartDeployment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartDeploymentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartDeploymentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDefaultAutoScalingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDefaultAutoScalingConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDefaultAutoScalingConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDefaultAutoScalingConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateVpcIngressConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateVpcIngressConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateVpcIngressConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateVpcIngressConnectionRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateCustomDomainResponse": {
            "type": "object",
            "properties": {
                "DNSTarget": {
                    "$ref": "#/$defs/String"
                },
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "CustomDomain": {
                    "$ref": "#/$defs/CustomDomain"
                },
                "VpcDNSTargets": {
                    "$ref": "#/$defs/VpcDNSTargetList"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "AppRunnerResourceArn": {
            "type": "string"
        },
        "CustomDomain": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "EnableWWWSubdomain": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "CertificateValidationRecords": {
                    "$ref": "#/$defs/CertificateValidationRecordList"
                },
                "Status": {
                    "$ref": "#/$defs/CustomDomainAssociationStatus"
                }
            }
        },
        "DomainName": {
            "type": "string"
        },
        "NullableBoolean": {
            "type": "boolean"
        },
        "CertificateValidationRecordList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CertificateValidationRecord"
            }
        },
        "CertificateValidationRecord": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/CertificateValidationRecordStatus"
                }
            }
        },
        "CertificateValidationRecordStatus": {
            "enum": [
                "PENDING_VALIDATION",
                "SUCCESS",
                "FAILED"
            ]
        },
        "CustomDomainAssociationStatus": {
            "enum": [
                "CREATING",
                "CREATE_FAILED",
                "ACTIVE",
                "DELETING",
                "DELETE_FAILED",
                "PENDING_CERTIFICATE_DNS_VALIDATION",
                "BINDING_CERTIFICATE"
            ]
        },
        "VpcDNSTargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcDNSTarget"
            }
        },
        "VpcDNSTarget": {
            "type": "object",
            "properties": {
                "VpcIngressConnectionArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "AssociateCustomDomainRequest": {
            "type": "object",
            "properties": {
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "EnableWWWSubdomain": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "CreateAutoScalingConfigurationResponse": {
            "type": "object",
            "properties": {
                "AutoScalingConfiguration": {
                    "$ref": "#/$defs/AutoScalingConfiguration"
                }
            }
        },
        "AutoScalingConfiguration": {
            "type": "object",
            "properties": {
                "AutoScalingConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "AutoScalingConfigurationName": {
                    "$ref": "#/$defs/AutoScalingConfigurationName"
                },
                "AutoScalingConfigurationRevision": {
                    "$ref": "#/$defs/AutoScalingConfigurationRevision"
                },
                "Latest": {
                    "$ref": "#/$defs/Latest"
                },
                "Status": {
                    "$ref": "#/$defs/AutoScalingConfigurationStatus"
                },
                "MaxConcurrency": {
                    "$ref": "#/$defs/MaxConcurrency"
                },
                "MinSize": {
                    "$ref": "#/$defs/MinSize"
                },
                "MaxSize": {
                    "$ref": "#/$defs/MaxSize"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DeletedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "HasAssociatedService": {
                    "$ref": "#/$defs/HasAssociatedService"
                },
                "IsDefault": {
                    "$ref": "#/$defs/IsDefault"
                }
            }
        },
        "AutoScalingConfigurationName": {
            "type": "string"
        },
        "AutoScalingConfigurationRevision": {
            "type": "integer",
            "format": "int32"
        },
        "Latest": {
            "type": "boolean"
        },
        "AutoScalingConfigurationStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "MaxConcurrency": {
            "type": "integer",
            "format": "int32"
        },
        "MinSize": {
            "type": "integer",
            "format": "int32"
        },
        "MaxSize": {
            "type": "integer",
            "format": "int32"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "HasAssociatedService": {
            "type": "boolean"
        },
        "IsDefault": {
            "type": "boolean"
        },
        "CreateAutoScalingConfigurationRequest": {
            "type": "object",
            "properties": {
                "AutoScalingConfigurationName": {
                    "$ref": "#/$defs/AutoScalingConfigurationName"
                },
                "MaxConcurrency": {
                    "$ref": "#/$defs/ASConfigMaxConcurrency"
                },
                "MinSize": {
                    "$ref": "#/$defs/ASConfigMinSize"
                },
                "MaxSize": {
                    "$ref": "#/$defs/ASConfigMaxSize"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ASConfigMaxConcurrency": {
            "type": "integer",
            "format": "int32"
        },
        "ASConfigMinSize": {
            "type": "integer",
            "format": "int32"
        },
        "ASConfigMaxSize": {
            "type": "integer",
            "format": "int32"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateConnectionResponse": {
            "type": "object",
            "properties": {
                "Connection": {
                    "$ref": "#/$defs/Connection"
                }
            }
        },
        "Connection": {
            "type": "object",
            "properties": {
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "ConnectionArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "ProviderType": {
                    "$ref": "#/$defs/ProviderType"
                },
                "Status": {
                    "$ref": "#/$defs/ConnectionStatus"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ConnectionName": {
            "type": "string"
        },
        "ProviderType": {
            "enum": [
                "GITHUB",
                "BITBUCKET"
            ]
        },
        "ConnectionStatus": {
            "enum": [
                "PENDING_HANDSHAKE",
                "AVAILABLE",
                "ERROR",
                "DELETED"
            ]
        },
        "CreateConnectionRequest": {
            "type": "object",
            "properties": {
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "ProviderType": {
                    "$ref": "#/$defs/ProviderType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateObservabilityConfigurationResponse": {
            "type": "object",
            "properties": {
                "ObservabilityConfiguration": {
                    "$ref": "#/$defs/ObservabilityConfiguration"
                }
            }
        },
        "ObservabilityConfiguration": {
            "type": "object",
            "properties": {
                "ObservabilityConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "ObservabilityConfigurationName": {
                    "$ref": "#/$defs/ObservabilityConfigurationName"
                },
                "TraceConfiguration": {
                    "$ref": "#/$defs/TraceConfiguration"
                },
                "ObservabilityConfigurationRevision": {
                    "$ref": "#/$defs/Integer"
                },
                "Latest": {
                    "$ref": "#/$defs/Boolean"
                },
                "Status": {
                    "$ref": "#/$defs/ObservabilityConfigurationStatus"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DeletedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ObservabilityConfigurationName": {
            "type": "string"
        },
        "TraceConfiguration": {
            "type": "object",
            "properties": {
                "Vendor": {
                    "$ref": "#/$defs/TracingVendor"
                }
            }
        },
        "TracingVendor": {
            "enum": [
                "AWSXRAY"
            ]
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "Boolean": {
            "type": "boolean"
        },
        "ObservabilityConfigurationStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "CreateObservabilityConfigurationRequest": {
            "type": "object",
            "properties": {
                "ObservabilityConfigurationName": {
                    "$ref": "#/$defs/ObservabilityConfigurationName"
                },
                "TraceConfiguration": {
                    "$ref": "#/$defs/TraceConfiguration"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateServiceResponse": {
            "type": "object",
            "properties": {
                "Service": {
                    "$ref": "#/$defs/Service"
                },
                "OperationId": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "Service": {
            "type": "object",
            "properties": {
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "ServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "ServiceUrl": {
                    "$ref": "#/$defs/String"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DeletedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/ServiceStatus"
                },
                "SourceConfiguration": {
                    "$ref": "#/$defs/SourceConfiguration"
                },
                "InstanceConfiguration": {
                    "$ref": "#/$defs/InstanceConfiguration"
                },
                "EncryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                },
                "HealthCheckConfiguration": {
                    "$ref": "#/$defs/HealthCheckConfiguration"
                },
                "AutoScalingConfigurationSummary": {
                    "$ref": "#/$defs/AutoScalingConfigurationSummary"
                },
                "NetworkConfiguration": {
                    "$ref": "#/$defs/NetworkConfiguration"
                },
                "ObservabilityConfiguration": {
                    "$ref": "#/$defs/ServiceObservabilityConfiguration"
                }
            }
        },
        "ServiceName": {
            "type": "string"
        },
        "ServiceId": {
            "type": "string"
        },
        "ServiceStatus": {
            "enum": [
                "CREATE_FAILED",
                "RUNNING",
                "DELETED",
                "DELETE_FAILED",
                "PAUSED",
                "OPERATION_IN_PROGRESS"
            ]
        },
        "SourceConfiguration": {
            "type": "object",
            "properties": {
                "CodeRepository": {
                    "$ref": "#/$defs/CodeRepository"
                },
                "ImageRepository": {
                    "$ref": "#/$defs/ImageRepository"
                },
                "AutoDeploymentsEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "AuthenticationConfiguration": {
                    "$ref": "#/$defs/AuthenticationConfiguration"
                }
            }
        },
        "CodeRepository": {
            "type": "object",
            "properties": {
                "RepositoryUrl": {
                    "$ref": "#/$defs/String"
                },
                "SourceCodeVersion": {
                    "$ref": "#/$defs/SourceCodeVersion"
                },
                "CodeConfiguration": {
                    "$ref": "#/$defs/CodeConfiguration"
                },
                "SourceDirectory": {
                    "$ref": "#/$defs/SourceDirectory"
                }
            }
        },
        "SourceCodeVersion": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/SourceCodeVersionType"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SourceCodeVersionType": {
            "enum": [
                "BRANCH"
            ]
        },
        "CodeConfiguration": {
            "type": "object",
            "properties": {
                "ConfigurationSource": {
                    "$ref": "#/$defs/ConfigurationSource"
                },
                "CodeConfigurationValues": {
                    "$ref": "#/$defs/CodeConfigurationValues"
                }
            }
        },
        "ConfigurationSource": {
            "enum": [
                "REPOSITORY",
                "API"
            ]
        },
        "CodeConfigurationValues": {
            "type": "object",
            "properties": {
                "Runtime": {
                    "$ref": "#/$defs/Runtime"
                },
                "BuildCommand": {
                    "$ref": "#/$defs/BuildCommand"
                },
                "StartCommand": {
                    "$ref": "#/$defs/StartCommand"
                },
                "Port": {
                    "$ref": "#/$defs/String"
                },
                "RuntimeEnvironmentVariables": {
                    "$ref": "#/$defs/RuntimeEnvironmentVariables"
                },
                "RuntimeEnvironmentSecrets": {
                    "$ref": "#/$defs/RuntimeEnvironmentSecrets"
                }
            }
        },
        "Runtime": {
            "enum": [
                "PYTHON_3",
                "NODEJS_12",
                "NODEJS_14",
                "CORRETTO_8",
                "CORRETTO_11",
                "NODEJS_16",
                "GO_1",
                "DOTNET_6",
                "PHP_81",
                "RUBY_31",
                "PYTHON_311",
                "NODEJS_18"
            ]
        },
        "BuildCommand": {
            "type": "string"
        },
        "StartCommand": {
            "type": "string"
        },
        "RuntimeEnvironmentVariables": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/RuntimeEnvironmentVariablesValue"
            }
        },
        "RuntimeEnvironmentVariablesValue": {
            "type": "string"
        },
        "RuntimeEnvironmentSecrets": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/RuntimeEnvironmentSecretsValue"
            }
        },
        "RuntimeEnvironmentSecretsValue": {
            "type": "string"
        },
        "SourceDirectory": {
            "type": "string"
        },
        "ImageRepository": {
            "type": "object",
            "properties": {
                "ImageIdentifier": {
                    "$ref": "#/$defs/ImageIdentifier"
                },
                "ImageConfiguration": {
                    "$ref": "#/$defs/ImageConfiguration"
                },
                "ImageRepositoryType": {
                    "$ref": "#/$defs/ImageRepositoryType"
                }
            }
        },
        "ImageIdentifier": {
            "type": "string"
        },
        "ImageConfiguration": {
            "type": "object",
            "properties": {
                "RuntimeEnvironmentVariables": {
                    "$ref": "#/$defs/RuntimeEnvironmentVariables"
                },
                "StartCommand": {
                    "$ref": "#/$defs/StartCommand"
                },
                "Port": {
                    "$ref": "#/$defs/String"
                },
                "RuntimeEnvironmentSecrets": {
                    "$ref": "#/$defs/RuntimeEnvironmentSecrets"
                }
            }
        },
        "ImageRepositoryType": {
            "enum": [
                "ECR",
                "ECR_PUBLIC"
            ]
        },
        "AuthenticationConfiguration": {
            "type": "object",
            "properties": {
                "ConnectionArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "AccessRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "RoleArn": {
            "type": "string"
        },
        "InstanceConfiguration": {
            "type": "object",
            "properties": {
                "Cpu": {
                    "$ref": "#/$defs/Cpu"
                },
                "Memory": {
                    "$ref": "#/$defs/Memory"
                },
                "InstanceRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "Cpu": {
            "type": "string"
        },
        "Memory": {
            "type": "string"
        },
        "EncryptionConfiguration": {
            "type": "object",
            "properties": {
                "KmsKey": {
                    "$ref": "#/$defs/KmsKeyArn"
                }
            }
        },
        "KmsKeyArn": {
            "type": "string"
        },
        "HealthCheckConfiguration": {
            "type": "object",
            "properties": {
                "Protocol": {
                    "$ref": "#/$defs/HealthCheckProtocol"
                },
                "Path": {
                    "$ref": "#/$defs/HealthCheckPath"
                },
                "Interval": {
                    "$ref": "#/$defs/HealthCheckInterval"
                },
                "Timeout": {
                    "$ref": "#/$defs/HealthCheckTimeout"
                },
                "HealthyThreshold": {
                    "$ref": "#/$defs/HealthCheckHealthyThreshold"
                },
                "UnhealthyThreshold": {
                    "$ref": "#/$defs/HealthCheckUnhealthyThreshold"
                }
            }
        },
        "HealthCheckProtocol": {
            "enum": [
                "TCP",
                "HTTP"
            ]
        },
        "HealthCheckPath": {
            "type": "string"
        },
        "HealthCheckInterval": {
            "type": "integer",
            "format": "int32"
        },
        "HealthCheckTimeout": {
            "type": "integer",
            "format": "int32"
        },
        "HealthCheckHealthyThreshold": {
            "type": "integer",
            "format": "int32"
        },
        "HealthCheckUnhealthyThreshold": {
            "type": "integer",
            "format": "int32"
        },
        "AutoScalingConfigurationSummary": {
            "type": "object",
            "properties": {
                "AutoScalingConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "AutoScalingConfigurationName": {
                    "$ref": "#/$defs/AutoScalingConfigurationName"
                },
                "AutoScalingConfigurationRevision": {
                    "$ref": "#/$defs/Integer"
                },
                "Status": {
                    "$ref": "#/$defs/AutoScalingConfigurationStatus"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "HasAssociatedService": {
                    "$ref": "#/$defs/HasAssociatedService"
                },
                "IsDefault": {
                    "$ref": "#/$defs/IsDefault"
                }
            }
        },
        "NetworkConfiguration": {
            "type": "object",
            "properties": {
                "EgressConfiguration": {
                    "$ref": "#/$defs/EgressConfiguration"
                },
                "IngressConfiguration": {
                    "$ref": "#/$defs/IngressConfiguration"
                },
                "IpAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                }
            }
        },
        "EgressConfiguration": {
            "type": "object",
            "properties": {
                "EgressType": {
                    "$ref": "#/$defs/EgressType"
                },
                "VpcConnectorArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "EgressType": {
            "enum": [
                "DEFAULT",
                "VPC"
            ]
        },
        "IngressConfiguration": {
            "type": "object",
            "properties": {
                "IsPubliclyAccessible": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "IpAddressType": {
            "enum": [
                "IPV4",
                "DUAL_STACK"
            ]
        },
        "ServiceObservabilityConfiguration": {
            "type": "object",
            "properties": {
                "ObservabilityEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "ObservabilityConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "UUID": {
            "type": "string"
        },
        "CreateServiceRequest": {
            "type": "object",
            "properties": {
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "SourceConfiguration": {
                    "$ref": "#/$defs/SourceConfiguration"
                },
                "InstanceConfiguration": {
                    "$ref": "#/$defs/InstanceConfiguration"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "EncryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                },
                "HealthCheckConfiguration": {
                    "$ref": "#/$defs/HealthCheckConfiguration"
                },
                "AutoScalingConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "NetworkConfiguration": {
                    "$ref": "#/$defs/NetworkConfiguration"
                },
                "ObservabilityConfiguration": {
                    "$ref": "#/$defs/ServiceObservabilityConfiguration"
                }
            }
        },
        "CreateVpcConnectorResponse": {
            "type": "object",
            "properties": {
                "VpcConnector": {
                    "$ref": "#/$defs/VpcConnector"
                }
            }
        },
        "VpcConnector": {
            "type": "object",
            "properties": {
                "VpcConnectorName": {
                    "$ref": "#/$defs/VpcConnectorName"
                },
                "VpcConnectorArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "VpcConnectorRevision": {
                    "$ref": "#/$defs/Integer"
                },
                "Subnets": {
                    "$ref": "#/$defs/StringList"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/StringList"
                },
                "Status": {
                    "$ref": "#/$defs/VpcConnectorStatus"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DeletedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "VpcConnectorName": {
            "type": "string"
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "VpcConnectorStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "CreateVpcConnectorRequest": {
            "type": "object",
            "properties": {
                "VpcConnectorName": {
                    "$ref": "#/$defs/VpcConnectorName"
                },
                "Subnets": {
                    "$ref": "#/$defs/StringList"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/StringList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateVpcIngressConnectionResponse": {
            "type": "object",
            "properties": {
                "VpcIngressConnection": {
                    "$ref": "#/$defs/VpcIngressConnection"
                }
            }
        },
        "VpcIngressConnection": {
            "type": "object",
            "properties": {
                "VpcIngressConnectionArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "VpcIngressConnectionName": {
                    "$ref": "#/$defs/VpcIngressConnectionName"
                },
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "Status": {
                    "$ref": "#/$defs/VpcIngressConnectionStatus"
                },
                "AccountId": {
                    "$ref": "#/$defs/CustomerAccountId"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "IngressVpcConfiguration": {
                    "$ref": "#/$defs/IngressVpcConfiguration"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DeletedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "VpcIngressConnectionName": {
            "type": "string"
        },
        "VpcIngressConnectionStatus": {
            "enum": [
                "AVAILABLE",
                "PENDING_CREATION",
                "PENDING_UPDATE",
                "PENDING_DELETION",
                "FAILED_CREATION",
                "FAILED_UPDATE",
                "FAILED_DELETION",
                "DELETED"
            ]
        },
        "CustomerAccountId": {
            "type": "string"
        },
        "IngressVpcConfiguration": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "VpcEndpointId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateVpcIngressConnectionRequest": {
            "type": "object",
            "properties": {
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "VpcIngressConnectionName": {
                    "$ref": "#/$defs/VpcIngressConnectionName"
                },
                "IngressVpcConfiguration": {
                    "$ref": "#/$defs/IngressVpcConfiguration"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DeleteAutoScalingConfigurationResponse": {
            "type": "object",
            "properties": {
                "AutoScalingConfiguration": {
                    "$ref": "#/$defs/AutoScalingConfiguration"
                }
            }
        },
        "DeleteAutoScalingConfigurationRequest": {
            "type": "object",
            "properties": {
                "AutoScalingConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "DeleteAllRevisions": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteConnectionResponse": {
            "type": "object",
            "properties": {
                "Connection": {
                    "$ref": "#/$defs/Connection"
                }
            }
        },
        "DeleteConnectionRequest": {
            "type": "object",
            "properties": {
                "ConnectionArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "DeleteObservabilityConfigurationResponse": {
            "type": "object",
            "properties": {
                "ObservabilityConfiguration": {
                    "$ref": "#/$defs/ObservabilityConfiguration"
                }
            }
        },
        "DeleteObservabilityConfigurationRequest": {
            "type": "object",
            "properties": {
                "ObservabilityConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "DeleteServiceResponse": {
            "type": "object",
            "properties": {
                "Service": {
                    "$ref": "#/$defs/Service"
                },
                "OperationId": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "DeleteServiceRequest": {
            "type": "object",
            "properties": {
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "DeleteVpcConnectorResponse": {
            "type": "object",
            "properties": {
                "VpcConnector": {
                    "$ref": "#/$defs/VpcConnector"
                }
            }
        },
        "DeleteVpcConnectorRequest": {
            "type": "object",
            "properties": {
                "VpcConnectorArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "DeleteVpcIngressConnectionResponse": {
            "type": "object",
            "properties": {
                "VpcIngressConnection": {
                    "$ref": "#/$defs/VpcIngressConnection"
                }
            }
        },
        "DeleteVpcIngressConnectionRequest": {
            "type": "object",
            "properties": {
                "VpcIngressConnectionArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "DescribeAutoScalingConfigurationResponse": {
            "type": "object",
            "properties": {
                "AutoScalingConfiguration": {
                    "$ref": "#/$defs/AutoScalingConfiguration"
                }
            }
        },
        "DescribeAutoScalingConfigurationRequest": {
            "type": "object",
            "properties": {
                "AutoScalingConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "DescribeCustomDomainsResponse": {
            "type": "object",
            "properties": {
                "DNSTarget": {
                    "$ref": "#/$defs/String"
                },
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "CustomDomains": {
                    "$ref": "#/$defs/CustomDomainList"
                },
                "VpcDNSTargets": {
                    "$ref": "#/$defs/VpcDNSTargetList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CustomDomainList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomDomain"
            }
        },
        "DescribeCustomDomainsRequest": {
            "type": "object",
            "properties": {
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeCustomDomainsMaxResults"
                }
            }
        },
        "DescribeCustomDomainsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeObservabilityConfigurationResponse": {
            "type": "object",
            "properties": {
                "ObservabilityConfiguration": {
                    "$ref": "#/$defs/ObservabilityConfiguration"
                }
            }
        },
        "DescribeObservabilityConfigurationRequest": {
            "type": "object",
            "properties": {
                "ObservabilityConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "DescribeServiceResponse": {
            "type": "object",
            "properties": {
                "Service": {
                    "$ref": "#/$defs/Service"
                }
            }
        },
        "DescribeServiceRequest": {
            "type": "object",
            "properties": {
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "DescribeVpcConnectorResponse": {
            "type": "object",
            "properties": {
                "VpcConnector": {
                    "$ref": "#/$defs/VpcConnector"
                }
            }
        },
        "DescribeVpcConnectorRequest": {
            "type": "object",
            "properties": {
                "VpcConnectorArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "DescribeVpcIngressConnectionResponse": {
            "type": "object",
            "properties": {
                "VpcIngressConnection": {
                    "$ref": "#/$defs/VpcIngressConnection"
                }
            }
        },
        "DescribeVpcIngressConnectionRequest": {
            "type": "object",
            "properties": {
                "VpcIngressConnectionArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "DisassociateCustomDomainResponse": {
            "type": "object",
            "properties": {
                "DNSTarget": {
                    "$ref": "#/$defs/String"
                },
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "CustomDomain": {
                    "$ref": "#/$defs/CustomDomain"
                },
                "VpcDNSTargets": {
                    "$ref": "#/$defs/VpcDNSTargetList"
                }
            }
        },
        "DisassociateCustomDomainRequest": {
            "type": "object",
            "properties": {
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "ListAutoScalingConfigurationsResponse": {
            "type": "object",
            "properties": {
                "AutoScalingConfigurationSummaryList": {
                    "$ref": "#/$defs/AutoScalingConfigurationSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AutoScalingConfigurationSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoScalingConfigurationSummary"
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListAutoScalingConfigurationsRequest": {
            "type": "object",
            "properties": {
                "AutoScalingConfigurationName": {
                    "$ref": "#/$defs/AutoScalingConfigurationName"
                },
                "LatestOnly": {
                    "$ref": "#/$defs/Boolean"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListConnectionsResponse": {
            "type": "object",
            "properties": {
                "ConnectionSummaryList": {
                    "$ref": "#/$defs/ConnectionSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ConnectionSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConnectionSummary"
            }
        },
        "ConnectionSummary": {
            "type": "object",
            "properties": {
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "ConnectionArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "ProviderType": {
                    "$ref": "#/$defs/ProviderType"
                },
                "Status": {
                    "$ref": "#/$defs/ConnectionStatus"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListConnectionsRequest": {
            "type": "object",
            "properties": {
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListObservabilityConfigurationsResponse": {
            "type": "object",
            "properties": {
                "ObservabilityConfigurationSummaryList": {
                    "$ref": "#/$defs/ObservabilityConfigurationSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ObservabilityConfigurationSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ObservabilityConfigurationSummary"
            }
        },
        "ObservabilityConfigurationSummary": {
            "type": "object",
            "properties": {
                "ObservabilityConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "ObservabilityConfigurationName": {
                    "$ref": "#/$defs/ObservabilityConfigurationName"
                },
                "ObservabilityConfigurationRevision": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ListObservabilityConfigurationsRequest": {
            "type": "object",
            "properties": {
                "ObservabilityConfigurationName": {
                    "$ref": "#/$defs/ObservabilityConfigurationName"
                },
                "LatestOnly": {
                    "$ref": "#/$defs/Boolean"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListOperationsResponse": {
            "type": "object",
            "properties": {
                "OperationSummaryList": {
                    "$ref": "#/$defs/OperationSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "OperationSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OperationSummary"
            }
        },
        "OperationSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/UUID"
                },
                "Type": {
                    "$ref": "#/$defs/OperationType"
                },
                "Status": {
                    "$ref": "#/$defs/OperationStatus"
                },
                "TargetArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "StartedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "OperationType": {
            "enum": [
                "START_DEPLOYMENT",
                "CREATE_SERVICE",
                "PAUSE_SERVICE",
                "RESUME_SERVICE",
                "DELETE_SERVICE",
                "UPDATE_SERVICE"
            ]
        },
        "OperationStatus": {
            "enum": [
                "PENDING",
                "IN_PROGRESS",
                "FAILED",
                "SUCCEEDED",
                "ROLLBACK_IN_PROGRESS",
                "ROLLBACK_FAILED",
                "ROLLBACK_SUCCEEDED"
            ]
        },
        "ListOperationsRequest": {
            "type": "object",
            "properties": {
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListOperationsMaxResults"
                }
            }
        },
        "ListOperationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListServicesResponse": {
            "type": "object",
            "properties": {
                "ServiceSummaryList": {
                    "$ref": "#/$defs/ServiceSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceSummary"
            }
        },
        "ServiceSummary": {
            "type": "object",
            "properties": {
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "ServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "ServiceUrl": {
                    "$ref": "#/$defs/String"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/ServiceStatus"
                }
            }
        },
        "ListServicesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ServiceMaxResults"
                }
            }
        },
        "ServiceMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListServicesForAutoScalingConfigurationResponse": {
            "type": "object",
            "properties": {
                "ServiceArnList": {
                    "$ref": "#/$defs/ServiceArnList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ServiceArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AppRunnerResourceArn"
            }
        },
        "ListServicesForAutoScalingConfigurationRequest": {
            "type": "object",
            "properties": {
                "AutoScalingConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "ListVpcConnectorsResponse": {
            "type": "object",
            "properties": {
                "VpcConnectors": {
                    "$ref": "#/$defs/VpcConnectors"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "VpcConnectors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcConnector"
            }
        },
        "ListVpcConnectorsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListVpcIngressConnectionsResponse": {
            "type": "object",
            "properties": {
                "VpcIngressConnectionSummaryList": {
                    "$ref": "#/$defs/VpcIngressConnectionSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "VpcIngressConnectionSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcIngressConnectionSummary"
            }
        },
        "VpcIngressConnectionSummary": {
            "type": "object",
            "properties": {
                "VpcIngressConnectionArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "ListVpcIngressConnectionsRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/ListVpcIngressConnectionsFilter"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListVpcIngressConnectionsFilter": {
            "type": "object",
            "properties": {
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "VpcEndpointId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PauseServiceResponse": {
            "type": "object",
            "properties": {
                "Service": {
                    "$ref": "#/$defs/Service"
                },
                "OperationId": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "PauseServiceRequest": {
            "type": "object",
            "properties": {
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "ResumeServiceResponse": {
            "type": "object",
            "properties": {
                "Service": {
                    "$ref": "#/$defs/Service"
                },
                "OperationId": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "ResumeServiceRequest": {
            "type": "object",
            "properties": {
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "StartDeploymentResponse": {
            "type": "object",
            "properties": {
                "OperationId": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "StartDeploymentRequest": {
            "type": "object",
            "properties": {
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateDefaultAutoScalingConfigurationResponse": {
            "type": "object",
            "properties": {
                "AutoScalingConfiguration": {
                    "$ref": "#/$defs/AutoScalingConfiguration"
                }
            }
        },
        "UpdateDefaultAutoScalingConfigurationRequest": {
            "type": "object",
            "properties": {
                "AutoScalingConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                }
            }
        },
        "UpdateServiceResponse": {
            "type": "object",
            "properties": {
                "Service": {
                    "$ref": "#/$defs/Service"
                },
                "OperationId": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "UpdateServiceRequest": {
            "type": "object",
            "properties": {
                "ServiceArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "SourceConfiguration": {
                    "$ref": "#/$defs/SourceConfiguration"
                },
                "InstanceConfiguration": {
                    "$ref": "#/$defs/InstanceConfiguration"
                },
                "AutoScalingConfigurationArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "HealthCheckConfiguration": {
                    "$ref": "#/$defs/HealthCheckConfiguration"
                },
                "NetworkConfiguration": {
                    "$ref": "#/$defs/NetworkConfiguration"
                },
                "ObservabilityConfiguration": {
                    "$ref": "#/$defs/ServiceObservabilityConfiguration"
                }
            }
        },
        "UpdateVpcIngressConnectionResponse": {
            "type": "object",
            "properties": {
                "VpcIngressConnection": {
                    "$ref": "#/$defs/VpcIngressConnection"
                }
            }
        },
        "UpdateVpcIngressConnectionRequest": {
            "type": "object",
            "properties": {
                "VpcIngressConnectionArn": {
                    "$ref": "#/$defs/AppRunnerResourceArn"
                },
                "IngressVpcConfiguration": {
                    "$ref": "#/$defs/IngressVpcConfiguration"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://apprunner-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://apprunner-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://apprunner.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://apprunner.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}