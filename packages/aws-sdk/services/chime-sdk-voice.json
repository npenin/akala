{
    "name": "chime",
    "commands": [
        {
            "name": "AssociatePhoneNumbersWithVoiceConnector",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/voice-connectors/{VoiceConnectorId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociatePhoneNumbersWithVoiceConnectorResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AssociatePhoneNumbersWithVoiceConnectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "E164PhoneNumbers": {},
                        "ForceAssociate": {}
                    }
                }
            }
        },
        {
            "name": "AssociatePhoneNumbersWithVoiceConnectorGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorGroupId": "route.VoiceConnectorGroupId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/voice-connector-groups/{VoiceConnectorGroupId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociatePhoneNumbersWithVoiceConnectorGroupResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorGroupId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AssociatePhoneNumbersWithVoiceConnectorGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorGroupId": {},
                        "E164PhoneNumbers": {},
                        "ForceAssociate": {}
                    }
                }
            }
        },
        {
            "name": "BatchDeletePhoneNumber",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/phone-numbers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeletePhoneNumberResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/BatchDeletePhoneNumberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PhoneNumberIds": {}
                    }
                }
            }
        },
        {
            "name": "BatchUpdatePhoneNumber",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/phone-numbers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchUpdatePhoneNumberResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/BatchUpdatePhoneNumberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "UpdatePhoneNumberRequestItems": {}
                    }
                }
            }
        },
        {
            "name": "CreatePhoneNumberOrder",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/phone-number-orders"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePhoneNumberOrderResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreatePhoneNumberOrderRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ProductType": {},
                        "E164PhoneNumbers": {},
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "CreateProxySession",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/voice-connectors/{VoiceConnectorId}/proxy-sessions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateProxySessionResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateProxySessionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "ParticipantPhoneNumbers": {},
                        "Name": {},
                        "ExpiryMinutes": {},
                        "Capabilities": {},
                        "NumberSelectionBehavior": {},
                        "GeoMatchLevel": {},
                        "GeoMatchParams": {}
                    }
                }
            }
        },
        {
            "name": "CreateSipMediaApplication",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/sip-media-applications"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSipMediaApplicationResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSipMediaApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AwsRegion": {},
                        "Name": {},
                        "Endpoints": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateSipMediaApplicationCall",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SipMediaApplicationId": "route.SipMediaApplicationId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/sip-media-applications/{SipMediaApplicationId}/calls"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSipMediaApplicationCallResponse"
                    },
                    "inject": [
                        "params.0.SipMediaApplicationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSipMediaApplicationCallRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "FromPhoneNumber": {},
                        "ToPhoneNumber": {},
                        "SipMediaApplicationId": {},
                        "SipHeaders": {},
                        "ArgumentsMap": {}
                    }
                }
            }
        },
        {
            "name": "CreateSipRule",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/sip-rules"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSipRuleResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSipRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "TriggerType": {},
                        "TriggerValue": {},
                        "Disabled": {},
                        "TargetApplications": {}
                    }
                }
            }
        },
        {
            "name": "CreateVoiceConnector",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/voice-connectors"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVoiceConnectorResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateVoiceConnectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "AwsRegion": {},
                        "RequireEncryption": {},
                        "Tags": {},
                        "IntegrationType": {}
                    }
                }
            }
        },
        {
            "name": "CreateVoiceConnectorGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/voice-connector-groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVoiceConnectorGroupResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateVoiceConnectorGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "VoiceConnectorItems": {}
                    }
                }
            }
        },
        {
            "name": "CreateVoiceProfile",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/voice-profiles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVoiceProfileResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateVoiceProfileRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SpeakerSearchTaskId": {}
                    }
                }
            }
        },
        {
            "name": "CreateVoiceProfileDomain",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/voice-profile-domains"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVoiceProfileDomainResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateVoiceProfileDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Description": {},
                        "ServerSideEncryptionConfiguration": {},
                        "ClientRequestToken": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "DeletePhoneNumber",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PhoneNumberId": "route.PhoneNumberId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/phone-numbers/{PhoneNumberId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.PhoneNumberId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeletePhoneNumberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PhoneNumberId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteProxySession",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "ProxySessionId": "route.ProxySessionId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/voice-connectors/{VoiceConnectorId}/proxy-sessions/{ProxySessionId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0.ProxySessionId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteProxySessionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "ProxySessionId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSipMediaApplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SipMediaApplicationId": "route.SipMediaApplicationId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/sip-media-applications/{SipMediaApplicationId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.SipMediaApplicationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteSipMediaApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SipMediaApplicationId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSipRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SipRuleId": "route.SipRuleId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/sip-rules/{SipRuleId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.SipRuleId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteSipRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SipRuleId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVoiceConnector",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/voice-connectors/{VoiceConnectorId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVoiceConnectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVoiceConnectorEmergencyCallingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/voice-connectors/{VoiceConnectorId}/emergency-calling-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVoiceConnectorEmergencyCallingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVoiceConnectorExternalSystemsConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/voice-connectors/{VoiceConnectorId}/external-systems-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVoiceConnectorExternalSystemsConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVoiceConnectorGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorGroupId": "route.VoiceConnectorGroupId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/voice-connector-groups/{VoiceConnectorGroupId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorGroupId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVoiceConnectorGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorGroupId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVoiceConnectorOrigination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/voice-connectors/{VoiceConnectorId}/origination"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVoiceConnectorOriginationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVoiceConnectorProxy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/voice-connectors/{VoiceConnectorId}/programmable-numbers/proxy"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVoiceConnectorProxyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVoiceConnectorStreamingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/voice-connectors/{VoiceConnectorId}/streaming-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVoiceConnectorStreamingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVoiceConnectorTermination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/voice-connectors/{VoiceConnectorId}/termination"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVoiceConnectorTerminationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVoiceConnectorTerminationCredentials",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/voice-connectors/{VoiceConnectorId}/termination/credentials"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVoiceConnectorTerminationCredentialsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "Usernames": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVoiceProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceProfileId": "route.VoiceProfileId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/voice-profiles/{VoiceProfileId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceProfileId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVoiceProfileRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceProfileId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVoiceProfileDomain",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceProfileDomainId": "route.VoiceProfileDomainId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/voice-profile-domains/{VoiceProfileDomainId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceProfileDomainId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVoiceProfileDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceProfileDomainId": {}
                    }
                }
            }
        },
        {
            "name": "DisassociatePhoneNumbersFromVoiceConnector",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/voice-connectors/{VoiceConnectorId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociatePhoneNumbersFromVoiceConnectorResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisassociatePhoneNumbersFromVoiceConnectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "E164PhoneNumbers": {}
                    }
                }
            }
        },
        {
            "name": "DisassociatePhoneNumbersFromVoiceConnectorGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorGroupId": "route.VoiceConnectorGroupId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/voice-connector-groups/{VoiceConnectorGroupId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociatePhoneNumbersFromVoiceConnectorGroupResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorGroupId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisassociatePhoneNumbersFromVoiceConnectorGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorGroupId": {},
                        "E164PhoneNumbers": {}
                    }
                }
            }
        },
        {
            "name": "GetGlobalSettings",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/settings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetGlobalSettingsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetPhoneNumber",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PhoneNumberId": "route.PhoneNumberId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/phone-numbers/{PhoneNumberId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPhoneNumberResponse"
                    },
                    "inject": [
                        "params.0.PhoneNumberId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetPhoneNumberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PhoneNumberId": {}
                    }
                }
            }
        },
        {
            "name": "GetPhoneNumberOrder",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PhoneNumberOrderId": "route.PhoneNumberOrderId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/phone-number-orders/{PhoneNumberOrderId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPhoneNumberOrderResponse"
                    },
                    "inject": [
                        "params.0.PhoneNumberOrderId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetPhoneNumberOrderRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PhoneNumberOrderId": {}
                    }
                }
            }
        },
        {
            "name": "GetPhoneNumberSettings",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/settings/phone-number"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPhoneNumberSettingsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetProxySession",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "ProxySessionId": "route.ProxySessionId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/proxy-sessions/{ProxySessionId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetProxySessionResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0.ProxySessionId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetProxySessionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "ProxySessionId": {}
                    }
                }
            }
        },
        {
            "name": "GetSipMediaApplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SipMediaApplicationId": "route.SipMediaApplicationId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/sip-media-applications/{SipMediaApplicationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSipMediaApplicationResponse"
                    },
                    "inject": [
                        "params.0.SipMediaApplicationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSipMediaApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SipMediaApplicationId": {}
                    }
                }
            }
        },
        {
            "name": "GetSipMediaApplicationAlexaSkillConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SipMediaApplicationId": "route.SipMediaApplicationId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/sip-media-applications/{SipMediaApplicationId}/alexa-skill-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSipMediaApplicationAlexaSkillConfigurationResponse"
                    },
                    "inject": [
                        "params.0.SipMediaApplicationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSipMediaApplicationAlexaSkillConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SipMediaApplicationId": {}
                    }
                }
            }
        },
        {
            "name": "GetSipMediaApplicationLoggingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SipMediaApplicationId": "route.SipMediaApplicationId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/sip-media-applications/{SipMediaApplicationId}/logging-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSipMediaApplicationLoggingConfigurationResponse"
                    },
                    "inject": [
                        "params.0.SipMediaApplicationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSipMediaApplicationLoggingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SipMediaApplicationId": {}
                    }
                }
            }
        },
        {
            "name": "GetSipRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SipRuleId": "route.SipRuleId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/sip-rules/{SipRuleId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSipRuleResponse"
                    },
                    "inject": [
                        "params.0.SipRuleId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSipRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SipRuleId": {}
                    }
                }
            }
        },
        {
            "name": "GetSpeakerSearchTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "SpeakerSearchTaskId": "route.SpeakerSearchTaskId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/speaker-search-tasks/{SpeakerSearchTaskId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSpeakerSearchTaskResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0.SpeakerSearchTaskId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSpeakerSearchTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "SpeakerSearchTaskId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceConnector",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceConnectorResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceConnectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceConnectorEmergencyCallingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/emergency-calling-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceConnectorEmergencyCallingConfigurationResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceConnectorEmergencyCallingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceConnectorExternalSystemsConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/external-systems-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceConnectorExternalSystemsConfigurationResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceConnectorExternalSystemsConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceConnectorGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorGroupId": "route.VoiceConnectorGroupId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connector-groups/{VoiceConnectorGroupId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceConnectorGroupResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorGroupId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceConnectorGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorGroupId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceConnectorLoggingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/logging-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceConnectorLoggingConfigurationResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceConnectorLoggingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceConnectorOrigination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/origination"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceConnectorOriginationResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceConnectorOriginationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceConnectorProxy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/programmable-numbers/proxy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceConnectorProxyResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceConnectorProxyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceConnectorStreamingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/streaming-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceConnectorStreamingConfigurationResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceConnectorStreamingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceConnectorTermination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/termination"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceConnectorTerminationResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceConnectorTerminationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceConnectorTerminationHealth",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/termination/health"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceConnectorTerminationHealthResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceConnectorTerminationHealthRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceProfileId": "route.VoiceProfileId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-profiles/{VoiceProfileId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceProfileResponse"
                    },
                    "inject": [
                        "params.0.VoiceProfileId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceProfileRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceProfileId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceProfileDomain",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceProfileDomainId": "route.VoiceProfileDomainId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-profile-domains/{VoiceProfileDomainId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceProfileDomainResponse"
                    },
                    "inject": [
                        "params.0.VoiceProfileDomainId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceProfileDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceProfileDomainId": {}
                    }
                }
            }
        },
        {
            "name": "GetVoiceToneAnalysisTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "VoiceToneAnalysisTaskId": "route.VoiceToneAnalysisTaskId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/voice-tone-analysis-tasks/{VoiceToneAnalysisTaskId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVoiceToneAnalysisTaskResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0.VoiceToneAnalysisTaskId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVoiceToneAnalysisTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "VoiceToneAnalysisTaskId": {},
                        "IsCaller": {}
                    }
                }
            }
        },
        {
            "name": "ListAvailableVoiceConnectorRegions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/voice-connector-regions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAvailableVoiceConnectorRegionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "ListPhoneNumberOrders",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/phone-number-orders"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPhoneNumberOrdersResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListPhoneNumberOrdersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListPhoneNumbers",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/phone-numbers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPhoneNumbersResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListPhoneNumbersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Status": {},
                        "ProductType": {},
                        "FilterName": {},
                        "FilterValue": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListProxySessions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/proxy-sessions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProxySessionsResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListProxySessionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "Status": {},
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListSipMediaApplications",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/sip-media-applications"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSipMediaApplicationsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListSipMediaApplicationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListSipRules",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/sip-rules"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSipRulesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListSipRulesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SipMediaApplicationId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListSupportedPhoneNumberCountries",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/phone-number-countries"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSupportedPhoneNumberCountriesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListSupportedPhoneNumberCountriesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ProductType": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceARN": {}
                    }
                }
            }
        },
        {
            "name": "ListVoiceConnectorGroups",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/voice-connector-groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVoiceConnectorGroupsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListVoiceConnectorGroupsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListVoiceConnectors",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/voice-connectors"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVoiceConnectorsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListVoiceConnectorsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListVoiceConnectorTerminationCredentials",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/voice-connectors/{VoiceConnectorId}/termination/credentials"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVoiceConnectorTerminationCredentialsResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListVoiceConnectorTerminationCredentialsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {}
                    }
                }
            }
        },
        {
            "name": "ListVoiceProfileDomains",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/voice-profile-domains"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVoiceProfileDomainsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListVoiceProfileDomainsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListVoiceProfiles",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/voice-profiles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVoiceProfilesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListVoiceProfilesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceProfileDomainId": {},
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "PutSipMediaApplicationAlexaSkillConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SipMediaApplicationId": "route.SipMediaApplicationId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/sip-media-applications/{SipMediaApplicationId}/alexa-skill-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutSipMediaApplicationAlexaSkillConfigurationResponse"
                    },
                    "inject": [
                        "params.0.SipMediaApplicationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutSipMediaApplicationAlexaSkillConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SipMediaApplicationId": {},
                        "SipMediaApplicationAlexaSkillConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "PutSipMediaApplicationLoggingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SipMediaApplicationId": "route.SipMediaApplicationId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/sip-media-applications/{SipMediaApplicationId}/logging-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutSipMediaApplicationLoggingConfigurationResponse"
                    },
                    "inject": [
                        "params.0.SipMediaApplicationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutSipMediaApplicationLoggingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SipMediaApplicationId": {},
                        "SipMediaApplicationLoggingConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "PutVoiceConnectorEmergencyCallingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/voice-connectors/{VoiceConnectorId}/emergency-calling-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutVoiceConnectorEmergencyCallingConfigurationResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutVoiceConnectorEmergencyCallingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "EmergencyCallingConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "PutVoiceConnectorExternalSystemsConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/voice-connectors/{VoiceConnectorId}/external-systems-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutVoiceConnectorExternalSystemsConfigurationResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutVoiceConnectorExternalSystemsConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "SessionBorderControllerTypes": {},
                        "ContactCenterSystemTypes": {}
                    }
                }
            }
        },
        {
            "name": "PutVoiceConnectorLoggingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/voice-connectors/{VoiceConnectorId}/logging-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutVoiceConnectorLoggingConfigurationResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutVoiceConnectorLoggingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "LoggingConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "PutVoiceConnectorOrigination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/voice-connectors/{VoiceConnectorId}/origination"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutVoiceConnectorOriginationResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutVoiceConnectorOriginationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "Origination": {}
                    }
                }
            }
        },
        {
            "name": "PutVoiceConnectorProxy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/voice-connectors/{VoiceConnectorId}/programmable-numbers/proxy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutVoiceConnectorProxyResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutVoiceConnectorProxyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "DefaultSessionExpiryMinutes": {},
                        "PhoneNumberPoolCountries": {},
                        "FallBackPhoneNumber": {},
                        "Disabled": {}
                    }
                }
            }
        },
        {
            "name": "PutVoiceConnectorStreamingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/voice-connectors/{VoiceConnectorId}/streaming-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutVoiceConnectorStreamingConfigurationResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutVoiceConnectorStreamingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "StreamingConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "PutVoiceConnectorTermination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/voice-connectors/{VoiceConnectorId}/termination"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutVoiceConnectorTerminationResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutVoiceConnectorTerminationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "Termination": {}
                    }
                }
            }
        },
        {
            "name": "PutVoiceConnectorTerminationCredentials",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/voice-connectors/{VoiceConnectorId}/termination/credentials"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutVoiceConnectorTerminationCredentialsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "Credentials": {}
                    }
                }
            }
        },
        {
            "name": "RestorePhoneNumber",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PhoneNumberId": "route.PhoneNumberId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/phone-numbers/{PhoneNumberId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestorePhoneNumberResponse"
                    },
                    "inject": [
                        "params.0.PhoneNumberId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RestorePhoneNumberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PhoneNumberId": {}
                    }
                }
            }
        },
        {
            "name": "SearchAvailablePhoneNumbers",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/search"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchAvailablePhoneNumbersResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SearchAvailablePhoneNumbersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AreaCode": {},
                        "City": {},
                        "Country": {},
                        "State": {},
                        "TollFreePrefix": {},
                        "PhoneNumberType": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "StartSpeakerSearchTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/voice-connectors/{VoiceConnectorId}/speaker-search-tasks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartSpeakerSearchTaskResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartSpeakerSearchTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "TransactionId": {},
                        "VoiceProfileDomainId": {},
                        "ClientRequestToken": {},
                        "CallLeg": {}
                    }
                }
            }
        },
        {
            "name": "StartVoiceToneAnalysisTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/voice-connectors/{VoiceConnectorId}/voice-tone-analysis-tasks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartVoiceToneAnalysisTaskResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartVoiceToneAnalysisTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "TransactionId": {},
                        "LanguageCode": {},
                        "ClientRequestToken": {}
                    }
                }
            }
        },
        {
            "name": "StopSpeakerSearchTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "SpeakerSearchTaskId": "route.SpeakerSearchTaskId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/voice-connectors/{VoiceConnectorId}/speaker-search-tasks/{SpeakerSearchTaskId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0.SpeakerSearchTaskId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StopSpeakerSearchTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "SpeakerSearchTaskId": {}
                    }
                }
            }
        },
        {
            "name": "StopVoiceToneAnalysisTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "VoiceToneAnalysisTaskId": "route.VoiceToneAnalysisTaskId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/voice-connectors/{VoiceConnectorId}/voice-tone-analysis-tasks/{VoiceToneAnalysisTaskId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0.VoiceToneAnalysisTaskId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StopVoiceToneAnalysisTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "VoiceToneAnalysisTaskId": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceARN": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceARN": {},
                        "TagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateGlobalSettings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/settings"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateGlobalSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnector": {}
                    }
                }
            }
        },
        {
            "name": "UpdatePhoneNumber",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PhoneNumberId": "route.PhoneNumberId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/phone-numbers/{PhoneNumberId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePhoneNumberResponse"
                    },
                    "inject": [
                        "params.0.PhoneNumberId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdatePhoneNumberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PhoneNumberId": {},
                        "ProductType": {},
                        "CallingName": {},
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "UpdatePhoneNumberSettings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/settings/phone-number"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdatePhoneNumberSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CallingName": {}
                    }
                }
            }
        },
        {
            "name": "UpdateProxySession",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "ProxySessionId": "route.ProxySessionId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/voice-connectors/{VoiceConnectorId}/proxy-sessions/{ProxySessionId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateProxySessionResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0.ProxySessionId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateProxySessionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "ProxySessionId": {},
                        "Capabilities": {},
                        "ExpiryMinutes": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSipMediaApplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SipMediaApplicationId": "route.SipMediaApplicationId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/sip-media-applications/{SipMediaApplicationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSipMediaApplicationResponse"
                    },
                    "inject": [
                        "params.0.SipMediaApplicationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateSipMediaApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SipMediaApplicationId": {},
                        "Name": {},
                        "Endpoints": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSipMediaApplicationCall",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SipMediaApplicationId": "route.SipMediaApplicationId",
                            "TransactionId": "route.TransactionId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/sip-media-applications/{SipMediaApplicationId}/calls/{TransactionId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSipMediaApplicationCallResponse"
                    },
                    "inject": [
                        "params.0.SipMediaApplicationId",
                        "params.0.TransactionId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateSipMediaApplicationCallRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SipMediaApplicationId": {},
                        "TransactionId": {},
                        "Arguments": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSipRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SipRuleId": "route.SipRuleId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/sip-rules/{SipRuleId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSipRuleResponse"
                    },
                    "inject": [
                        "params.0.SipRuleId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateSipRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SipRuleId": {},
                        "Name": {},
                        "Disabled": {},
                        "TargetApplications": {}
                    }
                }
            }
        },
        {
            "name": "UpdateVoiceConnector",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorId": "route.VoiceConnectorId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/voice-connectors/{VoiceConnectorId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateVoiceConnectorResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateVoiceConnectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorId": {},
                        "Name": {},
                        "RequireEncryption": {}
                    }
                }
            }
        },
        {
            "name": "UpdateVoiceConnectorGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceConnectorGroupId": "route.VoiceConnectorGroupId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/voice-connector-groups/{VoiceConnectorGroupId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateVoiceConnectorGroupResponse"
                    },
                    "inject": [
                        "params.0.VoiceConnectorGroupId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateVoiceConnectorGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceConnectorGroupId": {},
                        "Name": {},
                        "VoiceConnectorItems": {}
                    }
                }
            }
        },
        {
            "name": "UpdateVoiceProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceProfileId": "route.VoiceProfileId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/voice-profiles/{VoiceProfileId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateVoiceProfileResponse"
                    },
                    "inject": [
                        "params.0.VoiceProfileId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateVoiceProfileRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceProfileId": {},
                        "SpeakerSearchTaskId": {}
                    }
                }
            }
        },
        {
            "name": "UpdateVoiceProfileDomain",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VoiceProfileDomainId": "route.VoiceProfileDomainId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/voice-profile-domains/{VoiceProfileDomainId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateVoiceProfileDomainResponse"
                    },
                    "inject": [
                        "params.0.VoiceProfileDomainId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateVoiceProfileDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VoiceProfileDomainId": {},
                        "Name": {},
                        "Description": {}
                    }
                }
            }
        },
        {
            "name": "ValidateE911Address",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/emergency-calling/address"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ValidateE911AddressResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ValidateE911AddressRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AwsAccountId": {},
                        "StreetNumber": {},
                        "StreetInfo": {},
                        "City": {},
                        "State": {},
                        "Country": {},
                        "PostalCode": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociatePhoneNumbersWithVoiceConnectorRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "E164PhoneNumbers": {
                    "$ref": "#/$defs/E164PhoneNumberList"
                },
                "ForceAssociate": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "NonEmptyString": {
            "type": "string"
        },
        "E164PhoneNumberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/E164PhoneNumber"
            }
        },
        "E164PhoneNumber": {
            "type": "string"
        },
        "NullableBoolean": {
            "type": "boolean"
        },
        "AssociatePhoneNumbersWithVoiceConnectorResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberErrors": {
                    "$ref": "#/$defs/PhoneNumberErrorList"
                }
            }
        },
        "PhoneNumberErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PhoneNumberError"
            }
        },
        "PhoneNumberError": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SensitiveNonEmptyString": {
            "type": "string"
        },
        "ErrorCode": {
            "enum": [
                "BadRequest",
                "Conflict",
                "Forbidden",
                "NotFound",
                "PreconditionFailed",
                "ResourceLimitExceeded",
                "ServiceFailure",
                "AccessDenied",
                "ServiceUnavailable",
                "Throttled",
                "Throttling",
                "Unauthorized",
                "Unprocessable",
                "VoiceConnectorGroupAssociationsExist",
                "PhoneNumberAssociationsExist",
                "Gone"
            ]
        },
        "String": {
            "type": "string"
        },
        "AssociatePhoneNumbersWithVoiceConnectorGroupRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorGroupId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "E164PhoneNumbers": {
                    "$ref": "#/$defs/E164PhoneNumberList"
                },
                "ForceAssociate": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "AssociatePhoneNumbersWithVoiceConnectorGroupResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberErrors": {
                    "$ref": "#/$defs/PhoneNumberErrorList"
                }
            }
        },
        "BatchDeletePhoneNumberRequest": {
            "type": "object",
            "properties": {
                "PhoneNumberIds": {
                    "$ref": "#/$defs/NonEmptyStringList"
                }
            }
        },
        "NonEmptyStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "BatchDeletePhoneNumberResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberErrors": {
                    "$ref": "#/$defs/PhoneNumberErrorList"
                }
            }
        },
        "BatchUpdatePhoneNumberRequest": {
            "type": "object",
            "properties": {
                "UpdatePhoneNumberRequestItems": {
                    "$ref": "#/$defs/UpdatePhoneNumberRequestItemList"
                }
            }
        },
        "UpdatePhoneNumberRequestItemList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpdatePhoneNumberRequestItem"
            }
        },
        "UpdatePhoneNumberRequestItem": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                },
                "CallingName": {
                    "$ref": "#/$defs/CallingName"
                },
                "Name": {
                    "$ref": "#/$defs/PhoneNumberName"
                }
            }
        },
        "PhoneNumberProductType": {
            "enum": [
                "VoiceConnector",
                "SipMediaApplicationDialIn"
            ]
        },
        "CallingName": {
            "type": "string"
        },
        "PhoneNumberName": {
            "type": "string"
        },
        "BatchUpdatePhoneNumberResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberErrors": {
                    "$ref": "#/$defs/PhoneNumberErrorList"
                }
            }
        },
        "CreatePhoneNumberOrderRequest": {
            "type": "object",
            "properties": {
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                },
                "E164PhoneNumbers": {
                    "$ref": "#/$defs/E164PhoneNumberList"
                },
                "Name": {
                    "$ref": "#/$defs/PhoneNumberName"
                }
            }
        },
        "CreatePhoneNumberOrderResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberOrder": {
                    "$ref": "#/$defs/PhoneNumberOrder"
                }
            }
        },
        "PhoneNumberOrder": {
            "type": "object",
            "properties": {
                "PhoneNumberOrderId": {
                    "$ref": "#/$defs/GuidString"
                },
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                },
                "Status": {
                    "$ref": "#/$defs/PhoneNumberOrderStatus"
                },
                "OrderType": {
                    "$ref": "#/$defs/PhoneNumberOrderType"
                },
                "OrderedPhoneNumbers": {
                    "$ref": "#/$defs/OrderedPhoneNumberList"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "GuidString": {
            "type": "string"
        },
        "PhoneNumberOrderStatus": {
            "enum": [
                "Processing",
                "Successful",
                "Failed",
                "Partial",
                "PendingDocuments",
                "Submitted",
                "FOC",
                "ChangeRequested",
                "Exception",
                "CancelRequested",
                "Cancelled"
            ]
        },
        "PhoneNumberOrderType": {
            "enum": [
                "New",
                "Porting"
            ]
        },
        "OrderedPhoneNumberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrderedPhoneNumber"
            }
        },
        "OrderedPhoneNumber": {
            "type": "object",
            "properties": {
                "E164PhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "Status": {
                    "$ref": "#/$defs/OrderedPhoneNumberStatus"
                }
            }
        },
        "OrderedPhoneNumberStatus": {
            "enum": [
                "Processing",
                "Acquired",
                "Failed"
            ]
        },
        "Iso8601Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "CreateProxySessionRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "ParticipantPhoneNumbers": {
                    "$ref": "#/$defs/ParticipantPhoneNumberList"
                },
                "Name": {
                    "$ref": "#/$defs/ProxySessionNameString"
                },
                "ExpiryMinutes": {
                    "$ref": "#/$defs/PositiveInteger"
                },
                "Capabilities": {
                    "$ref": "#/$defs/CapabilityList"
                },
                "NumberSelectionBehavior": {
                    "$ref": "#/$defs/NumberSelectionBehavior"
                },
                "GeoMatchLevel": {
                    "$ref": "#/$defs/GeoMatchLevel"
                },
                "GeoMatchParams": {
                    "$ref": "#/$defs/GeoMatchParams"
                }
            }
        },
        "NonEmptyString128": {
            "type": "string"
        },
        "ParticipantPhoneNumberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/E164PhoneNumber"
            }
        },
        "ProxySessionNameString": {
            "type": "string"
        },
        "PositiveInteger": {
            "type": "integer",
            "format": "int32"
        },
        "CapabilityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Capability"
            }
        },
        "Capability": {
            "enum": [
                "Voice",
                "SMS"
            ]
        },
        "NumberSelectionBehavior": {
            "enum": [
                "PreferSticky",
                "AvoidSticky"
            ]
        },
        "GeoMatchLevel": {
            "enum": [
                "Country",
                "AreaCode"
            ]
        },
        "GeoMatchParams": {
            "type": "object",
            "properties": {
                "Country": {
                    "$ref": "#/$defs/Country"
                },
                "AreaCode": {
                    "$ref": "#/$defs/AreaCode"
                }
            }
        },
        "Country": {
            "type": "string"
        },
        "AreaCode": {
            "type": "string"
        },
        "CreateProxySessionResponse": {
            "type": "object",
            "properties": {
                "ProxySession": {
                    "$ref": "#/$defs/ProxySession"
                }
            }
        },
        "ProxySession": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "ProxySessionId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "Name": {
                    "$ref": "#/$defs/String128"
                },
                "Status": {
                    "$ref": "#/$defs/ProxySessionStatus"
                },
                "ExpiryMinutes": {
                    "$ref": "#/$defs/PositiveInteger"
                },
                "Capabilities": {
                    "$ref": "#/$defs/CapabilityList"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "EndedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "Participants": {
                    "$ref": "#/$defs/Participants"
                },
                "NumberSelectionBehavior": {
                    "$ref": "#/$defs/NumberSelectionBehavior"
                },
                "GeoMatchLevel": {
                    "$ref": "#/$defs/GeoMatchLevel"
                },
                "GeoMatchParams": {
                    "$ref": "#/$defs/GeoMatchParams"
                }
            }
        },
        "String128": {
            "type": "string"
        },
        "ProxySessionStatus": {
            "enum": [
                "Open",
                "InProgress",
                "Closed"
            ]
        },
        "Participants": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Participant"
            }
        },
        "Participant": {
            "type": "object",
            "properties": {
                "PhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "ProxyPhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                }
            }
        },
        "CreateSipMediaApplicationRequest": {
            "type": "object",
            "properties": {
                "AwsRegion": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/SipMediaApplicationName"
                },
                "Endpoints": {
                    "$ref": "#/$defs/SipMediaApplicationEndpointList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "SipMediaApplicationName": {
            "type": "string"
        },
        "SipMediaApplicationEndpointList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SipMediaApplicationEndpoint"
            }
        },
        "SipMediaApplicationEndpoint": {
            "type": "object",
            "properties": {
                "LambdaArn": {
                    "$ref": "#/$defs/FunctionArn"
                }
            }
        },
        "FunctionArn": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateSipMediaApplicationResponse": {
            "type": "object",
            "properties": {
                "SipMediaApplication": {
                    "$ref": "#/$defs/SipMediaApplication"
                }
            }
        },
        "SipMediaApplication": {
            "type": "object",
            "properties": {
                "SipMediaApplicationId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "AwsRegion": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/SipMediaApplicationName"
                },
                "Endpoints": {
                    "$ref": "#/$defs/SipMediaApplicationEndpointList"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "SipMediaApplicationArn": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "CreateSipMediaApplicationCallRequest": {
            "type": "object",
            "properties": {
                "FromPhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "ToPhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "SipMediaApplicationId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "SipHeaders": {
                    "$ref": "#/$defs/SipHeadersMap"
                },
                "ArgumentsMap": {
                    "$ref": "#/$defs/SMACreateCallArgumentsMap"
                }
            }
        },
        "SipHeadersMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/SensitiveString"
            }
        },
        "SensitiveString": {
            "type": "string"
        },
        "SMACreateCallArgumentsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/SensitiveString"
            }
        },
        "CreateSipMediaApplicationCallResponse": {
            "type": "object",
            "properties": {
                "SipMediaApplicationCall": {
                    "$ref": "#/$defs/SipMediaApplicationCall"
                }
            }
        },
        "SipMediaApplicationCall": {
            "type": "object",
            "properties": {
                "TransactionId": {
                    "$ref": "#/$defs/GuidString"
                }
            }
        },
        "CreateSipRuleRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/SipRuleName"
                },
                "TriggerType": {
                    "$ref": "#/$defs/SipRuleTriggerType"
                },
                "TriggerValue": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Disabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "TargetApplications": {
                    "$ref": "#/$defs/SipRuleTargetApplicationList"
                }
            }
        },
        "SipRuleName": {
            "type": "string"
        },
        "SipRuleTriggerType": {
            "enum": [
                "ToPhoneNumber",
                "RequestUriHostname"
            ]
        },
        "SipRuleTargetApplicationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SipRuleTargetApplication"
            }
        },
        "SipRuleTargetApplication": {
            "type": "object",
            "properties": {
                "SipMediaApplicationId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Priority": {
                    "$ref": "#/$defs/SipApplicationPriority"
                },
                "AwsRegion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SipApplicationPriority": {
            "type": "integer",
            "format": "int32"
        },
        "CreateSipRuleResponse": {
            "type": "object",
            "properties": {
                "SipRule": {
                    "$ref": "#/$defs/SipRule"
                }
            }
        },
        "SipRule": {
            "type": "object",
            "properties": {
                "SipRuleId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Name": {
                    "$ref": "#/$defs/SipRuleName"
                },
                "Disabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "TriggerType": {
                    "$ref": "#/$defs/SipRuleTriggerType"
                },
                "TriggerValue": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "TargetApplications": {
                    "$ref": "#/$defs/SipRuleTargetApplicationList"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "CreateVoiceConnectorRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/VoiceConnectorName"
                },
                "AwsRegion": {
                    "$ref": "#/$defs/VoiceConnectorAwsRegion"
                },
                "RequireEncryption": {
                    "$ref": "#/$defs/Boolean"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "IntegrationType": {
                    "$ref": "#/$defs/VoiceConnectorIntegrationType"
                }
            }
        },
        "VoiceConnectorName": {
            "type": "string"
        },
        "VoiceConnectorAwsRegion": {
            "enum": [
                "US_EAST_1",
                "US_WEST_2",
                "CA_CENTRAL_1",
                "EU_CENTRAL_1",
                "EU_WEST_1",
                "EU_WEST_2",
                "AP_NORTHEAST_2",
                "AP_NORTHEAST_1",
                "AP_SOUTHEAST_1",
                "AP_SOUTHEAST_2"
            ]
        },
        "VoiceConnectorIntegrationType": {
            "enum": [
                "CONNECT_CALL_TRANSFER_CONNECTOR",
                "CONNECT_ANALYTICS_CONNECTOR"
            ]
        },
        "CreateVoiceConnectorResponse": {
            "type": "object",
            "properties": {
                "VoiceConnector": {
                    "$ref": "#/$defs/VoiceConnector"
                }
            }
        },
        "VoiceConnector": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "AwsRegion": {
                    "$ref": "#/$defs/VoiceConnectorAwsRegion"
                },
                "Name": {
                    "$ref": "#/$defs/VoiceConnectorName"
                },
                "OutboundHostName": {
                    "$ref": "#/$defs/String"
                },
                "RequireEncryption": {
                    "$ref": "#/$defs/Boolean"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "VoiceConnectorArn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "IntegrationType": {
                    "$ref": "#/$defs/VoiceConnectorIntegrationType"
                }
            }
        },
        "CreateVoiceConnectorGroupRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/VoiceConnectorGroupName"
                },
                "VoiceConnectorItems": {
                    "$ref": "#/$defs/VoiceConnectorItemList"
                }
            }
        },
        "VoiceConnectorGroupName": {
            "type": "string"
        },
        "VoiceConnectorItemList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VoiceConnectorItem"
            }
        },
        "VoiceConnectorItem": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Priority": {
                    "$ref": "#/$defs/VoiceConnectorItemPriority"
                }
            }
        },
        "VoiceConnectorItemPriority": {
            "type": "integer",
            "format": "int32"
        },
        "CreateVoiceConnectorGroupResponse": {
            "type": "object",
            "properties": {
                "VoiceConnectorGroup": {
                    "$ref": "#/$defs/VoiceConnectorGroup"
                }
            }
        },
        "VoiceConnectorGroup": {
            "type": "object",
            "properties": {
                "VoiceConnectorGroupId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Name": {
                    "$ref": "#/$defs/VoiceConnectorGroupName"
                },
                "VoiceConnectorItems": {
                    "$ref": "#/$defs/VoiceConnectorItemList"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "VoiceConnectorGroupArn": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "CreateVoiceProfileRequest": {
            "type": "object",
            "properties": {
                "SpeakerSearchTaskId": {
                    "$ref": "#/$defs/NonEmptyString256"
                }
            }
        },
        "NonEmptyString256": {
            "type": "string"
        },
        "CreateVoiceProfileResponse": {
            "type": "object",
            "properties": {
                "VoiceProfile": {
                    "$ref": "#/$defs/VoiceProfile"
                }
            }
        },
        "VoiceProfile": {
            "type": "object",
            "properties": {
                "VoiceProfileId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "VoiceProfileArn": {
                    "$ref": "#/$defs/Arn"
                },
                "VoiceProfileDomainId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "ExpirationTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "Arn": {
            "type": "string"
        },
        "CreateVoiceProfileDomainRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/VoiceProfileDomainName"
                },
                "Description": {
                    "$ref": "#/$defs/VoiceProfileDomainDescription"
                },
                "ServerSideEncryptionConfiguration": {
                    "$ref": "#/$defs/ServerSideEncryptionConfiguration"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestId"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "VoiceProfileDomainName": {
            "type": "string"
        },
        "VoiceProfileDomainDescription": {
            "type": "string"
        },
        "ServerSideEncryptionConfiguration": {
            "type": "object",
            "properties": {
                "KmsKeyArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ClientRequestId": {
            "type": "string"
        },
        "CreateVoiceProfileDomainResponse": {
            "type": "object",
            "properties": {
                "VoiceProfileDomain": {
                    "$ref": "#/$defs/VoiceProfileDomain"
                }
            }
        },
        "VoiceProfileDomain": {
            "type": "object",
            "properties": {
                "VoiceProfileDomainId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "VoiceProfileDomainArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Name": {
                    "$ref": "#/$defs/VoiceProfileDomainName"
                },
                "Description": {
                    "$ref": "#/$defs/VoiceProfileDomainDescription"
                },
                "ServerSideEncryptionConfiguration": {
                    "$ref": "#/$defs/ServerSideEncryptionConfiguration"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "DeletePhoneNumberRequest": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                }
            }
        },
        "DeleteProxySessionRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "ProxySessionId": {
                    "$ref": "#/$defs/NonEmptyString128"
                }
            }
        },
        "DeleteSipMediaApplicationRequest": {
            "type": "object",
            "properties": {
                "SipMediaApplicationId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeleteSipRuleRequest": {
            "type": "object",
            "properties": {
                "SipRuleId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeleteVoiceConnectorRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeleteVoiceConnectorEmergencyCallingConfigurationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeleteVoiceConnectorExternalSystemsConfigurationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeleteVoiceConnectorGroupRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorGroupId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeleteVoiceConnectorOriginationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeleteVoiceConnectorProxyRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                }
            }
        },
        "DeleteVoiceConnectorStreamingConfigurationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeleteVoiceConnectorTerminationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeleteVoiceConnectorTerminationCredentialsRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Usernames": {
                    "$ref": "#/$defs/SensitiveStringList"
                }
            }
        },
        "SensitiveStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SensitiveString"
            }
        },
        "DeleteVoiceProfileRequest": {
            "type": "object",
            "properties": {
                "VoiceProfileId": {
                    "$ref": "#/$defs/NonEmptyString256"
                }
            }
        },
        "DeleteVoiceProfileDomainRequest": {
            "type": "object",
            "properties": {
                "VoiceProfileDomainId": {
                    "$ref": "#/$defs/NonEmptyString256"
                }
            }
        },
        "DisassociatePhoneNumbersFromVoiceConnectorRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "E164PhoneNumbers": {
                    "$ref": "#/$defs/E164PhoneNumberList"
                }
            }
        },
        "DisassociatePhoneNumbersFromVoiceConnectorResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberErrors": {
                    "$ref": "#/$defs/PhoneNumberErrorList"
                }
            }
        },
        "DisassociatePhoneNumbersFromVoiceConnectorGroupRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorGroupId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "E164PhoneNumbers": {
                    "$ref": "#/$defs/E164PhoneNumberList"
                }
            }
        },
        "DisassociatePhoneNumbersFromVoiceConnectorGroupResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberErrors": {
                    "$ref": "#/$defs/PhoneNumberErrorList"
                }
            }
        },
        "GetGlobalSettingsResponse": {
            "type": "object",
            "properties": {
                "VoiceConnector": {
                    "$ref": "#/$defs/VoiceConnectorSettings"
                }
            }
        },
        "VoiceConnectorSettings": {
            "type": "object",
            "properties": {
                "CdrBucket": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetPhoneNumberRequest": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                }
            }
        },
        "GetPhoneNumberResponse": {
            "type": "object",
            "properties": {
                "PhoneNumber": {
                    "$ref": "#/$defs/PhoneNumber"
                }
            }
        },
        "PhoneNumber": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "E164PhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "Country": {
                    "$ref": "#/$defs/Alpha2CountryCode"
                },
                "Type": {
                    "$ref": "#/$defs/PhoneNumberType"
                },
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                },
                "Status": {
                    "$ref": "#/$defs/PhoneNumberStatus"
                },
                "Capabilities": {
                    "$ref": "#/$defs/PhoneNumberCapabilities"
                },
                "Associations": {
                    "$ref": "#/$defs/PhoneNumberAssociationList"
                },
                "CallingName": {
                    "$ref": "#/$defs/CallingName"
                },
                "CallingNameStatus": {
                    "$ref": "#/$defs/CallingNameStatus"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "DeletionTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "OrderId": {
                    "$ref": "#/$defs/GuidString"
                },
                "Name": {
                    "$ref": "#/$defs/PhoneNumberName"
                }
            }
        },
        "Alpha2CountryCode": {
            "type": "string"
        },
        "PhoneNumberType": {
            "enum": [
                "Local",
                "TollFree"
            ]
        },
        "PhoneNumberStatus": {
            "enum": [
                "Cancelled",
                "PortinCancelRequested",
                "PortinInProgress",
                "AcquireInProgress",
                "AcquireFailed",
                "Unassigned",
                "Assigned",
                "ReleaseInProgress",
                "DeleteInProgress",
                "ReleaseFailed",
                "DeleteFailed"
            ]
        },
        "PhoneNumberCapabilities": {
            "type": "object",
            "properties": {
                "InboundCall": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "OutboundCall": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "InboundSMS": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "OutboundSMS": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "InboundMMS": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "OutboundMMS": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "PhoneNumberAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PhoneNumberAssociation"
            }
        },
        "PhoneNumberAssociation": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/PhoneNumberAssociationName"
                },
                "AssociatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "PhoneNumberAssociationName": {
            "enum": [
                "VoiceConnectorId",
                "VoiceConnectorGroupId",
                "SipRuleId"
            ]
        },
        "CallingNameStatus": {
            "enum": [
                "Unassigned",
                "UpdateInProgress",
                "UpdateSucceeded",
                "UpdateFailed"
            ]
        },
        "GetPhoneNumberOrderRequest": {
            "type": "object",
            "properties": {
                "PhoneNumberOrderId": {
                    "$ref": "#/$defs/GuidString"
                }
            }
        },
        "GetPhoneNumberOrderResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberOrder": {
                    "$ref": "#/$defs/PhoneNumberOrder"
                }
            }
        },
        "GetPhoneNumberSettingsResponse": {
            "type": "object",
            "properties": {
                "CallingName": {
                    "$ref": "#/$defs/CallingName"
                },
                "CallingNameUpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "GetProxySessionRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "ProxySessionId": {
                    "$ref": "#/$defs/NonEmptyString128"
                }
            }
        },
        "GetProxySessionResponse": {
            "type": "object",
            "properties": {
                "ProxySession": {
                    "$ref": "#/$defs/ProxySession"
                }
            }
        },
        "GetSipMediaApplicationRequest": {
            "type": "object",
            "properties": {
                "SipMediaApplicationId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetSipMediaApplicationResponse": {
            "type": "object",
            "properties": {
                "SipMediaApplication": {
                    "$ref": "#/$defs/SipMediaApplication"
                }
            }
        },
        "GetSipMediaApplicationAlexaSkillConfigurationRequest": {
            "type": "object",
            "properties": {
                "SipMediaApplicationId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetSipMediaApplicationAlexaSkillConfigurationResponse": {
            "type": "object",
            "properties": {
                "SipMediaApplicationAlexaSkillConfiguration": {
                    "$ref": "#/$defs/SipMediaApplicationAlexaSkillConfiguration"
                }
            }
        },
        "SipMediaApplicationAlexaSkillConfiguration": {
            "type": "object",
            "properties": {
                "AlexaSkillStatus": {
                    "$ref": "#/$defs/AlexaSkillStatus"
                },
                "AlexaSkillIds": {
                    "$ref": "#/$defs/AlexaSkillIdList"
                }
            }
        },
        "AlexaSkillStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "AlexaSkillIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AlexaSkillId"
            }
        },
        "AlexaSkillId": {
            "type": "string"
        },
        "GetSipMediaApplicationLoggingConfigurationRequest": {
            "type": "object",
            "properties": {
                "SipMediaApplicationId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetSipMediaApplicationLoggingConfigurationResponse": {
            "type": "object",
            "properties": {
                "SipMediaApplicationLoggingConfiguration": {
                    "$ref": "#/$defs/SipMediaApplicationLoggingConfiguration"
                }
            }
        },
        "SipMediaApplicationLoggingConfiguration": {
            "type": "object",
            "properties": {
                "EnableSipMediaApplicationMessageLogs": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetSipRuleRequest": {
            "type": "object",
            "properties": {
                "SipRuleId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetSipRuleResponse": {
            "type": "object",
            "properties": {
                "SipRule": {
                    "$ref": "#/$defs/SipRule"
                }
            }
        },
        "GetSpeakerSearchTaskRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "SpeakerSearchTaskId": {
                    "$ref": "#/$defs/NonEmptyString256"
                }
            }
        },
        "GetSpeakerSearchTaskResponse": {
            "type": "object",
            "properties": {
                "SpeakerSearchTask": {
                    "$ref": "#/$defs/SpeakerSearchTask"
                }
            }
        },
        "SpeakerSearchTask": {
            "type": "object",
            "properties": {
                "SpeakerSearchTaskId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "SpeakerSearchTaskStatus": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "CallDetails": {
                    "$ref": "#/$defs/CallDetails"
                },
                "SpeakerSearchDetails": {
                    "$ref": "#/$defs/SpeakerSearchDetails"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "StartedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CallDetails": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "TransactionId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "IsCaller": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SpeakerSearchDetails": {
            "type": "object",
            "properties": {
                "Results": {
                    "$ref": "#/$defs/SpeakerSearchResultList"
                },
                "VoiceprintGenerationStatus": {
                    "$ref": "#/$defs/NonEmptyString256"
                }
            }
        },
        "SpeakerSearchResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SpeakerSearchResult"
            }
        },
        "SpeakerSearchResult": {
            "type": "object",
            "properties": {
                "ConfidenceScore": {
                    "$ref": "#/$defs/ConfidenceScore"
                },
                "VoiceProfileId": {
                    "$ref": "#/$defs/NonEmptyString256"
                }
            }
        },
        "ConfidenceScore": {
            "type": "number",
            "format": "float"
        },
        "GetVoiceConnectorRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetVoiceConnectorResponse": {
            "type": "object",
            "properties": {
                "VoiceConnector": {
                    "$ref": "#/$defs/VoiceConnector"
                }
            }
        },
        "GetVoiceConnectorEmergencyCallingConfigurationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetVoiceConnectorEmergencyCallingConfigurationResponse": {
            "type": "object",
            "properties": {
                "EmergencyCallingConfiguration": {
                    "$ref": "#/$defs/EmergencyCallingConfiguration"
                }
            }
        },
        "EmergencyCallingConfiguration": {
            "type": "object",
            "properties": {
                "DNIS": {
                    "$ref": "#/$defs/DNISEmergencyCallingConfigurationList"
                }
            }
        },
        "DNISEmergencyCallingConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DNISEmergencyCallingConfiguration"
            }
        },
        "DNISEmergencyCallingConfiguration": {
            "type": "object",
            "properties": {
                "EmergencyPhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "TestPhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "CallingCountry": {
                    "$ref": "#/$defs/Alpha2CountryCode"
                }
            }
        },
        "GetVoiceConnectorExternalSystemsConfigurationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetVoiceConnectorExternalSystemsConfigurationResponse": {
            "type": "object",
            "properties": {
                "ExternalSystemsConfiguration": {
                    "$ref": "#/$defs/ExternalSystemsConfiguration"
                }
            }
        },
        "ExternalSystemsConfiguration": {
            "type": "object",
            "properties": {
                "SessionBorderControllerTypes": {
                    "$ref": "#/$defs/SessionBorderControllerTypeList"
                },
                "ContactCenterSystemTypes": {
                    "$ref": "#/$defs/ContactCenterSystemTypeList"
                }
            }
        },
        "SessionBorderControllerTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SessionBorderControllerType"
            }
        },
        "SessionBorderControllerType": {
            "enum": [
                "RIBBON_SBC",
                "ORACLE_ACME_PACKET_SBC",
                "AVAYA_SBCE",
                "CISCO_UNIFIED_BORDER_ELEMENT",
                "AUDIOCODES_MEDIANT_SBC"
            ]
        },
        "ContactCenterSystemTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContactCenterSystemType"
            }
        },
        "ContactCenterSystemType": {
            "enum": [
                "GENESYS_ENGAGE_ON_PREMISES",
                "AVAYA_AURA_CALL_CENTER_ELITE",
                "AVAYA_AURA_CONTACT_CENTER",
                "CISCO_UNIFIED_CONTACT_CENTER_ENTERPRISE"
            ]
        },
        "GetVoiceConnectorGroupRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorGroupId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetVoiceConnectorGroupResponse": {
            "type": "object",
            "properties": {
                "VoiceConnectorGroup": {
                    "$ref": "#/$defs/VoiceConnectorGroup"
                }
            }
        },
        "GetVoiceConnectorLoggingConfigurationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetVoiceConnectorLoggingConfigurationResponse": {
            "type": "object",
            "properties": {
                "LoggingConfiguration": {
                    "$ref": "#/$defs/LoggingConfiguration"
                }
            }
        },
        "LoggingConfiguration": {
            "type": "object",
            "properties": {
                "EnableSIPLogs": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnableMediaMetricLogs": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetVoiceConnectorOriginationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetVoiceConnectorOriginationResponse": {
            "type": "object",
            "properties": {
                "Origination": {
                    "$ref": "#/$defs/Origination"
                }
            }
        },
        "Origination": {
            "type": "object",
            "properties": {
                "Routes": {
                    "$ref": "#/$defs/OriginationRouteList"
                },
                "Disabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "OriginationRouteList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OriginationRoute"
            }
        },
        "OriginationRoute": {
            "type": "object",
            "properties": {
                "Host": {
                    "$ref": "#/$defs/String"
                },
                "Port": {
                    "$ref": "#/$defs/Port"
                },
                "Protocol": {
                    "$ref": "#/$defs/OriginationRouteProtocol"
                },
                "Priority": {
                    "$ref": "#/$defs/OriginationRoutePriority"
                },
                "Weight": {
                    "$ref": "#/$defs/OriginationRouteWeight"
                }
            }
        },
        "Port": {
            "type": "integer",
            "format": "int32"
        },
        "OriginationRouteProtocol": {
            "enum": [
                "TCP",
                "UDP"
            ]
        },
        "OriginationRoutePriority": {
            "type": "integer",
            "format": "int32"
        },
        "OriginationRouteWeight": {
            "type": "integer",
            "format": "int32"
        },
        "GetVoiceConnectorProxyRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                }
            }
        },
        "GetVoiceConnectorProxyResponse": {
            "type": "object",
            "properties": {
                "Proxy": {
                    "$ref": "#/$defs/Proxy"
                }
            }
        },
        "Proxy": {
            "type": "object",
            "properties": {
                "DefaultSessionExpiryMinutes": {
                    "$ref": "#/$defs/Integer"
                },
                "Disabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "FallBackPhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "PhoneNumberCountries": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "GetVoiceConnectorStreamingConfigurationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetVoiceConnectorStreamingConfigurationResponse": {
            "type": "object",
            "properties": {
                "StreamingConfiguration": {
                    "$ref": "#/$defs/StreamingConfiguration"
                }
            }
        },
        "StreamingConfiguration": {
            "type": "object",
            "properties": {
                "DataRetentionInHours": {
                    "$ref": "#/$defs/DataRetentionInHours"
                },
                "Disabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "StreamingNotificationTargets": {
                    "$ref": "#/$defs/StreamingNotificationTargetList"
                },
                "MediaInsightsConfiguration": {
                    "$ref": "#/$defs/MediaInsightsConfiguration"
                }
            }
        },
        "DataRetentionInHours": {
            "type": "integer",
            "format": "int32"
        },
        "StreamingNotificationTargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StreamingNotificationTarget"
            }
        },
        "StreamingNotificationTarget": {
            "type": "object",
            "properties": {
                "NotificationTarget": {
                    "$ref": "#/$defs/NotificationTarget"
                }
            }
        },
        "NotificationTarget": {
            "enum": [
                "EventBridge",
                "SNS",
                "SQS"
            ]
        },
        "MediaInsightsConfiguration": {
            "type": "object",
            "properties": {
                "Disabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "ConfigurationArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "GetVoiceConnectorTerminationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetVoiceConnectorTerminationResponse": {
            "type": "object",
            "properties": {
                "Termination": {
                    "$ref": "#/$defs/Termination"
                }
            }
        },
        "Termination": {
            "type": "object",
            "properties": {
                "CpsLimit": {
                    "$ref": "#/$defs/CpsLimit"
                },
                "DefaultPhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "CallingRegions": {
                    "$ref": "#/$defs/CallingRegionList"
                },
                "CidrAllowedList": {
                    "$ref": "#/$defs/StringList"
                },
                "Disabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CpsLimit": {
            "type": "integer",
            "format": "int32"
        },
        "CallingRegionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CallingRegion"
            }
        },
        "CallingRegion": {
            "type": "string"
        },
        "GetVoiceConnectorTerminationHealthRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetVoiceConnectorTerminationHealthResponse": {
            "type": "object",
            "properties": {
                "TerminationHealth": {
                    "$ref": "#/$defs/TerminationHealth"
                }
            }
        },
        "TerminationHealth": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "Source": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetVoiceProfileRequest": {
            "type": "object",
            "properties": {
                "VoiceProfileId": {
                    "$ref": "#/$defs/NonEmptyString256"
                }
            }
        },
        "GetVoiceProfileResponse": {
            "type": "object",
            "properties": {
                "VoiceProfile": {
                    "$ref": "#/$defs/VoiceProfile"
                }
            }
        },
        "GetVoiceProfileDomainRequest": {
            "type": "object",
            "properties": {
                "VoiceProfileDomainId": {
                    "$ref": "#/$defs/NonEmptyString256"
                }
            }
        },
        "GetVoiceProfileDomainResponse": {
            "type": "object",
            "properties": {
                "VoiceProfileDomain": {
                    "$ref": "#/$defs/VoiceProfileDomain"
                }
            }
        },
        "GetVoiceToneAnalysisTaskRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "VoiceToneAnalysisTaskId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "IsCaller": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetVoiceToneAnalysisTaskResponse": {
            "type": "object",
            "properties": {
                "VoiceToneAnalysisTask": {
                    "$ref": "#/$defs/VoiceToneAnalysisTask"
                }
            }
        },
        "VoiceToneAnalysisTask": {
            "type": "object",
            "properties": {
                "VoiceToneAnalysisTaskId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "VoiceToneAnalysisTaskStatus": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "CallDetails": {
                    "$ref": "#/$defs/CallDetails"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "StartedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListAvailableVoiceConnectorRegionsResponse": {
            "type": "object",
            "properties": {
                "VoiceConnectorRegions": {
                    "$ref": "#/$defs/VoiceConnectorAwsRegionList"
                }
            }
        },
        "VoiceConnectorAwsRegionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VoiceConnectorAwsRegion"
            }
        },
        "ListPhoneNumberOrdersRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                }
            }
        },
        "ResultMax": {
            "type": "integer",
            "format": "int32"
        },
        "ListPhoneNumberOrdersResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberOrders": {
                    "$ref": "#/$defs/PhoneNumberOrderList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PhoneNumberOrderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PhoneNumberOrder"
            }
        },
        "ListPhoneNumbersRequest": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                },
                "FilterName": {
                    "$ref": "#/$defs/PhoneNumberAssociationName"
                },
                "FilterValue": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListPhoneNumbersResponse": {
            "type": "object",
            "properties": {
                "PhoneNumbers": {
                    "$ref": "#/$defs/PhoneNumberList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PhoneNumberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PhoneNumber"
            }
        },
        "ListProxySessionsRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "Status": {
                    "$ref": "#/$defs/ProxySessionStatus"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                }
            }
        },
        "NextTokenString": {
            "type": "string"
        },
        "ListProxySessionsResponse": {
            "type": "object",
            "properties": {
                "ProxySessions": {
                    "$ref": "#/$defs/ProxySessions"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenString"
                }
            }
        },
        "ProxySessions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProxySession"
            }
        },
        "ListSipMediaApplicationsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenString"
                }
            }
        },
        "ListSipMediaApplicationsResponse": {
            "type": "object",
            "properties": {
                "SipMediaApplications": {
                    "$ref": "#/$defs/SipMediaApplicationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenString"
                }
            }
        },
        "SipMediaApplicationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SipMediaApplication"
            }
        },
        "ListSipRulesRequest": {
            "type": "object",
            "properties": {
                "SipMediaApplicationId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenString"
                }
            }
        },
        "ListSipRulesResponse": {
            "type": "object",
            "properties": {
                "SipRules": {
                    "$ref": "#/$defs/SipRuleList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenString"
                }
            }
        },
        "SipRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SipRule"
            }
        },
        "ListSupportedPhoneNumberCountriesRequest": {
            "type": "object",
            "properties": {
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                }
            }
        },
        "ListSupportedPhoneNumberCountriesResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberCountries": {
                    "$ref": "#/$defs/PhoneNumberCountriesList"
                }
            }
        },
        "PhoneNumberCountriesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PhoneNumberCountry"
            }
        },
        "PhoneNumberCountry": {
            "type": "object",
            "properties": {
                "CountryCode": {
                    "$ref": "#/$defs/Alpha2CountryCode"
                },
                "SupportedPhoneNumberTypes": {
                    "$ref": "#/$defs/PhoneNumberTypeList"
                }
            }
        },
        "PhoneNumberTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PhoneNumberType"
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListVoiceConnectorGroupsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                }
            }
        },
        "ListVoiceConnectorGroupsResponse": {
            "type": "object",
            "properties": {
                "VoiceConnectorGroups": {
                    "$ref": "#/$defs/VoiceConnectorGroupList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VoiceConnectorGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VoiceConnectorGroup"
            }
        },
        "ListVoiceConnectorsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                }
            }
        },
        "ListVoiceConnectorsResponse": {
            "type": "object",
            "properties": {
                "VoiceConnectors": {
                    "$ref": "#/$defs/VoiceConnectorList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VoiceConnectorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VoiceConnector"
            }
        },
        "ListVoiceConnectorTerminationCredentialsRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "ListVoiceConnectorTerminationCredentialsResponse": {
            "type": "object",
            "properties": {
                "Usernames": {
                    "$ref": "#/$defs/SensitiveStringList"
                }
            }
        },
        "ListVoiceProfileDomainsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                }
            }
        },
        "ListVoiceProfileDomainsResponse": {
            "type": "object",
            "properties": {
                "VoiceProfileDomains": {
                    "$ref": "#/$defs/VoiceProfileDomainSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VoiceProfileDomainSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VoiceProfileDomainSummary"
            }
        },
        "VoiceProfileDomainSummary": {
            "type": "object",
            "properties": {
                "VoiceProfileDomainId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "VoiceProfileDomainArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Name": {
                    "$ref": "#/$defs/VoiceProfileDomainName"
                },
                "Description": {
                    "$ref": "#/$defs/VoiceProfileDomainDescription"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "ListVoiceProfilesRequest": {
            "type": "object",
            "properties": {
                "VoiceProfileDomainId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                }
            }
        },
        "ListVoiceProfilesResponse": {
            "type": "object",
            "properties": {
                "VoiceProfiles": {
                    "$ref": "#/$defs/VoiceProfileSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VoiceProfileSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VoiceProfileSummary"
            }
        },
        "VoiceProfileSummary": {
            "type": "object",
            "properties": {
                "VoiceProfileId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "VoiceProfileArn": {
                    "$ref": "#/$defs/Arn"
                },
                "VoiceProfileDomainId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "ExpirationTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "PutSipMediaApplicationAlexaSkillConfigurationRequest": {
            "type": "object",
            "properties": {
                "SipMediaApplicationId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "SipMediaApplicationAlexaSkillConfiguration": {
                    "$ref": "#/$defs/SipMediaApplicationAlexaSkillConfiguration"
                }
            }
        },
        "PutSipMediaApplicationAlexaSkillConfigurationResponse": {
            "type": "object",
            "properties": {
                "SipMediaApplicationAlexaSkillConfiguration": {
                    "$ref": "#/$defs/SipMediaApplicationAlexaSkillConfiguration"
                }
            }
        },
        "PutSipMediaApplicationLoggingConfigurationRequest": {
            "type": "object",
            "properties": {
                "SipMediaApplicationId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "SipMediaApplicationLoggingConfiguration": {
                    "$ref": "#/$defs/SipMediaApplicationLoggingConfiguration"
                }
            }
        },
        "PutSipMediaApplicationLoggingConfigurationResponse": {
            "type": "object",
            "properties": {
                "SipMediaApplicationLoggingConfiguration": {
                    "$ref": "#/$defs/SipMediaApplicationLoggingConfiguration"
                }
            }
        },
        "PutVoiceConnectorEmergencyCallingConfigurationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "EmergencyCallingConfiguration": {
                    "$ref": "#/$defs/EmergencyCallingConfiguration"
                }
            }
        },
        "PutVoiceConnectorEmergencyCallingConfigurationResponse": {
            "type": "object",
            "properties": {
                "EmergencyCallingConfiguration": {
                    "$ref": "#/$defs/EmergencyCallingConfiguration"
                }
            }
        },
        "PutVoiceConnectorExternalSystemsConfigurationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "SessionBorderControllerTypes": {
                    "$ref": "#/$defs/SessionBorderControllerTypeList"
                },
                "ContactCenterSystemTypes": {
                    "$ref": "#/$defs/ContactCenterSystemTypeList"
                }
            }
        },
        "PutVoiceConnectorExternalSystemsConfigurationResponse": {
            "type": "object",
            "properties": {
                "ExternalSystemsConfiguration": {
                    "$ref": "#/$defs/ExternalSystemsConfiguration"
                }
            }
        },
        "PutVoiceConnectorLoggingConfigurationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "LoggingConfiguration": {
                    "$ref": "#/$defs/LoggingConfiguration"
                }
            }
        },
        "PutVoiceConnectorLoggingConfigurationResponse": {
            "type": "object",
            "properties": {
                "LoggingConfiguration": {
                    "$ref": "#/$defs/LoggingConfiguration"
                }
            }
        },
        "PutVoiceConnectorOriginationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Origination": {
                    "$ref": "#/$defs/Origination"
                }
            }
        },
        "PutVoiceConnectorOriginationResponse": {
            "type": "object",
            "properties": {
                "Origination": {
                    "$ref": "#/$defs/Origination"
                }
            }
        },
        "PutVoiceConnectorProxyRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "DefaultSessionExpiryMinutes": {
                    "$ref": "#/$defs/Integer"
                },
                "PhoneNumberPoolCountries": {
                    "$ref": "#/$defs/CountryList"
                },
                "FallBackPhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "Disabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CountryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Country"
            }
        },
        "PutVoiceConnectorProxyResponse": {
            "type": "object",
            "properties": {
                "Proxy": {
                    "$ref": "#/$defs/Proxy"
                }
            }
        },
        "PutVoiceConnectorStreamingConfigurationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "StreamingConfiguration": {
                    "$ref": "#/$defs/StreamingConfiguration"
                }
            }
        },
        "PutVoiceConnectorStreamingConfigurationResponse": {
            "type": "object",
            "properties": {
                "StreamingConfiguration": {
                    "$ref": "#/$defs/StreamingConfiguration"
                }
            }
        },
        "PutVoiceConnectorTerminationRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Termination": {
                    "$ref": "#/$defs/Termination"
                }
            }
        },
        "PutVoiceConnectorTerminationResponse": {
            "type": "object",
            "properties": {
                "Termination": {
                    "$ref": "#/$defs/Termination"
                }
            }
        },
        "PutVoiceConnectorTerminationCredentialsRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Credentials": {
                    "$ref": "#/$defs/CredentialList"
                }
            }
        },
        "CredentialList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Credential"
            }
        },
        "Credential": {
            "type": "object",
            "properties": {
                "Username": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "Password": {
                    "$ref": "#/$defs/SensitiveString"
                }
            }
        },
        "RestorePhoneNumberRequest": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                }
            }
        },
        "RestorePhoneNumberResponse": {
            "type": "object",
            "properties": {
                "PhoneNumber": {
                    "$ref": "#/$defs/PhoneNumber"
                }
            }
        },
        "SearchAvailablePhoneNumbersRequest": {
            "type": "object",
            "properties": {
                "AreaCode": {
                    "$ref": "#/$defs/String"
                },
                "City": {
                    "$ref": "#/$defs/String"
                },
                "Country": {
                    "$ref": "#/$defs/Alpha2CountryCode"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "TollFreePrefix": {
                    "$ref": "#/$defs/TollFreePrefix"
                },
                "PhoneNumberType": {
                    "$ref": "#/$defs/PhoneNumberType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PhoneNumberMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TollFreePrefix": {
            "type": "string"
        },
        "PhoneNumberMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "SearchAvailablePhoneNumbersResponse": {
            "type": "object",
            "properties": {
                "E164PhoneNumbers": {
                    "$ref": "#/$defs/E164PhoneNumberList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StartSpeakerSearchTaskRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "TransactionId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "VoiceProfileDomainId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestId"
                },
                "CallLeg": {
                    "$ref": "#/$defs/CallLegType"
                }
            }
        },
        "CallLegType": {
            "enum": [
                "CALLER",
                "CALLEE"
            ]
        },
        "StartSpeakerSearchTaskResponse": {
            "type": "object",
            "properties": {
                "SpeakerSearchTask": {
                    "$ref": "#/$defs/SpeakerSearchTask"
                }
            }
        },
        "StartVoiceToneAnalysisTaskRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "TransactionId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "LanguageCode": {
                    "$ref": "#/$defs/LanguageCode"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestId"
                }
            }
        },
        "LanguageCode": {
            "enum": [
                "EN_US"
            ]
        },
        "StartVoiceToneAnalysisTaskResponse": {
            "type": "object",
            "properties": {
                "VoiceToneAnalysisTask": {
                    "$ref": "#/$defs/VoiceToneAnalysisTask"
                }
            }
        },
        "StopSpeakerSearchTaskRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "SpeakerSearchTaskId": {
                    "$ref": "#/$defs/NonEmptyString256"
                }
            }
        },
        "StopVoiceToneAnalysisTaskRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "VoiceToneAnalysisTaskId": {
                    "$ref": "#/$defs/NonEmptyString256"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/Arn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/Arn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateGlobalSettingsRequest": {
            "type": "object",
            "properties": {
                "VoiceConnector": {
                    "$ref": "#/$defs/VoiceConnectorSettings"
                }
            }
        },
        "UpdatePhoneNumberRequest": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                },
                "CallingName": {
                    "$ref": "#/$defs/CallingName"
                },
                "Name": {
                    "$ref": "#/$defs/PhoneNumberName"
                }
            }
        },
        "UpdatePhoneNumberResponse": {
            "type": "object",
            "properties": {
                "PhoneNumber": {
                    "$ref": "#/$defs/PhoneNumber"
                }
            }
        },
        "UpdatePhoneNumberSettingsRequest": {
            "type": "object",
            "properties": {
                "CallingName": {
                    "$ref": "#/$defs/CallingName"
                }
            }
        },
        "UpdateProxySessionRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "ProxySessionId": {
                    "$ref": "#/$defs/NonEmptyString128"
                },
                "Capabilities": {
                    "$ref": "#/$defs/CapabilityList"
                },
                "ExpiryMinutes": {
                    "$ref": "#/$defs/PositiveInteger"
                }
            }
        },
        "UpdateProxySessionResponse": {
            "type": "object",
            "properties": {
                "ProxySession": {
                    "$ref": "#/$defs/ProxySession"
                }
            }
        },
        "UpdateSipMediaApplicationRequest": {
            "type": "object",
            "properties": {
                "SipMediaApplicationId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Name": {
                    "$ref": "#/$defs/SipMediaApplicationName"
                },
                "Endpoints": {
                    "$ref": "#/$defs/SipMediaApplicationEndpointList"
                }
            }
        },
        "UpdateSipMediaApplicationResponse": {
            "type": "object",
            "properties": {
                "SipMediaApplication": {
                    "$ref": "#/$defs/SipMediaApplication"
                }
            }
        },
        "UpdateSipMediaApplicationCallRequest": {
            "type": "object",
            "properties": {
                "SipMediaApplicationId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "TransactionId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Arguments": {
                    "$ref": "#/$defs/SMAUpdateCallArgumentsMap"
                }
            }
        },
        "SMAUpdateCallArgumentsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/SensitiveString"
            }
        },
        "UpdateSipMediaApplicationCallResponse": {
            "type": "object",
            "properties": {
                "SipMediaApplicationCall": {
                    "$ref": "#/$defs/SipMediaApplicationCall"
                }
            }
        },
        "UpdateSipRuleRequest": {
            "type": "object",
            "properties": {
                "SipRuleId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Name": {
                    "$ref": "#/$defs/SipRuleName"
                },
                "Disabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "TargetApplications": {
                    "$ref": "#/$defs/SipRuleTargetApplicationList"
                }
            }
        },
        "UpdateSipRuleResponse": {
            "type": "object",
            "properties": {
                "SipRule": {
                    "$ref": "#/$defs/SipRule"
                }
            }
        },
        "UpdateVoiceConnectorRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Name": {
                    "$ref": "#/$defs/VoiceConnectorName"
                },
                "RequireEncryption": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UpdateVoiceConnectorResponse": {
            "type": "object",
            "properties": {
                "VoiceConnector": {
                    "$ref": "#/$defs/VoiceConnector"
                }
            }
        },
        "UpdateVoiceConnectorGroupRequest": {
            "type": "object",
            "properties": {
                "VoiceConnectorGroupId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Name": {
                    "$ref": "#/$defs/VoiceConnectorGroupName"
                },
                "VoiceConnectorItems": {
                    "$ref": "#/$defs/VoiceConnectorItemList"
                }
            }
        },
        "UpdateVoiceConnectorGroupResponse": {
            "type": "object",
            "properties": {
                "VoiceConnectorGroup": {
                    "$ref": "#/$defs/VoiceConnectorGroup"
                }
            }
        },
        "UpdateVoiceProfileRequest": {
            "type": "object",
            "properties": {
                "VoiceProfileId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "SpeakerSearchTaskId": {
                    "$ref": "#/$defs/NonEmptyString256"
                }
            }
        },
        "UpdateVoiceProfileResponse": {
            "type": "object",
            "properties": {
                "VoiceProfile": {
                    "$ref": "#/$defs/VoiceProfile"
                }
            }
        },
        "UpdateVoiceProfileDomainRequest": {
            "type": "object",
            "properties": {
                "VoiceProfileDomainId": {
                    "$ref": "#/$defs/NonEmptyString256"
                },
                "Name": {
                    "$ref": "#/$defs/VoiceProfileDomainName"
                },
                "Description": {
                    "$ref": "#/$defs/VoiceProfileDomainDescription"
                }
            }
        },
        "UpdateVoiceProfileDomainResponse": {
            "type": "object",
            "properties": {
                "VoiceProfileDomain": {
                    "$ref": "#/$defs/VoiceProfileDomain"
                }
            }
        },
        "ValidateE911AddressRequest": {
            "type": "object",
            "properties": {
                "AwsAccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "StreetNumber": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "StreetInfo": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "City": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "State": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "Country": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "PostalCode": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                }
            }
        },
        "ValidateE911AddressResponse": {
            "type": "object",
            "properties": {
                "ValidationResult": {
                    "$ref": "#/$defs/ValidationResult"
                },
                "AddressExternalId": {
                    "$ref": "#/$defs/String"
                },
                "Address": {
                    "$ref": "#/$defs/Address"
                },
                "CandidateAddressList": {
                    "$ref": "#/$defs/CandidateAddressList"
                }
            }
        },
        "ValidationResult": {
            "type": "integer",
            "format": "int32"
        },
        "Address": {
            "type": "object",
            "properties": {
                "streetName": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "streetSuffix": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "postDirectional": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "preDirectional": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "streetNumber": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "city": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "state": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "postalCode": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "postalCodePlus4": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "country": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                }
            }
        },
        "CandidateAddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CandidateAddress"
            }
        },
        "CandidateAddress": {
            "type": "object",
            "properties": {
                "streetInfo": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "streetNumber": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "city": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "state": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "postalCode": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "postalCodePlus4": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "country": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://voice-chime-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://voice-chime-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://voice-chime.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://voice-chime.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                }
            ]
        }
    }
}
