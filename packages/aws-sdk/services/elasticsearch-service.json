{
    "name": "es",
    "commands": [
        {
            "name": "AcceptInboundCrossClusterSearchConnection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "CrossClusterSearchConnectionId": "route.CrossClusterSearchConnectionId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/2015-01-01/es/ccs/inboundConnection/{CrossClusterSearchConnectionId}/accept"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptInboundCrossClusterSearchConnectionResponse"
                    },
                    "inject": [
                        "params.0.CrossClusterSearchConnectionId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AcceptInboundCrossClusterSearchConnectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CrossClusterSearchConnectionId": {}
                    }
                }
            }
        },
        {
            "name": "AddTags",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/tags"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AddTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ARN": {},
                        "TagList": {}
                    }
                }
            }
        },
        {
            "name": "AssociatePackage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PackageID": "route.PackageID",
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/packages/associate/{PackageID}/{DomainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociatePackageResponse"
                    },
                    "inject": [
                        "params.0.PackageID",
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AssociatePackageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PackageID": {},
                        "DomainName": {}
                    }
                }
            }
        },
        {
            "name": "AuthorizeVpcEndpointAccess",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/domain/{DomainName}/authorizeVpcEndpointAccess"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AuthorizeVpcEndpointAccessResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AuthorizeVpcEndpointAccessRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "Account": {}
                    }
                }
            }
        },
        {
            "name": "CancelDomainConfigChange",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/domain/{DomainName}/config/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelDomainConfigChangeResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CancelDomainConfigChangeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "DryRun": {}
                    }
                }
            }
        },
        {
            "name": "CancelElasticsearchServiceSoftwareUpdate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/serviceSoftwareUpdate/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelElasticsearchServiceSoftwareUpdateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CancelElasticsearchServiceSoftwareUpdateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {}
                    }
                }
            }
        },
        {
            "name": "CreateElasticsearchDomain",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/domain"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateElasticsearchDomainResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateElasticsearchDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "ElasticsearchVersion": {},
                        "ElasticsearchClusterConfig": {},
                        "EBSOptions": {},
                        "AccessPolicies": {},
                        "SnapshotOptions": {},
                        "VPCOptions": {},
                        "CognitoOptions": {},
                        "EncryptionAtRestOptions": {},
                        "NodeToNodeEncryptionOptions": {},
                        "AdvancedOptions": {},
                        "LogPublishingOptions": {},
                        "DomainEndpointOptions": {},
                        "AdvancedSecurityOptions": {},
                        "AutoTuneOptions": {},
                        "TagList": {}
                    }
                }
            }
        },
        {
            "name": "CreateOutboundCrossClusterSearchConnection",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/ccs/outboundConnection"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateOutboundCrossClusterSearchConnectionResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateOutboundCrossClusterSearchConnectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SourceDomainInfo": {},
                        "DestinationDomainInfo": {},
                        "ConnectionAlias": {}
                    }
                }
            }
        },
        {
            "name": "CreatePackage",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/packages"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePackageResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreatePackageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PackageName": {},
                        "PackageType": {},
                        "PackageDescription": {},
                        "PackageSource": {}
                    }
                }
            }
        },
        {
            "name": "CreateVpcEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/vpcEndpoints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpcEndpointResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateVpcEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainArn": {},
                        "VpcOptions": {},
                        "ClientToken": {}
                    }
                }
            }
        },
        {
            "name": "DeleteElasticsearchDomain",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/2015-01-01/es/domain/{DomainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteElasticsearchDomainResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteElasticsearchDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {}
                    }
                }
            }
        },
        {
            "name": "DeleteElasticsearchServiceRole",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/2015-01-01/es/role"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "DeleteInboundCrossClusterSearchConnection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "CrossClusterSearchConnectionId": "route.CrossClusterSearchConnectionId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/2015-01-01/es/ccs/inboundConnection/{CrossClusterSearchConnectionId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteInboundCrossClusterSearchConnectionResponse"
                    },
                    "inject": [
                        "params.0.CrossClusterSearchConnectionId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteInboundCrossClusterSearchConnectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CrossClusterSearchConnectionId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteOutboundCrossClusterSearchConnection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "CrossClusterSearchConnectionId": "route.CrossClusterSearchConnectionId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/2015-01-01/es/ccs/outboundConnection/{CrossClusterSearchConnectionId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteOutboundCrossClusterSearchConnectionResponse"
                    },
                    "inject": [
                        "params.0.CrossClusterSearchConnectionId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteOutboundCrossClusterSearchConnectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CrossClusterSearchConnectionId": {}
                    }
                }
            }
        },
        {
            "name": "DeletePackage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PackageID": "route.PackageID",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/2015-01-01/packages/{PackageID}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePackageResponse"
                    },
                    "inject": [
                        "params.0.PackageID",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeletePackageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PackageID": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVpcEndpoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "VpcEndpointId": "route.VpcEndpointId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/2015-01-01/es/vpcEndpoints/{VpcEndpointId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVpcEndpointResponse"
                    },
                    "inject": [
                        "params.0.VpcEndpointId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVpcEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VpcEndpointId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeDomainAutoTunes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/domain/{DomainName}/autoTunes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDomainAutoTunesResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeDomainAutoTunesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "DescribeDomainChangeProgress",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/domain/{DomainName}/progress"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDomainChangeProgressResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeDomainChangeProgressRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "ChangeId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeElasticsearchDomain",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/domain/{DomainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeElasticsearchDomainResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeElasticsearchDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {}
                    }
                }
            }
        },
        {
            "name": "DescribeElasticsearchDomainConfig",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/domain/{DomainName}/config"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeElasticsearchDomainConfigResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeElasticsearchDomainConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {}
                    }
                }
            }
        },
        {
            "name": "DescribeElasticsearchDomains",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/domain-info"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeElasticsearchDomainsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeElasticsearchDomainsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainNames": {}
                    }
                }
            }
        },
        {
            "name": "DescribeElasticsearchInstanceTypeLimits",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ElasticsearchVersion": "route.ElasticsearchVersion",
                            "InstanceType": "route.InstanceType",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/instanceTypeLimits/{ElasticsearchVersion}/{InstanceType}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeElasticsearchInstanceTypeLimitsResponse"
                    },
                    "inject": [
                        "params.0.ElasticsearchVersion",
                        "params.0.InstanceType",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeElasticsearchInstanceTypeLimitsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "InstanceType": {},
                        "ElasticsearchVersion": {}
                    }
                }
            }
        },
        {
            "name": "DescribeInboundCrossClusterSearchConnections",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/ccs/inboundConnection/search"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInboundCrossClusterSearchConnectionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeInboundCrossClusterSearchConnectionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Filters": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "DescribeOutboundCrossClusterSearchConnections",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/ccs/outboundConnection/search"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeOutboundCrossClusterSearchConnectionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeOutboundCrossClusterSearchConnectionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Filters": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "DescribePackages",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/packages/describe"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePackagesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribePackagesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Filters": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "DescribeReservedElasticsearchInstanceOfferings",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/reservedInstanceOfferings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReservedElasticsearchInstanceOfferingsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeReservedElasticsearchInstanceOfferingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ReservedElasticsearchInstanceOfferingId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "DescribeReservedElasticsearchInstances",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/reservedInstances"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReservedElasticsearchInstancesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeReservedElasticsearchInstancesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ReservedElasticsearchInstanceId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "DescribeVpcEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/vpcEndpoints/describe"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcEndpointsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeVpcEndpointsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VpcEndpointIds": {}
                    }
                }
            }
        },
        {
            "name": "DissociatePackage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PackageID": "route.PackageID",
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/packages/dissociate/{PackageID}/{DomainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DissociatePackageResponse"
                    },
                    "inject": [
                        "params.0.PackageID",
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DissociatePackageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PackageID": {},
                        "DomainName": {}
                    }
                }
            }
        },
        {
            "name": "GetCompatibleElasticsearchVersions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/compatibleVersions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCompatibleElasticsearchVersionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetCompatibleElasticsearchVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {}
                    }
                }
            }
        },
        {
            "name": "GetPackageVersionHistory",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PackageID": "route.PackageID",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/packages/{PackageID}/history"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPackageVersionHistoryResponse"
                    },
                    "inject": [
                        "params.0.PackageID",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetPackageVersionHistoryRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PackageID": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetUpgradeHistory",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/upgradeDomain/{DomainName}/history"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUpgradeHistoryResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetUpgradeHistoryRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetUpgradeStatus",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/upgradeDomain/{DomainName}/status"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUpgradeStatusResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetUpgradeStatusRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {}
                    }
                }
            }
        },
        {
            "name": "ListDomainNames",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/domain"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDomainNamesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListDomainNamesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "EngineType": {}
                    }
                }
            }
        },
        {
            "name": "ListDomainsForPackage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PackageID": "route.PackageID",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/packages/{PackageID}/domains"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDomainsForPackageResponse"
                    },
                    "inject": [
                        "params.0.PackageID",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListDomainsForPackageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PackageID": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListElasticsearchInstanceTypes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ElasticsearchVersion": "route.ElasticsearchVersion",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/instanceTypes/{ElasticsearchVersion}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListElasticsearchInstanceTypesResponse"
                    },
                    "inject": [
                        "params.0.ElasticsearchVersion",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListElasticsearchInstanceTypesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ElasticsearchVersion": {},
                        "DomainName": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListElasticsearchVersions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListElasticsearchVersionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListElasticsearchVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListPackagesForDomain",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/domain/{DomainName}/packages"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPackagesForDomainResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListPackagesForDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTags",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ARN": {}
                    }
                }
            }
        },
        {
            "name": "ListVpcEndpointAccess",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/domain/{DomainName}/listVpcEndpointAccess"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVpcEndpointAccessResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListVpcEndpointAccessRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListVpcEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/vpcEndpoints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVpcEndpointsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListVpcEndpointsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListVpcEndpointsForDomain",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-01-01/es/domain/{DomainName}/vpcEndpoints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVpcEndpointsForDomainResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListVpcEndpointsForDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "PurchaseReservedElasticsearchInstanceOffering",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/purchaseReservedInstanceOffering"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PurchaseReservedElasticsearchInstanceOfferingResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PurchaseReservedElasticsearchInstanceOfferingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ReservedElasticsearchInstanceOfferingId": {},
                        "ReservationName": {},
                        "InstanceCount": {}
                    }
                }
            }
        },
        {
            "name": "RejectInboundCrossClusterSearchConnection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "CrossClusterSearchConnectionId": "route.CrossClusterSearchConnectionId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/2015-01-01/es/ccs/inboundConnection/{CrossClusterSearchConnectionId}/reject"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RejectInboundCrossClusterSearchConnectionResponse"
                    },
                    "inject": [
                        "params.0.CrossClusterSearchConnectionId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RejectInboundCrossClusterSearchConnectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CrossClusterSearchConnectionId": {}
                    }
                }
            }
        },
        {
            "name": "RemoveTags",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/tags-removal"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RemoveTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ARN": {},
                        "TagKeys": {}
                    }
                }
            }
        },
        {
            "name": "RevokeVpcEndpointAccess",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/domain/{DomainName}/revokeVpcEndpointAccess"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RevokeVpcEndpointAccessResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RevokeVpcEndpointAccessRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "Account": {}
                    }
                }
            }
        },
        {
            "name": "StartElasticsearchServiceSoftwareUpdate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/serviceSoftwareUpdate/start"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartElasticsearchServiceSoftwareUpdateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartElasticsearchServiceSoftwareUpdateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {}
                    }
                }
            }
        },
        {
            "name": "UpdateElasticsearchDomainConfig",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/domain/{DomainName}/config"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateElasticsearchDomainConfigResponse"
                    },
                    "inject": [
                        "params.0.DomainName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateElasticsearchDomainConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "ElasticsearchClusterConfig": {},
                        "EBSOptions": {},
                        "SnapshotOptions": {},
                        "VPCOptions": {},
                        "CognitoOptions": {},
                        "AdvancedOptions": {},
                        "AccessPolicies": {},
                        "LogPublishingOptions": {},
                        "DomainEndpointOptions": {},
                        "AdvancedSecurityOptions": {},
                        "NodeToNodeEncryptionOptions": {},
                        "EncryptionAtRestOptions": {},
                        "AutoTuneOptions": {},
                        "DryRun": {}
                    }
                }
            }
        },
        {
            "name": "UpdatePackage",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/packages/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePackageResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdatePackageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PackageID": {},
                        "PackageSource": {},
                        "PackageDescription": {},
                        "CommitMessage": {}
                    }
                }
            }
        },
        {
            "name": "UpdateVpcEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/vpcEndpoints/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateVpcEndpointResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateVpcEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "VpcEndpointId": {},
                        "VpcOptions": {}
                    }
                }
            }
        },
        {
            "name": "UpgradeElasticsearchDomain",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-01-01/es/upgradeDomain"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpgradeElasticsearchDomainResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpgradeElasticsearchDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DomainName": {},
                        "TargetVersion": {},
                        "PerformCheckOnly": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AcceptInboundCrossClusterSearchConnectionRequest": {
            "type": "object",
            "properties": {
                "CrossClusterSearchConnectionId": {
                    "$ref": "#/$defs/CrossClusterSearchConnectionId"
                }
            }
        },
        "CrossClusterSearchConnectionId": {
            "type": "string"
        },
        "AcceptInboundCrossClusterSearchConnectionResponse": {
            "type": "object",
            "properties": {
                "CrossClusterSearchConnection": {
                    "$ref": "#/$defs/InboundCrossClusterSearchConnection"
                }
            }
        },
        "InboundCrossClusterSearchConnection": {
            "type": "object",
            "properties": {
                "SourceDomainInfo": {
                    "$ref": "#/$defs/DomainInformation"
                },
                "DestinationDomainInfo": {
                    "$ref": "#/$defs/DomainInformation"
                },
                "CrossClusterSearchConnectionId": {
                    "$ref": "#/$defs/CrossClusterSearchConnectionId"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/InboundCrossClusterSearchConnectionStatus"
                }
            }
        },
        "DomainInformation": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/OwnerId"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Region": {
                    "$ref": "#/$defs/Region"
                }
            }
        },
        "OwnerId": {
            "type": "string"
        },
        "DomainName": {
            "type": "string"
        },
        "Region": {
            "type": "string"
        },
        "InboundCrossClusterSearchConnectionStatus": {
            "type": "object",
            "properties": {
                "StatusCode": {
                    "$ref": "#/$defs/InboundCrossClusterSearchConnectionStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/CrossClusterSearchConnectionStatusMessage"
                }
            }
        },
        "InboundCrossClusterSearchConnectionStatusCode": {
            "enum": [
                "PENDING_ACCEPTANCE",
                "APPROVED",
                "REJECTING",
                "REJECTED",
                "DELETING",
                "DELETED"
            ]
        },
        "CrossClusterSearchConnectionStatusMessage": {
            "type": "string"
        },
        "AddTagsRequest": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/ARN"
                },
                "TagList": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ARN": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "AssociatePackageRequest": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "PackageID": {
            "type": "string"
        },
        "AssociatePackageResponse": {
            "type": "object",
            "properties": {
                "DomainPackageDetails": {
                    "$ref": "#/$defs/DomainPackageDetails"
                }
            }
        },
        "DomainPackageDetails": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "PackageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "PackageType": {
                    "$ref": "#/$defs/PackageType"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/LastUpdated"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "DomainPackageStatus": {
                    "$ref": "#/$defs/DomainPackageStatus"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/PackageVersion"
                },
                "ReferencePath": {
                    "$ref": "#/$defs/ReferencePath"
                },
                "ErrorDetails": {
                    "$ref": "#/$defs/ErrorDetails"
                }
            }
        },
        "PackageName": {
            "type": "string"
        },
        "PackageType": {
            "enum": [
                "TXT_DICTIONARY"
            ]
        },
        "LastUpdated": {
            "type": "string",
            "format": "date-time"
        },
        "DomainPackageStatus": {
            "enum": [
                "ASSOCIATING",
                "ASSOCIATION_FAILED",
                "ACTIVE",
                "DISSOCIATING",
                "DISSOCIATION_FAILED"
            ]
        },
        "PackageVersion": {
            "type": "string"
        },
        "ReferencePath": {
            "type": "string"
        },
        "ErrorDetails": {
            "type": "object",
            "properties": {
                "ErrorType": {
                    "$ref": "#/$defs/ErrorType"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ErrorType": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "AuthorizeVpcEndpointAccessRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Account": {
                    "$ref": "#/$defs/AWSAccount"
                }
            }
        },
        "AWSAccount": {
            "type": "string"
        },
        "AuthorizeVpcEndpointAccessResponse": {
            "type": "object",
            "properties": {
                "AuthorizedPrincipal": {
                    "$ref": "#/$defs/AuthorizedPrincipal"
                }
            }
        },
        "AuthorizedPrincipal": {
            "type": "object",
            "properties": {
                "PrincipalType": {
                    "$ref": "#/$defs/PrincipalType"
                },
                "Principal": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PrincipalType": {
            "enum": [
                "AWS_ACCOUNT",
                "AWS_SERVICE"
            ]
        },
        "String": {
            "type": "string"
        },
        "CancelDomainConfigChangeRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "DryRun": {
            "type": "boolean"
        },
        "CancelDomainConfigChangeResponse": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                },
                "CancelledChangeIds": {
                    "$ref": "#/$defs/GUIDList"
                },
                "CancelledChangeProperties": {
                    "$ref": "#/$defs/CancelledChangePropertyList"
                }
            }
        },
        "GUIDList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GUID"
            }
        },
        "GUID": {
            "type": "string"
        },
        "CancelledChangePropertyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CancelledChangeProperty"
            }
        },
        "CancelledChangeProperty": {
            "type": "object",
            "properties": {
                "PropertyName": {
                    "$ref": "#/$defs/String"
                },
                "CancelledValue": {
                    "$ref": "#/$defs/String"
                },
                "ActiveValue": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CancelElasticsearchServiceSoftwareUpdateRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "CancelElasticsearchServiceSoftwareUpdateResponse": {
            "type": "object",
            "properties": {
                "ServiceSoftwareOptions": {
                    "$ref": "#/$defs/ServiceSoftwareOptions"
                }
            }
        },
        "ServiceSoftwareOptions": {
            "type": "object",
            "properties": {
                "CurrentVersion": {
                    "$ref": "#/$defs/String"
                },
                "NewVersion": {
                    "$ref": "#/$defs/String"
                },
                "UpdateAvailable": {
                    "$ref": "#/$defs/Boolean"
                },
                "Cancellable": {
                    "$ref": "#/$defs/Boolean"
                },
                "UpdateStatus": {
                    "$ref": "#/$defs/DeploymentStatus"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "AutomatedUpdateDate": {
                    "$ref": "#/$defs/DeploymentCloseDateTimeStamp"
                },
                "OptionalDeployment": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "DeploymentStatus": {
            "enum": [
                "PENDING_UPDATE",
                "IN_PROGRESS",
                "COMPLETED",
                "NOT_ELIGIBLE",
                "ELIGIBLE"
            ]
        },
        "DeploymentCloseDateTimeStamp": {
            "type": "string",
            "format": "date-time"
        },
        "CreateElasticsearchDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "ElasticsearchVersion": {
                    "$ref": "#/$defs/ElasticsearchVersionString"
                },
                "ElasticsearchClusterConfig": {
                    "$ref": "#/$defs/ElasticsearchClusterConfig"
                },
                "EBSOptions": {
                    "$ref": "#/$defs/EBSOptions"
                },
                "AccessPolicies": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "SnapshotOptions": {
                    "$ref": "#/$defs/SnapshotOptions"
                },
                "VPCOptions": {
                    "$ref": "#/$defs/VPCOptions"
                },
                "CognitoOptions": {
                    "$ref": "#/$defs/CognitoOptions"
                },
                "EncryptionAtRestOptions": {
                    "$ref": "#/$defs/EncryptionAtRestOptions"
                },
                "NodeToNodeEncryptionOptions": {
                    "$ref": "#/$defs/NodeToNodeEncryptionOptions"
                },
                "AdvancedOptions": {
                    "$ref": "#/$defs/AdvancedOptions"
                },
                "LogPublishingOptions": {
                    "$ref": "#/$defs/LogPublishingOptions"
                },
                "DomainEndpointOptions": {
                    "$ref": "#/$defs/DomainEndpointOptions"
                },
                "AdvancedSecurityOptions": {
                    "$ref": "#/$defs/AdvancedSecurityOptionsInput"
                },
                "AutoTuneOptions": {
                    "$ref": "#/$defs/AutoTuneOptionsInput"
                },
                "TagList": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ElasticsearchVersionString": {
            "type": "string"
        },
        "ElasticsearchClusterConfig": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/ESPartitionInstanceType"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/IntegerClass"
                },
                "DedicatedMasterEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "ZoneAwarenessEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "ZoneAwarenessConfig": {
                    "$ref": "#/$defs/ZoneAwarenessConfig"
                },
                "DedicatedMasterType": {
                    "$ref": "#/$defs/ESPartitionInstanceType"
                },
                "DedicatedMasterCount": {
                    "$ref": "#/$defs/IntegerClass"
                },
                "WarmEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "WarmType": {
                    "$ref": "#/$defs/ESWarmPartitionInstanceType"
                },
                "WarmCount": {
                    "$ref": "#/$defs/IntegerClass"
                },
                "ColdStorageOptions": {
                    "$ref": "#/$defs/ColdStorageOptions"
                }
            }
        },
        "ESPartitionInstanceType": {
            "enum": [
                "m3_medium_elasticsearch",
                "m3_large_elasticsearch",
                "m3_xlarge_elasticsearch",
                "m3_2xlarge_elasticsearch",
                "m4_large_elasticsearch",
                "m4_xlarge_elasticsearch",
                "m4_2xlarge_elasticsearch",
                "m4_4xlarge_elasticsearch",
                "m4_10xlarge_elasticsearch",
                "m5_large_elasticsearch",
                "m5_xlarge_elasticsearch",
                "m5_2xlarge_elasticsearch",
                "m5_4xlarge_elasticsearch",
                "m5_12xlarge_elasticsearch",
                "r5_large_elasticsearch",
                "r5_xlarge_elasticsearch",
                "r5_2xlarge_elasticsearch",
                "r5_4xlarge_elasticsearch",
                "r5_12xlarge_elasticsearch",
                "c5_large_elasticsearch",
                "c5_xlarge_elasticsearch",
                "c5_2xlarge_elasticsearch",
                "c5_4xlarge_elasticsearch",
                "c5_9xlarge_elasticsearch",
                "c5_18xlarge_elasticsearch",
                "ultrawarm1_medium_elasticsearch",
                "ultrawarm1_large_elasticsearch",
                "t2_micro_elasticsearch",
                "t2_small_elasticsearch",
                "t2_medium_elasticsearch",
                "r3_large_elasticsearch",
                "r3_xlarge_elasticsearch",
                "r3_2xlarge_elasticsearch",
                "r3_4xlarge_elasticsearch",
                "r3_8xlarge_elasticsearch",
                "i2_xlarge_elasticsearch",
                "i2_2xlarge_elasticsearch",
                "d2_xlarge_elasticsearch",
                "d2_2xlarge_elasticsearch",
                "d2_4xlarge_elasticsearch",
                "d2_8xlarge_elasticsearch",
                "c4_large_elasticsearch",
                "c4_xlarge_elasticsearch",
                "c4_2xlarge_elasticsearch",
                "c4_4xlarge_elasticsearch",
                "c4_8xlarge_elasticsearch",
                "r4_large_elasticsearch",
                "r4_xlarge_elasticsearch",
                "r4_2xlarge_elasticsearch",
                "r4_4xlarge_elasticsearch",
                "r4_8xlarge_elasticsearch",
                "r4_16xlarge_elasticsearch",
                "i3_large_elasticsearch",
                "i3_xlarge_elasticsearch",
                "i3_2xlarge_elasticsearch",
                "i3_4xlarge_elasticsearch",
                "i3_8xlarge_elasticsearch",
                "i3_16xlarge_elasticsearch"
            ]
        },
        "IntegerClass": {
            "type": "integer",
            "format": "int32"
        },
        "ZoneAwarenessConfig": {
            "type": "object",
            "properties": {
                "AvailabilityZoneCount": {
                    "$ref": "#/$defs/IntegerClass"
                }
            }
        },
        "ESWarmPartitionInstanceType": {
            "enum": [
                "ultrawarm1_medium_elasticsearch",
                "ultrawarm1_large_elasticsearch"
            ]
        },
        "ColdStorageOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EBSOptions": {
            "type": "object",
            "properties": {
                "EBSEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "VolumeType": {
                    "$ref": "#/$defs/VolumeType"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/IntegerClass"
                },
                "Iops": {
                    "$ref": "#/$defs/IntegerClass"
                },
                "Throughput": {
                    "$ref": "#/$defs/IntegerClass"
                }
            }
        },
        "VolumeType": {
            "enum": [
                "standard",
                "gp2",
                "io1",
                "gp3"
            ]
        },
        "PolicyDocument": {
            "type": "string"
        },
        "SnapshotOptions": {
            "type": "object",
            "properties": {
                "AutomatedSnapshotStartHour": {
                    "$ref": "#/$defs/IntegerClass"
                }
            }
        },
        "VPCOptions": {
            "type": "object",
            "properties": {
                "SubnetIds": {
                    "$ref": "#/$defs/StringList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CognitoOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "UserPoolId": {
                    "$ref": "#/$defs/UserPoolId"
                },
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "UserPoolId": {
            "type": "string"
        },
        "IdentityPoolId": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "EncryptionAtRestOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                }
            }
        },
        "KmsKeyId": {
            "type": "string"
        },
        "NodeToNodeEncryptionOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AdvancedOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "LogPublishingOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/LogPublishingOption"
            }
        },
        "LogPublishingOption": {
            "type": "object",
            "properties": {
                "CloudWatchLogsLogGroupArn": {
                    "$ref": "#/$defs/CloudWatchLogsLogGroupArn"
                },
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CloudWatchLogsLogGroupArn": {
            "type": "string"
        },
        "DomainEndpointOptions": {
            "type": "object",
            "properties": {
                "EnforceHTTPS": {
                    "$ref": "#/$defs/Boolean"
                },
                "TLSSecurityPolicy": {
                    "$ref": "#/$defs/TLSSecurityPolicy"
                },
                "CustomEndpointEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "CustomEndpoint": {
                    "$ref": "#/$defs/DomainNameFqdn"
                },
                "CustomEndpointCertificateArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "TLSSecurityPolicy": {
            "enum": [
                "POLICY_MIN_TLS_1_0_2019_07",
                "POLICY_MIN_TLS_1_2_2019_07",
                "POLICY_MIN_TLS_1_2_PFS_2023_10"
            ]
        },
        "DomainNameFqdn": {
            "type": "string"
        },
        "AdvancedSecurityOptionsInput": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "InternalUserDatabaseEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "MasterUserOptions": {
                    "$ref": "#/$defs/MasterUserOptions"
                },
                "SAMLOptions": {
                    "$ref": "#/$defs/SAMLOptionsInput"
                },
                "AnonymousAuthEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "MasterUserOptions": {
            "type": "object",
            "properties": {
                "MasterUserARN": {
                    "$ref": "#/$defs/ARN"
                },
                "MasterUserName": {
                    "$ref": "#/$defs/Username"
                },
                "MasterUserPassword": {
                    "$ref": "#/$defs/Password"
                }
            }
        },
        "Username": {
            "type": "string"
        },
        "Password": {
            "type": "string"
        },
        "SAMLOptionsInput": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "Idp": {
                    "$ref": "#/$defs/SAMLIdp"
                },
                "MasterUserName": {
                    "$ref": "#/$defs/Username"
                },
                "MasterBackendRole": {
                    "$ref": "#/$defs/BackendRole"
                },
                "SubjectKey": {
                    "$ref": "#/$defs/String"
                },
                "RolesKey": {
                    "$ref": "#/$defs/String"
                },
                "SessionTimeoutMinutes": {
                    "$ref": "#/$defs/IntegerClass"
                }
            }
        },
        "SAMLIdp": {
            "type": "object",
            "properties": {
                "MetadataContent": {
                    "$ref": "#/$defs/SAMLMetadata"
                },
                "EntityId": {
                    "$ref": "#/$defs/SAMLEntityId"
                }
            }
        },
        "SAMLMetadata": {
            "type": "string"
        },
        "SAMLEntityId": {
            "type": "string"
        },
        "BackendRole": {
            "type": "string"
        },
        "AutoTuneOptionsInput": {
            "type": "object",
            "properties": {
                "DesiredState": {
                    "$ref": "#/$defs/AutoTuneDesiredState"
                },
                "MaintenanceSchedules": {
                    "$ref": "#/$defs/AutoTuneMaintenanceScheduleList"
                }
            }
        },
        "AutoTuneDesiredState": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "AutoTuneMaintenanceScheduleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoTuneMaintenanceSchedule"
            }
        },
        "AutoTuneMaintenanceSchedule": {
            "type": "object",
            "properties": {
                "StartAt": {
                    "$ref": "#/$defs/StartAt"
                },
                "Duration": {
                    "$ref": "#/$defs/Duration"
                },
                "CronExpressionForRecurrence": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StartAt": {
            "type": "string",
            "format": "date-time"
        },
        "Duration": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/DurationValue"
                },
                "Unit": {
                    "$ref": "#/$defs/TimeUnit"
                }
            }
        },
        "DurationValue": {
            "type": "integer",
            "format": "int64"
        },
        "TimeUnit": {
            "enum": [
                "HOURS"
            ]
        },
        "CreateElasticsearchDomainResponse": {
            "type": "object",
            "properties": {
                "DomainStatus": {
                    "$ref": "#/$defs/ElasticsearchDomainStatus"
                }
            }
        },
        "ElasticsearchDomainStatus": {
            "type": "object",
            "properties": {
                "DomainId": {
                    "$ref": "#/$defs/DomainId"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "ARN": {
                    "$ref": "#/$defs/ARN"
                },
                "Created": {
                    "$ref": "#/$defs/Boolean"
                },
                "Deleted": {
                    "$ref": "#/$defs/Boolean"
                },
                "Endpoint": {
                    "$ref": "#/$defs/ServiceUrl"
                },
                "Endpoints": {
                    "$ref": "#/$defs/EndpointsMap"
                },
                "Processing": {
                    "$ref": "#/$defs/Boolean"
                },
                "UpgradeProcessing": {
                    "$ref": "#/$defs/Boolean"
                },
                "ElasticsearchVersion": {
                    "$ref": "#/$defs/ElasticsearchVersionString"
                },
                "ElasticsearchClusterConfig": {
                    "$ref": "#/$defs/ElasticsearchClusterConfig"
                },
                "EBSOptions": {
                    "$ref": "#/$defs/EBSOptions"
                },
                "AccessPolicies": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "SnapshotOptions": {
                    "$ref": "#/$defs/SnapshotOptions"
                },
                "VPCOptions": {
                    "$ref": "#/$defs/VPCDerivedInfo"
                },
                "CognitoOptions": {
                    "$ref": "#/$defs/CognitoOptions"
                },
                "EncryptionAtRestOptions": {
                    "$ref": "#/$defs/EncryptionAtRestOptions"
                },
                "NodeToNodeEncryptionOptions": {
                    "$ref": "#/$defs/NodeToNodeEncryptionOptions"
                },
                "AdvancedOptions": {
                    "$ref": "#/$defs/AdvancedOptions"
                },
                "LogPublishingOptions": {
                    "$ref": "#/$defs/LogPublishingOptions"
                },
                "ServiceSoftwareOptions": {
                    "$ref": "#/$defs/ServiceSoftwareOptions"
                },
                "DomainEndpointOptions": {
                    "$ref": "#/$defs/DomainEndpointOptions"
                },
                "AdvancedSecurityOptions": {
                    "$ref": "#/$defs/AdvancedSecurityOptions"
                },
                "AutoTuneOptions": {
                    "$ref": "#/$defs/AutoTuneOptionsOutput"
                },
                "ChangeProgressDetails": {
                    "$ref": "#/$defs/ChangeProgressDetails"
                },
                "DomainProcessingStatus": {
                    "$ref": "#/$defs/DomainProcessingStatusType"
                },
                "ModifyingProperties": {
                    "$ref": "#/$defs/ModifyingPropertiesList"
                }
            }
        },
        "DomainId": {
            "type": "string"
        },
        "ServiceUrl": {
            "type": "string"
        },
        "EndpointsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ServiceUrl"
            }
        },
        "VPCDerivedInfo": {
            "type": "object",
            "properties": {
                "VPCId": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/StringList"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/StringList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "AdvancedSecurityOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "InternalUserDatabaseEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "SAMLOptions": {
                    "$ref": "#/$defs/SAMLOptionsOutput"
                },
                "AnonymousAuthDisableDate": {
                    "$ref": "#/$defs/DisableTimestamp"
                },
                "AnonymousAuthEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SAMLOptionsOutput": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "Idp": {
                    "$ref": "#/$defs/SAMLIdp"
                },
                "SubjectKey": {
                    "$ref": "#/$defs/String"
                },
                "RolesKey": {
                    "$ref": "#/$defs/String"
                },
                "SessionTimeoutMinutes": {
                    "$ref": "#/$defs/IntegerClass"
                }
            }
        },
        "DisableTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "AutoTuneOptionsOutput": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/AutoTuneState"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AutoTuneState": {
            "enum": [
                "ENABLED",
                "DISABLED",
                "ENABLE_IN_PROGRESS",
                "DISABLE_IN_PROGRESS",
                "DISABLED_AND_ROLLBACK_SCHEDULED",
                "DISABLED_AND_ROLLBACK_IN_PROGRESS",
                "DISABLED_AND_ROLLBACK_COMPLETE",
                "DISABLED_AND_ROLLBACK_ERROR",
                "ERROR"
            ]
        },
        "ChangeProgressDetails": {
            "type": "object",
            "properties": {
                "ChangeId": {
                    "$ref": "#/$defs/GUID"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                },
                "ConfigChangeStatus": {
                    "$ref": "#/$defs/ConfigChangeStatus"
                },
                "StartTime": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "InitiatedBy": {
                    "$ref": "#/$defs/InitiatedBy"
                }
            }
        },
        "Message": {
            "type": "string"
        },
        "ConfigChangeStatus": {
            "enum": [
                "PENDING",
                "INITIALIZING",
                "VALIDATING",
                "VALIDATION_FAILED",
                "APPLYING_CHANGES",
                "COMPLETED",
                "PENDING_USER_INPUT",
                "CANCELLED"
            ]
        },
        "UpdateTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "InitiatedBy": {
            "enum": [
                "CUSTOMER",
                "SERVICE"
            ]
        },
        "DomainProcessingStatusType": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "MODIFYING",
                "UPGRADING",
                "UPDATING",
                "ISOLATED",
                "DELETING"
            ]
        },
        "ModifyingPropertiesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ModifyingProperties"
            }
        },
        "ModifyingProperties": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "ActiveValue": {
                    "$ref": "#/$defs/String"
                },
                "PendingValue": {
                    "$ref": "#/$defs/String"
                },
                "ValueType": {
                    "$ref": "#/$defs/PropertyValueType"
                }
            }
        },
        "PropertyValueType": {
            "enum": [
                "PLAIN_TEXT",
                "STRINGIFIED_JSON"
            ]
        },
        "CreateOutboundCrossClusterSearchConnectionRequest": {
            "type": "object",
            "properties": {
                "SourceDomainInfo": {
                    "$ref": "#/$defs/DomainInformation"
                },
                "DestinationDomainInfo": {
                    "$ref": "#/$defs/DomainInformation"
                },
                "ConnectionAlias": {
                    "$ref": "#/$defs/ConnectionAlias"
                }
            }
        },
        "ConnectionAlias": {
            "type": "string"
        },
        "CreateOutboundCrossClusterSearchConnectionResponse": {
            "type": "object",
            "properties": {
                "SourceDomainInfo": {
                    "$ref": "#/$defs/DomainInformation"
                },
                "DestinationDomainInfo": {
                    "$ref": "#/$defs/DomainInformation"
                },
                "ConnectionAlias": {
                    "$ref": "#/$defs/ConnectionAlias"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/OutboundCrossClusterSearchConnectionStatus"
                },
                "CrossClusterSearchConnectionId": {
                    "$ref": "#/$defs/CrossClusterSearchConnectionId"
                }
            }
        },
        "OutboundCrossClusterSearchConnectionStatus": {
            "type": "object",
            "properties": {
                "StatusCode": {
                    "$ref": "#/$defs/OutboundCrossClusterSearchConnectionStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/CrossClusterSearchConnectionStatusMessage"
                }
            }
        },
        "OutboundCrossClusterSearchConnectionStatusCode": {
            "enum": [
                "PENDING_ACCEPTANCE",
                "VALIDATING",
                "VALIDATION_FAILED",
                "PROVISIONING",
                "ACTIVE",
                "REJECTED",
                "DELETING",
                "DELETED"
            ]
        },
        "CreatePackageRequest": {
            "type": "object",
            "properties": {
                "PackageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "PackageType": {
                    "$ref": "#/$defs/PackageType"
                },
                "PackageDescription": {
                    "$ref": "#/$defs/PackageDescription"
                },
                "PackageSource": {
                    "$ref": "#/$defs/PackageSource"
                }
            }
        },
        "PackageDescription": {
            "type": "string"
        },
        "PackageSource": {
            "type": "object",
            "properties": {
                "S3BucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "S3Key": {
                    "$ref": "#/$defs/S3Key"
                }
            }
        },
        "S3BucketName": {
            "type": "string"
        },
        "S3Key": {
            "type": "string"
        },
        "CreatePackageResponse": {
            "type": "object",
            "properties": {
                "PackageDetails": {
                    "$ref": "#/$defs/PackageDetails"
                }
            }
        },
        "PackageDetails": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "PackageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "PackageType": {
                    "$ref": "#/$defs/PackageType"
                },
                "PackageDescription": {
                    "$ref": "#/$defs/PackageDescription"
                },
                "PackageStatus": {
                    "$ref": "#/$defs/PackageStatus"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/CreatedAt"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/LastUpdated"
                },
                "AvailablePackageVersion": {
                    "$ref": "#/$defs/PackageVersion"
                },
                "ErrorDetails": {
                    "$ref": "#/$defs/ErrorDetails"
                }
            }
        },
        "PackageStatus": {
            "enum": [
                "COPYING",
                "COPY_FAILED",
                "VALIDATING",
                "VALIDATION_FAILED",
                "AVAILABLE",
                "DELETING",
                "DELETED",
                "DELETE_FAILED"
            ]
        },
        "CreatedAt": {
            "type": "string",
            "format": "date-time"
        },
        "CreateVpcEndpointRequest": {
            "type": "object",
            "properties": {
                "DomainArn": {
                    "$ref": "#/$defs/DomainArn"
                },
                "VpcOptions": {
                    "$ref": "#/$defs/VPCOptions"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DomainArn": {
            "type": "string"
        },
        "ClientToken": {
            "type": "string"
        },
        "CreateVpcEndpointResponse": {
            "type": "object",
            "properties": {
                "VpcEndpoint": {
                    "$ref": "#/$defs/VpcEndpoint"
                }
            }
        },
        "VpcEndpoint": {
            "type": "object",
            "properties": {
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "VpcEndpointOwner": {
                    "$ref": "#/$defs/AWSAccount"
                },
                "DomainArn": {
                    "$ref": "#/$defs/DomainArn"
                },
                "VpcOptions": {
                    "$ref": "#/$defs/VPCDerivedInfo"
                },
                "Status": {
                    "$ref": "#/$defs/VpcEndpointStatus"
                },
                "Endpoint": {
                    "$ref": "#/$defs/Endpoint"
                }
            }
        },
        "VpcEndpointId": {
            "type": "string"
        },
        "VpcEndpointStatus": {
            "enum": [
                "CREATING",
                "CREATE_FAILED",
                "ACTIVE",
                "UPDATING",
                "UPDATE_FAILED",
                "DELETING",
                "DELETE_FAILED"
            ]
        },
        "Endpoint": {
            "type": "string"
        },
        "DeleteElasticsearchDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "DeleteElasticsearchDomainResponse": {
            "type": "object",
            "properties": {
                "DomainStatus": {
                    "$ref": "#/$defs/ElasticsearchDomainStatus"
                }
            }
        },
        "DeleteInboundCrossClusterSearchConnectionRequest": {
            "type": "object",
            "properties": {
                "CrossClusterSearchConnectionId": {
                    "$ref": "#/$defs/CrossClusterSearchConnectionId"
                }
            }
        },
        "DeleteInboundCrossClusterSearchConnectionResponse": {
            "type": "object",
            "properties": {
                "CrossClusterSearchConnection": {
                    "$ref": "#/$defs/InboundCrossClusterSearchConnection"
                }
            }
        },
        "DeleteOutboundCrossClusterSearchConnectionRequest": {
            "type": "object",
            "properties": {
                "CrossClusterSearchConnectionId": {
                    "$ref": "#/$defs/CrossClusterSearchConnectionId"
                }
            }
        },
        "DeleteOutboundCrossClusterSearchConnectionResponse": {
            "type": "object",
            "properties": {
                "CrossClusterSearchConnection": {
                    "$ref": "#/$defs/OutboundCrossClusterSearchConnection"
                }
            }
        },
        "OutboundCrossClusterSearchConnection": {
            "type": "object",
            "properties": {
                "SourceDomainInfo": {
                    "$ref": "#/$defs/DomainInformation"
                },
                "DestinationDomainInfo": {
                    "$ref": "#/$defs/DomainInformation"
                },
                "CrossClusterSearchConnectionId": {
                    "$ref": "#/$defs/CrossClusterSearchConnectionId"
                },
                "ConnectionAlias": {
                    "$ref": "#/$defs/ConnectionAlias"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/OutboundCrossClusterSearchConnectionStatus"
                }
            }
        },
        "DeletePackageRequest": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                }
            }
        },
        "DeletePackageResponse": {
            "type": "object",
            "properties": {
                "PackageDetails": {
                    "$ref": "#/$defs/PackageDetails"
                }
            }
        },
        "DeleteVpcEndpointRequest": {
            "type": "object",
            "properties": {
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                }
            }
        },
        "DeleteVpcEndpointResponse": {
            "type": "object",
            "properties": {
                "VpcEndpointSummary": {
                    "$ref": "#/$defs/VpcEndpointSummary"
                }
            }
        },
        "VpcEndpointSummary": {
            "type": "object",
            "properties": {
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "VpcEndpointOwner": {
                    "$ref": "#/$defs/String"
                },
                "DomainArn": {
                    "$ref": "#/$defs/DomainArn"
                },
                "Status": {
                    "$ref": "#/$defs/VpcEndpointStatus"
                }
            }
        },
        "DescribeDomainAutoTunesRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "NextToken": {
            "type": "string"
        },
        "DescribeDomainAutoTunesResponse": {
            "type": "object",
            "properties": {
                "AutoTunes": {
                    "$ref": "#/$defs/AutoTuneList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AutoTuneList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoTune"
            }
        },
        "AutoTune": {
            "type": "object",
            "properties": {
                "AutoTuneType": {
                    "$ref": "#/$defs/AutoTuneType"
                },
                "AutoTuneDetails": {
                    "$ref": "#/$defs/AutoTuneDetails"
                }
            }
        },
        "AutoTuneType": {
            "enum": [
                "SCHEDULED_ACTION"
            ]
        },
        "AutoTuneDetails": {
            "type": "object",
            "properties": {
                "ScheduledAutoTuneDetails": {
                    "$ref": "#/$defs/ScheduledAutoTuneDetails"
                }
            }
        },
        "ScheduledAutoTuneDetails": {
            "type": "object",
            "properties": {
                "Date": {
                    "$ref": "#/$defs/AutoTuneDate"
                },
                "ActionType": {
                    "$ref": "#/$defs/ScheduledAutoTuneActionType"
                },
                "Action": {
                    "$ref": "#/$defs/ScheduledAutoTuneDescription"
                },
                "Severity": {
                    "$ref": "#/$defs/ScheduledAutoTuneSeverityType"
                }
            }
        },
        "AutoTuneDate": {
            "type": "string",
            "format": "date-time"
        },
        "ScheduledAutoTuneActionType": {
            "enum": [
                "JVM_HEAP_SIZE_TUNING",
                "JVM_YOUNG_GEN_TUNING"
            ]
        },
        "ScheduledAutoTuneDescription": {
            "type": "string"
        },
        "ScheduledAutoTuneSeverityType": {
            "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
            ]
        },
        "DescribeDomainChangeProgressRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "ChangeId": {
                    "$ref": "#/$defs/GUID"
                }
            }
        },
        "DescribeDomainChangeProgressResponse": {
            "type": "object",
            "properties": {
                "ChangeProgressStatus": {
                    "$ref": "#/$defs/ChangeProgressStatusDetails"
                }
            }
        },
        "ChangeProgressStatusDetails": {
            "type": "object",
            "properties": {
                "ChangeId": {
                    "$ref": "#/$defs/GUID"
                },
                "StartTime": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "Status": {
                    "$ref": "#/$defs/OverallChangeStatus"
                },
                "PendingProperties": {
                    "$ref": "#/$defs/StringList"
                },
                "CompletedProperties": {
                    "$ref": "#/$defs/StringList"
                },
                "TotalNumberOfStages": {
                    "$ref": "#/$defs/TotalNumberOfStages"
                },
                "ChangeProgressStages": {
                    "$ref": "#/$defs/ChangeProgressStageList"
                },
                "ConfigChangeStatus": {
                    "$ref": "#/$defs/ConfigChangeStatus"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "InitiatedBy": {
                    "$ref": "#/$defs/InitiatedBy"
                }
            }
        },
        "OverallChangeStatus": {
            "enum": [
                "PENDING",
                "PROCESSING",
                "COMPLETED",
                "FAILED"
            ]
        },
        "TotalNumberOfStages": {
            "type": "integer",
            "format": "int32"
        },
        "ChangeProgressStageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChangeProgressStage"
            }
        },
        "ChangeProgressStage": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ChangeProgressStageName"
                },
                "Status": {
                    "$ref": "#/$defs/ChangeProgressStageStatus"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/LastUpdated"
                }
            }
        },
        "ChangeProgressStageName": {
            "type": "string"
        },
        "ChangeProgressStageStatus": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "DescribeElasticsearchDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "DescribeElasticsearchDomainResponse": {
            "type": "object",
            "properties": {
                "DomainStatus": {
                    "$ref": "#/$defs/ElasticsearchDomainStatus"
                }
            }
        },
        "DescribeElasticsearchDomainConfigRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "DescribeElasticsearchDomainConfigResponse": {
            "type": "object",
            "properties": {
                "DomainConfig": {
                    "$ref": "#/$defs/ElasticsearchDomainConfig"
                }
            }
        },
        "ElasticsearchDomainConfig": {
            "type": "object",
            "properties": {
                "ElasticsearchVersion": {
                    "$ref": "#/$defs/ElasticsearchVersionStatus"
                },
                "ElasticsearchClusterConfig": {
                    "$ref": "#/$defs/ElasticsearchClusterConfigStatus"
                },
                "EBSOptions": {
                    "$ref": "#/$defs/EBSOptionsStatus"
                },
                "AccessPolicies": {
                    "$ref": "#/$defs/AccessPoliciesStatus"
                },
                "SnapshotOptions": {
                    "$ref": "#/$defs/SnapshotOptionsStatus"
                },
                "VPCOptions": {
                    "$ref": "#/$defs/VPCDerivedInfoStatus"
                },
                "CognitoOptions": {
                    "$ref": "#/$defs/CognitoOptionsStatus"
                },
                "EncryptionAtRestOptions": {
                    "$ref": "#/$defs/EncryptionAtRestOptionsStatus"
                },
                "NodeToNodeEncryptionOptions": {
                    "$ref": "#/$defs/NodeToNodeEncryptionOptionsStatus"
                },
                "AdvancedOptions": {
                    "$ref": "#/$defs/AdvancedOptionsStatus"
                },
                "LogPublishingOptions": {
                    "$ref": "#/$defs/LogPublishingOptionsStatus"
                },
                "DomainEndpointOptions": {
                    "$ref": "#/$defs/DomainEndpointOptionsStatus"
                },
                "AdvancedSecurityOptions": {
                    "$ref": "#/$defs/AdvancedSecurityOptionsStatus"
                },
                "AutoTuneOptions": {
                    "$ref": "#/$defs/AutoTuneOptionsStatus"
                },
                "ChangeProgressDetails": {
                    "$ref": "#/$defs/ChangeProgressDetails"
                },
                "ModifyingProperties": {
                    "$ref": "#/$defs/ModifyingPropertiesList"
                }
            }
        },
        "ElasticsearchVersionStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/ElasticsearchVersionString"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "OptionStatus": {
            "type": "object",
            "properties": {
                "CreationDate": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "UpdateDate": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "UpdateVersion": {
                    "$ref": "#/$defs/UIntValue"
                },
                "State": {
                    "$ref": "#/$defs/OptionState"
                },
                "PendingDeletion": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UIntValue": {
            "type": "integer",
            "format": "int32"
        },
        "OptionState": {
            "enum": [
                "RequiresIndexDocuments",
                "Processing",
                "Active"
            ]
        },
        "ElasticsearchClusterConfigStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/ElasticsearchClusterConfig"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "EBSOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/EBSOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "AccessPoliciesStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "SnapshotOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/SnapshotOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "VPCDerivedInfoStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/VPCDerivedInfo"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "CognitoOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/CognitoOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "EncryptionAtRestOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/EncryptionAtRestOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "NodeToNodeEncryptionOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/NodeToNodeEncryptionOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "AdvancedOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/AdvancedOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "LogPublishingOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/LogPublishingOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "DomainEndpointOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/DomainEndpointOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "AdvancedSecurityOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/AdvancedSecurityOptions"
                },
                "Status": {
                    "$ref": "#/$defs/OptionStatus"
                }
            }
        },
        "AutoTuneOptionsStatus": {
            "type": "object",
            "properties": {
                "Options": {
                    "$ref": "#/$defs/AutoTuneOptions"
                },
                "Status": {
                    "$ref": "#/$defs/AutoTuneStatus"
                }
            }
        },
        "AutoTuneOptions": {
            "type": "object",
            "properties": {
                "DesiredState": {
                    "$ref": "#/$defs/AutoTuneDesiredState"
                },
                "RollbackOnDisable": {
                    "$ref": "#/$defs/RollbackOnDisable"
                },
                "MaintenanceSchedules": {
                    "$ref": "#/$defs/AutoTuneMaintenanceScheduleList"
                }
            }
        },
        "RollbackOnDisable": {
            "enum": [
                "NO_ROLLBACK",
                "DEFAULT_ROLLBACK"
            ]
        },
        "AutoTuneStatus": {
            "type": "object",
            "properties": {
                "CreationDate": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "UpdateDate": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "UpdateVersion": {
                    "$ref": "#/$defs/UIntValue"
                },
                "State": {
                    "$ref": "#/$defs/AutoTuneState"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                },
                "PendingDeletion": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeElasticsearchDomainsRequest": {
            "type": "object",
            "properties": {
                "DomainNames": {
                    "$ref": "#/$defs/DomainNameList"
                }
            }
        },
        "DomainNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainName"
            }
        },
        "DescribeElasticsearchDomainsResponse": {
            "type": "object",
            "properties": {
                "DomainStatusList": {
                    "$ref": "#/$defs/ElasticsearchDomainStatusList"
                }
            }
        },
        "ElasticsearchDomainStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ElasticsearchDomainStatus"
            }
        },
        "DescribeElasticsearchInstanceTypeLimitsRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "InstanceType": {
                    "$ref": "#/$defs/ESPartitionInstanceType"
                },
                "ElasticsearchVersion": {
                    "$ref": "#/$defs/ElasticsearchVersionString"
                }
            }
        },
        "DescribeElasticsearchInstanceTypeLimitsResponse": {
            "type": "object",
            "properties": {
                "LimitsByRole": {
                    "$ref": "#/$defs/LimitsByRole"
                }
            }
        },
        "LimitsByRole": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Limits"
            }
        },
        "Limits": {
            "type": "object",
            "properties": {
                "StorageTypes": {
                    "$ref": "#/$defs/StorageTypeList"
                },
                "InstanceLimits": {
                    "$ref": "#/$defs/InstanceLimits"
                },
                "AdditionalLimits": {
                    "$ref": "#/$defs/AdditionalLimitList"
                }
            }
        },
        "StorageTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StorageType"
            }
        },
        "StorageType": {
            "type": "object",
            "properties": {
                "StorageTypeName": {
                    "$ref": "#/$defs/StorageTypeName"
                },
                "StorageSubTypeName": {
                    "$ref": "#/$defs/StorageSubTypeName"
                },
                "StorageTypeLimits": {
                    "$ref": "#/$defs/StorageTypeLimitList"
                }
            }
        },
        "StorageTypeName": {
            "type": "string"
        },
        "StorageSubTypeName": {
            "type": "string"
        },
        "StorageTypeLimitList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StorageTypeLimit"
            }
        },
        "StorageTypeLimit": {
            "type": "object",
            "properties": {
                "LimitName": {
                    "$ref": "#/$defs/LimitName"
                },
                "LimitValues": {
                    "$ref": "#/$defs/LimitValueList"
                }
            }
        },
        "LimitName": {
            "type": "string"
        },
        "LimitValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LimitValue"
            }
        },
        "LimitValue": {
            "type": "string"
        },
        "InstanceLimits": {
            "type": "object",
            "properties": {
                "InstanceCountLimits": {
                    "$ref": "#/$defs/InstanceCountLimits"
                }
            }
        },
        "InstanceCountLimits": {
            "type": "object",
            "properties": {
                "MinimumInstanceCount": {
                    "$ref": "#/$defs/MinimumInstanceCount"
                },
                "MaximumInstanceCount": {
                    "$ref": "#/$defs/MaximumInstanceCount"
                }
            }
        },
        "MinimumInstanceCount": {
            "type": "integer",
            "format": "int32"
        },
        "MaximumInstanceCount": {
            "type": "integer",
            "format": "int32"
        },
        "AdditionalLimitList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AdditionalLimit"
            }
        },
        "AdditionalLimit": {
            "type": "object",
            "properties": {
                "LimitName": {
                    "$ref": "#/$defs/LimitName"
                },
                "LimitValues": {
                    "$ref": "#/$defs/LimitValueList"
                }
            }
        },
        "DescribeInboundCrossClusterSearchConnectionsRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "FilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Values": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "NonEmptyString": {
            "type": "string"
        },
        "ValueStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonEmptyString"
            }
        },
        "DescribeInboundCrossClusterSearchConnectionsResponse": {
            "type": "object",
            "properties": {
                "CrossClusterSearchConnections": {
                    "$ref": "#/$defs/InboundCrossClusterSearchConnections"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "InboundCrossClusterSearchConnections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InboundCrossClusterSearchConnection"
            }
        },
        "DescribeOutboundCrossClusterSearchConnectionsRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeOutboundCrossClusterSearchConnectionsResponse": {
            "type": "object",
            "properties": {
                "CrossClusterSearchConnections": {
                    "$ref": "#/$defs/OutboundCrossClusterSearchConnections"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "OutboundCrossClusterSearchConnections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OutboundCrossClusterSearchConnection"
            }
        },
        "DescribePackagesRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/DescribePackagesFilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribePackagesFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribePackagesFilter"
            }
        },
        "DescribePackagesFilter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DescribePackagesFilterName"
                },
                "Value": {
                    "$ref": "#/$defs/DescribePackagesFilterValues"
                }
            }
        },
        "DescribePackagesFilterName": {
            "enum": [
                "PackageID",
                "PackageName",
                "PackageStatus"
            ]
        },
        "DescribePackagesFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribePackagesFilterValue"
            }
        },
        "DescribePackagesFilterValue": {
            "type": "string"
        },
        "DescribePackagesResponse": {
            "type": "object",
            "properties": {
                "PackageDetailsList": {
                    "$ref": "#/$defs/PackageDetailsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PackageDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackageDetails"
            }
        },
        "DescribeReservedElasticsearchInstanceOfferingsRequest": {
            "type": "object",
            "properties": {
                "ReservedElasticsearchInstanceOfferingId": {
                    "$ref": "#/$defs/GUID"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeReservedElasticsearchInstanceOfferingsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ReservedElasticsearchInstanceOfferings": {
                    "$ref": "#/$defs/ReservedElasticsearchInstanceOfferingList"
                }
            }
        },
        "ReservedElasticsearchInstanceOfferingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedElasticsearchInstanceOffering"
            }
        },
        "ReservedElasticsearchInstanceOffering": {
            "type": "object",
            "properties": {
                "ReservedElasticsearchInstanceOfferingId": {
                    "$ref": "#/$defs/GUID"
                },
                "ElasticsearchInstanceType": {
                    "$ref": "#/$defs/ESPartitionInstanceType"
                },
                "Duration": {
                    "$ref": "#/$defs/Integer"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/Double"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/Double"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/String"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/ReservedElasticsearchInstancePaymentOption"
                },
                "RecurringCharges": {
                    "$ref": "#/$defs/RecurringChargeList"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "ReservedElasticsearchInstancePaymentOption": {
            "enum": [
                "ALL_UPFRONT",
                "PARTIAL_UPFRONT",
                "NO_UPFRONT"
            ]
        },
        "RecurringChargeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecurringCharge"
            }
        },
        "RecurringCharge": {
            "type": "object",
            "properties": {
                "RecurringChargeAmount": {
                    "$ref": "#/$defs/Double"
                },
                "RecurringChargeFrequency": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeReservedElasticsearchInstancesRequest": {
            "type": "object",
            "properties": {
                "ReservedElasticsearchInstanceId": {
                    "$ref": "#/$defs/GUID"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeReservedElasticsearchInstancesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ReservedElasticsearchInstances": {
                    "$ref": "#/$defs/ReservedElasticsearchInstanceList"
                }
            }
        },
        "ReservedElasticsearchInstanceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedElasticsearchInstance"
            }
        },
        "ReservedElasticsearchInstance": {
            "type": "object",
            "properties": {
                "ReservationName": {
                    "$ref": "#/$defs/ReservationToken"
                },
                "ReservedElasticsearchInstanceId": {
                    "$ref": "#/$defs/GUID"
                },
                "ReservedElasticsearchInstanceOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "ElasticsearchInstanceType": {
                    "$ref": "#/$defs/ESPartitionInstanceType"
                },
                "StartTime": {
                    "$ref": "#/$defs/UpdateTimestamp"
                },
                "Duration": {
                    "$ref": "#/$defs/Integer"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/Double"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/Double"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/String"
                },
                "ElasticsearchInstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/ReservedElasticsearchInstancePaymentOption"
                },
                "RecurringCharges": {
                    "$ref": "#/$defs/RecurringChargeList"
                }
            }
        },
        "ReservationToken": {
            "type": "string"
        },
        "DescribeVpcEndpointsRequest": {
            "type": "object",
            "properties": {
                "VpcEndpointIds": {
                    "$ref": "#/$defs/VpcEndpointIdList"
                }
            }
        },
        "VpcEndpointIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointId"
            }
        },
        "DescribeVpcEndpointsResponse": {
            "type": "object",
            "properties": {
                "VpcEndpoints": {
                    "$ref": "#/$defs/VpcEndpoints"
                },
                "VpcEndpointErrors": {
                    "$ref": "#/$defs/VpcEndpointErrorList"
                }
            }
        },
        "VpcEndpoints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpoint"
            }
        },
        "VpcEndpointErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointError"
            }
        },
        "VpcEndpointError": {
            "type": "object",
            "properties": {
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/VpcEndpointErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcEndpointErrorCode": {
            "enum": [
                "ENDPOINT_NOT_FOUND",
                "SERVER_ERROR"
            ]
        },
        "DissociatePackageRequest": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "DissociatePackageResponse": {
            "type": "object",
            "properties": {
                "DomainPackageDetails": {
                    "$ref": "#/$defs/DomainPackageDetails"
                }
            }
        },
        "GetCompatibleElasticsearchVersionsRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "GetCompatibleElasticsearchVersionsResponse": {
            "type": "object",
            "properties": {
                "CompatibleElasticsearchVersions": {
                    "$ref": "#/$defs/CompatibleElasticsearchVersionsList"
                }
            }
        },
        "CompatibleElasticsearchVersionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CompatibleVersionsMap"
            }
        },
        "CompatibleVersionsMap": {
            "type": "object",
            "properties": {
                "SourceVersion": {
                    "$ref": "#/$defs/ElasticsearchVersionString"
                },
                "TargetVersions": {
                    "$ref": "#/$defs/ElasticsearchVersionList"
                }
            }
        },
        "ElasticsearchVersionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ElasticsearchVersionString"
            }
        },
        "GetPackageVersionHistoryRequest": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GetPackageVersionHistoryResponse": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "PackageVersionHistoryList": {
                    "$ref": "#/$defs/PackageVersionHistoryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PackageVersionHistoryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackageVersionHistory"
            }
        },
        "PackageVersionHistory": {
            "type": "object",
            "properties": {
                "PackageVersion": {
                    "$ref": "#/$defs/PackageVersion"
                },
                "CommitMessage": {
                    "$ref": "#/$defs/CommitMessage"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/CreatedAt"
                }
            }
        },
        "CommitMessage": {
            "type": "string"
        },
        "GetUpgradeHistoryRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GetUpgradeHistoryResponse": {
            "type": "object",
            "properties": {
                "UpgradeHistories": {
                    "$ref": "#/$defs/UpgradeHistoryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpgradeHistoryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpgradeHistory"
            }
        },
        "UpgradeHistory": {
            "type": "object",
            "properties": {
                "UpgradeName": {
                    "$ref": "#/$defs/UpgradeName"
                },
                "StartTimestamp": {
                    "$ref": "#/$defs/StartTimestamp"
                },
                "UpgradeStatus": {
                    "$ref": "#/$defs/UpgradeStatus"
                },
                "StepsList": {
                    "$ref": "#/$defs/UpgradeStepsList"
                }
            }
        },
        "UpgradeName": {
            "type": "string"
        },
        "StartTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "UpgradeStatus": {
            "enum": [
                "IN_PROGRESS",
                "SUCCEEDED",
                "SUCCEEDED_WITH_ISSUES",
                "FAILED"
            ]
        },
        "UpgradeStepsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpgradeStepItem"
            }
        },
        "UpgradeStepItem": {
            "type": "object",
            "properties": {
                "UpgradeStep": {
                    "$ref": "#/$defs/UpgradeStep"
                },
                "UpgradeStepStatus": {
                    "$ref": "#/$defs/UpgradeStatus"
                },
                "Issues": {
                    "$ref": "#/$defs/Issues"
                },
                "ProgressPercent": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "UpgradeStep": {
            "enum": [
                "PRE_UPGRADE_CHECK",
                "SNAPSHOT",
                "UPGRADE"
            ]
        },
        "Issues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Issue"
            }
        },
        "Issue": {
            "type": "string"
        },
        "GetUpgradeStatusRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "GetUpgradeStatusResponse": {
            "type": "object",
            "properties": {
                "UpgradeStep": {
                    "$ref": "#/$defs/UpgradeStep"
                },
                "StepStatus": {
                    "$ref": "#/$defs/UpgradeStatus"
                },
                "UpgradeName": {
                    "$ref": "#/$defs/UpgradeName"
                }
            }
        },
        "ListDomainNamesRequest": {
            "type": "object",
            "properties": {
                "EngineType": {
                    "$ref": "#/$defs/EngineType"
                }
            }
        },
        "EngineType": {
            "enum": [
                "OpenSearch",
                "Elasticsearch"
            ]
        },
        "ListDomainNamesResponse": {
            "type": "object",
            "properties": {
                "DomainNames": {
                    "$ref": "#/$defs/DomainInfoList"
                }
            }
        },
        "DomainInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainInfo"
            }
        },
        "DomainInfo": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "EngineType": {
                    "$ref": "#/$defs/EngineType"
                }
            }
        },
        "ListDomainsForPackageRequest": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListDomainsForPackageResponse": {
            "type": "object",
            "properties": {
                "DomainPackageDetailsList": {
                    "$ref": "#/$defs/DomainPackageDetailsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DomainPackageDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainPackageDetails"
            }
        },
        "ListElasticsearchInstanceTypesRequest": {
            "type": "object",
            "properties": {
                "ElasticsearchVersion": {
                    "$ref": "#/$defs/ElasticsearchVersionString"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListElasticsearchInstanceTypesResponse": {
            "type": "object",
            "properties": {
                "ElasticsearchInstanceTypes": {
                    "$ref": "#/$defs/ElasticsearchInstanceTypeList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ElasticsearchInstanceTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ESPartitionInstanceType"
            }
        },
        "ListElasticsearchVersionsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListElasticsearchVersionsResponse": {
            "type": "object",
            "properties": {
                "ElasticsearchVersions": {
                    "$ref": "#/$defs/ElasticsearchVersionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListPackagesForDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListPackagesForDomainResponse": {
            "type": "object",
            "properties": {
                "DomainPackageDetailsList": {
                    "$ref": "#/$defs/DomainPackageDetailsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListTagsRequest": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "ListTagsResponse": {
            "type": "object",
            "properties": {
                "TagList": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListVpcEndpointAccessRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListVpcEndpointAccessResponse": {
            "type": "object",
            "properties": {
                "AuthorizedPrincipalList": {
                    "$ref": "#/$defs/AuthorizedPrincipalList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AuthorizedPrincipalList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuthorizedPrincipal"
            }
        },
        "ListVpcEndpointsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListVpcEndpointsResponse": {
            "type": "object",
            "properties": {
                "VpcEndpointSummaryList": {
                    "$ref": "#/$defs/VpcEndpointSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "VpcEndpointSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointSummary"
            }
        },
        "ListVpcEndpointsForDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListVpcEndpointsForDomainResponse": {
            "type": "object",
            "properties": {
                "VpcEndpointSummaryList": {
                    "$ref": "#/$defs/VpcEndpointSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PurchaseReservedElasticsearchInstanceOfferingRequest": {
            "type": "object",
            "properties": {
                "ReservedElasticsearchInstanceOfferingId": {
                    "$ref": "#/$defs/GUID"
                },
                "ReservationName": {
                    "$ref": "#/$defs/ReservationToken"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/InstanceCount"
                }
            }
        },
        "InstanceCount": {
            "type": "integer",
            "format": "int32"
        },
        "PurchaseReservedElasticsearchInstanceOfferingResponse": {
            "type": "object",
            "properties": {
                "ReservedElasticsearchInstanceId": {
                    "$ref": "#/$defs/GUID"
                },
                "ReservationName": {
                    "$ref": "#/$defs/ReservationToken"
                }
            }
        },
        "RejectInboundCrossClusterSearchConnectionRequest": {
            "type": "object",
            "properties": {
                "CrossClusterSearchConnectionId": {
                    "$ref": "#/$defs/CrossClusterSearchConnectionId"
                }
            }
        },
        "RejectInboundCrossClusterSearchConnectionResponse": {
            "type": "object",
            "properties": {
                "CrossClusterSearchConnection": {
                    "$ref": "#/$defs/InboundCrossClusterSearchConnection"
                }
            }
        },
        "RemoveTagsRequest": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/ARN"
                },
                "TagKeys": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "RevokeVpcEndpointAccessRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Account": {
                    "$ref": "#/$defs/AWSAccount"
                }
            }
        },
        "RevokeVpcEndpointAccessResponse": {
            "type": "object",
            "properties": {}
        },
        "StartElasticsearchServiceSoftwareUpdateRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "StartElasticsearchServiceSoftwareUpdateResponse": {
            "type": "object",
            "properties": {
                "ServiceSoftwareOptions": {
                    "$ref": "#/$defs/ServiceSoftwareOptions"
                }
            }
        },
        "UpdateElasticsearchDomainConfigRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "ElasticsearchClusterConfig": {
                    "$ref": "#/$defs/ElasticsearchClusterConfig"
                },
                "EBSOptions": {
                    "$ref": "#/$defs/EBSOptions"
                },
                "SnapshotOptions": {
                    "$ref": "#/$defs/SnapshotOptions"
                },
                "VPCOptions": {
                    "$ref": "#/$defs/VPCOptions"
                },
                "CognitoOptions": {
                    "$ref": "#/$defs/CognitoOptions"
                },
                "AdvancedOptions": {
                    "$ref": "#/$defs/AdvancedOptions"
                },
                "AccessPolicies": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "LogPublishingOptions": {
                    "$ref": "#/$defs/LogPublishingOptions"
                },
                "DomainEndpointOptions": {
                    "$ref": "#/$defs/DomainEndpointOptions"
                },
                "AdvancedSecurityOptions": {
                    "$ref": "#/$defs/AdvancedSecurityOptionsInput"
                },
                "NodeToNodeEncryptionOptions": {
                    "$ref": "#/$defs/NodeToNodeEncryptionOptions"
                },
                "EncryptionAtRestOptions": {
                    "$ref": "#/$defs/EncryptionAtRestOptions"
                },
                "AutoTuneOptions": {
                    "$ref": "#/$defs/AutoTuneOptions"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "UpdateElasticsearchDomainConfigResponse": {
            "type": "object",
            "properties": {
                "DomainConfig": {
                    "$ref": "#/$defs/ElasticsearchDomainConfig"
                },
                "DryRunResults": {
                    "$ref": "#/$defs/DryRunResults"
                }
            }
        },
        "DryRunResults": {
            "type": "object",
            "properties": {
                "DeploymentType": {
                    "$ref": "#/$defs/DeploymentType"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                }
            }
        },
        "DeploymentType": {
            "type": "string"
        },
        "UpdatePackageRequest": {
            "type": "object",
            "properties": {
                "PackageID": {
                    "$ref": "#/$defs/PackageID"
                },
                "PackageSource": {
                    "$ref": "#/$defs/PackageSource"
                },
                "PackageDescription": {
                    "$ref": "#/$defs/PackageDescription"
                },
                "CommitMessage": {
                    "$ref": "#/$defs/CommitMessage"
                }
            }
        },
        "UpdatePackageResponse": {
            "type": "object",
            "properties": {
                "PackageDetails": {
                    "$ref": "#/$defs/PackageDetails"
                }
            }
        },
        "UpdateVpcEndpointRequest": {
            "type": "object",
            "properties": {
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "VpcOptions": {
                    "$ref": "#/$defs/VPCOptions"
                }
            }
        },
        "UpdateVpcEndpointResponse": {
            "type": "object",
            "properties": {
                "VpcEndpoint": {
                    "$ref": "#/$defs/VpcEndpoint"
                }
            }
        },
        "UpgradeElasticsearchDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "TargetVersion": {
                    "$ref": "#/$defs/ElasticsearchVersionString"
                },
                "PerformCheckOnly": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UpgradeElasticsearchDomainResponse": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "TargetVersion": {
                    "$ref": "#/$defs/ElasticsearchVersionString"
                },
                "PerformCheckOnly": {
                    "$ref": "#/$defs/Boolean"
                },
                "ChangeProgressDetails": {
                    "$ref": "#/$defs/ChangeProgressDetails"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://es-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://es-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                "aws",
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://aos.{Region}.api.aws",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                "aws-cn",
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://aos.{Region}.api.amazonwebservices.com.cn",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                "aws-us-gov",
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://aos.{Region}.api.aws",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://es.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://es.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
