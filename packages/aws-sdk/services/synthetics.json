{
    "name": "synthetics",
    "commands": [
        {
            "name": "AssociateResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "GroupIdentifier": "route.GroupIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/group/{GroupIdentifier}/associate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateResourceResponse"
                    },
                    "inject": [
                        "params.0.GroupIdentifier",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AssociateResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "GroupIdentifier": {},
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "CreateCanary",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/canary"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCanaryResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateCanaryRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Code": {},
                        "ArtifactS3Location": {},
                        "ExecutionRoleArn": {},
                        "Schedule": {},
                        "RunConfig": {},
                        "SuccessRetentionPeriodInDays": {},
                        "FailureRetentionPeriodInDays": {},
                        "RuntimeVersion": {},
                        "VpcConfig": {},
                        "ResourcesToReplicateTags": {},
                        "ProvisionedResourceCleanup": {},
                        "Tags": {},
                        "ArtifactConfig": {}
                    }
                }
            }
        },
        {
            "name": "CreateGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/group"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateGroupResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "DeleteCanary",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/canary/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCanaryResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteCanaryRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "DeleteLambda": {}
                    }
                }
            }
        },
        {
            "name": "DeleteGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "GroupIdentifier": "route.GroupIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/group/{GroupIdentifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteGroupResponse"
                    },
                    "inject": [
                        "params.0.GroupIdentifier",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "GroupIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "DescribeCanaries",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/canaries"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCanariesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeCanariesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {},
                        "Names": {}
                    }
                }
            }
        },
        {
            "name": "DescribeCanariesLastRun",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/canaries/last-run"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCanariesLastRunResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeCanariesLastRunRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {},
                        "Names": {}
                    }
                }
            }
        },
        {
            "name": "DescribeRuntimeVersions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/runtime-versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRuntimeVersionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeRuntimeVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "DisassociateResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "GroupIdentifier": "route.GroupIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/group/{GroupIdentifier}/disassociate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateResourceResponse"
                    },
                    "inject": [
                        "params.0.GroupIdentifier",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisassociateResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "GroupIdentifier": {},
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "GetCanary",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/canary/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCanaryResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetCanaryRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "GetCanaryRuns",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/canary/{Name}/runs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCanaryRunsResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetCanaryRunsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "GetGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "GroupIdentifier": "route.GroupIdentifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/group/{GroupIdentifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetGroupResponse"
                    },
                    "inject": [
                        "params.0.GroupIdentifier",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "GroupIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "ListAssociatedGroups",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/resource/{ResourceArn}/groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAssociatedGroupsResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListAssociatedGroupsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {},
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "ListGroupResources",
            "config": {
                "http": {
                    "inject": [
                        {
                            "GroupIdentifier": "route.GroupIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/group/{GroupIdentifier}/resources"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListGroupResourcesResponse"
                    },
                    "inject": [
                        "params.0.GroupIdentifier",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListGroupResourcesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {},
                        "GroupIdentifier": {}
                    }
                }
            }
        },
        {
            "name": "ListGroups",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListGroupsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListGroupsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "StartCanary",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/canary/{Name}/start"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartCanaryResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartCanaryRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "StopCanary",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/canary/{Name}/stop"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopCanaryResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StopCanaryRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "TagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateCanary",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/canary/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCanaryResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateCanaryRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Code": {},
                        "ExecutionRoleArn": {},
                        "RuntimeVersion": {},
                        "Schedule": {},
                        "RunConfig": {},
                        "SuccessRetentionPeriodInDays": {},
                        "FailureRetentionPeriodInDays": {},
                        "VpcConfig": {},
                        "VisualReference": {},
                        "ArtifactS3Location": {},
                        "ArtifactConfig": {},
                        "ProvisionedResourceCleanup": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateResourceRequest": {
            "type": "object",
            "properties": {
                "GroupIdentifier": {
                    "$ref": "#/$defs/GroupIdentifier"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/CanaryArn"
                }
            }
        },
        "GroupIdentifier": {
            "type": "string"
        },
        "CanaryArn": {
            "type": "string"
        },
        "AssociateResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateCanaryRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CanaryName"
                },
                "Code": {
                    "$ref": "#/$defs/CanaryCodeInput"
                },
                "ArtifactS3Location": {
                    "$ref": "#/$defs/String"
                },
                "ExecutionRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "Schedule": {
                    "$ref": "#/$defs/CanaryScheduleInput"
                },
                "RunConfig": {
                    "$ref": "#/$defs/CanaryRunConfigInput"
                },
                "SuccessRetentionPeriodInDays": {
                    "$ref": "#/$defs/MaxSize1024"
                },
                "FailureRetentionPeriodInDays": {
                    "$ref": "#/$defs/MaxSize1024"
                },
                "RuntimeVersion": {
                    "$ref": "#/$defs/String"
                },
                "VpcConfig": {
                    "$ref": "#/$defs/VpcConfigInput"
                },
                "ResourcesToReplicateTags": {
                    "$ref": "#/$defs/ResourceList"
                },
                "ProvisionedResourceCleanup": {
                    "$ref": "#/$defs/ProvisionedResourceCleanupSetting"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "ArtifactConfig": {
                    "$ref": "#/$defs/ArtifactConfigInput"
                }
            }
        },
        "CanaryName": {
            "type": "string"
        },
        "CanaryCodeInput": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/String"
                },
                "S3Key": {
                    "$ref": "#/$defs/String"
                },
                "S3Version": {
                    "$ref": "#/$defs/String"
                },
                "ZipFile": {
                    "$ref": "#/$defs/Blob"
                },
                "Handler": {
                    "$ref": "#/$defs/CodeHandler"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "Blob": {
            "type": "string",
            "format": "binary"
        },
        "CodeHandler": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "CanaryScheduleInput": {
            "type": "object",
            "properties": {
                "Expression": {
                    "$ref": "#/$defs/String"
                },
                "DurationInSeconds": {
                    "$ref": "#/$defs/MaxOneYearInSeconds"
                }
            }
        },
        "MaxOneYearInSeconds": {
            "type": "integer",
            "format": "int64"
        },
        "CanaryRunConfigInput": {
            "type": "object",
            "properties": {
                "TimeoutInSeconds": {
                    "$ref": "#/$defs/MaxFifteenMinutesInSeconds"
                },
                "MemoryInMB": {
                    "$ref": "#/$defs/MaxSize3008"
                },
                "ActiveTracing": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "EnvironmentVariables": {
                    "$ref": "#/$defs/EnvironmentVariablesMap"
                }
            }
        },
        "MaxFifteenMinutesInSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "MaxSize3008": {
            "type": "integer",
            "format": "int32"
        },
        "NullableBoolean": {
            "type": "boolean"
        },
        "EnvironmentVariablesMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/EnvironmentVariableValue"
            }
        },
        "EnvironmentVariableValue": {
            "type": "string"
        },
        "MaxSize1024": {
            "type": "integer",
            "format": "int32"
        },
        "VpcConfigInput": {
            "type": "object",
            "properties": {
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIds"
                },
                "Ipv6AllowedForDualStack": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "SubnetIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "SubnetId": {
            "type": "string"
        },
        "SecurityGroupIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "ResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceToTag"
            }
        },
        "ResourceToTag": {
            "enum": [
                "LAMBDA_FUNCTION"
            ]
        },
        "ProvisionedResourceCleanupSetting": {
            "enum": [
                "AUTOMATIC",
                "OFF"
            ]
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "ArtifactConfigInput": {
            "type": "object",
            "properties": {
                "S3Encryption": {
                    "$ref": "#/$defs/S3EncryptionConfig"
                }
            }
        },
        "S3EncryptionConfig": {
            "type": "object",
            "properties": {
                "EncryptionMode": {
                    "$ref": "#/$defs/EncryptionMode"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                }
            }
        },
        "EncryptionMode": {
            "enum": [
                "SSE_S3",
                "SSE_KMS"
            ]
        },
        "KmsKeyArn": {
            "type": "string"
        },
        "CreateCanaryResponse": {
            "type": "object",
            "properties": {
                "Canary": {
                    "$ref": "#/$defs/Canary"
                }
            }
        },
        "Canary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/UUID"
                },
                "Name": {
                    "$ref": "#/$defs/CanaryName"
                },
                "Code": {
                    "$ref": "#/$defs/CanaryCodeOutput"
                },
                "ExecutionRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "Schedule": {
                    "$ref": "#/$defs/CanaryScheduleOutput"
                },
                "RunConfig": {
                    "$ref": "#/$defs/CanaryRunConfigOutput"
                },
                "SuccessRetentionPeriodInDays": {
                    "$ref": "#/$defs/MaxSize1024"
                },
                "FailureRetentionPeriodInDays": {
                    "$ref": "#/$defs/MaxSize1024"
                },
                "Status": {
                    "$ref": "#/$defs/CanaryStatus"
                },
                "Timeline": {
                    "$ref": "#/$defs/CanaryTimeline"
                },
                "ArtifactS3Location": {
                    "$ref": "#/$defs/String"
                },
                "EngineArn": {
                    "$ref": "#/$defs/FunctionArn"
                },
                "RuntimeVersion": {
                    "$ref": "#/$defs/String"
                },
                "VpcConfig": {
                    "$ref": "#/$defs/VpcConfigOutput"
                },
                "VisualReference": {
                    "$ref": "#/$defs/VisualReferenceOutput"
                },
                "ProvisionedResourceCleanup": {
                    "$ref": "#/$defs/ProvisionedResourceCleanupSetting"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "ArtifactConfig": {
                    "$ref": "#/$defs/ArtifactConfigOutput"
                }
            }
        },
        "UUID": {
            "type": "string"
        },
        "CanaryCodeOutput": {
            "type": "object",
            "properties": {
                "SourceLocationArn": {
                    "$ref": "#/$defs/String"
                },
                "Handler": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CanaryScheduleOutput": {
            "type": "object",
            "properties": {
                "Expression": {
                    "$ref": "#/$defs/String"
                },
                "DurationInSeconds": {
                    "$ref": "#/$defs/MaxOneYearInSeconds"
                }
            }
        },
        "CanaryRunConfigOutput": {
            "type": "object",
            "properties": {
                "TimeoutInSeconds": {
                    "$ref": "#/$defs/MaxFifteenMinutesInSeconds"
                },
                "MemoryInMB": {
                    "$ref": "#/$defs/MaxSize3008"
                },
                "ActiveTracing": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "CanaryStatus": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/CanaryState"
                },
                "StateReason": {
                    "$ref": "#/$defs/String"
                },
                "StateReasonCode": {
                    "$ref": "#/$defs/CanaryStateReasonCode"
                }
            }
        },
        "CanaryState": {
            "enum": [
                "CREATING",
                "READY",
                "STARTING",
                "RUNNING",
                "UPDATING",
                "STOPPING",
                "STOPPED",
                "ERROR",
                "DELETING"
            ]
        },
        "CanaryStateReasonCode": {
            "enum": [
                "INVALID_PERMISSIONS",
                "CREATE_PENDING",
                "CREATE_IN_PROGRESS",
                "CREATE_FAILED",
                "UPDATE_PENDING",
                "UPDATE_IN_PROGRESS",
                "UPDATE_COMPLETE",
                "ROLLBACK_COMPLETE",
                "ROLLBACK_FAILED",
                "DELETE_IN_PROGRESS",
                "DELETE_FAILED",
                "SYNC_DELETE_IN_PROGRESS"
            ]
        },
        "CanaryTimeline": {
            "type": "object",
            "properties": {
                "Created": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModified": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastStarted": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastStopped": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "FunctionArn": {
            "type": "string"
        },
        "VpcConfigOutput": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIds"
                },
                "Ipv6AllowedForDualStack": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "VpcId": {
            "type": "string"
        },
        "VisualReferenceOutput": {
            "type": "object",
            "properties": {
                "BaseScreenshots": {
                    "$ref": "#/$defs/BaseScreenshots"
                },
                "BaseCanaryRunId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BaseScreenshots": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BaseScreenshot"
            }
        },
        "BaseScreenshot": {
            "type": "object",
            "properties": {
                "ScreenshotName": {
                    "$ref": "#/$defs/String"
                },
                "IgnoreCoordinates": {
                    "$ref": "#/$defs/BaseScreenshotIgnoreCoordinates"
                }
            }
        },
        "BaseScreenshotIgnoreCoordinates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BaseScreenshotConfigIgnoreCoordinate"
            }
        },
        "BaseScreenshotConfigIgnoreCoordinate": {
            "type": "string"
        },
        "ArtifactConfigOutput": {
            "type": "object",
            "properties": {
                "S3Encryption": {
                    "$ref": "#/$defs/S3EncryptionConfig"
                }
            }
        },
        "CreateGroupRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/GroupName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GroupName": {
            "type": "string"
        },
        "CreateGroupResponse": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/Group"
                }
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/GroupName"
                },
                "Arn": {
                    "$ref": "#/$defs/GroupArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "GroupArn": {
            "type": "string"
        },
        "DeleteCanaryRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CanaryName"
                },
                "DeleteLambda": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "boolean": {
            "type": "boolean"
        },
        "DeleteCanaryResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteGroupRequest": {
            "type": "object",
            "properties": {
                "GroupIdentifier": {
                    "$ref": "#/$defs/GroupIdentifier"
                }
            }
        },
        "DeleteGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "DescribeCanariesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxCanaryResults"
                },
                "Names": {
                    "$ref": "#/$defs/DescribeCanariesNameFilter"
                }
            }
        },
        "Token": {
            "type": "string"
        },
        "MaxCanaryResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeCanariesNameFilter": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CanaryName"
            }
        },
        "DescribeCanariesResponse": {
            "type": "object",
            "properties": {
                "Canaries": {
                    "$ref": "#/$defs/Canaries"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "Canaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Canary"
            }
        },
        "DescribeCanariesLastRunRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSize100"
                },
                "Names": {
                    "$ref": "#/$defs/DescribeCanariesLastRunNameFilter"
                }
            }
        },
        "MaxSize100": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeCanariesLastRunNameFilter": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CanaryName"
            }
        },
        "DescribeCanariesLastRunResponse": {
            "type": "object",
            "properties": {
                "CanariesLastRun": {
                    "$ref": "#/$defs/CanariesLastRun"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "CanariesLastRun": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CanaryLastRun"
            }
        },
        "CanaryLastRun": {
            "type": "object",
            "properties": {
                "CanaryName": {
                    "$ref": "#/$defs/CanaryName"
                },
                "LastRun": {
                    "$ref": "#/$defs/CanaryRun"
                }
            }
        },
        "CanaryRun": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/UUID"
                },
                "Name": {
                    "$ref": "#/$defs/CanaryName"
                },
                "Status": {
                    "$ref": "#/$defs/CanaryRunStatus"
                },
                "Timeline": {
                    "$ref": "#/$defs/CanaryRunTimeline"
                },
                "ArtifactS3Location": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CanaryRunStatus": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/CanaryRunState"
                },
                "StateReason": {
                    "$ref": "#/$defs/String"
                },
                "StateReasonCode": {
                    "$ref": "#/$defs/CanaryRunStateReasonCode"
                }
            }
        },
        "CanaryRunState": {
            "enum": [
                "RUNNING",
                "PASSED",
                "FAILED"
            ]
        },
        "CanaryRunStateReasonCode": {
            "enum": [
                "CANARY_FAILURE",
                "EXECUTION_FAILURE"
            ]
        },
        "CanaryRunTimeline": {
            "type": "object",
            "properties": {
                "Started": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Completed": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DescribeRuntimeVersionsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSize100"
                }
            }
        },
        "DescribeRuntimeVersionsResponse": {
            "type": "object",
            "properties": {
                "RuntimeVersions": {
                    "$ref": "#/$defs/RuntimeVersionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "RuntimeVersionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RuntimeVersion"
            }
        },
        "RuntimeVersion": {
            "type": "object",
            "properties": {
                "VersionName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ReleaseDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DeprecationDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DisassociateResourceRequest": {
            "type": "object",
            "properties": {
                "GroupIdentifier": {
                    "$ref": "#/$defs/GroupIdentifier"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/CanaryArn"
                }
            }
        },
        "DisassociateResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "GetCanaryRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CanaryName"
                }
            }
        },
        "GetCanaryResponse": {
            "type": "object",
            "properties": {
                "Canary": {
                    "$ref": "#/$defs/Canary"
                }
            }
        },
        "GetCanaryRunsRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CanaryName"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSize100"
                }
            }
        },
        "GetCanaryRunsResponse": {
            "type": "object",
            "properties": {
                "CanaryRuns": {
                    "$ref": "#/$defs/CanaryRuns"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "CanaryRuns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CanaryRun"
            }
        },
        "GetGroupRequest": {
            "type": "object",
            "properties": {
                "GroupIdentifier": {
                    "$ref": "#/$defs/GroupIdentifier"
                }
            }
        },
        "GetGroupResponse": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/Group"
                }
            }
        },
        "ListAssociatedGroupsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxGroupResults"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/CanaryArn"
                }
            }
        },
        "PaginationToken": {
            "type": "string"
        },
        "MaxGroupResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListAssociatedGroupsResponse": {
            "type": "object",
            "properties": {
                "Groups": {
                    "$ref": "#/$defs/GroupSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "GroupSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupSummary"
            }
        },
        "GroupSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/GroupName"
                },
                "Arn": {
                    "$ref": "#/$defs/GroupArn"
                }
            }
        },
        "ListGroupResourcesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxGroupResults"
                },
                "GroupIdentifier": {
                    "$ref": "#/$defs/GroupIdentifier"
                }
            }
        },
        "ListGroupResourcesResponse": {
            "type": "object",
            "properties": {
                "Resources": {
                    "$ref": "#/$defs/StringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ListGroupsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxGroupResults"
                }
            }
        },
        "ListGroupsResponse": {
            "type": "object",
            "properties": {
                "Groups": {
                    "$ref": "#/$defs/GroupSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "StartCanaryRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CanaryName"
                }
            }
        },
        "StartCanaryResponse": {
            "type": "object",
            "properties": {}
        },
        "StopCanaryRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CanaryName"
                }
            }
        },
        "StopCanaryResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateCanaryRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CanaryName"
                },
                "Code": {
                    "$ref": "#/$defs/CanaryCodeInput"
                },
                "ExecutionRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "RuntimeVersion": {
                    "$ref": "#/$defs/String"
                },
                "Schedule": {
                    "$ref": "#/$defs/CanaryScheduleInput"
                },
                "RunConfig": {
                    "$ref": "#/$defs/CanaryRunConfigInput"
                },
                "SuccessRetentionPeriodInDays": {
                    "$ref": "#/$defs/MaxSize1024"
                },
                "FailureRetentionPeriodInDays": {
                    "$ref": "#/$defs/MaxSize1024"
                },
                "VpcConfig": {
                    "$ref": "#/$defs/VpcConfigInput"
                },
                "VisualReference": {
                    "$ref": "#/$defs/VisualReferenceInput"
                },
                "ArtifactS3Location": {
                    "$ref": "#/$defs/String"
                },
                "ArtifactConfig": {
                    "$ref": "#/$defs/ArtifactConfigInput"
                },
                "ProvisionedResourceCleanup": {
                    "$ref": "#/$defs/ProvisionedResourceCleanupSetting"
                }
            }
        },
        "VisualReferenceInput": {
            "type": "object",
            "properties": {
                "BaseScreenshots": {
                    "$ref": "#/$defs/BaseScreenshots"
                },
                "BaseCanaryRunId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpdateCanaryResponse": {
            "type": "object",
            "properties": {}
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://synthetics-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://synthetics-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://synthetics.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://synthetics.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
