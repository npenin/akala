{
    "name": "states",
    "commands": [
        {
            "name": "CreateActivity",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.CreateActivity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateActivityOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateActivityInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateStateMachine",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.CreateStateMachine"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateStateMachineOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateStateMachineInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateStateMachineAlias",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.CreateStateMachineAlias"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateStateMachineAliasOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateStateMachineAliasInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteActivity",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.DeleteActivity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteActivityOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteActivityInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteStateMachine",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.DeleteStateMachine"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteStateMachineOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteStateMachineInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteStateMachineAlias",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.DeleteStateMachineAlias"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteStateMachineAliasOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteStateMachineAliasInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteStateMachineVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.DeleteStateMachineVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteStateMachineVersionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteStateMachineVersionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeActivity",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.DescribeActivity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeActivityOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeActivityInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.DescribeExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeExecutionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeMapRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.DescribeMapRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMapRunOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMapRunInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeStateMachine",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.DescribeStateMachine"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStateMachineOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeStateMachineInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeStateMachineAlias",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.DescribeStateMachineAlias"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStateMachineAliasOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeStateMachineAliasInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeStateMachineForExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.DescribeStateMachineForExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStateMachineForExecutionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeStateMachineForExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetActivityTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.GetActivityTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetActivityTaskOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetActivityTaskInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetExecutionHistory",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.GetExecutionHistory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetExecutionHistoryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetExecutionHistoryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListActivities",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.ListActivities"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListActivitiesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListActivitiesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListExecutions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.ListExecutions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListExecutionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListExecutionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMapRuns",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.ListMapRuns"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMapRunsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMapRunsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListStateMachineAliases",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.ListStateMachineAliases"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStateMachineAliasesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListStateMachineAliasesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListStateMachines",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.ListStateMachines"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStateMachinesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListStateMachinesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListStateMachineVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.ListStateMachineVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStateMachineVersionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListStateMachineVersionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PublishStateMachineVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.PublishStateMachineVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PublishStateMachineVersionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PublishStateMachineVersionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RedriveExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.RedriveExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RedriveExecutionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RedriveExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SendTaskFailure",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.SendTaskFailure"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendTaskFailureOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendTaskFailureInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SendTaskHeartbeat",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.SendTaskHeartbeat"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendTaskHeartbeatOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendTaskHeartbeatInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SendTaskSuccess",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.SendTaskSuccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendTaskSuccessOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendTaskSuccessInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StartExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.StartExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartExecutionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StartSyncExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.StartSyncExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartSyncExecutionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartSyncExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StopExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.StopExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopExecutionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TestState",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.TestState"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestStateOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestStateInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateMapRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.UpdateMapRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMapRunOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMapRunInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateStateMachine",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.UpdateStateMachine"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateStateMachineOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateStateMachineInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateStateMachineAlias",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.UpdateStateMachineAlias"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateStateMachineAliasOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateStateMachineAliasInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ValidateStateMachineDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSStepFunctions.ValidateStateMachineDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ValidateStateMachineDefinitionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ValidateStateMachineDefinitionInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateActivityOutput": {
            "type": "object",
            "properties": {
                "activityArn": {
                    "$ref": "#/$defs/Arn"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Arn": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "CreateActivityInput": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "encryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                }
            }
        },
        "Name": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "EncryptionConfiguration": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "kmsDataKeyReusePeriodSeconds": {
                    "$ref": "#/$defs/KmsDataKeyReusePeriodSeconds"
                },
                "type": {
                    "$ref": "#/$defs/EncryptionType"
                }
            }
        },
        "KmsKeyId": {
            "type": "string"
        },
        "KmsDataKeyReusePeriodSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "EncryptionType": {
            "enum": [
                "AWS_OWNED_KEY",
                "CUSTOMER_MANAGED_KMS_KEY"
            ]
        },
        "CreateStateMachineOutput": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "stateMachineVersionArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "CreateStateMachineInput": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "definition": {
                    "$ref": "#/$defs/Definition"
                },
                "roleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "type": {
                    "$ref": "#/$defs/StateMachineType"
                },
                "loggingConfiguration": {
                    "$ref": "#/$defs/LoggingConfiguration"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "tracingConfiguration": {
                    "$ref": "#/$defs/TracingConfiguration"
                },
                "publish": {
                    "$ref": "#/$defs/Publish"
                },
                "versionDescription": {
                    "$ref": "#/$defs/VersionDescription"
                },
                "encryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                }
            }
        },
        "Definition": {
            "type": "string"
        },
        "StateMachineType": {
            "enum": [
                "STANDARD",
                "EXPRESS"
            ]
        },
        "LoggingConfiguration": {
            "type": "object",
            "properties": {
                "level": {
                    "$ref": "#/$defs/LogLevel"
                },
                "includeExecutionData": {
                    "$ref": "#/$defs/IncludeExecutionData"
                },
                "destinations": {
                    "$ref": "#/$defs/LogDestinationList"
                }
            }
        },
        "LogLevel": {
            "enum": [
                "ALL",
                "ERROR",
                "FATAL",
                "OFF"
            ]
        },
        "IncludeExecutionData": {
            "type": "boolean"
        },
        "LogDestinationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LogDestination"
            }
        },
        "LogDestination": {
            "type": "object",
            "properties": {
                "cloudWatchLogsLogGroup": {
                    "$ref": "#/$defs/CloudWatchLogsLogGroup"
                }
            }
        },
        "CloudWatchLogsLogGroup": {
            "type": "object",
            "properties": {
                "logGroupArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "TracingConfiguration": {
            "type": "object",
            "properties": {
                "enabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "Enabled": {
            "type": "boolean"
        },
        "Publish": {
            "type": "boolean"
        },
        "VersionDescription": {
            "type": "string"
        },
        "CreateStateMachineAliasOutput": {
            "type": "object",
            "properties": {
                "stateMachineAliasArn": {
                    "$ref": "#/$defs/Arn"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "CreateStateMachineAliasInput": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/AliasDescription"
                },
                "name": {
                    "$ref": "#/$defs/CharacterRestrictedName"
                },
                "routingConfiguration": {
                    "$ref": "#/$defs/RoutingConfigurationList"
                }
            }
        },
        "AliasDescription": {
            "type": "string"
        },
        "CharacterRestrictedName": {
            "type": "string"
        },
        "RoutingConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RoutingConfigurationListItem"
            }
        },
        "RoutingConfigurationListItem": {
            "type": "object",
            "properties": {
                "stateMachineVersionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "weight": {
                    "$ref": "#/$defs/VersionWeight"
                }
            }
        },
        "VersionWeight": {
            "type": "integer",
            "format": "int32"
        },
        "DeleteActivityOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteActivityInput": {
            "type": "object",
            "properties": {
                "activityArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "DeleteStateMachineOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteStateMachineInput": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "DeleteStateMachineAliasOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteStateMachineAliasInput": {
            "type": "object",
            "properties": {
                "stateMachineAliasArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "DeleteStateMachineVersionOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteStateMachineVersionInput": {
            "type": "object",
            "properties": {
                "stateMachineVersionArn": {
                    "$ref": "#/$defs/LongArn"
                }
            }
        },
        "LongArn": {
            "type": "string"
        },
        "DescribeActivityOutput": {
            "type": "object",
            "properties": {
                "activityArn": {
                    "$ref": "#/$defs/Arn"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "encryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                }
            }
        },
        "DescribeActivityInput": {
            "type": "object",
            "properties": {
                "activityArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "DescribeExecutionOutput": {
            "type": "object",
            "properties": {
                "executionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "status": {
                    "$ref": "#/$defs/ExecutionStatus"
                },
                "startDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "stopDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "input": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "inputDetails": {
                    "$ref": "#/$defs/CloudWatchEventsExecutionDataDetails"
                },
                "output": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "outputDetails": {
                    "$ref": "#/$defs/CloudWatchEventsExecutionDataDetails"
                },
                "traceHeader": {
                    "$ref": "#/$defs/TraceHeader"
                },
                "mapRunArn": {
                    "$ref": "#/$defs/LongArn"
                },
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                },
                "stateMachineVersionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "stateMachineAliasArn": {
                    "$ref": "#/$defs/Arn"
                },
                "redriveCount": {
                    "$ref": "#/$defs/RedriveCount"
                },
                "redriveDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "redriveStatus": {
                    "$ref": "#/$defs/ExecutionRedriveStatus"
                },
                "redriveStatusReason": {
                    "$ref": "#/$defs/SensitiveData"
                }
            }
        },
        "ExecutionStatus": {
            "enum": [
                "RUNNING",
                "SUCCEEDED",
                "FAILED",
                "TIMED_OUT",
                "ABORTED",
                "PENDING_REDRIVE"
            ]
        },
        "SensitiveData": {
            "type": "string"
        },
        "CloudWatchEventsExecutionDataDetails": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/$defs/includedDetails"
                }
            }
        },
        "includedDetails": {
            "type": "boolean"
        },
        "TraceHeader": {
            "type": "string"
        },
        "SensitiveError": {
            "type": "string"
        },
        "SensitiveCause": {
            "type": "string"
        },
        "RedriveCount": {
            "type": "integer",
            "format": "int32"
        },
        "ExecutionRedriveStatus": {
            "enum": [
                "REDRIVABLE",
                "NOT_REDRIVABLE",
                "REDRIVABLE_BY_MAP_RUN"
            ]
        },
        "DescribeExecutionInput": {
            "type": "object",
            "properties": {
                "executionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "includedData": {
                    "$ref": "#/$defs/IncludedData"
                }
            }
        },
        "IncludedData": {
            "enum": [
                "ALL_DATA",
                "METADATA_ONLY"
            ]
        },
        "DescribeMapRunOutput": {
            "type": "object",
            "properties": {
                "mapRunArn": {
                    "$ref": "#/$defs/LongArn"
                },
                "executionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "status": {
                    "$ref": "#/$defs/MapRunStatus"
                },
                "startDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "stopDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "maxConcurrency": {
                    "$ref": "#/$defs/MaxConcurrency"
                },
                "toleratedFailurePercentage": {
                    "$ref": "#/$defs/ToleratedFailurePercentage"
                },
                "toleratedFailureCount": {
                    "$ref": "#/$defs/ToleratedFailureCount"
                },
                "itemCounts": {
                    "$ref": "#/$defs/MapRunItemCounts"
                },
                "executionCounts": {
                    "$ref": "#/$defs/MapRunExecutionCounts"
                },
                "redriveCount": {
                    "$ref": "#/$defs/RedriveCount"
                },
                "redriveDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "MapRunStatus": {
            "enum": [
                "RUNNING",
                "SUCCEEDED",
                "FAILED",
                "ABORTED"
            ]
        },
        "MaxConcurrency": {
            "type": "integer",
            "format": "int32"
        },
        "ToleratedFailurePercentage": {
            "type": "number",
            "format": "float"
        },
        "ToleratedFailureCount": {
            "type": "integer",
            "format": "int64"
        },
        "MapRunItemCounts": {
            "type": "object",
            "properties": {
                "pending": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "running": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "succeeded": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "failed": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "timedOut": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "aborted": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "total": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "resultsWritten": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "failuresNotRedrivable": {
                    "$ref": "#/$defs/LongObject"
                },
                "pendingRedrive": {
                    "$ref": "#/$defs/LongObject"
                }
            }
        },
        "UnsignedLong": {
            "type": "integer",
            "format": "int64"
        },
        "LongObject": {
            "type": "integer",
            "format": "int64"
        },
        "MapRunExecutionCounts": {
            "type": "object",
            "properties": {
                "pending": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "running": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "succeeded": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "failed": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "timedOut": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "aborted": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "total": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "resultsWritten": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "failuresNotRedrivable": {
                    "$ref": "#/$defs/LongObject"
                },
                "pendingRedrive": {
                    "$ref": "#/$defs/LongObject"
                }
            }
        },
        "DescribeMapRunInput": {
            "type": "object",
            "properties": {
                "mapRunArn": {
                    "$ref": "#/$defs/LongArn"
                }
            }
        },
        "DescribeStateMachineOutput": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "status": {
                    "$ref": "#/$defs/StateMachineStatus"
                },
                "definition": {
                    "$ref": "#/$defs/Definition"
                },
                "roleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "type": {
                    "$ref": "#/$defs/StateMachineType"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "loggingConfiguration": {
                    "$ref": "#/$defs/LoggingConfiguration"
                },
                "tracingConfiguration": {
                    "$ref": "#/$defs/TracingConfiguration"
                },
                "label": {
                    "$ref": "#/$defs/MapRunLabel"
                },
                "revisionId": {
                    "$ref": "#/$defs/RevisionId"
                },
                "description": {
                    "$ref": "#/$defs/VersionDescription"
                },
                "encryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                }
            }
        },
        "StateMachineStatus": {
            "enum": [
                "ACTIVE",
                "DELETING"
            ]
        },
        "MapRunLabel": {
            "type": "string"
        },
        "RevisionId": {
            "type": "string"
        },
        "DescribeStateMachineInput": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "includedData": {
                    "$ref": "#/$defs/IncludedData"
                }
            }
        },
        "DescribeStateMachineAliasOutput": {
            "type": "object",
            "properties": {
                "stateMachineAliasArn": {
                    "$ref": "#/$defs/Arn"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "description": {
                    "$ref": "#/$defs/AliasDescription"
                },
                "routingConfiguration": {
                    "$ref": "#/$defs/RoutingConfigurationList"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DescribeStateMachineAliasInput": {
            "type": "object",
            "properties": {
                "stateMachineAliasArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "DescribeStateMachineForExecutionOutput": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "definition": {
                    "$ref": "#/$defs/Definition"
                },
                "roleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "updateDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "loggingConfiguration": {
                    "$ref": "#/$defs/LoggingConfiguration"
                },
                "tracingConfiguration": {
                    "$ref": "#/$defs/TracingConfiguration"
                },
                "mapRunArn": {
                    "$ref": "#/$defs/LongArn"
                },
                "label": {
                    "$ref": "#/$defs/MapRunLabel"
                },
                "revisionId": {
                    "$ref": "#/$defs/RevisionId"
                },
                "encryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                }
            }
        },
        "DescribeStateMachineForExecutionInput": {
            "type": "object",
            "properties": {
                "executionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "includedData": {
                    "$ref": "#/$defs/IncludedData"
                }
            }
        },
        "GetActivityTaskOutput": {
            "type": "object",
            "properties": {
                "taskToken": {
                    "$ref": "#/$defs/TaskToken"
                },
                "input": {
                    "$ref": "#/$defs/SensitiveDataJobInput"
                }
            }
        },
        "TaskToken": {
            "type": "string"
        },
        "SensitiveDataJobInput": {
            "type": "string"
        },
        "GetActivityTaskInput": {
            "type": "object",
            "properties": {
                "activityArn": {
                    "$ref": "#/$defs/Arn"
                },
                "workerName": {
                    "$ref": "#/$defs/Name"
                }
            }
        },
        "GetExecutionHistoryOutput": {
            "type": "object",
            "properties": {
                "events": {
                    "$ref": "#/$defs/HistoryEventList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PageToken"
                }
            }
        },
        "HistoryEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HistoryEvent"
            }
        },
        "HistoryEvent": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "type": {
                    "$ref": "#/$defs/HistoryEventType"
                },
                "id": {
                    "$ref": "#/$defs/EventId"
                },
                "previousEventId": {
                    "$ref": "#/$defs/EventId"
                },
                "activityFailedEventDetails": {
                    "$ref": "#/$defs/ActivityFailedEventDetails"
                },
                "activityScheduleFailedEventDetails": {
                    "$ref": "#/$defs/ActivityScheduleFailedEventDetails"
                },
                "activityScheduledEventDetails": {
                    "$ref": "#/$defs/ActivityScheduledEventDetails"
                },
                "activityStartedEventDetails": {
                    "$ref": "#/$defs/ActivityStartedEventDetails"
                },
                "activitySucceededEventDetails": {
                    "$ref": "#/$defs/ActivitySucceededEventDetails"
                },
                "activityTimedOutEventDetails": {
                    "$ref": "#/$defs/ActivityTimedOutEventDetails"
                },
                "taskFailedEventDetails": {
                    "$ref": "#/$defs/TaskFailedEventDetails"
                },
                "taskScheduledEventDetails": {
                    "$ref": "#/$defs/TaskScheduledEventDetails"
                },
                "taskStartFailedEventDetails": {
                    "$ref": "#/$defs/TaskStartFailedEventDetails"
                },
                "taskStartedEventDetails": {
                    "$ref": "#/$defs/TaskStartedEventDetails"
                },
                "taskSubmitFailedEventDetails": {
                    "$ref": "#/$defs/TaskSubmitFailedEventDetails"
                },
                "taskSubmittedEventDetails": {
                    "$ref": "#/$defs/TaskSubmittedEventDetails"
                },
                "taskSucceededEventDetails": {
                    "$ref": "#/$defs/TaskSucceededEventDetails"
                },
                "taskTimedOutEventDetails": {
                    "$ref": "#/$defs/TaskTimedOutEventDetails"
                },
                "executionFailedEventDetails": {
                    "$ref": "#/$defs/ExecutionFailedEventDetails"
                },
                "executionStartedEventDetails": {
                    "$ref": "#/$defs/ExecutionStartedEventDetails"
                },
                "executionSucceededEventDetails": {
                    "$ref": "#/$defs/ExecutionSucceededEventDetails"
                },
                "executionAbortedEventDetails": {
                    "$ref": "#/$defs/ExecutionAbortedEventDetails"
                },
                "executionTimedOutEventDetails": {
                    "$ref": "#/$defs/ExecutionTimedOutEventDetails"
                },
                "executionRedrivenEventDetails": {
                    "$ref": "#/$defs/ExecutionRedrivenEventDetails"
                },
                "mapStateStartedEventDetails": {
                    "$ref": "#/$defs/MapStateStartedEventDetails"
                },
                "mapIterationStartedEventDetails": {
                    "$ref": "#/$defs/MapIterationEventDetails"
                },
                "mapIterationSucceededEventDetails": {
                    "$ref": "#/$defs/MapIterationEventDetails"
                },
                "mapIterationFailedEventDetails": {
                    "$ref": "#/$defs/MapIterationEventDetails"
                },
                "mapIterationAbortedEventDetails": {
                    "$ref": "#/$defs/MapIterationEventDetails"
                },
                "lambdaFunctionFailedEventDetails": {
                    "$ref": "#/$defs/LambdaFunctionFailedEventDetails"
                },
                "lambdaFunctionScheduleFailedEventDetails": {
                    "$ref": "#/$defs/LambdaFunctionScheduleFailedEventDetails"
                },
                "lambdaFunctionScheduledEventDetails": {
                    "$ref": "#/$defs/LambdaFunctionScheduledEventDetails"
                },
                "lambdaFunctionStartFailedEventDetails": {
                    "$ref": "#/$defs/LambdaFunctionStartFailedEventDetails"
                },
                "lambdaFunctionSucceededEventDetails": {
                    "$ref": "#/$defs/LambdaFunctionSucceededEventDetails"
                },
                "lambdaFunctionTimedOutEventDetails": {
                    "$ref": "#/$defs/LambdaFunctionTimedOutEventDetails"
                },
                "stateEnteredEventDetails": {
                    "$ref": "#/$defs/StateEnteredEventDetails"
                },
                "stateExitedEventDetails": {
                    "$ref": "#/$defs/StateExitedEventDetails"
                },
                "mapRunStartedEventDetails": {
                    "$ref": "#/$defs/MapRunStartedEventDetails"
                },
                "mapRunFailedEventDetails": {
                    "$ref": "#/$defs/MapRunFailedEventDetails"
                },
                "mapRunRedrivenEventDetails": {
                    "$ref": "#/$defs/MapRunRedrivenEventDetails"
                }
            }
        },
        "HistoryEventType": {
            "enum": [
                "ActivityFailed",
                "ActivityScheduled",
                "ActivityScheduleFailed",
                "ActivityStarted",
                "ActivitySucceeded",
                "ActivityTimedOut",
                "ChoiceStateEntered",
                "ChoiceStateExited",
                "ExecutionAborted",
                "ExecutionFailed",
                "ExecutionStarted",
                "ExecutionSucceeded",
                "ExecutionTimedOut",
                "FailStateEntered",
                "LambdaFunctionFailed",
                "LambdaFunctionScheduled",
                "LambdaFunctionScheduleFailed",
                "LambdaFunctionStarted",
                "LambdaFunctionStartFailed",
                "LambdaFunctionSucceeded",
                "LambdaFunctionTimedOut",
                "MapIterationAborted",
                "MapIterationFailed",
                "MapIterationStarted",
                "MapIterationSucceeded",
                "MapStateAborted",
                "MapStateEntered",
                "MapStateExited",
                "MapStateFailed",
                "MapStateStarted",
                "MapStateSucceeded",
                "ParallelStateAborted",
                "ParallelStateEntered",
                "ParallelStateExited",
                "ParallelStateFailed",
                "ParallelStateStarted",
                "ParallelStateSucceeded",
                "PassStateEntered",
                "PassStateExited",
                "SucceedStateEntered",
                "SucceedStateExited",
                "TaskFailed",
                "TaskScheduled",
                "TaskStarted",
                "TaskStartFailed",
                "TaskStateAborted",
                "TaskStateEntered",
                "TaskStateExited",
                "TaskSubmitFailed",
                "TaskSubmitted",
                "TaskSucceeded",
                "TaskTimedOut",
                "WaitStateAborted",
                "WaitStateEntered",
                "WaitStateExited",
                "MapRunAborted",
                "MapRunFailed",
                "MapRunStarted",
                "MapRunSucceeded",
                "ExecutionRedriven",
                "MapRunRedriven"
            ]
        },
        "EventId": {
            "type": "integer",
            "format": "int64"
        },
        "ActivityFailedEventDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "ActivityScheduleFailedEventDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "ActivityScheduledEventDetails": {
            "type": "object",
            "properties": {
                "resource": {
                    "$ref": "#/$defs/Arn"
                },
                "input": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "inputDetails": {
                    "$ref": "#/$defs/HistoryEventExecutionDataDetails"
                },
                "timeoutInSeconds": {
                    "$ref": "#/$defs/TimeoutInSeconds"
                },
                "heartbeatInSeconds": {
                    "$ref": "#/$defs/TimeoutInSeconds"
                }
            }
        },
        "HistoryEventExecutionDataDetails": {
            "type": "object",
            "properties": {
                "truncated": {
                    "$ref": "#/$defs/truncated"
                }
            }
        },
        "truncated": {
            "type": "boolean"
        },
        "TimeoutInSeconds": {
            "type": "integer",
            "format": "int64"
        },
        "ActivityStartedEventDetails": {
            "type": "object",
            "properties": {
                "workerName": {
                    "$ref": "#/$defs/Identity"
                }
            }
        },
        "Identity": {
            "type": "string"
        },
        "ActivitySucceededEventDetails": {
            "type": "object",
            "properties": {
                "output": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "outputDetails": {
                    "$ref": "#/$defs/HistoryEventExecutionDataDetails"
                }
            }
        },
        "ActivityTimedOutEventDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "TaskFailedEventDetails": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/Name"
                },
                "resource": {
                    "$ref": "#/$defs/Name"
                },
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "TaskScheduledEventDetails": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/Name"
                },
                "resource": {
                    "$ref": "#/$defs/Name"
                },
                "region": {
                    "$ref": "#/$defs/Name"
                },
                "parameters": {
                    "$ref": "#/$defs/ConnectorParameters"
                },
                "timeoutInSeconds": {
                    "$ref": "#/$defs/TimeoutInSeconds"
                },
                "heartbeatInSeconds": {
                    "$ref": "#/$defs/TimeoutInSeconds"
                },
                "taskCredentials": {
                    "$ref": "#/$defs/TaskCredentials"
                }
            }
        },
        "ConnectorParameters": {
            "type": "string"
        },
        "TaskCredentials": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/LongArn"
                }
            }
        },
        "TaskStartFailedEventDetails": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/Name"
                },
                "resource": {
                    "$ref": "#/$defs/Name"
                },
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "TaskStartedEventDetails": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/Name"
                },
                "resource": {
                    "$ref": "#/$defs/Name"
                }
            }
        },
        "TaskSubmitFailedEventDetails": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/Name"
                },
                "resource": {
                    "$ref": "#/$defs/Name"
                },
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "TaskSubmittedEventDetails": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/Name"
                },
                "resource": {
                    "$ref": "#/$defs/Name"
                },
                "output": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "outputDetails": {
                    "$ref": "#/$defs/HistoryEventExecutionDataDetails"
                }
            }
        },
        "TaskSucceededEventDetails": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/Name"
                },
                "resource": {
                    "$ref": "#/$defs/Name"
                },
                "output": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "outputDetails": {
                    "$ref": "#/$defs/HistoryEventExecutionDataDetails"
                }
            }
        },
        "TaskTimedOutEventDetails": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/Name"
                },
                "resource": {
                    "$ref": "#/$defs/Name"
                },
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "ExecutionFailedEventDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "ExecutionStartedEventDetails": {
            "type": "object",
            "properties": {
                "input": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "inputDetails": {
                    "$ref": "#/$defs/HistoryEventExecutionDataDetails"
                },
                "roleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "stateMachineAliasArn": {
                    "$ref": "#/$defs/Arn"
                },
                "stateMachineVersionArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ExecutionSucceededEventDetails": {
            "type": "object",
            "properties": {
                "output": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "outputDetails": {
                    "$ref": "#/$defs/HistoryEventExecutionDataDetails"
                }
            }
        },
        "ExecutionAbortedEventDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "ExecutionTimedOutEventDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "ExecutionRedrivenEventDetails": {
            "type": "object",
            "properties": {
                "redriveCount": {
                    "$ref": "#/$defs/RedriveCount"
                }
            }
        },
        "MapStateStartedEventDetails": {
            "type": "object",
            "properties": {
                "length": {
                    "$ref": "#/$defs/UnsignedInteger"
                }
            }
        },
        "UnsignedInteger": {
            "type": "integer",
            "format": "int32"
        },
        "MapIterationEventDetails": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "index": {
                    "$ref": "#/$defs/UnsignedInteger"
                }
            }
        },
        "LambdaFunctionFailedEventDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "LambdaFunctionScheduleFailedEventDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "LambdaFunctionScheduledEventDetails": {
            "type": "object",
            "properties": {
                "resource": {
                    "$ref": "#/$defs/Arn"
                },
                "input": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "inputDetails": {
                    "$ref": "#/$defs/HistoryEventExecutionDataDetails"
                },
                "timeoutInSeconds": {
                    "$ref": "#/$defs/TimeoutInSeconds"
                },
                "taskCredentials": {
                    "$ref": "#/$defs/TaskCredentials"
                }
            }
        },
        "LambdaFunctionStartFailedEventDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "LambdaFunctionSucceededEventDetails": {
            "type": "object",
            "properties": {
                "output": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "outputDetails": {
                    "$ref": "#/$defs/HistoryEventExecutionDataDetails"
                }
            }
        },
        "LambdaFunctionTimedOutEventDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "StateEnteredEventDetails": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "input": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "inputDetails": {
                    "$ref": "#/$defs/HistoryEventExecutionDataDetails"
                }
            }
        },
        "StateExitedEventDetails": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "output": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "outputDetails": {
                    "$ref": "#/$defs/HistoryEventExecutionDataDetails"
                }
            }
        },
        "MapRunStartedEventDetails": {
            "type": "object",
            "properties": {
                "mapRunArn": {
                    "$ref": "#/$defs/LongArn"
                }
            }
        },
        "MapRunFailedEventDetails": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "MapRunRedrivenEventDetails": {
            "type": "object",
            "properties": {
                "mapRunArn": {
                    "$ref": "#/$defs/LongArn"
                },
                "redriveCount": {
                    "$ref": "#/$defs/RedriveCount"
                }
            }
        },
        "PageToken": {
            "type": "string"
        },
        "GetExecutionHistoryInput": {
            "type": "object",
            "properties": {
                "executionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "maxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "reverseOrder": {
                    "$ref": "#/$defs/ReverseOrder"
                },
                "nextToken": {
                    "$ref": "#/$defs/PageToken"
                },
                "includeExecutionData": {
                    "$ref": "#/$defs/IncludeExecutionDataGetExecutionHistory"
                }
            }
        },
        "PageSize": {
            "type": "integer",
            "format": "int32"
        },
        "ReverseOrder": {
            "type": "boolean"
        },
        "IncludeExecutionDataGetExecutionHistory": {
            "type": "boolean"
        },
        "ListActivitiesOutput": {
            "type": "object",
            "properties": {
                "activities": {
                    "$ref": "#/$defs/ActivityList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PageToken"
                }
            }
        },
        "ActivityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ActivityListItem"
            }
        },
        "ActivityListItem": {
            "type": "object",
            "properties": {
                "activityArn": {
                    "$ref": "#/$defs/Arn"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListActivitiesInput": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "nextToken": {
                    "$ref": "#/$defs/PageToken"
                }
            }
        },
        "ListExecutionsOutput": {
            "type": "object",
            "properties": {
                "executions": {
                    "$ref": "#/$defs/ExecutionList"
                },
                "nextToken": {
                    "$ref": "#/$defs/ListExecutionsPageToken"
                }
            }
        },
        "ExecutionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExecutionListItem"
            }
        },
        "ExecutionListItem": {
            "type": "object",
            "properties": {
                "executionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "status": {
                    "$ref": "#/$defs/ExecutionStatus"
                },
                "startDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "stopDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "mapRunArn": {
                    "$ref": "#/$defs/LongArn"
                },
                "itemCount": {
                    "$ref": "#/$defs/UnsignedInteger"
                },
                "stateMachineVersionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "stateMachineAliasArn": {
                    "$ref": "#/$defs/Arn"
                },
                "redriveCount": {
                    "$ref": "#/$defs/RedriveCount"
                },
                "redriveDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListExecutionsPageToken": {
            "type": "string"
        },
        "ListExecutionsInput": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "statusFilter": {
                    "$ref": "#/$defs/ExecutionStatus"
                },
                "maxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "nextToken": {
                    "$ref": "#/$defs/ListExecutionsPageToken"
                },
                "mapRunArn": {
                    "$ref": "#/$defs/LongArn"
                },
                "redriveFilter": {
                    "$ref": "#/$defs/ExecutionRedriveFilter"
                }
            }
        },
        "ExecutionRedriveFilter": {
            "enum": [
                "REDRIVEN",
                "NOT_REDRIVEN"
            ]
        },
        "ListMapRunsOutput": {
            "type": "object",
            "properties": {
                "mapRuns": {
                    "$ref": "#/$defs/MapRunList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PageToken"
                }
            }
        },
        "MapRunList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MapRunListItem"
            }
        },
        "MapRunListItem": {
            "type": "object",
            "properties": {
                "executionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "mapRunArn": {
                    "$ref": "#/$defs/LongArn"
                },
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "startDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "stopDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListMapRunsInput": {
            "type": "object",
            "properties": {
                "executionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "maxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "nextToken": {
                    "$ref": "#/$defs/PageToken"
                }
            }
        },
        "ListStateMachineAliasesOutput": {
            "type": "object",
            "properties": {
                "stateMachineAliases": {
                    "$ref": "#/$defs/StateMachineAliasList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PageToken"
                }
            }
        },
        "StateMachineAliasList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StateMachineAliasListItem"
            }
        },
        "StateMachineAliasListItem": {
            "type": "object",
            "properties": {
                "stateMachineAliasArn": {
                    "$ref": "#/$defs/LongArn"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListStateMachineAliasesInput": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "nextToken": {
                    "$ref": "#/$defs/PageToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "ListStateMachinesOutput": {
            "type": "object",
            "properties": {
                "stateMachines": {
                    "$ref": "#/$defs/StateMachineList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PageToken"
                }
            }
        },
        "StateMachineList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StateMachineListItem"
            }
        },
        "StateMachineListItem": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "type": {
                    "$ref": "#/$defs/StateMachineType"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListStateMachinesInput": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "nextToken": {
                    "$ref": "#/$defs/PageToken"
                }
            }
        },
        "ListStateMachineVersionsOutput": {
            "type": "object",
            "properties": {
                "stateMachineVersions": {
                    "$ref": "#/$defs/StateMachineVersionList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PageToken"
                }
            }
        },
        "StateMachineVersionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StateMachineVersionListItem"
            }
        },
        "StateMachineVersionListItem": {
            "type": "object",
            "properties": {
                "stateMachineVersionArn": {
                    "$ref": "#/$defs/LongArn"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListStateMachineVersionsInput": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "nextToken": {
                    "$ref": "#/$defs/PageToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "ListTagsForResourceOutput": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListTagsForResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "PublishStateMachineVersionOutput": {
            "type": "object",
            "properties": {
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "stateMachineVersionArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "PublishStateMachineVersionInput": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "revisionId": {
                    "$ref": "#/$defs/RevisionId"
                },
                "description": {
                    "$ref": "#/$defs/VersionDescription"
                }
            }
        },
        "RedriveExecutionOutput": {
            "type": "object",
            "properties": {
                "redriveDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "RedriveExecutionInput": {
            "type": "object",
            "properties": {
                "executionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "SendTaskFailureOutput": {
            "type": "object",
            "properties": {}
        },
        "SendTaskFailureInput": {
            "type": "object",
            "properties": {
                "taskToken": {
                    "$ref": "#/$defs/TaskToken"
                },
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "SendTaskHeartbeatOutput": {
            "type": "object",
            "properties": {}
        },
        "SendTaskHeartbeatInput": {
            "type": "object",
            "properties": {
                "taskToken": {
                    "$ref": "#/$defs/TaskToken"
                }
            }
        },
        "SendTaskSuccessOutput": {
            "type": "object",
            "properties": {}
        },
        "SendTaskSuccessInput": {
            "type": "object",
            "properties": {
                "taskToken": {
                    "$ref": "#/$defs/TaskToken"
                },
                "output": {
                    "$ref": "#/$defs/SensitiveData"
                }
            }
        },
        "StartExecutionOutput": {
            "type": "object",
            "properties": {
                "executionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "startDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "StartExecutionInput": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "input": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "traceHeader": {
                    "$ref": "#/$defs/TraceHeader"
                }
            }
        },
        "StartSyncExecutionOutput": {
            "type": "object",
            "properties": {
                "executionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "startDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "stopDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/SyncExecutionStatus"
                },
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                },
                "input": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "inputDetails": {
                    "$ref": "#/$defs/CloudWatchEventsExecutionDataDetails"
                },
                "output": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "outputDetails": {
                    "$ref": "#/$defs/CloudWatchEventsExecutionDataDetails"
                },
                "traceHeader": {
                    "$ref": "#/$defs/TraceHeader"
                },
                "billingDetails": {
                    "$ref": "#/$defs/BillingDetails"
                }
            }
        },
        "SyncExecutionStatus": {
            "enum": [
                "SUCCEEDED",
                "FAILED",
                "TIMED_OUT"
            ]
        },
        "BillingDetails": {
            "type": "object",
            "properties": {
                "billedMemoryUsedInMB": {
                    "$ref": "#/$defs/BilledMemoryUsed"
                },
                "billedDurationInMilliseconds": {
                    "$ref": "#/$defs/BilledDuration"
                }
            }
        },
        "BilledMemoryUsed": {
            "type": "integer",
            "format": "int64"
        },
        "BilledDuration": {
            "type": "integer",
            "format": "int64"
        },
        "StartSyncExecutionInput": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "input": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "traceHeader": {
                    "$ref": "#/$defs/TraceHeader"
                },
                "includedData": {
                    "$ref": "#/$defs/IncludedData"
                }
            }
        },
        "StopExecutionOutput": {
            "type": "object",
            "properties": {
                "stopDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "StopExecutionInput": {
            "type": "object",
            "properties": {
                "executionArn": {
                    "$ref": "#/$defs/Arn"
                },
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                }
            }
        },
        "TagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "TagResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TestStateOutput": {
            "type": "object",
            "properties": {
                "output": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "error": {
                    "$ref": "#/$defs/SensitiveError"
                },
                "cause": {
                    "$ref": "#/$defs/SensitiveCause"
                },
                "inspectionData": {
                    "$ref": "#/$defs/InspectionData"
                },
                "nextState": {
                    "$ref": "#/$defs/StateName"
                },
                "status": {
                    "$ref": "#/$defs/TestExecutionStatus"
                }
            }
        },
        "InspectionData": {
            "type": "object",
            "properties": {
                "input": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "afterInputPath": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "afterParameters": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "result": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "afterResultSelector": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "afterResultPath": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "request": {
                    "$ref": "#/$defs/InspectionDataRequest"
                },
                "response": {
                    "$ref": "#/$defs/InspectionDataResponse"
                }
            }
        },
        "InspectionDataRequest": {
            "type": "object",
            "properties": {
                "protocol": {
                    "$ref": "#/$defs/HTTPProtocol"
                },
                "method": {
                    "$ref": "#/$defs/HTTPMethod"
                },
                "url": {
                    "$ref": "#/$defs/URL"
                },
                "headers": {
                    "$ref": "#/$defs/HTTPHeaders"
                },
                "body": {
                    "$ref": "#/$defs/HTTPBody"
                }
            }
        },
        "HTTPProtocol": {
            "type": "string"
        },
        "HTTPMethod": {
            "type": "string"
        },
        "URL": {
            "type": "string"
        },
        "HTTPHeaders": {
            "type": "string"
        },
        "HTTPBody": {
            "type": "string"
        },
        "InspectionDataResponse": {
            "type": "object",
            "properties": {
                "protocol": {
                    "$ref": "#/$defs/HTTPProtocol"
                },
                "statusCode": {
                    "$ref": "#/$defs/HTTPStatusCode"
                },
                "statusMessage": {
                    "$ref": "#/$defs/HTTPStatusMessage"
                },
                "headers": {
                    "$ref": "#/$defs/HTTPHeaders"
                },
                "body": {
                    "$ref": "#/$defs/HTTPBody"
                }
            }
        },
        "HTTPStatusCode": {
            "type": "string"
        },
        "HTTPStatusMessage": {
            "type": "string"
        },
        "StateName": {
            "type": "string"
        },
        "TestExecutionStatus": {
            "enum": [
                "SUCCEEDED",
                "FAILED",
                "RETRIABLE",
                "CAUGHT_ERROR"
            ]
        },
        "TestStateInput": {
            "type": "object",
            "properties": {
                "definition": {
                    "$ref": "#/$defs/Definition"
                },
                "roleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "input": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "inspectionLevel": {
                    "$ref": "#/$defs/InspectionLevel"
                },
                "revealSecrets": {
                    "$ref": "#/$defs/RevealSecrets"
                }
            }
        },
        "InspectionLevel": {
            "enum": [
                "INFO",
                "DEBUG",
                "TRACE"
            ]
        },
        "RevealSecrets": {
            "type": "boolean"
        },
        "UntagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateMapRunOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateMapRunInput": {
            "type": "object",
            "properties": {
                "mapRunArn": {
                    "$ref": "#/$defs/LongArn"
                },
                "maxConcurrency": {
                    "$ref": "#/$defs/MaxConcurrency"
                },
                "toleratedFailurePercentage": {
                    "$ref": "#/$defs/ToleratedFailurePercentage"
                },
                "toleratedFailureCount": {
                    "$ref": "#/$defs/ToleratedFailureCount"
                }
            }
        },
        "UpdateStateMachineOutput": {
            "type": "object",
            "properties": {
                "updateDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "revisionId": {
                    "$ref": "#/$defs/RevisionId"
                },
                "stateMachineVersionArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "UpdateStateMachineInput": {
            "type": "object",
            "properties": {
                "stateMachineArn": {
                    "$ref": "#/$defs/Arn"
                },
                "definition": {
                    "$ref": "#/$defs/Definition"
                },
                "roleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "loggingConfiguration": {
                    "$ref": "#/$defs/LoggingConfiguration"
                },
                "tracingConfiguration": {
                    "$ref": "#/$defs/TracingConfiguration"
                },
                "publish": {
                    "$ref": "#/$defs/Publish"
                },
                "versionDescription": {
                    "$ref": "#/$defs/VersionDescription"
                },
                "encryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                }
            }
        },
        "UpdateStateMachineAliasOutput": {
            "type": "object",
            "properties": {
                "updateDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "UpdateStateMachineAliasInput": {
            "type": "object",
            "properties": {
                "stateMachineAliasArn": {
                    "$ref": "#/$defs/Arn"
                },
                "description": {
                    "$ref": "#/$defs/AliasDescription"
                },
                "routingConfiguration": {
                    "$ref": "#/$defs/RoutingConfigurationList"
                }
            }
        },
        "ValidateStateMachineDefinitionOutput": {
            "type": "object",
            "properties": {
                "result": {
                    "$ref": "#/$defs/ValidateStateMachineDefinitionResultCode"
                },
                "diagnostics": {
                    "$ref": "#/$defs/ValidateStateMachineDefinitionDiagnosticList"
                },
                "truncated": {
                    "$ref": "#/$defs/ValidateStateMachineDefinitionTruncated"
                }
            }
        },
        "ValidateStateMachineDefinitionResultCode": {
            "enum": [
                "OK",
                "FAIL"
            ]
        },
        "ValidateStateMachineDefinitionDiagnosticList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValidateStateMachineDefinitionDiagnostic"
            }
        },
        "ValidateStateMachineDefinitionDiagnostic": {
            "type": "object",
            "properties": {
                "severity": {
                    "$ref": "#/$defs/ValidateStateMachineDefinitionSeverity"
                },
                "code": {
                    "$ref": "#/$defs/ValidateStateMachineDefinitionCode"
                },
                "message": {
                    "$ref": "#/$defs/ValidateStateMachineDefinitionMessage"
                },
                "location": {
                    "$ref": "#/$defs/ValidateStateMachineDefinitionLocation"
                }
            }
        },
        "ValidateStateMachineDefinitionSeverity": {
            "enum": [
                "ERROR",
                "WARNING"
            ]
        },
        "ValidateStateMachineDefinitionCode": {
            "type": "string"
        },
        "ValidateStateMachineDefinitionMessage": {
            "type": "string"
        },
        "ValidateStateMachineDefinitionLocation": {
            "type": "string"
        },
        "ValidateStateMachineDefinitionTruncated": {
            "type": "boolean"
        },
        "ValidateStateMachineDefinitionInput": {
            "type": "object",
            "properties": {
                "definition": {
                    "$ref": "#/$defs/Definition"
                },
                "type": {
                    "$ref": "#/$defs/StateMachineType"
                },
                "severity": {
                    "$ref": "#/$defs/ValidateStateMachineDefinitionSeverity"
                },
                "maxResults": {
                    "$ref": "#/$defs/ValidateStateMachineDefinitionMaxResult"
                }
            }
        },
        "ValidateStateMachineDefinitionMaxResult": {
            "type": "integer",
            "format": "int32"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://states-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "us-gov-west-1"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://states.us-gov-west-1.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://states-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://states.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://states.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}