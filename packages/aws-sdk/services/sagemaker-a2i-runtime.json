{
    "name": "sagemaker",
    "commands": [
        {
            "name": "DeleteHumanLoop",
            "config": {
                "http": {
                    "inject": [
                        {
                            "HumanLoopName": "route.HumanLoopName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/human-loops/{HumanLoopName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteHumanLoopResponse"
                    },
                    "inject": [
                        "params.0.HumanLoopName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteHumanLoopRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "HumanLoopName": {}
                    }
                }
            }
        },
        {
            "name": "DescribeHumanLoop",
            "config": {
                "http": {
                    "inject": [
                        {
                            "HumanLoopName": "route.HumanLoopName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/human-loops/{HumanLoopName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeHumanLoopResponse"
                    },
                    "inject": [
                        "params.0.HumanLoopName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeHumanLoopRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "HumanLoopName": {}
                    }
                }
            }
        },
        {
            "name": "ListHumanLoops",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/human-loops"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListHumanLoopsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListHumanLoopsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CreationTimeAfter": {},
                        "CreationTimeBefore": {},
                        "FlowDefinitionArn": {},
                        "SortOrder": {},
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "StartHumanLoop",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/human-loops"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartHumanLoopResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartHumanLoopRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "HumanLoopName": {},
                        "FlowDefinitionArn": {},
                        "HumanLoopInput": {},
                        "DataAttributes": {}
                    }
                }
            }
        },
        {
            "name": "StopHumanLoop",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/human-loops/stop"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopHumanLoopResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StopHumanLoopRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "HumanLoopName": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "DeleteHumanLoopRequest": {
            "type": "object",
            "properties": {
                "HumanLoopName": {
                    "$ref": "#/$defs/HumanLoopName"
                }
            }
        },
        "HumanLoopName": {
            "type": "string"
        },
        "DeleteHumanLoopResponse": {
            "type": "object",
            "properties": {}
        },
        "DescribeHumanLoopRequest": {
            "type": "object",
            "properties": {
                "HumanLoopName": {
                    "$ref": "#/$defs/HumanLoopName"
                }
            }
        },
        "DescribeHumanLoopResponse": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "FailureReason": {
                    "$ref": "#/$defs/String"
                },
                "FailureCode": {
                    "$ref": "#/$defs/String"
                },
                "HumanLoopStatus": {
                    "$ref": "#/$defs/HumanLoopStatus"
                },
                "HumanLoopName": {
                    "$ref": "#/$defs/HumanLoopName"
                },
                "HumanLoopArn": {
                    "$ref": "#/$defs/HumanLoopArn"
                },
                "FlowDefinitionArn": {
                    "$ref": "#/$defs/FlowDefinitionArn"
                },
                "HumanLoopOutput": {
                    "$ref": "#/$defs/HumanLoopOutput"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "String": {
            "type": "string"
        },
        "HumanLoopStatus": {
            "enum": [
                "IN_PROGRESS",
                "FAILED",
                "COMPLETED",
                "STOPPED",
                "STOPPING"
            ]
        },
        "HumanLoopArn": {
            "type": "string"
        },
        "FlowDefinitionArn": {
            "type": "string"
        },
        "HumanLoopOutput": {
            "type": "object",
            "properties": {
                "OutputS3Uri": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListHumanLoopsRequest": {
            "type": "object",
            "properties": {
                "CreationTimeAfter": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreationTimeBefore": {
                    "$ref": "#/$defs/Timestamp"
                },
                "FlowDefinitionArn": {
                    "$ref": "#/$defs/FlowDefinitionArn"
                },
                "SortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "SortOrder": {
            "enum": [
                "ASCENDING",
                "DESCENDING"
            ]
        },
        "NextToken": {
            "type": "string"
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListHumanLoopsResponse": {
            "type": "object",
            "properties": {
                "HumanLoopSummaries": {
                    "$ref": "#/$defs/HumanLoopSummaries"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "HumanLoopSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HumanLoopSummary"
            }
        },
        "HumanLoopSummary": {
            "type": "object",
            "properties": {
                "HumanLoopName": {
                    "$ref": "#/$defs/HumanLoopName"
                },
                "HumanLoopStatus": {
                    "$ref": "#/$defs/HumanLoopStatus"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "FailureReason": {
                    "$ref": "#/$defs/FailureReason"
                },
                "FlowDefinitionArn": {
                    "$ref": "#/$defs/FlowDefinitionArn"
                }
            }
        },
        "FailureReason": {
            "type": "string"
        },
        "StartHumanLoopRequest": {
            "type": "object",
            "properties": {
                "HumanLoopName": {
                    "$ref": "#/$defs/HumanLoopName"
                },
                "FlowDefinitionArn": {
                    "$ref": "#/$defs/FlowDefinitionArn"
                },
                "HumanLoopInput": {
                    "$ref": "#/$defs/HumanLoopInput"
                },
                "DataAttributes": {
                    "$ref": "#/$defs/HumanLoopDataAttributes"
                }
            }
        },
        "HumanLoopInput": {
            "type": "object",
            "properties": {
                "InputContent": {
                    "$ref": "#/$defs/InputContent"
                }
            }
        },
        "InputContent": {
            "type": "string"
        },
        "HumanLoopDataAttributes": {
            "type": "object",
            "properties": {
                "ContentClassifiers": {
                    "$ref": "#/$defs/ContentClassifiers"
                }
            }
        },
        "ContentClassifiers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContentClassifier"
            }
        },
        "ContentClassifier": {
            "enum": [
                "FREE_OF_PERSONALLY_IDENTIFIABLE_INFORMATION",
                "FREE_OF_ADULT_CONTENT"
            ]
        },
        "StartHumanLoopResponse": {
            "type": "object",
            "properties": {
                "HumanLoopArn": {
                    "$ref": "#/$defs/HumanLoopArn"
                }
            }
        },
        "StopHumanLoopRequest": {
            "type": "object",
            "properties": {
                "HumanLoopName": {
                    "$ref": "#/$defs/HumanLoopName"
                }
            }
        },
        "StopHumanLoopResponse": {
            "type": "object",
            "properties": {}
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://a2i-runtime.sagemaker-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://a2i-runtime.sagemaker-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://a2i-runtime.sagemaker.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://a2i-runtime.sagemaker.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
