{
    "name": "chime",
    "commands": [
        {
            "name": "AssociatePhoneNumberWithUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "UserId": "route.UserId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/users/{UserId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociatePhoneNumberWithUserResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.UserId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociatePhoneNumberWithUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UserId": {},
                        "E164PhoneNumber": {}
                    }
                }
            }
        },
        {
            "name": "AssociateSigninDelegateGroupsWithAccount",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateSigninDelegateGroupsWithAccountResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateSigninDelegateGroupsWithAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "SigninDelegateGroups": {}
                    }
                }
            }
        },
        {
            "name": "BatchCreateRoomMembership",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "RoomId": "route.RoomId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/rooms/{RoomId}/memberships"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchCreateRoomMembershipResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.RoomId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchCreateRoomMembershipRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "RoomId": {},
                        "MembershipItemList": {}
                    }
                }
            }
        },
        {
            "name": "BatchDeletePhoneNumber",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/phone-numbers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeletePhoneNumberResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDeletePhoneNumberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PhoneNumberIds": {}
                    }
                }
            }
        },
        {
            "name": "BatchSuspendUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/users"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchSuspendUserResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchSuspendUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UserIdList": {}
                    }
                }
            }
        },
        {
            "name": "BatchUnsuspendUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/users"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchUnsuspendUserResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchUnsuspendUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UserIdList": {}
                    }
                }
            }
        },
        {
            "name": "BatchUpdatePhoneNumber",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/phone-numbers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchUpdatePhoneNumberResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchUpdatePhoneNumberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "UpdatePhoneNumberRequestItems": {}
                    }
                }
            }
        },
        {
            "name": "BatchUpdateUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/users"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchUpdateUserResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchUpdateUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UpdateUserRequestItems": {}
                    }
                }
            }
        },
        {
            "name": "CreateAccount",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/accounts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "CreateBot",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/bots"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBotResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBotRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "DisplayName": {},
                        "Domain": {}
                    }
                }
            }
        },
        {
            "name": "CreateMeetingDialOut",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MeetingId": "route.MeetingId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/meetings/{MeetingId}/dial-outs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMeetingDialOutResponse"
                    },
                    "inject": [
                        "param.0.MeetingId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMeetingDialOutRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MeetingId": {},
                        "FromPhoneNumber": {},
                        "ToPhoneNumber": {},
                        "JoinToken": {}
                    }
                }
            }
        },
        {
            "name": "CreatePhoneNumberOrder",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/phone-number-orders"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePhoneNumberOrderResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePhoneNumberOrderRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ProductType": {},
                        "E164PhoneNumbers": {}
                    }
                }
            }
        },
        {
            "name": "CreateRoom",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/rooms"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRoomResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRoomRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "Name": {},
                        "ClientRequestToken": {}
                    }
                }
            }
        },
        {
            "name": "CreateRoomMembership",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "RoomId": "route.RoomId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/rooms/{RoomId}/memberships"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRoomMembershipResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.RoomId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRoomMembershipRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "RoomId": {},
                        "MemberId": {},
                        "Role": {}
                    }
                }
            }
        },
        {
            "name": "CreateUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/users"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateUserResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "Username": {},
                        "Email": {},
                        "UserType": {}
                    }
                }
            }
        },
        {
            "name": "DeleteAccount",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/accounts/{AccountId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAccountResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteEventsConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "BotId": "route.BotId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/accounts/{AccountId}/bots/{BotId}/events-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.BotId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEventsConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "BotId": {}
                    }
                }
            }
        },
        {
            "name": "DeletePhoneNumber",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PhoneNumberId": "route.PhoneNumberId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/phone-numbers/{PhoneNumberId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.PhoneNumberId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePhoneNumberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PhoneNumberId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteRoom",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "RoomId": "route.RoomId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/accounts/{AccountId}/rooms/{RoomId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.RoomId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRoomRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "RoomId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteRoomMembership",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "RoomId": "route.RoomId",
                            "MemberId": "route.MemberId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/accounts/{AccountId}/rooms/{RoomId}/memberships/{MemberId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.RoomId",
                        "param.0.MemberId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRoomMembershipRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "RoomId": {},
                        "MemberId": {}
                    }
                }
            }
        },
        {
            "name": "DisassociatePhoneNumberFromUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "UserId": "route.UserId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/users/{UserId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociatePhoneNumberFromUserResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.UserId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociatePhoneNumberFromUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UserId": {}
                    }
                }
            }
        },
        {
            "name": "DisassociateSigninDelegateGroupsFromAccount",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateSigninDelegateGroupsFromAccountResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateSigninDelegateGroupsFromAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "GroupNames": {}
                    }
                }
            }
        },
        {
            "name": "GetAccount",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/accounts/{AccountId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAccountResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {}
                    }
                }
            }
        },
        {
            "name": "GetAccountSettings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/accounts/{AccountId}/settings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAccountSettingsResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAccountSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {}
                    }
                }
            }
        },
        {
            "name": "GetBot",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "BotId": "route.BotId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/accounts/{AccountId}/bots/{BotId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBotResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.BotId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBotRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "BotId": {}
                    }
                }
            }
        },
        {
            "name": "GetEventsConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "BotId": "route.BotId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/accounts/{AccountId}/bots/{BotId}/events-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEventsConfigurationResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.BotId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEventsConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "BotId": {}
                    }
                }
            }
        },
        {
            "name": "GetGlobalSettings",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/settings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetGlobalSettingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetPhoneNumber",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PhoneNumberId": "route.PhoneNumberId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/phone-numbers/{PhoneNumberId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPhoneNumberResponse"
                    },
                    "inject": [
                        "param.0.PhoneNumberId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPhoneNumberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PhoneNumberId": {}
                    }
                }
            }
        },
        {
            "name": "GetPhoneNumberOrder",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PhoneNumberOrderId": "route.PhoneNumberOrderId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/phone-number-orders/{PhoneNumberOrderId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPhoneNumberOrderResponse"
                    },
                    "inject": [
                        "param.0.PhoneNumberOrderId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPhoneNumberOrderRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PhoneNumberOrderId": {}
                    }
                }
            }
        },
        {
            "name": "GetPhoneNumberSettings",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/settings/phone-number"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPhoneNumberSettingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetRetentionSettings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/accounts/{AccountId}/retention-settings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRetentionSettingsResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRetentionSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {}
                    }
                }
            }
        },
        {
            "name": "GetRoom",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "RoomId": "route.RoomId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/accounts/{AccountId}/rooms/{RoomId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRoomResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.RoomId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRoomRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "RoomId": {}
                    }
                }
            }
        },
        {
            "name": "GetUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "UserId": "route.UserId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/accounts/{AccountId}/users/{UserId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUserResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.UserId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UserId": {}
                    }
                }
            }
        },
        {
            "name": "GetUserSettings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "UserId": "route.UserId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/accounts/{AccountId}/users/{UserId}/settings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUserSettingsResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.UserId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUserSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UserId": {}
                    }
                }
            }
        },
        {
            "name": "InviteUsers",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/users"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/InviteUsersResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/InviteUsersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UserEmailList": {},
                        "UserType": {}
                    }
                }
            }
        },
        {
            "name": "ListAccounts",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/accounts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAccountsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAccountsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "UserEmail": {},
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListBots",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/accounts/{AccountId}/bots"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBotsResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBotsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListPhoneNumberOrders",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/phone-number-orders"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPhoneNumberOrdersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPhoneNumberOrdersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListPhoneNumbers",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/phone-numbers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPhoneNumbersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPhoneNumbersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Status": {},
                        "ProductType": {},
                        "FilterName": {},
                        "FilterValue": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListRoomMemberships",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "RoomId": "route.RoomId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/accounts/{AccountId}/rooms/{RoomId}/memberships"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRoomMembershipsResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.RoomId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRoomMembershipsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "RoomId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListRooms",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/accounts/{AccountId}/rooms"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRoomsResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRoomsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "MemberId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListSupportedPhoneNumberCountries",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/phone-number-countries"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSupportedPhoneNumberCountriesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSupportedPhoneNumberCountriesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ProductType": {}
                    }
                }
            }
        },
        {
            "name": "ListUsers",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/accounts/{AccountId}/users"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListUsersResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListUsersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UserEmail": {},
                        "UserType": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "LogoutUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "UserId": "route.UserId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/users/{UserId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/LogoutUserResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.UserId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/LogoutUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UserId": {}
                    }
                }
            }
        },
        {
            "name": "PutEventsConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "BotId": "route.BotId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/accounts/{AccountId}/bots/{BotId}/events-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEventsConfigurationResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.BotId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutEventsConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "BotId": {},
                        "OutboundEventsHTTPSEndpoint": {},
                        "LambdaFunctionArn": {}
                    }
                }
            }
        },
        {
            "name": "PutRetentionSettings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/accounts/{AccountId}/retention-settings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutRetentionSettingsResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutRetentionSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "RetentionSettings": {}
                    }
                }
            }
        },
        {
            "name": "RedactConversationMessage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "ConversationId": "route.ConversationId",
                            "MessageId": "route.MessageId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/conversations/{ConversationId}/messages/{MessageId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RedactConversationMessageResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.ConversationId",
                        "param.0.MessageId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RedactConversationMessageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "ConversationId": {},
                        "MessageId": {}
                    }
                }
            }
        },
        {
            "name": "RedactRoomMessage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "RoomId": "route.RoomId",
                            "MessageId": "route.MessageId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/rooms/{RoomId}/messages/{MessageId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RedactRoomMessageResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.RoomId",
                        "param.0.MessageId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RedactRoomMessageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "RoomId": {},
                        "MessageId": {}
                    }
                }
            }
        },
        {
            "name": "RegenerateSecurityToken",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "BotId": "route.BotId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/bots/{BotId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegenerateSecurityTokenResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.BotId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegenerateSecurityTokenRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "BotId": {}
                    }
                }
            }
        },
        {
            "name": "ResetPersonalPIN",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "UserId": "route.UserId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/users/{UserId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetPersonalPINResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.UserId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetPersonalPINRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UserId": {}
                    }
                }
            }
        },
        {
            "name": "RestorePhoneNumber",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PhoneNumberId": "route.PhoneNumberId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/phone-numbers/{PhoneNumberId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestorePhoneNumberResponse"
                    },
                    "inject": [
                        "param.0.PhoneNumberId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RestorePhoneNumberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PhoneNumberId": {}
                    }
                }
            }
        },
        {
            "name": "SearchAvailablePhoneNumbers",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/search"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchAvailablePhoneNumbersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchAvailablePhoneNumbersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AreaCode": {},
                        "City": {},
                        "Country": {},
                        "State": {},
                        "TollFreePrefix": {},
                        "PhoneNumberType": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "UpdateAccount",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAccountResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "Name": {},
                        "DefaultLicense": {}
                    }
                }
            }
        },
        {
            "name": "UpdateAccountSettings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/accounts/{AccountId}/settings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAccountSettingsResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAccountSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "AccountSettings": {}
                    }
                }
            }
        },
        {
            "name": "UpdateBot",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "BotId": "route.BotId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/bots/{BotId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBotResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.BotId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBotRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "BotId": {},
                        "Disabled": {}
                    }
                }
            }
        },
        {
            "name": "UpdateGlobalSettings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/settings"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateGlobalSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "BusinessCalling": {},
                        "VoiceConnector": {}
                    }
                }
            }
        },
        {
            "name": "UpdatePhoneNumber",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PhoneNumberId": "route.PhoneNumberId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/phone-numbers/{PhoneNumberId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePhoneNumberResponse"
                    },
                    "inject": [
                        "param.0.PhoneNumberId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePhoneNumberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PhoneNumberId": {},
                        "ProductType": {},
                        "CallingName": {}
                    }
                }
            }
        },
        {
            "name": "UpdatePhoneNumberSettings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/settings/phone-number"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePhoneNumberSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CallingName": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRoom",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "RoomId": "route.RoomId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/rooms/{RoomId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRoomResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.RoomId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRoomRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "RoomId": {},
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRoomMembership",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "RoomId": "route.RoomId",
                            "MemberId": "route.MemberId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/rooms/{RoomId}/memberships/{MemberId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRoomMembershipResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.RoomId",
                        "param.0.MemberId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRoomMembershipRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "RoomId": {},
                        "MemberId": {},
                        "Role": {}
                    }
                }
            }
        },
        {
            "name": "UpdateUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "UserId": "route.UserId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/accounts/{AccountId}/users/{UserId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateUserResponse"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.UserId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UserId": {},
                        "LicenseType": {},
                        "UserType": {},
                        "AlexaForBusinessMetadata": {}
                    }
                }
            }
        },
        {
            "name": "UpdateUserSettings",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccountId": "route.AccountId",
                            "UserId": "route.UserId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/accounts/{AccountId}/users/{UserId}/settings"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.AccountId",
                        "param.0.UserId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateUserSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountId": {},
                        "UserId": {},
                        "UserSettings": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociatePhoneNumberWithUserRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "UserId": {
                    "$ref": "#/$defs/String"
                },
                "E164PhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "E164PhoneNumber": {
            "type": "string"
        },
        "AssociatePhoneNumberWithUserResponse": {
            "type": "object",
            "properties": {}
        },
        "AssociateSigninDelegateGroupsWithAccountRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "SigninDelegateGroups": {
                    "$ref": "#/$defs/SigninDelegateGroupList"
                }
            }
        },
        "NonEmptyString": {
            "type": "string"
        },
        "SigninDelegateGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SigninDelegateGroup"
            }
        },
        "SigninDelegateGroup": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "AssociateSigninDelegateGroupsWithAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "BatchCreateRoomMembershipRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "RoomId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "MembershipItemList": {
                    "$ref": "#/$defs/MembershipItemList"
                }
            }
        },
        "MembershipItemList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MembershipItem"
            }
        },
        "MembershipItem": {
            "type": "object",
            "properties": {
                "MemberId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Role": {
                    "$ref": "#/$defs/RoomMembershipRole"
                }
            }
        },
        "RoomMembershipRole": {
            "enum": [
                "Administrator",
                "Member"
            ]
        },
        "BatchCreateRoomMembershipResponse": {
            "type": "object",
            "properties": {
                "Errors": {
                    "$ref": "#/$defs/MemberErrorList"
                }
            }
        },
        "MemberErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MemberError"
            }
        },
        "MemberError": {
            "type": "object",
            "properties": {
                "MemberId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ErrorCode": {
            "enum": [
                "BadRequest",
                "Conflict",
                "Forbidden",
                "NotFound",
                "PreconditionFailed",
                "ResourceLimitExceeded",
                "ServiceFailure",
                "AccessDenied",
                "ServiceUnavailable",
                "Throttled",
                "Throttling",
                "Unauthorized",
                "Unprocessable",
                "VoiceConnectorGroupAssociationsExist",
                "PhoneNumberAssociationsExist"
            ]
        },
        "BatchDeletePhoneNumberRequest": {
            "type": "object",
            "properties": {
                "PhoneNumberIds": {
                    "$ref": "#/$defs/NonEmptyStringList"
                }
            }
        },
        "NonEmptyStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "BatchDeletePhoneNumberResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberErrors": {
                    "$ref": "#/$defs/PhoneNumberErrorList"
                }
            }
        },
        "PhoneNumberErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PhoneNumberError"
            }
        },
        "PhoneNumberError": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BatchSuspendUserRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "UserIdList": {
                    "$ref": "#/$defs/UserIdList"
                }
            }
        },
        "UserIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonEmptyString"
            }
        },
        "BatchSuspendUserResponse": {
            "type": "object",
            "properties": {
                "UserErrors": {
                    "$ref": "#/$defs/UserErrorList"
                }
            }
        },
        "UserErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserError"
            }
        },
        "UserError": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BatchUnsuspendUserRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "UserIdList": {
                    "$ref": "#/$defs/UserIdList"
                }
            }
        },
        "BatchUnsuspendUserResponse": {
            "type": "object",
            "properties": {
                "UserErrors": {
                    "$ref": "#/$defs/UserErrorList"
                }
            }
        },
        "BatchUpdatePhoneNumberRequest": {
            "type": "object",
            "properties": {
                "UpdatePhoneNumberRequestItems": {
                    "$ref": "#/$defs/UpdatePhoneNumberRequestItemList"
                }
            }
        },
        "UpdatePhoneNumberRequestItemList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpdatePhoneNumberRequestItem"
            }
        },
        "UpdatePhoneNumberRequestItem": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                },
                "CallingName": {
                    "$ref": "#/$defs/CallingName"
                }
            }
        },
        "PhoneNumberProductType": {
            "enum": [
                "BusinessCalling",
                "VoiceConnector",
                "SipMediaApplicationDialIn"
            ]
        },
        "CallingName": {
            "type": "string"
        },
        "BatchUpdatePhoneNumberResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberErrors": {
                    "$ref": "#/$defs/PhoneNumberErrorList"
                }
            }
        },
        "BatchUpdateUserRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "UpdateUserRequestItems": {
                    "$ref": "#/$defs/UpdateUserRequestItemList"
                }
            }
        },
        "UpdateUserRequestItemList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpdateUserRequestItem"
            }
        },
        "UpdateUserRequestItem": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "LicenseType": {
                    "$ref": "#/$defs/License"
                },
                "UserType": {
                    "$ref": "#/$defs/UserType"
                },
                "AlexaForBusinessMetadata": {
                    "$ref": "#/$defs/AlexaForBusinessMetadata"
                }
            }
        },
        "License": {
            "enum": [
                "Basic",
                "Plus",
                "Pro",
                "ProTrial"
            ]
        },
        "UserType": {
            "enum": [
                "PrivateUser",
                "SharedDevice"
            ]
        },
        "AlexaForBusinessMetadata": {
            "type": "object",
            "properties": {
                "IsAlexaForBusinessEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "AlexaForBusinessRoomArn": {
                    "$ref": "#/$defs/SensitiveString"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "SensitiveString": {
            "type": "string"
        },
        "BatchUpdateUserResponse": {
            "type": "object",
            "properties": {
                "UserErrors": {
                    "$ref": "#/$defs/UserErrorList"
                }
            }
        },
        "CreateAccountRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/AccountName"
                }
            }
        },
        "AccountName": {
            "type": "string"
        },
        "CreateAccountResponse": {
            "type": "object",
            "properties": {
                "Account": {
                    "$ref": "#/$defs/Account"
                }
            }
        },
        "Account": {
            "type": "object",
            "properties": {
                "AwsAccountId": {
                    "$ref": "#/$defs/String"
                },
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "AccountType": {
                    "$ref": "#/$defs/AccountType"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "DefaultLicense": {
                    "$ref": "#/$defs/License"
                },
                "SupportedLicenses": {
                    "$ref": "#/$defs/LicenseList"
                },
                "AccountStatus": {
                    "$ref": "#/$defs/AccountStatus"
                },
                "SigninDelegateGroups": {
                    "$ref": "#/$defs/SigninDelegateGroupList"
                }
            }
        },
        "AccountType": {
            "enum": [
                "Team",
                "EnterpriseDirectory",
                "EnterpriseLWA",
                "EnterpriseOIDC"
            ]
        },
        "Iso8601Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "LicenseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/License"
            }
        },
        "AccountStatus": {
            "enum": [
                "Suspended",
                "Active"
            ]
        },
        "CreateBotRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "DisplayName": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "Domain": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "CreateBotResponse": {
            "type": "object",
            "properties": {
                "Bot": {
                    "$ref": "#/$defs/Bot"
                }
            }
        },
        "Bot": {
            "type": "object",
            "properties": {
                "BotId": {
                    "$ref": "#/$defs/String"
                },
                "UserId": {
                    "$ref": "#/$defs/String"
                },
                "DisplayName": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "BotType": {
                    "$ref": "#/$defs/BotType"
                },
                "Disabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "BotEmail": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "SecurityToken": {
                    "$ref": "#/$defs/SensitiveString"
                }
            }
        },
        "BotType": {
            "enum": [
                "ChatBot"
            ]
        },
        "NullableBoolean": {
            "type": "boolean"
        },
        "CreateMeetingDialOutRequest": {
            "type": "object",
            "properties": {
                "MeetingId": {
                    "$ref": "#/$defs/GuidString"
                },
                "FromPhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "ToPhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "JoinToken": {
                    "$ref": "#/$defs/JoinTokenString"
                }
            }
        },
        "GuidString": {
            "type": "string"
        },
        "JoinTokenString": {
            "type": "string"
        },
        "CreateMeetingDialOutResponse": {
            "type": "object",
            "properties": {
                "TransactionId": {
                    "$ref": "#/$defs/GuidString"
                }
            }
        },
        "CreatePhoneNumberOrderRequest": {
            "type": "object",
            "properties": {
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                },
                "E164PhoneNumbers": {
                    "$ref": "#/$defs/E164PhoneNumberList"
                }
            }
        },
        "E164PhoneNumberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/E164PhoneNumber"
            }
        },
        "CreatePhoneNumberOrderResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberOrder": {
                    "$ref": "#/$defs/PhoneNumberOrder"
                }
            }
        },
        "PhoneNumberOrder": {
            "type": "object",
            "properties": {
                "PhoneNumberOrderId": {
                    "$ref": "#/$defs/GuidString"
                },
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                },
                "Status": {
                    "$ref": "#/$defs/PhoneNumberOrderStatus"
                },
                "OrderedPhoneNumbers": {
                    "$ref": "#/$defs/OrderedPhoneNumberList"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "PhoneNumberOrderStatus": {
            "enum": [
                "Processing",
                "Successful",
                "Failed",
                "Partial"
            ]
        },
        "OrderedPhoneNumberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrderedPhoneNumber"
            }
        },
        "OrderedPhoneNumber": {
            "type": "object",
            "properties": {
                "E164PhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "Status": {
                    "$ref": "#/$defs/OrderedPhoneNumberStatus"
                }
            }
        },
        "OrderedPhoneNumberStatus": {
            "enum": [
                "Processing",
                "Acquired",
                "Failed"
            ]
        },
        "CreateRoomRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Name": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "ClientRequestToken": {
            "type": "string"
        },
        "CreateRoomResponse": {
            "type": "object",
            "properties": {
                "Room": {
                    "$ref": "#/$defs/Room"
                }
            }
        },
        "Room": {
            "type": "object",
            "properties": {
                "RoomId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Name": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "CreateRoomMembershipRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "RoomId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "MemberId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Role": {
                    "$ref": "#/$defs/RoomMembershipRole"
                }
            }
        },
        "CreateRoomMembershipResponse": {
            "type": "object",
            "properties": {
                "RoomMembership": {
                    "$ref": "#/$defs/RoomMembership"
                }
            }
        },
        "RoomMembership": {
            "type": "object",
            "properties": {
                "RoomId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Member": {
                    "$ref": "#/$defs/Member"
                },
                "Role": {
                    "$ref": "#/$defs/RoomMembershipRole"
                },
                "InvitedBy": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "Member": {
            "type": "object",
            "properties": {
                "MemberId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "MemberType": {
                    "$ref": "#/$defs/MemberType"
                },
                "Email": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "FullName": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "MemberType": {
            "enum": [
                "User",
                "Bot",
                "Webhook"
            ]
        },
        "CreateUserRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Username": {
                    "$ref": "#/$defs/String"
                },
                "Email": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "UserType": {
                    "$ref": "#/$defs/UserType"
                }
            }
        },
        "EmailAddress": {
            "type": "string"
        },
        "CreateUserResponse": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/User"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/String"
                },
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "PrimaryEmail": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "PrimaryProvisionedNumber": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "DisplayName": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "LicenseType": {
                    "$ref": "#/$defs/License"
                },
                "UserType": {
                    "$ref": "#/$defs/UserType"
                },
                "UserRegistrationStatus": {
                    "$ref": "#/$defs/RegistrationStatus"
                },
                "UserInvitationStatus": {
                    "$ref": "#/$defs/InviteStatus"
                },
                "RegisteredOn": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "InvitedOn": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "AlexaForBusinessMetadata": {
                    "$ref": "#/$defs/AlexaForBusinessMetadata"
                },
                "PersonalPIN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RegistrationStatus": {
            "enum": [
                "Unregistered",
                "Registered",
                "Suspended"
            ]
        },
        "InviteStatus": {
            "enum": [
                "Pending",
                "Accepted",
                "Failed"
            ]
        },
        "DeleteAccountRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeleteAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteEventsConfigurationRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "BotId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeletePhoneNumberRequest": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteRoomRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "RoomId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeleteRoomMembershipRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "RoomId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "MemberId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DisassociatePhoneNumberFromUserRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "UserId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DisassociatePhoneNumberFromUserResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateSigninDelegateGroupsFromAccountRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "GroupNames": {
                    "$ref": "#/$defs/NonEmptyStringList"
                }
            }
        },
        "DisassociateSigninDelegateGroupsFromAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "GetAccountRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetAccountResponse": {
            "type": "object",
            "properties": {
                "Account": {
                    "$ref": "#/$defs/Account"
                }
            }
        },
        "GetAccountSettingsRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetAccountSettingsResponse": {
            "type": "object",
            "properties": {
                "AccountSettings": {
                    "$ref": "#/$defs/AccountSettings"
                }
            }
        },
        "AccountSettings": {
            "type": "object",
            "properties": {
                "DisableRemoteControl": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnableDialOut": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetBotRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "BotId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetBotResponse": {
            "type": "object",
            "properties": {
                "Bot": {
                    "$ref": "#/$defs/Bot"
                }
            }
        },
        "GetEventsConfigurationRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "BotId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetEventsConfigurationResponse": {
            "type": "object",
            "properties": {
                "EventsConfiguration": {
                    "$ref": "#/$defs/EventsConfiguration"
                }
            }
        },
        "EventsConfiguration": {
            "type": "object",
            "properties": {
                "BotId": {
                    "$ref": "#/$defs/String"
                },
                "OutboundEventsHTTPSEndpoint": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "LambdaFunctionArn": {
                    "$ref": "#/$defs/SensitiveString"
                }
            }
        },
        "GetGlobalSettingsResponse": {
            "type": "object",
            "properties": {
                "BusinessCalling": {
                    "$ref": "#/$defs/BusinessCallingSettings"
                },
                "VoiceConnector": {
                    "$ref": "#/$defs/VoiceConnectorSettings"
                }
            }
        },
        "BusinessCallingSettings": {
            "type": "object",
            "properties": {
                "CdrBucket": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VoiceConnectorSettings": {
            "type": "object",
            "properties": {
                "CdrBucket": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetPhoneNumberRequest": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetPhoneNumberResponse": {
            "type": "object",
            "properties": {
                "PhoneNumber": {
                    "$ref": "#/$defs/PhoneNumber"
                }
            }
        },
        "PhoneNumber": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/String"
                },
                "E164PhoneNumber": {
                    "$ref": "#/$defs/E164PhoneNumber"
                },
                "Country": {
                    "$ref": "#/$defs/Alpha2CountryCode"
                },
                "Type": {
                    "$ref": "#/$defs/PhoneNumberType"
                },
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                },
                "Status": {
                    "$ref": "#/$defs/PhoneNumberStatus"
                },
                "Capabilities": {
                    "$ref": "#/$defs/PhoneNumberCapabilities"
                },
                "Associations": {
                    "$ref": "#/$defs/PhoneNumberAssociationList"
                },
                "CallingName": {
                    "$ref": "#/$defs/CallingName"
                },
                "CallingNameStatus": {
                    "$ref": "#/$defs/CallingNameStatus"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "UpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                },
                "DeletionTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "Alpha2CountryCode": {
            "type": "string"
        },
        "PhoneNumberType": {
            "enum": [
                "Local",
                "TollFree"
            ]
        },
        "PhoneNumberStatus": {
            "enum": [
                "AcquireInProgress",
                "AcquireFailed",
                "Unassigned",
                "Assigned",
                "ReleaseInProgress",
                "DeleteInProgress",
                "ReleaseFailed",
                "DeleteFailed"
            ]
        },
        "PhoneNumberCapabilities": {
            "type": "object",
            "properties": {
                "InboundCall": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "OutboundCall": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "InboundSMS": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "OutboundSMS": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "InboundMMS": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "OutboundMMS": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "PhoneNumberAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PhoneNumberAssociation"
            }
        },
        "PhoneNumberAssociation": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/PhoneNumberAssociationName"
                },
                "AssociatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "PhoneNumberAssociationName": {
            "enum": [
                "AccountId",
                "UserId",
                "VoiceConnectorId",
                "VoiceConnectorGroupId",
                "SipRuleId"
            ]
        },
        "CallingNameStatus": {
            "enum": [
                "Unassigned",
                "UpdateInProgress",
                "UpdateSucceeded",
                "UpdateFailed"
            ]
        },
        "GetPhoneNumberOrderRequest": {
            "type": "object",
            "properties": {
                "PhoneNumberOrderId": {
                    "$ref": "#/$defs/GuidString"
                }
            }
        },
        "GetPhoneNumberOrderResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberOrder": {
                    "$ref": "#/$defs/PhoneNumberOrder"
                }
            }
        },
        "GetPhoneNumberSettingsResponse": {
            "type": "object",
            "properties": {
                "CallingName": {
                    "$ref": "#/$defs/CallingName"
                },
                "CallingNameUpdatedTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "GetRetentionSettingsRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetRetentionSettingsResponse": {
            "type": "object",
            "properties": {
                "RetentionSettings": {
                    "$ref": "#/$defs/RetentionSettings"
                },
                "InitiateDeletionTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "RetentionSettings": {
            "type": "object",
            "properties": {
                "RoomRetentionSettings": {
                    "$ref": "#/$defs/RoomRetentionSettings"
                },
                "ConversationRetentionSettings": {
                    "$ref": "#/$defs/ConversationRetentionSettings"
                }
            }
        },
        "RoomRetentionSettings": {
            "type": "object",
            "properties": {
                "RetentionDays": {
                    "$ref": "#/$defs/RetentionDays"
                }
            }
        },
        "RetentionDays": {
            "type": "integer",
            "format": "int32"
        },
        "ConversationRetentionSettings": {
            "type": "object",
            "properties": {
                "RetentionDays": {
                    "$ref": "#/$defs/RetentionDays"
                }
            }
        },
        "GetRoomRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "RoomId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetRoomResponse": {
            "type": "object",
            "properties": {
                "Room": {
                    "$ref": "#/$defs/Room"
                }
            }
        },
        "GetUserRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "UserId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetUserResponse": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/User"
                }
            }
        },
        "GetUserSettingsRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "UserId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetUserSettingsResponse": {
            "type": "object",
            "properties": {
                "UserSettings": {
                    "$ref": "#/$defs/UserSettings"
                }
            }
        },
        "UserSettings": {
            "type": "object",
            "properties": {
                "Telephony": {
                    "$ref": "#/$defs/TelephonySettings"
                }
            }
        },
        "TelephonySettings": {
            "type": "object",
            "properties": {
                "InboundCalling": {
                    "$ref": "#/$defs/Boolean"
                },
                "OutboundCalling": {
                    "$ref": "#/$defs/Boolean"
                },
                "SMS": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "InviteUsersRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "UserEmailList": {
                    "$ref": "#/$defs/UserEmailList"
                },
                "UserType": {
                    "$ref": "#/$defs/UserType"
                }
            }
        },
        "UserEmailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EmailAddress"
            }
        },
        "InviteUsersResponse": {
            "type": "object",
            "properties": {
                "Invites": {
                    "$ref": "#/$defs/InviteList"
                }
            }
        },
        "InviteList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Invite"
            }
        },
        "Invite": {
            "type": "object",
            "properties": {
                "InviteId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/InviteStatus"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "EmailStatus": {
                    "$ref": "#/$defs/EmailStatus"
                }
            }
        },
        "EmailStatus": {
            "enum": [
                "NotSent",
                "Sent",
                "Failed"
            ]
        },
        "ListAccountsRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/AccountName"
                },
                "UserEmail": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ProfileServiceMaxResults"
                }
            }
        },
        "ProfileServiceMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListAccountsResponse": {
            "type": "object",
            "properties": {
                "Accounts": {
                    "$ref": "#/$defs/AccountList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AccountList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Account"
            }
        },
        "ListBotsRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ResultMax": {
            "type": "integer",
            "format": "int32"
        },
        "ListBotsResponse": {
            "type": "object",
            "properties": {
                "Bots": {
                    "$ref": "#/$defs/BotList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BotList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Bot"
            }
        },
        "ListPhoneNumberOrdersRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                }
            }
        },
        "ListPhoneNumberOrdersResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberOrders": {
                    "$ref": "#/$defs/PhoneNumberOrderList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PhoneNumberOrderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PhoneNumberOrder"
            }
        },
        "ListPhoneNumbersRequest": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/PhoneNumberStatus"
                },
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                },
                "FilterName": {
                    "$ref": "#/$defs/PhoneNumberAssociationName"
                },
                "FilterValue": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListPhoneNumbersResponse": {
            "type": "object",
            "properties": {
                "PhoneNumbers": {
                    "$ref": "#/$defs/PhoneNumberList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PhoneNumberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PhoneNumber"
            }
        },
        "ListRoomMembershipsRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "RoomId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListRoomMembershipsResponse": {
            "type": "object",
            "properties": {
                "RoomMemberships": {
                    "$ref": "#/$defs/RoomMembershipList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RoomMembershipList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RoomMembership"
            }
        },
        "ListRoomsRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "MemberId": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultMax"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListRoomsResponse": {
            "type": "object",
            "properties": {
                "Rooms": {
                    "$ref": "#/$defs/RoomList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RoomList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Room"
            }
        },
        "ListSupportedPhoneNumberCountriesRequest": {
            "type": "object",
            "properties": {
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                }
            }
        },
        "ListSupportedPhoneNumberCountriesResponse": {
            "type": "object",
            "properties": {
                "PhoneNumberCountries": {
                    "$ref": "#/$defs/PhoneNumberCountriesList"
                }
            }
        },
        "PhoneNumberCountriesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PhoneNumberCountry"
            }
        },
        "PhoneNumberCountry": {
            "type": "object",
            "properties": {
                "CountryCode": {
                    "$ref": "#/$defs/Alpha2CountryCode"
                },
                "SupportedPhoneNumberTypes": {
                    "$ref": "#/$defs/PhoneNumberTypeList"
                }
            }
        },
        "PhoneNumberTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PhoneNumberType"
            }
        },
        "ListUsersRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "UserEmail": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "UserType": {
                    "$ref": "#/$defs/UserType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ProfileServiceMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListUsersResponse": {
            "type": "object",
            "properties": {
                "Users": {
                    "$ref": "#/$defs/UserList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UserList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/User"
            }
        },
        "LogoutUserRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "UserId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "LogoutUserResponse": {
            "type": "object",
            "properties": {}
        },
        "PutEventsConfigurationRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "BotId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "OutboundEventsHTTPSEndpoint": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "LambdaFunctionArn": {
                    "$ref": "#/$defs/SensitiveString"
                }
            }
        },
        "PutEventsConfigurationResponse": {
            "type": "object",
            "properties": {
                "EventsConfiguration": {
                    "$ref": "#/$defs/EventsConfiguration"
                }
            }
        },
        "PutRetentionSettingsRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "RetentionSettings": {
                    "$ref": "#/$defs/RetentionSettings"
                }
            }
        },
        "PutRetentionSettingsResponse": {
            "type": "object",
            "properties": {
                "RetentionSettings": {
                    "$ref": "#/$defs/RetentionSettings"
                },
                "InitiateDeletionTimestamp": {
                    "$ref": "#/$defs/Iso8601Timestamp"
                }
            }
        },
        "RedactConversationMessageRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "ConversationId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "MessageId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "RedactConversationMessageResponse": {
            "type": "object",
            "properties": {}
        },
        "RedactRoomMessageRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "RoomId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "MessageId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "RedactRoomMessageResponse": {
            "type": "object",
            "properties": {}
        },
        "RegenerateSecurityTokenRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "BotId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "RegenerateSecurityTokenResponse": {
            "type": "object",
            "properties": {
                "Bot": {
                    "$ref": "#/$defs/Bot"
                }
            }
        },
        "ResetPersonalPINRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "UserId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "ResetPersonalPINResponse": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/User"
                }
            }
        },
        "RestorePhoneNumberRequest": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "RestorePhoneNumberResponse": {
            "type": "object",
            "properties": {
                "PhoneNumber": {
                    "$ref": "#/$defs/PhoneNumber"
                }
            }
        },
        "SearchAvailablePhoneNumbersRequest": {
            "type": "object",
            "properties": {
                "AreaCode": {
                    "$ref": "#/$defs/String"
                },
                "City": {
                    "$ref": "#/$defs/String"
                },
                "Country": {
                    "$ref": "#/$defs/Alpha2CountryCode"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "TollFreePrefix": {
                    "$ref": "#/$defs/TollFreePrefix"
                },
                "PhoneNumberType": {
                    "$ref": "#/$defs/PhoneNumberType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PhoneNumberMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TollFreePrefix": {
            "type": "string"
        },
        "PhoneNumberMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "SearchAvailablePhoneNumbersResponse": {
            "type": "object",
            "properties": {
                "E164PhoneNumbers": {
                    "$ref": "#/$defs/E164PhoneNumberList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpdateAccountRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Name": {
                    "$ref": "#/$defs/AccountName"
                },
                "DefaultLicense": {
                    "$ref": "#/$defs/License"
                }
            }
        },
        "UpdateAccountResponse": {
            "type": "object",
            "properties": {
                "Account": {
                    "$ref": "#/$defs/Account"
                }
            }
        },
        "UpdateAccountSettingsRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "AccountSettings": {
                    "$ref": "#/$defs/AccountSettings"
                }
            }
        },
        "UpdateAccountSettingsResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateBotRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "BotId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Disabled": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "UpdateBotResponse": {
            "type": "object",
            "properties": {
                "Bot": {
                    "$ref": "#/$defs/Bot"
                }
            }
        },
        "UpdateGlobalSettingsRequest": {
            "type": "object",
            "properties": {
                "BusinessCalling": {
                    "$ref": "#/$defs/BusinessCallingSettings"
                },
                "VoiceConnector": {
                    "$ref": "#/$defs/VoiceConnectorSettings"
                }
            }
        },
        "UpdatePhoneNumberRequest": {
            "type": "object",
            "properties": {
                "PhoneNumberId": {
                    "$ref": "#/$defs/String"
                },
                "ProductType": {
                    "$ref": "#/$defs/PhoneNumberProductType"
                },
                "CallingName": {
                    "$ref": "#/$defs/CallingName"
                }
            }
        },
        "UpdatePhoneNumberResponse": {
            "type": "object",
            "properties": {
                "PhoneNumber": {
                    "$ref": "#/$defs/PhoneNumber"
                }
            }
        },
        "UpdatePhoneNumberSettingsRequest": {
            "type": "object",
            "properties": {
                "CallingName": {
                    "$ref": "#/$defs/CallingName"
                }
            }
        },
        "UpdateRoomRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "RoomId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Name": {
                    "$ref": "#/$defs/SensitiveString"
                }
            }
        },
        "UpdateRoomResponse": {
            "type": "object",
            "properties": {
                "Room": {
                    "$ref": "#/$defs/Room"
                }
            }
        },
        "UpdateRoomMembershipRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "RoomId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "MemberId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "Role": {
                    "$ref": "#/$defs/RoomMembershipRole"
                }
            }
        },
        "UpdateRoomMembershipResponse": {
            "type": "object",
            "properties": {
                "RoomMembership": {
                    "$ref": "#/$defs/RoomMembership"
                }
            }
        },
        "UpdateUserRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "UserId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "LicenseType": {
                    "$ref": "#/$defs/License"
                },
                "UserType": {
                    "$ref": "#/$defs/UserType"
                },
                "AlexaForBusinessMetadata": {
                    "$ref": "#/$defs/AlexaForBusinessMetadata"
                }
            }
        },
        "UpdateUserResponse": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/User"
                }
            }
        },
        "UpdateUserSettingsRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "UserId": {
                    "$ref": "#/$defs/String"
                },
                "UserSettings": {
                    "$ref": "#/$defs/UserSettings"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "PartitionResult"
                                                        },
                                                        "name"
                                                    ]
                                                },
                                                "aws"
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                false
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                false
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://chime.us-east-1.amazonaws.com",
                                        "properties": {
                                            "authSchemes": [
                                                {
                                                    "name": "sigv4",
                                                    "signingName": "chime",
                                                    "signingRegion": "us-east-1"
                                                }
                                            ]
                                        },
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://chime-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://chime-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://chime.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://chime.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}