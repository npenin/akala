{
    "name": "kinesisanalytics",
    "commands": [
        {
            "name": "AddApplicationCloudWatchLoggingOption",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AddApplicationCloudWatchLoggingOption"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddApplicationCloudWatchLoggingOptionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddApplicationCloudWatchLoggingOptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddApplicationInput",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AddApplicationInput"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddApplicationInputResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddApplicationInputRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddApplicationInputProcessingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AddApplicationInputProcessingConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddApplicationInputProcessingConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddApplicationInputProcessingConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddApplicationOutput",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AddApplicationOutput"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddApplicationOutputResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddApplicationOutputRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddApplicationReferenceDataSource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AddApplicationReferenceDataSource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddApplicationReferenceDataSourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddApplicationReferenceDataSourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateApplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteApplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteApplicationCloudWatchLoggingOption",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteApplicationCloudWatchLoggingOption"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteApplicationCloudWatchLoggingOptionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteApplicationCloudWatchLoggingOptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteApplicationInputProcessingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteApplicationInputProcessingConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteApplicationInputProcessingConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteApplicationInputProcessingConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteApplicationOutput",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteApplicationOutput"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteApplicationOutputResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteApplicationOutputRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteApplicationReferenceDataSource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteApplicationReferenceDataSource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteApplicationReferenceDataSourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteApplicationReferenceDataSourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeApplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DiscoverInputSchema",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DiscoverInputSchema"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DiscoverInputSchemaResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DiscoverInputSchemaRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListApplications",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListApplications"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApplicationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListApplicationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartApplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopApplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateApplicationRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AddApplicationCloudWatchLoggingOptionResponse": {
            "type": "object",
            "properties": {}
        },
        "AddApplicationCloudWatchLoggingOptionRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "CurrentApplicationVersionId": {
                    "$ref": "#/$defs/ApplicationVersionId"
                },
                "CloudWatchLoggingOption": {
                    "$ref": "#/$defs/CloudWatchLoggingOption"
                }
            }
        },
        "ApplicationName": {
            "type": "string"
        },
        "ApplicationVersionId": {
            "type": "integer",
            "format": "int64"
        },
        "CloudWatchLoggingOption": {
            "type": "object",
            "properties": {
                "LogStreamARN": {
                    "$ref": "#/$defs/LogStreamARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "LogStreamARN": {
            "type": "string"
        },
        "RoleARN": {
            "type": "string"
        },
        "AddApplicationInputResponse": {
            "type": "object",
            "properties": {}
        },
        "AddApplicationInputRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "CurrentApplicationVersionId": {
                    "$ref": "#/$defs/ApplicationVersionId"
                },
                "Input": {
                    "$ref": "#/$defs/Input"
                }
            }
        },
        "Input": {
            "type": "object",
            "properties": {
                "NamePrefix": {
                    "$ref": "#/$defs/InAppStreamName"
                },
                "InputProcessingConfiguration": {
                    "$ref": "#/$defs/InputProcessingConfiguration"
                },
                "KinesisStreamsInput": {
                    "$ref": "#/$defs/KinesisStreamsInput"
                },
                "KinesisFirehoseInput": {
                    "$ref": "#/$defs/KinesisFirehoseInput"
                },
                "InputParallelism": {
                    "$ref": "#/$defs/InputParallelism"
                },
                "InputSchema": {
                    "$ref": "#/$defs/SourceSchema"
                }
            }
        },
        "InAppStreamName": {
            "type": "string"
        },
        "InputProcessingConfiguration": {
            "type": "object",
            "properties": {
                "InputLambdaProcessor": {
                    "$ref": "#/$defs/InputLambdaProcessor"
                }
            }
        },
        "InputLambdaProcessor": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "ResourceARN": {
            "type": "string"
        },
        "KinesisStreamsInput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "KinesisFirehoseInput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "InputParallelism": {
            "type": "object",
            "properties": {
                "Count": {
                    "$ref": "#/$defs/InputParallelismCount"
                }
            }
        },
        "InputParallelismCount": {
            "type": "integer",
            "format": "int32"
        },
        "SourceSchema": {
            "type": "object",
            "properties": {
                "RecordFormat": {
                    "$ref": "#/$defs/RecordFormat"
                },
                "RecordEncoding": {
                    "$ref": "#/$defs/RecordEncoding"
                },
                "RecordColumns": {
                    "$ref": "#/$defs/RecordColumns"
                }
            }
        },
        "RecordFormat": {
            "type": "object",
            "properties": {
                "RecordFormatType": {
                    "$ref": "#/$defs/RecordFormatType"
                },
                "MappingParameters": {
                    "$ref": "#/$defs/MappingParameters"
                }
            }
        },
        "RecordFormatType": {
            "enum": [
                "JSON",
                "CSV"
            ]
        },
        "MappingParameters": {
            "type": "object",
            "properties": {
                "JSONMappingParameters": {
                    "$ref": "#/$defs/JSONMappingParameters"
                },
                "CSVMappingParameters": {
                    "$ref": "#/$defs/CSVMappingParameters"
                }
            }
        },
        "JSONMappingParameters": {
            "type": "object",
            "properties": {
                "RecordRowPath": {
                    "$ref": "#/$defs/RecordRowPath"
                }
            }
        },
        "RecordRowPath": {
            "type": "string"
        },
        "CSVMappingParameters": {
            "type": "object",
            "properties": {
                "RecordRowDelimiter": {
                    "$ref": "#/$defs/RecordRowDelimiter"
                },
                "RecordColumnDelimiter": {
                    "$ref": "#/$defs/RecordColumnDelimiter"
                }
            }
        },
        "RecordRowDelimiter": {
            "type": "string"
        },
        "RecordColumnDelimiter": {
            "type": "string"
        },
        "RecordEncoding": {
            "type": "string"
        },
        "RecordColumns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecordColumn"
            }
        },
        "RecordColumn": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecordColumnName"
                },
                "Mapping": {
                    "$ref": "#/$defs/RecordColumnMapping"
                },
                "SqlType": {
                    "$ref": "#/$defs/RecordColumnSqlType"
                }
            }
        },
        "RecordColumnName": {
            "type": "string"
        },
        "RecordColumnMapping": {
            "type": "string"
        },
        "RecordColumnSqlType": {
            "type": "string"
        },
        "AddApplicationInputProcessingConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "AddApplicationInputProcessingConfigurationRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "CurrentApplicationVersionId": {
                    "$ref": "#/$defs/ApplicationVersionId"
                },
                "InputId": {
                    "$ref": "#/$defs/Id"
                },
                "InputProcessingConfiguration": {
                    "$ref": "#/$defs/InputProcessingConfiguration"
                }
            }
        },
        "Id": {
            "type": "string"
        },
        "AddApplicationOutputResponse": {
            "type": "object",
            "properties": {}
        },
        "AddApplicationOutputRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "CurrentApplicationVersionId": {
                    "$ref": "#/$defs/ApplicationVersionId"
                },
                "Output": {
                    "$ref": "#/$defs/Output"
                }
            }
        },
        "Output": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/InAppStreamName"
                },
                "KinesisStreamsOutput": {
                    "$ref": "#/$defs/KinesisStreamsOutput"
                },
                "KinesisFirehoseOutput": {
                    "$ref": "#/$defs/KinesisFirehoseOutput"
                },
                "LambdaOutput": {
                    "$ref": "#/$defs/LambdaOutput"
                },
                "DestinationSchema": {
                    "$ref": "#/$defs/DestinationSchema"
                }
            }
        },
        "KinesisStreamsOutput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "KinesisFirehoseOutput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "LambdaOutput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "DestinationSchema": {
            "type": "object",
            "properties": {
                "RecordFormatType": {
                    "$ref": "#/$defs/RecordFormatType"
                }
            }
        },
        "AddApplicationReferenceDataSourceResponse": {
            "type": "object",
            "properties": {}
        },
        "AddApplicationReferenceDataSourceRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "CurrentApplicationVersionId": {
                    "$ref": "#/$defs/ApplicationVersionId"
                },
                "ReferenceDataSource": {
                    "$ref": "#/$defs/ReferenceDataSource"
                }
            }
        },
        "ReferenceDataSource": {
            "type": "object",
            "properties": {
                "TableName": {
                    "$ref": "#/$defs/InAppTableName"
                },
                "S3ReferenceDataSource": {
                    "$ref": "#/$defs/S3ReferenceDataSource"
                },
                "ReferenceSchema": {
                    "$ref": "#/$defs/SourceSchema"
                }
            }
        },
        "InAppTableName": {
            "type": "string"
        },
        "S3ReferenceDataSource": {
            "type": "object",
            "properties": {
                "BucketARN": {
                    "$ref": "#/$defs/BucketARN"
                },
                "FileKey": {
                    "$ref": "#/$defs/FileKey"
                },
                "ReferenceRoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "BucketARN": {
            "type": "string"
        },
        "FileKey": {
            "type": "string"
        },
        "CreateApplicationResponse": {
            "type": "object",
            "properties": {
                "ApplicationSummary": {
                    "$ref": "#/$defs/ApplicationSummary"
                }
            }
        },
        "ApplicationSummary": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "ApplicationARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "ApplicationStatus": {
                    "$ref": "#/$defs/ApplicationStatus"
                }
            }
        },
        "ApplicationStatus": {
            "enum": [
                "DELETING",
                "STARTING",
                "STOPPING",
                "READY",
                "RUNNING",
                "UPDATING"
            ]
        },
        "CreateApplicationRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "ApplicationDescription": {
                    "$ref": "#/$defs/ApplicationDescription"
                },
                "Inputs": {
                    "$ref": "#/$defs/Inputs"
                },
                "Outputs": {
                    "$ref": "#/$defs/Outputs"
                },
                "CloudWatchLoggingOptions": {
                    "$ref": "#/$defs/CloudWatchLoggingOptions"
                },
                "ApplicationCode": {
                    "$ref": "#/$defs/ApplicationCode"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ApplicationDescription": {
            "type": "string"
        },
        "Inputs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Input"
            }
        },
        "Outputs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Output"
            }
        },
        "CloudWatchLoggingOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudWatchLoggingOption"
            }
        },
        "ApplicationCode": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "DeleteApplicationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteApplicationRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "CreateTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "DeleteApplicationCloudWatchLoggingOptionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteApplicationCloudWatchLoggingOptionRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "CurrentApplicationVersionId": {
                    "$ref": "#/$defs/ApplicationVersionId"
                },
                "CloudWatchLoggingOptionId": {
                    "$ref": "#/$defs/Id"
                }
            }
        },
        "DeleteApplicationInputProcessingConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteApplicationInputProcessingConfigurationRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "CurrentApplicationVersionId": {
                    "$ref": "#/$defs/ApplicationVersionId"
                },
                "InputId": {
                    "$ref": "#/$defs/Id"
                }
            }
        },
        "DeleteApplicationOutputResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteApplicationOutputRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "CurrentApplicationVersionId": {
                    "$ref": "#/$defs/ApplicationVersionId"
                },
                "OutputId": {
                    "$ref": "#/$defs/Id"
                }
            }
        },
        "DeleteApplicationReferenceDataSourceResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteApplicationReferenceDataSourceRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "CurrentApplicationVersionId": {
                    "$ref": "#/$defs/ApplicationVersionId"
                },
                "ReferenceId": {
                    "$ref": "#/$defs/Id"
                }
            }
        },
        "DescribeApplicationResponse": {
            "type": "object",
            "properties": {
                "ApplicationDetail": {
                    "$ref": "#/$defs/ApplicationDetail"
                }
            }
        },
        "ApplicationDetail": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "ApplicationDescription": {
                    "$ref": "#/$defs/ApplicationDescription"
                },
                "ApplicationARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "ApplicationStatus": {
                    "$ref": "#/$defs/ApplicationStatus"
                },
                "CreateTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdateTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "InputDescriptions": {
                    "$ref": "#/$defs/InputDescriptions"
                },
                "OutputDescriptions": {
                    "$ref": "#/$defs/OutputDescriptions"
                },
                "ReferenceDataSourceDescriptions": {
                    "$ref": "#/$defs/ReferenceDataSourceDescriptions"
                },
                "CloudWatchLoggingOptionDescriptions": {
                    "$ref": "#/$defs/CloudWatchLoggingOptionDescriptions"
                },
                "ApplicationCode": {
                    "$ref": "#/$defs/ApplicationCode"
                },
                "ApplicationVersionId": {
                    "$ref": "#/$defs/ApplicationVersionId"
                }
            }
        },
        "InputDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputDescription"
            }
        },
        "InputDescription": {
            "type": "object",
            "properties": {
                "InputId": {
                    "$ref": "#/$defs/Id"
                },
                "NamePrefix": {
                    "$ref": "#/$defs/InAppStreamName"
                },
                "InAppStreamNames": {
                    "$ref": "#/$defs/InAppStreamNames"
                },
                "InputProcessingConfigurationDescription": {
                    "$ref": "#/$defs/InputProcessingConfigurationDescription"
                },
                "KinesisStreamsInputDescription": {
                    "$ref": "#/$defs/KinesisStreamsInputDescription"
                },
                "KinesisFirehoseInputDescription": {
                    "$ref": "#/$defs/KinesisFirehoseInputDescription"
                },
                "InputSchema": {
                    "$ref": "#/$defs/SourceSchema"
                },
                "InputParallelism": {
                    "$ref": "#/$defs/InputParallelism"
                },
                "InputStartingPositionConfiguration": {
                    "$ref": "#/$defs/InputStartingPositionConfiguration"
                }
            }
        },
        "InAppStreamNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InAppStreamName"
            }
        },
        "InputProcessingConfigurationDescription": {
            "type": "object",
            "properties": {
                "InputLambdaProcessorDescription": {
                    "$ref": "#/$defs/InputLambdaProcessorDescription"
                }
            }
        },
        "InputLambdaProcessorDescription": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "KinesisStreamsInputDescription": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "KinesisFirehoseInputDescription": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "InputStartingPositionConfiguration": {
            "type": "object",
            "properties": {
                "InputStartingPosition": {
                    "$ref": "#/$defs/InputStartingPosition"
                }
            }
        },
        "InputStartingPosition": {
            "enum": [
                "NOW",
                "TRIM_HORIZON",
                "LAST_STOPPED_POINT"
            ]
        },
        "OutputDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OutputDescription"
            }
        },
        "OutputDescription": {
            "type": "object",
            "properties": {
                "OutputId": {
                    "$ref": "#/$defs/Id"
                },
                "Name": {
                    "$ref": "#/$defs/InAppStreamName"
                },
                "KinesisStreamsOutputDescription": {
                    "$ref": "#/$defs/KinesisStreamsOutputDescription"
                },
                "KinesisFirehoseOutputDescription": {
                    "$ref": "#/$defs/KinesisFirehoseOutputDescription"
                },
                "LambdaOutputDescription": {
                    "$ref": "#/$defs/LambdaOutputDescription"
                },
                "DestinationSchema": {
                    "$ref": "#/$defs/DestinationSchema"
                }
            }
        },
        "KinesisStreamsOutputDescription": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "KinesisFirehoseOutputDescription": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "LambdaOutputDescription": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "ReferenceDataSourceDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReferenceDataSourceDescription"
            }
        },
        "ReferenceDataSourceDescription": {
            "type": "object",
            "properties": {
                "ReferenceId": {
                    "$ref": "#/$defs/Id"
                },
                "TableName": {
                    "$ref": "#/$defs/InAppTableName"
                },
                "S3ReferenceDataSourceDescription": {
                    "$ref": "#/$defs/S3ReferenceDataSourceDescription"
                },
                "ReferenceSchema": {
                    "$ref": "#/$defs/SourceSchema"
                }
            }
        },
        "S3ReferenceDataSourceDescription": {
            "type": "object",
            "properties": {
                "BucketARN": {
                    "$ref": "#/$defs/BucketARN"
                },
                "FileKey": {
                    "$ref": "#/$defs/FileKey"
                },
                "ReferenceRoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "CloudWatchLoggingOptionDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudWatchLoggingOptionDescription"
            }
        },
        "CloudWatchLoggingOptionDescription": {
            "type": "object",
            "properties": {
                "CloudWatchLoggingOptionId": {
                    "$ref": "#/$defs/Id"
                },
                "LogStreamARN": {
                    "$ref": "#/$defs/LogStreamARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "DescribeApplicationRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                }
            }
        },
        "DiscoverInputSchemaResponse": {
            "type": "object",
            "properties": {
                "InputSchema": {
                    "$ref": "#/$defs/SourceSchema"
                },
                "ParsedInputRecords": {
                    "$ref": "#/$defs/ParsedInputRecords"
                },
                "ProcessedInputRecords": {
                    "$ref": "#/$defs/ProcessedInputRecords"
                },
                "RawInputRecords": {
                    "$ref": "#/$defs/RawInputRecords"
                }
            }
        },
        "ParsedInputRecords": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ParsedInputRecord"
            }
        },
        "ParsedInputRecord": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ParsedInputRecordField"
            }
        },
        "ParsedInputRecordField": {
            "type": "string"
        },
        "ProcessedInputRecords": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProcessedInputRecord"
            }
        },
        "ProcessedInputRecord": {
            "type": "string"
        },
        "RawInputRecords": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RawInputRecord"
            }
        },
        "RawInputRecord": {
            "type": "string"
        },
        "DiscoverInputSchemaRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                },
                "InputStartingPositionConfiguration": {
                    "$ref": "#/$defs/InputStartingPositionConfiguration"
                },
                "S3Configuration": {
                    "$ref": "#/$defs/S3Configuration"
                },
                "InputProcessingConfiguration": {
                    "$ref": "#/$defs/InputProcessingConfiguration"
                }
            }
        },
        "S3Configuration": {
            "type": "object",
            "properties": {
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                },
                "BucketARN": {
                    "$ref": "#/$defs/BucketARN"
                },
                "FileKey": {
                    "$ref": "#/$defs/FileKey"
                }
            }
        },
        "ListApplicationsResponse": {
            "type": "object",
            "properties": {
                "ApplicationSummaries": {
                    "$ref": "#/$defs/ApplicationSummaries"
                },
                "HasMoreApplications": {
                    "$ref": "#/$defs/BooleanObject"
                }
            }
        },
        "ApplicationSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationSummary"
            }
        },
        "BooleanObject": {
            "type": "boolean"
        },
        "ListApplicationsRequest": {
            "type": "object",
            "properties": {
                "Limit": {
                    "$ref": "#/$defs/ListApplicationsInputLimit"
                },
                "ExclusiveStartApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                }
            }
        },
        "ListApplicationsInputLimit": {
            "type": "integer",
            "format": "int32"
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/KinesisAnalyticsARN"
                }
            }
        },
        "KinesisAnalyticsARN": {
            "type": "string"
        },
        "StartApplicationResponse": {
            "type": "object",
            "properties": {}
        },
        "StartApplicationRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "InputConfigurations": {
                    "$ref": "#/$defs/InputConfigurations"
                }
            }
        },
        "InputConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputConfiguration"
            }
        },
        "InputConfiguration": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Id"
                },
                "InputStartingPositionConfiguration": {
                    "$ref": "#/$defs/InputStartingPositionConfiguration"
                }
            }
        },
        "StopApplicationResponse": {
            "type": "object",
            "properties": {}
        },
        "StopApplicationRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/KinesisAnalyticsARN"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/KinesisAnalyticsARN"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "TagKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateApplicationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateApplicationRequest": {
            "type": "object",
            "properties": {
                "ApplicationName": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "CurrentApplicationVersionId": {
                    "$ref": "#/$defs/ApplicationVersionId"
                },
                "ApplicationUpdate": {
                    "$ref": "#/$defs/ApplicationUpdate"
                }
            }
        },
        "ApplicationUpdate": {
            "type": "object",
            "properties": {
                "InputUpdates": {
                    "$ref": "#/$defs/InputUpdates"
                },
                "ApplicationCodeUpdate": {
                    "$ref": "#/$defs/ApplicationCode"
                },
                "OutputUpdates": {
                    "$ref": "#/$defs/OutputUpdates"
                },
                "ReferenceDataSourceUpdates": {
                    "$ref": "#/$defs/ReferenceDataSourceUpdates"
                },
                "CloudWatchLoggingOptionUpdates": {
                    "$ref": "#/$defs/CloudWatchLoggingOptionUpdates"
                }
            }
        },
        "InputUpdates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputUpdate"
            }
        },
        "InputUpdate": {
            "type": "object",
            "properties": {
                "InputId": {
                    "$ref": "#/$defs/Id"
                },
                "NamePrefixUpdate": {
                    "$ref": "#/$defs/InAppStreamName"
                },
                "InputProcessingConfigurationUpdate": {
                    "$ref": "#/$defs/InputProcessingConfigurationUpdate"
                },
                "KinesisStreamsInputUpdate": {
                    "$ref": "#/$defs/KinesisStreamsInputUpdate"
                },
                "KinesisFirehoseInputUpdate": {
                    "$ref": "#/$defs/KinesisFirehoseInputUpdate"
                },
                "InputSchemaUpdate": {
                    "$ref": "#/$defs/InputSchemaUpdate"
                },
                "InputParallelismUpdate": {
                    "$ref": "#/$defs/InputParallelismUpdate"
                }
            }
        },
        "InputProcessingConfigurationUpdate": {
            "type": "object",
            "properties": {
                "InputLambdaProcessorUpdate": {
                    "$ref": "#/$defs/InputLambdaProcessorUpdate"
                }
            }
        },
        "InputLambdaProcessorUpdate": {
            "type": "object",
            "properties": {
                "ResourceARNUpdate": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARNUpdate": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "KinesisStreamsInputUpdate": {
            "type": "object",
            "properties": {
                "ResourceARNUpdate": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARNUpdate": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "KinesisFirehoseInputUpdate": {
            "type": "object",
            "properties": {
                "ResourceARNUpdate": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARNUpdate": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "InputSchemaUpdate": {
            "type": "object",
            "properties": {
                "RecordFormatUpdate": {
                    "$ref": "#/$defs/RecordFormat"
                },
                "RecordEncodingUpdate": {
                    "$ref": "#/$defs/RecordEncoding"
                },
                "RecordColumnUpdates": {
                    "$ref": "#/$defs/RecordColumns"
                }
            }
        },
        "InputParallelismUpdate": {
            "type": "object",
            "properties": {
                "CountUpdate": {
                    "$ref": "#/$defs/InputParallelismCount"
                }
            }
        },
        "OutputUpdates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OutputUpdate"
            }
        },
        "OutputUpdate": {
            "type": "object",
            "properties": {
                "OutputId": {
                    "$ref": "#/$defs/Id"
                },
                "NameUpdate": {
                    "$ref": "#/$defs/InAppStreamName"
                },
                "KinesisStreamsOutputUpdate": {
                    "$ref": "#/$defs/KinesisStreamsOutputUpdate"
                },
                "KinesisFirehoseOutputUpdate": {
                    "$ref": "#/$defs/KinesisFirehoseOutputUpdate"
                },
                "LambdaOutputUpdate": {
                    "$ref": "#/$defs/LambdaOutputUpdate"
                },
                "DestinationSchemaUpdate": {
                    "$ref": "#/$defs/DestinationSchema"
                }
            }
        },
        "KinesisStreamsOutputUpdate": {
            "type": "object",
            "properties": {
                "ResourceARNUpdate": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARNUpdate": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "KinesisFirehoseOutputUpdate": {
            "type": "object",
            "properties": {
                "ResourceARNUpdate": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARNUpdate": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "LambdaOutputUpdate": {
            "type": "object",
            "properties": {
                "ResourceARNUpdate": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "RoleARNUpdate": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "ReferenceDataSourceUpdates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReferenceDataSourceUpdate"
            }
        },
        "ReferenceDataSourceUpdate": {
            "type": "object",
            "properties": {
                "ReferenceId": {
                    "$ref": "#/$defs/Id"
                },
                "TableNameUpdate": {
                    "$ref": "#/$defs/InAppTableName"
                },
                "S3ReferenceDataSourceUpdate": {
                    "$ref": "#/$defs/S3ReferenceDataSourceUpdate"
                },
                "ReferenceSchemaUpdate": {
                    "$ref": "#/$defs/SourceSchema"
                }
            }
        },
        "S3ReferenceDataSourceUpdate": {
            "type": "object",
            "properties": {
                "BucketARNUpdate": {
                    "$ref": "#/$defs/BucketARN"
                },
                "FileKeyUpdate": {
                    "$ref": "#/$defs/FileKey"
                },
                "ReferenceRoleARNUpdate": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        },
        "CloudWatchLoggingOptionUpdates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudWatchLoggingOptionUpdate"
            }
        },
        "CloudWatchLoggingOptionUpdate": {
            "type": "object",
            "properties": {
                "CloudWatchLoggingOptionId": {
                    "$ref": "#/$defs/Id"
                },
                "LogStreamARNUpdate": {
                    "$ref": "#/$defs/LogStreamARN"
                },
                "RoleARNUpdate": {
                    "$ref": "#/$defs/RoleARN"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://kinesisanalytics-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://kinesisanalytics-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://kinesisanalytics.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://kinesisanalytics.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}