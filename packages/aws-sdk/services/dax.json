{
    "name": "dax",
    "commands": [
        {
            "name": "CreateCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateParameterGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateParameterGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateParameterGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateParameterGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSubnetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateSubnetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSubnetGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSubnetGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DecreaseReplicationFactor",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DecreaseReplicationFactor"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DecreaseReplicationFactorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DecreaseReplicationFactorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteParameterGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteParameterGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteParameterGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteParameterGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSubnetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteSubnetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSubnetGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSubnetGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeClusters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeClusters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClustersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClustersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDefaultParameters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeDefaultParameters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDefaultParametersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDefaultParametersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEvents",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeEvents"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEventsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEventsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeParameterGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeParameterGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeParameterGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeParameterGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeParameters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeParameters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeParametersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeParametersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSubnetGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeSubnetGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSubnetGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSubnetGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "IncreaseReplicationFactor",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IncreaseReplicationFactor"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/IncreaseReplicationFactorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/IncreaseReplicationFactorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RebootNode",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RebootNode"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RebootNodeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RebootNodeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateParameterGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateParameterGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateParameterGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateParameterGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSubnetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateSubnetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSubnetGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSubnetGroupRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateClusterResponse": {
            "type": "object",
            "properties": {
                "Cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "Cluster": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/String"
                },
                "TotalNodes": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "ActiveNodes": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "ClusterDiscoveryEndpoint": {
                    "$ref": "#/$defs/Endpoint"
                },
                "NodeIdsToRemove": {
                    "$ref": "#/$defs/NodeIdentifierList"
                },
                "Nodes": {
                    "$ref": "#/$defs/NodeList"
                },
                "PreferredMaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "NotificationConfiguration": {
                    "$ref": "#/$defs/NotificationConfiguration"
                },
                "SubnetGroup": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroupMembershipList"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/String"
                },
                "ParameterGroup": {
                    "$ref": "#/$defs/ParameterGroupStatus"
                },
                "SSEDescription": {
                    "$ref": "#/$defs/SSEDescription"
                },
                "ClusterEndpointEncryptionType": {
                    "$ref": "#/$defs/ClusterEndpointEncryptionType"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "IntegerOptional": {
            "type": "integer",
            "format": "int32"
        },
        "Endpoint": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/$defs/String"
                },
                "Port": {
                    "$ref": "#/$defs/Integer"
                },
                "URL": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "NodeIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "NodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Node"
            }
        },
        "Node": {
            "type": "object",
            "properties": {
                "NodeId": {
                    "$ref": "#/$defs/String"
                },
                "Endpoint": {
                    "$ref": "#/$defs/Endpoint"
                },
                "NodeCreateTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "NodeStatus": {
                    "$ref": "#/$defs/String"
                },
                "ParameterGroupStatus": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TStamp": {
            "type": "string",
            "format": "date-time"
        },
        "NotificationConfiguration": {
            "type": "object",
            "properties": {
                "TopicArn": {
                    "$ref": "#/$defs/String"
                },
                "TopicStatus": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SecurityGroupMembershipList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupMembership"
            }
        },
        "SecurityGroupMembership": {
            "type": "object",
            "properties": {
                "SecurityGroupIdentifier": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ParameterGroupStatus": {
            "type": "object",
            "properties": {
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "ParameterApplyStatus": {
                    "$ref": "#/$defs/String"
                },
                "NodeIdsToReboot": {
                    "$ref": "#/$defs/NodeIdentifierList"
                }
            }
        },
        "SSEDescription": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/SSEStatus"
                }
            }
        },
        "SSEStatus": {
            "enum": [
                "ENABLING",
                "ENABLED",
                "DISABLING",
                "DISABLED"
            ]
        },
        "ClusterEndpointEncryptionType": {
            "enum": [
                "NONE",
                "TLS"
            ]
        },
        "CreateClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ReplicationFactor": {
                    "$ref": "#/$defs/Integer"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZoneList"
                },
                "SubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdentifierList"
                },
                "PreferredMaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "NotificationTopicArn": {
                    "$ref": "#/$defs/String"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/String"
                },
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SSESpecification": {
                    "$ref": "#/$defs/SSESpecification"
                },
                "ClusterEndpointEncryptionType": {
                    "$ref": "#/$defs/ClusterEndpointEncryptionType"
                }
            }
        },
        "AvailabilityZoneList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "SecurityGroupIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SSESpecification": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/SSEEnabled"
                }
            }
        },
        "SSEEnabled": {
            "type": "boolean"
        },
        "CreateParameterGroupResponse": {
            "type": "object",
            "properties": {
                "ParameterGroup": {
                    "$ref": "#/$defs/ParameterGroup"
                }
            }
        },
        "ParameterGroup": {
            "type": "object",
            "properties": {
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateParameterGroupRequest": {
            "type": "object",
            "properties": {
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateSubnetGroupResponse": {
            "type": "object",
            "properties": {
                "SubnetGroup": {
                    "$ref": "#/$defs/SubnetGroup"
                }
            }
        },
        "SubnetGroup": {
            "type": "object",
            "properties": {
                "SubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "Subnets": {
                    "$ref": "#/$defs/SubnetList"
                }
            }
        },
        "SubnetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Subnet"
            }
        },
        "Subnet": {
            "type": "object",
            "properties": {
                "SubnetIdentifier": {
                    "$ref": "#/$defs/String"
                },
                "SubnetAvailabilityZone": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateSubnetGroupRequest": {
            "type": "object",
            "properties": {
                "SubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIdentifierList"
                }
            }
        },
        "SubnetIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DecreaseReplicationFactorResponse": {
            "type": "object",
            "properties": {
                "Cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "DecreaseReplicationFactorRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "NewReplicationFactor": {
                    "$ref": "#/$defs/Integer"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZoneList"
                },
                "NodeIdsToRemove": {
                    "$ref": "#/$defs/NodeIdentifierList"
                }
            }
        },
        "DeleteClusterResponse": {
            "type": "object",
            "properties": {
                "Cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "DeleteClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteParameterGroupResponse": {
            "type": "object",
            "properties": {
                "DeletionMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteParameterGroupRequest": {
            "type": "object",
            "properties": {
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteSubnetGroupResponse": {
            "type": "object",
            "properties": {
                "DeletionMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteSubnetGroupRequest": {
            "type": "object",
            "properties": {
                "SubnetGroupName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeClustersResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Clusters": {
                    "$ref": "#/$defs/ClusterList"
                }
            }
        },
        "ClusterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Cluster"
            }
        },
        "DescribeClustersRequest": {
            "type": "object",
            "properties": {
                "ClusterNames": {
                    "$ref": "#/$defs/ClusterNameList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClusterNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeDefaultParametersResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParameterList"
                }
            }
        },
        "ParameterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Parameter"
            }
        },
        "Parameter": {
            "type": "object",
            "properties": {
                "ParameterName": {
                    "$ref": "#/$defs/String"
                },
                "ParameterType": {
                    "$ref": "#/$defs/ParameterType"
                },
                "ParameterValue": {
                    "$ref": "#/$defs/String"
                },
                "NodeTypeSpecificValues": {
                    "$ref": "#/$defs/NodeTypeSpecificValueList"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "DataType": {
                    "$ref": "#/$defs/String"
                },
                "AllowedValues": {
                    "$ref": "#/$defs/String"
                },
                "IsModifiable": {
                    "$ref": "#/$defs/IsModifiable"
                },
                "ChangeType": {
                    "$ref": "#/$defs/ChangeType"
                }
            }
        },
        "ParameterType": {
            "enum": [
                "DEFAULT",
                "NODE_TYPE_SPECIFIC"
            ]
        },
        "NodeTypeSpecificValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeTypeSpecificValue"
            }
        },
        "NodeTypeSpecificValue": {
            "type": "object",
            "properties": {
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IsModifiable": {
            "enum": [
                "TRUE",
                "FALSE",
                "CONDITIONAL"
            ]
        },
        "ChangeType": {
            "enum": [
                "IMMEDIATE",
                "REQUIRES_REBOOT"
            ]
        },
        "DescribeDefaultParametersRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeEventsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Events": {
                    "$ref": "#/$defs/EventList"
                }
            }
        },
        "EventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Event"
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "SourceName": {
                    "$ref": "#/$defs/String"
                },
                "SourceType": {
                    "$ref": "#/$defs/SourceType"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                },
                "Date": {
                    "$ref": "#/$defs/TStamp"
                }
            }
        },
        "SourceType": {
            "enum": [
                "CLUSTER",
                "PARAMETER_GROUP",
                "SUBNET_GROUP"
            ]
        },
        "DescribeEventsRequest": {
            "type": "object",
            "properties": {
                "SourceName": {
                    "$ref": "#/$defs/String"
                },
                "SourceType": {
                    "$ref": "#/$defs/SourceType"
                },
                "StartTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "Duration": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeParameterGroupsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ParameterGroups": {
                    "$ref": "#/$defs/ParameterGroupList"
                }
            }
        },
        "ParameterGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ParameterGroup"
            }
        },
        "DescribeParameterGroupsRequest": {
            "type": "object",
            "properties": {
                "ParameterGroupNames": {
                    "$ref": "#/$defs/ParameterGroupNameList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ParameterGroupNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeParametersResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParameterList"
                }
            }
        },
        "DescribeParametersRequest": {
            "type": "object",
            "properties": {
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeSubnetGroupsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "SubnetGroups": {
                    "$ref": "#/$defs/SubnetGroupList"
                }
            }
        },
        "SubnetGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetGroup"
            }
        },
        "DescribeSubnetGroupsRequest": {
            "type": "object",
            "properties": {
                "SubnetGroupNames": {
                    "$ref": "#/$defs/SubnetGroupNameList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubnetGroupNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "IncreaseReplicationFactorResponse": {
            "type": "object",
            "properties": {
                "Cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "IncreaseReplicationFactorRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "NewReplicationFactor": {
                    "$ref": "#/$defs/Integer"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZoneList"
                }
            }
        },
        "ListTagsResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListTagsRequest": {
            "type": "object",
            "properties": {
                "ResourceName": {
                    "$ref": "#/$defs/String"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RebootNodeResponse": {
            "type": "object",
            "properties": {
                "Cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "RebootNodeRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "NodeId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceName": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceName": {
                    "$ref": "#/$defs/String"
                },
                "TagKeys": {
                    "$ref": "#/$defs/KeyList"
                }
            }
        },
        "KeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "UpdateClusterResponse": {
            "type": "object",
            "properties": {
                "Cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "UpdateClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "PreferredMaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "NotificationTopicArn": {
                    "$ref": "#/$defs/String"
                },
                "NotificationTopicStatus": {
                    "$ref": "#/$defs/String"
                },
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdentifierList"
                }
            }
        },
        "UpdateParameterGroupResponse": {
            "type": "object",
            "properties": {
                "ParameterGroup": {
                    "$ref": "#/$defs/ParameterGroup"
                }
            }
        },
        "UpdateParameterGroupRequest": {
            "type": "object",
            "properties": {
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "ParameterNameValues": {
                    "$ref": "#/$defs/ParameterNameValueList"
                }
            }
        },
        "ParameterNameValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ParameterNameValue"
            }
        },
        "ParameterNameValue": {
            "type": "object",
            "properties": {
                "ParameterName": {
                    "$ref": "#/$defs/String"
                },
                "ParameterValue": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpdateSubnetGroupResponse": {
            "type": "object",
            "properties": {
                "SubnetGroup": {
                    "$ref": "#/$defs/SubnetGroup"
                }
            }
        },
        "UpdateSubnetGroupRequest": {
            "type": "object",
            "properties": {
                "SubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIdentifierList"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://dax-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://dax-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://dax.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://dax.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}