{
    "name": "tax",
    "commands": [
        {
            "name": "BatchDeleteTaxRegistration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/BatchDeleteTaxRegistration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeleteTaxRegistrationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDeleteTaxRegistrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "BatchGetTaxExemptions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/BatchGetTaxExemptions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetTaxExemptionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetTaxExemptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "BatchPutTaxRegistration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/BatchPutTaxRegistration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchPutTaxRegistrationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchPutTaxRegistrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSupplementalTaxRegistration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteSupplementalTaxRegistration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSupplementalTaxRegistrationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSupplementalTaxRegistrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteTaxRegistration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteTaxRegistration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTaxRegistrationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTaxRegistrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetTaxExemptionTypes",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetTaxExemptionTypes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTaxExemptionTypesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTaxExemptionTypesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetTaxInheritance",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetTaxInheritance"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTaxInheritanceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTaxInheritanceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetTaxRegistration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetTaxRegistration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTaxRegistrationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTaxRegistrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetTaxRegistrationDocument",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetTaxRegistrationDocument"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTaxRegistrationDocumentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTaxRegistrationDocumentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListSupplementalTaxRegistrations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListSupplementalTaxRegistrations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSupplementalTaxRegistrationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSupplementalTaxRegistrationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTaxExemptions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListTaxExemptions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTaxExemptionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTaxExemptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTaxRegistrations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListTaxRegistrations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTaxRegistrationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTaxRegistrationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutSupplementalTaxRegistration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/PutSupplementalTaxRegistration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutSupplementalTaxRegistrationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutSupplementalTaxRegistrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutTaxExemption",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/PutTaxExemption"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutTaxExemptionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutTaxExemptionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutTaxInheritance",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/PutTaxInheritance"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutTaxInheritanceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutTaxInheritanceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutTaxRegistration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/PutTaxRegistration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutTaxRegistrationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutTaxRegistrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchDeleteTaxRegistrationResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "$ref": "#/$defs/BatchDeleteTaxRegistrationErrors"
                }
            }
        },
        "BatchDeleteTaxRegistrationErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchDeleteTaxRegistrationError"
            }
        },
        "BatchDeleteTaxRegistrationError": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "code": {
                    "$ref": "#/$defs/ErrorCode"
                }
            }
        },
        "AccountId": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "ErrorCode": {
            "type": "string"
        },
        "BatchDeleteTaxRegistrationRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "AccountIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountId"
            }
        },
        "BatchGetTaxExemptionsResponse": {
            "type": "object",
            "properties": {
                "taxExemptionDetailsMap": {
                    "$ref": "#/$defs/TaxExemptionDetailsMap"
                },
                "failedAccounts": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "TaxExemptionDetailsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TaxExemptionDetails"
            }
        },
        "TaxExemptionDetails": {
            "type": "object",
            "properties": {
                "taxExemptions": {
                    "$ref": "#/$defs/TaxExemptions"
                },
                "heritageObtainedDetails": {
                    "$ref": "#/$defs/Boolean"
                },
                "heritageObtainedParentEntity": {
                    "$ref": "#/$defs/GenericString"
                },
                "heritageObtainedReason": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "TaxExemptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaxExemption"
            }
        },
        "TaxExemption": {
            "type": "object",
            "properties": {
                "authority": {
                    "$ref": "#/$defs/Authority"
                },
                "taxExemptionType": {
                    "$ref": "#/$defs/TaxExemptionType"
                },
                "effectiveDate": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "expirationDate": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "systemEffectiveDate": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/EntityExemptionAccountStatus"
                }
            }
        },
        "Authority": {
            "type": "object",
            "properties": {
                "country": {
                    "$ref": "#/$defs/CountryCode"
                },
                "state": {
                    "$ref": "#/$defs/State"
                }
            }
        },
        "CountryCode": {
            "type": "string"
        },
        "State": {
            "type": "string"
        },
        "TaxExemptionType": {
            "type": "object",
            "properties": {
                "displayName": {
                    "$ref": "#/$defs/DisplayName"
                },
                "description": {
                    "$ref": "#/$defs/GenericString"
                },
                "applicableJurisdictions": {
                    "$ref": "#/$defs/Authorities"
                }
            }
        },
        "DisplayName": {
            "type": "string"
        },
        "GenericString": {
            "type": "string"
        },
        "Authorities": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Authority"
            }
        },
        "EntityExemptionAccountStatus": {
            "enum": [
                "None",
                "Valid",
                "Expired",
                "Pending"
            ]
        },
        "Boolean": {
            "type": "boolean"
        },
        "BatchGetTaxExemptionsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "BatchPutTaxRegistrationResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/TaxRegistrationStatus"
                },
                "errors": {
                    "$ref": "#/$defs/BatchPutTaxRegistrationErrors"
                }
            }
        },
        "TaxRegistrationStatus": {
            "enum": [
                "VERIFIED",
                "PENDING",
                "DELETED",
                "REJECTED"
            ]
        },
        "BatchPutTaxRegistrationErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchPutTaxRegistrationError"
            }
        },
        "BatchPutTaxRegistrationError": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "code": {
                    "$ref": "#/$defs/ErrorCode"
                }
            }
        },
        "BatchPutTaxRegistrationRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "taxRegistrationEntry": {
                    "$ref": "#/$defs/TaxRegistrationEntry"
                }
            }
        },
        "TaxRegistrationEntry": {
            "type": "object",
            "properties": {
                "registrationId": {
                    "$ref": "#/$defs/RegistrationId"
                },
                "registrationType": {
                    "$ref": "#/$defs/TaxRegistrationType"
                },
                "legalName": {
                    "$ref": "#/$defs/LegalName"
                },
                "legalAddress": {
                    "$ref": "#/$defs/Address"
                },
                "sector": {
                    "$ref": "#/$defs/Sector"
                },
                "additionalTaxInformation": {
                    "$ref": "#/$defs/AdditionalInfoRequest"
                },
                "verificationDetails": {
                    "$ref": "#/$defs/VerificationDetails"
                },
                "certifiedEmailId": {
                    "$ref": "#/$defs/CertifiedEmailId"
                }
            }
        },
        "RegistrationId": {
            "type": "string"
        },
        "TaxRegistrationType": {
            "enum": [
                "VAT",
                "GST",
                "CPF",
                "CNPJ",
                "SST",
                "TIN",
                "NRIC"
            ]
        },
        "LegalName": {
            "type": "string"
        },
        "Address": {
            "type": "object",
            "properties": {
                "addressLine1": {
                    "$ref": "#/$defs/AddressLine1"
                },
                "addressLine2": {
                    "$ref": "#/$defs/AddressLine2"
                },
                "addressLine3": {
                    "$ref": "#/$defs/AddressLine3"
                },
                "districtOrCounty": {
                    "$ref": "#/$defs/District"
                },
                "city": {
                    "$ref": "#/$defs/City"
                },
                "stateOrRegion": {
                    "$ref": "#/$defs/State"
                },
                "postalCode": {
                    "$ref": "#/$defs/PostalCode"
                },
                "countryCode": {
                    "$ref": "#/$defs/CountryCode"
                }
            }
        },
        "AddressLine1": {
            "type": "string"
        },
        "AddressLine2": {
            "type": "string"
        },
        "AddressLine3": {
            "type": "string"
        },
        "District": {
            "type": "string"
        },
        "City": {
            "type": "string"
        },
        "PostalCode": {
            "type": "string"
        },
        "Sector": {
            "enum": [
                "BUSINESS",
                "INDIVIDUAL",
                "PUBLIC_INSTITUTIONS"
            ]
        },
        "AdditionalInfoRequest": {
            "type": "object",
            "properties": {
                "malaysiaAdditionalInfo": {
                    "$ref": "#/$defs/MalaysiaAdditionalInfo"
                },
                "israelAdditionalInfo": {
                    "$ref": "#/$defs/IsraelAdditionalInfo"
                },
                "estoniaAdditionalInfo": {
                    "$ref": "#/$defs/EstoniaAdditionalInfo"
                },
                "canadaAdditionalInfo": {
                    "$ref": "#/$defs/CanadaAdditionalInfo"
                },
                "spainAdditionalInfo": {
                    "$ref": "#/$defs/SpainAdditionalInfo"
                },
                "kenyaAdditionalInfo": {
                    "$ref": "#/$defs/KenyaAdditionalInfo"
                },
                "southKoreaAdditionalInfo": {
                    "$ref": "#/$defs/SouthKoreaAdditionalInfo"
                },
                "turkeyAdditionalInfo": {
                    "$ref": "#/$defs/TurkeyAdditionalInfo"
                },
                "georgiaAdditionalInfo": {
                    "$ref": "#/$defs/GeorgiaAdditionalInfo"
                },
                "italyAdditionalInfo": {
                    "$ref": "#/$defs/ItalyAdditionalInfo"
                },
                "romaniaAdditionalInfo": {
                    "$ref": "#/$defs/RomaniaAdditionalInfo"
                },
                "ukraineAdditionalInfo": {
                    "$ref": "#/$defs/UkraineAdditionalInfo"
                },
                "polandAdditionalInfo": {
                    "$ref": "#/$defs/PolandAdditionalInfo"
                },
                "saudiArabiaAdditionalInfo": {
                    "$ref": "#/$defs/SaudiArabiaAdditionalInfo"
                },
                "vietnamAdditionalInfo": {
                    "$ref": "#/$defs/VietnamAdditionalInfo"
                },
                "egyptAdditionalInfo": {
                    "$ref": "#/$defs/EgyptAdditionalInfo"
                },
                "greeceAdditionalInfo": {
                    "$ref": "#/$defs/GreeceAdditionalInfo"
                }
            }
        },
        "MalaysiaAdditionalInfo": {
            "type": "object",
            "properties": {
                "serviceTaxCodes": {
                    "$ref": "#/$defs/MalaysiaServiceTaxCodesList"
                },
                "taxInformationNumber": {
                    "$ref": "#/$defs/TaxInformationNumber"
                },
                "businessRegistrationNumber": {
                    "$ref": "#/$defs/BusinessRegistrationNumber"
                }
            }
        },
        "MalaysiaServiceTaxCodesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MalaysiaServiceTaxCode"
            }
        },
        "MalaysiaServiceTaxCode": {
            "enum": [
                "CONSULTANCY",
                "DIGITAL_SVC_ELECTRONIC_MEDIUM",
                "IT_SERVICES",
                "TRAINING_OR_COACHING"
            ]
        },
        "TaxInformationNumber": {
            "type": "string"
        },
        "BusinessRegistrationNumber": {
            "type": "string"
        },
        "IsraelAdditionalInfo": {
            "type": "object",
            "properties": {
                "dealerType": {
                    "$ref": "#/$defs/IsraelDealerType"
                },
                "customerType": {
                    "$ref": "#/$defs/IsraelCustomerType"
                }
            }
        },
        "IsraelDealerType": {
            "enum": [
                "AUTHORIZED",
                "NON_AUTHORIZED"
            ]
        },
        "IsraelCustomerType": {
            "enum": [
                "BUSINESS",
                "INDIVIDUAL"
            ]
        },
        "EstoniaAdditionalInfo": {
            "type": "object",
            "properties": {
                "registryCommercialCode": {
                    "$ref": "#/$defs/RegistryCommercialCode"
                }
            }
        },
        "RegistryCommercialCode": {
            "type": "string"
        },
        "CanadaAdditionalInfo": {
            "type": "object",
            "properties": {
                "provincialSalesTaxId": {
                    "$ref": "#/$defs/CanadaProvincialSalesTaxIdString"
                },
                "canadaQuebecSalesTaxNumber": {
                    "$ref": "#/$defs/CanadaQuebecSalesTaxNumberString"
                },
                "canadaRetailSalesTaxNumber": {
                    "$ref": "#/$defs/CanadaRetailSalesTaxNumberString"
                },
                "isResellerAccount": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CanadaProvincialSalesTaxIdString": {
            "type": "string"
        },
        "CanadaQuebecSalesTaxNumberString": {
            "type": "string"
        },
        "CanadaRetailSalesTaxNumberString": {
            "type": "string"
        },
        "SpainAdditionalInfo": {
            "type": "object",
            "properties": {
                "registrationType": {
                    "$ref": "#/$defs/RegistrationType"
                }
            }
        },
        "RegistrationType": {
            "enum": [
                "INTRA_EU",
                "LOCAL"
            ]
        },
        "KenyaAdditionalInfo": {
            "type": "object",
            "properties": {
                "personType": {
                    "$ref": "#/$defs/PersonType"
                }
            }
        },
        "PersonType": {
            "enum": [
                "LEGAL_PERSON",
                "PHYSICAL_PERSON",
                "BUSINESS"
            ]
        },
        "SouthKoreaAdditionalInfo": {
            "type": "object",
            "properties": {
                "businessRepresentativeName": {
                    "$ref": "#/$defs/BusinessRepresentativeName"
                },
                "lineOfBusiness": {
                    "$ref": "#/$defs/LineOfBusiness"
                },
                "itemOfBusiness": {
                    "$ref": "#/$defs/ItemOfBusiness"
                }
            }
        },
        "BusinessRepresentativeName": {
            "type": "string"
        },
        "LineOfBusiness": {
            "type": "string"
        },
        "ItemOfBusiness": {
            "type": "string"
        },
        "TurkeyAdditionalInfo": {
            "type": "object",
            "properties": {
                "taxOffice": {
                    "$ref": "#/$defs/TaxOffice"
                },
                "kepEmailId": {
                    "$ref": "#/$defs/KepEmailId"
                },
                "secondaryTaxId": {
                    "$ref": "#/$defs/SecondaryTaxId"
                },
                "industries": {
                    "$ref": "#/$defs/Industries"
                }
            }
        },
        "TaxOffice": {
            "type": "string"
        },
        "KepEmailId": {
            "type": "string"
        },
        "SecondaryTaxId": {
            "type": "string"
        },
        "Industries": {
            "enum": [
                "CIRCULATING_ORG",
                "PROFESSIONAL_ORG",
                "BANKS",
                "INSURANCE",
                "PENSION_AND_BENEFIT_FUNDS",
                "DEVELOPMENT_AGENCIES"
            ]
        },
        "GeorgiaAdditionalInfo": {
            "type": "object",
            "properties": {
                "personType": {
                    "$ref": "#/$defs/PersonType"
                }
            }
        },
        "ItalyAdditionalInfo": {
            "type": "object",
            "properties": {
                "sdiAccountId": {
                    "$ref": "#/$defs/SdiAccountId"
                },
                "cigNumber": {
                    "$ref": "#/$defs/CigNumber"
                },
                "cupNumber": {
                    "$ref": "#/$defs/CupNumber"
                },
                "taxCode": {
                    "$ref": "#/$defs/TaxCode"
                }
            }
        },
        "SdiAccountId": {
            "type": "string"
        },
        "CigNumber": {
            "type": "string"
        },
        "CupNumber": {
            "type": "string"
        },
        "TaxCode": {
            "type": "string"
        },
        "RomaniaAdditionalInfo": {
            "type": "object",
            "properties": {
                "taxRegistrationNumberType": {
                    "$ref": "#/$defs/TaxRegistrationNumberType"
                }
            }
        },
        "TaxRegistrationNumberType": {
            "enum": [
                "TAX_REGISTRATION_NUMBER",
                "LOCAL_REGISTRATION_NUMBER"
            ]
        },
        "UkraineAdditionalInfo": {
            "type": "object",
            "properties": {
                "ukraineTrnType": {
                    "$ref": "#/$defs/UkraineTrnType"
                }
            }
        },
        "UkraineTrnType": {
            "enum": [
                "BUSINESS",
                "INDIVIDUAL"
            ]
        },
        "PolandAdditionalInfo": {
            "type": "object",
            "properties": {
                "individualRegistrationNumber": {
                    "$ref": "#/$defs/IndividualRegistrationNumber"
                },
                "isGroupVatEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "IndividualRegistrationNumber": {
            "type": "string"
        },
        "SaudiArabiaAdditionalInfo": {
            "type": "object",
            "properties": {
                "taxRegistrationNumberType": {
                    "$ref": "#/$defs/SaudiArabiaTaxRegistrationNumberType"
                }
            }
        },
        "SaudiArabiaTaxRegistrationNumberType": {
            "enum": [
                "TAX_REGISTRATION_NUMBER",
                "TAX_IDENTIFICATION_NUMBER",
                "COMMERCIAL_REGISTRATION_NUMBER"
            ]
        },
        "VietnamAdditionalInfo": {
            "type": "object",
            "properties": {
                "enterpriseIdentificationNumber": {
                    "$ref": "#/$defs/EnterpriseIdentificationNumber"
                },
                "electronicTransactionCodeNumber": {
                    "$ref": "#/$defs/ElectronicTransactionCodeNumber"
                },
                "paymentVoucherNumber": {
                    "$ref": "#/$defs/PaymentVoucherNumber"
                },
                "paymentVoucherNumberDate": {
                    "$ref": "#/$defs/DateString"
                }
            }
        },
        "EnterpriseIdentificationNumber": {
            "type": "string"
        },
        "ElectronicTransactionCodeNumber": {
            "type": "string"
        },
        "PaymentVoucherNumber": {
            "type": "string"
        },
        "DateString": {
            "type": "string"
        },
        "EgyptAdditionalInfo": {
            "type": "object",
            "properties": {
                "uniqueIdentificationNumber": {
                    "$ref": "#/$defs/UniqueIdentificationNumber"
                },
                "uniqueIdentificationNumberExpirationDate": {
                    "$ref": "#/$defs/DateString"
                }
            }
        },
        "UniqueIdentificationNumber": {
            "type": "string"
        },
        "GreeceAdditionalInfo": {
            "type": "object",
            "properties": {
                "contractingAuthorityCode": {
                    "$ref": "#/$defs/ContractingAuthorityCode"
                }
            }
        },
        "ContractingAuthorityCode": {
            "type": "string"
        },
        "VerificationDetails": {
            "type": "object",
            "properties": {
                "dateOfBirth": {
                    "$ref": "#/$defs/DateOfBirth"
                },
                "taxRegistrationDocuments": {
                    "$ref": "#/$defs/TaxRegistrationDocuments"
                }
            }
        },
        "DateOfBirth": {
            "type": "string"
        },
        "TaxRegistrationDocuments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaxRegistrationDocument"
            }
        },
        "TaxRegistrationDocument": {
            "type": "object",
            "properties": {
                "s3Location": {
                    "$ref": "#/$defs/SourceS3Location"
                },
                "file": {
                    "$ref": "#/$defs/TaxRegistrationDocFile"
                }
            }
        },
        "SourceS3Location": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "key": {
                    "$ref": "#/$defs/S3Key"
                }
            }
        },
        "S3BucketName": {
            "type": "string"
        },
        "S3Key": {
            "type": "string"
        },
        "TaxRegistrationDocFile": {
            "type": "object",
            "properties": {
                "fileName": {
                    "$ref": "#/$defs/TaxDocumentName"
                },
                "fileContent": {
                    "$ref": "#/$defs/FileBlob"
                }
            }
        },
        "TaxDocumentName": {
            "type": "string"
        },
        "FileBlob": {
            "type": "string",
            "format": "binary"
        },
        "CertifiedEmailId": {
            "type": "string"
        },
        "DeleteSupplementalTaxRegistrationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteSupplementalTaxRegistrationRequest": {
            "type": "object",
            "properties": {
                "authorityId": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "DeleteTaxRegistrationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteTaxRegistrationRequest": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetTaxExemptionTypesResponse": {
            "type": "object",
            "properties": {
                "taxExemptionTypes": {
                    "$ref": "#/$defs/TaxExemptionTypes"
                }
            }
        },
        "TaxExemptionTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaxExemptionType"
            }
        },
        "GetTaxExemptionTypesRequest": {
            "type": "object",
            "properties": {}
        },
        "GetTaxInheritanceResponse": {
            "type": "object",
            "properties": {
                "heritageStatus": {
                    "$ref": "#/$defs/HeritageStatus"
                }
            }
        },
        "HeritageStatus": {
            "enum": [
                "OptIn",
                "OptOut"
            ]
        },
        "GetTaxInheritanceRequest": {
            "type": "object",
            "properties": {}
        },
        "GetTaxRegistrationResponse": {
            "type": "object",
            "properties": {
                "taxRegistration": {
                    "$ref": "#/$defs/TaxRegistration"
                }
            }
        },
        "TaxRegistration": {
            "type": "object",
            "properties": {
                "registrationId": {
                    "$ref": "#/$defs/RegistrationId"
                },
                "registrationType": {
                    "$ref": "#/$defs/TaxRegistrationType"
                },
                "legalName": {
                    "$ref": "#/$defs/LegalName"
                },
                "status": {
                    "$ref": "#/$defs/TaxRegistrationStatus"
                },
                "sector": {
                    "$ref": "#/$defs/Sector"
                },
                "taxDocumentMetadatas": {
                    "$ref": "#/$defs/TaxDocumentMetadatas"
                },
                "certifiedEmailId": {
                    "$ref": "#/$defs/CertifiedEmailId"
                },
                "additionalTaxInformation": {
                    "$ref": "#/$defs/AdditionalInfoResponse"
                },
                "legalAddress": {
                    "$ref": "#/$defs/Address"
                }
            }
        },
        "TaxDocumentMetadatas": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaxDocumentMetadata"
            }
        },
        "TaxDocumentMetadata": {
            "type": "object",
            "properties": {
                "taxDocumentAccessToken": {
                    "$ref": "#/$defs/TaxDocumentAccessToken"
                },
                "taxDocumentName": {
                    "$ref": "#/$defs/TaxDocumentName"
                }
            }
        },
        "TaxDocumentAccessToken": {
            "type": "string"
        },
        "AdditionalInfoResponse": {
            "type": "object",
            "properties": {
                "malaysiaAdditionalInfo": {
                    "$ref": "#/$defs/MalaysiaAdditionalInfo"
                },
                "israelAdditionalInfo": {
                    "$ref": "#/$defs/IsraelAdditionalInfo"
                },
                "estoniaAdditionalInfo": {
                    "$ref": "#/$defs/EstoniaAdditionalInfo"
                },
                "canadaAdditionalInfo": {
                    "$ref": "#/$defs/CanadaAdditionalInfo"
                },
                "brazilAdditionalInfo": {
                    "$ref": "#/$defs/BrazilAdditionalInfo"
                },
                "spainAdditionalInfo": {
                    "$ref": "#/$defs/SpainAdditionalInfo"
                },
                "kenyaAdditionalInfo": {
                    "$ref": "#/$defs/KenyaAdditionalInfo"
                },
                "southKoreaAdditionalInfo": {
                    "$ref": "#/$defs/SouthKoreaAdditionalInfo"
                },
                "turkeyAdditionalInfo": {
                    "$ref": "#/$defs/TurkeyAdditionalInfo"
                },
                "georgiaAdditionalInfo": {
                    "$ref": "#/$defs/GeorgiaAdditionalInfo"
                },
                "italyAdditionalInfo": {
                    "$ref": "#/$defs/ItalyAdditionalInfo"
                },
                "romaniaAdditionalInfo": {
                    "$ref": "#/$defs/RomaniaAdditionalInfo"
                },
                "ukraineAdditionalInfo": {
                    "$ref": "#/$defs/UkraineAdditionalInfo"
                },
                "polandAdditionalInfo": {
                    "$ref": "#/$defs/PolandAdditionalInfo"
                },
                "saudiArabiaAdditionalInfo": {
                    "$ref": "#/$defs/SaudiArabiaAdditionalInfo"
                },
                "indiaAdditionalInfo": {
                    "$ref": "#/$defs/IndiaAdditionalInfo"
                },
                "vietnamAdditionalInfo": {
                    "$ref": "#/$defs/VietnamAdditionalInfo"
                },
                "egyptAdditionalInfo": {
                    "$ref": "#/$defs/EgyptAdditionalInfo"
                },
                "greeceAdditionalInfo": {
                    "$ref": "#/$defs/GreeceAdditionalInfo"
                }
            }
        },
        "BrazilAdditionalInfo": {
            "type": "object",
            "properties": {
                "ccmCode": {
                    "$ref": "#/$defs/CcmCode"
                },
                "legalNatureCode": {
                    "$ref": "#/$defs/LegalNatureCode"
                }
            }
        },
        "CcmCode": {
            "type": "string"
        },
        "LegalNatureCode": {
            "type": "string"
        },
        "IndiaAdditionalInfo": {
            "type": "object",
            "properties": {
                "pan": {
                    "$ref": "#/$defs/Pan"
                }
            }
        },
        "Pan": {
            "type": "string"
        },
        "GetTaxRegistrationRequest": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetTaxRegistrationDocumentResponse": {
            "type": "object",
            "properties": {
                "destinationFilePath": {
                    "$ref": "#/$defs/DestinationFilePath"
                },
                "presignedS3Url": {
                    "$ref": "#/$defs/Url"
                }
            }
        },
        "DestinationFilePath": {
            "type": "string"
        },
        "Url": {
            "type": "string"
        },
        "GetTaxRegistrationDocumentRequest": {
            "type": "object",
            "properties": {
                "destinationS3Location": {
                    "$ref": "#/$defs/DestinationS3Location"
                },
                "taxDocumentMetadata": {
                    "$ref": "#/$defs/TaxDocumentMetadata"
                }
            }
        },
        "DestinationS3Location": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "prefix": {
                    "$ref": "#/$defs/S3Prefix"
                }
            }
        },
        "S3Prefix": {
            "type": "string"
        },
        "ListSupplementalTaxRegistrationsResponse": {
            "type": "object",
            "properties": {
                "taxRegistrations": {
                    "$ref": "#/$defs/SupplementalTaxRegistrationList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationTokenString"
                }
            }
        },
        "SupplementalTaxRegistrationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SupplementalTaxRegistration"
            }
        },
        "SupplementalTaxRegistration": {
            "type": "object",
            "properties": {
                "registrationId": {
                    "$ref": "#/$defs/RegistrationId"
                },
                "registrationType": {
                    "$ref": "#/$defs/SupplementalTaxRegistrationType"
                },
                "legalName": {
                    "$ref": "#/$defs/LegalName"
                },
                "address": {
                    "$ref": "#/$defs/Address"
                },
                "authorityId": {
                    "$ref": "#/$defs/GenericString"
                },
                "status": {
                    "$ref": "#/$defs/TaxRegistrationStatus"
                }
            }
        },
        "SupplementalTaxRegistrationType": {
            "enum": [
                "VAT"
            ]
        },
        "PaginationTokenString": {
            "type": "string"
        },
        "ListSupplementalTaxRegistrationsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationTokenString"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListTaxExemptionsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/PaginationTokenString"
                },
                "taxExemptionDetailsMap": {
                    "$ref": "#/$defs/TaxExemptionDetailsMap"
                }
            }
        },
        "ListTaxExemptionsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationTokenString"
                }
            }
        },
        "ListTaxRegistrationsResponse": {
            "type": "object",
            "properties": {
                "accountDetails": {
                    "$ref": "#/$defs/AccountDetailsList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationTokenString"
                }
            }
        },
        "AccountDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountDetails"
            }
        },
        "AccountDetails": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "taxRegistration": {
                    "$ref": "#/$defs/TaxRegistrationWithJurisdiction"
                },
                "taxInheritanceDetails": {
                    "$ref": "#/$defs/TaxInheritanceDetails"
                },
                "accountMetaData": {
                    "$ref": "#/$defs/AccountMetaData"
                }
            }
        },
        "TaxRegistrationWithJurisdiction": {
            "type": "object",
            "properties": {
                "registrationId": {
                    "$ref": "#/$defs/RegistrationId"
                },
                "registrationType": {
                    "$ref": "#/$defs/TaxRegistrationType"
                },
                "legalName": {
                    "$ref": "#/$defs/LegalName"
                },
                "status": {
                    "$ref": "#/$defs/TaxRegistrationStatus"
                },
                "sector": {
                    "$ref": "#/$defs/Sector"
                },
                "taxDocumentMetadatas": {
                    "$ref": "#/$defs/TaxDocumentMetadatas"
                },
                "certifiedEmailId": {
                    "$ref": "#/$defs/CertifiedEmailId"
                },
                "additionalTaxInformation": {
                    "$ref": "#/$defs/AdditionalInfoResponse"
                },
                "jurisdiction": {
                    "$ref": "#/$defs/Jurisdiction"
                }
            }
        },
        "Jurisdiction": {
            "type": "object",
            "properties": {
                "stateOrRegion": {
                    "$ref": "#/$defs/State"
                },
                "countryCode": {
                    "$ref": "#/$defs/CountryCode"
                }
            }
        },
        "TaxInheritanceDetails": {
            "type": "object",
            "properties": {
                "parentEntityId": {
                    "$ref": "#/$defs/AccountId"
                },
                "inheritanceObtainedReason": {
                    "$ref": "#/$defs/InheritanceObtainedReason"
                }
            }
        },
        "InheritanceObtainedReason": {
            "type": "string"
        },
        "AccountMetaData": {
            "type": "object",
            "properties": {
                "accountName": {
                    "$ref": "#/$defs/AccountName"
                },
                "seller": {
                    "$ref": "#/$defs/Seller"
                },
                "address": {
                    "$ref": "#/$defs/Address"
                },
                "addressType": {
                    "$ref": "#/$defs/AddressRoleType"
                },
                "addressRoleMap": {
                    "$ref": "#/$defs/AddressRoleMap"
                }
            }
        },
        "AccountName": {
            "type": "string"
        },
        "Seller": {
            "type": "string"
        },
        "AddressRoleType": {
            "enum": [
                "TAX_ADDRESS",
                "BILLING_ADDRESS",
                "CONTACT_ADDRESS"
            ]
        },
        "AddressRoleMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Jurisdiction"
            }
        },
        "ListTaxRegistrationsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationTokenString"
                }
            }
        },
        "PutSupplementalTaxRegistrationResponse": {
            "type": "object",
            "properties": {
                "authorityId": {
                    "$ref": "#/$defs/GenericString"
                },
                "status": {
                    "$ref": "#/$defs/TaxRegistrationStatus"
                }
            }
        },
        "PutSupplementalTaxRegistrationRequest": {
            "type": "object",
            "properties": {
                "taxRegistrationEntry": {
                    "$ref": "#/$defs/SupplementalTaxRegistrationEntry"
                }
            }
        },
        "SupplementalTaxRegistrationEntry": {
            "type": "object",
            "properties": {
                "registrationId": {
                    "$ref": "#/$defs/RegistrationId"
                },
                "registrationType": {
                    "$ref": "#/$defs/SupplementalTaxRegistrationType"
                },
                "legalName": {
                    "$ref": "#/$defs/LegalName"
                },
                "address": {
                    "$ref": "#/$defs/Address"
                }
            }
        },
        "PutTaxExemptionResponse": {
            "type": "object",
            "properties": {
                "caseId": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "PutTaxExemptionRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "authority": {
                    "$ref": "#/$defs/Authority"
                },
                "exemptionType": {
                    "$ref": "#/$defs/GenericString"
                },
                "exemptionCertificate": {
                    "$ref": "#/$defs/ExemptionCertificate"
                }
            }
        },
        "ExemptionCertificate": {
            "type": "object",
            "properties": {
                "documentName": {
                    "$ref": "#/$defs/ExemptionDocumentName"
                },
                "documentFile": {
                    "$ref": "#/$defs/ExemptionFileBlob"
                }
            }
        },
        "ExemptionDocumentName": {
            "type": "string"
        },
        "ExemptionFileBlob": {
            "type": "string",
            "format": "binary"
        },
        "PutTaxInheritanceResponse": {
            "type": "object",
            "properties": {}
        },
        "PutTaxInheritanceRequest": {
            "type": "object",
            "properties": {
                "heritageStatus": {
                    "$ref": "#/$defs/HeritageStatus"
                }
            }
        },
        "PutTaxRegistrationResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/TaxRegistrationStatus"
                }
            }
        },
        "PutTaxRegistrationRequest": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "taxRegistrationEntry": {
                    "$ref": "#/$defs/TaxRegistrationEntry"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                },
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://tax-fips.{PartitionResult#implicitGlobalRegion}.{PartitionResult#dualStackDnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "name": "sigv4",
                                                                            "signingRegion": "{PartitionResult#implicitGlobalRegion}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        false
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://tax-fips.{PartitionResult#implicitGlobalRegion}.{PartitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "name": "sigv4",
                                                                            "signingRegion": "{PartitionResult#implicitGlobalRegion}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        false
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://tax.{PartitionResult#implicitGlobalRegion}.{PartitionResult#dualStackDnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "name": "sigv4",
                                                                            "signingRegion": "{PartitionResult#implicitGlobalRegion}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "endpoint": {
                                                "url": "https://tax.{PartitionResult#implicitGlobalRegion}.{PartitionResult#dnsSuffix}",
                                                "properties": {
                                                    "authSchemes": [
                                                        {
                                                            "name": "sigv4",
                                                            "signingRegion": "{PartitionResult#implicitGlobalRegion}"
                                                        }
                                                    ]
                                                },
                                                "headers": {}
                                            },
                                            "type": "endpoint"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                }
            ]
        }
    }
}