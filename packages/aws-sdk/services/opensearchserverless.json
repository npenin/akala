{
    "name": "aoss",
    "commands": [
        {
            "name": "BatchGetCollection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.BatchGetCollection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetCollectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetCollectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetEffectiveLifecyclePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.BatchGetEffectiveLifecyclePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetEffectiveLifecyclePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetEffectiveLifecyclePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetLifecyclePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.BatchGetLifecyclePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetLifecyclePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetLifecyclePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetVpcEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.BatchGetVpcEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetVpcEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetVpcEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLifecyclePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.CreateLifecyclePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLifecyclePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLifecyclePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSecurityPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.CreateSecurityPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSecurityPolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSecurityPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAccountSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.GetAccountSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAccountSettingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAccountSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPoliciesStats",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.GetPoliciesStats"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPoliciesStatsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPoliciesStatsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateAccountSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.UpdateAccountSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAccountSettingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAccountSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateVpcEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "OpenSearchServerless.UpdateVpcEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateVpcEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateVpcEndpointRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchGetCollectionResponse": {
            "type": "object",
            "properties": {
                "collectionDetails": {
                    "$ref": "#/$defs/CollectionDetails"
                },
                "collectionErrorDetails": {
                    "$ref": "#/$defs/CollectionErrorDetails"
                }
            }
        },
        "CollectionDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CollectionDetail"
            }
        },
        "CollectionDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CollectionId"
                },
                "name": {
                    "$ref": "#/$defs/CollectionName"
                },
                "status": {
                    "$ref": "#/$defs/CollectionStatus"
                },
                "type": {
                    "$ref": "#/$defs/CollectionType"
                },
                "description": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "arn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "kmsKeyArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "standbyReplicas": {
                    "$ref": "#/$defs/StandbyReplicas"
                },
                "createdDate": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "collectionEndpoint": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "dashboardEndpoint": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "failureCode": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "failureMessage": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "CollectionId": {
            "type": "string"
        },
        "CollectionName": {
            "type": "string"
        },
        "CollectionStatus": {
            "type": "string"
        },
        "CollectionType": {
            "type": "string"
        },
        "StandbyReplicas": {
            "type": "string"
        },
        "CollectionErrorDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CollectionErrorDetail"
            }
        },
        "CollectionErrorDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CollectionId"
                },
                "name": {
                    "$ref": "#/$defs/CollectionName"
                },
                "errorMessage": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "errorCode": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "BatchGetCollectionRequest": {
            "type": "object",
            "properties": {
                "ids": {
                    "$ref": "#/$defs/CollectionIds"
                },
                "names": {
                    "$ref": "#/$defs/CollectionNames"
                }
            }
        },
        "CollectionIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CollectionId"
            }
        },
        "CollectionNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CollectionName"
            }
        },
        "BatchGetEffectiveLifecyclePolicyResponse": {
            "type": "object",
            "properties": {
                "effectiveLifecyclePolicyDetails": {
                    "$ref": "#/$defs/EffectiveLifecyclePolicyDetails"
                },
                "effectiveLifecyclePolicyErrorDetails": {
                    "$ref": "#/$defs/EffectiveLifecyclePolicyErrorDetails"
                }
            }
        },
        "EffectiveLifecyclePolicyDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EffectiveLifecyclePolicyDetail"
            }
        },
        "EffectiveLifecyclePolicyDetail": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/LifecyclePolicyType"
                },
                "resource": {
                    "$ref": "#/$defs/Resource"
                },
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "noMinRetentionPeriod": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "LifecyclePolicyType": {
            "type": "string"
        },
        "Resource": {
            "type": "string"
        },
        "PolicyName": {
            "type": "string"
        },
        "ResourceType": {
            "type": "string"
        },
        "EffectiveLifecyclePolicyErrorDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EffectiveLifecyclePolicyErrorDetail"
            }
        },
        "EffectiveLifecyclePolicyErrorDetail": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/LifecyclePolicyType"
                },
                "resource": {
                    "$ref": "#/$defs/Resource"
                },
                "errorMessage": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "errorCode": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "BatchGetEffectiveLifecyclePolicyRequest": {
            "type": "object",
            "properties": {
                "resourceIdentifiers": {
                    "$ref": "#/$defs/LifecyclePolicyResourceIdentifiers"
                }
            }
        },
        "LifecyclePolicyResourceIdentifiers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LifecyclePolicyResourceIdentifier"
            }
        },
        "LifecyclePolicyResourceIdentifier": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/LifecyclePolicyType"
                },
                "resource": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "ResourceName": {
            "type": "string"
        },
        "BatchGetLifecyclePolicyResponse": {
            "type": "object",
            "properties": {
                "lifecyclePolicyDetails": {
                    "$ref": "#/$defs/LifecyclePolicyDetails"
                },
                "lifecyclePolicyErrorDetails": {
                    "$ref": "#/$defs/LifecyclePolicyErrorDetails"
                }
            }
        },
        "LifecyclePolicyDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LifecyclePolicyDetail"
            }
        },
        "LifecyclePolicyDetail": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/LifecyclePolicyType"
                },
                "name": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyVersion": {
                    "$ref": "#/$defs/PolicyVersion"
                },
                "description": {
                    "$ref": "#/$defs/PolicyDescription"
                },
                "policy": {
                    "$ref": "#/$defs/smithy.api#Document"
                },
                "createdDate": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "PolicyVersion": {
            "type": "string"
        },
        "PolicyDescription": {
            "type": "string"
        },
        "LifecyclePolicyErrorDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LifecyclePolicyErrorDetail"
            }
        },
        "LifecyclePolicyErrorDetail": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/LifecyclePolicyType"
                },
                "name": {
                    "$ref": "#/$defs/PolicyName"
                },
                "errorMessage": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "errorCode": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "BatchGetLifecyclePolicyRequest": {
            "type": "object",
            "properties": {
                "identifiers": {
                    "$ref": "#/$defs/LifecyclePolicyIdentifiers"
                }
            }
        },
        "LifecyclePolicyIdentifiers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LifecyclePolicyIdentifier"
            }
        },
        "LifecyclePolicyIdentifier": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/LifecyclePolicyType"
                },
                "name": {
                    "$ref": "#/$defs/PolicyName"
                }
            }
        },
        "BatchGetVpcEndpointResponse": {
            "type": "object",
            "properties": {
                "vpcEndpointDetails": {
                    "$ref": "#/$defs/VpcEndpointDetails"
                },
                "vpcEndpointErrorDetails": {
                    "$ref": "#/$defs/VpcEndpointErrorDetails"
                }
            }
        },
        "VpcEndpointDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointDetail"
            }
        },
        "VpcEndpointDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "name": {
                    "$ref": "#/$defs/VpcEndpointName"
                },
                "vpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "subnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "securityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIds"
                },
                "status": {
                    "$ref": "#/$defs/VpcEndpointStatus"
                },
                "createdDate": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "failureCode": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "failureMessage": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "VpcEndpointId": {
            "type": "string"
        },
        "VpcEndpointName": {
            "type": "string"
        },
        "VpcId": {
            "type": "string"
        },
        "SubnetIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "SubnetId": {
            "type": "string"
        },
        "SecurityGroupIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "VpcEndpointStatus": {
            "type": "string"
        },
        "VpcEndpointErrorDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointErrorDetail"
            }
        },
        "VpcEndpointErrorDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "errorMessage": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "errorCode": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "BatchGetVpcEndpointRequest": {
            "type": "object",
            "properties": {
                "ids": {
                    "$ref": "#/$defs/VpcEndpointIds"
                }
            }
        },
        "VpcEndpointIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointId"
            }
        },
        "CreateLifecyclePolicyResponse": {
            "type": "object",
            "properties": {
                "lifecyclePolicyDetail": {
                    "$ref": "#/$defs/LifecyclePolicyDetail"
                }
            }
        },
        "CreateLifecyclePolicyRequest": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/LifecyclePolicyType"
                },
                "name": {
                    "$ref": "#/$defs/PolicyName"
                },
                "description": {
                    "$ref": "#/$defs/PolicyDescription"
                },
                "policy": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "PolicyDocument": {
            "type": "string"
        },
        "ClientToken": {
            "type": "string"
        },
        "CreateSecurityPolicyResponse": {
            "type": "object",
            "properties": {
                "securityPolicyDetail": {
                    "$ref": "#/$defs/SecurityPolicyDetail"
                }
            }
        },
        "SecurityPolicyDetail": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/SecurityPolicyType"
                },
                "name": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyVersion": {
                    "$ref": "#/$defs/PolicyVersion"
                },
                "description": {
                    "$ref": "#/$defs/PolicyDescription"
                },
                "policy": {
                    "$ref": "#/$defs/smithy.api#Document"
                },
                "createdDate": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "SecurityPolicyType": {
            "type": "string"
        },
        "CreateSecurityPolicyRequest": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/SecurityPolicyType"
                },
                "name": {
                    "$ref": "#/$defs/PolicyName"
                },
                "description": {
                    "$ref": "#/$defs/PolicyDescription"
                },
                "policy": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "GetAccountSettingsResponse": {
            "type": "object",
            "properties": {
                "accountSettingsDetail": {
                    "$ref": "#/$defs/AccountSettingsDetail"
                }
            }
        },
        "AccountSettingsDetail": {
            "type": "object",
            "properties": {
                "capacityLimits": {
                    "$ref": "#/$defs/CapacityLimits"
                }
            }
        },
        "CapacityLimits": {
            "type": "object",
            "properties": {
                "maxIndexingCapacityInOCU": {
                    "$ref": "#/$defs/IndexingCapacityValue"
                },
                "maxSearchCapacityInOCU": {
                    "$ref": "#/$defs/SearchCapacityValue"
                }
            }
        },
        "IndexingCapacityValue": {
            "type": "integer",
            "format": "int32"
        },
        "SearchCapacityValue": {
            "type": "integer",
            "format": "int32"
        },
        "GetAccountSettingsRequest": {
            "type": "object",
            "properties": {}
        },
        "GetPoliciesStatsResponse": {
            "type": "object",
            "properties": {
                "AccessPolicyStats": {
                    "$ref": "#/$defs/AccessPolicyStats"
                },
                "SecurityPolicyStats": {
                    "$ref": "#/$defs/SecurityPolicyStats"
                },
                "SecurityConfigStats": {
                    "$ref": "#/$defs/SecurityConfigStats"
                },
                "LifecyclePolicyStats": {
                    "$ref": "#/$defs/LifecyclePolicyStats"
                },
                "TotalPolicyCount": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "AccessPolicyStats": {
            "type": "object",
            "properties": {
                "DataPolicyCount": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "SecurityPolicyStats": {
            "type": "object",
            "properties": {
                "EncryptionPolicyCount": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "NetworkPolicyCount": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "SecurityConfigStats": {
            "type": "object",
            "properties": {
                "SamlConfigCount": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "LifecyclePolicyStats": {
            "type": "object",
            "properties": {
                "RetentionPolicyCount": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "GetPoliciesStatsRequest": {
            "type": "object",
            "properties": {}
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "Tags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "Arn": {
            "type": "string"
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "TagKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateAccountSettingsResponse": {
            "type": "object",
            "properties": {
                "accountSettingsDetail": {
                    "$ref": "#/$defs/AccountSettingsDetail"
                }
            }
        },
        "UpdateAccountSettingsRequest": {
            "type": "object",
            "properties": {
                "capacityLimits": {
                    "$ref": "#/$defs/CapacityLimits"
                }
            }
        },
        "UpdateVpcEndpointResponse": {
            "type": "object",
            "properties": {
                "UpdateVpcEndpointDetail": {
                    "$ref": "#/$defs/UpdateVpcEndpointDetail"
                }
            }
        },
        "UpdateVpcEndpointDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "name": {
                    "$ref": "#/$defs/VpcEndpointName"
                },
                "status": {
                    "$ref": "#/$defs/VpcEndpointStatus"
                },
                "subnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "securityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIds"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "UpdateVpcEndpointRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "addSubnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "removeSubnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "addSecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIds"
                },
                "removeSecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIds"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://aoss-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://aoss-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://aoss.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://aoss.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                }
            ]
        }
    }
}