{
    "name": "lookoutmetrics",
    "commands": [
        {
            "name": "ActivateAnomalyDetector",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ActivateAnomalyDetector"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ActivateAnomalyDetectorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ActivateAnomalyDetectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "BackTestAnomalyDetector",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/BackTestAnomalyDetector"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BackTestAnomalyDetectorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BackTestAnomalyDetectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateAlert",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CreateAlert"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAlertResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAlertRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateAnomalyDetector",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CreateAnomalyDetector"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAnomalyDetectorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAnomalyDetectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateMetricSet",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CreateMetricSet"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMetricSetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMetricSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeactivateAnomalyDetector",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeactivateAnomalyDetector"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeactivateAnomalyDetectorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeactivateAnomalyDetectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteAlert",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteAlert"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAlertResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAlertRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteAnomalyDetector",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteAnomalyDetector"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAnomalyDetectorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAnomalyDetectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeAlert",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DescribeAlert"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAlertResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAlertRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeAnomalyDetectionExecutions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DescribeAnomalyDetectionExecutions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAnomalyDetectionExecutionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAnomalyDetectionExecutionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeAnomalyDetector",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DescribeAnomalyDetector"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAnomalyDetectorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAnomalyDetectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeMetricSet",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DescribeMetricSet"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMetricSetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMetricSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DetectMetricSetConfig",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DetectMetricSetConfig"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetectMetricSetConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetectMetricSetConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetAnomalyGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetAnomalyGroup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAnomalyGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAnomalyGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDataQualityMetrics",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetDataQualityMetrics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataQualityMetricsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataQualityMetricsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetFeedback",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetFeedback"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFeedbackResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFeedbackRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetSampleData",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetSampleData"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSampleDataResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSampleDataRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListAlerts",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListAlerts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAlertsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAlertsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListAnomalyDetectors",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListAnomalyDetectors"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAnomalyDetectorsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAnomalyDetectorsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListAnomalyGroupRelatedMetrics",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListAnomalyGroupRelatedMetrics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAnomalyGroupRelatedMetricsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAnomalyGroupRelatedMetricsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListAnomalyGroupSummaries",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListAnomalyGroupSummaries"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAnomalyGroupSummariesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAnomalyGroupSummariesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListAnomalyGroupTimeSeries",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListAnomalyGroupTimeSeries"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAnomalyGroupTimeSeriesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAnomalyGroupTimeSeriesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListMetricSets",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListMetricSets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMetricSetsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMetricSetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutFeedback",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/PutFeedback"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutFeedbackResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutFeedbackRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateAlert",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateAlert"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAlertResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAlertRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateAnomalyDetector",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateAnomalyDetector"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAnomalyDetectorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAnomalyDetectorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMetricSet",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateMetricSet"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMetricSetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMetricSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "ActivateAnomalyDetectorResponse": {
            "type": "object",
            "properties": {}
        },
        "ActivateAnomalyDetectorRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "Arn": {
            "type": "string"
        },
        "BackTestAnomalyDetectorResponse": {
            "type": "object",
            "properties": {}
        },
        "BackTestAnomalyDetectorRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "CreateAlertResponse": {
            "type": "object",
            "properties": {
                "AlertArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "CreateAlertRequest": {
            "type": "object",
            "properties": {
                "AlertName": {
                    "$ref": "#/$defs/AlertName"
                },
                "AlertSensitivityThreshold": {
                    "$ref": "#/$defs/SensitivityThreshold"
                },
                "AlertDescription": {
                    "$ref": "#/$defs/AlertDescription"
                },
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Action": {
                    "$ref": "#/$defs/Action"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "AlertFilters": {
                    "$ref": "#/$defs/AlertFilters"
                }
            }
        },
        "AlertName": {
            "type": "string"
        },
        "SensitivityThreshold": {
            "type": "integer",
            "format": "int32"
        },
        "AlertDescription": {
            "type": "string"
        },
        "Action": {
            "type": "object",
            "properties": {
                "SNSConfiguration": {
                    "$ref": "#/$defs/SNSConfiguration"
                },
                "LambdaConfiguration": {
                    "$ref": "#/$defs/LambdaConfiguration"
                }
            }
        },
        "SNSConfiguration": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "SnsTopicArn": {
                    "$ref": "#/$defs/Arn"
                },
                "SnsFormat": {
                    "$ref": "#/$defs/SnsFormat"
                }
            }
        },
        "SnsFormat": {
            "enum": [
                "LONG_TEXT",
                "SHORT_TEXT",
                "JSON"
            ]
        },
        "LambdaConfiguration": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "LambdaArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "AlertFilters": {
            "type": "object",
            "properties": {
                "MetricList": {
                    "$ref": "#/$defs/MetricNameList"
                },
                "DimensionFilterList": {
                    "$ref": "#/$defs/DimensionFilterList"
                }
            }
        },
        "MetricNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricName"
            }
        },
        "MetricName": {
            "type": "string"
        },
        "DimensionFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DimensionFilter"
            }
        },
        "DimensionFilter": {
            "type": "object",
            "properties": {
                "DimensionName": {
                    "$ref": "#/$defs/ColumnName"
                },
                "DimensionValueList": {
                    "$ref": "#/$defs/DimensionValueList"
                }
            }
        },
        "ColumnName": {
            "type": "string"
        },
        "DimensionValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DimensionValue"
            }
        },
        "DimensionValue": {
            "type": "string"
        },
        "CreateAnomalyDetectorResponse": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "CreateAnomalyDetectorRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorName": {
                    "$ref": "#/$defs/AnomalyDetectorName"
                },
                "AnomalyDetectorDescription": {
                    "$ref": "#/$defs/AnomalyDetectorDescription"
                },
                "AnomalyDetectorConfig": {
                    "$ref": "#/$defs/AnomalyDetectorConfig"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "AnomalyDetectorName": {
            "type": "string"
        },
        "AnomalyDetectorDescription": {
            "type": "string"
        },
        "AnomalyDetectorConfig": {
            "type": "object",
            "properties": {
                "AnomalyDetectorFrequency": {
                    "$ref": "#/$defs/Frequency"
                }
            }
        },
        "Frequency": {
            "enum": [
                "P1D",
                "PT1H",
                "PT10M",
                "PT5M"
            ]
        },
        "KmsKeyArn": {
            "type": "string"
        },
        "CreateMetricSetResponse": {
            "type": "object",
            "properties": {
                "MetricSetArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "CreateMetricSetRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "MetricSetName": {
                    "$ref": "#/$defs/MetricSetName"
                },
                "MetricSetDescription": {
                    "$ref": "#/$defs/MetricSetDescription"
                },
                "MetricList": {
                    "$ref": "#/$defs/MetricList"
                },
                "Offset": {
                    "$ref": "#/$defs/Offset"
                },
                "TimestampColumn": {
                    "$ref": "#/$defs/TimestampColumn"
                },
                "DimensionList": {
                    "$ref": "#/$defs/DimensionList"
                },
                "MetricSetFrequency": {
                    "$ref": "#/$defs/Frequency"
                },
                "MetricSource": {
                    "$ref": "#/$defs/MetricSource"
                },
                "Timezone": {
                    "$ref": "#/$defs/Timezone"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "DimensionFilterList": {
                    "$ref": "#/$defs/MetricSetDimensionFilterList"
                }
            }
        },
        "MetricSetName": {
            "type": "string"
        },
        "MetricSetDescription": {
            "type": "string"
        },
        "MetricList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Metric"
            }
        },
        "Metric": {
            "type": "object",
            "properties": {
                "MetricName": {
                    "$ref": "#/$defs/ColumnName"
                },
                "AggregationFunction": {
                    "$ref": "#/$defs/AggregationFunction"
                },
                "Namespace": {
                    "$ref": "#/$defs/Namespace"
                }
            }
        },
        "AggregationFunction": {
            "enum": [
                "AVG",
                "SUM"
            ]
        },
        "Namespace": {
            "type": "string"
        },
        "Offset": {
            "type": "integer",
            "format": "int32"
        },
        "TimestampColumn": {
            "type": "object",
            "properties": {
                "ColumnName": {
                    "$ref": "#/$defs/ColumnName"
                },
                "ColumnFormat": {
                    "$ref": "#/$defs/DateTimeFormat"
                }
            }
        },
        "DateTimeFormat": {
            "type": "string"
        },
        "DimensionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnName"
            }
        },
        "MetricSource": {
            "type": "object",
            "properties": {
                "S3SourceConfig": {
                    "$ref": "#/$defs/S3SourceConfig"
                },
                "AppFlowConfig": {
                    "$ref": "#/$defs/AppFlowConfig"
                },
                "CloudWatchConfig": {
                    "$ref": "#/$defs/CloudWatchConfig"
                },
                "RDSSourceConfig": {
                    "$ref": "#/$defs/RDSSourceConfig"
                },
                "RedshiftSourceConfig": {
                    "$ref": "#/$defs/RedshiftSourceConfig"
                },
                "AthenaSourceConfig": {
                    "$ref": "#/$defs/AthenaSourceConfig"
                }
            }
        },
        "S3SourceConfig": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "TemplatedPathList": {
                    "$ref": "#/$defs/TemplatedPathList"
                },
                "HistoricalDataPathList": {
                    "$ref": "#/$defs/HistoricalDataPathList"
                },
                "FileFormatDescriptor": {
                    "$ref": "#/$defs/FileFormatDescriptor"
                }
            }
        },
        "TemplatedPathList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TemplatedPath"
            }
        },
        "TemplatedPath": {
            "type": "string"
        },
        "HistoricalDataPathList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HistoricalDataPath"
            }
        },
        "HistoricalDataPath": {
            "type": "string"
        },
        "FileFormatDescriptor": {
            "type": "object",
            "properties": {
                "CsvFormatDescriptor": {
                    "$ref": "#/$defs/CsvFormatDescriptor"
                },
                "JsonFormatDescriptor": {
                    "$ref": "#/$defs/JsonFormatDescriptor"
                }
            }
        },
        "CsvFormatDescriptor": {
            "type": "object",
            "properties": {
                "FileCompression": {
                    "$ref": "#/$defs/CSVFileCompression"
                },
                "Charset": {
                    "$ref": "#/$defs/Charset"
                },
                "ContainsHeader": {
                    "$ref": "#/$defs/Boolean"
                },
                "Delimiter": {
                    "$ref": "#/$defs/Delimiter"
                },
                "HeaderList": {
                    "$ref": "#/$defs/HeaderList"
                },
                "QuoteSymbol": {
                    "$ref": "#/$defs/QuoteSymbol"
                }
            }
        },
        "CSVFileCompression": {
            "enum": [
                "NONE",
                "GZIP"
            ]
        },
        "Charset": {
            "type": "string"
        },
        "Boolean": {
            "type": "boolean"
        },
        "Delimiter": {
            "type": "string"
        },
        "HeaderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnName"
            }
        },
        "QuoteSymbol": {
            "type": "string"
        },
        "JsonFormatDescriptor": {
            "type": "object",
            "properties": {
                "FileCompression": {
                    "$ref": "#/$defs/JsonFileCompression"
                },
                "Charset": {
                    "$ref": "#/$defs/Charset"
                }
            }
        },
        "JsonFileCompression": {
            "enum": [
                "NONE",
                "GZIP"
            ]
        },
        "AppFlowConfig": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "FlowName": {
                    "$ref": "#/$defs/FlowName"
                }
            }
        },
        "FlowName": {
            "type": "string"
        },
        "CloudWatchConfig": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "BackTestConfiguration": {
                    "$ref": "#/$defs/BackTestConfiguration"
                }
            }
        },
        "BackTestConfiguration": {
            "type": "object",
            "properties": {
                "RunBackTestMode": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RDSSourceConfig": {
            "type": "object",
            "properties": {
                "DBInstanceIdentifier": {
                    "$ref": "#/$defs/RDSDatabaseIdentifier"
                },
                "DatabaseHost": {
                    "$ref": "#/$defs/DatabaseHost"
                },
                "DatabasePort": {
                    "$ref": "#/$defs/DatabasePort"
                },
                "SecretManagerArn": {
                    "$ref": "#/$defs/PoirotSecretManagerArn"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/RDSDatabaseName"
                },
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "VpcConfiguration": {
                    "$ref": "#/$defs/VpcConfiguration"
                }
            }
        },
        "RDSDatabaseIdentifier": {
            "type": "string"
        },
        "DatabaseHost": {
            "type": "string"
        },
        "DatabasePort": {
            "type": "integer",
            "format": "int32"
        },
        "PoirotSecretManagerArn": {
            "type": "string"
        },
        "RDSDatabaseName": {
            "type": "string"
        },
        "TableName": {
            "type": "string"
        },
        "VpcConfiguration": {
            "type": "object",
            "properties": {
                "SubnetIdList": {
                    "$ref": "#/$defs/SubnetIdList"
                },
                "SecurityGroupIdList": {
                    "$ref": "#/$defs/SecurityGroupIdList"
                }
            }
        },
        "SubnetIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "SubnetId": {
            "type": "string"
        },
        "SecurityGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "RedshiftSourceConfig": {
            "type": "object",
            "properties": {
                "ClusterIdentifier": {
                    "$ref": "#/$defs/RedshiftClusterIdentifier"
                },
                "DatabaseHost": {
                    "$ref": "#/$defs/DatabaseHost"
                },
                "DatabasePort": {
                    "$ref": "#/$defs/DatabasePort"
                },
                "SecretManagerArn": {
                    "$ref": "#/$defs/PoirotSecretManagerArn"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/RedshiftDatabaseName"
                },
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "VpcConfiguration": {
                    "$ref": "#/$defs/VpcConfiguration"
                }
            }
        },
        "RedshiftClusterIdentifier": {
            "type": "string"
        },
        "RedshiftDatabaseName": {
            "type": "string"
        },
        "AthenaSourceConfig": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/AthenaDatabaseName"
                },
                "DataCatalog": {
                    "$ref": "#/$defs/AthenaDataCatalog"
                },
                "TableName": {
                    "$ref": "#/$defs/AthenaTableName"
                },
                "WorkGroupName": {
                    "$ref": "#/$defs/AthenaWorkGroupName"
                },
                "S3ResultsPath": {
                    "$ref": "#/$defs/AthenaS3ResultsPath"
                },
                "BackTestConfiguration": {
                    "$ref": "#/$defs/BackTestConfiguration"
                }
            }
        },
        "AthenaDatabaseName": {
            "type": "string"
        },
        "AthenaDataCatalog": {
            "type": "string"
        },
        "AthenaTableName": {
            "type": "string"
        },
        "AthenaWorkGroupName": {
            "type": "string"
        },
        "AthenaS3ResultsPath": {
            "type": "string"
        },
        "Timezone": {
            "type": "string"
        },
        "MetricSetDimensionFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricSetDimensionFilter"
            }
        },
        "MetricSetDimensionFilter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ColumnName"
                },
                "FilterList": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "FilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "DimensionValue": {
                    "$ref": "#/$defs/DimensionValue"
                },
                "FilterOperation": {
                    "$ref": "#/$defs/FilterOperation"
                }
            }
        },
        "FilterOperation": {
            "enum": [
                "EQUALS"
            ]
        },
        "DeactivateAnomalyDetectorResponse": {
            "type": "object",
            "properties": {}
        },
        "DeactivateAnomalyDetectorRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "DeleteAlertResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAlertRequest": {
            "type": "object",
            "properties": {
                "AlertArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "DeleteAnomalyDetectorResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAnomalyDetectorRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "DescribeAlertResponse": {
            "type": "object",
            "properties": {
                "Alert": {
                    "$ref": "#/$defs/Alert"
                }
            }
        },
        "Alert": {
            "type": "object",
            "properties": {
                "Action": {
                    "$ref": "#/$defs/Action"
                },
                "AlertDescription": {
                    "$ref": "#/$defs/AlertDescription"
                },
                "AlertArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AlertName": {
                    "$ref": "#/$defs/AlertName"
                },
                "AlertSensitivityThreshold": {
                    "$ref": "#/$defs/SensitivityThreshold"
                },
                "AlertType": {
                    "$ref": "#/$defs/AlertType"
                },
                "AlertStatus": {
                    "$ref": "#/$defs/AlertStatus"
                },
                "LastModificationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "AlertFilters": {
                    "$ref": "#/$defs/AlertFilters"
                }
            }
        },
        "AlertType": {
            "enum": [
                "SNS",
                "LAMBDA"
            ]
        },
        "AlertStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeAlertRequest": {
            "type": "object",
            "properties": {
                "AlertArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "DescribeAnomalyDetectionExecutionsResponse": {
            "type": "object",
            "properties": {
                "ExecutionList": {
                    "$ref": "#/$defs/ExecutionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ExecutionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExecutionStatus"
            }
        },
        "ExecutionStatus": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/TimestampString"
                },
                "Status": {
                    "$ref": "#/$defs/AnomalyDetectionTaskStatus"
                },
                "FailureReason": {
                    "$ref": "#/$defs/AnomalyDetectionTaskStatusMessage"
                }
            }
        },
        "TimestampString": {
            "type": "string"
        },
        "AnomalyDetectionTaskStatus": {
            "enum": [
                "PENDING",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "FAILED_TO_SCHEDULE"
            ]
        },
        "AnomalyDetectionTaskStatusMessage": {
            "type": "string"
        },
        "NextToken": {
            "type": "string"
        },
        "DescribeAnomalyDetectionExecutionsRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Timestamp": {
                    "$ref": "#/$defs/TimestampString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeAnomalyDetectorResponse": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AnomalyDetectorName": {
                    "$ref": "#/$defs/AnomalyDetectorName"
                },
                "AnomalyDetectorDescription": {
                    "$ref": "#/$defs/AnomalyDetectorDescription"
                },
                "AnomalyDetectorConfig": {
                    "$ref": "#/$defs/AnomalyDetectorConfigSummary"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModificationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/AnomalyDetectorStatus"
                },
                "FailureReason": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                },
                "FailureType": {
                    "$ref": "#/$defs/AnomalyDetectorFailureType"
                }
            }
        },
        "AnomalyDetectorConfigSummary": {
            "type": "object",
            "properties": {
                "AnomalyDetectorFrequency": {
                    "$ref": "#/$defs/Frequency"
                }
            }
        },
        "AnomalyDetectorStatus": {
            "enum": [
                "ACTIVE",
                "ACTIVATING",
                "DELETING",
                "FAILED",
                "INACTIVE",
                "LEARNING",
                "BACK_TEST_ACTIVATING",
                "BACK_TEST_ACTIVE",
                "BACK_TEST_COMPLETE",
                "DEACTIVATED",
                "DEACTIVATING"
            ]
        },
        "ErrorMessage": {
            "type": "string"
        },
        "AnomalyDetectorFailureType": {
            "enum": [
                "ACTIVATION_FAILURE",
                "BACK_TEST_ACTIVATION_FAILURE",
                "DELETION_FAILURE",
                "DEACTIVATION_FAILURE"
            ]
        },
        "DescribeAnomalyDetectorRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "DescribeMetricSetResponse": {
            "type": "object",
            "properties": {
                "MetricSetArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "MetricSetName": {
                    "$ref": "#/$defs/MetricSetName"
                },
                "MetricSetDescription": {
                    "$ref": "#/$defs/MetricSetDescription"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModificationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Offset": {
                    "$ref": "#/$defs/Offset"
                },
                "MetricList": {
                    "$ref": "#/$defs/MetricList"
                },
                "TimestampColumn": {
                    "$ref": "#/$defs/TimestampColumn"
                },
                "DimensionList": {
                    "$ref": "#/$defs/DimensionList"
                },
                "MetricSetFrequency": {
                    "$ref": "#/$defs/Frequency"
                },
                "Timezone": {
                    "$ref": "#/$defs/Timezone"
                },
                "MetricSource": {
                    "$ref": "#/$defs/MetricSource"
                },
                "DimensionFilterList": {
                    "$ref": "#/$defs/MetricSetDimensionFilterList"
                }
            }
        },
        "DescribeMetricSetRequest": {
            "type": "object",
            "properties": {
                "MetricSetArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "DetectMetricSetConfigResponse": {
            "type": "object",
            "properties": {
                "DetectedMetricSetConfig": {
                    "$ref": "#/$defs/DetectedMetricSetConfig"
                }
            }
        },
        "DetectedMetricSetConfig": {
            "type": "object",
            "properties": {
                "Offset": {
                    "$ref": "#/$defs/DetectedField"
                },
                "MetricSetFrequency": {
                    "$ref": "#/$defs/DetectedField"
                },
                "MetricSource": {
                    "$ref": "#/$defs/DetectedMetricSource"
                }
            }
        },
        "DetectedField": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "Confidence": {
                    "$ref": "#/$defs/Confidence"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                }
            }
        },
        "AttributeValue": {
            "type": "object",
            "properties": {
                "S": {
                    "$ref": "#/$defs/StringAttributeValue"
                },
                "N": {
                    "$ref": "#/$defs/NumberAttributeValue"
                },
                "B": {
                    "$ref": "#/$defs/BinaryAttributeValue"
                },
                "SS": {
                    "$ref": "#/$defs/StringListAttributeValue"
                },
                "NS": {
                    "$ref": "#/$defs/NumberListAttributeValue"
                },
                "BS": {
                    "$ref": "#/$defs/BinaryListAttributeValue"
                }
            }
        },
        "StringAttributeValue": {
            "type": "string"
        },
        "NumberAttributeValue": {
            "type": "string"
        },
        "BinaryAttributeValue": {
            "type": "string"
        },
        "StringListAttributeValue": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StringAttributeValue"
            }
        },
        "NumberListAttributeValue": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NumberAttributeValue"
            }
        },
        "BinaryListAttributeValue": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BinaryAttributeValue"
            }
        },
        "Confidence": {
            "enum": [
                "HIGH",
                "LOW",
                "NONE"
            ]
        },
        "Message": {
            "type": "string"
        },
        "DetectedMetricSource": {
            "type": "object",
            "properties": {
                "S3SourceConfig": {
                    "$ref": "#/$defs/DetectedS3SourceConfig"
                }
            }
        },
        "DetectedS3SourceConfig": {
            "type": "object",
            "properties": {
                "FileFormatDescriptor": {
                    "$ref": "#/$defs/DetectedFileFormatDescriptor"
                }
            }
        },
        "DetectedFileFormatDescriptor": {
            "type": "object",
            "properties": {
                "CsvFormatDescriptor": {
                    "$ref": "#/$defs/DetectedCsvFormatDescriptor"
                },
                "JsonFormatDescriptor": {
                    "$ref": "#/$defs/DetectedJsonFormatDescriptor"
                }
            }
        },
        "DetectedCsvFormatDescriptor": {
            "type": "object",
            "properties": {
                "FileCompression": {
                    "$ref": "#/$defs/DetectedField"
                },
                "Charset": {
                    "$ref": "#/$defs/DetectedField"
                },
                "ContainsHeader": {
                    "$ref": "#/$defs/DetectedField"
                },
                "Delimiter": {
                    "$ref": "#/$defs/DetectedField"
                },
                "HeaderList": {
                    "$ref": "#/$defs/DetectedField"
                },
                "QuoteSymbol": {
                    "$ref": "#/$defs/DetectedField"
                }
            }
        },
        "DetectedJsonFormatDescriptor": {
            "type": "object",
            "properties": {
                "FileCompression": {
                    "$ref": "#/$defs/DetectedField"
                },
                "Charset": {
                    "$ref": "#/$defs/DetectedField"
                }
            }
        },
        "DetectMetricSetConfigRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AutoDetectionMetricSource": {
                    "$ref": "#/$defs/AutoDetectionMetricSource"
                }
            }
        },
        "AutoDetectionMetricSource": {
            "type": "object",
            "properties": {
                "S3SourceConfig": {
                    "$ref": "#/$defs/AutoDetectionS3SourceConfig"
                }
            }
        },
        "AutoDetectionS3SourceConfig": {
            "type": "object",
            "properties": {
                "TemplatedPathList": {
                    "$ref": "#/$defs/TemplatedPathList"
                },
                "HistoricalDataPathList": {
                    "$ref": "#/$defs/HistoricalDataPathList"
                }
            }
        },
        "GetAnomalyGroupResponse": {
            "type": "object",
            "properties": {
                "AnomalyGroup": {
                    "$ref": "#/$defs/AnomalyGroup"
                }
            }
        },
        "AnomalyGroup": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/TimestampString"
                },
                "EndTime": {
                    "$ref": "#/$defs/TimestampString"
                },
                "AnomalyGroupId": {
                    "$ref": "#/$defs/UUID"
                },
                "AnomalyGroupScore": {
                    "$ref": "#/$defs/Score"
                },
                "PrimaryMetricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "MetricLevelImpactList": {
                    "$ref": "#/$defs/MetricLevelImpactList"
                }
            }
        },
        "UUID": {
            "type": "string"
        },
        "Score": {
            "type": "number",
            "format": "double"
        },
        "MetricLevelImpactList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricLevelImpact"
            }
        },
        "MetricLevelImpact": {
            "type": "object",
            "properties": {
                "MetricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "NumTimeSeries": {
                    "$ref": "#/$defs/Integer"
                },
                "ContributionMatrix": {
                    "$ref": "#/$defs/ContributionMatrix"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "ContributionMatrix": {
            "type": "object",
            "properties": {
                "DimensionContributionList": {
                    "$ref": "#/$defs/DimensionContributionList"
                }
            }
        },
        "DimensionContributionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DimensionContribution"
            }
        },
        "DimensionContribution": {
            "type": "object",
            "properties": {
                "DimensionName": {
                    "$ref": "#/$defs/ColumnName"
                },
                "DimensionValueContributionList": {
                    "$ref": "#/$defs/DimensionValueContributionList"
                }
            }
        },
        "DimensionValueContributionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DimensionValueContribution"
            }
        },
        "DimensionValueContribution": {
            "type": "object",
            "properties": {
                "DimensionValue": {
                    "$ref": "#/$defs/DimensionValue"
                },
                "ContributionScore": {
                    "$ref": "#/$defs/Score"
                }
            }
        },
        "GetAnomalyGroupRequest": {
            "type": "object",
            "properties": {
                "AnomalyGroupId": {
                    "$ref": "#/$defs/UUID"
                },
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "GetDataQualityMetricsResponse": {
            "type": "object",
            "properties": {
                "AnomalyDetectorDataQualityMetricList": {
                    "$ref": "#/$defs/AnomalyDetectorDataQualityMetricList"
                }
            }
        },
        "AnomalyDetectorDataQualityMetricList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnomalyDetectorDataQualityMetric"
            }
        },
        "AnomalyDetectorDataQualityMetric": {
            "type": "object",
            "properties": {
                "StartTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "MetricSetDataQualityMetricList": {
                    "$ref": "#/$defs/MetricSetDataQualityMetricList"
                }
            }
        },
        "MetricSetDataQualityMetricList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricSetDataQualityMetric"
            }
        },
        "MetricSetDataQualityMetric": {
            "type": "object",
            "properties": {
                "MetricSetArn": {
                    "$ref": "#/$defs/Arn"
                },
                "DataQualityMetricList": {
                    "$ref": "#/$defs/DataQualityMetricList"
                }
            }
        },
        "DataQualityMetricList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataQualityMetric"
            }
        },
        "DataQualityMetric": {
            "type": "object",
            "properties": {
                "MetricType": {
                    "$ref": "#/$defs/DataQualityMetricType"
                },
                "MetricDescription": {
                    "$ref": "#/$defs/DataQualityMetricDescription"
                },
                "RelatedColumnName": {
                    "$ref": "#/$defs/RelatedColumnName"
                },
                "MetricValue": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "DataQualityMetricType": {
            "enum": [
                "COLUMN_COMPLETENESS",
                "DIMENSION_UNIQUENESS",
                "TIME_SERIES_COUNT",
                "ROWS_PROCESSED",
                "ROWS_PARTIAL_COMPLIANCE",
                "INVALID_ROWS_COMPLIANCE",
                "BACKTEST_TRAINING_DATA_START_TIME_STAMP",
                "BACKTEST_TRAINING_DATA_END_TIME_STAMP",
                "BACKTEST_INFERENCE_DATA_START_TIME_STAMP",
                "BACKTEST_INFERENCE_DATA_END_TIME_STAMP"
            ]
        },
        "DataQualityMetricDescription": {
            "type": "string"
        },
        "RelatedColumnName": {
            "type": "string"
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "GetDataQualityMetricsRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "MetricSetArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "GetFeedbackResponse": {
            "type": "object",
            "properties": {
                "AnomalyGroupTimeSeriesFeedback": {
                    "$ref": "#/$defs/TimeSeriesFeedbackList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TimeSeriesFeedbackList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TimeSeriesFeedback"
            }
        },
        "TimeSeriesFeedback": {
            "type": "object",
            "properties": {
                "TimeSeriesId": {
                    "$ref": "#/$defs/TimeSeriesId"
                },
                "IsAnomaly": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TimeSeriesId": {
            "type": "string"
        },
        "GetFeedbackRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AnomalyGroupTimeSeriesFeedback": {
                    "$ref": "#/$defs/AnomalyGroupTimeSeries"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AnomalyGroupTimeSeries": {
            "type": "object",
            "properties": {
                "AnomalyGroupId": {
                    "$ref": "#/$defs/UUID"
                },
                "TimeSeriesId": {
                    "$ref": "#/$defs/TimeSeriesId"
                }
            }
        },
        "GetSampleDataResponse": {
            "type": "object",
            "properties": {
                "HeaderValues": {
                    "$ref": "#/$defs/HeaderValueList"
                },
                "SampleRows": {
                    "$ref": "#/$defs/SampleRows"
                }
            }
        },
        "HeaderValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HeaderValue"
            }
        },
        "HeaderValue": {
            "type": "string"
        },
        "SampleRows": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SampleRow"
            }
        },
        "SampleRow": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataItem"
            }
        },
        "DataItem": {
            "type": "string"
        },
        "GetSampleDataRequest": {
            "type": "object",
            "properties": {
                "S3SourceConfig": {
                    "$ref": "#/$defs/SampleDataS3SourceConfig"
                }
            }
        },
        "SampleDataS3SourceConfig": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "TemplatedPathList": {
                    "$ref": "#/$defs/TemplatedPathList"
                },
                "HistoricalDataPathList": {
                    "$ref": "#/$defs/HistoricalDataPathList"
                },
                "FileFormatDescriptor": {
                    "$ref": "#/$defs/FileFormatDescriptor"
                }
            }
        },
        "ListAlertsResponse": {
            "type": "object",
            "properties": {
                "AlertSummaryList": {
                    "$ref": "#/$defs/AlertSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AlertSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AlertSummary"
            }
        },
        "AlertSummary": {
            "type": "object",
            "properties": {
                "AlertArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AlertName": {
                    "$ref": "#/$defs/AlertName"
                },
                "AlertSensitivityThreshold": {
                    "$ref": "#/$defs/SensitivityThreshold"
                },
                "AlertType": {
                    "$ref": "#/$defs/AlertType"
                },
                "AlertStatus": {
                    "$ref": "#/$defs/AlertStatus"
                },
                "LastModificationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListAlertsRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListAnomalyDetectorsResponse": {
            "type": "object",
            "properties": {
                "AnomalyDetectorSummaryList": {
                    "$ref": "#/$defs/AnomalyDetectorSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AnomalyDetectorSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnomalyDetectorSummary"
            }
        },
        "AnomalyDetectorSummary": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AnomalyDetectorName": {
                    "$ref": "#/$defs/AnomalyDetectorName"
                },
                "AnomalyDetectorDescription": {
                    "$ref": "#/$defs/AnomalyDetectorDescription"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModificationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/AnomalyDetectorStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListAnomalyDetectorsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListAnomalyGroupRelatedMetricsResponse": {
            "type": "object",
            "properties": {
                "InterMetricImpactList": {
                    "$ref": "#/$defs/InterMetricImpactList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "InterMetricImpactList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InterMetricImpactDetails"
            }
        },
        "InterMetricImpactDetails": {
            "type": "object",
            "properties": {
                "MetricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "AnomalyGroupId": {
                    "$ref": "#/$defs/UUID"
                },
                "RelationshipType": {
                    "$ref": "#/$defs/RelationshipType"
                },
                "ContributionPercentage": {
                    "$ref": "#/$defs/MetricChangePercentage"
                }
            }
        },
        "RelationshipType": {
            "enum": [
                "CAUSE_OF_INPUT_ANOMALY_GROUP",
                "EFFECT_OF_INPUT_ANOMALY_GROUP"
            ]
        },
        "MetricChangePercentage": {
            "type": "number",
            "format": "double"
        },
        "ListAnomalyGroupRelatedMetricsRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AnomalyGroupId": {
                    "$ref": "#/$defs/UUID"
                },
                "RelationshipTypeFilter": {
                    "$ref": "#/$defs/RelationshipType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListAnomalyGroupSummariesResponse": {
            "type": "object",
            "properties": {
                "AnomalyGroupSummaryList": {
                    "$ref": "#/$defs/AnomalyGroupSummaryList"
                },
                "AnomalyGroupStatistics": {
                    "$ref": "#/$defs/AnomalyGroupStatistics"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AnomalyGroupSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnomalyGroupSummary"
            }
        },
        "AnomalyGroupSummary": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/TimestampString"
                },
                "EndTime": {
                    "$ref": "#/$defs/TimestampString"
                },
                "AnomalyGroupId": {
                    "$ref": "#/$defs/UUID"
                },
                "AnomalyGroupScore": {
                    "$ref": "#/$defs/Score"
                },
                "PrimaryMetricName": {
                    "$ref": "#/$defs/MetricName"
                }
            }
        },
        "AnomalyGroupStatistics": {
            "type": "object",
            "properties": {
                "EvaluationStartDate": {
                    "$ref": "#/$defs/TimestampString"
                },
                "TotalCount": {
                    "$ref": "#/$defs/Integer"
                },
                "ItemizedMetricStatsList": {
                    "$ref": "#/$defs/ItemizedMetricStatsList"
                }
            }
        },
        "ItemizedMetricStatsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ItemizedMetricStats"
            }
        },
        "ItemizedMetricStats": {
            "type": "object",
            "properties": {
                "MetricName": {
                    "$ref": "#/$defs/ColumnName"
                },
                "OccurrenceCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ListAnomalyGroupSummariesRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "SensitivityThreshold": {
                    "$ref": "#/$defs/SensitivityThreshold"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListAnomalyGroupTimeSeriesResponse": {
            "type": "object",
            "properties": {
                "AnomalyGroupId": {
                    "$ref": "#/$defs/UUID"
                },
                "MetricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "TimestampList": {
                    "$ref": "#/$defs/TimestampList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "TimeSeriesList": {
                    "$ref": "#/$defs/TimeSeriesList"
                }
            }
        },
        "TimestampList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TimestampString"
            }
        },
        "TimeSeriesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TimeSeries"
            }
        },
        "TimeSeries": {
            "type": "object",
            "properties": {
                "TimeSeriesId": {
                    "$ref": "#/$defs/TimeSeriesId"
                },
                "DimensionList": {
                    "$ref": "#/$defs/DimensionNameValueList"
                },
                "MetricValueList": {
                    "$ref": "#/$defs/MetricValueList"
                }
            }
        },
        "DimensionNameValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DimensionNameValue"
            }
        },
        "DimensionNameValue": {
            "type": "object",
            "properties": {
                "DimensionName": {
                    "$ref": "#/$defs/ColumnName"
                },
                "DimensionValue": {
                    "$ref": "#/$defs/DimensionValue"
                }
            }
        },
        "MetricValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricValue"
            }
        },
        "MetricValue": {
            "type": "number",
            "format": "double"
        },
        "ListAnomalyGroupTimeSeriesRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AnomalyGroupId": {
                    "$ref": "#/$defs/UUID"
                },
                "MetricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListMetricSetsResponse": {
            "type": "object",
            "properties": {
                "MetricSetSummaryList": {
                    "$ref": "#/$defs/MetricSetSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MetricSetSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricSetSummary"
            }
        },
        "MetricSetSummary": {
            "type": "object",
            "properties": {
                "MetricSetArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "MetricSetDescription": {
                    "$ref": "#/$defs/MetricSetDescription"
                },
                "MetricSetName": {
                    "$ref": "#/$defs/MetricSetName"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastModificationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListMetricSetsRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "PutFeedbackResponse": {
            "type": "object",
            "properties": {}
        },
        "PutFeedbackRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AnomalyGroupTimeSeriesFeedback": {
                    "$ref": "#/$defs/AnomalyGroupTimeSeriesFeedback"
                }
            }
        },
        "AnomalyGroupTimeSeriesFeedback": {
            "type": "object",
            "properties": {
                "AnomalyGroupId": {
                    "$ref": "#/$defs/UUID"
                },
                "TimeSeriesId": {
                    "$ref": "#/$defs/TimeSeriesId"
                },
                "IsAnomaly": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UpdateAlertResponse": {
            "type": "object",
            "properties": {
                "AlertArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "UpdateAlertRequest": {
            "type": "object",
            "properties": {
                "AlertArn": {
                    "$ref": "#/$defs/Arn"
                },
                "AlertDescription": {
                    "$ref": "#/$defs/AlertDescription"
                },
                "AlertSensitivityThreshold": {
                    "$ref": "#/$defs/SensitivityThreshold"
                },
                "Action": {
                    "$ref": "#/$defs/Action"
                },
                "AlertFilters": {
                    "$ref": "#/$defs/AlertFilters"
                }
            }
        },
        "UpdateAnomalyDetectorResponse": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "UpdateAnomalyDetectorRequest": {
            "type": "object",
            "properties": {
                "AnomalyDetectorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                },
                "AnomalyDetectorDescription": {
                    "$ref": "#/$defs/AnomalyDetectorDescription"
                },
                "AnomalyDetectorConfig": {
                    "$ref": "#/$defs/AnomalyDetectorConfig"
                }
            }
        },
        "UpdateMetricSetResponse": {
            "type": "object",
            "properties": {
                "MetricSetArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "UpdateMetricSetRequest": {
            "type": "object",
            "properties": {
                "MetricSetArn": {
                    "$ref": "#/$defs/Arn"
                },
                "MetricSetDescription": {
                    "$ref": "#/$defs/MetricSetDescription"
                },
                "MetricList": {
                    "$ref": "#/$defs/MetricList"
                },
                "Offset": {
                    "$ref": "#/$defs/Offset"
                },
                "TimestampColumn": {
                    "$ref": "#/$defs/TimestampColumn"
                },
                "DimensionList": {
                    "$ref": "#/$defs/DimensionList"
                },
                "MetricSetFrequency": {
                    "$ref": "#/$defs/Frequency"
                },
                "MetricSource": {
                    "$ref": "#/$defs/MetricSource"
                },
                "DimensionFilterList": {
                    "$ref": "#/$defs/MetricSetDimensionFilterList"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://lookoutmetrics-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://lookoutmetrics-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://lookoutmetrics.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://lookoutmetrics.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}