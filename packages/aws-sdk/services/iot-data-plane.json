{
    "name": "iotdata",
    "commands": [
        {
            "name": "DeleteThingShadow",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/things/{thingName}/shadow"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteThingShadowResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteThingShadowRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetRetainedMessage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "topic": "route.topic",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/retainedMessage/{topic}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRetainedMessageResponse"
                    },
                    "inject": [
                        "param.0.topic",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRetainedMessageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetThingShadow",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/things/{thingName}/shadow"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetThingShadowResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetThingShadowRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListNamedShadowsForThing",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/things/shadow/ListNamedShadowsForThing/{thingName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNamedShadowsForThingResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListNamedShadowsForThingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListRetainedMessages",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/retainedMessage"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRetainedMessagesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRetainedMessagesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "Publish",
            "config": {
                "http": {
                    "inject": [
                        {
                            "topic": "route.topic",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/topics/{topic}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.topic",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PublishRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateThingShadow",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/things/{thingName}/shadow"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateThingShadowResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateThingShadowRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "DeleteThingShadowResponse": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/$defs/JsonDocument"
                }
            }
        },
        "JsonDocument": {
            "type": "string",
            "format": "binary"
        },
        "DeleteThingShadowRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "shadowName": {
                    "$ref": "#/$defs/ShadowName"
                }
            }
        },
        "ThingName": {
            "type": "string"
        },
        "ShadowName": {
            "type": "string"
        },
        "GetRetainedMessageResponse": {
            "type": "object",
            "properties": {
                "topic": {
                    "$ref": "#/$defs/Topic"
                },
                "payload": {
                    "$ref": "#/$defs/Payload"
                },
                "qos": {
                    "$ref": "#/$defs/Qos"
                },
                "lastModifiedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "userProperties": {
                    "$ref": "#/$defs/UserPropertiesBlob"
                }
            }
        },
        "Topic": {
            "type": "string"
        },
        "Payload": {
            "type": "string",
            "format": "binary"
        },
        "Qos": {
            "type": "integer",
            "format": "int32"
        },
        "Timestamp": {
            "type": "integer",
            "format": "int64"
        },
        "UserPropertiesBlob": {
            "type": "string",
            "format": "binary"
        },
        "GetRetainedMessageRequest": {
            "type": "object",
            "properties": {
                "topic": {
                    "$ref": "#/$defs/Topic"
                }
            }
        },
        "GetThingShadowResponse": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/$defs/JsonDocument"
                }
            }
        },
        "GetThingShadowRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "shadowName": {
                    "$ref": "#/$defs/ShadowName"
                }
            }
        },
        "ListNamedShadowsForThingResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "$ref": "#/$defs/NamedShadowList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "timestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "NamedShadowList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ShadowName"
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListNamedShadowsForThingRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "PageSize": {
            "type": "integer",
            "format": "int32"
        },
        "ListRetainedMessagesResponse": {
            "type": "object",
            "properties": {
                "retainedTopics": {
                    "$ref": "#/$defs/RetainedMessageList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RetainedMessageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RetainedMessageSummary"
            }
        },
        "RetainedMessageSummary": {
            "type": "object",
            "properties": {
                "topic": {
                    "$ref": "#/$defs/Topic"
                },
                "payloadSize": {
                    "$ref": "#/$defs/PayloadSize"
                },
                "qos": {
                    "$ref": "#/$defs/Qos"
                },
                "lastModifiedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "PayloadSize": {
            "type": "integer",
            "format": "int64"
        },
        "ListRetainedMessagesRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "PublishRequest": {
            "type": "object",
            "properties": {
                "topic": {
                    "$ref": "#/$defs/Topic"
                },
                "qos": {
                    "$ref": "#/$defs/Qos"
                },
                "retain": {
                    "$ref": "#/$defs/Retain"
                },
                "payload": {
                    "$ref": "#/$defs/Payload"
                },
                "userProperties": {
                    "$ref": "#/$defs/SynthesizedJsonUserProperties"
                },
                "payloadFormatIndicator": {
                    "$ref": "#/$defs/PayloadFormatIndicator"
                },
                "contentType": {
                    "$ref": "#/$defs/ContentType"
                },
                "responseTopic": {
                    "$ref": "#/$defs/ResponseTopic"
                },
                "correlationData": {
                    "$ref": "#/$defs/CorrelationData"
                },
                "messageExpiry": {
                    "$ref": "#/$defs/MessageExpiry"
                }
            }
        },
        "Retain": {
            "type": "boolean"
        },
        "SynthesizedJsonUserProperties": {
            "type": "string"
        },
        "PayloadFormatIndicator": {
            "enum": [
                "UNSPECIFIED_BYTES",
                "UTF8_DATA"
            ]
        },
        "ContentType": {
            "type": "string"
        },
        "ResponseTopic": {
            "type": "string"
        },
        "CorrelationData": {
            "type": "string"
        },
        "MessageExpiry": {
            "type": "integer",
            "format": "int64"
        },
        "UpdateThingShadowResponse": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/$defs/JsonDocument"
                }
            }
        },
        "UpdateThingShadowRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "shadowName": {
                    "$ref": "#/$defs/ShadowName"
                },
                "payload": {
                    "$ref": "#/$defs/JsonDocument"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://data-ats.iot-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "ca-central-1"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://data.iot-fips.ca-central-1.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "us-east-1"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://data.iot-fips.us-east-1.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "us-east-2"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://data.iot-fips.us-east-2.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "us-west-1"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://data.iot-fips.us-west-1.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "us-west-2"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://data.iot-fips.us-west-2.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "us-gov-east-1"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://data.iot-fips.us-gov-east-1.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "us-gov-west-1"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://data.iot-fips.us-gov-west-1.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://data-ats.iot-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://data-ats.iot.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                },
                                                "cn-north-1"
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://data.ats.iot.cn-north-1.amazonaws.com.cn",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                "aws",
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "PartitionResult"
                                                        },
                                                        "name"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://data-ats.iot.{Region}.amazonaws.com",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                "aws-cn",
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "PartitionResult"
                                                        },
                                                        "name"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://data-ats.iot.{Region}.amazonaws.com.cn",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                "aws-us-gov",
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "PartitionResult"
                                                        },
                                                        "name"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://data-ats.iot.{Region}.amazonaws.com",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://data-ats.iot.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}