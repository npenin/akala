{
    "name": "kinesisvideo",
    "commands": [
        {
            "name": "CreateSignalingChannel",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/createSignalingChannel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSignalingChannelOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSignalingChannelInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ChannelName": {},
                        "ChannelType": {},
                        "SingleMasterConfiguration": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateStream",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/createStream"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateStreamOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateStreamInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DeviceName": {},
                        "StreamName": {},
                        "MediaType": {},
                        "KmsKeyId": {},
                        "DataRetentionInHours": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "DeleteEdgeConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/deleteEdgeConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEdgeConfigurationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteEdgeConfigurationInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamName": {},
                        "StreamARN": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSignalingChannel",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/deleteSignalingChannel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSignalingChannelOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteSignalingChannelInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ChannelARN": {},
                        "CurrentVersion": {}
                    }
                }
            }
        },
        {
            "name": "DeleteStream",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/deleteStream"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteStreamOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteStreamInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamARN": {},
                        "CurrentVersion": {}
                    }
                }
            }
        },
        {
            "name": "DescribeEdgeConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/describeEdgeConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEdgeConfigurationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeEdgeConfigurationInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamName": {},
                        "StreamARN": {}
                    }
                }
            }
        },
        {
            "name": "DescribeImageGenerationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/describeImageGenerationConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeImageGenerationConfigurationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeImageGenerationConfigurationInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamName": {},
                        "StreamARN": {}
                    }
                }
            }
        },
        {
            "name": "DescribeMappedResourceConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/describeMappedResourceConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMappedResourceConfigurationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeMappedResourceConfigurationInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamName": {},
                        "StreamARN": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "DescribeMediaStorageConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/describeMediaStorageConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMediaStorageConfigurationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeMediaStorageConfigurationInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ChannelName": {},
                        "ChannelARN": {}
                    }
                }
            }
        },
        {
            "name": "DescribeNotificationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/describeNotificationConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNotificationConfigurationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeNotificationConfigurationInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamName": {},
                        "StreamARN": {}
                    }
                }
            }
        },
        {
            "name": "DescribeSignalingChannel",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/describeSignalingChannel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSignalingChannelOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeSignalingChannelInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ChannelName": {},
                        "ChannelARN": {}
                    }
                }
            }
        },
        {
            "name": "DescribeStream",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/describeStream"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStreamOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeStreamInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamName": {},
                        "StreamARN": {}
                    }
                }
            }
        },
        {
            "name": "GetDataEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/getDataEndpoint"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataEndpointOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetDataEndpointInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamName": {},
                        "StreamARN": {},
                        "APIName": {}
                    }
                }
            }
        },
        {
            "name": "GetSignalingChannelEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/getSignalingChannelEndpoint"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSignalingChannelEndpointOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSignalingChannelEndpointInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ChannelARN": {},
                        "SingleMasterChannelEndpointConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "ListEdgeAgentConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/listEdgeAgentConfigurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEdgeAgentConfigurationsOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListEdgeAgentConfigurationsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "HubDeviceArn": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListSignalingChannels",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/listSignalingChannels"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSignalingChannelsOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListSignalingChannelsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {},
                        "ChannelNameCondition": {}
                    }
                }
            }
        },
        {
            "name": "ListStreams",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/listStreams"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStreamsOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListStreamsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {},
                        "StreamNameCondition": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListTagsForResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "ResourceARN": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForStream",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/listTagsForStream"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForStreamOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForStreamInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "StreamARN": {},
                        "StreamName": {}
                    }
                }
            }
        },
        {
            "name": "StartEdgeConfigurationUpdate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/startEdgeConfigurationUpdate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartEdgeConfigurationUpdateOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartEdgeConfigurationUpdateInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamName": {},
                        "StreamARN": {},
                        "EdgeConfig": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/TagResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceARN": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "TagStream",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/tagStream"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagStreamOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagStreamInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamARN": {},
                        "StreamName": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UntagResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceARN": {},
                        "TagKeyList": {}
                    }
                }
            }
        },
        {
            "name": "UntagStream",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/untagStream"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagStreamOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagStreamInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamARN": {},
                        "StreamName": {},
                        "TagKeyList": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDataRetention",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/updateDataRetention"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDataRetentionOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateDataRetentionInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamName": {},
                        "StreamARN": {},
                        "CurrentVersion": {},
                        "Operation": {},
                        "DataRetentionChangeInHours": {}
                    }
                }
            }
        },
        {
            "name": "UpdateImageGenerationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/updateImageGenerationConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateImageGenerationConfigurationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateImageGenerationConfigurationInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamName": {},
                        "StreamARN": {},
                        "ImageGenerationConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMediaStorageConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/updateMediaStorageConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMediaStorageConfigurationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateMediaStorageConfigurationInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ChannelARN": {},
                        "MediaStorageConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "UpdateNotificationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/updateNotificationConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateNotificationConfigurationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateNotificationConfigurationInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamName": {},
                        "StreamARN": {},
                        "NotificationConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSignalingChannel",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/updateSignalingChannel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSignalingChannelOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateSignalingChannelInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ChannelARN": {},
                        "CurrentVersion": {},
                        "SingleMasterConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "UpdateStream",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/updateStream"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateStreamOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateStreamInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StreamName": {},
                        "StreamARN": {},
                        "CurrentVersion": {},
                        "DeviceName": {},
                        "MediaType": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateSignalingChannelInput": {
            "type": "object",
            "properties": {
                "ChannelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "ChannelType": {
                    "$ref": "#/$defs/ChannelType"
                },
                "SingleMasterConfiguration": {
                    "$ref": "#/$defs/SingleMasterConfiguration"
                },
                "Tags": {
                    "$ref": "#/$defs/TagOnCreateList"
                }
            }
        },
        "ChannelName": {
            "type": "string"
        },
        "ChannelType": {
            "enum": [
                "SINGLE_MASTER",
                "FULL_MESH"
            ]
        },
        "SingleMasterConfiguration": {
            "type": "object",
            "properties": {
                "MessageTtlSeconds": {
                    "$ref": "#/$defs/MessageTtlSeconds"
                }
            }
        },
        "MessageTtlSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "TagOnCreateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateSignalingChannelOutput": {
            "type": "object",
            "properties": {
                "ChannelARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "ResourceARN": {
            "type": "string"
        },
        "CreateStreamInput": {
            "type": "object",
            "properties": {
                "DeviceName": {
                    "$ref": "#/$defs/DeviceName"
                },
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "MediaType": {
                    "$ref": "#/$defs/MediaType"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "DataRetentionInHours": {
                    "$ref": "#/$defs/DataRetentionInHours"
                },
                "Tags": {
                    "$ref": "#/$defs/ResourceTags"
                }
            }
        },
        "DeviceName": {
            "type": "string"
        },
        "StreamName": {
            "type": "string"
        },
        "MediaType": {
            "type": "string"
        },
        "KmsKeyId": {
            "type": "string"
        },
        "DataRetentionInHours": {
            "type": "integer",
            "format": "int32"
        },
        "ResourceTags": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "CreateStreamOutput": {
            "type": "object",
            "properties": {
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "DeleteEdgeConfigurationInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "DeleteEdgeConfigurationOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteSignalingChannelInput": {
            "type": "object",
            "properties": {
                "ChannelARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "Version": {
            "type": "string"
        },
        "DeleteSignalingChannelOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteStreamInput": {
            "type": "object",
            "properties": {
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "DeleteStreamOutput": {
            "type": "object",
            "properties": {}
        },
        "DescribeEdgeConfigurationInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "DescribeEdgeConfigurationOutput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "SyncStatus": {
                    "$ref": "#/$defs/SyncStatus"
                },
                "FailedStatusDetails": {
                    "$ref": "#/$defs/FailedStatusDetails"
                },
                "EdgeConfig": {
                    "$ref": "#/$defs/EdgeConfig"
                },
                "EdgeAgentStatus": {
                    "$ref": "#/$defs/EdgeAgentStatus"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "SyncStatus": {
            "enum": [
                "SYNCING",
                "ACKNOWLEDGED",
                "IN_SYNC",
                "SYNC_FAILED",
                "DELETING",
                "DELETE_FAILED",
                "DELETING_ACKNOWLEDGED"
            ]
        },
        "FailedStatusDetails": {
            "type": "string"
        },
        "EdgeConfig": {
            "type": "object",
            "properties": {
                "HubDeviceArn": {
                    "$ref": "#/$defs/HubDeviceArn"
                },
                "RecorderConfig": {
                    "$ref": "#/$defs/RecorderConfig"
                },
                "UploaderConfig": {
                    "$ref": "#/$defs/UploaderConfig"
                },
                "DeletionConfig": {
                    "$ref": "#/$defs/DeletionConfig"
                }
            }
        },
        "HubDeviceArn": {
            "type": "string"
        },
        "RecorderConfig": {
            "type": "object",
            "properties": {
                "MediaSourceConfig": {
                    "$ref": "#/$defs/MediaSourceConfig"
                },
                "ScheduleConfig": {
                    "$ref": "#/$defs/ScheduleConfig"
                }
            }
        },
        "MediaSourceConfig": {
            "type": "object",
            "properties": {
                "MediaUriSecretArn": {
                    "$ref": "#/$defs/MediaUriSecretArn"
                },
                "MediaUriType": {
                    "$ref": "#/$defs/MediaUriType"
                }
            }
        },
        "MediaUriSecretArn": {
            "type": "string"
        },
        "MediaUriType": {
            "enum": [
                "RTSP_URI",
                "FILE_URI"
            ]
        },
        "ScheduleConfig": {
            "type": "object",
            "properties": {
                "ScheduleExpression": {
                    "$ref": "#/$defs/ScheduleExpression"
                },
                "DurationInSeconds": {
                    "$ref": "#/$defs/DurationInSeconds"
                }
            }
        },
        "ScheduleExpression": {
            "type": "string"
        },
        "DurationInSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "UploaderConfig": {
            "type": "object",
            "properties": {
                "ScheduleConfig": {
                    "$ref": "#/$defs/ScheduleConfig"
                }
            }
        },
        "DeletionConfig": {
            "type": "object",
            "properties": {
                "EdgeRetentionInHours": {
                    "$ref": "#/$defs/EdgeRetentionInHours"
                },
                "LocalSizeConfig": {
                    "$ref": "#/$defs/LocalSizeConfig"
                },
                "DeleteAfterUpload": {
                    "$ref": "#/$defs/DeleteAfterUpload"
                }
            }
        },
        "EdgeRetentionInHours": {
            "type": "integer",
            "format": "int32"
        },
        "LocalSizeConfig": {
            "type": "object",
            "properties": {
                "MaxLocalMediaSizeInMB": {
                    "$ref": "#/$defs/MaxLocalMediaSizeInMB"
                },
                "StrategyOnFullSize": {
                    "$ref": "#/$defs/StrategyOnFullSize"
                }
            }
        },
        "MaxLocalMediaSizeInMB": {
            "type": "integer",
            "format": "int32"
        },
        "StrategyOnFullSize": {
            "enum": [
                "DELETE_OLDEST_MEDIA",
                "DENY_NEW_MEDIA"
            ]
        },
        "DeleteAfterUpload": {
            "type": "boolean"
        },
        "EdgeAgentStatus": {
            "type": "object",
            "properties": {
                "LastRecorderStatus": {
                    "$ref": "#/$defs/LastRecorderStatus"
                },
                "LastUploaderStatus": {
                    "$ref": "#/$defs/LastUploaderStatus"
                }
            }
        },
        "LastRecorderStatus": {
            "type": "object",
            "properties": {
                "JobStatusDetails": {
                    "$ref": "#/$defs/JobStatusDetails"
                },
                "LastCollectedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "RecorderStatus": {
                    "$ref": "#/$defs/RecorderStatus"
                }
            }
        },
        "JobStatusDetails": {
            "type": "string"
        },
        "RecorderStatus": {
            "enum": [
                "SUCCESS",
                "USER_ERROR",
                "SYSTEM_ERROR"
            ]
        },
        "LastUploaderStatus": {
            "type": "object",
            "properties": {
                "JobStatusDetails": {
                    "$ref": "#/$defs/JobStatusDetails"
                },
                "LastCollectedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "UploaderStatus": {
                    "$ref": "#/$defs/UploaderStatus"
                }
            }
        },
        "UploaderStatus": {
            "enum": [
                "SUCCESS",
                "USER_ERROR",
                "SYSTEM_ERROR"
            ]
        },
        "DescribeImageGenerationConfigurationInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "DescribeImageGenerationConfigurationOutput": {
            "type": "object",
            "properties": {
                "ImageGenerationConfiguration": {
                    "$ref": "#/$defs/ImageGenerationConfiguration"
                }
            }
        },
        "ImageGenerationConfiguration": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ConfigurationStatus"
                },
                "ImageSelectorType": {
                    "$ref": "#/$defs/ImageSelectorType"
                },
                "DestinationConfig": {
                    "$ref": "#/$defs/ImageGenerationDestinationConfig"
                },
                "SamplingInterval": {
                    "$ref": "#/$defs/SamplingInterval"
                },
                "Format": {
                    "$ref": "#/$defs/Format"
                },
                "FormatConfig": {
                    "$ref": "#/$defs/FormatConfig"
                },
                "WidthPixels": {
                    "$ref": "#/$defs/WidthPixels"
                },
                "HeightPixels": {
                    "$ref": "#/$defs/HeightPixels"
                }
            }
        },
        "ConfigurationStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "ImageSelectorType": {
            "enum": [
                "SERVER_TIMESTAMP",
                "PRODUCER_TIMESTAMP"
            ]
        },
        "ImageGenerationDestinationConfig": {
            "type": "object",
            "properties": {
                "Uri": {
                    "$ref": "#/$defs/DestinationUri"
                },
                "DestinationRegion": {
                    "$ref": "#/$defs/DestinationRegion"
                }
            }
        },
        "DestinationUri": {
            "type": "string"
        },
        "DestinationRegion": {
            "type": "string"
        },
        "SamplingInterval": {
            "type": "integer",
            "format": "int32"
        },
        "Format": {
            "enum": [
                "JPEG",
                "PNG"
            ]
        },
        "FormatConfig": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/FormatConfigValue"
            }
        },
        "FormatConfigValue": {
            "type": "string"
        },
        "WidthPixels": {
            "type": "integer",
            "format": "int32"
        },
        "HeightPixels": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeMappedResourceConfigurationInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MappedResourceConfigurationListLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MappedResourceConfigurationListLimit": {
            "type": "integer",
            "format": "int32"
        },
        "NextToken": {
            "type": "string"
        },
        "DescribeMappedResourceConfigurationOutput": {
            "type": "object",
            "properties": {
                "MappedResourceConfigurationList": {
                    "$ref": "#/$defs/MappedResourceConfigurationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MappedResourceConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MappedResourceConfigurationListItem"
            }
        },
        "MappedResourceConfigurationListItem": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/Type"
                },
                "ARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "Type": {
            "type": "string"
        },
        "DescribeMediaStorageConfigurationInput": {
            "type": "object",
            "properties": {
                "ChannelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "ChannelARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "DescribeMediaStorageConfigurationOutput": {
            "type": "object",
            "properties": {
                "MediaStorageConfiguration": {
                    "$ref": "#/$defs/MediaStorageConfiguration"
                }
            }
        },
        "MediaStorageConfiguration": {
            "type": "object",
            "properties": {
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "Status": {
                    "$ref": "#/$defs/MediaStorageConfigurationStatus"
                }
            }
        },
        "MediaStorageConfigurationStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "DescribeNotificationConfigurationInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "DescribeNotificationConfigurationOutput": {
            "type": "object",
            "properties": {
                "NotificationConfiguration": {
                    "$ref": "#/$defs/NotificationConfiguration"
                }
            }
        },
        "NotificationConfiguration": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ConfigurationStatus"
                },
                "DestinationConfig": {
                    "$ref": "#/$defs/NotificationDestinationConfig"
                }
            }
        },
        "NotificationDestinationConfig": {
            "type": "object",
            "properties": {
                "Uri": {
                    "$ref": "#/$defs/DestinationUri"
                }
            }
        },
        "DescribeSignalingChannelInput": {
            "type": "object",
            "properties": {
                "ChannelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "ChannelARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "DescribeSignalingChannelOutput": {
            "type": "object",
            "properties": {
                "ChannelInfo": {
                    "$ref": "#/$defs/ChannelInfo"
                }
            }
        },
        "ChannelInfo": {
            "type": "object",
            "properties": {
                "ChannelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "ChannelARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "ChannelType": {
                    "$ref": "#/$defs/ChannelType"
                },
                "ChannelStatus": {
                    "$ref": "#/$defs/Status"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "SingleMasterConfiguration": {
                    "$ref": "#/$defs/SingleMasterConfiguration"
                },
                "Version": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "Status": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "UPDATING",
                "DELETING"
            ]
        },
        "DescribeStreamInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "DescribeStreamOutput": {
            "type": "object",
            "properties": {
                "StreamInfo": {
                    "$ref": "#/$defs/StreamInfo"
                }
            }
        },
        "StreamInfo": {
            "type": "object",
            "properties": {
                "DeviceName": {
                    "$ref": "#/$defs/DeviceName"
                },
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "MediaType": {
                    "$ref": "#/$defs/MediaType"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "Version": {
                    "$ref": "#/$defs/Version"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DataRetentionInHours": {
                    "$ref": "#/$defs/DataRetentionInHours"
                }
            }
        },
        "GetDataEndpointInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "APIName": {
                    "$ref": "#/$defs/APIName"
                }
            }
        },
        "APIName": {
            "enum": [
                "PUT_MEDIA",
                "GET_MEDIA",
                "LIST_FRAGMENTS",
                "GET_MEDIA_FOR_FRAGMENT_LIST",
                "GET_HLS_STREAMING_SESSION_URL",
                "GET_DASH_STREAMING_SESSION_URL",
                "GET_CLIP",
                "GET_IMAGES"
            ]
        },
        "GetDataEndpointOutput": {
            "type": "object",
            "properties": {
                "DataEndpoint": {
                    "$ref": "#/$defs/DataEndpoint"
                }
            }
        },
        "DataEndpoint": {
            "type": "string"
        },
        "GetSignalingChannelEndpointInput": {
            "type": "object",
            "properties": {
                "ChannelARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "SingleMasterChannelEndpointConfiguration": {
                    "$ref": "#/$defs/SingleMasterChannelEndpointConfiguration"
                }
            }
        },
        "SingleMasterChannelEndpointConfiguration": {
            "type": "object",
            "properties": {
                "Protocols": {
                    "$ref": "#/$defs/ListOfProtocols"
                },
                "Role": {
                    "$ref": "#/$defs/ChannelRole"
                }
            }
        },
        "ListOfProtocols": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChannelProtocol"
            }
        },
        "ChannelProtocol": {
            "enum": [
                "WSS",
                "HTTPS",
                "WEBRTC"
            ]
        },
        "ChannelRole": {
            "enum": [
                "MASTER",
                "VIEWER"
            ]
        },
        "GetSignalingChannelEndpointOutput": {
            "type": "object",
            "properties": {
                "ResourceEndpointList": {
                    "$ref": "#/$defs/ResourceEndpointList"
                }
            }
        },
        "ResourceEndpointList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceEndpointListItem"
            }
        },
        "ResourceEndpointListItem": {
            "type": "object",
            "properties": {
                "Protocol": {
                    "$ref": "#/$defs/ChannelProtocol"
                },
                "ResourceEndpoint": {
                    "$ref": "#/$defs/ResourceEndpoint"
                }
            }
        },
        "ResourceEndpoint": {
            "type": "string"
        },
        "ListEdgeAgentConfigurationsInput": {
            "type": "object",
            "properties": {
                "HubDeviceArn": {
                    "$ref": "#/$defs/HubDeviceArn"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListEdgeAgentConfigurationsInputLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListEdgeAgentConfigurationsInputLimit": {
            "type": "integer",
            "format": "int32"
        },
        "ListEdgeAgentConfigurationsOutput": {
            "type": "object",
            "properties": {
                "EdgeConfigs": {
                    "$ref": "#/$defs/ListEdgeAgentConfigurationsEdgeConfigList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListEdgeAgentConfigurationsEdgeConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListEdgeAgentConfigurationsEdgeConfig"
            }
        },
        "ListEdgeAgentConfigurationsEdgeConfig": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "SyncStatus": {
                    "$ref": "#/$defs/SyncStatus"
                },
                "FailedStatusDetails": {
                    "$ref": "#/$defs/FailedStatusDetails"
                },
                "EdgeConfig": {
                    "$ref": "#/$defs/EdgeConfig"
                }
            }
        },
        "ListSignalingChannelsInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListStreamsInputLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ChannelNameCondition": {
                    "$ref": "#/$defs/ChannelNameCondition"
                }
            }
        },
        "ListStreamsInputLimit": {
            "type": "integer",
            "format": "int32"
        },
        "ChannelNameCondition": {
            "type": "object",
            "properties": {
                "ComparisonOperator": {
                    "$ref": "#/$defs/ComparisonOperator"
                },
                "ComparisonValue": {
                    "$ref": "#/$defs/ChannelName"
                }
            }
        },
        "ComparisonOperator": {
            "enum": [
                "BEGINS_WITH"
            ]
        },
        "ListSignalingChannelsOutput": {
            "type": "object",
            "properties": {
                "ChannelInfoList": {
                    "$ref": "#/$defs/ChannelInfoList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ChannelInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChannelInfo"
            }
        },
        "ListStreamsInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListStreamsInputLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "StreamNameCondition": {
                    "$ref": "#/$defs/StreamNameCondition"
                }
            }
        },
        "StreamNameCondition": {
            "type": "object",
            "properties": {
                "ComparisonOperator": {
                    "$ref": "#/$defs/ComparisonOperator"
                },
                "ComparisonValue": {
                    "$ref": "#/$defs/StreamName"
                }
            }
        },
        "ListStreamsOutput": {
            "type": "object",
            "properties": {
                "StreamInfoList": {
                    "$ref": "#/$defs/StreamInfoList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "StreamInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StreamInfo"
            }
        },
        "ListTagsForResourceInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "ListTagsForResourceOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Tags": {
                    "$ref": "#/$defs/ResourceTags"
                }
            }
        },
        "ListTagsForStreamInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                }
            }
        },
        "ListTagsForStreamOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Tags": {
                    "$ref": "#/$defs/ResourceTags"
                }
            }
        },
        "StartEdgeConfigurationUpdateInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "EdgeConfig": {
                    "$ref": "#/$defs/EdgeConfig"
                }
            }
        },
        "StartEdgeConfigurationUpdateOutput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "SyncStatus": {
                    "$ref": "#/$defs/SyncStatus"
                },
                "FailedStatusDetails": {
                    "$ref": "#/$defs/FailedStatusDetails"
                },
                "EdgeConfig": {
                    "$ref": "#/$defs/EdgeConfig"
                }
            }
        },
        "TagResourceInput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "TagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "TagStreamInput": {
            "type": "object",
            "properties": {
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "Tags": {
                    "$ref": "#/$defs/ResourceTags"
                }
            }
        },
        "TagStreamOutput": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceInput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "TagKeyList": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UntagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "UntagStreamInput": {
            "type": "object",
            "properties": {
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "TagKeyList": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "UntagStreamOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateDataRetentionInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/Version"
                },
                "Operation": {
                    "$ref": "#/$defs/UpdateDataRetentionOperation"
                },
                "DataRetentionChangeInHours": {
                    "$ref": "#/$defs/DataRetentionChangeInHours"
                }
            }
        },
        "UpdateDataRetentionOperation": {
            "enum": [
                "INCREASE_DATA_RETENTION",
                "DECREASE_DATA_RETENTION"
            ]
        },
        "DataRetentionChangeInHours": {
            "type": "integer",
            "format": "int32"
        },
        "UpdateDataRetentionOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateImageGenerationConfigurationInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "ImageGenerationConfiguration": {
                    "$ref": "#/$defs/ImageGenerationConfiguration"
                }
            }
        },
        "UpdateImageGenerationConfigurationOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateMediaStorageConfigurationInput": {
            "type": "object",
            "properties": {
                "ChannelARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "MediaStorageConfiguration": {
                    "$ref": "#/$defs/MediaStorageConfiguration"
                }
            }
        },
        "UpdateMediaStorageConfigurationOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateNotificationConfigurationInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "NotificationConfiguration": {
                    "$ref": "#/$defs/NotificationConfiguration"
                }
            }
        },
        "UpdateNotificationConfigurationOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateSignalingChannelInput": {
            "type": "object",
            "properties": {
                "ChannelARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/Version"
                },
                "SingleMasterConfiguration": {
                    "$ref": "#/$defs/SingleMasterConfiguration"
                }
            }
        },
        "UpdateSignalingChannelOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateStreamInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/Version"
                },
                "DeviceName": {
                    "$ref": "#/$defs/DeviceName"
                },
                "MediaType": {
                    "$ref": "#/$defs/MediaType"
                }
            }
        },
        "UpdateStreamOutput": {
            "type": "object",
            "properties": {}
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://kinesisvideo-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://kinesisvideo-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://kinesisvideo.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://kinesisvideo.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
