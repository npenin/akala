{
    "name": "ses",
    "commands": [
        {
            "name": "BatchGetMetricData",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/metrics/batch"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetMetricDataResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetMetricDataRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CancelExportJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "JobId": "route.JobId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/export-jobs/{JobId}/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelExportJobResponse"
                    },
                    "inject": [
                        "param.0.JobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelExportJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateConfigurationSet",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/configuration-sets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateConfigurationSetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateConfigurationSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateConfigurationSetEventDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateConfigurationSetEventDestinationResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateConfigurationSetEventDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateContact",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ContactListName": "route.ContactListName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v2/email/contact-lists/{ContactListName}/contacts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateContactResponse"
                    },
                    "inject": [
                        "param.0.ContactListName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateContactRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateContactList",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/contact-lists"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateContactListResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateContactListRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateCustomVerificationEmailTemplate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/custom-verification-email-templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCustomVerificationEmailTemplateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCustomVerificationEmailTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateDedicatedIpPool",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/dedicated-ip-pools"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDedicatedIpPoolResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDedicatedIpPoolRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateDeliverabilityTestReport",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/deliverability-dashboard/test"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDeliverabilityTestReportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDeliverabilityTestReportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateEmailIdentity",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/identities"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEmailIdentityResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateEmailIdentityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateEmailIdentityPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "PolicyName": "route.PolicyName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v2/email/identities/{EmailIdentity}/policies/{PolicyName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEmailIdentityPolicyResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0.PolicyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateEmailIdentityPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateEmailTemplate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEmailTemplateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateEmailTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateExportJob",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/export-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateExportJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateExportJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateImportJob",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/import-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateImportJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateImportJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateMultiRegionEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/multi-region-endpoints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMultiRegionEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMultiRegionEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteConfigurationSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteConfigurationSetResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteConfigurationSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteConfigurationSetEventDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "EventDestinationName": "route.EventDestinationName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteConfigurationSetEventDestinationResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0.EventDestinationName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteConfigurationSetEventDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteContact",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ContactListName": "route.ContactListName",
                            "EmailAddress": "route.EmailAddress",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteContactResponse"
                    },
                    "inject": [
                        "param.0.ContactListName",
                        "param.0.EmailAddress",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteContactRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteContactList",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ContactListName": "route.ContactListName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v2/email/contact-lists/{ContactListName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteContactListResponse"
                    },
                    "inject": [
                        "param.0.ContactListName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteContactListRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteCustomVerificationEmailTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "TemplateName": "route.TemplateName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v2/email/custom-verification-email-templates/{TemplateName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCustomVerificationEmailTemplateResponse"
                    },
                    "inject": [
                        "param.0.TemplateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCustomVerificationEmailTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDedicatedIpPool",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PoolName": "route.PoolName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v2/email/dedicated-ip-pools/{PoolName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDedicatedIpPoolResponse"
                    },
                    "inject": [
                        "param.0.PoolName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDedicatedIpPoolRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteEmailIdentity",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v2/email/identities/{EmailIdentity}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEmailIdentityResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEmailIdentityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteEmailIdentityPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "PolicyName": "route.PolicyName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v2/email/identities/{EmailIdentity}/policies/{PolicyName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEmailIdentityPolicyResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0.PolicyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEmailIdentityPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteEmailTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "TemplateName": "route.TemplateName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v2/email/templates/{TemplateName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEmailTemplateResponse"
                    },
                    "inject": [
                        "param.0.TemplateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEmailTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMultiRegionEndpoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EndpointName": "route.EndpointName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v2/email/multi-region-endpoints/{EndpointName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMultiRegionEndpointResponse"
                    },
                    "inject": [
                        "param.0.EndpointName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMultiRegionEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSuppressedDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailAddress": "route.EmailAddress",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v2/email/suppression/addresses/{EmailAddress}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSuppressedDestinationResponse"
                    },
                    "inject": [
                        "param.0.EmailAddress",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSuppressedDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetAccount",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/account"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetBlacklistReports",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/deliverability-dashboard/blacklist-report"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBlacklistReportsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBlacklistReportsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetConfigurationSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConfigurationSetResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConfigurationSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetConfigurationSetEventDestinations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConfigurationSetEventDestinationsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConfigurationSetEventDestinationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetContact",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ContactListName": "route.ContactListName",
                            "EmailAddress": "route.EmailAddress",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetContactResponse"
                    },
                    "inject": [
                        "param.0.ContactListName",
                        "param.0.EmailAddress",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContactRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetContactList",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ContactListName": "route.ContactListName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/contact-lists/{ContactListName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetContactListResponse"
                    },
                    "inject": [
                        "param.0.ContactListName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContactListRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetCustomVerificationEmailTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "TemplateName": "route.TemplateName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/custom-verification-email-templates/{TemplateName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCustomVerificationEmailTemplateResponse"
                    },
                    "inject": [
                        "param.0.TemplateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCustomVerificationEmailTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDedicatedIp",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Ip": "route.Ip",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/dedicated-ips/{Ip}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDedicatedIpResponse"
                    },
                    "inject": [
                        "param.0.Ip",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDedicatedIpRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDedicatedIpPool",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PoolName": "route.PoolName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/dedicated-ip-pools/{PoolName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDedicatedIpPoolResponse"
                    },
                    "inject": [
                        "param.0.PoolName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDedicatedIpPoolRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDedicatedIps",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/dedicated-ips"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDedicatedIpsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDedicatedIpsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDeliverabilityDashboardOptions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/deliverability-dashboard"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDeliverabilityDashboardOptionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDeliverabilityDashboardOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDeliverabilityTestReport",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReportId": "route.ReportId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/deliverability-dashboard/test-reports/{ReportId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDeliverabilityTestReportResponse"
                    },
                    "inject": [
                        "param.0.ReportId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDeliverabilityTestReportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDomainDeliverabilityCampaign",
            "config": {
                "http": {
                    "inject": [
                        {
                            "CampaignId": "route.CampaignId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/deliverability-dashboard/campaigns/{CampaignId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDomainDeliverabilityCampaignResponse"
                    },
                    "inject": [
                        "param.0.CampaignId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDomainDeliverabilityCampaignRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDomainStatisticsReport",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Domain": "route.Domain",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/deliverability-dashboard/statistics-report/{Domain}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDomainStatisticsReportResponse"
                    },
                    "inject": [
                        "param.0.Domain",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDomainStatisticsReportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetEmailIdentity",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/identities/{EmailIdentity}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEmailIdentityResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEmailIdentityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetEmailIdentityPolicies",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/identities/{EmailIdentity}/policies"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEmailIdentityPoliciesResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEmailIdentityPoliciesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetEmailTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "TemplateName": "route.TemplateName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/templates/{TemplateName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEmailTemplateResponse"
                    },
                    "inject": [
                        "param.0.TemplateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEmailTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetExportJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "JobId": "route.JobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/export-jobs/{JobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetExportJobResponse"
                    },
                    "inject": [
                        "param.0.JobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetExportJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetImportJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "JobId": "route.JobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/import-jobs/{JobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetImportJobResponse"
                    },
                    "inject": [
                        "param.0.JobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetImportJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetMessageInsights",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MessageId": "route.MessageId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/insights/{MessageId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMessageInsightsResponse"
                    },
                    "inject": [
                        "param.0.MessageId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMessageInsightsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetMultiRegionEndpoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EndpointName": "route.EndpointName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/multi-region-endpoints/{EndpointName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMultiRegionEndpointResponse"
                    },
                    "inject": [
                        "param.0.EndpointName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMultiRegionEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetSuppressedDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailAddress": "route.EmailAddress",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/suppression/addresses/{EmailAddress}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSuppressedDestinationResponse"
                    },
                    "inject": [
                        "param.0.EmailAddress",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSuppressedDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListConfigurationSets",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/configuration-sets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListConfigurationSetsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListConfigurationSetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListContactLists",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/contact-lists"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListContactListsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListContactListsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListContacts",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ContactListName": "route.ContactListName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v2/email/contact-lists/{ContactListName}/contacts/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListContactsResponse"
                    },
                    "inject": [
                        "param.0.ContactListName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListContactsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCustomVerificationEmailTemplates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/custom-verification-email-templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCustomVerificationEmailTemplatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCustomVerificationEmailTemplatesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListDedicatedIpPools",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/dedicated-ip-pools"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDedicatedIpPoolsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDedicatedIpPoolsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListDeliverabilityTestReports",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/deliverability-dashboard/test-reports"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDeliverabilityTestReportsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDeliverabilityTestReportsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListDomainDeliverabilityCampaigns",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SubscribedDomain": "route.SubscribedDomain",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v2/email/deliverability-dashboard/domains/{SubscribedDomain}/campaigns"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDomainDeliverabilityCampaignsResponse"
                    },
                    "inject": [
                        "param.0.SubscribedDomain",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDomainDeliverabilityCampaignsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListEmailIdentities",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/identities"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEmailIdentitiesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEmailIdentitiesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListEmailTemplates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEmailTemplatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEmailTemplatesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListExportJobs",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/list-export-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListExportJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListExportJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListImportJobs",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/import-jobs/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListImportJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListImportJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListMultiRegionEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/multi-region-endpoints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMultiRegionEndpointsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMultiRegionEndpointsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/vdm/recommendations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRecommendationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListSuppressedDestinations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/suppression/addresses"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSuppressedDestinationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSuppressedDestinationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2/email/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutAccountDedicatedIpWarmupAttributes",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/v2/email/account/dedicated-ips/warmup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAccountDedicatedIpWarmupAttributesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAccountDedicatedIpWarmupAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutAccountDetails",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/account/details"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAccountDetailsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAccountDetailsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutAccountSendingAttributes",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/v2/email/account/sending"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAccountSendingAttributesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAccountSendingAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutAccountSuppressionAttributes",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/v2/email/account/suppression"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAccountSuppressionAttributesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAccountSuppressionAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutAccountVdmAttributes",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/v2/email/account/vdm"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAccountVdmAttributesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAccountVdmAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutConfigurationSetArchivingOptions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}/archiving-options"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutConfigurationSetArchivingOptionsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutConfigurationSetArchivingOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutConfigurationSetDeliveryOptions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}/delivery-options"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutConfigurationSetDeliveryOptionsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutConfigurationSetDeliveryOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutConfigurationSetReputationOptions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}/reputation-options"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutConfigurationSetReputationOptionsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutConfigurationSetReputationOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutConfigurationSetSendingOptions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}/sending"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutConfigurationSetSendingOptionsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutConfigurationSetSendingOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutConfigurationSetSuppressionOptions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}/suppression-options"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutConfigurationSetSuppressionOptionsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutConfigurationSetSuppressionOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutConfigurationSetTrackingOptions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}/tracking-options"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutConfigurationSetTrackingOptionsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutConfigurationSetTrackingOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutConfigurationSetVdmOptions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}/vdm-options"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutConfigurationSetVdmOptionsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutConfigurationSetVdmOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutDedicatedIpInPool",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Ip": "route.Ip",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/dedicated-ips/{Ip}/pool"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutDedicatedIpInPoolResponse"
                    },
                    "inject": [
                        "param.0.Ip",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutDedicatedIpInPoolRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutDedicatedIpPoolScalingAttributes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PoolName": "route.PoolName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/dedicated-ip-pools/{PoolName}/scaling"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutDedicatedIpPoolScalingAttributesResponse"
                    },
                    "inject": [
                        "param.0.PoolName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutDedicatedIpPoolScalingAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutDedicatedIpWarmupAttributes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Ip": "route.Ip",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/dedicated-ips/{Ip}/warmup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutDedicatedIpWarmupAttributesResponse"
                    },
                    "inject": [
                        "param.0.Ip",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutDedicatedIpWarmupAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutDeliverabilityDashboardOption",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/v2/email/deliverability-dashboard"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutDeliverabilityDashboardOptionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutDeliverabilityDashboardOptionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutEmailIdentityConfigurationSetAttributes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/identities/{EmailIdentity}/configuration-set"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEmailIdentityConfigurationSetAttributesResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutEmailIdentityConfigurationSetAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutEmailIdentityDkimAttributes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/identities/{EmailIdentity}/dkim"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEmailIdentityDkimAttributesResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutEmailIdentityDkimAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutEmailIdentityDkimSigningAttributes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/email/identities/{EmailIdentity}/dkim/signing"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEmailIdentityDkimSigningAttributesResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutEmailIdentityDkimSigningAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutEmailIdentityFeedbackAttributes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/identities/{EmailIdentity}/feedback"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEmailIdentityFeedbackAttributesResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutEmailIdentityFeedbackAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutEmailIdentityMailFromAttributes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/identities/{EmailIdentity}/mail-from"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEmailIdentityMailFromAttributesResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutEmailIdentityMailFromAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutSuppressedDestination",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/v2/email/suppression/addresses"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutSuppressedDestinationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutSuppressedDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "SendBulkEmail",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/outbound-bulk-emails"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendBulkEmailResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendBulkEmailRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "SendCustomVerificationEmail",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/outbound-custom-verification-emails"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendCustomVerificationEmailResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendCustomVerificationEmailRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "SendEmail",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/outbound-emails"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendEmailResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendEmailRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2/email/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TestRenderEmailTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "TemplateName": "route.TemplateName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v2/email/templates/{TemplateName}/render"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestRenderEmailTemplateResponse"
                    },
                    "inject": [
                        "param.0.TemplateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestRenderEmailTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/v2/email/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateConfigurationSetEventDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "EventDestinationName": "route.EventDestinationName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateConfigurationSetEventDestinationResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0.EventDestinationName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateConfigurationSetEventDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateContact",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ContactListName": "route.ContactListName",
                            "EmailAddress": "route.EmailAddress",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateContactResponse"
                    },
                    "inject": [
                        "param.0.ContactListName",
                        "param.0.EmailAddress",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateContactRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateContactList",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ContactListName": "route.ContactListName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/contact-lists/{ContactListName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateContactListResponse"
                    },
                    "inject": [
                        "param.0.ContactListName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateContactListRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateCustomVerificationEmailTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "TemplateName": "route.TemplateName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/custom-verification-email-templates/{TemplateName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCustomVerificationEmailTemplateResponse"
                    },
                    "inject": [
                        "param.0.TemplateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCustomVerificationEmailTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateEmailIdentityPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "PolicyName": "route.PolicyName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/identities/{EmailIdentity}/policies/{PolicyName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEmailIdentityPolicyResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0.PolicyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateEmailIdentityPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateEmailTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "TemplateName": "route.TemplateName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v2/email/templates/{TemplateName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEmailTemplateResponse"
                    },
                    "inject": [
                        "param.0.TemplateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateEmailTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchGetMetricDataResponse": {
            "type": "object",
            "properties": {
                "Results": {
                    "$ref": "#/$defs/MetricDataResultList"
                },
                "Errors": {
                    "$ref": "#/$defs/MetricDataErrorList"
                }
            }
        },
        "MetricDataResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricDataResult"
            }
        },
        "MetricDataResult": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/QueryIdentifier"
                },
                "Timestamps": {
                    "$ref": "#/$defs/TimestampList"
                },
                "Values": {
                    "$ref": "#/$defs/MetricValueList"
                }
            }
        },
        "QueryIdentifier": {
            "type": "string"
        },
        "TimestampList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Timestamp"
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "MetricValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Counter"
            }
        },
        "Counter": {
            "type": "integer",
            "format": "int64"
        },
        "MetricDataErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricDataError"
            }
        },
        "MetricDataError": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/QueryIdentifier"
                },
                "Code": {
                    "$ref": "#/$defs/QueryErrorCode"
                },
                "Message": {
                    "$ref": "#/$defs/QueryErrorMessage"
                }
            }
        },
        "QueryErrorCode": {
            "enum": [
                "INTERNAL_FAILURE",
                "ACCESS_DENIED"
            ]
        },
        "QueryErrorMessage": {
            "type": "string"
        },
        "BatchGetMetricDataRequest": {
            "type": "object",
            "properties": {
                "Queries": {
                    "$ref": "#/$defs/BatchGetMetricDataQueries"
                }
            }
        },
        "BatchGetMetricDataQueries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetMetricDataQuery"
            }
        },
        "BatchGetMetricDataQuery": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/QueryIdentifier"
                },
                "Namespace": {
                    "$ref": "#/$defs/MetricNamespace"
                },
                "Metric": {
                    "$ref": "#/$defs/Metric"
                },
                "Dimensions": {
                    "$ref": "#/$defs/Dimensions"
                },
                "StartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "MetricNamespace": {
            "enum": [
                "VDM"
            ]
        },
        "Metric": {
            "enum": [
                "SEND",
                "COMPLAINT",
                "PERMANENT_BOUNCE",
                "TRANSIENT_BOUNCE",
                "OPEN",
                "CLICK",
                "DELIVERY",
                "DELIVERY_OPEN",
                "DELIVERY_CLICK",
                "DELIVERY_COMPLAINT"
            ]
        },
        "Dimensions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MetricDimensionValue"
            }
        },
        "MetricDimensionValue": {
            "type": "string"
        },
        "CancelExportJobResponse": {
            "type": "object",
            "properties": {}
        },
        "CancelExportJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "JobId": {
            "type": "string"
        },
        "CreateConfigurationSetResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateConfigurationSetRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "TrackingOptions": {
                    "$ref": "#/$defs/TrackingOptions"
                },
                "DeliveryOptions": {
                    "$ref": "#/$defs/DeliveryOptions"
                },
                "ReputationOptions": {
                    "$ref": "#/$defs/ReputationOptions"
                },
                "SendingOptions": {
                    "$ref": "#/$defs/SendingOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SuppressionOptions": {
                    "$ref": "#/$defs/SuppressionOptions"
                },
                "VdmOptions": {
                    "$ref": "#/$defs/VdmOptions"
                },
                "ArchivingOptions": {
                    "$ref": "#/$defs/ArchivingOptions"
                }
            }
        },
        "ConfigurationSetName": {
            "type": "string"
        },
        "TrackingOptions": {
            "type": "object",
            "properties": {
                "CustomRedirectDomain": {
                    "$ref": "#/$defs/CustomRedirectDomain"
                },
                "HttpsPolicy": {
                    "$ref": "#/$defs/HttpsPolicy"
                }
            }
        },
        "CustomRedirectDomain": {
            "type": "string"
        },
        "HttpsPolicy": {
            "enum": [
                "REQUIRE",
                "REQUIRE_OPEN_ONLY",
                "OPTIONAL"
            ]
        },
        "DeliveryOptions": {
            "type": "object",
            "properties": {
                "TlsPolicy": {
                    "$ref": "#/$defs/TlsPolicy"
                },
                "SendingPoolName": {
                    "$ref": "#/$defs/PoolName"
                },
                "MaxDeliverySeconds": {
                    "$ref": "#/$defs/MaxDeliverySeconds"
                }
            }
        },
        "TlsPolicy": {
            "enum": [
                "REQUIRE",
                "OPTIONAL"
            ]
        },
        "PoolName": {
            "type": "string"
        },
        "MaxDeliverySeconds": {
            "type": "integer",
            "format": "int64"
        },
        "ReputationOptions": {
            "type": "object",
            "properties": {
                "ReputationMetricsEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "LastFreshStart": {
                    "$ref": "#/$defs/LastFreshStart"
                }
            }
        },
        "Enabled": {
            "type": "boolean"
        },
        "LastFreshStart": {
            "type": "string",
            "format": "date-time"
        },
        "SendingOptions": {
            "type": "object",
            "properties": {
                "SendingEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "SuppressionOptions": {
            "type": "object",
            "properties": {
                "SuppressedReasons": {
                    "$ref": "#/$defs/SuppressionListReasons"
                }
            }
        },
        "SuppressionListReasons": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SuppressionListReason"
            }
        },
        "SuppressionListReason": {
            "enum": [
                "BOUNCE",
                "COMPLAINT"
            ]
        },
        "VdmOptions": {
            "type": "object",
            "properties": {
                "DashboardOptions": {
                    "$ref": "#/$defs/DashboardOptions"
                },
                "GuardianOptions": {
                    "$ref": "#/$defs/GuardianOptions"
                }
            }
        },
        "DashboardOptions": {
            "type": "object",
            "properties": {
                "EngagementMetrics": {
                    "$ref": "#/$defs/FeatureStatus"
                }
            }
        },
        "FeatureStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "GuardianOptions": {
            "type": "object",
            "properties": {
                "OptimizedSharedDelivery": {
                    "$ref": "#/$defs/FeatureStatus"
                }
            }
        },
        "ArchivingOptions": {
            "type": "object",
            "properties": {
                "ArchiveArn": {
                    "$ref": "#/$defs/ArchiveArn"
                }
            }
        },
        "ArchiveArn": {
            "type": "string"
        },
        "CreateConfigurationSetEventDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateConfigurationSetEventDestinationRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "EventDestinationName": {
                    "$ref": "#/$defs/EventDestinationName"
                },
                "EventDestination": {
                    "$ref": "#/$defs/EventDestinationDefinition"
                }
            }
        },
        "EventDestinationName": {
            "type": "string"
        },
        "EventDestinationDefinition": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "MatchingEventTypes": {
                    "$ref": "#/$defs/EventTypes"
                },
                "KinesisFirehoseDestination": {
                    "$ref": "#/$defs/KinesisFirehoseDestination"
                },
                "CloudWatchDestination": {
                    "$ref": "#/$defs/CloudWatchDestination"
                },
                "SnsDestination": {
                    "$ref": "#/$defs/SnsDestination"
                },
                "EventBridgeDestination": {
                    "$ref": "#/$defs/EventBridgeDestination"
                },
                "PinpointDestination": {
                    "$ref": "#/$defs/PinpointDestination"
                }
            }
        },
        "EventTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventType"
            }
        },
        "EventType": {
            "enum": [
                "SEND",
                "REJECT",
                "BOUNCE",
                "COMPLAINT",
                "DELIVERY",
                "OPEN",
                "CLICK",
                "RENDERING_FAILURE",
                "DELIVERY_DELAY",
                "SUBSCRIPTION"
            ]
        },
        "KinesisFirehoseDestination": {
            "type": "object",
            "properties": {
                "IamRoleArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "DeliveryStreamArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "AmazonResourceName": {
            "type": "string"
        },
        "CloudWatchDestination": {
            "type": "object",
            "properties": {
                "DimensionConfigurations": {
                    "$ref": "#/$defs/CloudWatchDimensionConfigurations"
                }
            }
        },
        "CloudWatchDimensionConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudWatchDimensionConfiguration"
            }
        },
        "CloudWatchDimensionConfiguration": {
            "type": "object",
            "properties": {
                "DimensionName": {
                    "$ref": "#/$defs/DimensionName"
                },
                "DimensionValueSource": {
                    "$ref": "#/$defs/DimensionValueSource"
                },
                "DefaultDimensionValue": {
                    "$ref": "#/$defs/DefaultDimensionValue"
                }
            }
        },
        "DimensionName": {
            "type": "string"
        },
        "DimensionValueSource": {
            "enum": [
                "MESSAGE_TAG",
                "EMAIL_HEADER",
                "LINK_TAG"
            ]
        },
        "DefaultDimensionValue": {
            "type": "string"
        },
        "SnsDestination": {
            "type": "object",
            "properties": {
                "TopicArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "EventBridgeDestination": {
            "type": "object",
            "properties": {
                "EventBusArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "PinpointDestination": {
            "type": "object",
            "properties": {
                "ApplicationArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "CreateContactResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateContactRequest": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "TopicPreferences": {
                    "$ref": "#/$defs/TopicPreferenceList"
                },
                "UnsubscribeAll": {
                    "$ref": "#/$defs/UnsubscribeAll"
                },
                "AttributesData": {
                    "$ref": "#/$defs/AttributesData"
                }
            }
        },
        "ContactListName": {
            "type": "string"
        },
        "EmailAddress": {
            "type": "string"
        },
        "TopicPreferenceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TopicPreference"
            }
        },
        "TopicPreference": {
            "type": "object",
            "properties": {
                "TopicName": {
                    "$ref": "#/$defs/TopicName"
                },
                "SubscriptionStatus": {
                    "$ref": "#/$defs/SubscriptionStatus"
                }
            }
        },
        "TopicName": {
            "type": "string"
        },
        "SubscriptionStatus": {
            "enum": [
                "OPT_IN",
                "OPT_OUT"
            ]
        },
        "UnsubscribeAll": {
            "type": "boolean"
        },
        "AttributesData": {
            "type": "string"
        },
        "CreateContactListResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateContactListRequest": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                },
                "Topics": {
                    "$ref": "#/$defs/Topics"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "Topics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Topic"
            }
        },
        "Topic": {
            "type": "object",
            "properties": {
                "TopicName": {
                    "$ref": "#/$defs/TopicName"
                },
                "DisplayName": {
                    "$ref": "#/$defs/DisplayName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "DefaultSubscriptionStatus": {
                    "$ref": "#/$defs/SubscriptionStatus"
                }
            }
        },
        "DisplayName": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "CreateCustomVerificationEmailTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateCustomVerificationEmailTemplateRequest": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                },
                "FromEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "TemplateSubject": {
                    "$ref": "#/$defs/EmailTemplateSubject"
                },
                "TemplateContent": {
                    "$ref": "#/$defs/TemplateContent"
                },
                "SuccessRedirectionURL": {
                    "$ref": "#/$defs/SuccessRedirectionURL"
                },
                "FailureRedirectionURL": {
                    "$ref": "#/$defs/FailureRedirectionURL"
                }
            }
        },
        "EmailTemplateName": {
            "type": "string"
        },
        "EmailTemplateSubject": {
            "type": "string"
        },
        "TemplateContent": {
            "type": "string"
        },
        "SuccessRedirectionURL": {
            "type": "string"
        },
        "FailureRedirectionURL": {
            "type": "string"
        },
        "CreateDedicatedIpPoolResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateDedicatedIpPoolRequest": {
            "type": "object",
            "properties": {
                "PoolName": {
                    "$ref": "#/$defs/PoolName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ScalingMode": {
                    "$ref": "#/$defs/ScalingMode"
                }
            }
        },
        "ScalingMode": {
            "enum": [
                "STANDARD",
                "MANAGED"
            ]
        },
        "CreateDeliverabilityTestReportResponse": {
            "type": "object",
            "properties": {
                "ReportId": {
                    "$ref": "#/$defs/ReportId"
                },
                "DeliverabilityTestStatus": {
                    "$ref": "#/$defs/DeliverabilityTestStatus"
                }
            }
        },
        "ReportId": {
            "type": "string"
        },
        "DeliverabilityTestStatus": {
            "enum": [
                "IN_PROGRESS",
                "COMPLETED"
            ]
        },
        "CreateDeliverabilityTestReportRequest": {
            "type": "object",
            "properties": {
                "ReportName": {
                    "$ref": "#/$defs/ReportName"
                },
                "FromEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "Content": {
                    "$ref": "#/$defs/EmailContent"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ReportName": {
            "type": "string"
        },
        "EmailContent": {
            "type": "object",
            "properties": {
                "Simple": {
                    "$ref": "#/$defs/Message"
                },
                "Raw": {
                    "$ref": "#/$defs/RawMessage"
                },
                "Template": {
                    "$ref": "#/$defs/Template"
                }
            }
        },
        "Message": {
            "type": "object",
            "properties": {
                "Subject": {
                    "$ref": "#/$defs/Content"
                },
                "Body": {
                    "$ref": "#/$defs/Body"
                },
                "Headers": {
                    "$ref": "#/$defs/MessageHeaderList"
                }
            }
        },
        "Content": {
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/$defs/MessageData"
                },
                "Charset": {
                    "$ref": "#/$defs/Charset"
                }
            }
        },
        "MessageData": {
            "type": "string"
        },
        "Charset": {
            "type": "string"
        },
        "Body": {
            "type": "object",
            "properties": {
                "Text": {
                    "$ref": "#/$defs/Content"
                },
                "Html": {
                    "$ref": "#/$defs/Content"
                }
            }
        },
        "MessageHeaderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MessageHeader"
            }
        },
        "MessageHeader": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/MessageHeaderName"
                },
                "Value": {
                    "$ref": "#/$defs/MessageHeaderValue"
                }
            }
        },
        "MessageHeaderName": {
            "type": "string"
        },
        "MessageHeaderValue": {
            "type": "string"
        },
        "RawMessage": {
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/$defs/RawMessageData"
                }
            }
        },
        "RawMessageData": {
            "type": "string",
            "format": "binary"
        },
        "Template": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                },
                "TemplateArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "TemplateContent": {
                    "$ref": "#/$defs/EmailTemplateContent"
                },
                "TemplateData": {
                    "$ref": "#/$defs/EmailTemplateData"
                },
                "Headers": {
                    "$ref": "#/$defs/MessageHeaderList"
                }
            }
        },
        "EmailTemplateContent": {
            "type": "object",
            "properties": {
                "Subject": {
                    "$ref": "#/$defs/EmailTemplateSubject"
                },
                "Text": {
                    "$ref": "#/$defs/EmailTemplateText"
                },
                "Html": {
                    "$ref": "#/$defs/EmailTemplateHtml"
                }
            }
        },
        "EmailTemplateText": {
            "type": "string"
        },
        "EmailTemplateHtml": {
            "type": "string"
        },
        "EmailTemplateData": {
            "type": "string"
        },
        "CreateEmailIdentityResponse": {
            "type": "object",
            "properties": {
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                },
                "VerifiedForSendingStatus": {
                    "$ref": "#/$defs/Enabled"
                },
                "DkimAttributes": {
                    "$ref": "#/$defs/DkimAttributes"
                }
            }
        },
        "IdentityType": {
            "enum": [
                "EMAIL_ADDRESS",
                "DOMAIN",
                "MANAGED_DOMAIN"
            ]
        },
        "DkimAttributes": {
            "type": "object",
            "properties": {
                "SigningEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "Status": {
                    "$ref": "#/$defs/DkimStatus"
                },
                "Tokens": {
                    "$ref": "#/$defs/DnsTokenList"
                },
                "SigningAttributesOrigin": {
                    "$ref": "#/$defs/DkimSigningAttributesOrigin"
                },
                "NextSigningKeyLength": {
                    "$ref": "#/$defs/DkimSigningKeyLength"
                },
                "CurrentSigningKeyLength": {
                    "$ref": "#/$defs/DkimSigningKeyLength"
                },
                "LastKeyGenerationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DkimStatus": {
            "enum": [
                "PENDING",
                "SUCCESS",
                "FAILED",
                "TEMPORARY_FAILURE",
                "NOT_STARTED"
            ]
        },
        "DnsTokenList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DnsToken"
            }
        },
        "DnsToken": {
            "type": "string"
        },
        "DkimSigningAttributesOrigin": {
            "enum": [
                "AWS_SES",
                "EXTERNAL",
                "AWS_SES_AF_SOUTH_1",
                "AWS_SES_EU_NORTH_1",
                "AWS_SES_AP_SOUTH_1",
                "AWS_SES_EU_WEST_3",
                "AWS_SES_EU_WEST_2",
                "AWS_SES_EU_SOUTH_1",
                "AWS_SES_EU_WEST_1",
                "AWS_SES_AP_NORTHEAST_3",
                "AWS_SES_AP_NORTHEAST_2",
                "AWS_SES_ME_SOUTH_1",
                "AWS_SES_AP_NORTHEAST_1",
                "AWS_SES_IL_CENTRAL_1",
                "AWS_SES_SA_EAST_1",
                "AWS_SES_CA_CENTRAL_1",
                "AWS_SES_AP_SOUTHEAST_1",
                "AWS_SES_AP_SOUTHEAST_2",
                "AWS_SES_AP_SOUTHEAST_3",
                "AWS_SES_EU_CENTRAL_1",
                "AWS_SES_US_EAST_1",
                "AWS_SES_US_EAST_2",
                "AWS_SES_US_WEST_1",
                "AWS_SES_US_WEST_2"
            ]
        },
        "DkimSigningKeyLength": {
            "enum": [
                "RSA_1024_BIT",
                "RSA_2048_BIT"
            ]
        },
        "CreateEmailIdentityRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "DkimSigningAttributes": {
                    "$ref": "#/$defs/DkimSigningAttributes"
                },
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                }
            }
        },
        "Identity": {
            "type": "string"
        },
        "DkimSigningAttributes": {
            "type": "object",
            "properties": {
                "DomainSigningSelector": {
                    "$ref": "#/$defs/Selector"
                },
                "DomainSigningPrivateKey": {
                    "$ref": "#/$defs/PrivateKey"
                },
                "NextSigningKeyLength": {
                    "$ref": "#/$defs/DkimSigningKeyLength"
                },
                "DomainSigningAttributesOrigin": {
                    "$ref": "#/$defs/DkimSigningAttributesOrigin"
                }
            }
        },
        "Selector": {
            "type": "string"
        },
        "PrivateKey": {
            "type": "string"
        },
        "CreateEmailIdentityPolicyResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateEmailIdentityPolicyRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "PolicyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "Policy": {
                    "$ref": "#/$defs/Policy"
                }
            }
        },
        "PolicyName": {
            "type": "string"
        },
        "Policy": {
            "type": "string"
        },
        "CreateEmailTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateEmailTemplateRequest": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                },
                "TemplateContent": {
                    "$ref": "#/$defs/EmailTemplateContent"
                }
            }
        },
        "CreateExportJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "CreateExportJobRequest": {
            "type": "object",
            "properties": {
                "ExportDataSource": {
                    "$ref": "#/$defs/ExportDataSource"
                },
                "ExportDestination": {
                    "$ref": "#/$defs/ExportDestination"
                }
            }
        },
        "ExportDataSource": {
            "type": "object",
            "properties": {
                "MetricsDataSource": {
                    "$ref": "#/$defs/MetricsDataSource"
                },
                "MessageInsightsDataSource": {
                    "$ref": "#/$defs/MessageInsightsDataSource"
                }
            }
        },
        "MetricsDataSource": {
            "type": "object",
            "properties": {
                "Dimensions": {
                    "$ref": "#/$defs/ExportDimensions"
                },
                "Namespace": {
                    "$ref": "#/$defs/MetricNamespace"
                },
                "Metrics": {
                    "$ref": "#/$defs/ExportMetrics"
                },
                "StartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ExportDimensions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ExportDimensionValue"
            }
        },
        "ExportDimensionValue": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricDimensionValue"
            }
        },
        "ExportMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportMetric"
            }
        },
        "ExportMetric": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/Metric"
                },
                "Aggregation": {
                    "$ref": "#/$defs/MetricAggregation"
                }
            }
        },
        "MetricAggregation": {
            "enum": [
                "RATE",
                "VOLUME"
            ]
        },
        "MessageInsightsDataSource": {
            "type": "object",
            "properties": {
                "StartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Include": {
                    "$ref": "#/$defs/MessageInsightsFilters"
                },
                "Exclude": {
                    "$ref": "#/$defs/MessageInsightsFilters"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MessageInsightsExportMaxResults"
                }
            }
        },
        "MessageInsightsFilters": {
            "type": "object",
            "properties": {
                "FromEmailAddress": {
                    "$ref": "#/$defs/EmailAddressFilterList"
                },
                "Destination": {
                    "$ref": "#/$defs/EmailAddressFilterList"
                },
                "Subject": {
                    "$ref": "#/$defs/EmailSubjectFilterList"
                },
                "Isp": {
                    "$ref": "#/$defs/IspFilterList"
                },
                "LastDeliveryEvent": {
                    "$ref": "#/$defs/LastDeliveryEventList"
                },
                "LastEngagementEvent": {
                    "$ref": "#/$defs/LastEngagementEventList"
                }
            }
        },
        "EmailAddressFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InsightsEmailAddress"
            }
        },
        "InsightsEmailAddress": {
            "type": "string"
        },
        "EmailSubjectFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EmailSubject"
            }
        },
        "EmailSubject": {
            "type": "string"
        },
        "IspFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Isp"
            }
        },
        "Isp": {
            "type": "string"
        },
        "LastDeliveryEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeliveryEventType"
            }
        },
        "DeliveryEventType": {
            "enum": [
                "SEND",
                "DELIVERY",
                "TRANSIENT_BOUNCE",
                "PERMANENT_BOUNCE",
                "UNDETERMINED_BOUNCE",
                "COMPLAINT"
            ]
        },
        "LastEngagementEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EngagementEventType"
            }
        },
        "EngagementEventType": {
            "enum": [
                "OPEN",
                "CLICK"
            ]
        },
        "MessageInsightsExportMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ExportDestination": {
            "type": "object",
            "properties": {
                "DataFormat": {
                    "$ref": "#/$defs/DataFormat"
                },
                "S3Url": {
                    "$ref": "#/$defs/S3Url"
                }
            }
        },
        "DataFormat": {
            "enum": [
                "CSV",
                "JSON"
            ]
        },
        "S3Url": {
            "type": "string"
        },
        "CreateImportJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "CreateImportJobRequest": {
            "type": "object",
            "properties": {
                "ImportDestination": {
                    "$ref": "#/$defs/ImportDestination"
                },
                "ImportDataSource": {
                    "$ref": "#/$defs/ImportDataSource"
                }
            }
        },
        "ImportDestination": {
            "type": "object",
            "properties": {
                "SuppressionListDestination": {
                    "$ref": "#/$defs/SuppressionListDestination"
                },
                "ContactListDestination": {
                    "$ref": "#/$defs/ContactListDestination"
                }
            }
        },
        "SuppressionListDestination": {
            "type": "object",
            "properties": {
                "SuppressionListImportAction": {
                    "$ref": "#/$defs/SuppressionListImportAction"
                }
            }
        },
        "SuppressionListImportAction": {
            "enum": [
                "DELETE",
                "PUT"
            ]
        },
        "ContactListDestination": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                },
                "ContactListImportAction": {
                    "$ref": "#/$defs/ContactListImportAction"
                }
            }
        },
        "ContactListImportAction": {
            "enum": [
                "DELETE",
                "PUT"
            ]
        },
        "ImportDataSource": {
            "type": "object",
            "properties": {
                "S3Url": {
                    "$ref": "#/$defs/S3Url"
                },
                "DataFormat": {
                    "$ref": "#/$defs/DataFormat"
                }
            }
        },
        "CreateMultiRegionEndpointResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "EndpointId": {
                    "$ref": "#/$defs/EndpointId"
                }
            }
        },
        "Status": {
            "enum": [
                "CREATING",
                "READY",
                "FAILED",
                "DELETING"
            ]
        },
        "EndpointId": {
            "type": "string"
        },
        "CreateMultiRegionEndpointRequest": {
            "type": "object",
            "properties": {
                "EndpointName": {
                    "$ref": "#/$defs/EndpointName"
                },
                "Details": {
                    "$ref": "#/$defs/Details"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "EndpointName": {
            "type": "string"
        },
        "Details": {
            "type": "object",
            "properties": {
                "RoutesDetails": {
                    "$ref": "#/$defs/RoutesDetails"
                }
            }
        },
        "RoutesDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RouteDetails"
            }
        },
        "RouteDetails": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/Region"
                }
            }
        },
        "Region": {
            "type": "string"
        },
        "DeleteConfigurationSetResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteConfigurationSetRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                }
            }
        },
        "DeleteConfigurationSetEventDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteConfigurationSetEventDestinationRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "EventDestinationName": {
                    "$ref": "#/$defs/EventDestinationName"
                }
            }
        },
        "DeleteContactResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteContactRequest": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                }
            }
        },
        "DeleteContactListResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteContactListRequest": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                }
            }
        },
        "DeleteCustomVerificationEmailTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteCustomVerificationEmailTemplateRequest": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                }
            }
        },
        "DeleteDedicatedIpPoolResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDedicatedIpPoolRequest": {
            "type": "object",
            "properties": {
                "PoolName": {
                    "$ref": "#/$defs/PoolName"
                }
            }
        },
        "DeleteEmailIdentityResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteEmailIdentityRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                }
            }
        },
        "DeleteEmailIdentityPolicyResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteEmailIdentityPolicyRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "PolicyName": {
                    "$ref": "#/$defs/PolicyName"
                }
            }
        },
        "DeleteEmailTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteEmailTemplateRequest": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                }
            }
        },
        "DeleteMultiRegionEndpointResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/Status"
                }
            }
        },
        "DeleteMultiRegionEndpointRequest": {
            "type": "object",
            "properties": {
                "EndpointName": {
                    "$ref": "#/$defs/EndpointName"
                }
            }
        },
        "DeleteSuppressedDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteSuppressedDestinationRequest": {
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                }
            }
        },
        "GetAccountResponse": {
            "type": "object",
            "properties": {
                "DedicatedIpAutoWarmupEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "EnforcementStatus": {
                    "$ref": "#/$defs/GeneralEnforcementStatus"
                },
                "ProductionAccessEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "SendQuota": {
                    "$ref": "#/$defs/SendQuota"
                },
                "SendingEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "SuppressionAttributes": {
                    "$ref": "#/$defs/SuppressionAttributes"
                },
                "Details": {
                    "$ref": "#/$defs/AccountDetails"
                },
                "VdmAttributes": {
                    "$ref": "#/$defs/VdmAttributes"
                }
            }
        },
        "GeneralEnforcementStatus": {
            "type": "string"
        },
        "SendQuota": {
            "type": "object",
            "properties": {
                "Max24HourSend": {
                    "$ref": "#/$defs/Max24HourSend"
                },
                "MaxSendRate": {
                    "$ref": "#/$defs/MaxSendRate"
                },
                "SentLast24Hours": {
                    "$ref": "#/$defs/SentLast24Hours"
                }
            }
        },
        "Max24HourSend": {
            "type": "number",
            "format": "double"
        },
        "MaxSendRate": {
            "type": "number",
            "format": "double"
        },
        "SentLast24Hours": {
            "type": "number",
            "format": "double"
        },
        "SuppressionAttributes": {
            "type": "object",
            "properties": {
                "SuppressedReasons": {
                    "$ref": "#/$defs/SuppressionListReasons"
                }
            }
        },
        "AccountDetails": {
            "type": "object",
            "properties": {
                "MailType": {
                    "$ref": "#/$defs/MailType"
                },
                "WebsiteURL": {
                    "$ref": "#/$defs/WebsiteURL"
                },
                "ContactLanguage": {
                    "$ref": "#/$defs/ContactLanguage"
                },
                "UseCaseDescription": {
                    "$ref": "#/$defs/UseCaseDescription"
                },
                "AdditionalContactEmailAddresses": {
                    "$ref": "#/$defs/AdditionalContactEmailAddresses"
                },
                "ReviewDetails": {
                    "$ref": "#/$defs/ReviewDetails"
                }
            }
        },
        "MailType": {
            "enum": [
                "MARKETING",
                "TRANSACTIONAL"
            ]
        },
        "WebsiteURL": {
            "type": "string"
        },
        "ContactLanguage": {
            "enum": [
                "EN",
                "JA"
            ]
        },
        "UseCaseDescription": {
            "type": "string"
        },
        "AdditionalContactEmailAddresses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AdditionalContactEmailAddress"
            }
        },
        "AdditionalContactEmailAddress": {
            "type": "string"
        },
        "ReviewDetails": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ReviewStatus"
                },
                "CaseId": {
                    "$ref": "#/$defs/CaseId"
                }
            }
        },
        "ReviewStatus": {
            "enum": [
                "PENDING",
                "FAILED",
                "GRANTED",
                "DENIED"
            ]
        },
        "CaseId": {
            "type": "string"
        },
        "VdmAttributes": {
            "type": "object",
            "properties": {
                "VdmEnabled": {
                    "$ref": "#/$defs/FeatureStatus"
                },
                "DashboardAttributes": {
                    "$ref": "#/$defs/DashboardAttributes"
                },
                "GuardianAttributes": {
                    "$ref": "#/$defs/GuardianAttributes"
                }
            }
        },
        "DashboardAttributes": {
            "type": "object",
            "properties": {
                "EngagementMetrics": {
                    "$ref": "#/$defs/FeatureStatus"
                }
            }
        },
        "GuardianAttributes": {
            "type": "object",
            "properties": {
                "OptimizedSharedDelivery": {
                    "$ref": "#/$defs/FeatureStatus"
                }
            }
        },
        "GetAccountRequest": {
            "type": "object",
            "properties": {}
        },
        "GetBlacklistReportsResponse": {
            "type": "object",
            "properties": {
                "BlacklistReport": {
                    "$ref": "#/$defs/BlacklistReport"
                }
            }
        },
        "BlacklistReport": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/BlacklistEntries"
            }
        },
        "BlacklistEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BlacklistEntry"
            }
        },
        "BlacklistEntry": {
            "type": "object",
            "properties": {
                "RblName": {
                    "$ref": "#/$defs/RblName"
                },
                "ListingTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Description": {
                    "$ref": "#/$defs/BlacklistingDescription"
                }
            }
        },
        "RblName": {
            "type": "string"
        },
        "BlacklistingDescription": {
            "type": "string"
        },
        "GetBlacklistReportsRequest": {
            "type": "object",
            "properties": {
                "BlacklistItemNames": {
                    "$ref": "#/$defs/BlacklistItemNames"
                }
            }
        },
        "BlacklistItemNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BlacklistItemName"
            }
        },
        "BlacklistItemName": {
            "type": "string"
        },
        "GetConfigurationSetResponse": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "TrackingOptions": {
                    "$ref": "#/$defs/TrackingOptions"
                },
                "DeliveryOptions": {
                    "$ref": "#/$defs/DeliveryOptions"
                },
                "ReputationOptions": {
                    "$ref": "#/$defs/ReputationOptions"
                },
                "SendingOptions": {
                    "$ref": "#/$defs/SendingOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SuppressionOptions": {
                    "$ref": "#/$defs/SuppressionOptions"
                },
                "VdmOptions": {
                    "$ref": "#/$defs/VdmOptions"
                },
                "ArchivingOptions": {
                    "$ref": "#/$defs/ArchivingOptions"
                }
            }
        },
        "GetConfigurationSetRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                }
            }
        },
        "GetConfigurationSetEventDestinationsResponse": {
            "type": "object",
            "properties": {
                "EventDestinations": {
                    "$ref": "#/$defs/EventDestinations"
                }
            }
        },
        "EventDestinations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventDestination"
            }
        },
        "EventDestination": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/EventDestinationName"
                },
                "Enabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "MatchingEventTypes": {
                    "$ref": "#/$defs/EventTypes"
                },
                "KinesisFirehoseDestination": {
                    "$ref": "#/$defs/KinesisFirehoseDestination"
                },
                "CloudWatchDestination": {
                    "$ref": "#/$defs/CloudWatchDestination"
                },
                "SnsDestination": {
                    "$ref": "#/$defs/SnsDestination"
                },
                "EventBridgeDestination": {
                    "$ref": "#/$defs/EventBridgeDestination"
                },
                "PinpointDestination": {
                    "$ref": "#/$defs/PinpointDestination"
                }
            }
        },
        "GetConfigurationSetEventDestinationsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                }
            }
        },
        "GetContactResponse": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "TopicPreferences": {
                    "$ref": "#/$defs/TopicPreferenceList"
                },
                "TopicDefaultPreferences": {
                    "$ref": "#/$defs/TopicPreferenceList"
                },
                "UnsubscribeAll": {
                    "$ref": "#/$defs/UnsubscribeAll"
                },
                "AttributesData": {
                    "$ref": "#/$defs/AttributesData"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "GetContactRequest": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                }
            }
        },
        "GetContactListResponse": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                },
                "Topics": {
                    "$ref": "#/$defs/Topics"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "GetContactListRequest": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                }
            }
        },
        "GetCustomVerificationEmailTemplateResponse": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                },
                "FromEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "TemplateSubject": {
                    "$ref": "#/$defs/EmailTemplateSubject"
                },
                "TemplateContent": {
                    "$ref": "#/$defs/TemplateContent"
                },
                "SuccessRedirectionURL": {
                    "$ref": "#/$defs/SuccessRedirectionURL"
                },
                "FailureRedirectionURL": {
                    "$ref": "#/$defs/FailureRedirectionURL"
                }
            }
        },
        "GetCustomVerificationEmailTemplateRequest": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                }
            }
        },
        "GetDedicatedIpResponse": {
            "type": "object",
            "properties": {
                "DedicatedIp": {
                    "$ref": "#/$defs/DedicatedIp"
                }
            }
        },
        "DedicatedIp": {
            "type": "object",
            "properties": {
                "Ip": {
                    "$ref": "#/$defs/Ip"
                },
                "WarmupStatus": {
                    "$ref": "#/$defs/WarmupStatus"
                },
                "WarmupPercentage": {
                    "$ref": "#/$defs/Percentage100Wrapper"
                },
                "PoolName": {
                    "$ref": "#/$defs/PoolName"
                }
            }
        },
        "Ip": {
            "type": "string"
        },
        "WarmupStatus": {
            "enum": [
                "IN_PROGRESS",
                "DONE"
            ]
        },
        "Percentage100Wrapper": {
            "type": "integer",
            "format": "int32"
        },
        "GetDedicatedIpRequest": {
            "type": "object",
            "properties": {
                "Ip": {
                    "$ref": "#/$defs/Ip"
                }
            }
        },
        "GetDedicatedIpPoolResponse": {
            "type": "object",
            "properties": {
                "DedicatedIpPool": {
                    "$ref": "#/$defs/DedicatedIpPool"
                }
            }
        },
        "DedicatedIpPool": {
            "type": "object",
            "properties": {
                "PoolName": {
                    "$ref": "#/$defs/PoolName"
                },
                "ScalingMode": {
                    "$ref": "#/$defs/ScalingMode"
                }
            }
        },
        "GetDedicatedIpPoolRequest": {
            "type": "object",
            "properties": {
                "PoolName": {
                    "$ref": "#/$defs/PoolName"
                }
            }
        },
        "GetDedicatedIpsResponse": {
            "type": "object",
            "properties": {
                "DedicatedIps": {
                    "$ref": "#/$defs/DedicatedIpList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DedicatedIpList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DedicatedIp"
            }
        },
        "NextToken": {
            "type": "string"
        },
        "GetDedicatedIpsRequest": {
            "type": "object",
            "properties": {
                "PoolName": {
                    "$ref": "#/$defs/PoolName"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "MaxItems": {
            "type": "integer",
            "format": "int32"
        },
        "GetDeliverabilityDashboardOptionsResponse": {
            "type": "object",
            "properties": {
                "DashboardEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "SubscriptionExpiryDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "AccountStatus": {
                    "$ref": "#/$defs/DeliverabilityDashboardAccountStatus"
                },
                "ActiveSubscribedDomains": {
                    "$ref": "#/$defs/DomainDeliverabilityTrackingOptions"
                },
                "PendingExpirationSubscribedDomains": {
                    "$ref": "#/$defs/DomainDeliverabilityTrackingOptions"
                }
            }
        },
        "DeliverabilityDashboardAccountStatus": {
            "enum": [
                "ACTIVE",
                "PENDING_EXPIRATION",
                "DISABLED"
            ]
        },
        "DomainDeliverabilityTrackingOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainDeliverabilityTrackingOption"
            }
        },
        "DomainDeliverabilityTrackingOption": {
            "type": "object",
            "properties": {
                "Domain": {
                    "$ref": "#/$defs/Domain"
                },
                "SubscriptionStartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "InboxPlacementTrackingOption": {
                    "$ref": "#/$defs/InboxPlacementTrackingOption"
                }
            }
        },
        "Domain": {
            "type": "string"
        },
        "InboxPlacementTrackingOption": {
            "type": "object",
            "properties": {
                "Global": {
                    "$ref": "#/$defs/Enabled"
                },
                "TrackedIsps": {
                    "$ref": "#/$defs/IspNameList"
                }
            }
        },
        "IspNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IspName"
            }
        },
        "IspName": {
            "type": "string"
        },
        "GetDeliverabilityDashboardOptionsRequest": {
            "type": "object",
            "properties": {}
        },
        "GetDeliverabilityTestReportResponse": {
            "type": "object",
            "properties": {
                "DeliverabilityTestReport": {
                    "$ref": "#/$defs/DeliverabilityTestReport"
                },
                "OverallPlacement": {
                    "$ref": "#/$defs/PlacementStatistics"
                },
                "IspPlacements": {
                    "$ref": "#/$defs/IspPlacements"
                },
                "Message": {
                    "$ref": "#/$defs/MessageContent"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DeliverabilityTestReport": {
            "type": "object",
            "properties": {
                "ReportId": {
                    "$ref": "#/$defs/ReportId"
                },
                "ReportName": {
                    "$ref": "#/$defs/ReportName"
                },
                "Subject": {
                    "$ref": "#/$defs/DeliverabilityTestSubject"
                },
                "FromEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "CreateDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DeliverabilityTestStatus": {
                    "$ref": "#/$defs/DeliverabilityTestStatus"
                }
            }
        },
        "DeliverabilityTestSubject": {
            "type": "string"
        },
        "PlacementStatistics": {
            "type": "object",
            "properties": {
                "InboxPercentage": {
                    "$ref": "#/$defs/Percentage"
                },
                "SpamPercentage": {
                    "$ref": "#/$defs/Percentage"
                },
                "MissingPercentage": {
                    "$ref": "#/$defs/Percentage"
                },
                "SpfPercentage": {
                    "$ref": "#/$defs/Percentage"
                },
                "DkimPercentage": {
                    "$ref": "#/$defs/Percentage"
                }
            }
        },
        "Percentage": {
            "type": "number",
            "format": "double"
        },
        "IspPlacements": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IspPlacement"
            }
        },
        "IspPlacement": {
            "type": "object",
            "properties": {
                "IspName": {
                    "$ref": "#/$defs/IspName"
                },
                "PlacementStatistics": {
                    "$ref": "#/$defs/PlacementStatistics"
                }
            }
        },
        "MessageContent": {
            "type": "string"
        },
        "GetDeliverabilityTestReportRequest": {
            "type": "object",
            "properties": {
                "ReportId": {
                    "$ref": "#/$defs/ReportId"
                }
            }
        },
        "GetDomainDeliverabilityCampaignResponse": {
            "type": "object",
            "properties": {
                "DomainDeliverabilityCampaign": {
                    "$ref": "#/$defs/DomainDeliverabilityCampaign"
                }
            }
        },
        "DomainDeliverabilityCampaign": {
            "type": "object",
            "properties": {
                "CampaignId": {
                    "$ref": "#/$defs/CampaignId"
                },
                "ImageUrl": {
                    "$ref": "#/$defs/ImageUrl"
                },
                "Subject": {
                    "$ref": "#/$defs/Subject"
                },
                "FromAddress": {
                    "$ref": "#/$defs/Identity"
                },
                "SendingIps": {
                    "$ref": "#/$defs/IpList"
                },
                "FirstSeenDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastSeenDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "InboxCount": {
                    "$ref": "#/$defs/Volume"
                },
                "SpamCount": {
                    "$ref": "#/$defs/Volume"
                },
                "ReadRate": {
                    "$ref": "#/$defs/Percentage"
                },
                "DeleteRate": {
                    "$ref": "#/$defs/Percentage"
                },
                "ReadDeleteRate": {
                    "$ref": "#/$defs/Percentage"
                },
                "ProjectedVolume": {
                    "$ref": "#/$defs/Volume"
                },
                "Esps": {
                    "$ref": "#/$defs/Esps"
                }
            }
        },
        "CampaignId": {
            "type": "string"
        },
        "ImageUrl": {
            "type": "string"
        },
        "Subject": {
            "type": "string"
        },
        "IpList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ip"
            }
        },
        "Volume": {
            "type": "integer",
            "format": "int64"
        },
        "Esps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Esp"
            }
        },
        "Esp": {
            "type": "string"
        },
        "GetDomainDeliverabilityCampaignRequest": {
            "type": "object",
            "properties": {
                "CampaignId": {
                    "$ref": "#/$defs/CampaignId"
                }
            }
        },
        "GetDomainStatisticsReportResponse": {
            "type": "object",
            "properties": {
                "OverallVolume": {
                    "$ref": "#/$defs/OverallVolume"
                },
                "DailyVolumes": {
                    "$ref": "#/$defs/DailyVolumes"
                }
            }
        },
        "OverallVolume": {
            "type": "object",
            "properties": {
                "VolumeStatistics": {
                    "$ref": "#/$defs/VolumeStatistics"
                },
                "ReadRatePercent": {
                    "$ref": "#/$defs/Percentage"
                },
                "DomainIspPlacements": {
                    "$ref": "#/$defs/DomainIspPlacements"
                }
            }
        },
        "VolumeStatistics": {
            "type": "object",
            "properties": {
                "InboxRawCount": {
                    "$ref": "#/$defs/Volume"
                },
                "SpamRawCount": {
                    "$ref": "#/$defs/Volume"
                },
                "ProjectedInbox": {
                    "$ref": "#/$defs/Volume"
                },
                "ProjectedSpam": {
                    "$ref": "#/$defs/Volume"
                }
            }
        },
        "DomainIspPlacements": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainIspPlacement"
            }
        },
        "DomainIspPlacement": {
            "type": "object",
            "properties": {
                "IspName": {
                    "$ref": "#/$defs/IspName"
                },
                "InboxRawCount": {
                    "$ref": "#/$defs/Volume"
                },
                "SpamRawCount": {
                    "$ref": "#/$defs/Volume"
                },
                "InboxPercentage": {
                    "$ref": "#/$defs/Percentage"
                },
                "SpamPercentage": {
                    "$ref": "#/$defs/Percentage"
                }
            }
        },
        "DailyVolumes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DailyVolume"
            }
        },
        "DailyVolume": {
            "type": "object",
            "properties": {
                "StartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "VolumeStatistics": {
                    "$ref": "#/$defs/VolumeStatistics"
                },
                "DomainIspPlacements": {
                    "$ref": "#/$defs/DomainIspPlacements"
                }
            }
        },
        "GetDomainStatisticsReportRequest": {
            "type": "object",
            "properties": {
                "Domain": {
                    "$ref": "#/$defs/Identity"
                },
                "StartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "GetEmailIdentityResponse": {
            "type": "object",
            "properties": {
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                },
                "FeedbackForwardingStatus": {
                    "$ref": "#/$defs/Enabled"
                },
                "VerifiedForSendingStatus": {
                    "$ref": "#/$defs/Enabled"
                },
                "DkimAttributes": {
                    "$ref": "#/$defs/DkimAttributes"
                },
                "MailFromAttributes": {
                    "$ref": "#/$defs/MailFromAttributes"
                },
                "Policies": {
                    "$ref": "#/$defs/PolicyMap"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "VerificationStatus": {
                    "$ref": "#/$defs/VerificationStatus"
                },
                "VerificationInfo": {
                    "$ref": "#/$defs/VerificationInfo"
                }
            }
        },
        "MailFromAttributes": {
            "type": "object",
            "properties": {
                "MailFromDomain": {
                    "$ref": "#/$defs/MailFromDomainName"
                },
                "MailFromDomainStatus": {
                    "$ref": "#/$defs/MailFromDomainStatus"
                },
                "BehaviorOnMxFailure": {
                    "$ref": "#/$defs/BehaviorOnMxFailure"
                }
            }
        },
        "MailFromDomainName": {
            "type": "string"
        },
        "MailFromDomainStatus": {
            "enum": [
                "PENDING",
                "SUCCESS",
                "FAILED",
                "TEMPORARY_FAILURE"
            ]
        },
        "BehaviorOnMxFailure": {
            "enum": [
                "USE_DEFAULT_VALUE",
                "REJECT_MESSAGE"
            ]
        },
        "PolicyMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Policy"
            }
        },
        "VerificationStatus": {
            "enum": [
                "PENDING",
                "SUCCESS",
                "FAILED",
                "TEMPORARY_FAILURE",
                "NOT_STARTED"
            ]
        },
        "VerificationInfo": {
            "type": "object",
            "properties": {
                "LastCheckedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastSuccessTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ErrorType": {
                    "$ref": "#/$defs/VerificationError"
                },
                "SOARecord": {
                    "$ref": "#/$defs/SOARecord"
                }
            }
        },
        "VerificationError": {
            "enum": [
                "SERVICE_ERROR",
                "DNS_SERVER_ERROR",
                "HOST_NOT_FOUND",
                "TYPE_NOT_FOUND",
                "INVALID_VALUE",
                "REPLICATION_ACCESS_DENIED",
                "REPLICATION_PRIMARY_NOT_FOUND",
                "REPLICATION_PRIMARY_BYO_DKIM_NOT_SUPPORTED",
                "REPLICATION_REPLICA_AS_PRIMARY_NOT_SUPPORTED",
                "REPLICATION_PRIMARY_INVALID_REGION"
            ]
        },
        "SOARecord": {
            "type": "object",
            "properties": {
                "PrimaryNameServer": {
                    "$ref": "#/$defs/PrimaryNameServer"
                },
                "AdminEmail": {
                    "$ref": "#/$defs/AdminEmail"
                },
                "SerialNumber": {
                    "$ref": "#/$defs/SerialNumber"
                }
            }
        },
        "PrimaryNameServer": {
            "type": "string"
        },
        "AdminEmail": {
            "type": "string"
        },
        "SerialNumber": {
            "type": "integer",
            "format": "int64"
        },
        "GetEmailIdentityRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                }
            }
        },
        "GetEmailIdentityPoliciesResponse": {
            "type": "object",
            "properties": {
                "Policies": {
                    "$ref": "#/$defs/PolicyMap"
                }
            }
        },
        "GetEmailIdentityPoliciesRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                }
            }
        },
        "GetEmailTemplateResponse": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                },
                "TemplateContent": {
                    "$ref": "#/$defs/EmailTemplateContent"
                }
            }
        },
        "GetEmailTemplateRequest": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                }
            }
        },
        "GetExportJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "ExportSourceType": {
                    "$ref": "#/$defs/ExportSourceType"
                },
                "JobStatus": {
                    "$ref": "#/$defs/JobStatus"
                },
                "ExportDestination": {
                    "$ref": "#/$defs/ExportDestination"
                },
                "ExportDataSource": {
                    "$ref": "#/$defs/ExportDataSource"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CompletedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "FailureInfo": {
                    "$ref": "#/$defs/FailureInfo"
                },
                "Statistics": {
                    "$ref": "#/$defs/ExportStatistics"
                }
            }
        },
        "ExportSourceType": {
            "enum": [
                "METRICS_DATA",
                "MESSAGE_INSIGHTS"
            ]
        },
        "JobStatus": {
            "enum": [
                "CREATED",
                "PROCESSING",
                "COMPLETED",
                "FAILED",
                "CANCELLED"
            ]
        },
        "FailureInfo": {
            "type": "object",
            "properties": {
                "FailedRecordsS3Url": {
                    "$ref": "#/$defs/FailedRecordsS3Url"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "FailedRecordsS3Url": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "ExportStatistics": {
            "type": "object",
            "properties": {
                "ProcessedRecordsCount": {
                    "$ref": "#/$defs/ProcessedRecordsCount"
                },
                "ExportedRecordsCount": {
                    "$ref": "#/$defs/ExportedRecordsCount"
                }
            }
        },
        "ProcessedRecordsCount": {
            "type": "integer",
            "format": "int32"
        },
        "ExportedRecordsCount": {
            "type": "integer",
            "format": "int32"
        },
        "GetExportJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "GetImportJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "ImportDestination": {
                    "$ref": "#/$defs/ImportDestination"
                },
                "ImportDataSource": {
                    "$ref": "#/$defs/ImportDataSource"
                },
                "FailureInfo": {
                    "$ref": "#/$defs/FailureInfo"
                },
                "JobStatus": {
                    "$ref": "#/$defs/JobStatus"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CompletedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ProcessedRecordsCount": {
                    "$ref": "#/$defs/ProcessedRecordsCount"
                },
                "FailedRecordsCount": {
                    "$ref": "#/$defs/FailedRecordsCount"
                }
            }
        },
        "FailedRecordsCount": {
            "type": "integer",
            "format": "int32"
        },
        "GetImportJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "GetMessageInsightsResponse": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "$ref": "#/$defs/OutboundMessageId"
                },
                "FromEmailAddress": {
                    "$ref": "#/$defs/InsightsEmailAddress"
                },
                "Subject": {
                    "$ref": "#/$defs/EmailSubject"
                },
                "EmailTags": {
                    "$ref": "#/$defs/MessageTagList"
                },
                "Insights": {
                    "$ref": "#/$defs/EmailInsightsList"
                }
            }
        },
        "OutboundMessageId": {
            "type": "string"
        },
        "MessageTagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MessageTag"
            }
        },
        "MessageTag": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/MessageTagName"
                },
                "Value": {
                    "$ref": "#/$defs/MessageTagValue"
                }
            }
        },
        "MessageTagName": {
            "type": "string"
        },
        "MessageTagValue": {
            "type": "string"
        },
        "EmailInsightsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EmailInsights"
            }
        },
        "EmailInsights": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/InsightsEmailAddress"
                },
                "Isp": {
                    "$ref": "#/$defs/Isp"
                },
                "Events": {
                    "$ref": "#/$defs/InsightsEvents"
                }
            }
        },
        "InsightsEvents": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InsightsEvent"
            }
        },
        "InsightsEvent": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Type": {
                    "$ref": "#/$defs/EventType"
                },
                "Details": {
                    "$ref": "#/$defs/EventDetails"
                }
            }
        },
        "EventDetails": {
            "type": "object",
            "properties": {
                "Bounce": {
                    "$ref": "#/$defs/Bounce"
                },
                "Complaint": {
                    "$ref": "#/$defs/Complaint"
                }
            }
        },
        "Bounce": {
            "type": "object",
            "properties": {
                "BounceType": {
                    "$ref": "#/$defs/BounceType"
                },
                "BounceSubType": {
                    "$ref": "#/$defs/BounceSubType"
                },
                "DiagnosticCode": {
                    "$ref": "#/$defs/DiagnosticCode"
                }
            }
        },
        "BounceType": {
            "enum": [
                "UNDETERMINED",
                "TRANSIENT",
                "PERMANENT"
            ]
        },
        "BounceSubType": {
            "type": "string"
        },
        "DiagnosticCode": {
            "type": "string"
        },
        "Complaint": {
            "type": "object",
            "properties": {
                "ComplaintSubType": {
                    "$ref": "#/$defs/ComplaintSubType"
                },
                "ComplaintFeedbackType": {
                    "$ref": "#/$defs/ComplaintFeedbackType"
                }
            }
        },
        "ComplaintSubType": {
            "type": "string"
        },
        "ComplaintFeedbackType": {
            "type": "string"
        },
        "GetMessageInsightsRequest": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "$ref": "#/$defs/OutboundMessageId"
                }
            }
        },
        "GetMultiRegionEndpointResponse": {
            "type": "object",
            "properties": {
                "EndpointName": {
                    "$ref": "#/$defs/EndpointName"
                },
                "EndpointId": {
                    "$ref": "#/$defs/EndpointId"
                },
                "Routes": {
                    "$ref": "#/$defs/Routes"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Routes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Route"
            }
        },
        "Route": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/Region"
                }
            }
        },
        "GetMultiRegionEndpointRequest": {
            "type": "object",
            "properties": {
                "EndpointName": {
                    "$ref": "#/$defs/EndpointName"
                }
            }
        },
        "GetSuppressedDestinationResponse": {
            "type": "object",
            "properties": {
                "SuppressedDestination": {
                    "$ref": "#/$defs/SuppressedDestination"
                }
            }
        },
        "SuppressedDestination": {
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "Reason": {
                    "$ref": "#/$defs/SuppressionListReason"
                },
                "LastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Attributes": {
                    "$ref": "#/$defs/SuppressedDestinationAttributes"
                }
            }
        },
        "SuppressedDestinationAttributes": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "$ref": "#/$defs/OutboundMessageId"
                },
                "FeedbackId": {
                    "$ref": "#/$defs/FeedbackId"
                }
            }
        },
        "FeedbackId": {
            "type": "string"
        },
        "GetSuppressedDestinationRequest": {
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                }
            }
        },
        "ListConfigurationSetsResponse": {
            "type": "object",
            "properties": {
                "ConfigurationSets": {
                    "$ref": "#/$defs/ConfigurationSetNameList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ConfigurationSetNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConfigurationSetName"
            }
        },
        "ListConfigurationSetsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListContactListsResponse": {
            "type": "object",
            "properties": {
                "ContactLists": {
                    "$ref": "#/$defs/ListOfContactLists"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListOfContactLists": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContactList"
            }
        },
        "ContactList": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                },
                "LastUpdatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListContactListsRequest": {
            "type": "object",
            "properties": {
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListContactsResponse": {
            "type": "object",
            "properties": {
                "Contacts": {
                    "$ref": "#/$defs/ListOfContacts"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListOfContacts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Contact"
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "TopicPreferences": {
                    "$ref": "#/$defs/TopicPreferenceList"
                },
                "TopicDefaultPreferences": {
                    "$ref": "#/$defs/TopicPreferenceList"
                },
                "UnsubscribeAll": {
                    "$ref": "#/$defs/UnsubscribeAll"
                },
                "LastUpdatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListContactsRequest": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                },
                "Filter": {
                    "$ref": "#/$defs/ListContactsFilter"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListContactsFilter": {
            "type": "object",
            "properties": {
                "FilteredStatus": {
                    "$ref": "#/$defs/SubscriptionStatus"
                },
                "TopicFilter": {
                    "$ref": "#/$defs/TopicFilter"
                }
            }
        },
        "TopicFilter": {
            "type": "object",
            "properties": {
                "TopicName": {
                    "$ref": "#/$defs/TopicName"
                },
                "UseDefaultIfPreferenceUnavailable": {
                    "$ref": "#/$defs/UseDefaultIfPreferenceUnavailable"
                }
            }
        },
        "UseDefaultIfPreferenceUnavailable": {
            "type": "boolean"
        },
        "ListCustomVerificationEmailTemplatesResponse": {
            "type": "object",
            "properties": {
                "CustomVerificationEmailTemplates": {
                    "$ref": "#/$defs/CustomVerificationEmailTemplatesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "CustomVerificationEmailTemplatesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomVerificationEmailTemplateMetadata"
            }
        },
        "CustomVerificationEmailTemplateMetadata": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                },
                "FromEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "TemplateSubject": {
                    "$ref": "#/$defs/EmailTemplateSubject"
                },
                "SuccessRedirectionURL": {
                    "$ref": "#/$defs/SuccessRedirectionURL"
                },
                "FailureRedirectionURL": {
                    "$ref": "#/$defs/FailureRedirectionURL"
                }
            }
        },
        "ListCustomVerificationEmailTemplatesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListDedicatedIpPoolsResponse": {
            "type": "object",
            "properties": {
                "DedicatedIpPools": {
                    "$ref": "#/$defs/ListOfDedicatedIpPools"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListOfDedicatedIpPools": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PoolName"
            }
        },
        "ListDedicatedIpPoolsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListDeliverabilityTestReportsResponse": {
            "type": "object",
            "properties": {
                "DeliverabilityTestReports": {
                    "$ref": "#/$defs/DeliverabilityTestReports"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DeliverabilityTestReports": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeliverabilityTestReport"
            }
        },
        "ListDeliverabilityTestReportsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListDomainDeliverabilityCampaignsResponse": {
            "type": "object",
            "properties": {
                "DomainDeliverabilityCampaigns": {
                    "$ref": "#/$defs/DomainDeliverabilityCampaignList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DomainDeliverabilityCampaignList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainDeliverabilityCampaign"
            }
        },
        "ListDomainDeliverabilityCampaignsRequest": {
            "type": "object",
            "properties": {
                "StartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "SubscribedDomain": {
                    "$ref": "#/$defs/Domain"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListEmailIdentitiesResponse": {
            "type": "object",
            "properties": {
                "EmailIdentities": {
                    "$ref": "#/$defs/IdentityInfoList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IdentityInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdentityInfo"
            }
        },
        "IdentityInfo": {
            "type": "object",
            "properties": {
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                },
                "IdentityName": {
                    "$ref": "#/$defs/Identity"
                },
                "SendingEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "VerificationStatus": {
                    "$ref": "#/$defs/VerificationStatus"
                }
            }
        },
        "ListEmailIdentitiesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListEmailTemplatesResponse": {
            "type": "object",
            "properties": {
                "TemplatesMetadata": {
                    "$ref": "#/$defs/EmailTemplateMetadataList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "EmailTemplateMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EmailTemplateMetadata"
            }
        },
        "EmailTemplateMetadata": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListEmailTemplatesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListExportJobsResponse": {
            "type": "object",
            "properties": {
                "ExportJobs": {
                    "$ref": "#/$defs/ExportJobSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ExportJobSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportJobSummary"
            }
        },
        "ExportJobSummary": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "ExportSourceType": {
                    "$ref": "#/$defs/ExportSourceType"
                },
                "JobStatus": {
                    "$ref": "#/$defs/JobStatus"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CompletedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListExportJobsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                },
                "ExportSourceType": {
                    "$ref": "#/$defs/ExportSourceType"
                },
                "JobStatus": {
                    "$ref": "#/$defs/JobStatus"
                }
            }
        },
        "ListImportJobsResponse": {
            "type": "object",
            "properties": {
                "ImportJobs": {
                    "$ref": "#/$defs/ImportJobSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ImportJobSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportJobSummary"
            }
        },
        "ImportJobSummary": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "ImportDestination": {
                    "$ref": "#/$defs/ImportDestination"
                },
                "JobStatus": {
                    "$ref": "#/$defs/JobStatus"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ProcessedRecordsCount": {
                    "$ref": "#/$defs/ProcessedRecordsCount"
                },
                "FailedRecordsCount": {
                    "$ref": "#/$defs/FailedRecordsCount"
                }
            }
        },
        "ListImportJobsRequest": {
            "type": "object",
            "properties": {
                "ImportDestinationType": {
                    "$ref": "#/$defs/ImportDestinationType"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ImportDestinationType": {
            "enum": [
                "SUPPRESSION_LIST",
                "CONTACT_LIST"
            ]
        },
        "ListMultiRegionEndpointsResponse": {
            "type": "object",
            "properties": {
                "MultiRegionEndpoints": {
                    "$ref": "#/$defs/MultiRegionEndpoints"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenV2"
                }
            }
        },
        "MultiRegionEndpoints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MultiRegionEndpoint"
            }
        },
        "MultiRegionEndpoint": {
            "type": "object",
            "properties": {
                "EndpointName": {
                    "$ref": "#/$defs/EndpointName"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "EndpointId": {
                    "$ref": "#/$defs/EndpointId"
                },
                "Regions": {
                    "$ref": "#/$defs/Regions"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Regions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Region"
            }
        },
        "NextTokenV2": {
            "type": "string"
        },
        "ListMultiRegionEndpointsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextTokenV2"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSizeV2"
                }
            }
        },
        "PageSizeV2": {
            "type": "integer",
            "format": "int32"
        },
        "ListRecommendationsResponse": {
            "type": "object",
            "properties": {
                "Recommendations": {
                    "$ref": "#/$defs/RecommendationsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RecommendationsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Recommendation"
            }
        },
        "Recommendation": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Type": {
                    "$ref": "#/$defs/RecommendationType"
                },
                "Description": {
                    "$ref": "#/$defs/RecommendationDescription"
                },
                "Status": {
                    "$ref": "#/$defs/RecommendationStatus"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastUpdatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Impact": {
                    "$ref": "#/$defs/RecommendationImpact"
                }
            }
        },
        "RecommendationType": {
            "enum": [
                "DKIM",
                "DMARC",
                "SPF",
                "BIMI",
                "COMPLAINT"
            ]
        },
        "RecommendationDescription": {
            "type": "string"
        },
        "RecommendationStatus": {
            "enum": [
                "OPEN",
                "FIXED"
            ]
        },
        "RecommendationImpact": {
            "enum": [
                "LOW",
                "HIGH"
            ]
        },
        "ListRecommendationsRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/ListRecommendationsFilter"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListRecommendationsFilter": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ListRecommendationFilterValue"
            }
        },
        "ListRecommendationFilterValue": {
            "type": "string"
        },
        "ListSuppressedDestinationsResponse": {
            "type": "object",
            "properties": {
                "SuppressedDestinationSummaries": {
                    "$ref": "#/$defs/SuppressedDestinationSummaries"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SuppressedDestinationSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SuppressedDestinationSummary"
            }
        },
        "SuppressedDestinationSummary": {
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "Reason": {
                    "$ref": "#/$defs/SuppressionListReason"
                },
                "LastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListSuppressedDestinationsRequest": {
            "type": "object",
            "properties": {
                "Reasons": {
                    "$ref": "#/$defs/SuppressionListReasons"
                },
                "StartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "PutAccountDedicatedIpWarmupAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutAccountDedicatedIpWarmupAttributesRequest": {
            "type": "object",
            "properties": {
                "AutoWarmupEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "PutAccountDetailsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutAccountDetailsRequest": {
            "type": "object",
            "properties": {
                "MailType": {
                    "$ref": "#/$defs/MailType"
                },
                "WebsiteURL": {
                    "$ref": "#/$defs/WebsiteURL"
                },
                "ContactLanguage": {
                    "$ref": "#/$defs/ContactLanguage"
                },
                "UseCaseDescription": {
                    "$ref": "#/$defs/UseCaseDescription"
                },
                "AdditionalContactEmailAddresses": {
                    "$ref": "#/$defs/AdditionalContactEmailAddresses"
                },
                "ProductionAccessEnabled": {
                    "$ref": "#/$defs/EnabledWrapper"
                }
            }
        },
        "EnabledWrapper": {
            "type": "boolean"
        },
        "PutAccountSendingAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutAccountSendingAttributesRequest": {
            "type": "object",
            "properties": {
                "SendingEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "PutAccountSuppressionAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutAccountSuppressionAttributesRequest": {
            "type": "object",
            "properties": {
                "SuppressedReasons": {
                    "$ref": "#/$defs/SuppressionListReasons"
                }
            }
        },
        "PutAccountVdmAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutAccountVdmAttributesRequest": {
            "type": "object",
            "properties": {
                "VdmAttributes": {
                    "$ref": "#/$defs/VdmAttributes"
                }
            }
        },
        "PutConfigurationSetArchivingOptionsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutConfigurationSetArchivingOptionsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "ArchiveArn": {
                    "$ref": "#/$defs/ArchiveArn"
                }
            }
        },
        "PutConfigurationSetDeliveryOptionsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutConfigurationSetDeliveryOptionsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "TlsPolicy": {
                    "$ref": "#/$defs/TlsPolicy"
                },
                "SendingPoolName": {
                    "$ref": "#/$defs/SendingPoolName"
                },
                "MaxDeliverySeconds": {
                    "$ref": "#/$defs/MaxDeliverySeconds"
                }
            }
        },
        "SendingPoolName": {
            "type": "string"
        },
        "PutConfigurationSetReputationOptionsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutConfigurationSetReputationOptionsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "ReputationMetricsEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "PutConfigurationSetSendingOptionsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutConfigurationSetSendingOptionsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "SendingEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "PutConfigurationSetSuppressionOptionsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutConfigurationSetSuppressionOptionsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "SuppressedReasons": {
                    "$ref": "#/$defs/SuppressionListReasons"
                }
            }
        },
        "PutConfigurationSetTrackingOptionsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutConfigurationSetTrackingOptionsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "CustomRedirectDomain": {
                    "$ref": "#/$defs/CustomRedirectDomain"
                },
                "HttpsPolicy": {
                    "$ref": "#/$defs/HttpsPolicy"
                }
            }
        },
        "PutConfigurationSetVdmOptionsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutConfigurationSetVdmOptionsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "VdmOptions": {
                    "$ref": "#/$defs/VdmOptions"
                }
            }
        },
        "PutDedicatedIpInPoolResponse": {
            "type": "object",
            "properties": {}
        },
        "PutDedicatedIpInPoolRequest": {
            "type": "object",
            "properties": {
                "Ip": {
                    "$ref": "#/$defs/Ip"
                },
                "DestinationPoolName": {
                    "$ref": "#/$defs/PoolName"
                }
            }
        },
        "PutDedicatedIpPoolScalingAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutDedicatedIpPoolScalingAttributesRequest": {
            "type": "object",
            "properties": {
                "PoolName": {
                    "$ref": "#/$defs/PoolName"
                },
                "ScalingMode": {
                    "$ref": "#/$defs/ScalingMode"
                }
            }
        },
        "PutDedicatedIpWarmupAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutDedicatedIpWarmupAttributesRequest": {
            "type": "object",
            "properties": {
                "Ip": {
                    "$ref": "#/$defs/Ip"
                },
                "WarmupPercentage": {
                    "$ref": "#/$defs/Percentage100Wrapper"
                }
            }
        },
        "PutDeliverabilityDashboardOptionResponse": {
            "type": "object",
            "properties": {}
        },
        "PutDeliverabilityDashboardOptionRequest": {
            "type": "object",
            "properties": {
                "DashboardEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "SubscribedDomains": {
                    "$ref": "#/$defs/DomainDeliverabilityTrackingOptions"
                }
            }
        },
        "PutEmailIdentityConfigurationSetAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutEmailIdentityConfigurationSetAttributesRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                }
            }
        },
        "PutEmailIdentityDkimAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutEmailIdentityDkimAttributesRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "SigningEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "PutEmailIdentityDkimSigningAttributesResponse": {
            "type": "object",
            "properties": {
                "DkimStatus": {
                    "$ref": "#/$defs/DkimStatus"
                },
                "DkimTokens": {
                    "$ref": "#/$defs/DnsTokenList"
                }
            }
        },
        "PutEmailIdentityDkimSigningAttributesRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "SigningAttributesOrigin": {
                    "$ref": "#/$defs/DkimSigningAttributesOrigin"
                },
                "SigningAttributes": {
                    "$ref": "#/$defs/DkimSigningAttributes"
                }
            }
        },
        "PutEmailIdentityFeedbackAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutEmailIdentityFeedbackAttributesRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "EmailForwardingEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "PutEmailIdentityMailFromAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutEmailIdentityMailFromAttributesRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "MailFromDomain": {
                    "$ref": "#/$defs/MailFromDomainName"
                },
                "BehaviorOnMxFailure": {
                    "$ref": "#/$defs/BehaviorOnMxFailure"
                }
            }
        },
        "PutSuppressedDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "PutSuppressedDestinationRequest": {
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "Reason": {
                    "$ref": "#/$defs/SuppressionListReason"
                }
            }
        },
        "SendBulkEmailResponse": {
            "type": "object",
            "properties": {
                "BulkEmailEntryResults": {
                    "$ref": "#/$defs/BulkEmailEntryResultList"
                }
            }
        },
        "BulkEmailEntryResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BulkEmailEntryResult"
            }
        },
        "BulkEmailEntryResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/BulkEmailStatus"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "MessageId": {
                    "$ref": "#/$defs/OutboundMessageId"
                }
            }
        },
        "BulkEmailStatus": {
            "enum": [
                "SUCCESS",
                "MESSAGE_REJECTED",
                "MAIL_FROM_DOMAIN_NOT_VERIFIED",
                "CONFIGURATION_SET_NOT_FOUND",
                "TEMPLATE_NOT_FOUND",
                "ACCOUNT_SUSPENDED",
                "ACCOUNT_THROTTLED",
                "ACCOUNT_DAILY_QUOTA_EXCEEDED",
                "INVALID_SENDING_POOL_NAME",
                "ACCOUNT_SENDING_PAUSED",
                "CONFIGURATION_SET_SENDING_PAUSED",
                "INVALID_PARAMETER",
                "TRANSIENT_FAILURE",
                "FAILED"
            ]
        },
        "SendBulkEmailRequest": {
            "type": "object",
            "properties": {
                "FromEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "FromEmailAddressIdentityArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "ReplyToAddresses": {
                    "$ref": "#/$defs/EmailAddressList"
                },
                "FeedbackForwardingEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "FeedbackForwardingEmailAddressIdentityArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "DefaultEmailTags": {
                    "$ref": "#/$defs/MessageTagList"
                },
                "DefaultContent": {
                    "$ref": "#/$defs/BulkEmailContent"
                },
                "BulkEmailEntries": {
                    "$ref": "#/$defs/BulkEmailEntryList"
                },
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "EndpointId": {
                    "$ref": "#/$defs/EndpointId"
                }
            }
        },
        "EmailAddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EmailAddress"
            }
        },
        "BulkEmailContent": {
            "type": "object",
            "properties": {
                "Template": {
                    "$ref": "#/$defs/Template"
                }
            }
        },
        "BulkEmailEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BulkEmailEntry"
            }
        },
        "BulkEmailEntry": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/Destination"
                },
                "ReplacementTags": {
                    "$ref": "#/$defs/MessageTagList"
                },
                "ReplacementEmailContent": {
                    "$ref": "#/$defs/ReplacementEmailContent"
                },
                "ReplacementHeaders": {
                    "$ref": "#/$defs/MessageHeaderList"
                }
            }
        },
        "Destination": {
            "type": "object",
            "properties": {
                "ToAddresses": {
                    "$ref": "#/$defs/EmailAddressList"
                },
                "CcAddresses": {
                    "$ref": "#/$defs/EmailAddressList"
                },
                "BccAddresses": {
                    "$ref": "#/$defs/EmailAddressList"
                }
            }
        },
        "ReplacementEmailContent": {
            "type": "object",
            "properties": {
                "ReplacementTemplate": {
                    "$ref": "#/$defs/ReplacementTemplate"
                }
            }
        },
        "ReplacementTemplate": {
            "type": "object",
            "properties": {
                "ReplacementTemplateData": {
                    "$ref": "#/$defs/EmailTemplateData"
                }
            }
        },
        "SendCustomVerificationEmailResponse": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "$ref": "#/$defs/OutboundMessageId"
                }
            }
        },
        "SendCustomVerificationEmailRequest": {
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                },
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                }
            }
        },
        "SendEmailResponse": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "$ref": "#/$defs/OutboundMessageId"
                }
            }
        },
        "SendEmailRequest": {
            "type": "object",
            "properties": {
                "FromEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "FromEmailAddressIdentityArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Destination": {
                    "$ref": "#/$defs/Destination"
                },
                "ReplyToAddresses": {
                    "$ref": "#/$defs/EmailAddressList"
                },
                "FeedbackForwardingEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "FeedbackForwardingEmailAddressIdentityArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Content": {
                    "$ref": "#/$defs/EmailContent"
                },
                "EmailTags": {
                    "$ref": "#/$defs/MessageTagList"
                },
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "EndpointId": {
                    "$ref": "#/$defs/EndpointId"
                },
                "ListManagementOptions": {
                    "$ref": "#/$defs/ListManagementOptions"
                }
            }
        },
        "ListManagementOptions": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                },
                "TopicName": {
                    "$ref": "#/$defs/TopicName"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TestRenderEmailTemplateResponse": {
            "type": "object",
            "properties": {
                "RenderedTemplate": {
                    "$ref": "#/$defs/RenderedEmailTemplate"
                }
            }
        },
        "RenderedEmailTemplate": {
            "type": "string"
        },
        "TestRenderEmailTemplateRequest": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                },
                "TemplateData": {
                    "$ref": "#/$defs/EmailTemplateData"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateConfigurationSetEventDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateConfigurationSetEventDestinationRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "EventDestinationName": {
                    "$ref": "#/$defs/EventDestinationName"
                },
                "EventDestination": {
                    "$ref": "#/$defs/EventDestinationDefinition"
                }
            }
        },
        "UpdateContactResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateContactRequest": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "TopicPreferences": {
                    "$ref": "#/$defs/TopicPreferenceList"
                },
                "UnsubscribeAll": {
                    "$ref": "#/$defs/UnsubscribeAll"
                },
                "AttributesData": {
                    "$ref": "#/$defs/AttributesData"
                }
            }
        },
        "UpdateContactListResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateContactListRequest": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "$ref": "#/$defs/ContactListName"
                },
                "Topics": {
                    "$ref": "#/$defs/Topics"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "UpdateCustomVerificationEmailTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateCustomVerificationEmailTemplateRequest": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                },
                "FromEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "TemplateSubject": {
                    "$ref": "#/$defs/EmailTemplateSubject"
                },
                "TemplateContent": {
                    "$ref": "#/$defs/TemplateContent"
                },
                "SuccessRedirectionURL": {
                    "$ref": "#/$defs/SuccessRedirectionURL"
                },
                "FailureRedirectionURL": {
                    "$ref": "#/$defs/FailureRedirectionURL"
                }
            }
        },
        "UpdateEmailIdentityPolicyResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateEmailIdentityPolicyRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "PolicyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "Policy": {
                    "$ref": "#/$defs/Policy"
                }
            }
        },
        "UpdateEmailTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateEmailTemplateRequest": {
            "type": "object",
            "properties": {
                "TemplateName": {
                    "$ref": "#/$defs/EmailTemplateName"
                },
                "TemplateContent": {
                    "$ref": "#/$defs/EmailTemplateContent"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                },
                "EndpointId": {
                    "required": false,
                    "documentation": "Operation parameter for EndpointId",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "EndpointId"
                                }
                            ]
                        },
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        },
                        {
                            "fn": "aws.partition",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ],
                            "assign": "PartitionResult"
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isValidHostLabel",
                                    "argv": [
                                        {
                                            "ref": "EndpointId"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                false
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "isSet",
                                                    "argv": [
                                                        {
                                                            "ref": "Endpoint"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "endpoint": {
                                                "url": {
                                                    "ref": "Endpoint"
                                                },
                                                "properties": {
                                                    "authSchemes": [
                                                        {
                                                            "name": "sigv4a",
                                                            "signingName": "ses",
                                                            "signingRegionSet": [
                                                                "*"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "headers": {}
                                            },
                                            "type": "endpoint"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://{EndpointId}.endpoints.email.{PartitionResult#dualStackDnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "name": "sigv4a",
                                                                            "signingName": "ses",
                                                                            "signingRegionSet": [
                                                                                "*"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "endpoint": {
                                                "url": "https://{EndpointId}.endpoints.email.{PartitionResult#dnsSuffix}",
                                                "properties": {
                                                    "authSchemes": [
                                                        {
                                                            "name": "sigv4a",
                                                            "signingName": "ses",
                                                            "signingRegionSet": [
                                                                "*"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "headers": {}
                                            },
                                            "type": "endpoint"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "error": "Invalid Configuration: FIPS is not supported with multi-region endpoints",
                                    "type": "error"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "EndpointId must be a valid host label",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://email-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://email-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://email.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://email.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}