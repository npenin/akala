{
    "commands": [
        {
            "name": "GetApplicationComponentDetails",
            "config": {
                "http": {
                    "inject": [
                        {
                            "applicationComponentId": "route.applicationComponentId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/get-applicationcomponent-details/{applicationComponentId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetApplicationComponentDetailsResponse"
                    },
                    "inject": [
                        "param.0.applicationComponentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetApplicationComponentDetailsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "applicationComponentId": {}
                    }
                }
            }
        },
        {
            "name": "GetApplicationComponentStrategies",
            "config": {
                "http": {
                    "inject": [
                        {
                            "applicationComponentId": "route.applicationComponentId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/get-applicationcomponent-strategies/{applicationComponentId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetApplicationComponentStrategiesResponse"
                    },
                    "inject": [
                        "param.0.applicationComponentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetApplicationComponentStrategiesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "applicationComponentId": {}
                    }
                }
            }
        },
        {
            "name": "GetAssessment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/get-assessment/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAssessmentResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAssessmentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetImportFileTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/get-import-file-task/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetImportFileTaskResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetImportFileTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetLatestAssessmentId",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/get-latest-assessment-id"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLatestAssessmentIdResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLatestAssessmentIdRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetPortfolioPreferences",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/get-portfolio-preferences"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPortfolioPreferencesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPortfolioPreferencesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetPortfolioSummary",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/get-portfolio-summary"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPortfolioSummaryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPortfolioSummaryRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetRecommendationReportDetails",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/get-recommendation-report-details/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRecommendationReportDetailsResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRecommendationReportDetailsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetServerDetails",
            "config": {
                "http": {
                    "inject": [
                        {
                            "serverId": "route.serverId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/get-server-details/{serverId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetServerDetailsResponse"
                    },
                    "inject": [
                        "param.0.serverId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetServerDetailsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "serverId": {},
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "GetServerStrategies",
            "config": {
                "http": {
                    "inject": [
                        {
                            "serverId": "route.serverId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/get-server-strategies/{serverId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetServerStrategiesResponse"
                    },
                    "inject": [
                        "param.0.serverId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetServerStrategiesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "serverId": {}
                    }
                }
            }
        },
        {
            "name": "ListAnalyzableServers",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/list-analyzable-servers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAnalyzableServersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAnalyzableServersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "sort": {},
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListApplicationComponents",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/list-applicationcomponents"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApplicationComponentsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListApplicationComponentsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "applicationComponentCriteria": {},
                        "filterValue": {},
                        "sort": {},
                        "groupIdFilter": {},
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListCollectors",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/list-collectors"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCollectorsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCollectorsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListImportFileTask",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/list-import-file-task"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListImportFileTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListImportFileTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListServers",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/list-servers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListServersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListServersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "serverCriteria": {},
                        "filterValue": {},
                        "sort": {},
                        "groupIdFilter": {},
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "PutPortfolioPreferences",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/put-portfolio-preferences"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutPortfolioPreferencesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutPortfolioPreferencesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "prioritizeBusinessGoals": {},
                        "applicationPreferences": {},
                        "databasePreferences": {},
                        "applicationMode": {}
                    }
                }
            }
        },
        {
            "name": "StartAssessment",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/start-assessment"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartAssessmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartAssessmentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "s3bucketForAnalysisData": {},
                        "s3bucketForReportData": {},
                        "assessmentTargets": {},
                        "assessmentDataSourceType": {}
                    }
                }
            }
        },
        {
            "name": "StartImportFileTask",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/start-import-file-task"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartImportFileTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartImportFileTaskRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "name": {},
                        "S3Bucket": {},
                        "s3key": {},
                        "dataSourceType": {},
                        "groupId": {},
                        "s3bucketForReportData": {}
                    }
                }
            }
        },
        {
            "name": "StartRecommendationReportGeneration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/start-recommendation-report-generation"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartRecommendationReportGenerationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartRecommendationReportGenerationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "outputFormat": {},
                        "groupIdFilter": {}
                    }
                }
            }
        },
        {
            "name": "StopAssessment",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/stop-assessment"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopAssessmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopAssessmentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "assessmentId": {}
                    }
                }
            }
        },
        {
            "name": "UpdateApplicationComponentConfig",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/update-applicationcomponent-config/"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateApplicationComponentConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateApplicationComponentConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "applicationComponentId": {},
                        "inclusionStatus": {},
                        "strategyOption": {},
                        "sourceCodeList": {},
                        "secretsManagerKey": {},
                        "configureOnly": {},
                        "appType": {}
                    }
                }
            }
        },
        {
            "name": "UpdateServerConfig",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/update-server-config/"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateServerConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateServerConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "serverId": {},
                        "strategyOption": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "GetApplicationComponentDetailsRequest": {
            "type": "object",
            "properties": {
                "applicationComponentId": {
                    "$ref": "#/$defs/ApplicationComponentId"
                }
            }
        },
        "ApplicationComponentId": {
            "type": "string"
        },
        "GetApplicationComponentDetailsResponse": {
            "type": "object",
            "properties": {
                "applicationComponentDetail": {
                    "$ref": "#/$defs/ApplicationComponentDetail"
                },
                "associatedApplications": {
                    "$ref": "#/$defs/AssociatedApplications"
                },
                "moreApplicationResource": {
                    "$ref": "#/$defs/Boolean"
                },
                "associatedServerIds": {
                    "$ref": "#/$defs/AssociatedServerIDs"
                }
            }
        },
        "ApplicationComponentDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "recommendationSet": {
                    "$ref": "#/$defs/RecommendationSet"
                },
                "analysisStatus": {
                    "$ref": "#/$defs/SrcCodeOrDbAnalysisStatus"
                },
                "statusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "listAntipatternSeveritySummary": {
                    "$ref": "#/$defs/ListAntipatternSeveritySummary"
                },
                "databaseConfigDetail": {
                    "$ref": "#/$defs/DatabaseConfigDetail"
                },
                "sourceCodeRepositories": {
                    "$ref": "#/$defs/SourceCodeRepositories"
                },
                "appType": {
                    "$ref": "#/$defs/AppType"
                },
                "resourceSubType": {
                    "$ref": "#/$defs/ResourceSubType"
                },
                "inclusionStatus": {
                    "$ref": "#/$defs/InclusionStatus"
                },
                "antipatternReportS3Object": {
                    "$ref": "#/$defs/S3Object"
                },
                "antipatternReportStatus": {
                    "$ref": "#/$defs/AntipatternReportStatus"
                },
                "antipatternReportStatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "osVersion": {
                    "$ref": "#/$defs/String"
                },
                "osDriver": {
                    "$ref": "#/$defs/String"
                },
                "lastAnalyzedTimestamp": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "associatedServerId": {
                    "$ref": "#/$defs/ServerId"
                },
                "moreServerAssociationExists": {
                    "$ref": "#/$defs/Boolean"
                },
                "runtimeStatus": {
                    "$ref": "#/$defs/RuntimeAnalysisStatus"
                },
                "runtimeStatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "appUnitError": {
                    "$ref": "#/$defs/AppUnitError"
                },
                "resultList": {
                    "$ref": "#/$defs/ResultList"
                }
            }
        },
        "ResourceId": {
            "type": "string"
        },
        "ResourceName": {
            "type": "string"
        },
        "RecommendationSet": {
            "type": "object",
            "properties": {
                "transformationTool": {
                    "$ref": "#/$defs/TransformationTool"
                },
                "targetDestination": {
                    "$ref": "#/$defs/TargetDestination"
                },
                "strategy": {
                    "$ref": "#/$defs/Strategy"
                }
            }
        },
        "TransformationTool": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/TransformationToolName"
                },
                "description": {
                    "$ref": "#/$defs/TranformationToolDescription"
                },
                "tranformationToolInstallationLink": {
                    "$ref": "#/$defs/TranformationToolInstallationLink"
                }
            }
        },
        "TransformationToolName": {
            "type": "string"
        },
        "TranformationToolDescription": {
            "type": "string"
        },
        "TranformationToolInstallationLink": {
            "type": "string"
        },
        "TargetDestination": {
            "type": "string"
        },
        "Strategy": {
            "type": "string"
        },
        "SrcCodeOrDbAnalysisStatus": {
            "type": "string"
        },
        "StatusMessage": {
            "type": "string"
        },
        "ListAntipatternSeveritySummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AntipatternSeveritySummary"
            }
        },
        "AntipatternSeveritySummary": {
            "type": "object",
            "properties": {
                "severity": {
                    "$ref": "#/$defs/Severity"
                },
                "count": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "Severity": {
            "type": "string"
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "DatabaseConfigDetail": {
            "type": "object",
            "properties": {
                "secretName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "SourceCodeRepositories": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SourceCodeRepository"
            }
        },
        "SourceCodeRepository": {
            "type": "object",
            "properties": {
                "repository": {
                    "$ref": "#/$defs/String"
                },
                "branch": {
                    "$ref": "#/$defs/String"
                },
                "versionControlType": {
                    "$ref": "#/$defs/String"
                },
                "projectName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AppType": {
            "type": "string"
        },
        "ResourceSubType": {
            "type": "string"
        },
        "InclusionStatus": {
            "type": "string"
        },
        "S3Object": {
            "type": "object",
            "properties": {
                "s3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "s3key": {
                    "$ref": "#/$defs/S3Key"
                }
            }
        },
        "S3Bucket": {
            "type": "string"
        },
        "S3Key": {
            "type": "string"
        },
        "AntipatternReportStatus": {
            "type": "string"
        },
        "TimeStamp": {
            "type": "string",
            "format": "date-time"
        },
        "ServerId": {
            "type": "string"
        },
        "Boolean": {
            "type": "boolean"
        },
        "RuntimeAnalysisStatus": {
            "type": "string"
        },
        "AppUnitError": {
            "type": "object",
            "properties": {
                "appUnitErrorCategory": {
                    "$ref": "#/$defs/AppUnitErrorCategory"
                }
            }
        },
        "AppUnitErrorCategory": {
            "type": "string"
        },
        "ResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Result"
            }
        },
        "Result": {
            "type": "object",
            "properties": {
                "analysisType": {
                    "$ref": "#/$defs/AnalysisType"
                },
                "analysisStatus": {
                    "$ref": "#/$defs/AnalysisStatusUnion"
                },
                "statusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "antipatternReportResultList": {
                    "$ref": "#/$defs/AntipatternReportResultList"
                }
            }
        },
        "AnalysisType": {
            "type": "string"
        },
        "AnalysisStatusUnion": {
            "type": "object",
            "properties": {
                "runtimeAnalysisStatus": {
                    "$ref": "#/$defs/RuntimeAnalysisStatus"
                },
                "srcCodeOrDbAnalysisStatus": {
                    "$ref": "#/$defs/SrcCodeOrDbAnalysisStatus"
                }
            }
        },
        "AntipatternReportResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AntipatternReportResult"
            }
        },
        "AntipatternReportResult": {
            "type": "object",
            "properties": {
                "analyzerName": {
                    "$ref": "#/$defs/AnalyzerNameUnion"
                },
                "antiPatternReportS3Object": {
                    "$ref": "#/$defs/S3Object"
                },
                "antipatternReportStatus": {
                    "$ref": "#/$defs/AntipatternReportStatus"
                },
                "antipatternReportStatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                }
            }
        },
        "AnalyzerNameUnion": {
            "type": "object",
            "properties": {
                "binaryAnalyzerName": {
                    "$ref": "#/$defs/BinaryAnalyzerName"
                },
                "runTimeAnalyzerName": {
                    "$ref": "#/$defs/RunTimeAnalyzerName"
                },
                "sourceCodeAnalyzerName": {
                    "$ref": "#/$defs/SourceCodeAnalyzerName"
                }
            }
        },
        "BinaryAnalyzerName": {
            "type": "string"
        },
        "RunTimeAnalyzerName": {
            "type": "string"
        },
        "SourceCodeAnalyzerName": {
            "type": "string"
        },
        "AssociatedApplications": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssociatedApplication"
            }
        },
        "AssociatedApplication": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "id": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AssociatedServerIDs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "GetApplicationComponentStrategiesRequest": {
            "type": "object",
            "properties": {
                "applicationComponentId": {
                    "$ref": "#/$defs/ApplicationComponentId"
                }
            }
        },
        "GetApplicationComponentStrategiesResponse": {
            "type": "object",
            "properties": {
                "applicationComponentStrategies": {
                    "$ref": "#/$defs/ApplicationComponentStrategies"
                }
            }
        },
        "ApplicationComponentStrategies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationComponentStrategy"
            }
        },
        "ApplicationComponentStrategy": {
            "type": "object",
            "properties": {
                "recommendation": {
                    "$ref": "#/$defs/RecommendationSet"
                },
                "status": {
                    "$ref": "#/$defs/StrategyRecommendation"
                },
                "isPreferred": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "StrategyRecommendation": {
            "type": "string"
        },
        "GetAssessmentRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/AsyncTaskId"
                }
            }
        },
        "AsyncTaskId": {
            "type": "string"
        },
        "GetAssessmentResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/AsyncTaskId"
                },
                "dataCollectionDetails": {
                    "$ref": "#/$defs/DataCollectionDetails"
                },
                "assessmentTargets": {
                    "$ref": "#/$defs/AssessmentTargets"
                }
            }
        },
        "DataCollectionDetails": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/AssessmentStatus"
                },
                "servers": {
                    "$ref": "#/$defs/Integer"
                },
                "failed": {
                    "$ref": "#/$defs/Integer"
                },
                "success": {
                    "$ref": "#/$defs/Integer"
                },
                "inProgress": {
                    "$ref": "#/$defs/Integer"
                },
                "startTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "completionTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "statusMessage": {
                    "$ref": "#/$defs/AssessmentStatusMessage"
                }
            }
        },
        "AssessmentStatus": {
            "type": "string"
        },
        "AssessmentStatusMessage": {
            "type": "string"
        },
        "AssessmentTargets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssessmentTarget"
            }
        },
        "AssessmentTarget": {
            "type": "object",
            "properties": {
                "condition": {
                    "$ref": "#/$defs/Condition"
                },
                "name": {
                    "$ref": "#/$defs/String"
                },
                "values": {
                    "$ref": "#/$defs/AssessmentTargetValues"
                }
            }
        },
        "Condition": {
            "type": "string"
        },
        "AssessmentTargetValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "GetImportFileTaskRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetImportFileTaskResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "status": {
                    "$ref": "#/$defs/ImportFileTaskStatus"
                },
                "startTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "inputS3Bucket": {
                    "$ref": "#/$defs/importS3Bucket"
                },
                "inputS3Key": {
                    "$ref": "#/$defs/importS3Key"
                },
                "statusReportS3Bucket": {
                    "$ref": "#/$defs/importS3Bucket"
                },
                "statusReportS3Key": {
                    "$ref": "#/$defs/importS3Key"
                },
                "completionTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "numberOfRecordsSuccess": {
                    "$ref": "#/$defs/Integer"
                },
                "numberOfRecordsFailed": {
                    "$ref": "#/$defs/Integer"
                },
                "importName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ImportFileTaskStatus": {
            "type": "string"
        },
        "importS3Bucket": {
            "type": "string"
        },
        "importS3Key": {
            "type": "string"
        },
        "GetLatestAssessmentIdRequest": {
            "type": "object",
            "properties": {}
        },
        "GetLatestAssessmentIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/AsyncTaskId"
                }
            }
        },
        "GetPortfolioPreferencesRequest": {
            "type": "object",
            "properties": {}
        },
        "GetPortfolioPreferencesResponse": {
            "type": "object",
            "properties": {
                "prioritizeBusinessGoals": {
                    "$ref": "#/$defs/PrioritizeBusinessGoals"
                },
                "applicationPreferences": {
                    "$ref": "#/$defs/ApplicationPreferences"
                },
                "databasePreferences": {
                    "$ref": "#/$defs/DatabasePreferences"
                },
                "applicationMode": {
                    "$ref": "#/$defs/ApplicationMode"
                }
            }
        },
        "PrioritizeBusinessGoals": {
            "type": "object",
            "properties": {
                "businessGoals": {
                    "$ref": "#/$defs/BusinessGoals"
                }
            }
        },
        "BusinessGoals": {
            "type": "object",
            "properties": {
                "speedOfMigration": {
                    "$ref": "#/$defs/BusinessGoalsInteger"
                },
                "reduceOperationalOverheadWithManagedServices": {
                    "$ref": "#/$defs/BusinessGoalsInteger"
                },
                "modernizeInfrastructureWithCloudNativeTechnologies": {
                    "$ref": "#/$defs/BusinessGoalsInteger"
                },
                "licenseCostReduction": {
                    "$ref": "#/$defs/BusinessGoalsInteger"
                }
            }
        },
        "BusinessGoalsInteger": {
            "type": "integer",
            "format": "int32"
        },
        "ApplicationPreferences": {
            "type": "object",
            "properties": {
                "managementPreference": {
                    "$ref": "#/$defs/ManagementPreference"
                }
            }
        },
        "ManagementPreference": {
            "type": "object",
            "properties": {
                "awsManagedResources": {
                    "$ref": "#/$defs/AwsManagedResources"
                },
                "selfManageResources": {
                    "$ref": "#/$defs/SelfManageResources"
                },
                "noPreference": {
                    "$ref": "#/$defs/NoManagementPreference"
                }
            }
        },
        "AwsManagedResources": {
            "type": "object",
            "properties": {
                "targetDestination": {
                    "$ref": "#/$defs/AwsManagedTargetDestinations"
                }
            }
        },
        "AwsManagedTargetDestinations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AwsManagedTargetDestination"
            }
        },
        "AwsManagedTargetDestination": {
            "type": "string"
        },
        "SelfManageResources": {
            "type": "object",
            "properties": {
                "targetDestination": {
                    "$ref": "#/$defs/SelfManageTargetDestinations"
                }
            }
        },
        "SelfManageTargetDestinations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SelfManageTargetDestination"
            }
        },
        "SelfManageTargetDestination": {
            "type": "string"
        },
        "NoManagementPreference": {
            "type": "object",
            "properties": {
                "targetDestination": {
                    "$ref": "#/$defs/NoPreferenceTargetDestinations"
                }
            }
        },
        "NoPreferenceTargetDestinations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NoPreferenceTargetDestination"
            }
        },
        "NoPreferenceTargetDestination": {
            "type": "string"
        },
        "DatabasePreferences": {
            "type": "object",
            "properties": {
                "databaseManagementPreference": {
                    "$ref": "#/$defs/DatabaseManagementPreference"
                },
                "databaseMigrationPreference": {
                    "$ref": "#/$defs/DatabaseMigrationPreference"
                }
            }
        },
        "DatabaseManagementPreference": {
            "type": "string"
        },
        "DatabaseMigrationPreference": {
            "type": "object",
            "properties": {
                "heterogeneous": {
                    "$ref": "#/$defs/Heterogeneous"
                },
                "homogeneous": {
                    "$ref": "#/$defs/Homogeneous"
                },
                "noPreference": {
                    "$ref": "#/$defs/NoDatabaseMigrationPreference"
                }
            }
        },
        "Heterogeneous": {
            "type": "object",
            "properties": {
                "targetDatabaseEngine": {
                    "$ref": "#/$defs/HeterogeneousTargetDatabaseEngines"
                }
            }
        },
        "HeterogeneousTargetDatabaseEngines": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HeterogeneousTargetDatabaseEngine"
            }
        },
        "HeterogeneousTargetDatabaseEngine": {
            "type": "string"
        },
        "Homogeneous": {
            "type": "object",
            "properties": {
                "targetDatabaseEngine": {
                    "$ref": "#/$defs/HomogeneousTargetDatabaseEngines"
                }
            }
        },
        "HomogeneousTargetDatabaseEngines": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HomogeneousTargetDatabaseEngine"
            }
        },
        "HomogeneousTargetDatabaseEngine": {
            "type": "string"
        },
        "NoDatabaseMigrationPreference": {
            "type": "object",
            "properties": {
                "targetDatabaseEngine": {
                    "$ref": "#/$defs/TargetDatabaseEngines"
                }
            }
        },
        "TargetDatabaseEngines": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetDatabaseEngine"
            }
        },
        "TargetDatabaseEngine": {
            "type": "string"
        },
        "ApplicationMode": {
            "type": "string"
        },
        "GetPortfolioSummaryRequest": {
            "type": "object",
            "properties": {}
        },
        "GetPortfolioSummaryResponse": {
            "type": "object",
            "properties": {
                "assessmentSummary": {
                    "$ref": "#/$defs/AssessmentSummary"
                }
            }
        },
        "AssessmentSummary": {
            "type": "object",
            "properties": {
                "listServerStrategySummary": {
                    "$ref": "#/$defs/ListStrategySummary"
                },
                "listApplicationComponentStrategySummary": {
                    "$ref": "#/$defs/ListStrategySummary"
                },
                "listAntipatternSeveritySummary": {
                    "$ref": "#/$defs/ListAntipatternSeveritySummary"
                },
                "listApplicationComponentSummary": {
                    "$ref": "#/$defs/ListApplicationComponentSummary"
                },
                "listServerSummary": {
                    "$ref": "#/$defs/ListServerSummary"
                },
                "antipatternReportS3Object": {
                    "$ref": "#/$defs/S3Object"
                },
                "antipatternReportStatus": {
                    "$ref": "#/$defs/AntipatternReportStatus"
                },
                "antipatternReportStatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "lastAnalyzedTimestamp": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "listApplicationComponentStatusSummary": {
                    "$ref": "#/$defs/ListApplicationComponentStatusSummary"
                },
                "listServerStatusSummary": {
                    "$ref": "#/$defs/ListServerStatusSummary"
                }
            }
        },
        "ListStrategySummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StrategySummary"
            }
        },
        "StrategySummary": {
            "type": "object",
            "properties": {
                "strategy": {
                    "$ref": "#/$defs/Strategy"
                },
                "count": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ListApplicationComponentSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationComponentSummary"
            }
        },
        "ApplicationComponentSummary": {
            "type": "object",
            "properties": {
                "appType": {
                    "$ref": "#/$defs/AppType"
                },
                "count": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ListServerSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerSummary"
            }
        },
        "ServerSummary": {
            "type": "object",
            "properties": {
                "ServerOsType": {
                    "$ref": "#/$defs/ServerOsType"
                },
                "count": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ServerOsType": {
            "type": "string"
        },
        "ListApplicationComponentStatusSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationComponentStatusSummary"
            }
        },
        "ApplicationComponentStatusSummary": {
            "type": "object",
            "properties": {
                "srcCodeOrDbAnalysisStatus": {
                    "$ref": "#/$defs/SrcCodeOrDbAnalysisStatus"
                },
                "count": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ListServerStatusSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerStatusSummary"
            }
        },
        "ServerStatusSummary": {
            "type": "object",
            "properties": {
                "runTimeAssessmentStatus": {
                    "$ref": "#/$defs/RunTimeAssessmentStatus"
                },
                "count": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "RunTimeAssessmentStatus": {
            "type": "string"
        },
        "GetRecommendationReportDetailsRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/RecommendationTaskId"
                }
            }
        },
        "RecommendationTaskId": {
            "type": "string"
        },
        "GetRecommendationReportDetailsResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/RecommendationTaskId"
                },
                "recommendationReportDetails": {
                    "$ref": "#/$defs/RecommendationReportDetails"
                }
            }
        },
        "RecommendationReportDetails": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/RecommendationReportStatus"
                },
                "statusMessage": {
                    "$ref": "#/$defs/RecommendationReportStatusMessage"
                },
                "startTime": {
                    "$ref": "#/$defs/RecommendationReportTimeStamp"
                },
                "completionTime": {
                    "$ref": "#/$defs/RecommendationReportTimeStamp"
                },
                "s3Bucket": {
                    "$ref": "#/$defs/String"
                },
                "s3Keys": {
                    "$ref": "#/$defs/S3Keys"
                }
            }
        },
        "RecommendationReportStatus": {
            "type": "string"
        },
        "RecommendationReportStatusMessage": {
            "type": "string"
        },
        "RecommendationReportTimeStamp": {
            "type": "string",
            "format": "date-time"
        },
        "S3Keys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "GetServerDetailsRequest": {
            "type": "object",
            "properties": {
                "serverId": {
                    "$ref": "#/$defs/ServerId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResult"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "MaxResult": {
            "type": "integer",
            "format": "int32"
        },
        "GetServerDetailsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/String"
                },
                "serverDetail": {
                    "$ref": "#/$defs/ServerDetail"
                },
                "associatedApplications": {
                    "$ref": "#/$defs/AssociatedApplications"
                }
            }
        },
        "ServerDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "recommendationSet": {
                    "$ref": "#/$defs/RecommendationSet"
                },
                "dataCollectionStatus": {
                    "$ref": "#/$defs/RunTimeAssessmentStatus"
                },
                "statusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "listAntipatternSeveritySummary": {
                    "$ref": "#/$defs/ListAntipatternSeveritySummary"
                },
                "systemInfo": {
                    "$ref": "#/$defs/SystemInfo"
                },
                "applicationComponentStrategySummary": {
                    "$ref": "#/$defs/ListStrategySummary"
                },
                "antipatternReportS3Object": {
                    "$ref": "#/$defs/S3Object"
                },
                "antipatternReportStatus": {
                    "$ref": "#/$defs/AntipatternReportStatus"
                },
                "antipatternReportStatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "serverType": {
                    "$ref": "#/$defs/String"
                },
                "lastAnalyzedTimestamp": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "serverError": {
                    "$ref": "#/$defs/ServerError"
                }
            }
        },
        "SystemInfo": {
            "type": "object",
            "properties": {
                "osInfo": {
                    "$ref": "#/$defs/OSInfo"
                },
                "fileSystemType": {
                    "$ref": "#/$defs/String"
                },
                "networkInfoList": {
                    "$ref": "#/$defs/NetworkInfoList"
                },
                "cpuArchitecture": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "OSInfo": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/OSType"
                },
                "version": {
                    "$ref": "#/$defs/OSVersion"
                }
            }
        },
        "OSType": {
            "type": "string"
        },
        "OSVersion": {
            "type": "string"
        },
        "NetworkInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInfo"
            }
        },
        "NetworkInfo": {
            "type": "object",
            "properties": {
                "interfaceName": {
                    "$ref": "#/$defs/InterfaceName"
                },
                "ipAddress": {
                    "$ref": "#/$defs/IPAddress"
                },
                "macAddress": {
                    "$ref": "#/$defs/MacAddress"
                },
                "netMask": {
                    "$ref": "#/$defs/NetMask"
                }
            }
        },
        "InterfaceName": {
            "type": "string"
        },
        "IPAddress": {
            "type": "string"
        },
        "MacAddress": {
            "type": "string"
        },
        "NetMask": {
            "type": "string"
        },
        "ServerError": {
            "type": "object",
            "properties": {
                "serverErrorCategory": {
                    "$ref": "#/$defs/ServerErrorCategory"
                }
            }
        },
        "ServerErrorCategory": {
            "type": "string"
        },
        "GetServerStrategiesRequest": {
            "type": "object",
            "properties": {
                "serverId": {
                    "$ref": "#/$defs/ServerId"
                }
            }
        },
        "GetServerStrategiesResponse": {
            "type": "object",
            "properties": {
                "serverStrategies": {
                    "$ref": "#/$defs/ServerStrategies"
                }
            }
        },
        "ServerStrategies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerStrategy"
            }
        },
        "ServerStrategy": {
            "type": "object",
            "properties": {
                "recommendation": {
                    "$ref": "#/$defs/RecommendationSet"
                },
                "status": {
                    "$ref": "#/$defs/StrategyRecommendation"
                },
                "numberOfApplicationComponents": {
                    "$ref": "#/$defs/Integer"
                },
                "isPreferred": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ListAnalyzableServersRequest": {
            "type": "object",
            "properties": {
                "sort": {
                    "$ref": "#/$defs/SortOrder"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResult"
                }
            }
        },
        "SortOrder": {
            "type": "string"
        },
        "ListAnalyzableServersResponse": {
            "type": "object",
            "properties": {
                "analyzableServers": {
                    "$ref": "#/$defs/AnalyzableServerSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AnalyzableServerSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnalyzableServerSummary"
            }
        },
        "AnalyzableServerSummary": {
            "type": "object",
            "properties": {
                "hostname": {
                    "$ref": "#/$defs/String"
                },
                "ipAddress": {
                    "$ref": "#/$defs/String"
                },
                "source": {
                    "$ref": "#/$defs/String"
                },
                "vmId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListApplicationComponentsRequest": {
            "type": "object",
            "properties": {
                "applicationComponentCriteria": {
                    "$ref": "#/$defs/ApplicationComponentCriteria"
                },
                "filterValue": {
                    "$ref": "#/$defs/String"
                },
                "sort": {
                    "$ref": "#/$defs/SortOrder"
                },
                "groupIdFilter": {
                    "$ref": "#/$defs/GroupIds"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResult"
                }
            }
        },
        "ApplicationComponentCriteria": {
            "type": "string"
        },
        "GroupIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Group"
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/GroupName"
                },
                "value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GroupName": {
            "type": "string"
        },
        "ListApplicationComponentsResponse": {
            "type": "object",
            "properties": {
                "applicationComponentInfos": {
                    "$ref": "#/$defs/ApplicationComponentDetails"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ApplicationComponentDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationComponentDetail"
            }
        },
        "ListCollectorsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResult"
                }
            }
        },
        "ListCollectorsResponse": {
            "type": "object",
            "properties": {
                "Collectors": {
                    "$ref": "#/$defs/Collectors"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Collectors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Collector"
            }
        },
        "Collector": {
            "type": "object",
            "properties": {
                "collectorId": {
                    "$ref": "#/$defs/String"
                },
                "ipAddress": {
                    "$ref": "#/$defs/String"
                },
                "hostName": {
                    "$ref": "#/$defs/String"
                },
                "collectorHealth": {
                    "$ref": "#/$defs/CollectorHealth"
                },
                "collectorVersion": {
                    "$ref": "#/$defs/String"
                },
                "registeredTimeStamp": {
                    "$ref": "#/$defs/String"
                },
                "lastActivityTimeStamp": {
                    "$ref": "#/$defs/String"
                },
                "configurationSummary": {
                    "$ref": "#/$defs/ConfigurationSummary"
                }
            }
        },
        "CollectorHealth": {
            "type": "string"
        },
        "ConfigurationSummary": {
            "type": "object",
            "properties": {
                "vcenterBasedRemoteInfoList": {
                    "$ref": "#/$defs/VcenterBasedRemoteInfoList"
                },
                "ipAddressBasedRemoteInfoList": {
                    "$ref": "#/$defs/IPAddressBasedRemoteInfoList"
                },
                "versionControlInfoList": {
                    "$ref": "#/$defs/VersionControlInfoList"
                },
                "pipelineInfoList": {
                    "$ref": "#/$defs/PipelineInfoList"
                },
                "remoteSourceCodeAnalysisServerInfo": {
                    "$ref": "#/$defs/RemoteSourceCodeAnalysisServerInfo"
                }
            }
        },
        "VcenterBasedRemoteInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VcenterBasedRemoteInfo"
            }
        },
        "VcenterBasedRemoteInfo": {
            "type": "object",
            "properties": {
                "vcenterConfigurationTimeStamp": {
                    "$ref": "#/$defs/String"
                },
                "osType": {
                    "$ref": "#/$defs/OSType"
                }
            }
        },
        "IPAddressBasedRemoteInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IPAddressBasedRemoteInfo"
            }
        },
        "IPAddressBasedRemoteInfo": {
            "type": "object",
            "properties": {
                "ipAddressConfigurationTimeStamp": {
                    "$ref": "#/$defs/String"
                },
                "authType": {
                    "$ref": "#/$defs/AuthType"
                },
                "osType": {
                    "$ref": "#/$defs/OSType"
                }
            }
        },
        "AuthType": {
            "type": "string"
        },
        "VersionControlInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VersionControlInfo"
            }
        },
        "VersionControlInfo": {
            "type": "object",
            "properties": {
                "versionControlType": {
                    "$ref": "#/$defs/VersionControlType"
                },
                "versionControlConfigurationTimeStamp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VersionControlType": {
            "type": "string"
        },
        "PipelineInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PipelineInfo"
            }
        },
        "PipelineInfo": {
            "type": "object",
            "properties": {
                "pipelineType": {
                    "$ref": "#/$defs/PipelineType"
                },
                "pipelineConfigurationTimeStamp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PipelineType": {
            "type": "string"
        },
        "RemoteSourceCodeAnalysisServerInfo": {
            "type": "object",
            "properties": {
                "remoteSourceCodeAnalysisServerConfigurationTimestamp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListImportFileTaskRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/String"
                },
                "maxResults": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ListImportFileTaskResponse": {
            "type": "object",
            "properties": {
                "taskInfos": {
                    "$ref": "#/$defs/ListImportFileTaskInformation"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListImportFileTaskInformation": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportFileTaskInformation"
            }
        },
        "ImportFileTaskInformation": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                },
                "status": {
                    "$ref": "#/$defs/ImportFileTaskStatus"
                },
                "startTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "inputS3Bucket": {
                    "$ref": "#/$defs/importS3Bucket"
                },
                "inputS3Key": {
                    "$ref": "#/$defs/importS3Key"
                },
                "statusReportS3Bucket": {
                    "$ref": "#/$defs/importS3Bucket"
                },
                "statusReportS3Key": {
                    "$ref": "#/$defs/importS3Key"
                },
                "completionTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "numberOfRecordsSuccess": {
                    "$ref": "#/$defs/Integer"
                },
                "numberOfRecordsFailed": {
                    "$ref": "#/$defs/Integer"
                },
                "importName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListServersRequest": {
            "type": "object",
            "properties": {
                "serverCriteria": {
                    "$ref": "#/$defs/ServerCriteria"
                },
                "filterValue": {
                    "$ref": "#/$defs/String"
                },
                "sort": {
                    "$ref": "#/$defs/SortOrder"
                },
                "groupIdFilter": {
                    "$ref": "#/$defs/GroupIds"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResult"
                }
            }
        },
        "ServerCriteria": {
            "type": "string"
        },
        "ListServersResponse": {
            "type": "object",
            "properties": {
                "serverInfos": {
                    "$ref": "#/$defs/ServerDetails"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ServerDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerDetail"
            }
        },
        "PutPortfolioPreferencesRequest": {
            "type": "object",
            "properties": {
                "prioritizeBusinessGoals": {
                    "$ref": "#/$defs/PrioritizeBusinessGoals"
                },
                "applicationPreferences": {
                    "$ref": "#/$defs/ApplicationPreferences"
                },
                "databasePreferences": {
                    "$ref": "#/$defs/DatabasePreferences"
                },
                "applicationMode": {
                    "$ref": "#/$defs/ApplicationMode"
                }
            }
        },
        "PutPortfolioPreferencesResponse": {
            "type": "object",
            "properties": {}
        },
        "StartAssessmentRequest": {
            "type": "object",
            "properties": {
                "s3bucketForAnalysisData": {
                    "$ref": "#/$defs/String"
                },
                "s3bucketForReportData": {
                    "$ref": "#/$defs/String"
                },
                "assessmentTargets": {
                    "$ref": "#/$defs/AssessmentTargets"
                },
                "assessmentDataSourceType": {
                    "$ref": "#/$defs/AssessmentDataSourceType"
                }
            }
        },
        "AssessmentDataSourceType": {
            "type": "string"
        },
        "StartAssessmentResponse": {
            "type": "object",
            "properties": {
                "assessmentId": {
                    "$ref": "#/$defs/AsyncTaskId"
                }
            }
        },
        "StartImportFileTaskRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "S3Bucket": {
                    "$ref": "#/$defs/importS3Bucket"
                },
                "s3key": {
                    "$ref": "#/$defs/String"
                },
                "dataSourceType": {
                    "$ref": "#/$defs/DataSourceType"
                },
                "groupId": {
                    "$ref": "#/$defs/GroupIds"
                },
                "s3bucketForReportData": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DataSourceType": {
            "type": "string"
        },
        "StartImportFileTaskResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StartRecommendationReportGenerationRequest": {
            "type": "object",
            "properties": {
                "outputFormat": {
                    "$ref": "#/$defs/OutputFormat"
                },
                "groupIdFilter": {
                    "$ref": "#/$defs/GroupIds"
                }
            }
        },
        "OutputFormat": {
            "type": "string"
        },
        "StartRecommendationReportGenerationResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/RecommendationTaskId"
                }
            }
        },
        "StopAssessmentRequest": {
            "type": "object",
            "properties": {
                "assessmentId": {
                    "$ref": "#/$defs/AsyncTaskId"
                }
            }
        },
        "StopAssessmentResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateApplicationComponentConfigRequest": {
            "type": "object",
            "properties": {
                "applicationComponentId": {
                    "$ref": "#/$defs/ApplicationComponentId"
                },
                "inclusionStatus": {
                    "$ref": "#/$defs/InclusionStatus"
                },
                "strategyOption": {
                    "$ref": "#/$defs/StrategyOption"
                },
                "sourceCodeList": {
                    "$ref": "#/$defs/SourceCodeList"
                },
                "secretsManagerKey": {
                    "$ref": "#/$defs/SecretsManagerKey"
                },
                "configureOnly": {
                    "$ref": "#/$defs/Boolean"
                },
                "appType": {
                    "$ref": "#/$defs/AppType"
                }
            }
        },
        "StrategyOption": {
            "type": "object",
            "properties": {
                "strategy": {
                    "$ref": "#/$defs/Strategy"
                },
                "toolName": {
                    "$ref": "#/$defs/TransformationToolName"
                },
                "targetDestination": {
                    "$ref": "#/$defs/TargetDestination"
                },
                "isPreferred": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SourceCodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SourceCode"
            }
        },
        "SourceCode": {
            "type": "object",
            "properties": {
                "versionControl": {
                    "$ref": "#/$defs/VersionControl"
                },
                "sourceVersion": {
                    "$ref": "#/$defs/SourceVersion"
                },
                "location": {
                    "$ref": "#/$defs/Location"
                },
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                }
            }
        },
        "VersionControl": {
            "type": "string"
        },
        "SourceVersion": {
            "type": "string"
        },
        "Location": {
            "type": "string"
        },
        "ProjectName": {
            "type": "string"
        },
        "SecretsManagerKey": {
            "type": "string"
        },
        "UpdateApplicationComponentConfigResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateServerConfigRequest": {
            "type": "object",
            "properties": {
                "serverId": {
                    "$ref": "#/$defs/ServerId"
                },
                "strategyOption": {
                    "$ref": "#/$defs/StrategyOption"
                }
            }
        },
        "UpdateServerConfigResponse": {
            "type": "object",
            "properties": {}
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://migrationhub-strategy-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://migrationhub-strategy-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://migrationhub-strategy.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://migrationhub-strategy.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}