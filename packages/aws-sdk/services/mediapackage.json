{
    "name": "mediapackage",
    "commands": [
        {
            "name": "ConfigureLogs",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/channels/{Id}/configure_logs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ConfigureLogsResponse"
                    },
                    "inject": [
                        "param.0.Id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ConfigureLogsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "EgressAccessLogs": {},
                        "Id": {},
                        "IngressAccessLogs": {}
                    }
                }
            }
        },
        {
            "name": "CreateChannel",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/channels"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateChannelResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateChannelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Description": {},
                        "Id": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateHarvestJob",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/harvest_jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateHarvestJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateHarvestJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "EndTime": {},
                        "Id": {},
                        "OriginEndpointId": {},
                        "S3Destination": {},
                        "StartTime": {}
                    }
                }
            }
        },
        {
            "name": "CreateOriginEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/origin_endpoints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateOriginEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateOriginEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Authorization": {},
                        "ChannelId": {},
                        "CmafPackage": {},
                        "DashPackage": {},
                        "Description": {},
                        "HlsPackage": {},
                        "Id": {},
                        "ManifestName": {},
                        "MssPackage": {},
                        "Origination": {},
                        "StartoverWindowSeconds": {},
                        "Tags": {},
                        "TimeDelaySeconds": {},
                        "Whitelist": {}
                    }
                }
            }
        },
        {
            "name": "DeleteChannel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/channels/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteChannelResponse"
                    },
                    "inject": [
                        "param.0.Id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteChannelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "DeleteOriginEndpoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/origin_endpoints/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteOriginEndpointResponse"
                    },
                    "inject": [
                        "param.0.Id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteOriginEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "DescribeChannel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/channels/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeChannelResponse"
                    },
                    "inject": [
                        "param.0.Id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeChannelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "DescribeHarvestJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/harvest_jobs/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeHarvestJobResponse"
                    },
                    "inject": [
                        "param.0.Id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeHarvestJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "DescribeOriginEndpoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/origin_endpoints/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeOriginEndpointResponse"
                    },
                    "inject": [
                        "param.0.Id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeOriginEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "ListChannels",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/channels"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListChannelsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListChannelsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListHarvestJobs",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/harvest_jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListHarvestJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListHarvestJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "IncludeChannelId": {},
                        "IncludeStatus": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListOriginEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/origin_endpoints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOriginEndpointsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOriginEndpointsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ChannelId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "RotateChannelCredentials",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/channels/{Id}/credentials"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RotateChannelCredentialsResponse"
                    },
                    "inject": [
                        "param.0.Id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RotateChannelCredentialsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "RotateIngestEndpointCredentials",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "IngestEndpointId": "route.IngestEndpointId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/channels/{Id}/ingest_endpoints/{IngestEndpointId}/credentials"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RotateIngestEndpointCredentialsResponse"
                    },
                    "inject": [
                        "param.0.Id",
                        "param.0.IngestEndpointId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RotateIngestEndpointCredentialsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {},
                        "IngestEndpointId": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "TagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateChannel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/channels/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateChannelResponse"
                    },
                    "inject": [
                        "param.0.Id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateChannelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Description": {},
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "UpdateOriginEndpoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/origin_endpoints/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateOriginEndpointResponse"
                    },
                    "inject": [
                        "param.0.Id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateOriginEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Authorization": {},
                        "CmafPackage": {},
                        "DashPackage": {},
                        "Description": {},
                        "HlsPackage": {},
                        "Id": {},
                        "ManifestName": {},
                        "MssPackage": {},
                        "Origination": {},
                        "StartoverWindowSeconds": {},
                        "TimeDelaySeconds": {},
                        "Whitelist": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "ConfigureLogsRequest": {
            "type": "object",
            "properties": {
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IngressAccessLogs": {
                    "$ref": "#/$defs/IngressAccessLogs"
                }
            }
        },
        "EgressAccessLogs": {
            "type": "object",
            "properties": {
                "LogGroupName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__string": {
            "type": "string"
        },
        "IngressAccessLogs": {
            "type": "object",
            "properties": {
                "LogGroupName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ConfigureLogsResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "HlsIngest": {
                    "$ref": "#/$defs/HlsIngest"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IngressAccessLogs": {
                    "$ref": "#/$defs/IngressAccessLogs"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "HlsIngest": {
            "type": "object",
            "properties": {
                "IngestEndpoints": {
                    "$ref": "#/$defs/__listOfIngestEndpoint"
                }
            }
        },
        "__listOfIngestEndpoint": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IngestEndpoint"
            }
        },
        "IngestEndpoint": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Password": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                },
                "Username": {
                    "$ref": "#/$defs/SensitiveString"
                }
            }
        },
        "SensitiveString": {
            "type": "string"
        },
        "Tags": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/__string"
            }
        },
        "CreateChannelRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CreateChannelResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "HlsIngest": {
                    "$ref": "#/$defs/HlsIngest"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IngressAccessLogs": {
                    "$ref": "#/$defs/IngressAccessLogs"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CreateHarvestJobRequest": {
            "type": "object",
            "properties": {
                "EndTime": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "OriginEndpointId": {
                    "$ref": "#/$defs/__string"
                },
                "S3Destination": {
                    "$ref": "#/$defs/S3Destination"
                },
                "StartTime": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "S3Destination": {
            "type": "object",
            "properties": {
                "BucketName": {
                    "$ref": "#/$defs/__string"
                },
                "ManifestKey": {
                    "$ref": "#/$defs/__string"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateHarvestJobResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "EndTime": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "OriginEndpointId": {
                    "$ref": "#/$defs/__string"
                },
                "S3Destination": {
                    "$ref": "#/$defs/S3Destination"
                },
                "StartTime": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                }
            }
        },
        "Status": {
            "enum": [
                "IN_PROGRESS",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "CreateOriginEndpointRequest": {
            "type": "object",
            "properties": {
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "CmafPackage": {
                    "$ref": "#/$defs/CmafPackageCreateOrUpdateParameters"
                },
                "DashPackage": {
                    "$ref": "#/$defs/DashPackage"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "HlsPackage": {
                    "$ref": "#/$defs/HlsPackage"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "ManifestName": {
                    "$ref": "#/$defs/__string"
                },
                "MssPackage": {
                    "$ref": "#/$defs/MssPackage"
                },
                "Origination": {
                    "$ref": "#/$defs/Origination"
                },
                "StartoverWindowSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "TimeDelaySeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Whitelist": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "Authorization": {
            "type": "object",
            "properties": {
                "CdnIdentifierSecret": {
                    "$ref": "#/$defs/__string"
                },
                "SecretsRoleArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CmafPackageCreateOrUpdateParameters": {
            "type": "object",
            "properties": {
                "Encryption": {
                    "$ref": "#/$defs/CmafEncryption"
                },
                "HlsManifests": {
                    "$ref": "#/$defs/__listOfHlsManifestCreateOrUpdateParameters"
                },
                "SegmentDurationSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "SegmentPrefix": {
                    "$ref": "#/$defs/__string"
                },
                "StreamSelection": {
                    "$ref": "#/$defs/StreamSelection"
                }
            }
        },
        "CmafEncryption": {
            "type": "object",
            "properties": {
                "ConstantInitializationVector": {
                    "$ref": "#/$defs/__string"
                },
                "EncryptionMethod": {
                    "$ref": "#/$defs/CmafEncryptionMethod"
                },
                "KeyRotationIntervalSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "SpekeKeyProvider": {
                    "$ref": "#/$defs/SpekeKeyProvider"
                }
            }
        },
        "CmafEncryptionMethod": {
            "enum": [
                "SAMPLE_AES",
                "AES_CTR"
            ]
        },
        "__integer": {
            "type": "integer",
            "format": "int32"
        },
        "SpekeKeyProvider": {
            "type": "object",
            "properties": {
                "CertificateArn": {
                    "$ref": "#/$defs/__string"
                },
                "EncryptionContractConfiguration": {
                    "$ref": "#/$defs/EncryptionContractConfiguration"
                },
                "ResourceId": {
                    "$ref": "#/$defs/__string"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "SystemIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "EncryptionContractConfiguration": {
            "type": "object",
            "properties": {
                "PresetSpeke20Audio": {
                    "$ref": "#/$defs/PresetSpeke20Audio"
                },
                "PresetSpeke20Video": {
                    "$ref": "#/$defs/PresetSpeke20Video"
                }
            }
        },
        "PresetSpeke20Audio": {
            "enum": [
                "PRESET_AUDIO_1",
                "PRESET_AUDIO_2",
                "PRESET_AUDIO_3",
                "SHARED",
                "UNENCRYPTED"
            ]
        },
        "PresetSpeke20Video": {
            "enum": [
                "PRESET_VIDEO_1",
                "PRESET_VIDEO_2",
                "PRESET_VIDEO_3",
                "PRESET_VIDEO_4",
                "PRESET_VIDEO_5",
                "PRESET_VIDEO_6",
                "PRESET_VIDEO_7",
                "PRESET_VIDEO_8",
                "SHARED",
                "UNENCRYPTED"
            ]
        },
        "__listOf__string": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__string"
            }
        },
        "__listOfHlsManifestCreateOrUpdateParameters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HlsManifestCreateOrUpdateParameters"
            }
        },
        "HlsManifestCreateOrUpdateParameters": {
            "type": "object",
            "properties": {
                "AdMarkers": {
                    "$ref": "#/$defs/AdMarkers"
                },
                "AdTriggers": {
                    "$ref": "#/$defs/AdTriggers"
                },
                "AdsOnDeliveryRestrictions": {
                    "$ref": "#/$defs/AdsOnDeliveryRestrictions"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IncludeIframeOnlyStream": {
                    "$ref": "#/$defs/__boolean"
                },
                "ManifestName": {
                    "$ref": "#/$defs/__string"
                },
                "PlaylistType": {
                    "$ref": "#/$defs/PlaylistType"
                },
                "PlaylistWindowSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "ProgramDateTimeIntervalSeconds": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "AdMarkers": {
            "enum": [
                "NONE",
                "SCTE35_ENHANCED",
                "PASSTHROUGH",
                "DATERANGE"
            ]
        },
        "AdTriggers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__AdTriggersElement"
            }
        },
        "__AdTriggersElement": {
            "enum": [
                "SPLICE_INSERT",
                "BREAK",
                "PROVIDER_ADVERTISEMENT",
                "DISTRIBUTOR_ADVERTISEMENT",
                "PROVIDER_PLACEMENT_OPPORTUNITY",
                "DISTRIBUTOR_PLACEMENT_OPPORTUNITY",
                "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY",
                "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY"
            ]
        },
        "AdsOnDeliveryRestrictions": {
            "enum": [
                "NONE",
                "RESTRICTED",
                "UNRESTRICTED",
                "BOTH"
            ]
        },
        "__boolean": {
            "type": "boolean"
        },
        "PlaylistType": {
            "enum": [
                "NONE",
                "EVENT",
                "VOD"
            ]
        },
        "StreamSelection": {
            "type": "object",
            "properties": {
                "MaxVideoBitsPerSecond": {
                    "$ref": "#/$defs/__integer"
                },
                "MinVideoBitsPerSecond": {
                    "$ref": "#/$defs/__integer"
                },
                "StreamOrder": {
                    "$ref": "#/$defs/StreamOrder"
                }
            }
        },
        "StreamOrder": {
            "enum": [
                "ORIGINAL",
                "VIDEO_BITRATE_ASCENDING",
                "VIDEO_BITRATE_DESCENDING"
            ]
        },
        "DashPackage": {
            "type": "object",
            "properties": {
                "AdTriggers": {
                    "$ref": "#/$defs/AdTriggers"
                },
                "AdsOnDeliveryRestrictions": {
                    "$ref": "#/$defs/AdsOnDeliveryRestrictions"
                },
                "Encryption": {
                    "$ref": "#/$defs/DashEncryption"
                },
                "IncludeIframeOnlyStream": {
                    "$ref": "#/$defs/__boolean"
                },
                "ManifestLayout": {
                    "$ref": "#/$defs/ManifestLayout"
                },
                "ManifestWindowSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "MinBufferTimeSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "MinUpdatePeriodSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "PeriodTriggers": {
                    "$ref": "#/$defs/__listOf__PeriodTriggersElement"
                },
                "Profile": {
                    "$ref": "#/$defs/Profile"
                },
                "SegmentDurationSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "SegmentTemplateFormat": {
                    "$ref": "#/$defs/SegmentTemplateFormat"
                },
                "StreamSelection": {
                    "$ref": "#/$defs/StreamSelection"
                },
                "SuggestedPresentationDelaySeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "UtcTiming": {
                    "$ref": "#/$defs/UtcTiming"
                },
                "UtcTimingUri": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DashEncryption": {
            "type": "object",
            "properties": {
                "KeyRotationIntervalSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "SpekeKeyProvider": {
                    "$ref": "#/$defs/SpekeKeyProvider"
                }
            }
        },
        "ManifestLayout": {
            "enum": [
                "FULL",
                "COMPACT",
                "DRM_TOP_LEVEL_COMPACT"
            ]
        },
        "__listOf__PeriodTriggersElement": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__PeriodTriggersElement"
            }
        },
        "__PeriodTriggersElement": {
            "enum": [
                "ADS"
            ]
        },
        "Profile": {
            "enum": [
                "NONE",
                "HBBTV_1_5",
                "HYBRIDCAST",
                "DVB_DASH_2014"
            ]
        },
        "SegmentTemplateFormat": {
            "enum": [
                "NUMBER_WITH_TIMELINE",
                "TIME_WITH_TIMELINE",
                "NUMBER_WITH_DURATION"
            ]
        },
        "UtcTiming": {
            "enum": [
                "NONE",
                "HTTP_HEAD",
                "HTTP_ISO",
                "HTTP_XSDATE"
            ]
        },
        "HlsPackage": {
            "type": "object",
            "properties": {
                "AdMarkers": {
                    "$ref": "#/$defs/AdMarkers"
                },
                "AdTriggers": {
                    "$ref": "#/$defs/AdTriggers"
                },
                "AdsOnDeliveryRestrictions": {
                    "$ref": "#/$defs/AdsOnDeliveryRestrictions"
                },
                "Encryption": {
                    "$ref": "#/$defs/HlsEncryption"
                },
                "IncludeDvbSubtitles": {
                    "$ref": "#/$defs/__boolean"
                },
                "IncludeIframeOnlyStream": {
                    "$ref": "#/$defs/__boolean"
                },
                "PlaylistType": {
                    "$ref": "#/$defs/PlaylistType"
                },
                "PlaylistWindowSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "ProgramDateTimeIntervalSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "SegmentDurationSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "StreamSelection": {
                    "$ref": "#/$defs/StreamSelection"
                },
                "UseAudioRenditionGroup": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "HlsEncryption": {
            "type": "object",
            "properties": {
                "ConstantInitializationVector": {
                    "$ref": "#/$defs/__string"
                },
                "EncryptionMethod": {
                    "$ref": "#/$defs/EncryptionMethod"
                },
                "KeyRotationIntervalSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "RepeatExtXKey": {
                    "$ref": "#/$defs/__boolean"
                },
                "SpekeKeyProvider": {
                    "$ref": "#/$defs/SpekeKeyProvider"
                }
            }
        },
        "EncryptionMethod": {
            "enum": [
                "AES_128",
                "SAMPLE_AES"
            ]
        },
        "MssPackage": {
            "type": "object",
            "properties": {
                "Encryption": {
                    "$ref": "#/$defs/MssEncryption"
                },
                "ManifestWindowSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "SegmentDurationSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "StreamSelection": {
                    "$ref": "#/$defs/StreamSelection"
                }
            }
        },
        "MssEncryption": {
            "type": "object",
            "properties": {
                "SpekeKeyProvider": {
                    "$ref": "#/$defs/SpekeKeyProvider"
                }
            }
        },
        "Origination": {
            "enum": [
                "ALLOW",
                "DENY"
            ]
        },
        "CreateOriginEndpointResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "CmafPackage": {
                    "$ref": "#/$defs/CmafPackage"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "DashPackage": {
                    "$ref": "#/$defs/DashPackage"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "HlsPackage": {
                    "$ref": "#/$defs/HlsPackage"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "ManifestName": {
                    "$ref": "#/$defs/__string"
                },
                "MssPackage": {
                    "$ref": "#/$defs/MssPackage"
                },
                "Origination": {
                    "$ref": "#/$defs/Origination"
                },
                "StartoverWindowSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "TimeDelaySeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                },
                "Whitelist": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "CmafPackage": {
            "type": "object",
            "properties": {
                "Encryption": {
                    "$ref": "#/$defs/CmafEncryption"
                },
                "HlsManifests": {
                    "$ref": "#/$defs/__listOfHlsManifest"
                },
                "SegmentDurationSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "SegmentPrefix": {
                    "$ref": "#/$defs/__string"
                },
                "StreamSelection": {
                    "$ref": "#/$defs/StreamSelection"
                }
            }
        },
        "__listOfHlsManifest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HlsManifest"
            }
        },
        "HlsManifest": {
            "type": "object",
            "properties": {
                "AdMarkers": {
                    "$ref": "#/$defs/AdMarkers"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IncludeIframeOnlyStream": {
                    "$ref": "#/$defs/__boolean"
                },
                "ManifestName": {
                    "$ref": "#/$defs/__string"
                },
                "PlaylistType": {
                    "$ref": "#/$defs/PlaylistType"
                },
                "PlaylistWindowSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "ProgramDateTimeIntervalSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                },
                "AdTriggers": {
                    "$ref": "#/$defs/AdTriggers"
                },
                "AdsOnDeliveryRestrictions": {
                    "$ref": "#/$defs/AdsOnDeliveryRestrictions"
                }
            }
        },
        "DeleteChannelRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteChannelResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteOriginEndpointRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteOriginEndpointResponse": {
            "type": "object",
            "properties": {}
        },
        "DescribeChannelRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeChannelResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "HlsIngest": {
                    "$ref": "#/$defs/HlsIngest"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IngressAccessLogs": {
                    "$ref": "#/$defs/IngressAccessLogs"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DescribeHarvestJobRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeHarvestJobResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "EndTime": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "OriginEndpointId": {
                    "$ref": "#/$defs/__string"
                },
                "S3Destination": {
                    "$ref": "#/$defs/S3Destination"
                },
                "StartTime": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                }
            }
        },
        "DescribeOriginEndpointRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeOriginEndpointResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "CmafPackage": {
                    "$ref": "#/$defs/CmafPackage"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "DashPackage": {
                    "$ref": "#/$defs/DashPackage"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "HlsPackage": {
                    "$ref": "#/$defs/HlsPackage"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "ManifestName": {
                    "$ref": "#/$defs/__string"
                },
                "MssPackage": {
                    "$ref": "#/$defs/MssPackage"
                },
                "Origination": {
                    "$ref": "#/$defs/Origination"
                },
                "StartoverWindowSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "TimeDelaySeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                },
                "Whitelist": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "ListChannelsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListChannelsResponse": {
            "type": "object",
            "properties": {
                "Channels": {
                    "$ref": "#/$defs/__listOfChannel"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfChannel": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Channel"
            }
        },
        "Channel": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "HlsIngest": {
                    "$ref": "#/$defs/HlsIngest"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IngressAccessLogs": {
                    "$ref": "#/$defs/IngressAccessLogs"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListHarvestJobsRequest": {
            "type": "object",
            "properties": {
                "IncludeChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "IncludeStatus": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListHarvestJobsResponse": {
            "type": "object",
            "properties": {
                "HarvestJobs": {
                    "$ref": "#/$defs/__listOfHarvestJob"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfHarvestJob": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HarvestJob"
            }
        },
        "HarvestJob": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "EndTime": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "OriginEndpointId": {
                    "$ref": "#/$defs/__string"
                },
                "S3Destination": {
                    "$ref": "#/$defs/S3Destination"
                },
                "StartTime": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                }
            }
        },
        "ListOriginEndpointsRequest": {
            "type": "object",
            "properties": {
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListOriginEndpointsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "OriginEndpoints": {
                    "$ref": "#/$defs/__listOfOriginEndpoint"
                }
            }
        },
        "__listOfOriginEndpoint": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OriginEndpoint"
            }
        },
        "OriginEndpoint": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "CmafPackage": {
                    "$ref": "#/$defs/CmafPackage"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "DashPackage": {
                    "$ref": "#/$defs/DashPackage"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "HlsPackage": {
                    "$ref": "#/$defs/HlsPackage"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "ManifestName": {
                    "$ref": "#/$defs/__string"
                },
                "MssPackage": {
                    "$ref": "#/$defs/MssPackage"
                },
                "Origination": {
                    "$ref": "#/$defs/Origination"
                },
                "StartoverWindowSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "TimeDelaySeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                },
                "Whitelist": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "__mapOf__string": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/__string"
            }
        },
        "RotateChannelCredentialsRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RotateChannelCredentialsResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "HlsIngest": {
                    "$ref": "#/$defs/HlsIngest"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IngressAccessLogs": {
                    "$ref": "#/$defs/IngressAccessLogs"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "RotateIngestEndpointCredentialsRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IngestEndpointId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RotateIngestEndpointCredentialsResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "HlsIngest": {
                    "$ref": "#/$defs/HlsIngest"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IngressAccessLogs": {
                    "$ref": "#/$defs/IngressAccessLogs"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "TagKeys": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "UpdateChannelRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateChannelResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "HlsIngest": {
                    "$ref": "#/$defs/HlsIngest"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "IngressAccessLogs": {
                    "$ref": "#/$defs/IngressAccessLogs"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "UpdateOriginEndpointRequest": {
            "type": "object",
            "properties": {
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "CmafPackage": {
                    "$ref": "#/$defs/CmafPackageCreateOrUpdateParameters"
                },
                "DashPackage": {
                    "$ref": "#/$defs/DashPackage"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "HlsPackage": {
                    "$ref": "#/$defs/HlsPackage"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "ManifestName": {
                    "$ref": "#/$defs/__string"
                },
                "MssPackage": {
                    "$ref": "#/$defs/MssPackage"
                },
                "Origination": {
                    "$ref": "#/$defs/Origination"
                },
                "StartoverWindowSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "TimeDelaySeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Whitelist": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "UpdateOriginEndpointResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "ChannelId": {
                    "$ref": "#/$defs/__string"
                },
                "CmafPackage": {
                    "$ref": "#/$defs/CmafPackage"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "DashPackage": {
                    "$ref": "#/$defs/DashPackage"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "HlsPackage": {
                    "$ref": "#/$defs/HlsPackage"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "ManifestName": {
                    "$ref": "#/$defs/__string"
                },
                "MssPackage": {
                    "$ref": "#/$defs/MssPackage"
                },
                "Origination": {
                    "$ref": "#/$defs/Origination"
                },
                "StartoverWindowSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "TimeDelaySeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                },
                "Whitelist": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mediapackage-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mediapackage-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mediapackage.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://mediapackage.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}