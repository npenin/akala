{
    "name": "kafka",
    "commands": [
        {
            "name": "BatchAssociateScramSecret",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/clusters/{ClusterArn}/scram-secrets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchAssociateScramSecretResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchAssociateScramSecretRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "BatchDisassociateScramSecret",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/v1/clusters/{ClusterArn}/scram-secrets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDisassociateScramSecretResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDisassociateScramSecretRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateCluster",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/clusters"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateClusterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateClusterV2",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/api/v2/clusters"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateClusterV2Response"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateClusterV2Request"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/configurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateReplicator",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/replication/v1/replicators"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateReplicatorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateReplicatorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateVpcConnection",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/vpc-connection"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpcConnectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpcConnectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteCluster",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/clusters/{ClusterArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteClusterResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteClusterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteClusterPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/clusters/{ClusterArn}/policy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteClusterPolicyResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteClusterPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Arn": "route.Arn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/configurations/{Arn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteConfigurationResponse"
                    },
                    "inject": [
                        "param.0.Arn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteReplicator",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReplicatorArn": "route.ReplicatorArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/replication/v1/replicators/{ReplicatorArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteReplicatorResponse"
                    },
                    "inject": [
                        "param.0.ReplicatorArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteReplicatorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVpcConnection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Arn": "route.Arn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/vpc-connection/{Arn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVpcConnectionResponse"
                    },
                    "inject": [
                        "param.0.Arn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpcConnectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeCluster",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/clusters/{ClusterArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClusterResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClusterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeClusterOperation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterOperationArn": "route.ClusterOperationArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/operations/{ClusterOperationArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClusterOperationResponse"
                    },
                    "inject": [
                        "param.0.ClusterOperationArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClusterOperationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeClusterOperationV2",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterOperationArn": "route.ClusterOperationArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v2/operations/{ClusterOperationArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClusterOperationV2Response"
                    },
                    "inject": [
                        "param.0.ClusterOperationArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClusterOperationV2Request"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeClusterV2",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v2/clusters/{ClusterArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClusterV2Response"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClusterV2Request"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Arn": "route.Arn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/configurations/{Arn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeConfigurationResponse"
                    },
                    "inject": [
                        "param.0.Arn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeConfigurationRevision",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Arn": "route.Arn",
                            "Revision": "route.Revision",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/configurations/{Arn}/revisions/{Revision}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeConfigurationRevisionResponse"
                    },
                    "inject": [
                        "param.0.Arn",
                        "param.0.Revision",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeConfigurationRevisionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeReplicator",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReplicatorArn": "route.ReplicatorArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/replication/v1/replicators/{ReplicatorArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReplicatorResponse"
                    },
                    "inject": [
                        "param.0.ReplicatorArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReplicatorRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeVpcConnection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Arn": "route.Arn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/vpc-connection/{Arn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcConnectionResponse"
                    },
                    "inject": [
                        "param.0.Arn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcConnectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetBootstrapBrokers",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/clusters/{ClusterArn}/bootstrap-brokers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBootstrapBrokersResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBootstrapBrokersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetClusterPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/clusters/{ClusterArn}/policy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetClusterPolicyResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetClusterPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetCompatibleKafkaVersions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/compatible-kafka-versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCompatibleKafkaVersionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCompatibleKafkaVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListClientVpcConnections",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/clusters/{ClusterArn}/client-vpc-connections"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListClientVpcConnectionsResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListClientVpcConnectionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListClusterOperations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/clusters/{ClusterArn}/operations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListClusterOperationsResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListClusterOperationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListClusterOperationsV2",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v2/clusters/{ClusterArn}/operations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListClusterOperationsV2Response"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListClusterOperationsV2Request"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListClusters",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/clusters"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListClustersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListClustersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListClustersV2",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/api/v2/clusters"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListClustersV2Response"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListClustersV2Request"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListConfigurationRevisions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Arn": "route.Arn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/configurations/{Arn}/revisions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListConfigurationRevisionsResponse"
                    },
                    "inject": [
                        "param.0.Arn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListConfigurationRevisionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/configurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListKafkaVersions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/kafka-versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKafkaVersionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKafkaVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListNodes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/clusters/{ClusterArn}/nodes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNodesResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListNodesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListReplicators",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/replication/v1/replicators"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListReplicatorsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListReplicatorsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListScramSecrets",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/clusters/{ClusterArn}/scram-secrets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListScramSecretsResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListScramSecretsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListVpcConnections",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/vpc-connections"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVpcConnectionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListVpcConnectionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutClusterPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/clusters/{ClusterArn}/policy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutClusterPolicyResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutClusterPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "RebootBroker",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/clusters/{ClusterArn}/reboot-broker"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RebootBrokerResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RebootBrokerRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "RejectClientVpcConnection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/clusters/{ClusterArn}/client-vpc-connection"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RejectClientVpcConnectionResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RejectClientVpcConnectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateBrokerCount",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/clusters/{ClusterArn}/nodes/count"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBrokerCountResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBrokerCountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateBrokerStorage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/clusters/{ClusterArn}/nodes/storage"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBrokerStorageResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBrokerStorageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateBrokerType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/clusters/{ClusterArn}/nodes/type"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBrokerTypeResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBrokerTypeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateClusterConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/clusters/{ClusterArn}/configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateClusterConfigurationResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateClusterConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateClusterKafkaVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/clusters/{ClusterArn}/version"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateClusterKafkaVersionResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateClusterKafkaVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Arn": "route.Arn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/configurations/{Arn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateConfigurationResponse"
                    },
                    "inject": [
                        "param.0.Arn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateConnectivity",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/clusters/{ClusterArn}/connectivity"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateConnectivityResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateConnectivityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMonitoring",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/clusters/{ClusterArn}/monitoring"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMonitoringResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMonitoringRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateReplicationInfo",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReplicatorArn": "route.ReplicatorArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/replication/v1/replicators/{ReplicatorArn}/replication-info"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateReplicationInfoResponse"
                    },
                    "inject": [
                        "param.0.ReplicatorArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateReplicationInfoRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSecurity",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/v1/clusters/{ClusterArn}/security"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSecurityResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSecurityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateStorage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ClusterArn": "route.ClusterArn",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/clusters/{ClusterArn}/storage"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateStorageResponse"
                    },
                    "inject": [
                        "param.0.ClusterArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateStorageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchAssociateScramSecretResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "UnprocessedScramSecrets": {
                    "$ref": "#/$defs/__listOfUnprocessedScramSecret"
                }
            }
        },
        "__string": {
            "type": "string"
        },
        "__listOfUnprocessedScramSecret": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnprocessedScramSecret"
            }
        },
        "UnprocessedScramSecret": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "$ref": "#/$defs/__string"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/__string"
                },
                "SecretArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "BatchAssociateScramSecretRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "SecretArnList": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "__listOf__string": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__string"
            }
        },
        "BatchDisassociateScramSecretResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "UnprocessedScramSecrets": {
                    "$ref": "#/$defs/__listOfUnprocessedScramSecret"
                }
            }
        },
        "BatchDisassociateScramSecretRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "SecretArnList": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "CreateClusterResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterName": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ClusterState"
                }
            }
        },
        "ClusterState": {
            "enum": [
                "ACTIVE",
                "CREATING",
                "DELETING",
                "FAILED",
                "HEALING",
                "MAINTENANCE",
                "REBOOTING_BROKER",
                "UPDATING"
            ]
        },
        "CreateClusterRequest": {
            "type": "object",
            "properties": {
                "BrokerNodeGroupInfo": {
                    "$ref": "#/$defs/BrokerNodeGroupInfo"
                },
                "ClientAuthentication": {
                    "$ref": "#/$defs/ClientAuthentication"
                },
                "ClusterName": {
                    "$ref": "#/$defs/__stringMin1Max64"
                },
                "ConfigurationInfo": {
                    "$ref": "#/$defs/ConfigurationInfo"
                },
                "EncryptionInfo": {
                    "$ref": "#/$defs/EncryptionInfo"
                },
                "EnhancedMonitoring": {
                    "$ref": "#/$defs/EnhancedMonitoring"
                },
                "OpenMonitoring": {
                    "$ref": "#/$defs/OpenMonitoringInfo"
                },
                "KafkaVersion": {
                    "$ref": "#/$defs/__stringMin1Max128"
                },
                "LoggingInfo": {
                    "$ref": "#/$defs/LoggingInfo"
                },
                "NumberOfBrokerNodes": {
                    "$ref": "#/$defs/__integerMin1Max15"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                },
                "StorageMode": {
                    "$ref": "#/$defs/StorageMode"
                }
            }
        },
        "BrokerNodeGroupInfo": {
            "type": "object",
            "properties": {
                "BrokerAZDistribution": {
                    "$ref": "#/$defs/BrokerAZDistribution"
                },
                "ClientSubnets": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "InstanceType": {
                    "$ref": "#/$defs/__stringMin5Max32"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "StorageInfo": {
                    "$ref": "#/$defs/StorageInfo"
                },
                "ConnectivityInfo": {
                    "$ref": "#/$defs/ConnectivityInfo"
                },
                "ZoneIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "BrokerAZDistribution": {
            "enum": [
                "DEFAULT"
            ]
        },
        "__stringMin5Max32": {
            "type": "string"
        },
        "StorageInfo": {
            "type": "object",
            "properties": {
                "EbsStorageInfo": {
                    "$ref": "#/$defs/EBSStorageInfo"
                }
            }
        },
        "EBSStorageInfo": {
            "type": "object",
            "properties": {
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/__integerMin1Max16384"
                }
            }
        },
        "ProvisionedThroughput": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/__boolean"
                },
                "VolumeThroughput": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "__boolean": {
            "type": "boolean"
        },
        "__integer": {
            "type": "integer",
            "format": "int32"
        },
        "__integerMin1Max16384": {
            "type": "integer",
            "format": "int32"
        },
        "ConnectivityInfo": {
            "type": "object",
            "properties": {
                "PublicAccess": {
                    "$ref": "#/$defs/PublicAccess"
                },
                "VpcConnectivity": {
                    "$ref": "#/$defs/VpcConnectivity"
                }
            }
        },
        "PublicAccess": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "VpcConnectivity": {
            "type": "object",
            "properties": {
                "ClientAuthentication": {
                    "$ref": "#/$defs/VpcConnectivityClientAuthentication"
                }
            }
        },
        "VpcConnectivityClientAuthentication": {
            "type": "object",
            "properties": {
                "Sasl": {
                    "$ref": "#/$defs/VpcConnectivitySasl"
                },
                "Tls": {
                    "$ref": "#/$defs/VpcConnectivityTls"
                }
            }
        },
        "VpcConnectivitySasl": {
            "type": "object",
            "properties": {
                "Scram": {
                    "$ref": "#/$defs/VpcConnectivityScram"
                },
                "Iam": {
                    "$ref": "#/$defs/VpcConnectivityIam"
                }
            }
        },
        "VpcConnectivityScram": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "VpcConnectivityIam": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "VpcConnectivityTls": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "ClientAuthentication": {
            "type": "object",
            "properties": {
                "Sasl": {
                    "$ref": "#/$defs/Sasl"
                },
                "Tls": {
                    "$ref": "#/$defs/Tls"
                },
                "Unauthenticated": {
                    "$ref": "#/$defs/Unauthenticated"
                }
            }
        },
        "Sasl": {
            "type": "object",
            "properties": {
                "Scram": {
                    "$ref": "#/$defs/Scram"
                },
                "Iam": {
                    "$ref": "#/$defs/Iam"
                }
            }
        },
        "Scram": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "Iam": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "Tls": {
            "type": "object",
            "properties": {
                "CertificateAuthorityArnList": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Enabled": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "Unauthenticated": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "__stringMin1Max64": {
            "type": "string"
        },
        "ConfigurationInfo": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Revision": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "__long": {
            "type": "integer",
            "format": "int64"
        },
        "EncryptionInfo": {
            "type": "object",
            "properties": {
                "EncryptionAtRest": {
                    "$ref": "#/$defs/EncryptionAtRest"
                },
                "EncryptionInTransit": {
                    "$ref": "#/$defs/EncryptionInTransit"
                }
            }
        },
        "EncryptionAtRest": {
            "type": "object",
            "properties": {
                "DataVolumeKMSKeyId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "EncryptionInTransit": {
            "type": "object",
            "properties": {
                "ClientBroker": {
                    "$ref": "#/$defs/ClientBroker"
                },
                "InCluster": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "ClientBroker": {
            "enum": [
                "TLS",
                "TLS_PLAINTEXT",
                "PLAINTEXT"
            ]
        },
        "EnhancedMonitoring": {
            "enum": [
                "DEFAULT",
                "PER_BROKER",
                "PER_TOPIC_PER_BROKER",
                "PER_TOPIC_PER_PARTITION"
            ]
        },
        "OpenMonitoringInfo": {
            "type": "object",
            "properties": {
                "Prometheus": {
                    "$ref": "#/$defs/PrometheusInfo"
                }
            }
        },
        "PrometheusInfo": {
            "type": "object",
            "properties": {
                "JmxExporter": {
                    "$ref": "#/$defs/JmxExporterInfo"
                },
                "NodeExporter": {
                    "$ref": "#/$defs/NodeExporterInfo"
                }
            }
        },
        "JmxExporterInfo": {
            "type": "object",
            "properties": {
                "EnabledInBroker": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "NodeExporterInfo": {
            "type": "object",
            "properties": {
                "EnabledInBroker": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "__stringMin1Max128": {
            "type": "string"
        },
        "LoggingInfo": {
            "type": "object",
            "properties": {
                "BrokerLogs": {
                    "$ref": "#/$defs/BrokerLogs"
                }
            }
        },
        "BrokerLogs": {
            "type": "object",
            "properties": {
                "CloudWatchLogs": {
                    "$ref": "#/$defs/CloudWatchLogs"
                },
                "Firehose": {
                    "$ref": "#/$defs/Firehose"
                },
                "S3": {
                    "$ref": "#/$defs/S3"
                }
            }
        },
        "CloudWatchLogs": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/__boolean"
                },
                "LogGroup": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "Firehose": {
            "type": "object",
            "properties": {
                "DeliveryStream": {
                    "$ref": "#/$defs/__string"
                },
                "Enabled": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "S3": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/__string"
                },
                "Enabled": {
                    "$ref": "#/$defs/__boolean"
                },
                "Prefix": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__integerMin1Max15": {
            "type": "integer",
            "format": "int32"
        },
        "__mapOf__string": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/__string"
            }
        },
        "StorageMode": {
            "enum": [
                "LOCAL",
                "TIERED"
            ]
        },
        "CreateClusterV2Response": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterName": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ClusterState"
                },
                "ClusterType": {
                    "$ref": "#/$defs/ClusterType"
                }
            }
        },
        "ClusterType": {
            "enum": [
                "PROVISIONED",
                "SERVERLESS"
            ]
        },
        "CreateClusterV2Request": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/__stringMin1Max64"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                },
                "Provisioned": {
                    "$ref": "#/$defs/ProvisionedRequest"
                },
                "Serverless": {
                    "$ref": "#/$defs/ServerlessRequest"
                }
            }
        },
        "ProvisionedRequest": {
            "type": "object",
            "properties": {
                "BrokerNodeGroupInfo": {
                    "$ref": "#/$defs/BrokerNodeGroupInfo"
                },
                "ClientAuthentication": {
                    "$ref": "#/$defs/ClientAuthentication"
                },
                "ConfigurationInfo": {
                    "$ref": "#/$defs/ConfigurationInfo"
                },
                "EncryptionInfo": {
                    "$ref": "#/$defs/EncryptionInfo"
                },
                "EnhancedMonitoring": {
                    "$ref": "#/$defs/EnhancedMonitoring"
                },
                "OpenMonitoring": {
                    "$ref": "#/$defs/OpenMonitoringInfo"
                },
                "KafkaVersion": {
                    "$ref": "#/$defs/__stringMin1Max128"
                },
                "LoggingInfo": {
                    "$ref": "#/$defs/LoggingInfo"
                },
                "NumberOfBrokerNodes": {
                    "$ref": "#/$defs/__integerMin1Max15"
                },
                "StorageMode": {
                    "$ref": "#/$defs/StorageMode"
                }
            }
        },
        "ServerlessRequest": {
            "type": "object",
            "properties": {
                "VpcConfigs": {
                    "$ref": "#/$defs/__listOfVpcConfig"
                },
                "ClientAuthentication": {
                    "$ref": "#/$defs/ServerlessClientAuthentication"
                }
            }
        },
        "__listOfVpcConfig": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcConfig"
            }
        },
        "VpcConfig": {
            "type": "object",
            "properties": {
                "SubnetIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "ServerlessClientAuthentication": {
            "type": "object",
            "properties": {
                "Sasl": {
                    "$ref": "#/$defs/ServerlessSasl"
                }
            }
        },
        "ServerlessSasl": {
            "type": "object",
            "properties": {
                "Iam": {
                    "$ref": "#/$defs/Iam"
                }
            }
        },
        "CreateConfigurationResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "LatestRevision": {
                    "$ref": "#/$defs/ConfigurationRevision"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ConfigurationState"
                }
            }
        },
        "__timestampIso8601": {
            "type": "string",
            "format": "date-time"
        },
        "ConfigurationRevision": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "Revision": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "ConfigurationState": {
            "enum": [
                "ACTIVE",
                "DELETING",
                "DELETE_FAILED"
            ]
        },
        "CreateConfigurationRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "KafkaVersions": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "ServerProperties": {
                    "$ref": "#/$defs/__blob"
                }
            }
        },
        "__blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateReplicatorResponse": {
            "type": "object",
            "properties": {
                "ReplicatorArn": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorName": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorState": {
                    "$ref": "#/$defs/ReplicatorState"
                }
            }
        },
        "ReplicatorState": {
            "enum": [
                "RUNNING",
                "CREATING",
                "UPDATING",
                "DELETING",
                "FAILED"
            ]
        },
        "CreateReplicatorRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/__stringMax1024"
                },
                "KafkaClusters": {
                    "$ref": "#/$defs/__listOfKafkaCluster"
                },
                "ReplicationInfoList": {
                    "$ref": "#/$defs/__listOfReplicationInfo"
                },
                "ReplicatorName": {
                    "$ref": "#/$defs/__stringMin1Max128Pattern09AZaZ09AZaZ0"
                },
                "ServiceExecutionRoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "__stringMax1024": {
            "type": "string"
        },
        "__listOfKafkaCluster": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KafkaCluster"
            }
        },
        "KafkaCluster": {
            "type": "object",
            "properties": {
                "AmazonMskCluster": {
                    "$ref": "#/$defs/AmazonMskCluster"
                },
                "VpcConfig": {
                    "$ref": "#/$defs/KafkaClusterClientVpcConfig"
                }
            }
        },
        "AmazonMskCluster": {
            "type": "object",
            "properties": {
                "MskClusterArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "KafkaClusterClientVpcConfig": {
            "type": "object",
            "properties": {
                "SecurityGroupIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "__listOfReplicationInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicationInfo"
            }
        },
        "ReplicationInfo": {
            "type": "object",
            "properties": {
                "ConsumerGroupReplication": {
                    "$ref": "#/$defs/ConsumerGroupReplication"
                },
                "SourceKafkaClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "TargetCompressionType": {
                    "$ref": "#/$defs/TargetCompressionType"
                },
                "TargetKafkaClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "TopicReplication": {
                    "$ref": "#/$defs/TopicReplication"
                }
            }
        },
        "ConsumerGroupReplication": {
            "type": "object",
            "properties": {
                "ConsumerGroupsToExclude": {
                    "$ref": "#/$defs/__listOf__stringMax256"
                },
                "ConsumerGroupsToReplicate": {
                    "$ref": "#/$defs/__listOf__stringMax256"
                },
                "DetectAndCopyNewConsumerGroups": {
                    "$ref": "#/$defs/__boolean"
                },
                "SynchroniseConsumerGroupOffsets": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "__listOf__stringMax256": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__stringMax256"
            }
        },
        "__stringMax256": {
            "type": "string"
        },
        "TargetCompressionType": {
            "enum": [
                "NONE",
                "GZIP",
                "SNAPPY",
                "LZ4",
                "ZSTD"
            ]
        },
        "TopicReplication": {
            "type": "object",
            "properties": {
                "CopyAccessControlListsForTopics": {
                    "$ref": "#/$defs/__boolean"
                },
                "CopyTopicConfigurations": {
                    "$ref": "#/$defs/__boolean"
                },
                "DetectAndCopyNewTopics": {
                    "$ref": "#/$defs/__boolean"
                },
                "StartingPosition": {
                    "$ref": "#/$defs/ReplicationStartingPosition"
                },
                "TopicNameConfiguration": {
                    "$ref": "#/$defs/ReplicationTopicNameConfiguration"
                },
                "TopicsToExclude": {
                    "$ref": "#/$defs/__listOf__stringMax249"
                },
                "TopicsToReplicate": {
                    "$ref": "#/$defs/__listOf__stringMax249"
                }
            }
        },
        "ReplicationStartingPosition": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ReplicationStartingPositionType"
                }
            }
        },
        "ReplicationStartingPositionType": {
            "enum": [
                "LATEST",
                "EARLIEST"
            ]
        },
        "ReplicationTopicNameConfiguration": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ReplicationTopicNameConfigurationType"
                }
            }
        },
        "ReplicationTopicNameConfigurationType": {
            "enum": [
                "PREFIXED_WITH_SOURCE_CLUSTER_ALIAS",
                "IDENTICAL"
            ]
        },
        "__listOf__stringMax249": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__stringMax249"
            }
        },
        "__stringMax249": {
            "type": "string"
        },
        "__stringMin1Max128Pattern09AZaZ09AZaZ0": {
            "type": "string"
        },
        "CreateVpcConnectionResponse": {
            "type": "object",
            "properties": {
                "VpcConnectionArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/VpcConnectionState"
                },
                "Authentication": {
                    "$ref": "#/$defs/__string"
                },
                "VpcId": {
                    "$ref": "#/$defs/__string"
                },
                "ClientSubnets": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "VpcConnectionState": {
            "enum": [
                "CREATING",
                "AVAILABLE",
                "INACTIVE",
                "DEACTIVATING",
                "DELETING",
                "FAILED",
                "REJECTED",
                "REJECTING"
            ]
        },
        "CreateVpcConnectionRequest": {
            "type": "object",
            "properties": {
                "TargetClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "Authentication": {
                    "$ref": "#/$defs/__string"
                },
                "VpcId": {
                    "$ref": "#/$defs/__string"
                },
                "ClientSubnets": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "DeleteClusterResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ClusterState"
                }
            }
        },
        "DeleteClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteClusterPolicyResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteClusterPolicyRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteConfigurationResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ConfigurationState"
                }
            }
        },
        "DeleteConfigurationRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteReplicatorResponse": {
            "type": "object",
            "properties": {
                "ReplicatorArn": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorState": {
                    "$ref": "#/$defs/ReplicatorState"
                }
            }
        },
        "DeleteReplicatorRequest": {
            "type": "object",
            "properties": {
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteVpcConnectionResponse": {
            "type": "object",
            "properties": {
                "VpcConnectionArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/VpcConnectionState"
                }
            }
        },
        "DeleteVpcConnectionRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeClusterResponse": {
            "type": "object",
            "properties": {
                "ClusterInfo": {
                    "$ref": "#/$defs/ClusterInfo"
                }
            }
        },
        "ClusterInfo": {
            "type": "object",
            "properties": {
                "ActiveOperationArn": {
                    "$ref": "#/$defs/__string"
                },
                "BrokerNodeGroupInfo": {
                    "$ref": "#/$defs/BrokerNodeGroupInfo"
                },
                "ClientAuthentication": {
                    "$ref": "#/$defs/ClientAuthentication"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterName": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "CurrentBrokerSoftwareInfo": {
                    "$ref": "#/$defs/BrokerSoftwareInfo"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "EncryptionInfo": {
                    "$ref": "#/$defs/EncryptionInfo"
                },
                "EnhancedMonitoring": {
                    "$ref": "#/$defs/EnhancedMonitoring"
                },
                "OpenMonitoring": {
                    "$ref": "#/$defs/OpenMonitoring"
                },
                "LoggingInfo": {
                    "$ref": "#/$defs/LoggingInfo"
                },
                "NumberOfBrokerNodes": {
                    "$ref": "#/$defs/__integer"
                },
                "State": {
                    "$ref": "#/$defs/ClusterState"
                },
                "StateInfo": {
                    "$ref": "#/$defs/StateInfo"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                },
                "ZookeeperConnectString": {
                    "$ref": "#/$defs/__string"
                },
                "ZookeeperConnectStringTls": {
                    "$ref": "#/$defs/__string"
                },
                "StorageMode": {
                    "$ref": "#/$defs/StorageMode"
                },
                "CustomerActionStatus": {
                    "$ref": "#/$defs/CustomerActionStatus"
                }
            }
        },
        "BrokerSoftwareInfo": {
            "type": "object",
            "properties": {
                "ConfigurationArn": {
                    "$ref": "#/$defs/__string"
                },
                "ConfigurationRevision": {
                    "$ref": "#/$defs/__long"
                },
                "KafkaVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "OpenMonitoring": {
            "type": "object",
            "properties": {
                "Prometheus": {
                    "$ref": "#/$defs/Prometheus"
                }
            }
        },
        "Prometheus": {
            "type": "object",
            "properties": {
                "JmxExporter": {
                    "$ref": "#/$defs/JmxExporter"
                },
                "NodeExporter": {
                    "$ref": "#/$defs/NodeExporter"
                }
            }
        },
        "JmxExporter": {
            "type": "object",
            "properties": {
                "EnabledInBroker": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "NodeExporter": {
            "type": "object",
            "properties": {
                "EnabledInBroker": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "StateInfo": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/__string"
                },
                "Message": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CustomerActionStatus": {
            "enum": [
                "CRITICAL_ACTION_REQUIRED",
                "ACTION_RECOMMENDED",
                "NONE"
            ]
        },
        "DescribeClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeClusterOperationResponse": {
            "type": "object",
            "properties": {
                "ClusterOperationInfo": {
                    "$ref": "#/$defs/ClusterOperationInfo"
                }
            }
        },
        "ClusterOperationInfo": {
            "type": "object",
            "properties": {
                "ClientRequestId": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "EndTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "ErrorInfo": {
                    "$ref": "#/$defs/ErrorInfo"
                },
                "OperationArn": {
                    "$ref": "#/$defs/__string"
                },
                "OperationState": {
                    "$ref": "#/$defs/__string"
                },
                "OperationSteps": {
                    "$ref": "#/$defs/__listOfClusterOperationStep"
                },
                "OperationType": {
                    "$ref": "#/$defs/__string"
                },
                "SourceClusterInfo": {
                    "$ref": "#/$defs/MutableClusterInfo"
                },
                "TargetClusterInfo": {
                    "$ref": "#/$defs/MutableClusterInfo"
                },
                "VpcConnectionInfo": {
                    "$ref": "#/$defs/VpcConnectionInfo"
                }
            }
        },
        "ErrorInfo": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "$ref": "#/$defs/__string"
                },
                "ErrorString": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfClusterOperationStep": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClusterOperationStep"
            }
        },
        "ClusterOperationStep": {
            "type": "object",
            "properties": {
                "StepInfo": {
                    "$ref": "#/$defs/ClusterOperationStepInfo"
                },
                "StepName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ClusterOperationStepInfo": {
            "type": "object",
            "properties": {
                "StepStatus": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MutableClusterInfo": {
            "type": "object",
            "properties": {
                "BrokerEBSVolumeInfo": {
                    "$ref": "#/$defs/__listOfBrokerEBSVolumeInfo"
                },
                "ConfigurationInfo": {
                    "$ref": "#/$defs/ConfigurationInfo"
                },
                "NumberOfBrokerNodes": {
                    "$ref": "#/$defs/__integer"
                },
                "EnhancedMonitoring": {
                    "$ref": "#/$defs/EnhancedMonitoring"
                },
                "OpenMonitoring": {
                    "$ref": "#/$defs/OpenMonitoring"
                },
                "KafkaVersion": {
                    "$ref": "#/$defs/__string"
                },
                "LoggingInfo": {
                    "$ref": "#/$defs/LoggingInfo"
                },
                "InstanceType": {
                    "$ref": "#/$defs/__stringMin5Max32"
                },
                "ClientAuthentication": {
                    "$ref": "#/$defs/ClientAuthentication"
                },
                "EncryptionInfo": {
                    "$ref": "#/$defs/EncryptionInfo"
                },
                "ConnectivityInfo": {
                    "$ref": "#/$defs/ConnectivityInfo"
                },
                "StorageMode": {
                    "$ref": "#/$defs/StorageMode"
                },
                "BrokerCountUpdateInfo": {
                    "$ref": "#/$defs/BrokerCountUpdateInfo"
                }
            }
        },
        "__listOfBrokerEBSVolumeInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BrokerEBSVolumeInfo"
            }
        },
        "BrokerEBSVolumeInfo": {
            "type": "object",
            "properties": {
                "KafkaBrokerNodeId": {
                    "$ref": "#/$defs/__string"
                },
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "VolumeSizeGB": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "BrokerCountUpdateInfo": {
            "type": "object",
            "properties": {
                "CreatedBrokerIds": {
                    "$ref": "#/$defs/__listOf__double"
                },
                "DeletedBrokerIds": {
                    "$ref": "#/$defs/__listOf__double"
                }
            }
        },
        "__listOf__double": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__double"
            }
        },
        "__double": {
            "type": "number",
            "format": "double"
        },
        "VpcConnectionInfo": {
            "type": "object",
            "properties": {
                "VpcConnectionArn": {
                    "$ref": "#/$defs/__string"
                },
                "Owner": {
                    "$ref": "#/$defs/__string"
                },
                "UserIdentity": {
                    "$ref": "#/$defs/UserIdentity"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "UserIdentity": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/UserIdentityType"
                },
                "PrincipalId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UserIdentityType": {
            "enum": [
                "AWSACCOUNT",
                "AWSSERVICE"
            ]
        },
        "DescribeClusterOperationRequest": {
            "type": "object",
            "properties": {
                "ClusterOperationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeClusterOperationV2Response": {
            "type": "object",
            "properties": {
                "ClusterOperationInfo": {
                    "$ref": "#/$defs/ClusterOperationV2"
                }
            }
        },
        "ClusterOperationV2": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterType": {
                    "$ref": "#/$defs/ClusterType"
                },
                "StartTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "EndTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "ErrorInfo": {
                    "$ref": "#/$defs/ErrorInfo"
                },
                "OperationArn": {
                    "$ref": "#/$defs/__string"
                },
                "OperationState": {
                    "$ref": "#/$defs/__string"
                },
                "OperationType": {
                    "$ref": "#/$defs/__string"
                },
                "Provisioned": {
                    "$ref": "#/$defs/ClusterOperationV2Provisioned"
                },
                "Serverless": {
                    "$ref": "#/$defs/ClusterOperationV2Serverless"
                }
            }
        },
        "ClusterOperationV2Provisioned": {
            "type": "object",
            "properties": {
                "OperationSteps": {
                    "$ref": "#/$defs/__listOfClusterOperationStep"
                },
                "SourceClusterInfo": {
                    "$ref": "#/$defs/MutableClusterInfo"
                },
                "TargetClusterInfo": {
                    "$ref": "#/$defs/MutableClusterInfo"
                },
                "VpcConnectionInfo": {
                    "$ref": "#/$defs/VpcConnectionInfo"
                }
            }
        },
        "ClusterOperationV2Serverless": {
            "type": "object",
            "properties": {
                "VpcConnectionInfo": {
                    "$ref": "#/$defs/VpcConnectionInfoServerless"
                }
            }
        },
        "VpcConnectionInfoServerless": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Owner": {
                    "$ref": "#/$defs/__string"
                },
                "UserIdentity": {
                    "$ref": "#/$defs/UserIdentity"
                },
                "VpcConnectionArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeClusterOperationV2Request": {
            "type": "object",
            "properties": {
                "ClusterOperationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeClusterV2Response": {
            "type": "object",
            "properties": {
                "ClusterInfo": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "Cluster": {
            "type": "object",
            "properties": {
                "ActiveOperationArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterType": {
                    "$ref": "#/$defs/ClusterType"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterName": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ClusterState"
                },
                "StateInfo": {
                    "$ref": "#/$defs/StateInfo"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                },
                "Provisioned": {
                    "$ref": "#/$defs/Provisioned"
                },
                "Serverless": {
                    "$ref": "#/$defs/Serverless"
                }
            }
        },
        "Provisioned": {
            "type": "object",
            "properties": {
                "BrokerNodeGroupInfo": {
                    "$ref": "#/$defs/BrokerNodeGroupInfo"
                },
                "CurrentBrokerSoftwareInfo": {
                    "$ref": "#/$defs/BrokerSoftwareInfo"
                },
                "ClientAuthentication": {
                    "$ref": "#/$defs/ClientAuthentication"
                },
                "EncryptionInfo": {
                    "$ref": "#/$defs/EncryptionInfo"
                },
                "EnhancedMonitoring": {
                    "$ref": "#/$defs/EnhancedMonitoring"
                },
                "OpenMonitoring": {
                    "$ref": "#/$defs/OpenMonitoringInfo"
                },
                "LoggingInfo": {
                    "$ref": "#/$defs/LoggingInfo"
                },
                "NumberOfBrokerNodes": {
                    "$ref": "#/$defs/__integerMin1Max15"
                },
                "ZookeeperConnectString": {
                    "$ref": "#/$defs/__string"
                },
                "ZookeeperConnectStringTls": {
                    "$ref": "#/$defs/__string"
                },
                "StorageMode": {
                    "$ref": "#/$defs/StorageMode"
                },
                "CustomerActionStatus": {
                    "$ref": "#/$defs/CustomerActionStatus"
                }
            }
        },
        "Serverless": {
            "type": "object",
            "properties": {
                "VpcConfigs": {
                    "$ref": "#/$defs/__listOfVpcConfig"
                },
                "ClientAuthentication": {
                    "$ref": "#/$defs/ServerlessClientAuthentication"
                }
            }
        },
        "DescribeClusterV2Request": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeConfigurationResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "KafkaVersions": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "LatestRevision": {
                    "$ref": "#/$defs/ConfigurationRevision"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ConfigurationState"
                }
            }
        },
        "DescribeConfigurationRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeConfigurationRevisionResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "Revision": {
                    "$ref": "#/$defs/__long"
                },
                "ServerProperties": {
                    "$ref": "#/$defs/__blob"
                }
            }
        },
        "DescribeConfigurationRevisionRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Revision": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "DescribeReplicatorResponse": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "IsReplicatorReference": {
                    "$ref": "#/$defs/__boolean"
                },
                "KafkaClusters": {
                    "$ref": "#/$defs/__listOfKafkaClusterDescription"
                },
                "ReplicationInfoList": {
                    "$ref": "#/$defs/__listOfReplicationInfoDescription"
                },
                "ReplicatorArn": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorDescription": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorName": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorState": {
                    "$ref": "#/$defs/ReplicatorState"
                },
                "ServiceExecutionRoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "StateInfo": {
                    "$ref": "#/$defs/ReplicationStateInfo"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "__listOfKafkaClusterDescription": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KafkaClusterDescription"
            }
        },
        "KafkaClusterDescription": {
            "type": "object",
            "properties": {
                "AmazonMskCluster": {
                    "$ref": "#/$defs/AmazonMskCluster"
                },
                "KafkaClusterAlias": {
                    "$ref": "#/$defs/__string"
                },
                "VpcConfig": {
                    "$ref": "#/$defs/KafkaClusterClientVpcConfig"
                }
            }
        },
        "__listOfReplicationInfoDescription": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicationInfoDescription"
            }
        },
        "ReplicationInfoDescription": {
            "type": "object",
            "properties": {
                "ConsumerGroupReplication": {
                    "$ref": "#/$defs/ConsumerGroupReplication"
                },
                "SourceKafkaClusterAlias": {
                    "$ref": "#/$defs/__string"
                },
                "TargetCompressionType": {
                    "$ref": "#/$defs/TargetCompressionType"
                },
                "TargetKafkaClusterAlias": {
                    "$ref": "#/$defs/__string"
                },
                "TopicReplication": {
                    "$ref": "#/$defs/TopicReplication"
                }
            }
        },
        "ReplicationStateInfo": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/__string"
                },
                "Message": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeReplicatorRequest": {
            "type": "object",
            "properties": {
                "ReplicatorArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeVpcConnectionResponse": {
            "type": "object",
            "properties": {
                "VpcConnectionArn": {
                    "$ref": "#/$defs/__string"
                },
                "TargetClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/VpcConnectionState"
                },
                "Authentication": {
                    "$ref": "#/$defs/__string"
                },
                "VpcId": {
                    "$ref": "#/$defs/__string"
                },
                "Subnets": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "DescribeVpcConnectionRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBootstrapBrokersResponse": {
            "type": "object",
            "properties": {
                "BootstrapBrokerString": {
                    "$ref": "#/$defs/__string"
                },
                "BootstrapBrokerStringTls": {
                    "$ref": "#/$defs/__string"
                },
                "BootstrapBrokerStringSaslScram": {
                    "$ref": "#/$defs/__string"
                },
                "BootstrapBrokerStringSaslIam": {
                    "$ref": "#/$defs/__string"
                },
                "BootstrapBrokerStringPublicTls": {
                    "$ref": "#/$defs/__string"
                },
                "BootstrapBrokerStringPublicSaslScram": {
                    "$ref": "#/$defs/__string"
                },
                "BootstrapBrokerStringPublicSaslIam": {
                    "$ref": "#/$defs/__string"
                },
                "BootstrapBrokerStringVpcConnectivityTls": {
                    "$ref": "#/$defs/__string"
                },
                "BootstrapBrokerStringVpcConnectivitySaslScram": {
                    "$ref": "#/$defs/__string"
                },
                "BootstrapBrokerStringVpcConnectivitySaslIam": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBootstrapBrokersRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetClusterPolicyResponse": {
            "type": "object",
            "properties": {
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Policy": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetClusterPolicyRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetCompatibleKafkaVersionsResponse": {
            "type": "object",
            "properties": {
                "CompatibleKafkaVersions": {
                    "$ref": "#/$defs/__listOfCompatibleKafkaVersion"
                }
            }
        },
        "__listOfCompatibleKafkaVersion": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CompatibleKafkaVersion"
            }
        },
        "CompatibleKafkaVersion": {
            "type": "object",
            "properties": {
                "SourceVersion": {
                    "$ref": "#/$defs/__string"
                },
                "TargetVersions": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "GetCompatibleKafkaVersionsRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListClientVpcConnectionsResponse": {
            "type": "object",
            "properties": {
                "ClientVpcConnections": {
                    "$ref": "#/$defs/__listOfClientVpcConnection"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfClientVpcConnection": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClientVpcConnection"
            }
        },
        "ClientVpcConnection": {
            "type": "object",
            "properties": {
                "Authentication": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "State": {
                    "$ref": "#/$defs/VpcConnectionState"
                },
                "VpcConnectionArn": {
                    "$ref": "#/$defs/__string"
                },
                "Owner": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListClientVpcConnectionsRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListClusterOperationsResponse": {
            "type": "object",
            "properties": {
                "ClusterOperationInfoList": {
                    "$ref": "#/$defs/__listOfClusterOperationInfo"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfClusterOperationInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClusterOperationInfo"
            }
        },
        "ListClusterOperationsRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListClusterOperationsV2Response": {
            "type": "object",
            "properties": {
                "ClusterOperationInfoList": {
                    "$ref": "#/$defs/__listOfClusterOperationV2Summary"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfClusterOperationV2Summary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClusterOperationV2Summary"
            }
        },
        "ClusterOperationV2Summary": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterType": {
                    "$ref": "#/$defs/ClusterType"
                },
                "StartTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "EndTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "OperationArn": {
                    "$ref": "#/$defs/__string"
                },
                "OperationState": {
                    "$ref": "#/$defs/__string"
                },
                "OperationType": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListClusterOperationsV2Request": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListClustersResponse": {
            "type": "object",
            "properties": {
                "ClusterInfoList": {
                    "$ref": "#/$defs/__listOfClusterInfo"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfClusterInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClusterInfo"
            }
        },
        "ListClustersRequest": {
            "type": "object",
            "properties": {
                "ClusterNameFilter": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListClustersV2Response": {
            "type": "object",
            "properties": {
                "ClusterInfoList": {
                    "$ref": "#/$defs/__listOfCluster"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfCluster": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Cluster"
            }
        },
        "ListClustersV2Request": {
            "type": "object",
            "properties": {
                "ClusterNameFilter": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterTypeFilter": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListConfigurationRevisionsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Revisions": {
                    "$ref": "#/$defs/__listOfConfigurationRevision"
                }
            }
        },
        "__listOfConfigurationRevision": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConfigurationRevision"
            }
        },
        "ListConfigurationRevisionsRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListConfigurationsResponse": {
            "type": "object",
            "properties": {
                "Configurations": {
                    "$ref": "#/$defs/__listOfConfiguration"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfConfiguration": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Configuration"
            }
        },
        "Configuration": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "KafkaVersions": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "LatestRevision": {
                    "$ref": "#/$defs/ConfigurationRevision"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/ConfigurationState"
                }
            }
        },
        "ListConfigurationsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListKafkaVersionsResponse": {
            "type": "object",
            "properties": {
                "KafkaVersions": {
                    "$ref": "#/$defs/__listOfKafkaVersion"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfKafkaVersion": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KafkaVersion"
            }
        },
        "KafkaVersion": {
            "type": "object",
            "properties": {
                "Version": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/KafkaVersionStatus"
                }
            }
        },
        "KafkaVersionStatus": {
            "enum": [
                "ACTIVE",
                "DEPRECATED"
            ]
        },
        "ListKafkaVersionsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListNodesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "NodeInfoList": {
                    "$ref": "#/$defs/__listOfNodeInfo"
                }
            }
        },
        "__listOfNodeInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeInfo"
            }
        },
        "NodeInfo": {
            "type": "object",
            "properties": {
                "AddedToClusterTime": {
                    "$ref": "#/$defs/__string"
                },
                "BrokerNodeInfo": {
                    "$ref": "#/$defs/BrokerNodeInfo"
                },
                "ControllerNodeInfo": {
                    "$ref": "#/$defs/ControllerNodeInfo"
                },
                "InstanceType": {
                    "$ref": "#/$defs/__string"
                },
                "NodeARN": {
                    "$ref": "#/$defs/__string"
                },
                "NodeType": {
                    "$ref": "#/$defs/NodeType"
                },
                "ZookeeperNodeInfo": {
                    "$ref": "#/$defs/ZookeeperNodeInfo"
                }
            }
        },
        "BrokerNodeInfo": {
            "type": "object",
            "properties": {
                "AttachedENIId": {
                    "$ref": "#/$defs/__string"
                },
                "BrokerId": {
                    "$ref": "#/$defs/__double"
                },
                "ClientSubnet": {
                    "$ref": "#/$defs/__string"
                },
                "ClientVpcIpAddress": {
                    "$ref": "#/$defs/__string"
                },
                "CurrentBrokerSoftwareInfo": {
                    "$ref": "#/$defs/BrokerSoftwareInfo"
                },
                "Endpoints": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "ControllerNodeInfo": {
            "type": "object",
            "properties": {
                "Endpoints": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "NodeType": {
            "enum": [
                "BROKER"
            ]
        },
        "ZookeeperNodeInfo": {
            "type": "object",
            "properties": {
                "AttachedENIId": {
                    "$ref": "#/$defs/__string"
                },
                "ClientVpcIpAddress": {
                    "$ref": "#/$defs/__string"
                },
                "Endpoints": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ZookeeperId": {
                    "$ref": "#/$defs/__double"
                },
                "ZookeeperVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListNodesRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListReplicatorsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Replicators": {
                    "$ref": "#/$defs/__listOfReplicatorSummary"
                }
            }
        },
        "__listOfReplicatorSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicatorSummary"
            }
        },
        "ReplicatorSummary": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "IsReplicatorReference": {
                    "$ref": "#/$defs/__boolean"
                },
                "KafkaClustersSummary": {
                    "$ref": "#/$defs/__listOfKafkaClusterSummary"
                },
                "ReplicationInfoSummaryList": {
                    "$ref": "#/$defs/__listOfReplicationInfoSummary"
                },
                "ReplicatorArn": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorName": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorState": {
                    "$ref": "#/$defs/ReplicatorState"
                }
            }
        },
        "__listOfKafkaClusterSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KafkaClusterSummary"
            }
        },
        "KafkaClusterSummary": {
            "type": "object",
            "properties": {
                "AmazonMskCluster": {
                    "$ref": "#/$defs/AmazonMskCluster"
                },
                "KafkaClusterAlias": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfReplicationInfoSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicationInfoSummary"
            }
        },
        "ReplicationInfoSummary": {
            "type": "object",
            "properties": {
                "SourceKafkaClusterAlias": {
                    "$ref": "#/$defs/__string"
                },
                "TargetKafkaClusterAlias": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListReplicatorsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorNameFilter": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListScramSecretsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "SecretArnList": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "ListScramSecretsRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListVpcConnectionsResponse": {
            "type": "object",
            "properties": {
                "VpcConnections": {
                    "$ref": "#/$defs/__listOfVpcConnection"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfVpcConnection": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcConnection"
            }
        },
        "VpcConnection": {
            "type": "object",
            "properties": {
                "VpcConnectionArn": {
                    "$ref": "#/$defs/__string"
                },
                "TargetClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "Authentication": {
                    "$ref": "#/$defs/__string"
                },
                "VpcId": {
                    "$ref": "#/$defs/__string"
                },
                "State": {
                    "$ref": "#/$defs/VpcConnectionState"
                }
            }
        },
        "ListVpcConnectionsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "PutClusterPolicyResponse": {
            "type": "object",
            "properties": {
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "PutClusterPolicyRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "Policy": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RebootBrokerResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterOperationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RebootBrokerRequest": {
            "type": "object",
            "properties": {
                "BrokerIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RejectClientVpcConnectionResponse": {
            "type": "object",
            "properties": {}
        },
        "RejectClientVpcConnectionRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "VpcConnectionArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "TagKeys": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "UpdateBrokerCountResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterOperationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBrokerCountRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "TargetNumberOfBrokerNodes": {
                    "$ref": "#/$defs/__integerMin1Max15"
                }
            }
        },
        "UpdateBrokerStorageResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterOperationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBrokerStorageRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "TargetBrokerEBSVolumeInfo": {
                    "$ref": "#/$defs/__listOfBrokerEBSVolumeInfo"
                }
            }
        },
        "UpdateBrokerTypeResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterOperationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBrokerTypeRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "TargetInstanceType": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateClusterConfigurationResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterOperationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateClusterConfigurationRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ConfigurationInfo": {
                    "$ref": "#/$defs/ConfigurationInfo"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateClusterKafkaVersionResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterOperationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateClusterKafkaVersionRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ConfigurationInfo": {
                    "$ref": "#/$defs/ConfigurationInfo"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "TargetKafkaVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateConfigurationResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "LatestRevision": {
                    "$ref": "#/$defs/ConfigurationRevision"
                }
            }
        },
        "UpdateConfigurationRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "ServerProperties": {
                    "$ref": "#/$defs/__blob"
                }
            }
        },
        "UpdateConnectivityResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterOperationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateConnectivityRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ConnectivityInfo": {
                    "$ref": "#/$defs/ConnectivityInfo"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateMonitoringResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterOperationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateMonitoringRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "EnhancedMonitoring": {
                    "$ref": "#/$defs/EnhancedMonitoring"
                },
                "OpenMonitoring": {
                    "$ref": "#/$defs/OpenMonitoringInfo"
                },
                "LoggingInfo": {
                    "$ref": "#/$defs/LoggingInfo"
                }
            }
        },
        "UpdateReplicationInfoResponse": {
            "type": "object",
            "properties": {
                "ReplicatorArn": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorState": {
                    "$ref": "#/$defs/ReplicatorState"
                }
            }
        },
        "UpdateReplicationInfoRequest": {
            "type": "object",
            "properties": {
                "ConsumerGroupReplication": {
                    "$ref": "#/$defs/ConsumerGroupReplicationUpdate"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "ReplicatorArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceKafkaClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "TargetKafkaClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "TopicReplication": {
                    "$ref": "#/$defs/TopicReplicationUpdate"
                }
            }
        },
        "ConsumerGroupReplicationUpdate": {
            "type": "object",
            "properties": {
                "ConsumerGroupsToExclude": {
                    "$ref": "#/$defs/__listOf__stringMax256"
                },
                "ConsumerGroupsToReplicate": {
                    "$ref": "#/$defs/__listOf__stringMax256"
                },
                "DetectAndCopyNewConsumerGroups": {
                    "$ref": "#/$defs/__boolean"
                },
                "SynchroniseConsumerGroupOffsets": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "TopicReplicationUpdate": {
            "type": "object",
            "properties": {
                "CopyAccessControlListsForTopics": {
                    "$ref": "#/$defs/__boolean"
                },
                "CopyTopicConfigurations": {
                    "$ref": "#/$defs/__boolean"
                },
                "DetectAndCopyNewTopics": {
                    "$ref": "#/$defs/__boolean"
                },
                "TopicsToExclude": {
                    "$ref": "#/$defs/__listOf__stringMax249"
                },
                "TopicsToReplicate": {
                    "$ref": "#/$defs/__listOf__stringMax249"
                }
            }
        },
        "UpdateSecurityResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterOperationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateSecurityRequest": {
            "type": "object",
            "properties": {
                "ClientAuthentication": {
                    "$ref": "#/$defs/ClientAuthentication"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "EncryptionInfo": {
                    "$ref": "#/$defs/EncryptionInfo"
                }
            }
        },
        "UpdateStorageResponse": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "ClusterOperationArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateStorageRequest": {
            "type": "object",
            "properties": {
                "ClusterArn": {
                    "$ref": "#/$defs/__string"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/__string"
                },
                "ProvisionedThroughput": {
                    "$ref": "#/$defs/ProvisionedThroughput"
                },
                "StorageMode": {
                    "$ref": "#/$defs/StorageMode"
                },
                "VolumeSizeGB": {
                    "$ref": "#/$defs/__integer"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://kafka-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://kafka.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://kafka-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://kafka.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://kafka.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}