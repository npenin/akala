{
    "name": "key-value-store",
    "commands": [
        {
            "name": "DeleteKey",
            "config": {
                "http": {
                    "inject": [
                        {
                            "KvsARN": "route.KvsARN",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/key-value-stores/{KvsARN}/keys/{Key}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteKeyResponse"
                    },
                    "inject": [
                        "param.0.KvsARN",
                        "param.0.Key",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeKeyValueStore",
            "config": {
                "http": {
                    "inject": [
                        {
                            "KvsARN": "route.KvsARN",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/key-value-stores/{KvsARN}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeKeyValueStoreResponse"
                    },
                    "inject": [
                        "param.0.KvsARN",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeKeyValueStoreRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetKey",
            "config": {
                "http": {
                    "inject": [
                        {
                            "KvsARN": "route.KvsARN",
                            "Key": "route.Key",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/key-value-stores/{KvsARN}/keys/{Key}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKeyResponse"
                    },
                    "inject": [
                        "param.0.KvsARN",
                        "param.0.Key",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListKeys",
            "config": {
                "http": {
                    "inject": [
                        {
                            "KvsARN": "route.KvsARN",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/key-value-stores/{KvsARN}/keys"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKeysResponse"
                    },
                    "inject": [
                        "param.0.KvsARN",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKeysRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutKey",
            "config": {
                "http": {
                    "inject": [
                        {
                            "KvsARN": "route.KvsARN",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/key-value-stores/{KvsARN}/keys/{Key}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutKeyResponse"
                    },
                    "inject": [
                        "param.0.KvsARN",
                        "param.0.Key",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateKeys",
            "config": {
                "http": {
                    "inject": [
                        {
                            "KvsARN": "route.KvsARN",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/key-value-stores/{KvsARN}/keys"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateKeysResponse"
                    },
                    "inject": [
                        "param.0.KvsARN",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateKeysRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "DeleteKeyResponse": {
            "type": "object",
            "properties": {
                "ItemCount": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "TotalSizeInBytes": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "ETag": {
                    "$ref": "#/$defs/Etag"
                }
            }
        },
        "Etag": {
            "type": "string"
        },
        "DeleteKeyRequest": {
            "type": "object",
            "properties": {
                "KvsARN": {
                    "$ref": "#/$defs/KvsARN"
                },
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "IfMatch": {
                    "$ref": "#/$defs/Etag"
                }
            }
        },
        "KvsARN": {
            "type": "string"
        },
        "Key": {
            "type": "string"
        },
        "DescribeKeyValueStoreResponse": {
            "type": "object",
            "properties": {
                "ItemCount": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "TotalSizeInBytes": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "KvsARN": {
                    "$ref": "#/$defs/KvsARN"
                },
                "Created": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "ETag": {
                    "$ref": "#/$defs/Etag"
                },
                "LastModified": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "FailureReason": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "DescribeKeyValueStoreRequest": {
            "type": "object",
            "properties": {
                "KvsARN": {
                    "$ref": "#/$defs/KvsARN"
                }
            }
        },
        "GetKeyResponse": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "Value": {
                    "$ref": "#/$defs/Value"
                },
                "ItemCount": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "TotalSizeInBytes": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "Value": {
            "type": "string"
        },
        "GetKeyRequest": {
            "type": "object",
            "properties": {
                "KvsARN": {
                    "$ref": "#/$defs/KvsARN"
                },
                "Key": {
                    "$ref": "#/$defs/Key"
                }
            }
        },
        "ListKeysResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Items": {
                    "$ref": "#/$defs/ListKeysResponseList"
                }
            }
        },
        "ListKeysResponseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListKeysResponseListItem"
            }
        },
        "ListKeysResponseListItem": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "Value": {
                    "$ref": "#/$defs/Value"
                }
            }
        },
        "ListKeysRequest": {
            "type": "object",
            "properties": {
                "KvsARN": {
                    "$ref": "#/$defs/KvsARN"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "PutKeyResponse": {
            "type": "object",
            "properties": {
                "ItemCount": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "TotalSizeInBytes": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "ETag": {
                    "$ref": "#/$defs/Etag"
                }
            }
        },
        "PutKeyRequest": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "Value": {
                    "$ref": "#/$defs/Value"
                },
                "KvsARN": {
                    "$ref": "#/$defs/KvsARN"
                },
                "IfMatch": {
                    "$ref": "#/$defs/Etag"
                }
            }
        },
        "UpdateKeysResponse": {
            "type": "object",
            "properties": {
                "ItemCount": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "TotalSizeInBytes": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "ETag": {
                    "$ref": "#/$defs/Etag"
                }
            }
        },
        "UpdateKeysRequest": {
            "type": "object",
            "properties": {
                "KvsARN": {
                    "$ref": "#/$defs/KvsARN"
                },
                "IfMatch": {
                    "$ref": "#/$defs/Etag"
                },
                "Puts": {
                    "$ref": "#/$defs/PutKeyRequestsList"
                },
                "Deletes": {
                    "$ref": "#/$defs/DeleteKeyRequestsList"
                }
            }
        },
        "PutKeyRequestsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PutKeyRequestListItem"
            }
        },
        "PutKeyRequestListItem": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "Value": {
                    "$ref": "#/$defs/Value"
                }
            }
        },
        "DeleteKeyRequestsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeleteKeyRequestListItem"
            }
        },
        "DeleteKeyRequestListItem": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/Key"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "KvsARN": {
                    "required": false,
                    "documentation": "The ARN of the Key Value Store",
                    "type": "String"
                },
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "booleanEquals",
                            "argv": [
                                {
                                    "ref": "UseFIPS"
                                },
                                false
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "KvsARN"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.parseArn",
                                            "argv": [
                                                {
                                                    "ref": "KvsARN"
                                                }
                                            ],
                                            "assign": "parsedArn"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "stringEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "parsedArn"
                                                                },
                                                                "service"
                                                            ]
                                                        },
                                                        "cloudfront"
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "parsedArn"
                                                                        },
                                                                        "region"
                                                                    ]
                                                                },
                                                                ""
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "parsedArn"
                                                                        },
                                                                        "resourceId[0]"
                                                                    ],
                                                                    "assign": "arnType"
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "not",
                                                                            "argv": [
                                                                                {
                                                                                    "fn": "stringEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "arnType"
                                                                                        },
                                                                                        ""
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "rules": [
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "stringEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "arnType"
                                                                                        },
                                                                                        "key-value-store"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "rules": [
                                                                                {
                                                                                    "conditions": [
                                                                                        {
                                                                                            "fn": "stringEquals",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "fn": "getAttr",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "parsedArn"
                                                                                                        },
                                                                                                        "partition"
                                                                                                    ]
                                                                                                },
                                                                                                "aws"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "rules": [
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "isSet",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "Region"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "aws.partition",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "ref": "Region"
                                                                                                                }
                                                                                                            ],
                                                                                                            "assign": "partitionResult"
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [
                                                                                                                {
                                                                                                                    "fn": "stringEquals",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "fn": "getAttr",
                                                                                                                            "argv": [
                                                                                                                                {
                                                                                                                                    "ref": "partitionResult"
                                                                                                                                },
                                                                                                                                "name"
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        "{parsedArn#partition}"
                                                                                                                    ]
                                                                                                                }
                                                                                                            ],
                                                                                                            "rules": [
                                                                                                                {
                                                                                                                    "conditions": [
                                                                                                                        {
                                                                                                                            "fn": "isSet",
                                                                                                                            "argv": [
                                                                                                                                {
                                                                                                                                    "ref": "Endpoint"
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "rules": [
                                                                                                                        {
                                                                                                                            "conditions": [
                                                                                                                                {
                                                                                                                                    "fn": "parseURL",
                                                                                                                                    "argv": [
                                                                                                                                        {
                                                                                                                                            "ref": "Endpoint"
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "assign": "url"
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "rules": [
                                                                                                                                {
                                                                                                                                    "conditions": [],
                                                                                                                                    "endpoint": {
                                                                                                                                        "url": "{url#scheme}://{parsedArn#accountId}.{url#authority}{url#path}",
                                                                                                                                        "properties": {
                                                                                                                                            "authSchemes": [
                                                                                                                                                {
                                                                                                                                                    "name": "sigv4a",
                                                                                                                                                    "signingName": "cloudfront-keyvaluestore",
                                                                                                                                                    "signingRegionSet": [
                                                                                                                                                        "*"
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        "headers": {}
                                                                                                                                    },
                                                                                                                                    "type": "endpoint"
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "type": "tree"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "conditions": [],
                                                                                                                            "error": "Provided endpoint is not a valid URL",
                                                                                                                            "type": "error"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "type": "tree"
                                                                                                                },
                                                                                                                {
                                                                                                                    "conditions": [],
                                                                                                                    "endpoint": {
                                                                                                                        "url": "https://{parsedArn#accountId}.cloudfront-kvs.global.api.aws",
                                                                                                                        "properties": {
                                                                                                                            "authSchemes": [
                                                                                                                                {
                                                                                                                                    "name": "sigv4a",
                                                                                                                                    "signingName": "cloudfront-keyvaluestore",
                                                                                                                                    "signingRegionSet": [
                                                                                                                                        "*"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        "headers": {}
                                                                                                                    },
                                                                                                                    "type": "endpoint"
                                                                                                                }
                                                                                                            ],
                                                                                                            "type": "tree"
                                                                                                        },
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "error": "Client was configured for partition `{partitionResult#name}` but Kvs ARN has `{parsedArn#partition}`",
                                                                                                            "type": "error"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "isSet",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "Endpoint"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "parseURL",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "ref": "Endpoint"
                                                                                                                }
                                                                                                            ],
                                                                                                            "assign": "url"
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "endpoint": {
                                                                                                                "url": "{url#scheme}://{parsedArn#accountId}.{url#authority}{url#path}",
                                                                                                                "properties": {
                                                                                                                    "authSchemes": [
                                                                                                                        {
                                                                                                                            "name": "sigv4a",
                                                                                                                            "signingName": "cloudfront-keyvaluestore",
                                                                                                                            "signingRegionSet": [
                                                                                                                                "*"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                "headers": {}
                                                                                                            },
                                                                                                            "type": "endpoint"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                },
                                                                                                {
                                                                                                    "conditions": [],
                                                                                                    "error": "Provided endpoint is not a valid URL",
                                                                                                    "type": "error"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [],
                                                                                            "endpoint": {
                                                                                                "url": "https://{parsedArn#accountId}.cloudfront-kvs.global.api.aws",
                                                                                                "properties": {
                                                                                                    "authSchemes": [
                                                                                                        {
                                                                                                            "name": "sigv4a",
                                                                                                            "signingName": "cloudfront-keyvaluestore",
                                                                                                            "signingRegionSet": [
                                                                                                                "*"
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "headers": {}
                                                                                            },
                                                                                            "type": "endpoint"
                                                                                        }
                                                                                    ],
                                                                                    "type": "tree"
                                                                                },
                                                                                {
                                                                                    "conditions": [],
                                                                                    "error": "CloudFront-KeyValueStore is not supported in partition `{parsedArn#partition}`",
                                                                                    "type": "error"
                                                                                }
                                                                            ],
                                                                            "type": "tree"
                                                                        },
                                                                        {
                                                                            "conditions": [],
                                                                            "error": "ARN resource type is invalid. Expected `key-value-store`, found: `{arnType}`",
                                                                            "type": "error"
                                                                        }
                                                                    ],
                                                                    "type": "tree"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "error": "No resource type found in the KVS ARN. Resource type must be `key-value-store`.",
                                                                    "type": "error"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "error": "No resource type found in the KVS ARN. Resource type must be `key-value-store`.",
                                                            "type": "error"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "Provided ARN must be a global resource ARN. Found: `{parsedArn#region}`",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "Provided ARN is not a valid CloudFront Service ARN. Found: `{parsedArn#service}`",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "error": "KVS ARN must be a valid ARN",
                                    "type": "error"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "KVS ARN must be provided to use this service",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: FIPS is not supported with CloudFront-KeyValueStore.",
                    "type": "error"
                }
            ]
        }
    }
}