{
    "name": "entityresolution",
    "commands": [
        {
            "name": "AddPolicyStatement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AddPolicyStatement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddPolicyStatementOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddPolicyStatementInput"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchDeleteUniqueId",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchDeleteUniqueId"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeleteUniqueIdOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDeleteUniqueIdInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateIdMappingWorkflow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateIdMappingWorkflow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateIdMappingWorkflowOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateIdMappingWorkflowInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateIdNamespace",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateIdNamespace"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateIdNamespaceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateIdNamespaceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateMatchingWorkflow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateMatchingWorkflow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMatchingWorkflowOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMatchingWorkflowInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSchemaMapping",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateSchemaMapping"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSchemaMappingOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSchemaMappingInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteIdMappingWorkflow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteIdMappingWorkflow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteIdMappingWorkflowOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteIdMappingWorkflowInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteIdNamespace",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteIdNamespace"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteIdNamespaceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteIdNamespaceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteMatchingWorkflow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteMatchingWorkflow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMatchingWorkflowOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMatchingWorkflowInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePolicyStatement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeletePolicyStatement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePolicyStatementOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePolicyStatementInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSchemaMapping",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteSchemaMapping"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSchemaMappingOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSchemaMappingInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetIdMappingJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetIdMappingJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIdMappingJobOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIdMappingJobInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetIdMappingWorkflow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetIdMappingWorkflow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIdMappingWorkflowOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIdMappingWorkflowInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetIdNamespace",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetIdNamespace"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIdNamespaceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIdNamespaceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMatchId",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMatchId"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMatchIdOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMatchIdInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMatchingJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMatchingJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMatchingJobOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMatchingJobInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMatchingWorkflow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMatchingWorkflow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMatchingWorkflowOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMatchingWorkflowInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetProviderService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetProviderService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetProviderServiceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetProviderServiceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSchemaMapping",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSchemaMapping"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSchemaMappingOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSchemaMappingInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListIdMappingJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListIdMappingJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListIdMappingJobsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListIdMappingJobsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListIdMappingWorkflows",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListIdMappingWorkflows"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListIdMappingWorkflowsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListIdMappingWorkflowsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListIdNamespaces",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListIdNamespaces"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListIdNamespacesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListIdNamespacesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMatchingJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListMatchingJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMatchingJobsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMatchingJobsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMatchingWorkflows",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListMatchingWorkflows"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMatchingWorkflowsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMatchingWorkflowsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListProviderServices",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListProviderServices"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProviderServicesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListProviderServicesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSchemaMappings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListSchemaMappings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSchemaMappingsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSchemaMappingsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutPolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutPolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StartIdMappingJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartIdMappingJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartIdMappingJobOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartIdMappingJobInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StartMatchingJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartMatchingJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartMatchingJobOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartMatchingJobInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateIdMappingWorkflow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateIdMappingWorkflow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateIdMappingWorkflowOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateIdMappingWorkflowInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateIdNamespace",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateIdNamespace"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateIdNamespaceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateIdNamespaceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateMatchingWorkflow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateMatchingWorkflow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMatchingWorkflowOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMatchingWorkflowInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSchemaMapping",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateSchemaMapping"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSchemaMappingOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSchemaMappingInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AddPolicyStatementOutput": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/VeniceGlobalArn"
                },
                "token": {
                    "$ref": "#/$defs/PolicyToken"
                },
                "policy": {
                    "$ref": "#/$defs/PolicyDocument"
                }
            }
        },
        "VeniceGlobalArn": {
            "type": "string"
        },
        "PolicyToken": {
            "type": "string"
        },
        "PolicyDocument": {
            "type": "string"
        },
        "AddPolicyStatementInput": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/VeniceGlobalArn"
                },
                "statementId": {
                    "$ref": "#/$defs/StatementId"
                },
                "effect": {
                    "$ref": "#/$defs/StatementEffect"
                },
                "action": {
                    "$ref": "#/$defs/StatementActionList"
                },
                "principal": {
                    "$ref": "#/$defs/StatementPrincipalList"
                },
                "condition": {
                    "$ref": "#/$defs/StatementCondition"
                }
            }
        },
        "StatementId": {
            "type": "string"
        },
        "StatementEffect": {
            "enum": [
                "Allow",
                "Deny"
            ]
        },
        "StatementActionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StatementAction"
            }
        },
        "StatementAction": {
            "type": "string"
        },
        "StatementPrincipalList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StatementPrincipal"
            }
        },
        "StatementPrincipal": {
            "type": "string"
        },
        "StatementCondition": {
            "type": "string"
        },
        "BatchDeleteUniqueIdOutput": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/DeleteUniqueIdStatus"
                },
                "errors": {
                    "$ref": "#/$defs/DeleteUniqueIdErrorsList"
                },
                "deleted": {
                    "$ref": "#/$defs/DeletedUniqueIdList"
                },
                "disconnectedUniqueIds": {
                    "$ref": "#/$defs/DisconnectedUniqueIdsList"
                }
            }
        },
        "DeleteUniqueIdStatus": {
            "enum": [
                "COMPLETED",
                "ACCEPTED"
            ]
        },
        "DeleteUniqueIdErrorsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeleteUniqueIdError"
            }
        },
        "DeleteUniqueIdError": {
            "type": "object",
            "properties": {
                "uniqueId": {
                    "$ref": "#/$defs/UniqueId"
                },
                "errorType": {
                    "$ref": "#/$defs/DeleteUniqueIdErrorType"
                }
            }
        },
        "UniqueId": {
            "type": "string"
        },
        "DeleteUniqueIdErrorType": {
            "enum": [
                "SERVICE_ERROR",
                "VALIDATION_ERROR"
            ]
        },
        "DeletedUniqueIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeletedUniqueId"
            }
        },
        "DeletedUniqueId": {
            "type": "object",
            "properties": {
                "uniqueId": {
                    "$ref": "#/$defs/UniqueId"
                }
            }
        },
        "DisconnectedUniqueIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UniqueId"
            }
        },
        "BatchDeleteUniqueIdInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "inputSource": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "uniqueIds": {
                    "$ref": "#/$defs/UniqueIdList"
                }
            }
        },
        "EntityName": {
            "type": "string"
        },
        "UniqueIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UniqueId"
            }
        },
        "CreateIdMappingWorkflowOutput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "workflowArn": {
                    "$ref": "#/$defs/IdMappingWorkflowArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/IdMappingWorkflowInputSourceConfig"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/IdMappingWorkflowOutputSourceConfig"
                },
                "idMappingTechniques": {
                    "$ref": "#/$defs/IdMappingTechniques"
                },
                "roleArn": {
                    "$ref": "#/$defs/IdMappingRoleArn"
                }
            }
        },
        "IdMappingWorkflowArn": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "IdMappingWorkflowInputSourceConfig": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdMappingWorkflowInputSource"
            }
        },
        "IdMappingWorkflowInputSource": {
            "type": "object",
            "properties": {
                "inputSourceARN": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "schemaName": {
                    "$ref": "#/$defs/EntityName"
                },
                "type": {
                    "$ref": "#/$defs/IdNamespaceType"
                }
            }
        },
        "IdNamespaceType": {
            "enum": [
                "SOURCE",
                "TARGET"
            ]
        },
        "IdMappingWorkflowOutputSourceConfig": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdMappingWorkflowOutputSource"
            }
        },
        "IdMappingWorkflowOutputSource": {
            "type": "object",
            "properties": {
                "outputS3Path": {
                    "$ref": "#/$defs/S3Path"
                },
                "KMSArn": {
                    "$ref": "#/$defs/KMSArn"
                }
            }
        },
        "S3Path": {
            "type": "string"
        },
        "KMSArn": {
            "type": "string"
        },
        "IdMappingTechniques": {
            "type": "object",
            "properties": {
                "idMappingType": {
                    "$ref": "#/$defs/IdMappingType"
                },
                "ruleBasedProperties": {
                    "$ref": "#/$defs/IdMappingRuleBasedProperties"
                },
                "providerProperties": {
                    "$ref": "#/$defs/ProviderProperties"
                }
            }
        },
        "IdMappingType": {
            "enum": [
                "PROVIDER",
                "RULE_BASED"
            ]
        },
        "IdMappingRuleBasedProperties": {
            "type": "object",
            "properties": {
                "rules": {
                    "$ref": "#/$defs/RuleList"
                },
                "ruleDefinitionType": {
                    "$ref": "#/$defs/IdMappingWorkflowRuleDefinitionType"
                },
                "attributeMatchingModel": {
                    "$ref": "#/$defs/AttributeMatchingModel"
                },
                "recordMatchingModel": {
                    "$ref": "#/$defs/RecordMatchingModel"
                }
            }
        },
        "RuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Rule"
            }
        },
        "Rule": {
            "type": "object",
            "properties": {
                "ruleName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "matchingKeys": {
                    "$ref": "#/$defs/MatchingKeys"
                }
            }
        },
        "MatchingKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeName"
            }
        },
        "AttributeName": {
            "type": "string"
        },
        "IdMappingWorkflowRuleDefinitionType": {
            "enum": [
                "SOURCE",
                "TARGET"
            ]
        },
        "AttributeMatchingModel": {
            "enum": [
                "ONE_TO_ONE",
                "MANY_TO_MANY"
            ]
        },
        "RecordMatchingModel": {
            "enum": [
                "ONE_SOURCE_TO_ONE_TARGET",
                "MANY_SOURCE_TO_ONE_TARGET"
            ]
        },
        "ProviderProperties": {
            "type": "object",
            "properties": {
                "providerServiceArn": {
                    "$ref": "#/$defs/ProviderServiceArn"
                },
                "providerConfiguration": {
                    "$ref": "#/$defs/smithy.api#Document"
                },
                "intermediateSourceConfiguration": {
                    "$ref": "#/$defs/IntermediateSourceConfiguration"
                }
            }
        },
        "ProviderServiceArn": {
            "type": "string"
        },
        "IntermediateSourceConfiguration": {
            "type": "object",
            "properties": {
                "intermediateS3Path": {
                    "$ref": "#/$defs/S3Path"
                }
            }
        },
        "IdMappingRoleArn": {
            "type": "string"
        },
        "CreateIdMappingWorkflowInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/IdMappingWorkflowInputSourceConfig"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/IdMappingWorkflowOutputSourceConfig"
                },
                "idMappingTechniques": {
                    "$ref": "#/$defs/IdMappingTechniques"
                },
                "roleArn": {
                    "$ref": "#/$defs/IdMappingRoleArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "CreateIdNamespaceOutput": {
            "type": "object",
            "properties": {
                "idNamespaceName": {
                    "$ref": "#/$defs/EntityName"
                },
                "idNamespaceArn": {
                    "$ref": "#/$defs/IdNamespaceArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/IdNamespaceInputSourceConfig"
                },
                "idMappingWorkflowProperties": {
                    "$ref": "#/$defs/IdNamespaceIdMappingWorkflowPropertiesList"
                },
                "type": {
                    "$ref": "#/$defs/IdNamespaceType"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "IdNamespaceArn": {
            "type": "string"
        },
        "IdNamespaceInputSourceConfig": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdNamespaceInputSource"
            }
        },
        "IdNamespaceInputSource": {
            "type": "object",
            "properties": {
                "inputSourceARN": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "schemaName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "IdNamespaceIdMappingWorkflowPropertiesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdNamespaceIdMappingWorkflowProperties"
            }
        },
        "IdNamespaceIdMappingWorkflowProperties": {
            "type": "object",
            "properties": {
                "idMappingType": {
                    "$ref": "#/$defs/IdMappingType"
                },
                "ruleBasedProperties": {
                    "$ref": "#/$defs/NamespaceRuleBasedProperties"
                },
                "providerProperties": {
                    "$ref": "#/$defs/NamespaceProviderProperties"
                }
            }
        },
        "NamespaceRuleBasedProperties": {
            "type": "object",
            "properties": {
                "rules": {
                    "$ref": "#/$defs/RuleList"
                },
                "ruleDefinitionTypes": {
                    "$ref": "#/$defs/IdMappingWorkflowRuleDefinitionTypeList"
                },
                "attributeMatchingModel": {
                    "$ref": "#/$defs/AttributeMatchingModel"
                },
                "recordMatchingModels": {
                    "$ref": "#/$defs/RecordMatchingModelList"
                }
            }
        },
        "IdMappingWorkflowRuleDefinitionTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdMappingWorkflowRuleDefinitionType"
            }
        },
        "RecordMatchingModelList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecordMatchingModel"
            }
        },
        "NamespaceProviderProperties": {
            "type": "object",
            "properties": {
                "providerServiceArn": {
                    "$ref": "#/$defs/ProviderServiceArn"
                },
                "providerConfiguration": {
                    "$ref": "#/$defs/smithy.api#Document"
                }
            }
        },
        "RoleArn": {
            "type": "string"
        },
        "CreateIdNamespaceInput": {
            "type": "object",
            "properties": {
                "idNamespaceName": {
                    "$ref": "#/$defs/EntityName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/IdNamespaceInputSourceConfig"
                },
                "idMappingWorkflowProperties": {
                    "$ref": "#/$defs/IdNamespaceIdMappingWorkflowPropertiesList"
                },
                "type": {
                    "$ref": "#/$defs/IdNamespaceType"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CreateMatchingWorkflowOutput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "workflowArn": {
                    "$ref": "#/$defs/MatchingWorkflowArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/InputSourceConfig"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/OutputSourceConfig"
                },
                "resolutionTechniques": {
                    "$ref": "#/$defs/ResolutionTechniques"
                },
                "incrementalRunConfig": {
                    "$ref": "#/$defs/IncrementalRunConfig"
                },
                "roleArn": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "MatchingWorkflowArn": {
            "type": "string"
        },
        "InputSourceConfig": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InputSource"
            }
        },
        "InputSource": {
            "type": "object",
            "properties": {
                "inputSourceARN": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "schemaName": {
                    "$ref": "#/$defs/EntityName"
                },
                "applyNormalization": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "OutputSourceConfig": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OutputSource"
            }
        },
        "OutputSource": {
            "type": "object",
            "properties": {
                "outputS3Path": {
                    "$ref": "#/$defs/S3Path"
                },
                "KMSArn": {
                    "$ref": "#/$defs/KMSArn"
                },
                "output": {
                    "$ref": "#/$defs/OutputAttributes"
                },
                "applyNormalization": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "OutputAttributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OutputAttribute"
            }
        },
        "OutputAttribute": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/AttributeName"
                },
                "hashed": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "ResolutionTechniques": {
            "type": "object",
            "properties": {
                "resolutionType": {
                    "$ref": "#/$defs/ResolutionType"
                },
                "ruleBasedProperties": {
                    "$ref": "#/$defs/RuleBasedProperties"
                },
                "providerProperties": {
                    "$ref": "#/$defs/ProviderProperties"
                }
            }
        },
        "ResolutionType": {
            "enum": [
                "RULE_MATCHING",
                "ML_MATCHING",
                "PROVIDER"
            ]
        },
        "RuleBasedProperties": {
            "type": "object",
            "properties": {
                "rules": {
                    "$ref": "#/$defs/RuleList"
                },
                "attributeMatchingModel": {
                    "$ref": "#/$defs/AttributeMatchingModel"
                },
                "matchPurpose": {
                    "$ref": "#/$defs/MatchPurpose"
                }
            }
        },
        "MatchPurpose": {
            "enum": [
                "IDENTIFIER_GENERATION",
                "INDEXING"
            ]
        },
        "IncrementalRunConfig": {
            "type": "object",
            "properties": {
                "incrementalRunType": {
                    "$ref": "#/$defs/IncrementalRunType"
                }
            }
        },
        "IncrementalRunType": {
            "enum": [
                "IMMEDIATE"
            ]
        },
        "CreateMatchingWorkflowInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/InputSourceConfig"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/OutputSourceConfig"
                },
                "resolutionTechniques": {
                    "$ref": "#/$defs/ResolutionTechniques"
                },
                "incrementalRunConfig": {
                    "$ref": "#/$defs/IncrementalRunConfig"
                },
                "roleArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CreateSchemaMappingOutput": {
            "type": "object",
            "properties": {
                "schemaName": {
                    "$ref": "#/$defs/EntityName"
                },
                "schemaArn": {
                    "$ref": "#/$defs/SchemaMappingArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "mappedInputFields": {
                    "$ref": "#/$defs/SchemaInputAttributes"
                }
            }
        },
        "SchemaMappingArn": {
            "type": "string"
        },
        "SchemaInputAttributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SchemaInputAttribute"
            }
        },
        "SchemaInputAttribute": {
            "type": "object",
            "properties": {
                "fieldName": {
                    "$ref": "#/$defs/AttributeName"
                },
                "type": {
                    "$ref": "#/$defs/SchemaAttributeType"
                },
                "groupName": {
                    "$ref": "#/$defs/AttributeName"
                },
                "matchKey": {
                    "$ref": "#/$defs/AttributeName"
                },
                "subType": {
                    "$ref": "#/$defs/AttributeName"
                },
                "hashed": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "SchemaAttributeType": {
            "enum": [
                "NAME",
                "NAME_FIRST",
                "NAME_MIDDLE",
                "NAME_LAST",
                "ADDRESS",
                "ADDRESS_STREET1",
                "ADDRESS_STREET2",
                "ADDRESS_STREET3",
                "ADDRESS_CITY",
                "ADDRESS_STATE",
                "ADDRESS_COUNTRY",
                "ADDRESS_POSTALCODE",
                "PHONE",
                "PHONE_NUMBER",
                "PHONE_COUNTRYCODE",
                "EMAIL_ADDRESS",
                "UNIQUE_ID",
                "DATE",
                "STRING",
                "PROVIDER_ID"
            ]
        },
        "CreateSchemaMappingInput": {
            "type": "object",
            "properties": {
                "schemaName": {
                    "$ref": "#/$defs/EntityName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "mappedInputFields": {
                    "$ref": "#/$defs/SchemaInputAttributes"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "DeleteIdMappingWorkflowOutput": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "DeleteIdMappingWorkflowInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "DeleteIdNamespaceOutput": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "DeleteIdNamespaceInput": {
            "type": "object",
            "properties": {
                "idNamespaceName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "DeleteMatchingWorkflowOutput": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "DeleteMatchingWorkflowInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "DeletePolicyStatementOutput": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/VeniceGlobalArn"
                },
                "token": {
                    "$ref": "#/$defs/PolicyToken"
                },
                "policy": {
                    "$ref": "#/$defs/PolicyDocument"
                }
            }
        },
        "DeletePolicyStatementInput": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/VeniceGlobalArn"
                },
                "statementId": {
                    "$ref": "#/$defs/StatementId"
                }
            }
        },
        "DeleteSchemaMappingOutput": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "DeleteSchemaMappingInput": {
            "type": "object",
            "properties": {
                "schemaName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "GetIdMappingJobOutput": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "status": {
                    "$ref": "#/$defs/JobStatus"
                },
                "startTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "metrics": {
                    "$ref": "#/$defs/IdMappingJobMetrics"
                },
                "errorDetails": {
                    "$ref": "#/$defs/ErrorDetails"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/IdMappingJobOutputSourceConfig"
                }
            }
        },
        "JobId": {
            "type": "string"
        },
        "JobStatus": {
            "enum": [
                "RUNNING",
                "SUCCEEDED",
                "FAILED",
                "QUEUED"
            ]
        },
        "IdMappingJobMetrics": {
            "type": "object",
            "properties": {
                "inputRecords": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "totalRecordsProcessed": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "recordsNotProcessed": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "totalMappedRecords": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "totalMappedSourceRecords": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "totalMappedTargetRecords": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "ErrorDetails": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ErrorMessage": {
            "type": "string"
        },
        "IdMappingJobOutputSourceConfig": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdMappingJobOutputSource"
            }
        },
        "IdMappingJobOutputSource": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "outputS3Path": {
                    "$ref": "#/$defs/S3Path"
                },
                "KMSArn": {
                    "$ref": "#/$defs/KMSArn"
                }
            }
        },
        "GetIdMappingJobInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityNameOrIdMappingWorkflowArn"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "EntityNameOrIdMappingWorkflowArn": {
            "type": "string"
        },
        "GetIdMappingWorkflowOutput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "workflowArn": {
                    "$ref": "#/$defs/IdMappingWorkflowArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/IdMappingWorkflowInputSourceConfig"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/IdMappingWorkflowOutputSourceConfig"
                },
                "idMappingTechniques": {
                    "$ref": "#/$defs/IdMappingTechniques"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "roleArn": {
                    "$ref": "#/$defs/IdMappingRoleArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetIdMappingWorkflowInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "GetIdNamespaceOutput": {
            "type": "object",
            "properties": {
                "idNamespaceName": {
                    "$ref": "#/$defs/EntityName"
                },
                "idNamespaceArn": {
                    "$ref": "#/$defs/IdNamespaceArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/IdNamespaceInputSourceConfig"
                },
                "idMappingWorkflowProperties": {
                    "$ref": "#/$defs/IdNamespaceIdMappingWorkflowPropertiesList"
                },
                "type": {
                    "$ref": "#/$defs/IdNamespaceType"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetIdNamespaceInput": {
            "type": "object",
            "properties": {
                "idNamespaceName": {
                    "$ref": "#/$defs/EntityNameOrIdNamespaceArn"
                }
            }
        },
        "EntityNameOrIdNamespaceArn": {
            "type": "string"
        },
        "GetMatchIdOutput": {
            "type": "object",
            "properties": {
                "matchId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "matchRule": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "GetMatchIdInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "record": {
                    "$ref": "#/$defs/RecordAttributeMap"
                },
                "applyNormalization": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "RecordAttributeMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "GetMatchingJobOutput": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "status": {
                    "$ref": "#/$defs/JobStatus"
                },
                "startTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "metrics": {
                    "$ref": "#/$defs/JobMetrics"
                },
                "errorDetails": {
                    "$ref": "#/$defs/ErrorDetails"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/JobOutputSourceConfig"
                }
            }
        },
        "JobMetrics": {
            "type": "object",
            "properties": {
                "inputRecords": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "totalRecordsProcessed": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "recordsNotProcessed": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "matchIDs": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "JobOutputSourceConfig": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobOutputSource"
            }
        },
        "JobOutputSource": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "outputS3Path": {
                    "$ref": "#/$defs/S3Path"
                },
                "KMSArn": {
                    "$ref": "#/$defs/KMSArn"
                }
            }
        },
        "GetMatchingJobInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "GetMatchingWorkflowOutput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "workflowArn": {
                    "$ref": "#/$defs/MatchingWorkflowArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/InputSourceConfig"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/OutputSourceConfig"
                },
                "resolutionTechniques": {
                    "$ref": "#/$defs/ResolutionTechniques"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "incrementalRunConfig": {
                    "$ref": "#/$defs/IncrementalRunConfig"
                },
                "roleArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetMatchingWorkflowInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "GetPolicyOutput": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/VeniceGlobalArn"
                },
                "token": {
                    "$ref": "#/$defs/PolicyToken"
                },
                "policy": {
                    "$ref": "#/$defs/PolicyDocument"
                }
            }
        },
        "GetPolicyInput": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/VeniceGlobalArn"
                }
            }
        },
        "GetProviderServiceOutput": {
            "type": "object",
            "properties": {
                "providerName": {
                    "$ref": "#/$defs/EntityName"
                },
                "providerServiceName": {
                    "$ref": "#/$defs/EntityName"
                },
                "providerServiceDisplayName": {
                    "$ref": "#/$defs/ProviderServiceDisplayName"
                },
                "providerServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "providerServiceArn": {
                    "$ref": "#/$defs/ProviderServiceArn"
                },
                "providerConfigurationDefinition": {
                    "$ref": "#/$defs/smithy.api#Document"
                },
                "providerIdNameSpaceConfiguration": {
                    "$ref": "#/$defs/ProviderIdNameSpaceConfiguration"
                },
                "providerJobConfiguration": {
                    "$ref": "#/$defs/smithy.api#Document"
                },
                "providerEndpointConfiguration": {
                    "$ref": "#/$defs/ProviderEndpointConfiguration"
                },
                "anonymizedOutput": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "providerEntityOutputDefinition": {
                    "$ref": "#/$defs/smithy.api#Document"
                },
                "providerIntermediateDataAccessConfiguration": {
                    "$ref": "#/$defs/ProviderIntermediateDataAccessConfiguration"
                },
                "providerComponentSchema": {
                    "$ref": "#/$defs/ProviderComponentSchema"
                }
            }
        },
        "ProviderServiceDisplayName": {
            "type": "string"
        },
        "ServiceType": {
            "enum": [
                "ASSIGNMENT",
                "ID_MAPPING"
            ]
        },
        "ProviderIdNameSpaceConfiguration": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "providerTargetConfigurationDefinition": {
                    "$ref": "#/$defs/smithy.api#Document"
                },
                "providerSourceConfigurationDefinition": {
                    "$ref": "#/$defs/smithy.api#Document"
                }
            }
        },
        "ProviderEndpointConfiguration": {
            "type": "object",
            "properties": {
                "marketplaceConfiguration": {
                    "$ref": "#/$defs/ProviderMarketplaceConfiguration"
                }
            }
        },
        "ProviderMarketplaceConfiguration": {
            "type": "object",
            "properties": {
                "dataSetId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "revisionId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "assetId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "listingId": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ProviderIntermediateDataAccessConfiguration": {
            "type": "object",
            "properties": {
                "awsAccountIds": {
                    "$ref": "#/$defs/AwsAccountIdList"
                },
                "requiredBucketActions": {
                    "$ref": "#/$defs/RequiredBucketActionsList"
                }
            }
        },
        "AwsAccountIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AwsAccountId"
            }
        },
        "AwsAccountId": {
            "type": "string"
        },
        "RequiredBucketActionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "ProviderComponentSchema": {
            "type": "object",
            "properties": {
                "schemas": {
                    "$ref": "#/$defs/Schemas"
                },
                "providerSchemaAttributes": {
                    "$ref": "#/$defs/ProviderSchemaAttributes"
                }
            }
        },
        "Schemas": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SchemaList"
            }
        },
        "SchemaList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "ProviderSchemaAttributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProviderSchemaAttribute"
            }
        },
        "ProviderSchemaAttribute": {
            "type": "object",
            "properties": {
                "fieldName": {
                    "$ref": "#/$defs/AttributeName"
                },
                "type": {
                    "$ref": "#/$defs/SchemaAttributeType"
                },
                "subType": {
                    "$ref": "#/$defs/AttributeName"
                },
                "hashing": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "GetProviderServiceInput": {
            "type": "object",
            "properties": {
                "providerName": {
                    "$ref": "#/$defs/EntityName"
                },
                "providerServiceName": {
                    "$ref": "#/$defs/ProviderServiceArn"
                }
            }
        },
        "GetSchemaMappingOutput": {
            "type": "object",
            "properties": {
                "schemaName": {
                    "$ref": "#/$defs/EntityName"
                },
                "schemaArn": {
                    "$ref": "#/$defs/SchemaMappingArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "mappedInputFields": {
                    "$ref": "#/$defs/SchemaInputAttributes"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "hasWorkflows": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "GetSchemaMappingInput": {
            "type": "object",
            "properties": {
                "schemaName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "ListIdMappingJobsOutput": {
            "type": "object",
            "properties": {
                "jobs": {
                    "$ref": "#/$defs/JobList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "JobList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobSummary"
            }
        },
        "JobSummary": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "status": {
                    "$ref": "#/$defs/JobStatus"
                },
                "startTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListIdMappingJobsInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityNameOrIdMappingWorkflowArn"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "ListIdMappingWorkflowsOutput": {
            "type": "object",
            "properties": {
                "workflowSummaries": {
                    "$ref": "#/$defs/IdMappingWorkflowList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IdMappingWorkflowList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdMappingWorkflowSummary"
            }
        },
        "IdMappingWorkflowSummary": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "workflowArn": {
                    "$ref": "#/$defs/IdMappingWorkflowArn"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                }
            }
        },
        "ListIdMappingWorkflowsInput": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "ListIdNamespacesOutput": {
            "type": "object",
            "properties": {
                "idNamespaceSummaries": {
                    "$ref": "#/$defs/IdNamespaceList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IdNamespaceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdNamespaceSummary"
            }
        },
        "IdNamespaceSummary": {
            "type": "object",
            "properties": {
                "idNamespaceName": {
                    "$ref": "#/$defs/EntityName"
                },
                "idNamespaceArn": {
                    "$ref": "#/$defs/IdNamespaceArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "idMappingWorkflowProperties": {
                    "$ref": "#/$defs/IdNamespaceIdMappingWorkflowMetadataList"
                },
                "type": {
                    "$ref": "#/$defs/IdNamespaceType"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                }
            }
        },
        "IdNamespaceIdMappingWorkflowMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdNamespaceIdMappingWorkflowMetadata"
            }
        },
        "IdNamespaceIdMappingWorkflowMetadata": {
            "type": "object",
            "properties": {
                "idMappingType": {
                    "$ref": "#/$defs/IdMappingType"
                }
            }
        },
        "ListIdNamespacesInput": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "ListMatchingJobsOutput": {
            "type": "object",
            "properties": {
                "jobs": {
                    "$ref": "#/$defs/JobList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListMatchingJobsInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "ListMatchingWorkflowsOutput": {
            "type": "object",
            "properties": {
                "workflowSummaries": {
                    "$ref": "#/$defs/MatchingWorkflowList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MatchingWorkflowList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MatchingWorkflowSummary"
            }
        },
        "MatchingWorkflowSummary": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "workflowArn": {
                    "$ref": "#/$defs/MatchingWorkflowArn"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "resolutionType": {
                    "$ref": "#/$defs/ResolutionType"
                }
            }
        },
        "ListMatchingWorkflowsInput": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "ListProviderServicesOutput": {
            "type": "object",
            "properties": {
                "providerServiceSummaries": {
                    "$ref": "#/$defs/ProviderServiceList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ProviderServiceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProviderServiceSummary"
            }
        },
        "ProviderServiceSummary": {
            "type": "object",
            "properties": {
                "providerServiceArn": {
                    "$ref": "#/$defs/ProviderServiceArn"
                },
                "providerName": {
                    "$ref": "#/$defs/EntityName"
                },
                "providerServiceDisplayName": {
                    "$ref": "#/$defs/ProviderServiceDisplayName"
                },
                "providerServiceName": {
                    "$ref": "#/$defs/EntityName"
                },
                "providerServiceType": {
                    "$ref": "#/$defs/ServiceType"
                }
            }
        },
        "ListProviderServicesInput": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "providerName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "ListSchemaMappingsOutput": {
            "type": "object",
            "properties": {
                "schemaList": {
                    "$ref": "#/$defs/SchemaMappingList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SchemaMappingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SchemaMappingSummary"
            }
        },
        "SchemaMappingSummary": {
            "type": "object",
            "properties": {
                "schemaName": {
                    "$ref": "#/$defs/EntityName"
                },
                "schemaArn": {
                    "$ref": "#/$defs/SchemaMappingArn"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "hasWorkflows": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "ListSchemaMappingsInput": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "ListTagsForResourceOutput": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/VeniceGlobalArn"
                }
            }
        },
        "PutPolicyOutput": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/VeniceGlobalArn"
                },
                "token": {
                    "$ref": "#/$defs/PolicyToken"
                },
                "policy": {
                    "$ref": "#/$defs/PolicyDocument"
                }
            }
        },
        "PutPolicyInput": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/VeniceGlobalArn"
                },
                "token": {
                    "$ref": "#/$defs/PolicyToken"
                },
                "policy": {
                    "$ref": "#/$defs/PolicyDocument"
                }
            }
        },
        "StartIdMappingJobOutput": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/IdMappingJobOutputSourceConfig"
                }
            }
        },
        "StartIdMappingJobInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityNameOrIdMappingWorkflowArn"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/IdMappingJobOutputSourceConfig"
                }
            }
        },
        "StartMatchingJobOutput": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartMatchingJobInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "TagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "TagResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/VeniceGlobalArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UntagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/VeniceGlobalArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UpdateIdMappingWorkflowOutput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "workflowArn": {
                    "$ref": "#/$defs/IdMappingWorkflowArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/IdMappingWorkflowInputSourceConfig"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/IdMappingWorkflowOutputSourceConfig"
                },
                "idMappingTechniques": {
                    "$ref": "#/$defs/IdMappingTechniques"
                },
                "roleArn": {
                    "$ref": "#/$defs/IdMappingRoleArn"
                }
            }
        },
        "UpdateIdMappingWorkflowInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/IdMappingWorkflowInputSourceConfig"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/IdMappingWorkflowOutputSourceConfig"
                },
                "idMappingTechniques": {
                    "$ref": "#/$defs/IdMappingTechniques"
                },
                "roleArn": {
                    "$ref": "#/$defs/IdMappingRoleArn"
                }
            }
        },
        "UpdateIdNamespaceOutput": {
            "type": "object",
            "properties": {
                "idNamespaceName": {
                    "$ref": "#/$defs/EntityName"
                },
                "idNamespaceArn": {
                    "$ref": "#/$defs/IdNamespaceArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/IdNamespaceInputSourceConfig"
                },
                "idMappingWorkflowProperties": {
                    "$ref": "#/$defs/IdNamespaceIdMappingWorkflowPropertiesList"
                },
                "type": {
                    "$ref": "#/$defs/IdNamespaceType"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                }
            }
        },
        "UpdateIdNamespaceInput": {
            "type": "object",
            "properties": {
                "idNamespaceName": {
                    "$ref": "#/$defs/EntityName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/IdNamespaceInputSourceConfig"
                },
                "idMappingWorkflowProperties": {
                    "$ref": "#/$defs/IdNamespaceIdMappingWorkflowPropertiesList"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "UpdateMatchingWorkflowOutput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/InputSourceConfig"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/OutputSourceConfig"
                },
                "resolutionTechniques": {
                    "$ref": "#/$defs/ResolutionTechniques"
                },
                "incrementalRunConfig": {
                    "$ref": "#/$defs/IncrementalRunConfig"
                },
                "roleArn": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "UpdateMatchingWorkflowInput": {
            "type": "object",
            "properties": {
                "workflowName": {
                    "$ref": "#/$defs/EntityName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "inputSourceConfig": {
                    "$ref": "#/$defs/InputSourceConfig"
                },
                "outputSourceConfig": {
                    "$ref": "#/$defs/OutputSourceConfig"
                },
                "resolutionTechniques": {
                    "$ref": "#/$defs/ResolutionTechniques"
                },
                "incrementalRunConfig": {
                    "$ref": "#/$defs/IncrementalRunConfig"
                },
                "roleArn": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "UpdateSchemaMappingOutput": {
            "type": "object",
            "properties": {
                "schemaName": {
                    "$ref": "#/$defs/EntityName"
                },
                "schemaArn": {
                    "$ref": "#/$defs/SchemaMappingArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "mappedInputFields": {
                    "$ref": "#/$defs/SchemaInputAttributes"
                }
            }
        },
        "UpdateSchemaMappingInput": {
            "type": "object",
            "properties": {
                "schemaName": {
                    "$ref": "#/$defs/EntityName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "mappedInputFields": {
                    "$ref": "#/$defs/SchemaInputAttributes"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                "type": "error"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": {
                                        "ref": "Endpoint"
                                    },
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "isSet",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ]
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "aws.partition",
                                        "argv": [
                                            {
                                                "ref": "Region"
                                            }
                                        ],
                                        "assign": "PartitionResult"
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "ref": "UseFIPS"
                                                    },
                                                    true
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "ref": "UseDualStack"
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "booleanEquals",
                                                        "argv": [
                                                            true,
                                                            {
                                                                "fn": "getAttr",
                                                                "argv": [
                                                                    {
                                                                        "ref": "PartitionResult"
                                                                    },
                                                                    "supportsFIPS"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "fn": "booleanEquals",
                                                        "argv": [
                                                            true,
                                                            {
                                                                "fn": "getAttr",
                                                                "argv": [
                                                                    {
                                                                        "ref": "PartitionResult"
                                                                    },
                                                                    "supportsDualStack"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "rules": [
                                                    {
                                                        "conditions": [],
                                                        "rules": [
                                                            {
                                                                "conditions": [],
                                                                "endpoint": {
                                                                    "url": "https://entityresolution-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                    "properties": {},
                                                                    "headers": {}
                                                                },
                                                                "type": "endpoint"
                                                            }
                                                        ],
                                                        "type": "tree"
                                                    }
                                                ],
                                                "type": "tree"
                                            },
                                            {
                                                "conditions": [],
                                                "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                "type": "error"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "ref": "UseFIPS"
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "booleanEquals",
                                                        "argv": [
                                                            {
                                                                "fn": "getAttr",
                                                                "argv": [
                                                                    {
                                                                        "ref": "PartitionResult"
                                                                    },
                                                                    "supportsFIPS"
                                                                ]
                                                            },
                                                            true
                                                        ]
                                                    }
                                                ],
                                                "rules": [
                                                    {
                                                        "conditions": [],
                                                        "rules": [
                                                            {
                                                                "conditions": [],
                                                                "endpoint": {
                                                                    "url": "https://entityresolution-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                    "properties": {},
                                                                    "headers": {}
                                                                },
                                                                "type": "endpoint"
                                                            }
                                                        ],
                                                        "type": "tree"
                                                    }
                                                ],
                                                "type": "tree"
                                            },
                                            {
                                                "conditions": [],
                                                "error": "FIPS is enabled but this partition does not support FIPS",
                                                "type": "error"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "ref": "UseDualStack"
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "booleanEquals",
                                                        "argv": [
                                                            true,
                                                            {
                                                                "fn": "getAttr",
                                                                "argv": [
                                                                    {
                                                                        "ref": "PartitionResult"
                                                                    },
                                                                    "supportsDualStack"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "rules": [
                                                    {
                                                        "conditions": [],
                                                        "rules": [
                                                            {
                                                                "conditions": [],
                                                                "endpoint": {
                                                                    "url": "https://entityresolution.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                    "properties": {},
                                                                    "headers": {}
                                                                },
                                                                "type": "endpoint"
                                                            }
                                                        ],
                                                        "type": "tree"
                                                    }
                                                ],
                                                "type": "tree"
                                            },
                                            {
                                                "conditions": [],
                                                "error": "DualStack is enabled but this partition does not support DualStack",
                                                "type": "error"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://entityresolution.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    }
                                ],
                                "type": "tree"
                            }
                        ],
                        "type": "tree"
                    },
                    {
                        "conditions": [],
                        "error": "Invalid Configuration: Missing Region",
                        "type": "error"
                    }
                ],
                "type": "tree"
            }
        ]
    }
}