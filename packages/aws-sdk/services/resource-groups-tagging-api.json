{
    "name": "tagging",
    "commands": [
        {
            "name": "DescribeReportCreation",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResourceGroupsTaggingAPI_20170126.DescribeReportCreation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReportCreationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeReportCreationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetComplianceSummary",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResourceGroupsTaggingAPI_20170126.GetComplianceSummary"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetComplianceSummaryOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetComplianceSummaryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResources",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResourceGroupsTaggingAPI_20170126.GetResources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourcesOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetResourcesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTagKeys",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResourceGroupsTaggingAPI_20170126.GetTagKeys"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTagKeysOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetTagKeysInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTagValues",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResourceGroupsTaggingAPI_20170126.GetTagValues"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTagValuesOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetTagValuesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StartReportCreation",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResourceGroupsTaggingAPI_20170126.StartReportCreation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartReportCreationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartReportCreationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResources",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResourceGroupsTaggingAPI_20170126.TagResources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourcesOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourcesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResources",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResourceGroupsTaggingAPI_20170126.UntagResources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourcesOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourcesInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "DescribeReportCreationOutput": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "S3Location": {
                    "$ref": "#/$defs/S3Location"
                },
                "StartDate": {
                    "$ref": "#/$defs/StartDate"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "Status": {
            "type": "string"
        },
        "S3Location": {
            "type": "string"
        },
        "StartDate": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "DescribeReportCreationInput": {
            "type": "object",
            "properties": {}
        },
        "GetComplianceSummaryOutput": {
            "type": "object",
            "properties": {
                "SummaryList": {
                    "$ref": "#/$defs/SummaryList"
                },
                "PaginationToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "SummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Summary"
            }
        },
        "Summary": {
            "type": "object",
            "properties": {
                "LastUpdated": {
                    "$ref": "#/$defs/LastUpdated"
                },
                "TargetId": {
                    "$ref": "#/$defs/TargetId"
                },
                "TargetIdType": {
                    "$ref": "#/$defs/TargetIdType"
                },
                "Region": {
                    "$ref": "#/$defs/Region"
                },
                "ResourceType": {
                    "$ref": "#/$defs/AmazonResourceType"
                },
                "NonCompliantResources": {
                    "$ref": "#/$defs/NonCompliantResources"
                }
            }
        },
        "LastUpdated": {
            "type": "string"
        },
        "TargetId": {
            "type": "string"
        },
        "TargetIdType": {
            "enum": [
                "ACCOUNT",
                "OU",
                "ROOT"
            ]
        },
        "Region": {
            "type": "string"
        },
        "AmazonResourceType": {
            "type": "string"
        },
        "NonCompliantResources": {
            "type": "integer",
            "format": "int64"
        },
        "PaginationToken": {
            "type": "string"
        },
        "GetComplianceSummaryInput": {
            "type": "object",
            "properties": {
                "TargetIdFilters": {
                    "$ref": "#/$defs/TargetIdFilterList"
                },
                "RegionFilters": {
                    "$ref": "#/$defs/RegionFilterList"
                },
                "ResourceTypeFilters": {
                    "$ref": "#/$defs/ResourceTypeFilterList"
                },
                "TagKeyFilters": {
                    "$ref": "#/$defs/TagKeyFilterList"
                },
                "GroupBy": {
                    "$ref": "#/$defs/GroupBy"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsGetComplianceSummary"
                },
                "PaginationToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "TargetIdFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetId"
            }
        },
        "RegionFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Region"
            }
        },
        "ResourceTypeFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AmazonResourceType"
            }
        },
        "TagKeyFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "GroupBy": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupByAttribute"
            }
        },
        "GroupByAttribute": {
            "enum": [
                "TARGET_ID",
                "REGION",
                "RESOURCE_TYPE"
            ]
        },
        "MaxResultsGetComplianceSummary": {
            "type": "integer",
            "format": "int32"
        },
        "GetResourcesOutput": {
            "type": "object",
            "properties": {
                "PaginationToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "ResourceTagMappingList": {
                    "$ref": "#/$defs/ResourceTagMappingList"
                }
            }
        },
        "ResourceTagMappingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceTagMapping"
            }
        },
        "ResourceTagMapping": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ComplianceDetails": {
                    "$ref": "#/$defs/ComplianceDetails"
                }
            }
        },
        "ResourceARN": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagValue": {
            "type": "string"
        },
        "ComplianceDetails": {
            "type": "object",
            "properties": {
                "NoncompliantKeys": {
                    "$ref": "#/$defs/TagKeyList"
                },
                "KeysWithNoncompliantValues": {
                    "$ref": "#/$defs/TagKeyList"
                },
                "ComplianceStatus": {
                    "$ref": "#/$defs/ComplianceStatus"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "ComplianceStatus": {
            "type": "boolean"
        },
        "GetResourcesInput": {
            "type": "object",
            "properties": {
                "PaginationToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "TagFilters": {
                    "$ref": "#/$defs/TagFilterList"
                },
                "ResourcesPerPage": {
                    "$ref": "#/$defs/ResourcesPerPage"
                },
                "TagsPerPage": {
                    "$ref": "#/$defs/TagsPerPage"
                },
                "ResourceTypeFilters": {
                    "$ref": "#/$defs/ResourceTypeFilterList"
                },
                "IncludeComplianceDetails": {
                    "$ref": "#/$defs/IncludeComplianceDetails"
                },
                "ExcludeCompliantResources": {
                    "$ref": "#/$defs/ExcludeCompliantResources"
                },
                "ResourceARNList": {
                    "$ref": "#/$defs/ResourceARNListForGet"
                }
            }
        },
        "TagFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagFilter"
            }
        },
        "TagFilter": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Values": {
                    "$ref": "#/$defs/TagValueList"
                }
            }
        },
        "TagValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "ResourcesPerPage": {
            "type": "integer",
            "format": "int32"
        },
        "TagsPerPage": {
            "type": "integer",
            "format": "int32"
        },
        "IncludeComplianceDetails": {
            "type": "boolean"
        },
        "ExcludeCompliantResources": {
            "type": "boolean"
        },
        "ResourceARNListForGet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceARN"
            }
        },
        "GetTagKeysOutput": {
            "type": "object",
            "properties": {
                "PaginationToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "GetTagKeysInput": {
            "type": "object",
            "properties": {
                "PaginationToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "GetTagValuesOutput": {
            "type": "object",
            "properties": {
                "PaginationToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "TagValues": {
                    "$ref": "#/$defs/TagValuesOutputList"
                }
            }
        },
        "TagValuesOutputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "GetTagValuesInput": {
            "type": "object",
            "properties": {
                "PaginationToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "Key": {
                    "$ref": "#/$defs/TagKey"
                }
            }
        },
        "StartReportCreationOutput": {
            "type": "object",
            "properties": {}
        },
        "StartReportCreationInput": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                }
            }
        },
        "S3Bucket": {
            "type": "string"
        },
        "TagResourcesOutput": {
            "type": "object",
            "properties": {
                "FailedResourcesMap": {
                    "$ref": "#/$defs/FailedResourcesMap"
                }
            }
        },
        "FailedResourcesMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/FailureInfo"
            }
        },
        "FailureInfo": {
            "type": "object",
            "properties": {
                "StatusCode": {
                    "$ref": "#/$defs/StatusCode"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "StatusCode": {
            "type": "integer",
            "format": "int32"
        },
        "ErrorCode": {
            "enum": [
                "INTERNAL_SERVICE_EXCEPTION",
                "INVALID_PARAMETER_EXCEPTION"
            ]
        },
        "TagResourcesInput": {
            "type": "object",
            "properties": {
                "ResourceARNList": {
                    "$ref": "#/$defs/ResourceARNListForTagUntag"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ResourceARNListForTagUntag": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceARN"
            }
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "UntagResourcesOutput": {
            "type": "object",
            "properties": {
                "FailedResourcesMap": {
                    "$ref": "#/$defs/FailedResourcesMap"
                }
            }
        },
        "UntagResourcesInput": {
            "type": "object",
            "properties": {
                "ResourceARNList": {
                    "$ref": "#/$defs/ResourceARNListForTagUntag"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyListForUntag"
                }
            }
        },
        "TagKeyListForUntag": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://tagging-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://tagging-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://tagging.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://tagging.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
