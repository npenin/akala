{
    "name": "devops-guru",
    "commands": [
        {
            "name": "AddNotificationChannel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AddNotificationChannel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddNotificationChannelResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddNotificationChannelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteInsight",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteInsight"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteInsightResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteInsightRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAccountHealth",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeAccountHealth"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAccountHealthResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAccountHealthRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAccountOverview",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeAccountOverview"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAccountOverviewResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAccountOverviewRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAnomaly",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeAnomaly"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAnomalyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAnomalyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEventSourcesConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeEventSourcesConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEventSourcesConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEventSourcesConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFeedback",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeFeedback"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFeedbackResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFeedbackRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInsight",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeInsight"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInsightResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInsightRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeOrganizationHealth",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeOrganizationHealth"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeOrganizationHealthResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeOrganizationHealthRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeOrganizationOverview",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeOrganizationOverview"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeOrganizationOverviewResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeOrganizationOverviewRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeOrganizationResourceCollectionHealth",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeOrganizationResourceCollectionHealth"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeOrganizationResourceCollectionHealthResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeOrganizationResourceCollectionHealthRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeResourceCollectionHealth",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeResourceCollectionHealth"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeResourceCollectionHealthResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeResourceCollectionHealthRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeServiceIntegration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeServiceIntegration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeServiceIntegrationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeServiceIntegrationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCostEstimation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCostEstimation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCostEstimationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCostEstimationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourceCollection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResourceCollection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourceCollectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourceCollectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAnomaliesForInsight",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListAnomaliesForInsight"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAnomaliesForInsightResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAnomaliesForInsightRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAnomalousLogGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListAnomalousLogGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAnomalousLogGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAnomalousLogGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListEvents",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListEvents"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEventsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEventsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListInsights",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListInsights"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInsightsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInsightsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMonitoredResources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListMonitoredResources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMonitoredResourcesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMonitoredResourcesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListNotificationChannels",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListNotificationChannels"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNotificationChannelsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListNotificationChannelsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListOrganizationInsights",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListOrganizationInsights"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOrganizationInsightsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOrganizationInsightsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutFeedback",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutFeedback"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutFeedbackResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutFeedbackRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveNotificationChannel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RemoveNotificationChannel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveNotificationChannelResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveNotificationChannelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchInsights",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SearchInsights"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchInsightsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchInsightsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchOrganizationInsights",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SearchOrganizationInsights"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchOrganizationInsightsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchOrganizationInsightsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartCostEstimation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartCostEstimation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartCostEstimationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartCostEstimationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateEventSourcesConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateEventSourcesConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEventSourcesConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateEventSourcesConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateResourceCollection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateResourceCollection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResourceCollectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResourceCollectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateServiceIntegration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateServiceIntegration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateServiceIntegrationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateServiceIntegrationRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AddNotificationChannelResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NotificationChannelId"
                }
            }
        },
        "NotificationChannelId": {
            "type": "string"
        },
        "AddNotificationChannelRequest": {
            "type": "object",
            "properties": {
                "Config": {
                    "$ref": "#/$defs/NotificationChannelConfig"
                }
            }
        },
        "NotificationChannelConfig": {
            "type": "object",
            "properties": {
                "Sns": {
                    "$ref": "#/$defs/SnsChannelConfig"
                },
                "Filters": {
                    "$ref": "#/$defs/NotificationFilterConfig"
                }
            }
        },
        "SnsChannelConfig": {
            "type": "object",
            "properties": {
                "TopicArn": {
                    "$ref": "#/$defs/TopicArn"
                }
            }
        },
        "TopicArn": {
            "type": "string"
        },
        "NotificationFilterConfig": {
            "type": "object",
            "properties": {
                "Severities": {
                    "$ref": "#/$defs/InsightSeverities"
                },
                "MessageTypes": {
                    "$ref": "#/$defs/NotificationMessageTypes"
                }
            }
        },
        "InsightSeverities": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InsightSeverity"
            }
        },
        "InsightSeverity": {
            "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
            ]
        },
        "NotificationMessageTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NotificationMessageType"
            }
        },
        "NotificationMessageType": {
            "enum": [
                "NEW_INSIGHT",
                "CLOSED_INSIGHT",
                "NEW_ASSOCIATION",
                "SEVERITY_UPGRADED",
                "NEW_RECOMMENDATION"
            ]
        },
        "DeleteInsightResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteInsightRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/InsightId"
                }
            }
        },
        "InsightId": {
            "type": "string"
        },
        "DescribeAccountHealthResponse": {
            "type": "object",
            "properties": {
                "OpenReactiveInsights": {
                    "$ref": "#/$defs/NumOpenReactiveInsights"
                },
                "OpenProactiveInsights": {
                    "$ref": "#/$defs/NumOpenProactiveInsights"
                },
                "MetricsAnalyzed": {
                    "$ref": "#/$defs/NumMetricsAnalyzed"
                },
                "ResourceHours": {
                    "$ref": "#/$defs/ResourceHours"
                },
                "AnalyzedResourceCount": {
                    "$ref": "#/$defs/AnalyzedResourceCount"
                }
            }
        },
        "NumOpenReactiveInsights": {
            "type": "integer",
            "format": "int32"
        },
        "NumOpenProactiveInsights": {
            "type": "integer",
            "format": "int32"
        },
        "NumMetricsAnalyzed": {
            "type": "integer",
            "format": "int32"
        },
        "ResourceHours": {
            "type": "integer",
            "format": "int64"
        },
        "AnalyzedResourceCount": {
            "type": "integer",
            "format": "int64"
        },
        "DescribeAccountHealthRequest": {
            "type": "object",
            "properties": {}
        },
        "DescribeAccountOverviewResponse": {
            "type": "object",
            "properties": {
                "ReactiveInsights": {
                    "$ref": "#/$defs/NumReactiveInsights"
                },
                "ProactiveInsights": {
                    "$ref": "#/$defs/NumProactiveInsights"
                },
                "MeanTimeToRecoverInMilliseconds": {
                    "$ref": "#/$defs/MeanTimeToRecoverInMilliseconds"
                }
            }
        },
        "NumReactiveInsights": {
            "type": "integer",
            "format": "int32"
        },
        "NumProactiveInsights": {
            "type": "integer",
            "format": "int32"
        },
        "MeanTimeToRecoverInMilliseconds": {
            "type": "integer",
            "format": "int64"
        },
        "DescribeAccountOverviewRequest": {
            "type": "object",
            "properties": {
                "FromTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ToTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeAnomalyResponse": {
            "type": "object",
            "properties": {
                "ProactiveAnomaly": {
                    "$ref": "#/$defs/ProactiveAnomaly"
                },
                "ReactiveAnomaly": {
                    "$ref": "#/$defs/ReactiveAnomaly"
                }
            }
        },
        "ProactiveAnomaly": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/AnomalyId"
                },
                "Severity": {
                    "$ref": "#/$defs/AnomalySeverity"
                },
                "Status": {
                    "$ref": "#/$defs/AnomalyStatus"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "AnomalyTimeRange": {
                    "$ref": "#/$defs/AnomalyTimeRange"
                },
                "AnomalyReportedTimeRange": {
                    "$ref": "#/$defs/AnomalyReportedTimeRange"
                },
                "PredictionTimeRange": {
                    "$ref": "#/$defs/PredictionTimeRange"
                },
                "SourceDetails": {
                    "$ref": "#/$defs/AnomalySourceDetails"
                },
                "AssociatedInsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "Limit": {
                    "$ref": "#/$defs/AnomalyLimit"
                },
                "SourceMetadata": {
                    "$ref": "#/$defs/AnomalySourceMetadata"
                },
                "AnomalyResources": {
                    "$ref": "#/$defs/AnomalyResources"
                },
                "Description": {
                    "$ref": "#/$defs/AnomalyDescription"
                }
            }
        },
        "AnomalyId": {
            "type": "string"
        },
        "AnomalySeverity": {
            "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
            ]
        },
        "AnomalyStatus": {
            "enum": [
                "ONGOING",
                "CLOSED"
            ]
        },
        "AnomalyTimeRange": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "AnomalyReportedTimeRange": {
            "type": "object",
            "properties": {
                "OpenTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CloseTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "PredictionTimeRange": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "AnomalySourceDetails": {
            "type": "object",
            "properties": {
                "CloudWatchMetrics": {
                    "$ref": "#/$defs/CloudWatchMetricsDetails"
                },
                "PerformanceInsightsMetrics": {
                    "$ref": "#/$defs/PerformanceInsightsMetricsDetails"
                }
            }
        },
        "CloudWatchMetricsDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudWatchMetricsDetail"
            }
        },
        "CloudWatchMetricsDetail": {
            "type": "object",
            "properties": {
                "MetricName": {
                    "$ref": "#/$defs/CloudWatchMetricsMetricName"
                },
                "Namespace": {
                    "$ref": "#/$defs/CloudWatchMetricsNamespace"
                },
                "Dimensions": {
                    "$ref": "#/$defs/CloudWatchMetricsDimensions"
                },
                "Stat": {
                    "$ref": "#/$defs/CloudWatchMetricsStat"
                },
                "Unit": {
                    "$ref": "#/$defs/CloudWatchMetricsUnit"
                },
                "Period": {
                    "$ref": "#/$defs/CloudWatchMetricsPeriod"
                },
                "MetricDataSummary": {
                    "$ref": "#/$defs/CloudWatchMetricsDataSummary"
                }
            }
        },
        "CloudWatchMetricsMetricName": {
            "type": "string"
        },
        "CloudWatchMetricsNamespace": {
            "type": "string"
        },
        "CloudWatchMetricsDimensions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudWatchMetricsDimension"
            }
        },
        "CloudWatchMetricsDimension": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CloudWatchMetricsDimensionName"
                },
                "Value": {
                    "$ref": "#/$defs/CloudWatchMetricsDimensionValue"
                }
            }
        },
        "CloudWatchMetricsDimensionName": {
            "type": "string"
        },
        "CloudWatchMetricsDimensionValue": {
            "type": "string"
        },
        "CloudWatchMetricsStat": {
            "enum": [
                "SUM",
                "AVERAGE",
                "SAMPLE_COUNT",
                "MINIMUM",
                "MAXIMUM",
                "P99",
                "P90",
                "P50"
            ]
        },
        "CloudWatchMetricsUnit": {
            "type": "string"
        },
        "CloudWatchMetricsPeriod": {
            "type": "integer",
            "format": "int32"
        },
        "CloudWatchMetricsDataSummary": {
            "type": "object",
            "properties": {
                "TimestampMetricValuePairList": {
                    "$ref": "#/$defs/TimestampMetricValuePairList"
                },
                "StatusCode": {
                    "$ref": "#/$defs/CloudWatchMetricDataStatusCode"
                }
            }
        },
        "TimestampMetricValuePairList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TimestampMetricValuePair"
            }
        },
        "TimestampMetricValuePair": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "MetricValue": {
                    "$ref": "#/$defs/MetricValue"
                }
            }
        },
        "MetricValue": {
            "type": "number",
            "format": "double"
        },
        "CloudWatchMetricDataStatusCode": {
            "enum": [
                "COMPLETE",
                "INTERNAL_ERROR",
                "PARTIAL_DATA"
            ]
        },
        "PerformanceInsightsMetricsDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PerformanceInsightsMetricsDetail"
            }
        },
        "PerformanceInsightsMetricsDetail": {
            "type": "object",
            "properties": {
                "MetricDisplayName": {
                    "$ref": "#/$defs/PerformanceInsightsMetricDisplayName"
                },
                "Unit": {
                    "$ref": "#/$defs/PerformanceInsightsMetricUnit"
                },
                "MetricQuery": {
                    "$ref": "#/$defs/PerformanceInsightsMetricQuery"
                },
                "ReferenceData": {
                    "$ref": "#/$defs/PerformanceInsightsReferenceDataList"
                },
                "StatsAtAnomaly": {
                    "$ref": "#/$defs/PerformanceInsightsStats"
                },
                "StatsAtBaseline": {
                    "$ref": "#/$defs/PerformanceInsightsStats"
                }
            }
        },
        "PerformanceInsightsMetricDisplayName": {
            "type": "string"
        },
        "PerformanceInsightsMetricUnit": {
            "type": "string"
        },
        "PerformanceInsightsMetricQuery": {
            "type": "object",
            "properties": {
                "Metric": {
                    "$ref": "#/$defs/PerformanceInsightsMetricName"
                },
                "GroupBy": {
                    "$ref": "#/$defs/PerformanceInsightsMetricDimensionGroup"
                },
                "Filter": {
                    "$ref": "#/$defs/PerformanceInsightsMetricFilterMap"
                }
            }
        },
        "PerformanceInsightsMetricName": {
            "type": "string"
        },
        "PerformanceInsightsMetricDimensionGroup": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/PerformanceInsightsMetricGroup"
                },
                "Dimensions": {
                    "$ref": "#/$defs/PerformanceInsightsMetricDimensions"
                },
                "Limit": {
                    "$ref": "#/$defs/PerformanceInsightsMetricLimitInteger"
                }
            }
        },
        "PerformanceInsightsMetricGroup": {
            "type": "string"
        },
        "PerformanceInsightsMetricDimensions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PerformanceInsightsMetricDimension"
            }
        },
        "PerformanceInsightsMetricDimension": {
            "type": "string"
        },
        "PerformanceInsightsMetricLimitInteger": {
            "type": "integer",
            "format": "int32"
        },
        "PerformanceInsightsMetricFilterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/PerformanceInsightsMetricFilterValue"
            }
        },
        "PerformanceInsightsMetricFilterValue": {
            "type": "string"
        },
        "PerformanceInsightsReferenceDataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PerformanceInsightsReferenceData"
            }
        },
        "PerformanceInsightsReferenceData": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/PerformanceInsightsReferenceName"
                },
                "ComparisonValues": {
                    "$ref": "#/$defs/PerformanceInsightsReferenceComparisonValues"
                }
            }
        },
        "PerformanceInsightsReferenceName": {
            "type": "string"
        },
        "PerformanceInsightsReferenceComparisonValues": {
            "type": "object",
            "properties": {
                "ReferenceScalar": {
                    "$ref": "#/$defs/PerformanceInsightsReferenceScalar"
                },
                "ReferenceMetric": {
                    "$ref": "#/$defs/PerformanceInsightsReferenceMetric"
                }
            }
        },
        "PerformanceInsightsReferenceScalar": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/PerformanceInsightsValueDouble"
                }
            }
        },
        "PerformanceInsightsValueDouble": {
            "type": "number",
            "format": "double"
        },
        "PerformanceInsightsReferenceMetric": {
            "type": "object",
            "properties": {
                "MetricQuery": {
                    "$ref": "#/$defs/PerformanceInsightsMetricQuery"
                }
            }
        },
        "PerformanceInsightsStats": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PerformanceInsightsStat"
            }
        },
        "PerformanceInsightsStat": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/PerformanceInsightsStatType"
                },
                "Value": {
                    "$ref": "#/$defs/PerformanceInsightsValueDouble"
                }
            }
        },
        "PerformanceInsightsStatType": {
            "type": "string"
        },
        "ResourceCollection": {
            "type": "object",
            "properties": {
                "CloudFormation": {
                    "$ref": "#/$defs/CloudFormationCollection"
                },
                "Tags": {
                    "$ref": "#/$defs/TagCollections"
                }
            }
        },
        "CloudFormationCollection": {
            "type": "object",
            "properties": {
                "StackNames": {
                    "$ref": "#/$defs/StackNames"
                }
            }
        },
        "StackNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StackName"
            }
        },
        "StackName": {
            "type": "string"
        },
        "TagCollections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagCollection"
            }
        },
        "TagCollection": {
            "type": "object",
            "properties": {
                "AppBoundaryKey": {
                    "$ref": "#/$defs/AppBoundaryKey"
                },
                "TagValues": {
                    "$ref": "#/$defs/TagValues"
                }
            }
        },
        "AppBoundaryKey": {
            "type": "string"
        },
        "TagValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "AnomalyLimit": {
            "type": "number",
            "format": "double"
        },
        "AnomalySourceMetadata": {
            "type": "object",
            "properties": {
                "Source": {
                    "$ref": "#/$defs/AnomalySource"
                },
                "SourceResourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "SourceResourceType": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "AnomalySource": {
            "type": "string"
        },
        "ResourceName": {
            "type": "string"
        },
        "ResourceType": {
            "type": "string"
        },
        "AnomalyResources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnomalyResource"
            }
        },
        "AnomalyResource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "Type": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "AnomalyDescription": {
            "type": "string"
        },
        "ReactiveAnomaly": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/AnomalyId"
                },
                "Severity": {
                    "$ref": "#/$defs/AnomalySeverity"
                },
                "Status": {
                    "$ref": "#/$defs/AnomalyStatus"
                },
                "AnomalyTimeRange": {
                    "$ref": "#/$defs/AnomalyTimeRange"
                },
                "AnomalyReportedTimeRange": {
                    "$ref": "#/$defs/AnomalyReportedTimeRange"
                },
                "SourceDetails": {
                    "$ref": "#/$defs/AnomalySourceDetails"
                },
                "AssociatedInsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "Type": {
                    "$ref": "#/$defs/AnomalyType"
                },
                "Name": {
                    "$ref": "#/$defs/AnomalyName"
                },
                "Description": {
                    "$ref": "#/$defs/AnomalyDescription"
                },
                "CausalAnomalyId": {
                    "$ref": "#/$defs/AnomalyId"
                },
                "AnomalyResources": {
                    "$ref": "#/$defs/AnomalyResources"
                }
            }
        },
        "AnomalyType": {
            "enum": [
                "CAUSAL",
                "CONTEXTUAL"
            ]
        },
        "AnomalyName": {
            "type": "string"
        },
        "DescribeAnomalyRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/AnomalyId"
                },
                "AccountId": {
                    "$ref": "#/$defs/AwsAccountId"
                }
            }
        },
        "AwsAccountId": {
            "type": "string"
        },
        "DescribeEventSourcesConfigResponse": {
            "type": "object",
            "properties": {
                "EventSources": {
                    "$ref": "#/$defs/EventSourcesConfig"
                }
            }
        },
        "EventSourcesConfig": {
            "type": "object",
            "properties": {
                "AmazonCodeGuruProfiler": {
                    "$ref": "#/$defs/AmazonCodeGuruProfilerIntegration"
                }
            }
        },
        "AmazonCodeGuruProfilerIntegration": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/EventSourceOptInStatus"
                }
            }
        },
        "EventSourceOptInStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "DescribeEventSourcesConfigRequest": {
            "type": "object",
            "properties": {}
        },
        "DescribeFeedbackResponse": {
            "type": "object",
            "properties": {
                "InsightFeedback": {
                    "$ref": "#/$defs/InsightFeedback"
                }
            }
        },
        "InsightFeedback": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/InsightId"
                },
                "Feedback": {
                    "$ref": "#/$defs/InsightFeedbackOption"
                }
            }
        },
        "InsightFeedbackOption": {
            "enum": [
                "VALID_COLLECTION",
                "RECOMMENDATION_USEFUL",
                "ALERT_TOO_SENSITIVE",
                "DATA_NOISY_ANOMALY",
                "DATA_INCORRECT"
            ]
        },
        "DescribeFeedbackRequest": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/InsightId"
                }
            }
        },
        "DescribeInsightResponse": {
            "type": "object",
            "properties": {
                "ProactiveInsight": {
                    "$ref": "#/$defs/ProactiveInsight"
                },
                "ReactiveInsight": {
                    "$ref": "#/$defs/ReactiveInsight"
                }
            }
        },
        "ProactiveInsight": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/InsightId"
                },
                "Name": {
                    "$ref": "#/$defs/InsightName"
                },
                "Severity": {
                    "$ref": "#/$defs/InsightSeverity"
                },
                "Status": {
                    "$ref": "#/$defs/InsightStatus"
                },
                "InsightTimeRange": {
                    "$ref": "#/$defs/InsightTimeRange"
                },
                "PredictionTimeRange": {
                    "$ref": "#/$defs/PredictionTimeRange"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "SsmOpsItemId": {
                    "$ref": "#/$defs/SsmOpsItemId"
                },
                "Description": {
                    "$ref": "#/$defs/InsightDescription"
                }
            }
        },
        "InsightName": {
            "type": "string"
        },
        "InsightStatus": {
            "enum": [
                "ONGOING",
                "CLOSED"
            ]
        },
        "InsightTimeRange": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "SsmOpsItemId": {
            "type": "string"
        },
        "InsightDescription": {
            "type": "string"
        },
        "ReactiveInsight": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/InsightId"
                },
                "Name": {
                    "$ref": "#/$defs/InsightName"
                },
                "Severity": {
                    "$ref": "#/$defs/InsightSeverity"
                },
                "Status": {
                    "$ref": "#/$defs/InsightStatus"
                },
                "InsightTimeRange": {
                    "$ref": "#/$defs/InsightTimeRange"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "SsmOpsItemId": {
                    "$ref": "#/$defs/SsmOpsItemId"
                },
                "Description": {
                    "$ref": "#/$defs/InsightDescription"
                }
            }
        },
        "DescribeInsightRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/InsightId"
                },
                "AccountId": {
                    "$ref": "#/$defs/AwsAccountId"
                }
            }
        },
        "DescribeOrganizationHealthResponse": {
            "type": "object",
            "properties": {
                "OpenReactiveInsights": {
                    "$ref": "#/$defs/NumOpenReactiveInsights"
                },
                "OpenProactiveInsights": {
                    "$ref": "#/$defs/NumOpenProactiveInsights"
                },
                "MetricsAnalyzed": {
                    "$ref": "#/$defs/NumMetricsAnalyzed"
                },
                "ResourceHours": {
                    "$ref": "#/$defs/ResourceHours"
                }
            }
        },
        "DescribeOrganizationHealthRequest": {
            "type": "object",
            "properties": {
                "AccountIds": {
                    "$ref": "#/$defs/AccountIdList"
                },
                "OrganizationalUnitIds": {
                    "$ref": "#/$defs/OrganizationalUnitIdList"
                }
            }
        },
        "AccountIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AwsAccountId"
            }
        },
        "OrganizationalUnitIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationalUnitId"
            }
        },
        "OrganizationalUnitId": {
            "type": "string"
        },
        "DescribeOrganizationOverviewResponse": {
            "type": "object",
            "properties": {
                "ReactiveInsights": {
                    "$ref": "#/$defs/NumReactiveInsights"
                },
                "ProactiveInsights": {
                    "$ref": "#/$defs/NumProactiveInsights"
                }
            }
        },
        "DescribeOrganizationOverviewRequest": {
            "type": "object",
            "properties": {
                "FromTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ToTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "AccountIds": {
                    "$ref": "#/$defs/AccountIdList"
                },
                "OrganizationalUnitIds": {
                    "$ref": "#/$defs/OrganizationalUnitIdList"
                }
            }
        },
        "DescribeOrganizationResourceCollectionHealthResponse": {
            "type": "object",
            "properties": {
                "CloudFormation": {
                    "$ref": "#/$defs/CloudFormationHealths"
                },
                "Service": {
                    "$ref": "#/$defs/ServiceHealths"
                },
                "Account": {
                    "$ref": "#/$defs/AccountHealths"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagHealths"
                }
            }
        },
        "CloudFormationHealths": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudFormationHealth"
            }
        },
        "CloudFormationHealth": {
            "type": "object",
            "properties": {
                "StackName": {
                    "$ref": "#/$defs/StackName"
                },
                "Insight": {
                    "$ref": "#/$defs/InsightHealth"
                },
                "AnalyzedResourceCount": {
                    "$ref": "#/$defs/AnalyzedResourceCount"
                }
            }
        },
        "InsightHealth": {
            "type": "object",
            "properties": {
                "OpenProactiveInsights": {
                    "$ref": "#/$defs/NumOpenProactiveInsights"
                },
                "OpenReactiveInsights": {
                    "$ref": "#/$defs/NumOpenReactiveInsights"
                },
                "MeanTimeToRecoverInMilliseconds": {
                    "$ref": "#/$defs/MeanTimeToRecoverInMilliseconds"
                }
            }
        },
        "ServiceHealths": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceHealth"
            }
        },
        "ServiceHealth": {
            "type": "object",
            "properties": {
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "Insight": {
                    "$ref": "#/$defs/ServiceInsightHealth"
                },
                "AnalyzedResourceCount": {
                    "$ref": "#/$defs/AnalyzedResourceCount"
                }
            }
        },
        "ServiceName": {
            "enum": [
                "API_GATEWAY",
                "APPLICATION_ELB",
                "AUTO_SCALING_GROUP",
                "CLOUD_FRONT",
                "DYNAMO_DB",
                "EC2",
                "ECS",
                "EKS",
                "ELASTIC_BEANSTALK",
                "ELASTI_CACHE",
                "ELB",
                "ES",
                "KINESIS",
                "LAMBDA",
                "NAT_GATEWAY",
                "NETWORK_ELB",
                "RDS",
                "REDSHIFT",
                "ROUTE_53",
                "S3",
                "SAGE_MAKER",
                "SNS",
                "SQS",
                "STEP_FUNCTIONS",
                "SWF"
            ]
        },
        "ServiceInsightHealth": {
            "type": "object",
            "properties": {
                "OpenProactiveInsights": {
                    "$ref": "#/$defs/NumOpenProactiveInsights"
                },
                "OpenReactiveInsights": {
                    "$ref": "#/$defs/NumOpenReactiveInsights"
                }
            }
        },
        "AccountHealths": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountHealth"
            }
        },
        "AccountHealth": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "Insight": {
                    "$ref": "#/$defs/AccountInsightHealth"
                }
            }
        },
        "AccountInsightHealth": {
            "type": "object",
            "properties": {
                "OpenProactiveInsights": {
                    "$ref": "#/$defs/NumOpenProactiveInsights"
                },
                "OpenReactiveInsights": {
                    "$ref": "#/$defs/NumOpenReactiveInsights"
                }
            }
        },
        "UuidNextToken": {
            "type": "string"
        },
        "TagHealths": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagHealth"
            }
        },
        "TagHealth": {
            "type": "object",
            "properties": {
                "AppBoundaryKey": {
                    "$ref": "#/$defs/AppBoundaryKey"
                },
                "TagValue": {
                    "$ref": "#/$defs/TagValue"
                },
                "Insight": {
                    "$ref": "#/$defs/InsightHealth"
                },
                "AnalyzedResourceCount": {
                    "$ref": "#/$defs/AnalyzedResourceCount"
                }
            }
        },
        "DescribeOrganizationResourceCollectionHealthRequest": {
            "type": "object",
            "properties": {
                "OrganizationResourceCollectionType": {
                    "$ref": "#/$defs/OrganizationResourceCollectionType"
                },
                "AccountIds": {
                    "$ref": "#/$defs/AccountIdList"
                },
                "OrganizationalUnitIds": {
                    "$ref": "#/$defs/OrganizationalUnitIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/OrganizationResourceCollectionMaxResults"
                }
            }
        },
        "OrganizationResourceCollectionType": {
            "enum": [
                "AWS_CLOUD_FORMATION",
                "AWS_SERVICE",
                "AWS_ACCOUNT",
                "AWS_TAGS"
            ]
        },
        "OrganizationResourceCollectionMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeResourceCollectionHealthResponse": {
            "type": "object",
            "properties": {
                "CloudFormation": {
                    "$ref": "#/$defs/CloudFormationHealths"
                },
                "Service": {
                    "$ref": "#/$defs/ServiceHealths"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagHealths"
                }
            }
        },
        "DescribeResourceCollectionHealthRequest": {
            "type": "object",
            "properties": {
                "ResourceCollectionType": {
                    "$ref": "#/$defs/ResourceCollectionType"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "ResourceCollectionType": {
            "enum": [
                "AWS_CLOUD_FORMATION",
                "AWS_SERVICE",
                "AWS_TAGS"
            ]
        },
        "DescribeServiceIntegrationResponse": {
            "type": "object",
            "properties": {
                "ServiceIntegration": {
                    "$ref": "#/$defs/ServiceIntegrationConfig"
                }
            }
        },
        "ServiceIntegrationConfig": {
            "type": "object",
            "properties": {
                "OpsCenter": {
                    "$ref": "#/$defs/OpsCenterIntegration"
                },
                "LogsAnomalyDetection": {
                    "$ref": "#/$defs/LogsAnomalyDetectionIntegration"
                },
                "KMSServerSideEncryption": {
                    "$ref": "#/$defs/KMSServerSideEncryptionIntegration"
                }
            }
        },
        "OpsCenterIntegration": {
            "type": "object",
            "properties": {
                "OptInStatus": {
                    "$ref": "#/$defs/OptInStatus"
                }
            }
        },
        "OptInStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "LogsAnomalyDetectionIntegration": {
            "type": "object",
            "properties": {
                "OptInStatus": {
                    "$ref": "#/$defs/OptInStatus"
                }
            }
        },
        "KMSServerSideEncryptionIntegration": {
            "type": "object",
            "properties": {
                "KMSKeyId": {
                    "$ref": "#/$defs/KMSKeyId"
                },
                "OptInStatus": {
                    "$ref": "#/$defs/OptInStatus"
                },
                "Type": {
                    "$ref": "#/$defs/ServerSideEncryptionType"
                }
            }
        },
        "KMSKeyId": {
            "type": "string"
        },
        "ServerSideEncryptionType": {
            "enum": [
                "CUSTOMER_MANAGED_KEY",
                "AWS_OWNED_KMS_KEY"
            ]
        },
        "DescribeServiceIntegrationRequest": {
            "type": "object",
            "properties": {}
        },
        "GetCostEstimationResponse": {
            "type": "object",
            "properties": {
                "ResourceCollection": {
                    "$ref": "#/$defs/CostEstimationResourceCollectionFilter"
                },
                "Status": {
                    "$ref": "#/$defs/CostEstimationStatus"
                },
                "Costs": {
                    "$ref": "#/$defs/ServiceResourceCosts"
                },
                "TimeRange": {
                    "$ref": "#/$defs/CostEstimationTimeRange"
                },
                "TotalCost": {
                    "$ref": "#/$defs/Cost"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "CostEstimationResourceCollectionFilter": {
            "type": "object",
            "properties": {
                "CloudFormation": {
                    "$ref": "#/$defs/CloudFormationCostEstimationResourceCollectionFilter"
                },
                "Tags": {
                    "$ref": "#/$defs/TagCostEstimationResourceCollectionFilters"
                }
            }
        },
        "CloudFormationCostEstimationResourceCollectionFilter": {
            "type": "object",
            "properties": {
                "StackNames": {
                    "$ref": "#/$defs/CostEstimationStackNames"
                }
            }
        },
        "CostEstimationStackNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StackName"
            }
        },
        "TagCostEstimationResourceCollectionFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagCostEstimationResourceCollectionFilter"
            }
        },
        "TagCostEstimationResourceCollectionFilter": {
            "type": "object",
            "properties": {
                "AppBoundaryKey": {
                    "$ref": "#/$defs/AppBoundaryKey"
                },
                "TagValues": {
                    "$ref": "#/$defs/CostEstimationTagValues"
                }
            }
        },
        "CostEstimationTagValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "CostEstimationStatus": {
            "enum": [
                "ONGOING",
                "COMPLETED"
            ]
        },
        "ServiceResourceCosts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceResourceCost"
            }
        },
        "ServiceResourceCost": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ResourceType"
                },
                "State": {
                    "$ref": "#/$defs/CostEstimationServiceResourceState"
                },
                "Count": {
                    "$ref": "#/$defs/CostEstimationServiceResourceCount"
                },
                "UnitCost": {
                    "$ref": "#/$defs/Cost"
                },
                "Cost": {
                    "$ref": "#/$defs/Cost"
                }
            }
        },
        "CostEstimationServiceResourceState": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "CostEstimationServiceResourceCount": {
            "type": "integer",
            "format": "int32"
        },
        "Cost": {
            "type": "number",
            "format": "double"
        },
        "CostEstimationTimeRange": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "GetCostEstimationRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "GetResourceCollectionResponse": {
            "type": "object",
            "properties": {
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollectionFilter"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "ResourceCollectionFilter": {
            "type": "object",
            "properties": {
                "CloudFormation": {
                    "$ref": "#/$defs/CloudFormationCollectionFilter"
                },
                "Tags": {
                    "$ref": "#/$defs/TagCollectionFilters"
                }
            }
        },
        "CloudFormationCollectionFilter": {
            "type": "object",
            "properties": {
                "StackNames": {
                    "$ref": "#/$defs/StackNames"
                }
            }
        },
        "TagCollectionFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagCollectionFilter"
            }
        },
        "TagCollectionFilter": {
            "type": "object",
            "properties": {
                "AppBoundaryKey": {
                    "$ref": "#/$defs/AppBoundaryKey"
                },
                "TagValues": {
                    "$ref": "#/$defs/TagValues"
                }
            }
        },
        "GetResourceCollectionRequest": {
            "type": "object",
            "properties": {
                "ResourceCollectionType": {
                    "$ref": "#/$defs/ResourceCollectionType"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "ListAnomaliesForInsightResponse": {
            "type": "object",
            "properties": {
                "ProactiveAnomalies": {
                    "$ref": "#/$defs/ProactiveAnomalies"
                },
                "ReactiveAnomalies": {
                    "$ref": "#/$defs/ReactiveAnomalies"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "ProactiveAnomalies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProactiveAnomalySummary"
            }
        },
        "ProactiveAnomalySummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/AnomalyId"
                },
                "Severity": {
                    "$ref": "#/$defs/AnomalySeverity"
                },
                "Status": {
                    "$ref": "#/$defs/AnomalyStatus"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "AnomalyTimeRange": {
                    "$ref": "#/$defs/AnomalyTimeRange"
                },
                "AnomalyReportedTimeRange": {
                    "$ref": "#/$defs/AnomalyReportedTimeRange"
                },
                "PredictionTimeRange": {
                    "$ref": "#/$defs/PredictionTimeRange"
                },
                "SourceDetails": {
                    "$ref": "#/$defs/AnomalySourceDetails"
                },
                "AssociatedInsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "Limit": {
                    "$ref": "#/$defs/AnomalyLimit"
                },
                "SourceMetadata": {
                    "$ref": "#/$defs/AnomalySourceMetadata"
                },
                "AnomalyResources": {
                    "$ref": "#/$defs/AnomalyResources"
                },
                "Description": {
                    "$ref": "#/$defs/AnomalyDescription"
                }
            }
        },
        "ReactiveAnomalies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReactiveAnomalySummary"
            }
        },
        "ReactiveAnomalySummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/AnomalyId"
                },
                "Severity": {
                    "$ref": "#/$defs/AnomalySeverity"
                },
                "Status": {
                    "$ref": "#/$defs/AnomalyStatus"
                },
                "AnomalyTimeRange": {
                    "$ref": "#/$defs/AnomalyTimeRange"
                },
                "AnomalyReportedTimeRange": {
                    "$ref": "#/$defs/AnomalyReportedTimeRange"
                },
                "SourceDetails": {
                    "$ref": "#/$defs/AnomalySourceDetails"
                },
                "AssociatedInsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "Type": {
                    "$ref": "#/$defs/AnomalyType"
                },
                "Name": {
                    "$ref": "#/$defs/AnomalyName"
                },
                "Description": {
                    "$ref": "#/$defs/AnomalyDescription"
                },
                "CausalAnomalyId": {
                    "$ref": "#/$defs/AnomalyId"
                },
                "AnomalyResources": {
                    "$ref": "#/$defs/AnomalyResources"
                }
            }
        },
        "ListAnomaliesForInsightRequest": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "StartTimeRange": {
                    "$ref": "#/$defs/StartTimeRange"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListAnomaliesForInsightMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                },
                "AccountId": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "Filters": {
                    "$ref": "#/$defs/ListAnomaliesForInsightFilters"
                }
            }
        },
        "StartTimeRange": {
            "type": "object",
            "properties": {
                "FromTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ToTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListAnomaliesForInsightMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListAnomaliesForInsightFilters": {
            "type": "object",
            "properties": {
                "ServiceCollection": {
                    "$ref": "#/$defs/ServiceCollection"
                }
            }
        },
        "ServiceCollection": {
            "type": "object",
            "properties": {
                "ServiceNames": {
                    "$ref": "#/$defs/ServiceNames"
                }
            }
        },
        "ServiceNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceName"
            }
        },
        "ListAnomalousLogGroupsResponse": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "AnomalousLogGroups": {
                    "$ref": "#/$defs/AnomalousLogGroups"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "AnomalousLogGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnomalousLogGroup"
            }
        },
        "AnomalousLogGroup": {
            "type": "object",
            "properties": {
                "LogGroupName": {
                    "$ref": "#/$defs/LogGroupName"
                },
                "ImpactStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ImpactEndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "NumberOfLogLinesScanned": {
                    "$ref": "#/$defs/NumberOfLogLinesScanned"
                },
                "LogAnomalyShowcases": {
                    "$ref": "#/$defs/LogAnomalyShowcases"
                }
            }
        },
        "LogGroupName": {
            "type": "string"
        },
        "NumberOfLogLinesScanned": {
            "type": "integer",
            "format": "int32"
        },
        "LogAnomalyShowcases": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LogAnomalyShowcase"
            }
        },
        "LogAnomalyShowcase": {
            "type": "object",
            "properties": {
                "LogAnomalyClasses": {
                    "$ref": "#/$defs/LogAnomalyClasses"
                }
            }
        },
        "LogAnomalyClasses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LogAnomalyClass"
            }
        },
        "LogAnomalyClass": {
            "type": "object",
            "properties": {
                "LogStreamName": {
                    "$ref": "#/$defs/LogStreamName"
                },
                "LogAnomalyType": {
                    "$ref": "#/$defs/LogAnomalyType"
                },
                "LogAnomalyToken": {
                    "$ref": "#/$defs/LogAnomalyToken"
                },
                "LogEventId": {
                    "$ref": "#/$defs/LogEventId"
                },
                "Explanation": {
                    "$ref": "#/$defs/Explanation"
                },
                "NumberOfLogLinesOccurrences": {
                    "$ref": "#/$defs/NumberOfLogLinesOccurrences"
                },
                "LogEventTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "LogStreamName": {
            "type": "string"
        },
        "LogAnomalyType": {
            "enum": [
                "KEYWORD",
                "KEYWORD_TOKEN",
                "FORMAT",
                "HTTP_CODE",
                "BLOCK_FORMAT",
                "NUMERICAL_POINT",
                "NUMERICAL_NAN",
                "NEW_FIELD_NAME"
            ]
        },
        "LogAnomalyToken": {
            "type": "string"
        },
        "LogEventId": {
            "type": "string"
        },
        "Explanation": {
            "type": "string"
        },
        "NumberOfLogLinesOccurrences": {
            "type": "integer",
            "format": "int32"
        },
        "ListAnomalousLogGroupsRequest": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListAnomalousLogGroupsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "ListAnomalousLogGroupsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListEventsResponse": {
            "type": "object",
            "properties": {
                "Events": {
                    "$ref": "#/$defs/Events"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "Events": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Event"
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "Id": {
                    "$ref": "#/$defs/EventId"
                },
                "Time": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EventSource": {
                    "$ref": "#/$defs/EventSource"
                },
                "Name": {
                    "$ref": "#/$defs/EventName"
                },
                "DataSource": {
                    "$ref": "#/$defs/EventDataSource"
                },
                "EventClass": {
                    "$ref": "#/$defs/EventClass"
                },
                "Resources": {
                    "$ref": "#/$defs/EventResources"
                }
            }
        },
        "EventId": {
            "type": "string"
        },
        "EventSource": {
            "type": "string"
        },
        "EventName": {
            "type": "string"
        },
        "EventDataSource": {
            "enum": [
                "AWS_CLOUD_TRAIL",
                "AWS_CODE_DEPLOY"
            ]
        },
        "EventClass": {
            "enum": [
                "INFRASTRUCTURE",
                "DEPLOYMENT",
                "SECURITY_CHANGE",
                "CONFIG_CHANGE",
                "SCHEMA_CHANGE"
            ]
        },
        "EventResources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventResource"
            }
        },
        "EventResource": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/EventResourceType"
                },
                "Name": {
                    "$ref": "#/$defs/EventResourceName"
                },
                "Arn": {
                    "$ref": "#/$defs/EventResourceArn"
                }
            }
        },
        "EventResourceType": {
            "type": "string"
        },
        "EventResourceName": {
            "type": "string"
        },
        "EventResourceArn": {
            "type": "string"
        },
        "ListEventsRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/ListEventsFilters"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListEventsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                },
                "AccountId": {
                    "$ref": "#/$defs/AwsAccountId"
                }
            }
        },
        "ListEventsFilters": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "EventTimeRange": {
                    "$ref": "#/$defs/EventTimeRange"
                },
                "EventClass": {
                    "$ref": "#/$defs/EventClass"
                },
                "EventSource": {
                    "$ref": "#/$defs/EventSource"
                },
                "DataSource": {
                    "$ref": "#/$defs/EventDataSource"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                }
            }
        },
        "EventTimeRange": {
            "type": "object",
            "properties": {
                "FromTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ToTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListEventsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListInsightsResponse": {
            "type": "object",
            "properties": {
                "ProactiveInsights": {
                    "$ref": "#/$defs/ProactiveInsights"
                },
                "ReactiveInsights": {
                    "$ref": "#/$defs/ReactiveInsights"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "ProactiveInsights": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProactiveInsightSummary"
            }
        },
        "ProactiveInsightSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/InsightId"
                },
                "Name": {
                    "$ref": "#/$defs/InsightName"
                },
                "Severity": {
                    "$ref": "#/$defs/InsightSeverity"
                },
                "Status": {
                    "$ref": "#/$defs/InsightStatus"
                },
                "InsightTimeRange": {
                    "$ref": "#/$defs/InsightTimeRange"
                },
                "PredictionTimeRange": {
                    "$ref": "#/$defs/PredictionTimeRange"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "ServiceCollection": {
                    "$ref": "#/$defs/ServiceCollection"
                },
                "AssociatedResourceArns": {
                    "$ref": "#/$defs/AssociatedResourceArns"
                }
            }
        },
        "AssociatedResourceArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceArn"
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "ReactiveInsights": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReactiveInsightSummary"
            }
        },
        "ReactiveInsightSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/InsightId"
                },
                "Name": {
                    "$ref": "#/$defs/InsightName"
                },
                "Severity": {
                    "$ref": "#/$defs/InsightSeverity"
                },
                "Status": {
                    "$ref": "#/$defs/InsightStatus"
                },
                "InsightTimeRange": {
                    "$ref": "#/$defs/InsightTimeRange"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "ServiceCollection": {
                    "$ref": "#/$defs/ServiceCollection"
                },
                "AssociatedResourceArns": {
                    "$ref": "#/$defs/AssociatedResourceArns"
                }
            }
        },
        "ListInsightsRequest": {
            "type": "object",
            "properties": {
                "StatusFilter": {
                    "$ref": "#/$defs/ListInsightsStatusFilter"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListInsightsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "ListInsightsStatusFilter": {
            "type": "object",
            "properties": {
                "Ongoing": {
                    "$ref": "#/$defs/ListInsightsOngoingStatusFilter"
                },
                "Closed": {
                    "$ref": "#/$defs/ListInsightsClosedStatusFilter"
                },
                "Any": {
                    "$ref": "#/$defs/ListInsightsAnyStatusFilter"
                }
            }
        },
        "ListInsightsOngoingStatusFilter": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/InsightType"
                }
            }
        },
        "InsightType": {
            "enum": [
                "REACTIVE",
                "PROACTIVE"
            ]
        },
        "ListInsightsClosedStatusFilter": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/InsightType"
                },
                "EndTimeRange": {
                    "$ref": "#/$defs/EndTimeRange"
                }
            }
        },
        "EndTimeRange": {
            "type": "object",
            "properties": {
                "FromTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ToTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListInsightsAnyStatusFilter": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/InsightType"
                },
                "StartTimeRange": {
                    "$ref": "#/$defs/StartTimeRange"
                }
            }
        },
        "ListInsightsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListMonitoredResourcesResponse": {
            "type": "object",
            "properties": {
                "MonitoredResourceIdentifiers": {
                    "$ref": "#/$defs/MonitoredResourceIdentifiers"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "MonitoredResourceIdentifiers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MonitoredResourceIdentifier"
            }
        },
        "MonitoredResourceIdentifier": {
            "type": "object",
            "properties": {
                "MonitoredResourceName": {
                    "$ref": "#/$defs/MonitoredResourceName"
                },
                "Type": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ResourcePermission": {
                    "$ref": "#/$defs/ResourcePermission"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                }
            }
        },
        "MonitoredResourceName": {
            "type": "string"
        },
        "ResourcePermission": {
            "enum": [
                "FULL_PERMISSION",
                "MISSING_PERMISSION"
            ]
        },
        "ListMonitoredResourcesRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/ListMonitoredResourcesFilters"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListMonitoredResourcesMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "ListMonitoredResourcesFilters": {
            "type": "object",
            "properties": {
                "ResourcePermission": {
                    "$ref": "#/$defs/ResourcePermission"
                },
                "ResourceTypeFilters": {
                    "$ref": "#/$defs/ResourceTypeFilters"
                }
            }
        },
        "ResourceTypeFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceTypeFilter"
            }
        },
        "ResourceTypeFilter": {
            "enum": [
                "LOG_GROUPS",
                "CLOUDFRONT_DISTRIBUTION",
                "DYNAMODB_TABLE",
                "EC2_NAT_GATEWAY",
                "ECS_CLUSTER",
                "ECS_SERVICE",
                "EKS_CLUSTER",
                "ELASTIC_BEANSTALK_ENVIRONMENT",
                "ELASTIC_LOAD_BALANCER_LOAD_BALANCER",
                "ELASTIC_LOAD_BALANCING_V2_LOAD_BALANCER",
                "ELASTIC_LOAD_BALANCING_V2_TARGET_GROUP",
                "ELASTICACHE_CACHE_CLUSTER",
                "ELASTICSEARCH_DOMAIN",
                "KINESIS_STREAM",
                "LAMBDA_FUNCTION",
                "OPEN_SEARCH_SERVICE_DOMAIN",
                "RDS_DB_INSTANCE",
                "RDS_DB_CLUSTER",
                "REDSHIFT_CLUSTER",
                "ROUTE53_HOSTED_ZONE",
                "ROUTE53_HEALTH_CHECK",
                "S3_BUCKET",
                "SAGEMAKER_ENDPOINT",
                "SNS_TOPIC",
                "SQS_QUEUE",
                "STEP_FUNCTIONS_ACTIVITY",
                "STEP_FUNCTIONS_STATE_MACHINE"
            ]
        },
        "ListMonitoredResourcesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListNotificationChannelsResponse": {
            "type": "object",
            "properties": {
                "Channels": {
                    "$ref": "#/$defs/Channels"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "Channels": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NotificationChannel"
            }
        },
        "NotificationChannel": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NotificationChannelId"
                },
                "Config": {
                    "$ref": "#/$defs/NotificationChannelConfig"
                }
            }
        },
        "ListNotificationChannelsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "ListOrganizationInsightsResponse": {
            "type": "object",
            "properties": {
                "ProactiveInsights": {
                    "$ref": "#/$defs/ProactiveOrganizationInsights"
                },
                "ReactiveInsights": {
                    "$ref": "#/$defs/ReactiveOrganizationInsights"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "ProactiveOrganizationInsights": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProactiveOrganizationInsightSummary"
            }
        },
        "ProactiveOrganizationInsightSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/InsightId"
                },
                "AccountId": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "OrganizationalUnitId": {
                    "$ref": "#/$defs/OrganizationalUnitId"
                },
                "Name": {
                    "$ref": "#/$defs/InsightName"
                },
                "Severity": {
                    "$ref": "#/$defs/InsightSeverity"
                },
                "Status": {
                    "$ref": "#/$defs/InsightStatus"
                },
                "InsightTimeRange": {
                    "$ref": "#/$defs/InsightTimeRange"
                },
                "PredictionTimeRange": {
                    "$ref": "#/$defs/PredictionTimeRange"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "ServiceCollection": {
                    "$ref": "#/$defs/ServiceCollection"
                }
            }
        },
        "ReactiveOrganizationInsights": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReactiveOrganizationInsightSummary"
            }
        },
        "ReactiveOrganizationInsightSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/InsightId"
                },
                "AccountId": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "OrganizationalUnitId": {
                    "$ref": "#/$defs/OrganizationalUnitId"
                },
                "Name": {
                    "$ref": "#/$defs/InsightName"
                },
                "Severity": {
                    "$ref": "#/$defs/InsightSeverity"
                },
                "Status": {
                    "$ref": "#/$defs/InsightStatus"
                },
                "InsightTimeRange": {
                    "$ref": "#/$defs/InsightTimeRange"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "ServiceCollection": {
                    "$ref": "#/$defs/ServiceCollection"
                }
            }
        },
        "ListOrganizationInsightsRequest": {
            "type": "object",
            "properties": {
                "StatusFilter": {
                    "$ref": "#/$defs/ListInsightsStatusFilter"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListInsightsMaxResults"
                },
                "AccountIds": {
                    "$ref": "#/$defs/ListInsightsAccountIdList"
                },
                "OrganizationalUnitIds": {
                    "$ref": "#/$defs/ListInsightsOrganizationalUnitIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "ListInsightsAccountIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AwsAccountId"
            }
        },
        "ListInsightsOrganizationalUnitIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrganizationalUnitId"
            }
        },
        "ListRecommendationsResponse": {
            "type": "object",
            "properties": {
                "Recommendations": {
                    "$ref": "#/$defs/Recommendations"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "Recommendations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Recommendation"
            }
        },
        "Recommendation": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/RecommendationDescription"
                },
                "Link": {
                    "$ref": "#/$defs/RecommendationLink"
                },
                "Name": {
                    "$ref": "#/$defs/RecommendationName"
                },
                "Reason": {
                    "$ref": "#/$defs/RecommendationReason"
                },
                "RelatedEvents": {
                    "$ref": "#/$defs/RecommendationRelatedEvents"
                },
                "RelatedAnomalies": {
                    "$ref": "#/$defs/RecommendationRelatedAnomalies"
                },
                "Category": {
                    "$ref": "#/$defs/RecommendationCategory"
                }
            }
        },
        "RecommendationDescription": {
            "type": "string"
        },
        "RecommendationLink": {
            "type": "string"
        },
        "RecommendationName": {
            "type": "string"
        },
        "RecommendationReason": {
            "type": "string"
        },
        "RecommendationRelatedEvents": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationRelatedEvent"
            }
        },
        "RecommendationRelatedEvent": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecommendationRelatedEventName"
                },
                "Resources": {
                    "$ref": "#/$defs/RecommendationRelatedEventResources"
                }
            }
        },
        "RecommendationRelatedEventName": {
            "type": "string"
        },
        "RecommendationRelatedEventResources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationRelatedEventResource"
            }
        },
        "RecommendationRelatedEventResource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecommendationRelatedEventResourceName"
                },
                "Type": {
                    "$ref": "#/$defs/RecommendationRelatedEventResourceType"
                }
            }
        },
        "RecommendationRelatedEventResourceName": {
            "type": "string"
        },
        "RecommendationRelatedEventResourceType": {
            "type": "string"
        },
        "RecommendationRelatedAnomalies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationRelatedAnomaly"
            }
        },
        "RecommendationRelatedAnomaly": {
            "type": "object",
            "properties": {
                "Resources": {
                    "$ref": "#/$defs/RecommendationRelatedAnomalyResources"
                },
                "SourceDetails": {
                    "$ref": "#/$defs/RelatedAnomalySourceDetails"
                },
                "AnomalyId": {
                    "$ref": "#/$defs/AnomalyId"
                }
            }
        },
        "RecommendationRelatedAnomalyResources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationRelatedAnomalyResource"
            }
        },
        "RecommendationRelatedAnomalyResource": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecommendationRelatedAnomalyResourceName"
                },
                "Type": {
                    "$ref": "#/$defs/RecommendationRelatedAnomalyResourceType"
                }
            }
        },
        "RecommendationRelatedAnomalyResourceName": {
            "type": "string"
        },
        "RecommendationRelatedAnomalyResourceType": {
            "type": "string"
        },
        "RelatedAnomalySourceDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationRelatedAnomalySourceDetail"
            }
        },
        "RecommendationRelatedAnomalySourceDetail": {
            "type": "object",
            "properties": {
                "CloudWatchMetrics": {
                    "$ref": "#/$defs/RecommendationRelatedCloudWatchMetricsSourceDetails"
                }
            }
        },
        "RecommendationRelatedCloudWatchMetricsSourceDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationRelatedCloudWatchMetricsSourceDetail"
            }
        },
        "RecommendationRelatedCloudWatchMetricsSourceDetail": {
            "type": "object",
            "properties": {
                "MetricName": {
                    "$ref": "#/$defs/RecommendationRelatedCloudWatchMetricsSourceMetricName"
                },
                "Namespace": {
                    "$ref": "#/$defs/RecommendationRelatedCloudWatchMetricsSourceNamespace"
                }
            }
        },
        "RecommendationRelatedCloudWatchMetricsSourceMetricName": {
            "type": "string"
        },
        "RecommendationRelatedCloudWatchMetricsSourceNamespace": {
            "type": "string"
        },
        "RecommendationCategory": {
            "type": "string"
        },
        "ListRecommendationsRequest": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                },
                "Locale": {
                    "$ref": "#/$defs/Locale"
                },
                "AccountId": {
                    "$ref": "#/$defs/AwsAccountId"
                }
            }
        },
        "Locale": {
            "enum": [
                "DE_DE",
                "EN_US",
                "EN_GB",
                "ES_ES",
                "FR_FR",
                "IT_IT",
                "JA_JP",
                "KO_KR",
                "PT_BR",
                "ZH_CN",
                "ZH_TW"
            ]
        },
        "PutFeedbackResponse": {
            "type": "object",
            "properties": {}
        },
        "PutFeedbackRequest": {
            "type": "object",
            "properties": {
                "InsightFeedback": {
                    "$ref": "#/$defs/InsightFeedback"
                }
            }
        },
        "RemoveNotificationChannelResponse": {
            "type": "object",
            "properties": {}
        },
        "RemoveNotificationChannelRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NotificationChannelId"
                }
            }
        },
        "SearchInsightsResponse": {
            "type": "object",
            "properties": {
                "ProactiveInsights": {
                    "$ref": "#/$defs/ProactiveInsights"
                },
                "ReactiveInsights": {
                    "$ref": "#/$defs/ReactiveInsights"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "SearchInsightsRequest": {
            "type": "object",
            "properties": {
                "StartTimeRange": {
                    "$ref": "#/$defs/StartTimeRange"
                },
                "Filters": {
                    "$ref": "#/$defs/SearchInsightsFilters"
                },
                "MaxResults": {
                    "$ref": "#/$defs/SearchInsightsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                },
                "Type": {
                    "$ref": "#/$defs/InsightType"
                }
            }
        },
        "SearchInsightsFilters": {
            "type": "object",
            "properties": {
                "Severities": {
                    "$ref": "#/$defs/InsightSeverities"
                },
                "Statuses": {
                    "$ref": "#/$defs/InsightStatuses"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "ServiceCollection": {
                    "$ref": "#/$defs/ServiceCollection"
                }
            }
        },
        "InsightStatuses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InsightStatus"
            }
        },
        "SearchInsightsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "SearchOrganizationInsightsResponse": {
            "type": "object",
            "properties": {
                "ProactiveInsights": {
                    "$ref": "#/$defs/ProactiveInsights"
                },
                "ReactiveInsights": {
                    "$ref": "#/$defs/ReactiveInsights"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                }
            }
        },
        "SearchOrganizationInsightsRequest": {
            "type": "object",
            "properties": {
                "AccountIds": {
                    "$ref": "#/$defs/SearchInsightsAccountIdList"
                },
                "StartTimeRange": {
                    "$ref": "#/$defs/StartTimeRange"
                },
                "Filters": {
                    "$ref": "#/$defs/SearchOrganizationInsightsFilters"
                },
                "MaxResults": {
                    "$ref": "#/$defs/SearchOrganizationInsightsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/UuidNextToken"
                },
                "Type": {
                    "$ref": "#/$defs/InsightType"
                }
            }
        },
        "SearchInsightsAccountIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AwsAccountId"
            }
        },
        "SearchOrganizationInsightsFilters": {
            "type": "object",
            "properties": {
                "Severities": {
                    "$ref": "#/$defs/InsightSeverities"
                },
                "Statuses": {
                    "$ref": "#/$defs/InsightStatuses"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/ResourceCollection"
                },
                "ServiceCollection": {
                    "$ref": "#/$defs/ServiceCollection"
                }
            }
        },
        "SearchOrganizationInsightsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "StartCostEstimationResponse": {
            "type": "object",
            "properties": {}
        },
        "StartCostEstimationRequest": {
            "type": "object",
            "properties": {
                "ResourceCollection": {
                    "$ref": "#/$defs/CostEstimationResourceCollectionFilter"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "UpdateEventSourcesConfigResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateEventSourcesConfigRequest": {
            "type": "object",
            "properties": {
                "EventSources": {
                    "$ref": "#/$defs/EventSourcesConfig"
                }
            }
        },
        "UpdateResourceCollectionResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateResourceCollectionRequest": {
            "type": "object",
            "properties": {
                "Action": {
                    "$ref": "#/$defs/UpdateResourceCollectionAction"
                },
                "ResourceCollection": {
                    "$ref": "#/$defs/UpdateResourceCollectionFilter"
                }
            }
        },
        "UpdateResourceCollectionAction": {
            "enum": [
                "ADD",
                "REMOVE"
            ]
        },
        "UpdateResourceCollectionFilter": {
            "type": "object",
            "properties": {
                "CloudFormation": {
                    "$ref": "#/$defs/UpdateCloudFormationCollectionFilter"
                },
                "Tags": {
                    "$ref": "#/$defs/UpdateTagCollectionFilters"
                }
            }
        },
        "UpdateCloudFormationCollectionFilter": {
            "type": "object",
            "properties": {
                "StackNames": {
                    "$ref": "#/$defs/UpdateStackNames"
                }
            }
        },
        "UpdateStackNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StackName"
            }
        },
        "UpdateTagCollectionFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpdateTagCollectionFilter"
            }
        },
        "UpdateTagCollectionFilter": {
            "type": "object",
            "properties": {
                "AppBoundaryKey": {
                    "$ref": "#/$defs/AppBoundaryKey"
                },
                "TagValues": {
                    "$ref": "#/$defs/UpdateTagValues"
                }
            }
        },
        "UpdateTagValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "UpdateServiceIntegrationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateServiceIntegrationRequest": {
            "type": "object",
            "properties": {
                "ServiceIntegration": {
                    "$ref": "#/$defs/UpdateServiceIntegrationConfig"
                }
            }
        },
        "UpdateServiceIntegrationConfig": {
            "type": "object",
            "properties": {
                "OpsCenter": {
                    "$ref": "#/$defs/OpsCenterIntegrationConfig"
                },
                "LogsAnomalyDetection": {
                    "$ref": "#/$defs/LogsAnomalyDetectionIntegrationConfig"
                },
                "KMSServerSideEncryption": {
                    "$ref": "#/$defs/KMSServerSideEncryptionIntegrationConfig"
                }
            }
        },
        "OpsCenterIntegrationConfig": {
            "type": "object",
            "properties": {
                "OptInStatus": {
                    "$ref": "#/$defs/OptInStatus"
                }
            }
        },
        "LogsAnomalyDetectionIntegrationConfig": {
            "type": "object",
            "properties": {
                "OptInStatus": {
                    "$ref": "#/$defs/OptInStatus"
                }
            }
        },
        "KMSServerSideEncryptionIntegrationConfig": {
            "type": "object",
            "properties": {
                "KMSKeyId": {
                    "$ref": "#/$defs/KMSKeyId"
                },
                "OptInStatus": {
                    "$ref": "#/$defs/OptInStatus"
                },
                "Type": {
                    "$ref": "#/$defs/ServerSideEncryptionType"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://devops-guru-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://devops-guru-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://devops-guru.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://devops-guru.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}