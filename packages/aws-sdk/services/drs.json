{
    "name": "drs",
    "commands": [
        {
            "name": "CreateExtendedSourceServer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateExtendedSourceServer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateExtendedSourceServerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateExtendedSourceServerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLaunchAction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteLaunchAction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLaunchActionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLaunchActionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "InitializeService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "InitializeService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/InitializeServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/InitializeServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListExtensibleSourceServers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListExtensibleSourceServers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListExtensibleSourceServersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListExtensibleSourceServersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListLaunchActions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListLaunchActions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListLaunchActionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListLaunchActionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListStagingAccounts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListStagingAccounts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStagingAccountsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListStagingAccountsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutLaunchAction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutLaunchAction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutLaunchActionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutLaunchActionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateExtendedSourceServerResponse": {
            "type": "object",
            "properties": {
                "sourceServer": {
                    "$ref": "#/$defs/SourceServer"
                }
            }
        },
        "SourceServer": {
            "type": "object",
            "properties": {
                "sourceServerID": {
                    "$ref": "#/$defs/SourceServerID"
                },
                "arn": {
                    "$ref": "#/$defs/ARN"
                },
                "tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "recoveryInstanceId": {
                    "$ref": "#/$defs/RecoveryInstanceID"
                },
                "lastLaunchResult": {
                    "$ref": "#/$defs/LastLaunchResult"
                },
                "dataReplicationInfo": {
                    "$ref": "#/$defs/DataReplicationInfo"
                },
                "lifeCycle": {
                    "$ref": "#/$defs/LifeCycle"
                },
                "sourceProperties": {
                    "$ref": "#/$defs/SourceProperties"
                },
                "stagingArea": {
                    "$ref": "#/$defs/StagingArea"
                },
                "sourceCloudProperties": {
                    "$ref": "#/$defs/SourceCloudProperties"
                },
                "replicationDirection": {
                    "$ref": "#/$defs/ReplicationDirection"
                },
                "reversedDirectionSourceServerArn": {
                    "$ref": "#/$defs/SourceServerARN"
                },
                "sourceNetworkID": {
                    "$ref": "#/$defs/SourceNetworkID"
                },
                "agentVersion": {
                    "$ref": "#/$defs/AgentVersion"
                }
            }
        },
        "SourceServerID": {
            "type": "string"
        },
        "ARN": {
            "type": "string"
        },
        "TagsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "RecoveryInstanceID": {
            "type": "string"
        },
        "LastLaunchResult": {
            "type": "string"
        },
        "DataReplicationInfo": {
            "type": "object",
            "properties": {
                "lagDuration": {
                    "$ref": "#/$defs/ISO8601DurationString"
                },
                "etaDateTime": {
                    "$ref": "#/$defs/ISO8601DatetimeString"
                },
                "replicatedDisks": {
                    "$ref": "#/$defs/DataReplicationInfoReplicatedDisks"
                },
                "dataReplicationState": {
                    "$ref": "#/$defs/DataReplicationState"
                },
                "dataReplicationInitiation": {
                    "$ref": "#/$defs/DataReplicationInitiation"
                },
                "dataReplicationError": {
                    "$ref": "#/$defs/DataReplicationError"
                },
                "stagingAvailabilityZone": {
                    "$ref": "#/$defs/AwsAvailabilityZone"
                },
                "stagingOutpostArn": {
                    "$ref": "#/$defs/OutpostARN"
                }
            }
        },
        "ISO8601DurationString": {
            "type": "string"
        },
        "ISO8601DatetimeString": {
            "type": "string"
        },
        "DataReplicationInfoReplicatedDisks": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataReplicationInfoReplicatedDisk"
            }
        },
        "DataReplicationInfoReplicatedDisk": {
            "type": "object",
            "properties": {
                "deviceName": {
                    "$ref": "#/$defs/BoundedString"
                },
                "totalStorageBytes": {
                    "$ref": "#/$defs/PositiveInteger"
                },
                "replicatedStorageBytes": {
                    "$ref": "#/$defs/PositiveInteger"
                },
                "rescannedStorageBytes": {
                    "$ref": "#/$defs/PositiveInteger"
                },
                "backloggedStorageBytes": {
                    "$ref": "#/$defs/PositiveInteger"
                },
                "volumeStatus": {
                    "$ref": "#/$defs/VolumeStatus"
                }
            }
        },
        "BoundedString": {
            "type": "string"
        },
        "PositiveInteger": {
            "type": "integer",
            "format": "int64"
        },
        "VolumeStatus": {
            "type": "string"
        },
        "DataReplicationState": {
            "type": "string"
        },
        "DataReplicationInitiation": {
            "type": "object",
            "properties": {
                "startDateTime": {
                    "$ref": "#/$defs/ISO8601DatetimeString"
                },
                "nextAttemptDateTime": {
                    "$ref": "#/$defs/ISO8601DatetimeString"
                },
                "steps": {
                    "$ref": "#/$defs/DataReplicationInitiationSteps"
                }
            }
        },
        "DataReplicationInitiationSteps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataReplicationInitiationStep"
            }
        },
        "DataReplicationInitiationStep": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/DataReplicationInitiationStepName"
                },
                "status": {
                    "$ref": "#/$defs/DataReplicationInitiationStepStatus"
                }
            }
        },
        "DataReplicationInitiationStepName": {
            "type": "string"
        },
        "DataReplicationInitiationStepStatus": {
            "type": "string"
        },
        "DataReplicationError": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/DataReplicationErrorString"
                },
                "rawError": {
                    "$ref": "#/$defs/LargeBoundedString"
                }
            }
        },
        "DataReplicationErrorString": {
            "type": "string"
        },
        "LargeBoundedString": {
            "type": "string"
        },
        "AwsAvailabilityZone": {
            "type": "string"
        },
        "OutpostARN": {
            "type": "string"
        },
        "LifeCycle": {
            "type": "object",
            "properties": {
                "addedToServiceDateTime": {
                    "$ref": "#/$defs/ISO8601DatetimeString"
                },
                "firstByteDateTime": {
                    "$ref": "#/$defs/ISO8601DatetimeString"
                },
                "elapsedReplicationDuration": {
                    "$ref": "#/$defs/ISO8601DurationString"
                },
                "lastSeenByServiceDateTime": {
                    "$ref": "#/$defs/ISO8601DatetimeString"
                },
                "lastLaunch": {
                    "$ref": "#/$defs/LifeCycleLastLaunch"
                }
            }
        },
        "LifeCycleLastLaunch": {
            "type": "object",
            "properties": {
                "initiated": {
                    "$ref": "#/$defs/LifeCycleLastLaunchInitiated"
                },
                "status": {
                    "$ref": "#/$defs/LaunchStatus"
                }
            }
        },
        "LifeCycleLastLaunchInitiated": {
            "type": "object",
            "properties": {
                "apiCallDateTime": {
                    "$ref": "#/$defs/ISO8601DatetimeString"
                },
                "jobID": {
                    "$ref": "#/$defs/JobID"
                },
                "type": {
                    "$ref": "#/$defs/LastLaunchType"
                }
            }
        },
        "JobID": {
            "type": "string"
        },
        "LastLaunchType": {
            "type": "string"
        },
        "LaunchStatus": {
            "type": "string"
        },
        "SourceProperties": {
            "type": "object",
            "properties": {
                "lastUpdatedDateTime": {
                    "$ref": "#/$defs/ISO8601DatetimeString"
                },
                "recommendedInstanceType": {
                    "$ref": "#/$defs/EC2InstanceType"
                },
                "identificationHints": {
                    "$ref": "#/$defs/IdentificationHints"
                },
                "networkInterfaces": {
                    "$ref": "#/$defs/NetworkInterfaces"
                },
                "disks": {
                    "$ref": "#/$defs/Disks"
                },
                "cpus": {
                    "$ref": "#/$defs/Cpus"
                },
                "ramBytes": {
                    "$ref": "#/$defs/PositiveInteger"
                },
                "os": {
                    "$ref": "#/$defs/OS"
                },
                "supportsNitroInstances": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "EC2InstanceType": {
            "type": "string"
        },
        "IdentificationHints": {
            "type": "object",
            "properties": {
                "fqdn": {
                    "$ref": "#/$defs/BoundedString"
                },
                "hostname": {
                    "$ref": "#/$defs/BoundedString"
                },
                "vmWareUuid": {
                    "$ref": "#/$defs/BoundedString"
                },
                "awsInstanceID": {
                    "$ref": "#/$defs/EC2InstanceID"
                }
            }
        },
        "EC2InstanceID": {
            "type": "string"
        },
        "NetworkInterfaces": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInterface"
            }
        },
        "NetworkInterface": {
            "type": "object",
            "properties": {
                "macAddress": {
                    "$ref": "#/$defs/BoundedString"
                },
                "ips": {
                    "$ref": "#/$defs/IPsList"
                },
                "isPrimary": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "IPsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BoundedString"
            }
        },
        "Disks": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Disk"
            }
        },
        "Disk": {
            "type": "object",
            "properties": {
                "deviceName": {
                    "$ref": "#/$defs/BoundedString"
                },
                "bytes": {
                    "$ref": "#/$defs/PositiveInteger"
                }
            }
        },
        "Cpus": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CPU"
            }
        },
        "CPU": {
            "type": "object",
            "properties": {
                "cores": {
                    "$ref": "#/$defs/PositiveInteger"
                },
                "modelName": {
                    "$ref": "#/$defs/BoundedString"
                }
            }
        },
        "OS": {
            "type": "object",
            "properties": {
                "fullString": {
                    "$ref": "#/$defs/BoundedString"
                }
            }
        },
        "StagingArea": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/ExtensionStatus"
                },
                "stagingAccountID": {
                    "$ref": "#/$defs/AccountID"
                },
                "stagingSourceServerArn": {
                    "$ref": "#/$defs/ARN"
                },
                "errorMessage": {
                    "$ref": "#/$defs/LargeBoundedString"
                }
            }
        },
        "ExtensionStatus": {
            "type": "string"
        },
        "AccountID": {
            "type": "string"
        },
        "SourceCloudProperties": {
            "type": "object",
            "properties": {
                "originAccountID": {
                    "$ref": "#/$defs/AccountID"
                },
                "originRegion": {
                    "$ref": "#/$defs/AwsRegion"
                },
                "originAvailabilityZone": {
                    "$ref": "#/$defs/AwsAvailabilityZone"
                },
                "sourceOutpostArn": {
                    "$ref": "#/$defs/OutpostARN"
                }
            }
        },
        "AwsRegion": {
            "type": "string"
        },
        "ReplicationDirection": {
            "type": "string"
        },
        "SourceServerARN": {
            "type": "string"
        },
        "SourceNetworkID": {
            "type": "string"
        },
        "AgentVersion": {
            "type": "string"
        },
        "CreateExtendedSourceServerRequest": {
            "type": "object",
            "properties": {
                "sourceServerArn": {
                    "$ref": "#/$defs/SourceServerARN"
                },
                "tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "DeleteLaunchActionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteLaunchActionRequest": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "$ref": "#/$defs/LaunchActionResourceId"
                },
                "actionId": {
                    "$ref": "#/$defs/LaunchActionId"
                }
            }
        },
        "LaunchActionResourceId": {
            "type": "string"
        },
        "LaunchActionId": {
            "type": "string"
        },
        "InitializeServiceResponse": {
            "type": "object",
            "properties": {}
        },
        "InitializeServiceRequest": {
            "type": "object",
            "properties": {}
        },
        "ListExtensibleSourceServersResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/StagingSourceServersList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "StagingSourceServersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StagingSourceServer"
            }
        },
        "StagingSourceServer": {
            "type": "object",
            "properties": {
                "hostname": {
                    "$ref": "#/$defs/BoundedString"
                },
                "arn": {
                    "$ref": "#/$defs/SourceServerARN"
                },
                "tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "PaginationToken": {
            "type": "string"
        },
        "ListExtensibleSourceServersRequest": {
            "type": "object",
            "properties": {
                "stagingAccountID": {
                    "$ref": "#/$defs/AccountID"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResultsReplicatingSourceServers"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "MaxResultsReplicatingSourceServers": {
            "type": "integer",
            "format": "int32"
        },
        "ListLaunchActionsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/LaunchActions"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "LaunchActions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchAction"
            }
        },
        "LaunchAction": {
            "type": "object",
            "properties": {
                "actionId": {
                    "$ref": "#/$defs/LaunchActionId"
                },
                "actionCode": {
                    "$ref": "#/$defs/SsmDocumentName"
                },
                "type": {
                    "$ref": "#/$defs/LaunchActionType"
                },
                "name": {
                    "$ref": "#/$defs/LaunchActionName"
                },
                "active": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "order": {
                    "$ref": "#/$defs/LaunchActionOrder"
                },
                "actionVersion": {
                    "$ref": "#/$defs/LaunchActionVersion"
                },
                "optional": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "parameters": {
                    "$ref": "#/$defs/LaunchActionParameters"
                },
                "description": {
                    "$ref": "#/$defs/LaunchActionDescription"
                },
                "category": {
                    "$ref": "#/$defs/LaunchActionCategory"
                }
            }
        },
        "SsmDocumentName": {
            "type": "string"
        },
        "LaunchActionType": {
            "type": "string"
        },
        "LaunchActionName": {
            "type": "string"
        },
        "LaunchActionOrder": {
            "type": "integer",
            "format": "int32"
        },
        "LaunchActionVersion": {
            "type": "string"
        },
        "LaunchActionParameters": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/LaunchActionParameter"
            }
        },
        "LaunchActionParameter": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/$defs/LaunchActionParameterValue"
                },
                "type": {
                    "$ref": "#/$defs/LaunchActionParameterType"
                }
            }
        },
        "LaunchActionParameterValue": {
            "type": "string"
        },
        "LaunchActionParameterType": {
            "type": "string"
        },
        "LaunchActionDescription": {
            "type": "string"
        },
        "LaunchActionCategory": {
            "type": "string"
        },
        "ListLaunchActionsRequest": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "$ref": "#/$defs/LaunchActionResourceId"
                },
                "filters": {
                    "$ref": "#/$defs/LaunchActionsRequestFilters"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResultsType"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "LaunchActionsRequestFilters": {
            "type": "object",
            "properties": {
                "actionIds": {
                    "$ref": "#/$defs/LaunchActionIds"
                }
            }
        },
        "LaunchActionIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchActionId"
            }
        },
        "MaxResultsType": {
            "type": "integer",
            "format": "int32"
        },
        "ListStagingAccountsResponse": {
            "type": "object",
            "properties": {
                "accounts": {
                    "$ref": "#/$defs/Accounts"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "Accounts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Account"
            }
        },
        "Account": {
            "type": "object",
            "properties": {
                "accountID": {
                    "$ref": "#/$defs/AccountID"
                }
            }
        },
        "ListStagingAccountsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "PutLaunchActionResponse": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "$ref": "#/$defs/LaunchActionResourceId"
                },
                "actionId": {
                    "$ref": "#/$defs/LaunchActionId"
                },
                "actionCode": {
                    "$ref": "#/$defs/SsmDocumentName"
                },
                "type": {
                    "$ref": "#/$defs/LaunchActionType"
                },
                "name": {
                    "$ref": "#/$defs/LaunchActionName"
                },
                "active": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "order": {
                    "$ref": "#/$defs/LaunchActionOrder"
                },
                "actionVersion": {
                    "$ref": "#/$defs/LaunchActionVersion"
                },
                "optional": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "parameters": {
                    "$ref": "#/$defs/LaunchActionParameters"
                },
                "description": {
                    "$ref": "#/$defs/LaunchActionDescription"
                },
                "category": {
                    "$ref": "#/$defs/LaunchActionCategory"
                }
            }
        },
        "PutLaunchActionRequest": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "$ref": "#/$defs/LaunchActionResourceId"
                },
                "actionCode": {
                    "$ref": "#/$defs/SsmDocumentName"
                },
                "order": {
                    "$ref": "#/$defs/LaunchActionOrder"
                },
                "actionId": {
                    "$ref": "#/$defs/LaunchActionId"
                },
                "optional": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "active": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "name": {
                    "$ref": "#/$defs/LaunchActionName"
                },
                "actionVersion": {
                    "$ref": "#/$defs/LaunchActionVersion"
                },
                "category": {
                    "$ref": "#/$defs/LaunchActionCategory"
                },
                "parameters": {
                    "$ref": "#/$defs/LaunchActionParameters"
                },
                "description": {
                    "$ref": "#/$defs/LaunchActionDescription"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "TagKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://drs-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://drs-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://drs.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://drs.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}