{
    "name": "mediapackage-vod",
    "commands": [
        {
            "name": "ConfigureLogs",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/packaging_groups/{Id}/configure_logs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ConfigureLogsResponse"
                    },
                    "inject": [
                        "params.0.Id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ConfigureLogsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "EgressAccessLogs": {},
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "CreateAsset",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/assets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAssetResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateAssetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {},
                        "PackagingGroupId": {},
                        "ResourceId": {},
                        "SourceArn": {},
                        "SourceRoleArn": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreatePackagingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/packaging_configurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePackagingConfigurationResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreatePackagingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CmafPackage": {},
                        "DashPackage": {},
                        "HlsPackage": {},
                        "Id": {},
                        "MssPackage": {},
                        "PackagingGroupId": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreatePackagingGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/packaging_groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePackagingGroupResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreatePackagingGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Authorization": {},
                        "EgressAccessLogs": {},
                        "Id": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "DeleteAsset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/assets/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAssetResponse"
                    },
                    "inject": [
                        "params.0.Id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteAssetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "DeletePackagingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/packaging_configurations/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePackagingConfigurationResponse"
                    },
                    "inject": [
                        "params.0.Id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeletePackagingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "DeletePackagingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/packaging_groups/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePackagingGroupResponse"
                    },
                    "inject": [
                        "params.0.Id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeletePackagingGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "DescribeAsset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/assets/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAssetResponse"
                    },
                    "inject": [
                        "params.0.Id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeAssetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "DescribePackagingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/packaging_configurations/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePackagingConfigurationResponse"
                    },
                    "inject": [
                        "params.0.Id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribePackagingConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "DescribePackagingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/packaging_groups/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePackagingGroupResponse"
                    },
                    "inject": [
                        "params.0.Id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribePackagingGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "ListAssets",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/assets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAssetsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListAssetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {},
                        "PackagingGroupId": {}
                    }
                }
            }
        },
        {
            "name": "ListPackagingConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/packaging_configurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPackagingConfigurationsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListPackagingConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {},
                        "PackagingGroupId": {}
                    }
                }
            }
        },
        {
            "name": "ListPackagingGroups",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/packaging_groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPackagingGroupsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListPackagingGroupsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "TagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdatePackagingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Id": "route.Id",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/packaging_groups/{Id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePackagingGroupResponse"
                    },
                    "inject": [
                        "params.0.Id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdatePackagingGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Authorization": {},
                        "Id": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "ConfigureLogsRequest": {
            "type": "object",
            "properties": {
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "EgressAccessLogs": {
            "type": "object",
            "properties": {
                "LogGroupName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__string": {
            "type": "string"
        },
        "ConfigureLogsResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "DomainName": {
                    "$ref": "#/$defs/__string"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "Authorization": {
            "type": "object",
            "properties": {
                "CdnIdentifierSecret": {
                    "$ref": "#/$defs/__string"
                },
                "SecretsRoleArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "Tags": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/__string"
            }
        },
        "CreateAssetRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "PackagingGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceId": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceRoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CreateAssetResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "EgressEndpoints": {
                    "$ref": "#/$defs/__listOfEgressEndpoint"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "PackagingGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceId": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceRoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "__listOfEgressEndpoint": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EgressEndpoint"
            }
        },
        "EgressEndpoint": {
            "type": "object",
            "properties": {
                "PackagingConfigurationId": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreatePackagingConfigurationRequest": {
            "type": "object",
            "properties": {
                "CmafPackage": {
                    "$ref": "#/$defs/CmafPackage"
                },
                "DashPackage": {
                    "$ref": "#/$defs/DashPackage"
                },
                "HlsPackage": {
                    "$ref": "#/$defs/HlsPackage"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MssPackage": {
                    "$ref": "#/$defs/MssPackage"
                },
                "PackagingGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CmafPackage": {
            "type": "object",
            "properties": {
                "Encryption": {
                    "$ref": "#/$defs/CmafEncryption"
                },
                "HlsManifests": {
                    "$ref": "#/$defs/__listOfHlsManifest"
                },
                "IncludeEncoderConfigurationInSegments": {
                    "$ref": "#/$defs/__boolean"
                },
                "SegmentDurationSeconds": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "CmafEncryption": {
            "type": "object",
            "properties": {
                "ConstantInitializationVector": {
                    "$ref": "#/$defs/__string"
                },
                "SpekeKeyProvider": {
                    "$ref": "#/$defs/SpekeKeyProvider"
                }
            }
        },
        "SpekeKeyProvider": {
            "type": "object",
            "properties": {
                "EncryptionContractConfiguration": {
                    "$ref": "#/$defs/EncryptionContractConfiguration"
                },
                "RoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "SystemIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "Url": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "EncryptionContractConfiguration": {
            "type": "object",
            "properties": {
                "PresetSpeke20Audio": {
                    "$ref": "#/$defs/PresetSpeke20Audio"
                },
                "PresetSpeke20Video": {
                    "$ref": "#/$defs/PresetSpeke20Video"
                }
            }
        },
        "PresetSpeke20Audio": {
            "enum": [
                "PRESET_AUDIO_1",
                "PRESET_AUDIO_2",
                "PRESET_AUDIO_3",
                "SHARED",
                "UNENCRYPTED"
            ]
        },
        "PresetSpeke20Video": {
            "enum": [
                "PRESET_VIDEO_1",
                "PRESET_VIDEO_2",
                "PRESET_VIDEO_3",
                "PRESET_VIDEO_4",
                "PRESET_VIDEO_5",
                "PRESET_VIDEO_6",
                "PRESET_VIDEO_7",
                "PRESET_VIDEO_8",
                "SHARED",
                "UNENCRYPTED"
            ]
        },
        "__listOf__string": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__string"
            }
        },
        "__listOfHlsManifest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HlsManifest"
            }
        },
        "HlsManifest": {
            "type": "object",
            "properties": {
                "AdMarkers": {
                    "$ref": "#/$defs/AdMarkers"
                },
                "IncludeIframeOnlyStream": {
                    "$ref": "#/$defs/__boolean"
                },
                "ManifestName": {
                    "$ref": "#/$defs/__string"
                },
                "ProgramDateTimeIntervalSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "RepeatExtXKey": {
                    "$ref": "#/$defs/__boolean"
                },
                "StreamSelection": {
                    "$ref": "#/$defs/StreamSelection"
                }
            }
        },
        "AdMarkers": {
            "enum": [
                "NONE",
                "SCTE35_ENHANCED",
                "PASSTHROUGH"
            ]
        },
        "__boolean": {
            "type": "boolean"
        },
        "__integer": {
            "type": "integer",
            "format": "int32"
        },
        "StreamSelection": {
            "type": "object",
            "properties": {
                "MaxVideoBitsPerSecond": {
                    "$ref": "#/$defs/__integer"
                },
                "MinVideoBitsPerSecond": {
                    "$ref": "#/$defs/__integer"
                },
                "StreamOrder": {
                    "$ref": "#/$defs/StreamOrder"
                }
            }
        },
        "StreamOrder": {
            "enum": [
                "ORIGINAL",
                "VIDEO_BITRATE_ASCENDING",
                "VIDEO_BITRATE_DESCENDING"
            ]
        },
        "DashPackage": {
            "type": "object",
            "properties": {
                "DashManifests": {
                    "$ref": "#/$defs/__listOfDashManifest"
                },
                "Encryption": {
                    "$ref": "#/$defs/DashEncryption"
                },
                "IncludeEncoderConfigurationInSegments": {
                    "$ref": "#/$defs/__boolean"
                },
                "IncludeIframeOnlyStream": {
                    "$ref": "#/$defs/__boolean"
                },
                "PeriodTriggers": {
                    "$ref": "#/$defs/__listOf__PeriodTriggersElement"
                },
                "SegmentDurationSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "SegmentTemplateFormat": {
                    "$ref": "#/$defs/SegmentTemplateFormat"
                }
            }
        },
        "__listOfDashManifest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DashManifest"
            }
        },
        "DashManifest": {
            "type": "object",
            "properties": {
                "ManifestLayout": {
                    "$ref": "#/$defs/ManifestLayout"
                },
                "ManifestName": {
                    "$ref": "#/$defs/__string"
                },
                "MinBufferTimeSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "Profile": {
                    "$ref": "#/$defs/Profile"
                },
                "ScteMarkersSource": {
                    "$ref": "#/$defs/ScteMarkersSource"
                },
                "StreamSelection": {
                    "$ref": "#/$defs/StreamSelection"
                }
            }
        },
        "ManifestLayout": {
            "enum": [
                "FULL",
                "COMPACT"
            ]
        },
        "Profile": {
            "enum": [
                "NONE",
                "HBBTV_1_5"
            ]
        },
        "ScteMarkersSource": {
            "enum": [
                "SEGMENTS",
                "MANIFEST"
            ]
        },
        "DashEncryption": {
            "type": "object",
            "properties": {
                "SpekeKeyProvider": {
                    "$ref": "#/$defs/SpekeKeyProvider"
                }
            }
        },
        "__listOf__PeriodTriggersElement": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__PeriodTriggersElement"
            }
        },
        "__PeriodTriggersElement": {
            "enum": [
                "ADS"
            ]
        },
        "SegmentTemplateFormat": {
            "enum": [
                "NUMBER_WITH_TIMELINE",
                "TIME_WITH_TIMELINE",
                "NUMBER_WITH_DURATION"
            ]
        },
        "HlsPackage": {
            "type": "object",
            "properties": {
                "Encryption": {
                    "$ref": "#/$defs/HlsEncryption"
                },
                "HlsManifests": {
                    "$ref": "#/$defs/__listOfHlsManifest"
                },
                "IncludeDvbSubtitles": {
                    "$ref": "#/$defs/__boolean"
                },
                "SegmentDurationSeconds": {
                    "$ref": "#/$defs/__integer"
                },
                "UseAudioRenditionGroup": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "HlsEncryption": {
            "type": "object",
            "properties": {
                "ConstantInitializationVector": {
                    "$ref": "#/$defs/__string"
                },
                "EncryptionMethod": {
                    "$ref": "#/$defs/EncryptionMethod"
                },
                "SpekeKeyProvider": {
                    "$ref": "#/$defs/SpekeKeyProvider"
                }
            }
        },
        "EncryptionMethod": {
            "enum": [
                "AES_128",
                "SAMPLE_AES"
            ]
        },
        "MssPackage": {
            "type": "object",
            "properties": {
                "Encryption": {
                    "$ref": "#/$defs/MssEncryption"
                },
                "MssManifests": {
                    "$ref": "#/$defs/__listOfMssManifest"
                },
                "SegmentDurationSeconds": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "MssEncryption": {
            "type": "object",
            "properties": {
                "SpekeKeyProvider": {
                    "$ref": "#/$defs/SpekeKeyProvider"
                }
            }
        },
        "__listOfMssManifest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MssManifest"
            }
        },
        "MssManifest": {
            "type": "object",
            "properties": {
                "ManifestName": {
                    "$ref": "#/$defs/__string"
                },
                "StreamSelection": {
                    "$ref": "#/$defs/StreamSelection"
                }
            }
        },
        "CreatePackagingConfigurationResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CmafPackage": {
                    "$ref": "#/$defs/CmafPackage"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "DashPackage": {
                    "$ref": "#/$defs/DashPackage"
                },
                "HlsPackage": {
                    "$ref": "#/$defs/HlsPackage"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MssPackage": {
                    "$ref": "#/$defs/MssPackage"
                },
                "PackagingGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CreatePackagingGroupRequest": {
            "type": "object",
            "properties": {
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CreatePackagingGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "DomainName": {
                    "$ref": "#/$defs/__string"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DeleteAssetRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteAssetResponse": {
            "type": "object",
            "properties": {}
        },
        "DeletePackagingConfigurationRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeletePackagingConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeletePackagingGroupRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeletePackagingGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "DescribeAssetRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeAssetResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "EgressEndpoints": {
                    "$ref": "#/$defs/__listOfEgressEndpoint"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "PackagingGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceId": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceRoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DescribePackagingConfigurationRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribePackagingConfigurationResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CmafPackage": {
                    "$ref": "#/$defs/CmafPackage"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "DashPackage": {
                    "$ref": "#/$defs/DashPackage"
                },
                "HlsPackage": {
                    "$ref": "#/$defs/HlsPackage"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MssPackage": {
                    "$ref": "#/$defs/MssPackage"
                },
                "PackagingGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DescribePackagingGroupRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribePackagingGroupResponse": {
            "type": "object",
            "properties": {
                "ApproximateAssetCount": {
                    "$ref": "#/$defs/__integer"
                },
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "DomainName": {
                    "$ref": "#/$defs/__string"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListAssetsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "PackagingGroupId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListAssetsResponse": {
            "type": "object",
            "properties": {
                "Assets": {
                    "$ref": "#/$defs/__listOfAssetShallow"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfAssetShallow": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssetShallow"
            }
        },
        "AssetShallow": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "PackagingGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceId": {
                    "$ref": "#/$defs/__string"
                },
                "SourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "SourceRoleArn": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListPackagingConfigurationsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "PackagingGroupId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListPackagingConfigurationsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "PackagingConfigurations": {
                    "$ref": "#/$defs/__listOfPackagingConfiguration"
                }
            }
        },
        "__listOfPackagingConfiguration": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackagingConfiguration"
            }
        },
        "PackagingConfiguration": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "CmafPackage": {
                    "$ref": "#/$defs/CmafPackage"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "DashPackage": {
                    "$ref": "#/$defs/DashPackage"
                },
                "HlsPackage": {
                    "$ref": "#/$defs/HlsPackage"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "MssPackage": {
                    "$ref": "#/$defs/MssPackage"
                },
                "PackagingGroupId": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListPackagingGroupsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListPackagingGroupsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "PackagingGroups": {
                    "$ref": "#/$defs/__listOfPackagingGroup"
                }
            }
        },
        "__listOfPackagingGroup": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackagingGroup"
            }
        },
        "PackagingGroup": {
            "type": "object",
            "properties": {
                "ApproximateAssetCount": {
                    "$ref": "#/$defs/__integer"
                },
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "DomainName": {
                    "$ref": "#/$defs/__string"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "__mapOf__string": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/__string"
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/__mapOf__string"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "TagKeys": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "UpdatePackagingGroupRequest": {
            "type": "object",
            "properties": {
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdatePackagingGroupResponse": {
            "type": "object",
            "properties": {
                "ApproximateAssetCount": {
                    "$ref": "#/$defs/__integer"
                },
                "Arn": {
                    "$ref": "#/$defs/__string"
                },
                "Authorization": {
                    "$ref": "#/$defs/Authorization"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/__string"
                },
                "DomainName": {
                    "$ref": "#/$defs/__string"
                },
                "EgressAccessLogs": {
                    "$ref": "#/$defs/EgressAccessLogs"
                },
                "Id": {
                    "$ref": "#/$defs/__string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mediapackage-vod-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mediapackage-vod-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mediapackage-vod.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://mediapackage-vod.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
