{
    "name": "observabilityadmin",
    "commands": [
        {
            "name": "GetTelemetryEvaluationStatus",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetTelemetryEvaluationStatus"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTelemetryEvaluationStatusOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetTelemetryEvaluationStatusForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetTelemetryEvaluationStatusForOrganization"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTelemetryEvaluationStatusForOrganizationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "ListResourceTelemetry",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListResourceTelemetry"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResourceTelemetryOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListResourceTelemetryInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceIdentifierPrefix": {},
                        "ResourceTypes": {},
                        "TelemetryConfigurationState": {},
                        "ResourceTags": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListResourceTelemetryForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListResourceTelemetryForOrganization"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResourceTelemetryForOrganizationOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListResourceTelemetryForOrganizationInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountIdentifiers": {},
                        "ResourceIdentifierPrefix": {},
                        "ResourceTypes": {},
                        "TelemetryConfigurationState": {},
                        "ResourceTags": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "StartTelemetryEvaluation",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/StartTelemetryEvaluation"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "StartTelemetryEvaluationForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/StartTelemetryEvaluationForOrganization"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "StopTelemetryEvaluation",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/StopTelemetryEvaluation"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "StopTelemetryEvaluationForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/StopTelemetryEvaluationForOrganization"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "GetTelemetryEvaluationStatusOutput": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "FailureReason": {
                    "$ref": "#/$defs/FailureReason"
                }
            }
        },
        "Status": {
            "enum": [
                "NOT_STARTED",
                "STARTING",
                "FAILED_START",
                "RUNNING",
                "STOPPING",
                "FAILED_STOP",
                "STOPPED"
            ]
        },
        "FailureReason": {
            "type": "string"
        },
        "GetTelemetryEvaluationStatusForOrganizationOutput": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "FailureReason": {
                    "$ref": "#/$defs/FailureReason"
                }
            }
        },
        "ListResourceTelemetryInput": {
            "type": "object",
            "properties": {
                "ResourceIdentifierPrefix": {
                    "$ref": "#/$defs/ResourceIdentifierPrefix"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/ResourceTypes"
                },
                "TelemetryConfigurationState": {
                    "$ref": "#/$defs/TelemetryConfigurationState"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/TagMapInput"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListResourceTelemetryMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ResourceIdentifierPrefix": {
            "type": "string"
        },
        "ResourceTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceType"
            }
        },
        "ResourceType": {
            "enum": [
                "AWS_EC2_INSTANCE",
                "AWS_EC2_VPC",
                "AWS_LAMDBA_FUNCTION"
            ]
        },
        "TelemetryConfigurationState": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TelemetryState"
            }
        },
        "TelemetryState": {
            "enum": [
                "ENABLED",
                "DISABLED",
                "NOT_APPLICABLE"
            ]
        },
        "TagMapInput": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "ListResourceTelemetryMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "NextToken": {
            "type": "string"
        },
        "ListResourceTelemetryOutput": {
            "type": "object",
            "properties": {
                "TelemetryConfigurations": {
                    "$ref": "#/$defs/TelemetryConfigurations"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TelemetryConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TelemetryConfiguration"
            }
        },
        "TelemetryConfiguration": {
            "type": "object",
            "properties": {
                "AccountIdentifier": {
                    "$ref": "#/$defs/AccountIdentifier"
                },
                "TelemetryConfigurationState": {
                    "$ref": "#/$defs/TelemetryConfigurationState"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ResourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/TagMapOutput"
                },
                "LastUpdateTimeStamp": {
                    "$ref": "#/$defs/smithy.api#Long"
                }
            }
        },
        "AccountIdentifier": {
            "type": "string"
        },
        "ResourceIdentifier": {
            "type": "string"
        },
        "TagMapOutput": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "ListResourceTelemetryForOrganizationInput": {
            "type": "object",
            "properties": {
                "AccountIdentifiers": {
                    "$ref": "#/$defs/AccountIdentifiers"
                },
                "ResourceIdentifierPrefix": {
                    "$ref": "#/$defs/ResourceIdentifierPrefix"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/ResourceTypes"
                },
                "TelemetryConfigurationState": {
                    "$ref": "#/$defs/TelemetryConfigurationState"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/TagMapInput"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListResourceTelemetryForOrganizationMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AccountIdentifiers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountIdentifier"
            }
        },
        "ListResourceTelemetryForOrganizationMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListResourceTelemetryForOrganizationOutput": {
            "type": "object",
            "properties": {
                "TelemetryConfigurations": {
                    "$ref": "#/$defs/TelemetryConfigurations"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://observabilityadmin-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://observabilityadmin-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://observabilityadmin.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://observabilityadmin.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                }
            ]
        }
    }
}
