{
    "name": "elasticfilesystem",
    "commands": [
        {
            "name": "CreateAccessPoint",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-02-01/access-points"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AccessPointDescription"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAccessPointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateFileSystem",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-02-01/file-systems"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/FileSystemDescription"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFileSystemRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateMountTarget",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/2015-02-01/mount-targets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MountTargetDescription"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMountTargetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateReplicationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SourceFileSystemId": "route.SourceFileSystemId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/2015-02-01/file-systems/{SourceFileSystemId}/replication-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReplicationConfigurationDescription"
                    },
                    "inject": [
                        "param.0.SourceFileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateReplicationConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateTags",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/2015-02-01/create-tags/{FileSystemId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteAccessPoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AccessPointId": "route.AccessPointId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/2015-02-01/access-points/{AccessPointId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.AccessPointId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAccessPointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteFileSystem",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/2015-02-01/file-systems/{FileSystemId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFileSystemRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteFileSystemPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/2015-02-01/file-systems/{FileSystemId}/policy"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFileSystemPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMountTarget",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MountTargetId": "route.MountTargetId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/2015-02-01/mount-targets/{MountTargetId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.MountTargetId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMountTargetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteReplicationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SourceFileSystemId": "route.SourceFileSystemId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/2015-02-01/file-systems/{SourceFileSystemId}/replication-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.SourceFileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteReplicationConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteTags",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/2015-02-01/delete-tags/{FileSystemId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeAccessPoints",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2015-02-01/access-points"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAccessPointsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAccessPointsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeAccountPreferences",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2015-02-01/account-preferences"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAccountPreferencesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAccountPreferencesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeBackupPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-02-01/file-systems/{FileSystemId}/backup-policy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BackupPolicyDescription"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeBackupPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeFileSystemPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-02-01/file-systems/{FileSystemId}/policy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/FileSystemPolicyDescription"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFileSystemPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeFileSystems",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2015-02-01/file-systems"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFileSystemsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFileSystemsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeLifecycleConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-02-01/file-systems/{FileSystemId}/lifecycle-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/LifecycleConfigurationDescription"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLifecycleConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeMountTargets",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2015-02-01/mount-targets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMountTargetsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMountTargetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeMountTargetSecurityGroups",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MountTargetId": "route.MountTargetId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-02-01/mount-targets/{MountTargetId}/security-groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMountTargetSecurityGroupsResponse"
                    },
                    "inject": [
                        "param.0.MountTargetId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMountTargetSecurityGroupsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeReplicationConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/2015-02-01/file-systems/replication-configurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReplicationConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReplicationConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeTags",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-02-01/tags/{FileSystemId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTagsResponse"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceId": "route.ResourceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/2015-02-01/resource-tags/{ResourceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ModifyMountTargetSecurityGroups",
            "config": {
                "http": {
                    "inject": [
                        {
                            "MountTargetId": "route.MountTargetId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/2015-02-01/mount-targets/{MountTargetId}/security-groups"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.MountTargetId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyMountTargetSecurityGroupsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutAccountPreferences",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/2015-02-01/account-preferences"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAccountPreferencesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAccountPreferencesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutBackupPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/2015-02-01/file-systems/{FileSystemId}/backup-policy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BackupPolicyDescription"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutBackupPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutFileSystemPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/2015-02-01/file-systems/{FileSystemId}/policy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/FileSystemPolicyDescription"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutFileSystemPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutLifecycleConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/2015-02-01/file-systems/{FileSystemId}/lifecycle-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/LifecycleConfigurationDescription"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutLifecycleConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceId": "route.ResourceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/2015-02-01/resource-tags/{ResourceId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceId": "route.ResourceId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/2015-02-01/resource-tags/{ResourceId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateFileSystem",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/2015-02-01/file-systems/{FileSystemId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/FileSystemDescription"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFileSystemRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateFileSystemProtection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FileSystemId": "route.FileSystemId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/2015-02-01/file-systems/{FileSystemId}/protection"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/FileSystemProtectionDescription"
                    },
                    "inject": [
                        "param.0.FileSystemId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFileSystemProtectionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AccessPointDescription": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "AccessPointId": {
                    "$ref": "#/$defs/AccessPointId"
                },
                "AccessPointArn": {
                    "$ref": "#/$defs/AccessPointArn"
                },
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "PosixUser": {
                    "$ref": "#/$defs/PosixUser"
                },
                "RootDirectory": {
                    "$ref": "#/$defs/RootDirectory"
                },
                "OwnerId": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "LifeCycleState": {
                    "$ref": "#/$defs/LifeCycleState"
                }
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "AccessPointId": {
            "type": "string"
        },
        "AccessPointArn": {
            "type": "string"
        },
        "FileSystemId": {
            "type": "string"
        },
        "PosixUser": {
            "type": "object",
            "properties": {
                "Uid": {
                    "$ref": "#/$defs/Uid"
                },
                "Gid": {
                    "$ref": "#/$defs/Gid"
                },
                "SecondaryGids": {
                    "$ref": "#/$defs/SecondaryGids"
                }
            }
        },
        "Uid": {
            "type": "integer",
            "format": "int64"
        },
        "Gid": {
            "type": "integer",
            "format": "int64"
        },
        "SecondaryGids": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Gid"
            }
        },
        "RootDirectory": {
            "type": "object",
            "properties": {
                "Path": {
                    "$ref": "#/$defs/Path"
                },
                "CreationInfo": {
                    "$ref": "#/$defs/CreationInfo"
                }
            }
        },
        "Path": {
            "type": "string"
        },
        "CreationInfo": {
            "type": "object",
            "properties": {
                "OwnerUid": {
                    "$ref": "#/$defs/OwnerUid"
                },
                "OwnerGid": {
                    "$ref": "#/$defs/OwnerGid"
                },
                "Permissions": {
                    "$ref": "#/$defs/Permissions"
                }
            }
        },
        "OwnerUid": {
            "type": "integer",
            "format": "int64"
        },
        "OwnerGid": {
            "type": "integer",
            "format": "int64"
        },
        "Permissions": {
            "type": "string"
        },
        "AwsAccountId": {
            "type": "string"
        },
        "LifeCycleState": {
            "enum": [
                "CREATING",
                "AVAILABLE",
                "UPDATING",
                "DELETING",
                "DELETED",
                "ERROR"
            ]
        },
        "CreateAccessPointRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "PosixUser": {
                    "$ref": "#/$defs/PosixUser"
                },
                "RootDirectory": {
                    "$ref": "#/$defs/RootDirectory"
                }
            }
        },
        "FileSystemDescription": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "CreationToken": {
                    "$ref": "#/$defs/CreationToken"
                },
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "FileSystemArn": {
                    "$ref": "#/$defs/FileSystemArn"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LifeCycleState": {
                    "$ref": "#/$defs/LifeCycleState"
                },
                "Name": {
                    "$ref": "#/$defs/TagValue"
                },
                "NumberOfMountTargets": {
                    "$ref": "#/$defs/MountTargetCount"
                },
                "SizeInBytes": {
                    "$ref": "#/$defs/FileSystemSize"
                },
                "PerformanceMode": {
                    "$ref": "#/$defs/PerformanceMode"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Encrypted"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "ThroughputMode": {
                    "$ref": "#/$defs/ThroughputMode"
                },
                "ProvisionedThroughputInMibps": {
                    "$ref": "#/$defs/ProvisionedThroughputInMibps"
                },
                "AvailabilityZoneName": {
                    "$ref": "#/$defs/AvailabilityZoneName"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "FileSystemProtection": {
                    "$ref": "#/$defs/FileSystemProtectionDescription"
                }
            }
        },
        "CreationToken": {
            "type": "string"
        },
        "FileSystemArn": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "MountTargetCount": {
            "type": "integer",
            "format": "int32"
        },
        "FileSystemSize": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/FileSystemSizeValue"
                },
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ValueInIA": {
                    "$ref": "#/$defs/FileSystemNullableSizeValue"
                },
                "ValueInStandard": {
                    "$ref": "#/$defs/FileSystemNullableSizeValue"
                },
                "ValueInArchive": {
                    "$ref": "#/$defs/FileSystemNullableSizeValue"
                }
            }
        },
        "FileSystemSizeValue": {
            "type": "integer",
            "format": "int64"
        },
        "FileSystemNullableSizeValue": {
            "type": "integer",
            "format": "int64"
        },
        "PerformanceMode": {
            "enum": [
                "GENERAL_PURPOSE",
                "MAX_IO"
            ]
        },
        "Encrypted": {
            "type": "boolean"
        },
        "KmsKeyId": {
            "type": "string"
        },
        "ThroughputMode": {
            "enum": [
                "BURSTING",
                "PROVISIONED",
                "ELASTIC"
            ]
        },
        "ProvisionedThroughputInMibps": {
            "type": "number",
            "format": "double"
        },
        "AvailabilityZoneName": {
            "type": "string"
        },
        "AvailabilityZoneId": {
            "type": "string"
        },
        "FileSystemProtectionDescription": {
            "type": "object",
            "properties": {
                "ReplicationOverwriteProtection": {
                    "$ref": "#/$defs/ReplicationOverwriteProtection"
                }
            }
        },
        "ReplicationOverwriteProtection": {
            "enum": [
                "ENABLED",
                "DISABLED",
                "REPLICATING"
            ]
        },
        "CreateFileSystemRequest": {
            "type": "object",
            "properties": {
                "CreationToken": {
                    "$ref": "#/$defs/CreationToken"
                },
                "PerformanceMode": {
                    "$ref": "#/$defs/PerformanceMode"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Encrypted"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "ThroughputMode": {
                    "$ref": "#/$defs/ThroughputMode"
                },
                "ProvisionedThroughputInMibps": {
                    "$ref": "#/$defs/ProvisionedThroughputInMibps"
                },
                "AvailabilityZoneName": {
                    "$ref": "#/$defs/AvailabilityZoneName"
                },
                "Backup": {
                    "$ref": "#/$defs/Backup"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "Backup": {
            "type": "boolean"
        },
        "MountTargetDescription": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "MountTargetId": {
                    "$ref": "#/$defs/MountTargetId"
                },
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "LifeCycleState": {
                    "$ref": "#/$defs/LifeCycleState"
                },
                "IpAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "AvailabilityZoneName": {
                    "$ref": "#/$defs/AvailabilityZoneName"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                }
            }
        },
        "MountTargetId": {
            "type": "string"
        },
        "SubnetId": {
            "type": "string"
        },
        "IpAddress": {
            "type": "string"
        },
        "NetworkInterfaceId": {
            "type": "string"
        },
        "VpcId": {
            "type": "string"
        },
        "CreateMountTargetRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "IpAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroups"
                }
            }
        },
        "SecurityGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroup"
            }
        },
        "SecurityGroup": {
            "type": "string"
        },
        "ReplicationConfigurationDescription": {
            "type": "object",
            "properties": {
                "SourceFileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "SourceFileSystemRegion": {
                    "$ref": "#/$defs/RegionName"
                },
                "SourceFileSystemArn": {
                    "$ref": "#/$defs/FileSystemArn"
                },
                "OriginalSourceFileSystemArn": {
                    "$ref": "#/$defs/FileSystemArn"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Destinations": {
                    "$ref": "#/$defs/Destinations"
                },
                "SourceFileSystemOwnerId": {
                    "$ref": "#/$defs/AwsAccountId"
                }
            }
        },
        "RegionName": {
            "type": "string"
        },
        "Destinations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Destination"
            }
        },
        "Destination": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ReplicationStatus"
                },
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "Region": {
                    "$ref": "#/$defs/RegionName"
                },
                "LastReplicatedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "OwnerId": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "ReplicationStatus": {
            "enum": [
                "ENABLED",
                "ENABLING",
                "DELETING",
                "ERROR",
                "PAUSED",
                "PAUSING"
            ]
        },
        "StatusMessage": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "CreateReplicationConfigurationRequest": {
            "type": "object",
            "properties": {
                "SourceFileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "Destinations": {
                    "$ref": "#/$defs/DestinationsToCreate"
                }
            }
        },
        "DestinationsToCreate": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DestinationToCreate"
            }
        },
        "DestinationToCreate": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/RegionName"
                },
                "AvailabilityZoneName": {
                    "$ref": "#/$defs/AvailabilityZoneName"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "CreateTagsRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DeleteAccessPointRequest": {
            "type": "object",
            "properties": {
                "AccessPointId": {
                    "$ref": "#/$defs/AccessPointId"
                }
            }
        },
        "DeleteFileSystemRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                }
            }
        },
        "DeleteFileSystemPolicyRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                }
            }
        },
        "DeleteMountTargetRequest": {
            "type": "object",
            "properties": {
                "MountTargetId": {
                    "$ref": "#/$defs/MountTargetId"
                }
            }
        },
        "DeleteReplicationConfigurationRequest": {
            "type": "object",
            "properties": {
                "SourceFileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "DeletionMode": {
                    "$ref": "#/$defs/DeletionMode"
                }
            }
        },
        "DeletionMode": {
            "enum": [
                "ALL_CONFIGURATIONS",
                "LOCAL_CONFIGURATION_ONLY"
            ]
        },
        "DeleteTagsRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "TagKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "DescribeAccessPointsResponse": {
            "type": "object",
            "properties": {
                "AccessPoints": {
                    "$ref": "#/$defs/AccessPointDescriptions"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "AccessPointDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccessPointDescription"
            }
        },
        "Token": {
            "type": "string"
        },
        "DescribeAccessPointsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "AccessPointId": {
                    "$ref": "#/$defs/AccessPointId"
                },
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeAccountPreferencesResponse": {
            "type": "object",
            "properties": {
                "ResourceIdPreference": {
                    "$ref": "#/$defs/ResourceIdPreference"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ResourceIdPreference": {
            "type": "object",
            "properties": {
                "ResourceIdType": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "Resources": {
                    "$ref": "#/$defs/Resources"
                }
            }
        },
        "ResourceIdType": {
            "enum": [
                "LongId",
                "ShortId"
            ]
        },
        "Resources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Resource"
            }
        },
        "Resource": {
            "enum": [
                "FileSystem",
                "MountTarget"
            ]
        },
        "DescribeAccountPreferencesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "BackupPolicyDescription": {
            "type": "object",
            "properties": {
                "BackupPolicy": {
                    "$ref": "#/$defs/BackupPolicy"
                }
            }
        },
        "BackupPolicy": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/Status"
                }
            }
        },
        "Status": {
            "enum": [
                "ENABLED",
                "ENABLING",
                "DISABLED",
                "DISABLING"
            ]
        },
        "DescribeBackupPolicyRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                }
            }
        },
        "FileSystemPolicyDescription": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "Policy": {
                    "$ref": "#/$defs/Policy"
                }
            }
        },
        "Policy": {
            "type": "string"
        },
        "DescribeFileSystemPolicyRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                }
            }
        },
        "DescribeFileSystemsResponse": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "FileSystems": {
                    "$ref": "#/$defs/FileSystemDescriptions"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "Marker": {
            "type": "string"
        },
        "FileSystemDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FileSystemDescription"
            }
        },
        "DescribeFileSystemsRequest": {
            "type": "object",
            "properties": {
                "MaxItems": {
                    "$ref": "#/$defs/MaxItems"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "CreationToken": {
                    "$ref": "#/$defs/CreationToken"
                },
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                }
            }
        },
        "MaxItems": {
            "type": "integer",
            "format": "int32"
        },
        "LifecycleConfigurationDescription": {
            "type": "object",
            "properties": {
                "LifecyclePolicies": {
                    "$ref": "#/$defs/LifecyclePolicies"
                }
            }
        },
        "LifecyclePolicies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LifecyclePolicy"
            }
        },
        "LifecyclePolicy": {
            "type": "object",
            "properties": {
                "TransitionToIA": {
                    "$ref": "#/$defs/TransitionToIARules"
                },
                "TransitionToPrimaryStorageClass": {
                    "$ref": "#/$defs/TransitionToPrimaryStorageClassRules"
                },
                "TransitionToArchive": {
                    "$ref": "#/$defs/TransitionToArchiveRules"
                }
            }
        },
        "TransitionToIARules": {
            "enum": [
                "AFTER_7_DAYS",
                "AFTER_14_DAYS",
                "AFTER_30_DAYS",
                "AFTER_60_DAYS",
                "AFTER_90_DAYS",
                "AFTER_1_DAY",
                "AFTER_180_DAYS",
                "AFTER_270_DAYS",
                "AFTER_365_DAYS"
            ]
        },
        "TransitionToPrimaryStorageClassRules": {
            "enum": [
                "AFTER_1_ACCESS"
            ]
        },
        "TransitionToArchiveRules": {
            "enum": [
                "AFTER_1_DAY",
                "AFTER_7_DAYS",
                "AFTER_14_DAYS",
                "AFTER_30_DAYS",
                "AFTER_60_DAYS",
                "AFTER_90_DAYS",
                "AFTER_180_DAYS",
                "AFTER_270_DAYS",
                "AFTER_365_DAYS"
            ]
        },
        "DescribeLifecycleConfigurationRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                }
            }
        },
        "DescribeMountTargetsResponse": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "MountTargets": {
                    "$ref": "#/$defs/MountTargetDescriptions"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "MountTargetDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MountTargetDescription"
            }
        },
        "DescribeMountTargetsRequest": {
            "type": "object",
            "properties": {
                "MaxItems": {
                    "$ref": "#/$defs/MaxItems"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "MountTargetId": {
                    "$ref": "#/$defs/MountTargetId"
                },
                "AccessPointId": {
                    "$ref": "#/$defs/AccessPointId"
                }
            }
        },
        "DescribeMountTargetSecurityGroupsResponse": {
            "type": "object",
            "properties": {
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroups"
                }
            }
        },
        "DescribeMountTargetSecurityGroupsRequest": {
            "type": "object",
            "properties": {
                "MountTargetId": {
                    "$ref": "#/$defs/MountTargetId"
                }
            }
        },
        "DescribeReplicationConfigurationsResponse": {
            "type": "object",
            "properties": {
                "Replications": {
                    "$ref": "#/$defs/ReplicationConfigurationDescriptions"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ReplicationConfigurationDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicationConfigurationDescription"
            }
        },
        "DescribeReplicationConfigurationsRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "DescribeTagsResponse": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "DescribeTagsRequest": {
            "type": "object",
            "properties": {
                "MaxItems": {
                    "$ref": "#/$defs/MaxItems"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ResourceId": {
            "type": "string"
        },
        "ModifyMountTargetSecurityGroupsRequest": {
            "type": "object",
            "properties": {
                "MountTargetId": {
                    "$ref": "#/$defs/MountTargetId"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroups"
                }
            }
        },
        "PutAccountPreferencesResponse": {
            "type": "object",
            "properties": {
                "ResourceIdPreference": {
                    "$ref": "#/$defs/ResourceIdPreference"
                }
            }
        },
        "PutAccountPreferencesRequest": {
            "type": "object",
            "properties": {
                "ResourceIdType": {
                    "$ref": "#/$defs/ResourceIdType"
                }
            }
        },
        "PutBackupPolicyRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "BackupPolicy": {
                    "$ref": "#/$defs/BackupPolicy"
                }
            }
        },
        "PutFileSystemPolicyRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "Policy": {
                    "$ref": "#/$defs/Policy"
                },
                "BypassPolicyLockoutSafetyCheck": {
                    "$ref": "#/$defs/BypassPolicyLockoutSafetyCheck"
                }
            }
        },
        "BypassPolicyLockoutSafetyCheck": {
            "type": "boolean"
        },
        "PutLifecycleConfigurationRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "LifecyclePolicies": {
                    "$ref": "#/$defs/LifecyclePolicies"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "UpdateFileSystemRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "ThroughputMode": {
                    "$ref": "#/$defs/ThroughputMode"
                },
                "ProvisionedThroughputInMibps": {
                    "$ref": "#/$defs/ProvisionedThroughputInMibps"
                }
            }
        },
        "UpdateFileSystemProtectionRequest": {
            "type": "object",
            "properties": {
                "FileSystemId": {
                    "$ref": "#/$defs/FileSystemId"
                },
                "ReplicationOverwriteProtection": {
                    "$ref": "#/$defs/ReplicationOverwriteProtection"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://elasticfilesystem-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://elasticfilesystem-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://elasticfilesystem.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://elasticfilesystem.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}