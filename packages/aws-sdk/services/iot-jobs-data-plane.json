{
    "name": "iot-jobs-data",
    "commands": [
        {
            "name": "DescribeJobExecution",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "jobId": "route.jobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/things/{thingName}/jobs/{jobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeJobExecutionResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeJobExecutionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPendingJobExecutions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/things/{thingName}/jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPendingJobExecutionsResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPendingJobExecutionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartNextPendingJobExecution",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/things/{thingName}/jobs/$next"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartNextPendingJobExecutionResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartNextPendingJobExecutionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateJobExecution",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "jobId": "route.jobId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/things/{thingName}/jobs/{jobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateJobExecutionResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateJobExecutionRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "DescribeJobExecutionResponse": {
            "type": "object",
            "properties": {
                "execution": {
                    "$ref": "#/$defs/JobExecution"
                }
            }
        },
        "JobExecution": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "status": {
                    "$ref": "#/$defs/JobExecutionStatus"
                },
                "statusDetails": {
                    "$ref": "#/$defs/DetailsMap"
                },
                "queuedAt": {
                    "$ref": "#/$defs/QueuedAt"
                },
                "startedAt": {
                    "$ref": "#/$defs/StartedAt"
                },
                "lastUpdatedAt": {
                    "$ref": "#/$defs/LastUpdatedAt"
                },
                "approximateSecondsBeforeTimedOut": {
                    "$ref": "#/$defs/ApproximateSecondsBeforeTimedOut"
                },
                "versionNumber": {
                    "$ref": "#/$defs/VersionNumber"
                },
                "executionNumber": {
                    "$ref": "#/$defs/ExecutionNumber"
                },
                "jobDocument": {
                    "$ref": "#/$defs/JobDocument"
                }
            }
        },
        "JobId": {
            "type": "string"
        },
        "ThingName": {
            "type": "string"
        },
        "JobExecutionStatus": {
            "enum": [
                "QUEUED",
                "IN_PROGRESS",
                "SUCCEEDED",
                "FAILED",
                "TIMED_OUT",
                "REJECTED",
                "REMOVED",
                "CANCELED"
            ]
        },
        "DetailsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DetailsValue"
            }
        },
        "DetailsValue": {
            "type": "string"
        },
        "QueuedAt": {
            "type": "integer",
            "format": "int64"
        },
        "StartedAt": {
            "type": "integer",
            "format": "int64"
        },
        "LastUpdatedAt": {
            "type": "integer",
            "format": "int64"
        },
        "ApproximateSecondsBeforeTimedOut": {
            "type": "integer",
            "format": "int64"
        },
        "VersionNumber": {
            "type": "integer",
            "format": "int64"
        },
        "ExecutionNumber": {
            "type": "integer",
            "format": "int64"
        },
        "JobDocument": {
            "type": "string"
        },
        "DescribeJobExecutionRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/DescribeJobExecutionJobId"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "includeJobDocument": {
                    "$ref": "#/$defs/IncludeJobDocument"
                },
                "executionNumber": {
                    "$ref": "#/$defs/ExecutionNumber"
                }
            }
        },
        "DescribeJobExecutionJobId": {
            "type": "string"
        },
        "IncludeJobDocument": {
            "type": "boolean"
        },
        "GetPendingJobExecutionsResponse": {
            "type": "object",
            "properties": {
                "inProgressJobs": {
                    "$ref": "#/$defs/JobExecutionSummaryList"
                },
                "queuedJobs": {
                    "$ref": "#/$defs/JobExecutionSummaryList"
                }
            }
        },
        "JobExecutionSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobExecutionSummary"
            }
        },
        "JobExecutionSummary": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "queuedAt": {
                    "$ref": "#/$defs/QueuedAt"
                },
                "startedAt": {
                    "$ref": "#/$defs/StartedAt"
                },
                "lastUpdatedAt": {
                    "$ref": "#/$defs/LastUpdatedAt"
                },
                "versionNumber": {
                    "$ref": "#/$defs/VersionNumber"
                },
                "executionNumber": {
                    "$ref": "#/$defs/ExecutionNumber"
                }
            }
        },
        "GetPendingJobExecutionsRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                }
            }
        },
        "StartNextPendingJobExecutionResponse": {
            "type": "object",
            "properties": {
                "execution": {
                    "$ref": "#/$defs/JobExecution"
                }
            }
        },
        "StartNextPendingJobExecutionRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "statusDetails": {
                    "$ref": "#/$defs/DetailsMap"
                },
                "stepTimeoutInMinutes": {
                    "$ref": "#/$defs/StepTimeoutInMinutes"
                }
            }
        },
        "StepTimeoutInMinutes": {
            "type": "integer",
            "format": "int64"
        },
        "UpdateJobExecutionResponse": {
            "type": "object",
            "properties": {
                "executionState": {
                    "$ref": "#/$defs/JobExecutionState"
                },
                "jobDocument": {
                    "$ref": "#/$defs/JobDocument"
                }
            }
        },
        "JobExecutionState": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/JobExecutionStatus"
                },
                "statusDetails": {
                    "$ref": "#/$defs/DetailsMap"
                },
                "versionNumber": {
                    "$ref": "#/$defs/VersionNumber"
                }
            }
        },
        "UpdateJobExecutionRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "status": {
                    "$ref": "#/$defs/JobExecutionStatus"
                },
                "statusDetails": {
                    "$ref": "#/$defs/DetailsMap"
                },
                "stepTimeoutInMinutes": {
                    "$ref": "#/$defs/StepTimeoutInMinutes"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/ExpectedVersion"
                },
                "includeJobExecutionState": {
                    "$ref": "#/$defs/IncludeExecutionState"
                },
                "includeJobDocument": {
                    "$ref": "#/$defs/IncludeJobDocument"
                },
                "executionNumber": {
                    "$ref": "#/$defs/ExecutionNumber"
                }
            }
        },
        "ExpectedVersion": {
            "type": "integer",
            "format": "int64"
        },
        "IncludeExecutionState": {
            "type": "boolean"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://data.jobs.iot-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://data.jobs.iot-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://data.jobs.iot.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://data.jobs.iot.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}