{
    "name": "emr-containers",
    "commands": [
        {
            "name": "CancelJobRun",
            "config": {
                "http": {
                    "inject": [
                        {
                            "virtualClusterId": "route.virtualClusterId",
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/virtualclusters/{virtualClusterId}/jobruns/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelJobRunResponse"
                    },
                    "inject": [
                        "params.0.virtualClusterId",
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CancelJobRunRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {},
                        "virtualClusterId": {}
                    }
                }
            }
        },
        {
            "name": "CreateJobTemplate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/jobtemplates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateJobTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateJobTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "name": {},
                        "clientToken": {},
                        "jobTemplateData": {},
                        "tags": {},
                        "kmsKeyArn": {}
                    }
                }
            }
        },
        {
            "name": "CreateManagedEndpoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "virtualClusterId": "route.virtualClusterId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/virtualclusters/{virtualClusterId}/endpoints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateManagedEndpointResponse"
                    },
                    "inject": [
                        "params.0.virtualClusterId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateManagedEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "name": {},
                        "virtualClusterId": {},
                        "type": {},
                        "releaseLabel": {},
                        "executionRoleArn": {},
                        "certificateArn": {},
                        "configurationOverrides": {},
                        "clientToken": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateSecurityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/securityconfigurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSecurityConfigurationResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSecurityConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientToken": {},
                        "name": {},
                        "securityConfigurationData": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateVirtualCluster",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/virtualclusters"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVirtualClusterResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateVirtualClusterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "name": {},
                        "containerProvider": {},
                        "clientToken": {},
                        "tags": {},
                        "securityConfigurationId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteJobTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/jobtemplates/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteJobTemplateResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteJobTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "DeleteManagedEndpoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "virtualClusterId": "route.virtualClusterId",
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/virtualclusters/{virtualClusterId}/endpoints/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteManagedEndpointResponse"
                    },
                    "inject": [
                        "params.0.virtualClusterId",
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteManagedEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {},
                        "virtualClusterId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteVirtualCluster",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/virtualclusters/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVirtualClusterResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVirtualClusterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "DescribeJobRun",
            "config": {
                "http": {
                    "inject": [
                        {
                            "virtualClusterId": "route.virtualClusterId",
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/virtualclusters/{virtualClusterId}/jobruns/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeJobRunResponse"
                    },
                    "inject": [
                        "params.0.virtualClusterId",
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeJobRunRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {},
                        "virtualClusterId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeJobTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/jobtemplates/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeJobTemplateResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeJobTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "DescribeManagedEndpoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "virtualClusterId": "route.virtualClusterId",
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/virtualclusters/{virtualClusterId}/endpoints/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeManagedEndpointResponse"
                    },
                    "inject": [
                        "params.0.virtualClusterId",
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeManagedEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {},
                        "virtualClusterId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeSecurityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/securityconfigurations/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSecurityConfigurationResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeSecurityConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "DescribeVirtualCluster",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/virtualclusters/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVirtualClusterResponse"
                    },
                    "inject": [
                        "params.0.id",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeVirtualClusterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetManagedEndpointSessionCredentials",
            "config": {
                "http": {
                    "inject": [
                        {
                            "virtualClusterIdentifier": "route.virtualClusterIdentifier",
                            "endpointIdentifier": "route.endpointIdentifier",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/virtualclusters/{virtualClusterIdentifier}/endpoints/{endpointIdentifier}/credentials"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetManagedEndpointSessionCredentialsResponse"
                    },
                    "inject": [
                        "params.0.virtualClusterIdentifier",
                        "params.0.endpointIdentifier",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetManagedEndpointSessionCredentialsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "endpointIdentifier": {},
                        "virtualClusterIdentifier": {},
                        "executionRoleArn": {},
                        "credentialType": {},
                        "durationInSeconds": {},
                        "logContext": {},
                        "clientToken": {}
                    }
                }
            }
        },
        {
            "name": "ListJobRuns",
            "config": {
                "http": {
                    "inject": [
                        {
                            "virtualClusterId": "route.virtualClusterId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/virtualclusters/{virtualClusterId}/jobruns"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListJobRunsResponse"
                    },
                    "inject": [
                        "params.0.virtualClusterId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListJobRunsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "virtualClusterId": {},
                        "createdBefore": {},
                        "createdAfter": {},
                        "name": {},
                        "states": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListJobTemplates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/jobtemplates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListJobTemplatesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListJobTemplatesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "createdAfter": {},
                        "createdBefore": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListManagedEndpoints",
            "config": {
                "http": {
                    "inject": [
                        {
                            "virtualClusterId": "route.virtualClusterId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/virtualclusters/{virtualClusterId}/endpoints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListManagedEndpointsResponse"
                    },
                    "inject": [
                        "params.0.virtualClusterId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListManagedEndpointsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "virtualClusterId": {},
                        "createdBefore": {},
                        "createdAfter": {},
                        "types": {},
                        "states": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListSecurityConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/securityconfigurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSecurityConfigurationsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListSecurityConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "createdAfter": {},
                        "createdBefore": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0.resourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {}
                    }
                }
            }
        },
        {
            "name": "ListVirtualClusters",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/virtualclusters"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListVirtualClustersResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListVirtualClustersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "containerProviderId": {},
                        "containerProviderType": {},
                        "createdAfter": {},
                        "createdBefore": {},
                        "states": {},
                        "maxResults": {},
                        "nextToken": {},
                        "eksAccessEntryIntegrated": {}
                    }
                }
            }
        },
        {
            "name": "StartJobRun",
            "config": {
                "http": {
                    "inject": [
                        {
                            "virtualClusterId": "route.virtualClusterId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/virtualclusters/{virtualClusterId}/jobruns"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartJobRunResponse"
                    },
                    "inject": [
                        "params.0.virtualClusterId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartJobRunRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "name": {},
                        "virtualClusterId": {},
                        "clientToken": {},
                        "executionRoleArn": {},
                        "releaseLabel": {},
                        "jobDriver": {},
                        "configurationOverrides": {},
                        "tags": {},
                        "jobTemplateId": {},
                        "jobTemplateParameters": {},
                        "retryPolicyConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0.resourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0.resourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tagKeys": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CancelJobRunRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "ResourceIdString": {
            "type": "string"
        },
        "CancelJobRunResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "CreateJobTemplateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "jobTemplateData": {
                    "$ref": "#/$defs/JobTemplateData"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "kmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                }
            }
        },
        "ResourceNameString": {
            "type": "string"
        },
        "ClientToken": {
            "type": "string"
        },
        "JobTemplateData": {
            "type": "object",
            "properties": {
                "executionRoleArn": {
                    "$ref": "#/$defs/ParametricIAMRoleArn"
                },
                "releaseLabel": {
                    "$ref": "#/$defs/ParametricReleaseLabel"
                },
                "configurationOverrides": {
                    "$ref": "#/$defs/ParametricConfigurationOverrides"
                },
                "jobDriver": {
                    "$ref": "#/$defs/JobDriver"
                },
                "parameterConfiguration": {
                    "$ref": "#/$defs/TemplateParameterConfigurationMap"
                },
                "jobTags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ParametricIAMRoleArn": {
            "type": "string"
        },
        "ParametricReleaseLabel": {
            "type": "string"
        },
        "ParametricConfigurationOverrides": {
            "type": "object",
            "properties": {
                "applicationConfiguration": {
                    "$ref": "#/$defs/ConfigurationList"
                },
                "monitoringConfiguration": {
                    "$ref": "#/$defs/ParametricMonitoringConfiguration"
                }
            }
        },
        "ConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Configuration"
            }
        },
        "Configuration": {
            "type": "object",
            "properties": {
                "classification": {
                    "$ref": "#/$defs/String1024"
                },
                "properties": {
                    "$ref": "#/$defs/SensitivePropertiesMap"
                },
                "configurations": {
                    "$ref": "#/$defs/ConfigurationList"
                }
            }
        },
        "String1024": {
            "type": "string"
        },
        "SensitivePropertiesMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String1024"
            }
        },
        "ParametricMonitoringConfiguration": {
            "type": "object",
            "properties": {
                "persistentAppUI": {
                    "$ref": "#/$defs/TemplateParameter"
                },
                "cloudWatchMonitoringConfiguration": {
                    "$ref": "#/$defs/ParametricCloudWatchMonitoringConfiguration"
                },
                "s3MonitoringConfiguration": {
                    "$ref": "#/$defs/ParametricS3MonitoringConfiguration"
                }
            }
        },
        "TemplateParameter": {
            "type": "string"
        },
        "ParametricCloudWatchMonitoringConfiguration": {
            "type": "object",
            "properties": {
                "logGroupName": {
                    "$ref": "#/$defs/TemplateParameter"
                },
                "logStreamNamePrefix": {
                    "$ref": "#/$defs/String256"
                }
            }
        },
        "String256": {
            "type": "string"
        },
        "ParametricS3MonitoringConfiguration": {
            "type": "object",
            "properties": {
                "logUri": {
                    "$ref": "#/$defs/UriString"
                }
            }
        },
        "UriString": {
            "type": "string"
        },
        "JobDriver": {
            "type": "object",
            "properties": {
                "sparkSubmitJobDriver": {
                    "$ref": "#/$defs/SparkSubmitJobDriver"
                },
                "sparkSqlJobDriver": {
                    "$ref": "#/$defs/SparkSqlJobDriver"
                }
            }
        },
        "SparkSubmitJobDriver": {
            "type": "object",
            "properties": {
                "entryPoint": {
                    "$ref": "#/$defs/EntryPointPath"
                },
                "entryPointArguments": {
                    "$ref": "#/$defs/EntryPointArguments"
                },
                "sparkSubmitParameters": {
                    "$ref": "#/$defs/SparkSubmitParameters"
                }
            }
        },
        "EntryPointPath": {
            "type": "string"
        },
        "EntryPointArguments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EntryPointArgument"
            }
        },
        "EntryPointArgument": {
            "type": "string"
        },
        "SparkSubmitParameters": {
            "type": "string"
        },
        "SparkSqlJobDriver": {
            "type": "object",
            "properties": {
                "entryPoint": {
                    "$ref": "#/$defs/EntryPointPath"
                },
                "sparkSqlParameters": {
                    "$ref": "#/$defs/SparkSqlParameters"
                }
            }
        },
        "SparkSqlParameters": {
            "type": "string"
        },
        "TemplateParameterConfigurationMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TemplateParameterConfiguration"
            }
        },
        "TemplateParameterConfiguration": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/TemplateParameterDataType"
                },
                "defaultValue": {
                    "$ref": "#/$defs/String1024"
                }
            }
        },
        "TemplateParameterDataType": {
            "enum": [
                "NUMBER",
                "STRING"
            ]
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/StringEmpty256"
            }
        },
        "StringEmpty256": {
            "type": "string"
        },
        "KmsKeyArn": {
            "type": "string"
        },
        "CreateJobTemplateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "arn": {
                    "$ref": "#/$defs/JobTemplateArn"
                },
                "createdAt": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "JobTemplateArn": {
            "type": "string"
        },
        "Date": {
            "type": "string",
            "format": "date-time"
        },
        "CreateManagedEndpointRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "type": {
                    "$ref": "#/$defs/EndpointType"
                },
                "releaseLabel": {
                    "$ref": "#/$defs/ReleaseLabel"
                },
                "executionRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "certificateArn": {
                    "$ref": "#/$defs/ACMCertArn"
                },
                "configurationOverrides": {
                    "$ref": "#/$defs/ConfigurationOverrides"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "EndpointType": {
            "type": "string"
        },
        "ReleaseLabel": {
            "type": "string"
        },
        "IAMRoleArn": {
            "type": "string"
        },
        "ACMCertArn": {
            "type": "string"
        },
        "ConfigurationOverrides": {
            "type": "object",
            "properties": {
                "applicationConfiguration": {
                    "$ref": "#/$defs/ConfigurationList"
                },
                "monitoringConfiguration": {
                    "$ref": "#/$defs/MonitoringConfiguration"
                }
            }
        },
        "MonitoringConfiguration": {
            "type": "object",
            "properties": {
                "managedLogs": {
                    "$ref": "#/$defs/ManagedLogs"
                },
                "persistentAppUI": {
                    "$ref": "#/$defs/PersistentAppUI"
                },
                "cloudWatchMonitoringConfiguration": {
                    "$ref": "#/$defs/CloudWatchMonitoringConfiguration"
                },
                "s3MonitoringConfiguration": {
                    "$ref": "#/$defs/S3MonitoringConfiguration"
                },
                "containerLogRotationConfiguration": {
                    "$ref": "#/$defs/ContainerLogRotationConfiguration"
                }
            }
        },
        "ManagedLogs": {
            "type": "object",
            "properties": {
                "allowAWSToRetainLogs": {
                    "$ref": "#/$defs/AllowAWSToRetainLogs"
                },
                "encryptionKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                }
            }
        },
        "AllowAWSToRetainLogs": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "PersistentAppUI": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "CloudWatchMonitoringConfiguration": {
            "type": "object",
            "properties": {
                "logGroupName": {
                    "$ref": "#/$defs/LogGroupName"
                },
                "logStreamNamePrefix": {
                    "$ref": "#/$defs/String256"
                }
            }
        },
        "LogGroupName": {
            "type": "string"
        },
        "S3MonitoringConfiguration": {
            "type": "object",
            "properties": {
                "logUri": {
                    "$ref": "#/$defs/UriString"
                }
            }
        },
        "ContainerLogRotationConfiguration": {
            "type": "object",
            "properties": {
                "rotationSize": {
                    "$ref": "#/$defs/RotationSize"
                },
                "maxFilesToKeep": {
                    "$ref": "#/$defs/MaxFilesToKeep"
                }
            }
        },
        "RotationSize": {
            "type": "string"
        },
        "MaxFilesToKeep": {
            "type": "integer",
            "format": "int32"
        },
        "CreateManagedEndpointResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "arn": {
                    "$ref": "#/$defs/EndpointArn"
                },
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "EndpointArn": {
            "type": "string"
        },
        "CreateSecurityConfigurationRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "securityConfigurationData": {
                    "$ref": "#/$defs/SecurityConfigurationData"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "SecurityConfigurationData": {
            "type": "object",
            "properties": {
                "authorizationConfiguration": {
                    "$ref": "#/$defs/AuthorizationConfiguration"
                }
            }
        },
        "AuthorizationConfiguration": {
            "type": "object",
            "properties": {
                "lakeFormationConfiguration": {
                    "$ref": "#/$defs/LakeFormationConfiguration"
                },
                "encryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                }
            }
        },
        "LakeFormationConfiguration": {
            "type": "object",
            "properties": {
                "authorizedSessionTagValue": {
                    "$ref": "#/$defs/SessionTagValue"
                },
                "secureNamespaceInfo": {
                    "$ref": "#/$defs/SecureNamespaceInfo"
                },
                "queryEngineRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                }
            }
        },
        "SessionTagValue": {
            "type": "string"
        },
        "SecureNamespaceInfo": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "namespace": {
                    "$ref": "#/$defs/KubernetesNamespace"
                }
            }
        },
        "ClusterId": {
            "type": "string"
        },
        "KubernetesNamespace": {
            "type": "string"
        },
        "EncryptionConfiguration": {
            "type": "object",
            "properties": {
                "inTransitEncryptionConfiguration": {
                    "$ref": "#/$defs/InTransitEncryptionConfiguration"
                }
            }
        },
        "InTransitEncryptionConfiguration": {
            "type": "object",
            "properties": {
                "tlsCertificateConfiguration": {
                    "$ref": "#/$defs/TLSCertificateConfiguration"
                }
            }
        },
        "TLSCertificateConfiguration": {
            "type": "object",
            "properties": {
                "certificateProviderType": {
                    "$ref": "#/$defs/CertificateProviderType"
                },
                "publicCertificateSecretArn": {
                    "$ref": "#/$defs/SecretsManagerArn"
                },
                "privateCertificateSecretArn": {
                    "$ref": "#/$defs/SecretsManagerArn"
                }
            }
        },
        "CertificateProviderType": {
            "enum": [
                "PEM"
            ]
        },
        "SecretsManagerArn": {
            "type": "string"
        },
        "CreateSecurityConfigurationResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "arn": {
                    "$ref": "#/$defs/SecurityConfigurationArn"
                }
            }
        },
        "SecurityConfigurationArn": {
            "type": "string"
        },
        "CreateVirtualClusterRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "containerProvider": {
                    "$ref": "#/$defs/ContainerProvider"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "securityConfigurationId": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "ContainerProvider": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/ContainerProviderType"
                },
                "id": {
                    "$ref": "#/$defs/ClusterId"
                },
                "info": {
                    "$ref": "#/$defs/ContainerInfo"
                }
            }
        },
        "ContainerProviderType": {
            "enum": [
                "EKS"
            ]
        },
        "ContainerInfo": {
            "type": "object",
            "properties": {
                "eksInfo": {
                    "$ref": "#/$defs/EksInfo"
                }
            }
        },
        "EksInfo": {
            "type": "object",
            "properties": {
                "namespace": {
                    "$ref": "#/$defs/KubernetesNamespace"
                }
            }
        },
        "CreateVirtualClusterResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "arn": {
                    "$ref": "#/$defs/VirtualClusterArn"
                }
            }
        },
        "VirtualClusterArn": {
            "type": "string"
        },
        "DeleteJobTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "DeleteJobTemplateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "DeleteManagedEndpointRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "DeleteManagedEndpointResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "DeleteVirtualClusterRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "DeleteVirtualClusterResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "DescribeJobRunRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "DescribeJobRunResponse": {
            "type": "object",
            "properties": {
                "jobRun": {
                    "$ref": "#/$defs/JobRun"
                }
            }
        },
        "JobRun": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "arn": {
                    "$ref": "#/$defs/JobArn"
                },
                "state": {
                    "$ref": "#/$defs/JobRunState"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "executionRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "releaseLabel": {
                    "$ref": "#/$defs/ReleaseLabel"
                },
                "configurationOverrides": {
                    "$ref": "#/$defs/ConfigurationOverrides"
                },
                "jobDriver": {
                    "$ref": "#/$defs/JobDriver"
                },
                "createdAt": {
                    "$ref": "#/$defs/Date"
                },
                "createdBy": {
                    "$ref": "#/$defs/RequestIdentityUserArn"
                },
                "finishedAt": {
                    "$ref": "#/$defs/Date"
                },
                "stateDetails": {
                    "$ref": "#/$defs/String256"
                },
                "failureReason": {
                    "$ref": "#/$defs/FailureReason"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "retryPolicyConfiguration": {
                    "$ref": "#/$defs/RetryPolicyConfiguration"
                },
                "retryPolicyExecution": {
                    "$ref": "#/$defs/RetryPolicyExecution"
                }
            }
        },
        "JobArn": {
            "type": "string"
        },
        "JobRunState": {
            "enum": [
                "PENDING",
                "SUBMITTED",
                "RUNNING",
                "FAILED",
                "CANCELLED",
                "CANCEL_PENDING",
                "COMPLETED"
            ]
        },
        "RequestIdentityUserArn": {
            "type": "string"
        },
        "FailureReason": {
            "enum": [
                "INTERNAL_ERROR",
                "USER_ERROR",
                "VALIDATION_ERROR",
                "CLUSTER_UNAVAILABLE"
            ]
        },
        "RetryPolicyConfiguration": {
            "type": "object",
            "properties": {
                "maxAttempts": {
                    "$ref": "#/$defs/JavaInteger"
                }
            }
        },
        "JavaInteger": {
            "type": "integer",
            "format": "int32"
        },
        "RetryPolicyExecution": {
            "type": "object",
            "properties": {
                "currentAttemptCount": {
                    "$ref": "#/$defs/JavaInteger"
                }
            }
        },
        "DescribeJobTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "DescribeJobTemplateResponse": {
            "type": "object",
            "properties": {
                "jobTemplate": {
                    "$ref": "#/$defs/JobTemplate"
                }
            }
        },
        "JobTemplate": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "arn": {
                    "$ref": "#/$defs/JobTemplateArn"
                },
                "createdAt": {
                    "$ref": "#/$defs/Date"
                },
                "createdBy": {
                    "$ref": "#/$defs/RequestIdentityUserArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "jobTemplateData": {
                    "$ref": "#/$defs/JobTemplateData"
                },
                "kmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                },
                "decryptionError": {
                    "$ref": "#/$defs/String2048"
                }
            }
        },
        "String2048": {
            "type": "string"
        },
        "DescribeManagedEndpointRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "DescribeManagedEndpointResponse": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "$ref": "#/$defs/Endpoint"
                }
            }
        },
        "Endpoint": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "arn": {
                    "$ref": "#/$defs/EndpointArn"
                },
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "type": {
                    "$ref": "#/$defs/EndpointType"
                },
                "state": {
                    "$ref": "#/$defs/EndpointState"
                },
                "releaseLabel": {
                    "$ref": "#/$defs/ReleaseLabel"
                },
                "executionRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "certificateArn": {
                    "$ref": "#/$defs/ACMCertArn"
                },
                "certificateAuthority": {
                    "$ref": "#/$defs/Certificate"
                },
                "configurationOverrides": {
                    "$ref": "#/$defs/ConfigurationOverrides"
                },
                "serverUrl": {
                    "$ref": "#/$defs/UriString"
                },
                "createdAt": {
                    "$ref": "#/$defs/Date"
                },
                "securityGroup": {
                    "$ref": "#/$defs/String256"
                },
                "subnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "stateDetails": {
                    "$ref": "#/$defs/String256"
                },
                "failureReason": {
                    "$ref": "#/$defs/FailureReason"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "EndpointState": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "TERMINATING",
                "TERMINATED",
                "TERMINATED_WITH_ERRORS"
            ]
        },
        "Certificate": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/ACMCertArn"
                },
                "certificateData": {
                    "$ref": "#/$defs/Base64Encoded"
                }
            }
        },
        "Base64Encoded": {
            "type": "string"
        },
        "SubnetIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String256"
            }
        },
        "DescribeSecurityConfigurationRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "DescribeSecurityConfigurationResponse": {
            "type": "object",
            "properties": {
                "securityConfiguration": {
                    "$ref": "#/$defs/SecurityConfiguration"
                }
            }
        },
        "SecurityConfiguration": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "arn": {
                    "$ref": "#/$defs/SecurityConfigurationArn"
                },
                "createdAt": {
                    "$ref": "#/$defs/Date"
                },
                "createdBy": {
                    "$ref": "#/$defs/RequestIdentityUserArn"
                },
                "securityConfigurationData": {
                    "$ref": "#/$defs/SecurityConfigurationData"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "DescribeVirtualClusterRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "DescribeVirtualClusterResponse": {
            "type": "object",
            "properties": {
                "virtualCluster": {
                    "$ref": "#/$defs/VirtualCluster"
                }
            }
        },
        "VirtualCluster": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "arn": {
                    "$ref": "#/$defs/VirtualClusterArn"
                },
                "state": {
                    "$ref": "#/$defs/VirtualClusterState"
                },
                "containerProvider": {
                    "$ref": "#/$defs/ContainerProvider"
                },
                "createdAt": {
                    "$ref": "#/$defs/Date"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "securityConfigurationId": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "VirtualClusterState": {
            "enum": [
                "RUNNING",
                "TERMINATING",
                "TERMINATED",
                "ARRESTED"
            ]
        },
        "GetManagedEndpointSessionCredentialsRequest": {
            "type": "object",
            "properties": {
                "endpointIdentifier": {
                    "$ref": "#/$defs/String2048"
                },
                "virtualClusterIdentifier": {
                    "$ref": "#/$defs/String2048"
                },
                "executionRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "credentialType": {
                    "$ref": "#/$defs/CredentialType"
                },
                "durationInSeconds": {
                    "$ref": "#/$defs/JavaInteger"
                },
                "logContext": {
                    "$ref": "#/$defs/LogContext"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "CredentialType": {
            "type": "string"
        },
        "LogContext": {
            "type": "string"
        },
        "GetManagedEndpointSessionCredentialsResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "credentials": {
                    "$ref": "#/$defs/Credentials"
                },
                "expiresAt": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "Credentials": {
            "type": "object",
            "properties": {
                "token": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "Token": {
            "type": "string"
        },
        "ListJobRunsRequest": {
            "type": "object",
            "properties": {
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "createdBefore": {
                    "$ref": "#/$defs/Date"
                },
                "createdAfter": {
                    "$ref": "#/$defs/Date"
                },
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "states": {
                    "$ref": "#/$defs/JobRunStates"
                },
                "maxResults": {
                    "$ref": "#/$defs/JavaInteger"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "JobRunStates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobRunState"
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListJobRunsResponse": {
            "type": "object",
            "properties": {
                "jobRuns": {
                    "$ref": "#/$defs/JobRuns"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "JobRuns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobRun"
            }
        },
        "ListJobTemplatesRequest": {
            "type": "object",
            "properties": {
                "createdAfter": {
                    "$ref": "#/$defs/Date"
                },
                "createdBefore": {
                    "$ref": "#/$defs/Date"
                },
                "maxResults": {
                    "$ref": "#/$defs/JavaInteger"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListJobTemplatesResponse": {
            "type": "object",
            "properties": {
                "templates": {
                    "$ref": "#/$defs/JobTemplates"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "JobTemplates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobTemplate"
            }
        },
        "ListManagedEndpointsRequest": {
            "type": "object",
            "properties": {
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "createdBefore": {
                    "$ref": "#/$defs/Date"
                },
                "createdAfter": {
                    "$ref": "#/$defs/Date"
                },
                "types": {
                    "$ref": "#/$defs/EndpointTypes"
                },
                "states": {
                    "$ref": "#/$defs/EndpointStates"
                },
                "maxResults": {
                    "$ref": "#/$defs/JavaInteger"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "EndpointTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EndpointType"
            }
        },
        "EndpointStates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EndpointState"
            }
        },
        "ListManagedEndpointsResponse": {
            "type": "object",
            "properties": {
                "endpoints": {
                    "$ref": "#/$defs/Endpoints"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Endpoints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Endpoint"
            }
        },
        "ListSecurityConfigurationsRequest": {
            "type": "object",
            "properties": {
                "createdAfter": {
                    "$ref": "#/$defs/Date"
                },
                "createdBefore": {
                    "$ref": "#/$defs/Date"
                },
                "maxResults": {
                    "$ref": "#/$defs/JavaInteger"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListSecurityConfigurationsResponse": {
            "type": "object",
            "properties": {
                "securityConfigurations": {
                    "$ref": "#/$defs/SecurityConfigurations"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SecurityConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityConfiguration"
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/RsiArn"
                }
            }
        },
        "RsiArn": {
            "type": "string"
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListVirtualClustersRequest": {
            "type": "object",
            "properties": {
                "containerProviderId": {
                    "$ref": "#/$defs/String1024"
                },
                "containerProviderType": {
                    "$ref": "#/$defs/ContainerProviderType"
                },
                "createdAfter": {
                    "$ref": "#/$defs/Date"
                },
                "createdBefore": {
                    "$ref": "#/$defs/Date"
                },
                "states": {
                    "$ref": "#/$defs/VirtualClusterStates"
                },
                "maxResults": {
                    "$ref": "#/$defs/JavaInteger"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "eksAccessEntryIntegrated": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VirtualClusterStates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VirtualClusterState"
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "ListVirtualClustersResponse": {
            "type": "object",
            "properties": {
                "virtualClusters": {
                    "$ref": "#/$defs/VirtualClusters"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "VirtualClusters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VirtualCluster"
            }
        },
        "StartJobRunRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "executionRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "releaseLabel": {
                    "$ref": "#/$defs/ReleaseLabel"
                },
                "jobDriver": {
                    "$ref": "#/$defs/JobDriver"
                },
                "configurationOverrides": {
                    "$ref": "#/$defs/ConfigurationOverrides"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "jobTemplateId": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "jobTemplateParameters": {
                    "$ref": "#/$defs/TemplateParameterInputMap"
                },
                "retryPolicyConfiguration": {
                    "$ref": "#/$defs/RetryPolicyConfiguration"
                }
            }
        },
        "TemplateParameterInputMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String1024"
            }
        },
        "StartJobRunResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ResourceIdString"
                },
                "name": {
                    "$ref": "#/$defs/ResourceNameString"
                },
                "arn": {
                    "$ref": "#/$defs/JobArn"
                },
                "virtualClusterId": {
                    "$ref": "#/$defs/ResourceIdString"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/RsiArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/RsiArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String128"
            }
        },
        "String128": {
            "type": "string"
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://emr-containers-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "us-gov-east-1"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://emr-containers.us-gov-east-1.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "us-gov-west-1"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://emr-containers.us-gov-west-1.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://emr-containers-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://emr-containers.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://emr-containers.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
