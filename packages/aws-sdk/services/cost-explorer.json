{
    "name": "ce",
    "commands": [
        {
            "name": "CreateAnomalyMonitor",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.CreateAnomalyMonitor"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAnomalyMonitorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAnomalyMonitorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateAnomalySubscription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.CreateAnomalySubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAnomalySubscriptionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAnomalySubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCostCategoryDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.CreateCostCategoryDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCostCategoryDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCostCategoryDefinitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAnomalyMonitor",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.DeleteAnomalyMonitor"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAnomalyMonitorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAnomalyMonitorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAnomalySubscription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.DeleteAnomalySubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAnomalySubscriptionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAnomalySubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCostCategoryDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.DeleteCostCategoryDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCostCategoryDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCostCategoryDefinitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCostCategoryDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.DescribeCostCategoryDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCostCategoryDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCostCategoryDefinitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAnomalies",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetAnomalies"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAnomaliesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAnomaliesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAnomalyMonitors",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetAnomalyMonitors"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAnomalyMonitorsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAnomalyMonitorsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAnomalySubscriptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetAnomalySubscriptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAnomalySubscriptionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAnomalySubscriptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetApproximateUsageRecords",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetApproximateUsageRecords"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetApproximateUsageRecordsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetApproximateUsageRecordsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCostAndUsage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetCostAndUsage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCostAndUsageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCostAndUsageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCostAndUsageWithResources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetCostAndUsageWithResources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCostAndUsageWithResourcesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCostAndUsageWithResourcesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCostCategories",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetCostCategories"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCostCategoriesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCostCategoriesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCostForecast",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetCostForecast"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCostForecastResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCostForecastRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDimensionValues",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetDimensionValues"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDimensionValuesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDimensionValuesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetReservationCoverage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetReservationCoverage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetReservationCoverageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetReservationCoverageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetReservationPurchaseRecommendation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetReservationPurchaseRecommendation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetReservationPurchaseRecommendationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetReservationPurchaseRecommendationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetReservationUtilization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetReservationUtilization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetReservationUtilizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetReservationUtilizationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRightsizingRecommendation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetRightsizingRecommendation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRightsizingRecommendationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRightsizingRecommendationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSavingsPlanPurchaseRecommendationDetails",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetSavingsPlanPurchaseRecommendationDetails"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSavingsPlanPurchaseRecommendationDetailsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSavingsPlanPurchaseRecommendationDetailsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSavingsPlansCoverage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetSavingsPlansCoverage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSavingsPlansCoverageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSavingsPlansCoverageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSavingsPlansPurchaseRecommendation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSavingsPlansPurchaseRecommendationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSavingsPlansPurchaseRecommendationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSavingsPlansUtilization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetSavingsPlansUtilization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSavingsPlansUtilizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSavingsPlansUtilizationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSavingsPlansUtilizationDetails",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetSavingsPlansUtilizationDetails"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSavingsPlansUtilizationDetailsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSavingsPlansUtilizationDetailsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTagsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetUsageForecast",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.GetUsageForecast"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUsageForecastResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUsageForecastRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCostAllocationTagBackfillHistory",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.ListCostAllocationTagBackfillHistory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCostAllocationTagBackfillHistoryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCostAllocationTagBackfillHistoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCostAllocationTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.ListCostAllocationTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCostAllocationTagsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCostAllocationTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCostCategoryDefinitions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.ListCostCategoryDefinitions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCostCategoryDefinitionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCostCategoryDefinitionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSavingsPlansPurchaseRecommendationGeneration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.ListSavingsPlansPurchaseRecommendationGeneration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSavingsPlansPurchaseRecommendationGenerationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSavingsPlansPurchaseRecommendationGenerationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ProvideAnomalyFeedback",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.ProvideAnomalyFeedback"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ProvideAnomalyFeedbackResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ProvideAnomalyFeedbackRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartCostAllocationTagBackfill",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.StartCostAllocationTagBackfill"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartCostAllocationTagBackfillResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartCostAllocationTagBackfillRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartSavingsPlansPurchaseRecommendationGeneration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.StartSavingsPlansPurchaseRecommendationGeneration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartSavingsPlansPurchaseRecommendationGenerationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartSavingsPlansPurchaseRecommendationGenerationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateAnomalyMonitor",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.UpdateAnomalyMonitor"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAnomalyMonitorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAnomalyMonitorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateAnomalySubscription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.UpdateAnomalySubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAnomalySubscriptionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAnomalySubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCostAllocationTagsStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.UpdateCostAllocationTagsStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCostAllocationTagsStatusResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCostAllocationTagsStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCostCategoryDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSInsightsIndexService.UpdateCostCategoryDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCostCategoryDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCostCategoryDefinitionRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateAnomalyMonitorResponse": {
            "type": "object",
            "properties": {
                "MonitorArn": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GenericString": {
            "type": "string"
        },
        "CreateAnomalyMonitorRequest": {
            "type": "object",
            "properties": {
                "AnomalyMonitor": {
                    "$ref": "#/$defs/AnomalyMonitor"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTagList"
                }
            }
        },
        "AnomalyMonitor": {
            "type": "object",
            "properties": {
                "MonitorArn": {
                    "$ref": "#/$defs/GenericString"
                },
                "MonitorName": {
                    "$ref": "#/$defs/GenericString"
                },
                "CreationDate": {
                    "$ref": "#/$defs/YearMonthDay"
                },
                "LastUpdatedDate": {
                    "$ref": "#/$defs/YearMonthDay"
                },
                "LastEvaluatedDate": {
                    "$ref": "#/$defs/YearMonthDay"
                },
                "MonitorType": {
                    "$ref": "#/$defs/MonitorType"
                },
                "MonitorDimension": {
                    "$ref": "#/$defs/MonitorDimension"
                },
                "MonitorSpecification": {
                    "$ref": "#/$defs/Expression"
                },
                "DimensionalValueCount": {
                    "$ref": "#/$defs/NonNegativeInteger"
                }
            }
        },
        "YearMonthDay": {
            "type": "string"
        },
        "MonitorType": {
            "enum": [
                "DIMENSIONAL",
                "CUSTOM"
            ]
        },
        "MonitorDimension": {
            "enum": [
                "SERVICE"
            ]
        },
        "Expression": {
            "type": "object",
            "properties": {
                "Or": {
                    "$ref": "#/$defs/Expressions"
                },
                "And": {
                    "$ref": "#/$defs/Expressions"
                },
                "Not": {
                    "$ref": "#/$defs/Expression"
                },
                "Dimensions": {
                    "$ref": "#/$defs/DimensionValues"
                },
                "Tags": {
                    "$ref": "#/$defs/TagValues"
                },
                "CostCategories": {
                    "$ref": "#/$defs/CostCategoryValues"
                }
            }
        },
        "Expressions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Expression"
            }
        },
        "DimensionValues": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/Dimension"
                },
                "Values": {
                    "$ref": "#/$defs/Values"
                },
                "MatchOptions": {
                    "$ref": "#/$defs/MatchOptions"
                }
            }
        },
        "Dimension": {
            "enum": [
                "AZ",
                "INSTANCE_TYPE",
                "LINKED_ACCOUNT",
                "LINKED_ACCOUNT_NAME",
                "OPERATION",
                "PURCHASE_TYPE",
                "REGION",
                "SERVICE",
                "SERVICE_CODE",
                "USAGE_TYPE",
                "USAGE_TYPE_GROUP",
                "RECORD_TYPE",
                "OPERATING_SYSTEM",
                "TENANCY",
                "SCOPE",
                "PLATFORM",
                "SUBSCRIPTION_ID",
                "LEGAL_ENTITY_NAME",
                "DEPLOYMENT_OPTION",
                "DATABASE_ENGINE",
                "CACHE_ENGINE",
                "INSTANCE_TYPE_FAMILY",
                "BILLING_ENTITY",
                "RESERVATION_ID",
                "RESOURCE_ID",
                "RIGHTSIZING_TYPE",
                "SAVINGS_PLANS_TYPE",
                "SAVINGS_PLAN_ARN",
                "PAYMENT_OPTION",
                "AGREEMENT_END_DATE_TIME_AFTER",
                "AGREEMENT_END_DATE_TIME_BEFORE",
                "INVOICING_ENTITY",
                "ANOMALY_TOTAL_IMPACT_ABSOLUTE",
                "ANOMALY_TOTAL_IMPACT_PERCENTAGE"
            ]
        },
        "Values": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Value"
            }
        },
        "Value": {
            "type": "string"
        },
        "MatchOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MatchOption"
            }
        },
        "MatchOption": {
            "enum": [
                "EQUALS",
                "ABSENT",
                "STARTS_WITH",
                "ENDS_WITH",
                "CONTAINS",
                "CASE_SENSITIVE",
                "CASE_INSENSITIVE",
                "GREATER_THAN_OR_EQUAL"
            ]
        },
        "TagValues": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Values": {
                    "$ref": "#/$defs/Values"
                },
                "MatchOptions": {
                    "$ref": "#/$defs/MatchOptions"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "CostCategoryValues": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/CostCategoryName"
                },
                "Values": {
                    "$ref": "#/$defs/Values"
                },
                "MatchOptions": {
                    "$ref": "#/$defs/MatchOptions"
                }
            }
        },
        "CostCategoryName": {
            "type": "string"
        },
        "NonNegativeInteger": {
            "type": "integer",
            "format": "int32"
        },
        "ResourceTagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceTag"
            }
        },
        "ResourceTag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/ResourceTagKey"
                },
                "Value": {
                    "$ref": "#/$defs/ResourceTagValue"
                }
            }
        },
        "ResourceTagKey": {
            "type": "string"
        },
        "ResourceTagValue": {
            "type": "string"
        },
        "CreateAnomalySubscriptionResponse": {
            "type": "object",
            "properties": {
                "SubscriptionArn": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "CreateAnomalySubscriptionRequest": {
            "type": "object",
            "properties": {
                "AnomalySubscription": {
                    "$ref": "#/$defs/AnomalySubscription"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTagList"
                }
            }
        },
        "AnomalySubscription": {
            "type": "object",
            "properties": {
                "SubscriptionArn": {
                    "$ref": "#/$defs/GenericString"
                },
                "AccountId": {
                    "$ref": "#/$defs/GenericString"
                },
                "MonitorArnList": {
                    "$ref": "#/$defs/MonitorArnList"
                },
                "Subscribers": {
                    "$ref": "#/$defs/Subscribers"
                },
                "Threshold": {
                    "$ref": "#/$defs/NullableNonNegativeDouble"
                },
                "Frequency": {
                    "$ref": "#/$defs/AnomalySubscriptionFrequency"
                },
                "SubscriptionName": {
                    "$ref": "#/$defs/GenericString"
                },
                "ThresholdExpression": {
                    "$ref": "#/$defs/Expression"
                }
            }
        },
        "MonitorArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Arn"
            }
        },
        "Arn": {
            "type": "string"
        },
        "Subscribers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Subscriber"
            }
        },
        "Subscriber": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/$defs/SubscriberAddress"
                },
                "Type": {
                    "$ref": "#/$defs/SubscriberType"
                },
                "Status": {
                    "$ref": "#/$defs/SubscriberStatus"
                }
            }
        },
        "SubscriberAddress": {
            "type": "string"
        },
        "SubscriberType": {
            "enum": [
                "EMAIL",
                "SNS"
            ]
        },
        "SubscriberStatus": {
            "enum": [
                "CONFIRMED",
                "DECLINED"
            ]
        },
        "NullableNonNegativeDouble": {
            "type": "number",
            "format": "double"
        },
        "AnomalySubscriptionFrequency": {
            "enum": [
                "DAILY",
                "IMMEDIATE",
                "WEEKLY"
            ]
        },
        "CreateCostCategoryDefinitionResponse": {
            "type": "object",
            "properties": {
                "CostCategoryArn": {
                    "$ref": "#/$defs/Arn"
                },
                "EffectiveStart": {
                    "$ref": "#/$defs/ZonedDateTime"
                }
            }
        },
        "ZonedDateTime": {
            "type": "string"
        },
        "CreateCostCategoryDefinitionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CostCategoryName"
                },
                "EffectiveStart": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "RuleVersion": {
                    "$ref": "#/$defs/CostCategoryRuleVersion"
                },
                "Rules": {
                    "$ref": "#/$defs/CostCategoryRulesList"
                },
                "DefaultValue": {
                    "$ref": "#/$defs/CostCategoryValue"
                },
                "SplitChargeRules": {
                    "$ref": "#/$defs/CostCategorySplitChargeRulesList"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTagList"
                }
            }
        },
        "CostCategoryRuleVersion": {
            "enum": [
                "CostCategoryExpressionV1"
            ]
        },
        "CostCategoryRulesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CostCategoryRule"
            }
        },
        "CostCategoryRule": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/CostCategoryValue"
                },
                "Rule": {
                    "$ref": "#/$defs/Expression"
                },
                "InheritedValue": {
                    "$ref": "#/$defs/CostCategoryInheritedValueDimension"
                },
                "Type": {
                    "$ref": "#/$defs/CostCategoryRuleType"
                }
            }
        },
        "CostCategoryValue": {
            "type": "string"
        },
        "CostCategoryInheritedValueDimension": {
            "type": "object",
            "properties": {
                "DimensionName": {
                    "$ref": "#/$defs/CostCategoryInheritedValueDimensionName"
                },
                "DimensionKey": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "CostCategoryInheritedValueDimensionName": {
            "enum": [
                "LINKED_ACCOUNT_NAME",
                "TAG"
            ]
        },
        "CostCategoryRuleType": {
            "enum": [
                "REGULAR",
                "INHERITED_VALUE"
            ]
        },
        "CostCategorySplitChargeRulesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CostCategorySplitChargeRule"
            }
        },
        "CostCategorySplitChargeRule": {
            "type": "object",
            "properties": {
                "Source": {
                    "$ref": "#/$defs/GenericString"
                },
                "Targets": {
                    "$ref": "#/$defs/CostCategorySplitChargeRuleTargetsList"
                },
                "Method": {
                    "$ref": "#/$defs/CostCategorySplitChargeMethod"
                },
                "Parameters": {
                    "$ref": "#/$defs/CostCategorySplitChargeRuleParametersList"
                }
            }
        },
        "CostCategorySplitChargeRuleTargetsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "CostCategorySplitChargeMethod": {
            "enum": [
                "FIXED",
                "PROPORTIONAL",
                "EVEN"
            ]
        },
        "CostCategorySplitChargeRuleParametersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CostCategorySplitChargeRuleParameter"
            }
        },
        "CostCategorySplitChargeRuleParameter": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/CostCategorySplitChargeRuleParameterType"
                },
                "Values": {
                    "$ref": "#/$defs/CostCategorySplitChargeRuleParameterValuesList"
                }
            }
        },
        "CostCategorySplitChargeRuleParameterType": {
            "enum": [
                "ALLOCATION_PERCENTAGES"
            ]
        },
        "CostCategorySplitChargeRuleParameterValuesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "DeleteAnomalyMonitorResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAnomalyMonitorRequest": {
            "type": "object",
            "properties": {
                "MonitorArn": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "DeleteAnomalySubscriptionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAnomalySubscriptionRequest": {
            "type": "object",
            "properties": {
                "SubscriptionArn": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "DeleteCostCategoryDefinitionResponse": {
            "type": "object",
            "properties": {
                "CostCategoryArn": {
                    "$ref": "#/$defs/Arn"
                },
                "EffectiveEnd": {
                    "$ref": "#/$defs/ZonedDateTime"
                }
            }
        },
        "DeleteCostCategoryDefinitionRequest": {
            "type": "object",
            "properties": {
                "CostCategoryArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "DescribeCostCategoryDefinitionResponse": {
            "type": "object",
            "properties": {
                "CostCategory": {
                    "$ref": "#/$defs/CostCategory"
                }
            }
        },
        "CostCategory": {
            "type": "object",
            "properties": {
                "CostCategoryArn": {
                    "$ref": "#/$defs/Arn"
                },
                "EffectiveStart": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "EffectiveEnd": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "Name": {
                    "$ref": "#/$defs/CostCategoryName"
                },
                "RuleVersion": {
                    "$ref": "#/$defs/CostCategoryRuleVersion"
                },
                "Rules": {
                    "$ref": "#/$defs/CostCategoryRulesList"
                },
                "SplitChargeRules": {
                    "$ref": "#/$defs/CostCategorySplitChargeRulesList"
                },
                "ProcessingStatus": {
                    "$ref": "#/$defs/CostCategoryProcessingStatusList"
                },
                "DefaultValue": {
                    "$ref": "#/$defs/CostCategoryValue"
                }
            }
        },
        "CostCategoryProcessingStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CostCategoryProcessingStatus"
            }
        },
        "CostCategoryProcessingStatus": {
            "type": "object",
            "properties": {
                "Component": {
                    "$ref": "#/$defs/CostCategoryStatusComponent"
                },
                "Status": {
                    "$ref": "#/$defs/CostCategoryStatus"
                }
            }
        },
        "CostCategoryStatusComponent": {
            "enum": [
                "COST_EXPLORER"
            ]
        },
        "CostCategoryStatus": {
            "enum": [
                "PROCESSING",
                "APPLIED"
            ]
        },
        "DescribeCostCategoryDefinitionRequest": {
            "type": "object",
            "properties": {
                "CostCategoryArn": {
                    "$ref": "#/$defs/Arn"
                },
                "EffectiveOn": {
                    "$ref": "#/$defs/ZonedDateTime"
                }
            }
        },
        "GetAnomaliesResponse": {
            "type": "object",
            "properties": {
                "Anomalies": {
                    "$ref": "#/$defs/Anomalies"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "Anomalies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Anomaly"
            }
        },
        "Anomaly": {
            "type": "object",
            "properties": {
                "AnomalyId": {
                    "$ref": "#/$defs/GenericString"
                },
                "AnomalyStartDate": {
                    "$ref": "#/$defs/YearMonthDay"
                },
                "AnomalyEndDate": {
                    "$ref": "#/$defs/YearMonthDay"
                },
                "DimensionValue": {
                    "$ref": "#/$defs/GenericString"
                },
                "RootCauses": {
                    "$ref": "#/$defs/RootCauses"
                },
                "AnomalyScore": {
                    "$ref": "#/$defs/AnomalyScore"
                },
                "Impact": {
                    "$ref": "#/$defs/Impact"
                },
                "MonitorArn": {
                    "$ref": "#/$defs/GenericString"
                },
                "Feedback": {
                    "$ref": "#/$defs/AnomalyFeedbackType"
                }
            }
        },
        "RootCauses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RootCause"
            }
        },
        "RootCause": {
            "type": "object",
            "properties": {
                "Service": {
                    "$ref": "#/$defs/GenericString"
                },
                "Region": {
                    "$ref": "#/$defs/GenericString"
                },
                "LinkedAccount": {
                    "$ref": "#/$defs/GenericString"
                },
                "UsageType": {
                    "$ref": "#/$defs/GenericString"
                },
                "LinkedAccountName": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "AnomalyScore": {
            "type": "object",
            "properties": {
                "MaxScore": {
                    "$ref": "#/$defs/GenericDouble"
                },
                "CurrentScore": {
                    "$ref": "#/$defs/GenericDouble"
                }
            }
        },
        "GenericDouble": {
            "type": "number",
            "format": "double"
        },
        "Impact": {
            "type": "object",
            "properties": {
                "MaxImpact": {
                    "$ref": "#/$defs/GenericDouble"
                },
                "TotalImpact": {
                    "$ref": "#/$defs/GenericDouble"
                },
                "TotalActualSpend": {
                    "$ref": "#/$defs/NullableNonNegativeDouble"
                },
                "TotalExpectedSpend": {
                    "$ref": "#/$defs/NullableNonNegativeDouble"
                },
                "TotalImpactPercentage": {
                    "$ref": "#/$defs/NullableNonNegativeDouble"
                }
            }
        },
        "AnomalyFeedbackType": {
            "enum": [
                "YES",
                "NO",
                "PLANNED_ACTIVITY"
            ]
        },
        "NextPageToken": {
            "type": "string"
        },
        "GetAnomaliesRequest": {
            "type": "object",
            "properties": {
                "MonitorArn": {
                    "$ref": "#/$defs/GenericString"
                },
                "DateInterval": {
                    "$ref": "#/$defs/AnomalyDateInterval"
                },
                "Feedback": {
                    "$ref": "#/$defs/AnomalyFeedbackType"
                },
                "TotalImpact": {
                    "$ref": "#/$defs/TotalImpactFilter"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "AnomalyDateInterval": {
            "type": "object",
            "properties": {
                "StartDate": {
                    "$ref": "#/$defs/YearMonthDay"
                },
                "EndDate": {
                    "$ref": "#/$defs/YearMonthDay"
                }
            }
        },
        "TotalImpactFilter": {
            "type": "object",
            "properties": {
                "NumericOperator": {
                    "$ref": "#/$defs/NumericOperator"
                },
                "StartValue": {
                    "$ref": "#/$defs/GenericDouble"
                },
                "EndValue": {
                    "$ref": "#/$defs/GenericDouble"
                }
            }
        },
        "NumericOperator": {
            "enum": [
                "EQUAL",
                "GREATER_THAN_OR_EQUAL",
                "LESS_THAN_OR_EQUAL",
                "GREATER_THAN",
                "LESS_THAN",
                "BETWEEN"
            ]
        },
        "PageSize": {
            "type": "integer",
            "format": "int32"
        },
        "GetAnomalyMonitorsResponse": {
            "type": "object",
            "properties": {
                "AnomalyMonitors": {
                    "$ref": "#/$defs/AnomalyMonitors"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "AnomalyMonitors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnomalyMonitor"
            }
        },
        "GetAnomalyMonitorsRequest": {
            "type": "object",
            "properties": {
                "MonitorArnList": {
                    "$ref": "#/$defs/Values"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "GetAnomalySubscriptionsResponse": {
            "type": "object",
            "properties": {
                "AnomalySubscriptions": {
                    "$ref": "#/$defs/AnomalySubscriptions"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "AnomalySubscriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnomalySubscription"
            }
        },
        "GetAnomalySubscriptionsRequest": {
            "type": "object",
            "properties": {
                "SubscriptionArnList": {
                    "$ref": "#/$defs/Values"
                },
                "MonitorArn": {
                    "$ref": "#/$defs/GenericString"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "GetApproximateUsageRecordsResponse": {
            "type": "object",
            "properties": {
                "Services": {
                    "$ref": "#/$defs/ApproximateUsageRecordsPerService"
                },
                "TotalRecords": {
                    "$ref": "#/$defs/NonNegativeLong"
                },
                "LookbackPeriod": {
                    "$ref": "#/$defs/DateInterval"
                }
            }
        },
        "ApproximateUsageRecordsPerService": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/NonNegativeLong"
            }
        },
        "NonNegativeLong": {
            "type": "integer",
            "format": "int64"
        },
        "DateInterval": {
            "type": "object",
            "properties": {
                "Start": {
                    "$ref": "#/$defs/YearMonthDay"
                },
                "End": {
                    "$ref": "#/$defs/YearMonthDay"
                }
            }
        },
        "GetApproximateUsageRecordsRequest": {
            "type": "object",
            "properties": {
                "Granularity": {
                    "$ref": "#/$defs/Granularity"
                },
                "Services": {
                    "$ref": "#/$defs/UsageServices"
                },
                "ApproximationDimension": {
                    "$ref": "#/$defs/ApproximationDimension"
                }
            }
        },
        "Granularity": {
            "enum": [
                "DAILY",
                "MONTHLY",
                "HOURLY"
            ]
        },
        "UsageServices": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GenericString"
            }
        },
        "ApproximationDimension": {
            "enum": [
                "SERVICE",
                "RESOURCE"
            ]
        },
        "GetCostAndUsageResponse": {
            "type": "object",
            "properties": {
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "GroupDefinitions": {
                    "$ref": "#/$defs/GroupDefinitions"
                },
                "ResultsByTime": {
                    "$ref": "#/$defs/ResultsByTime"
                },
                "DimensionValueAttributes": {
                    "$ref": "#/$defs/DimensionValuesWithAttributesList"
                }
            }
        },
        "GroupDefinitions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupDefinition"
            }
        },
        "GroupDefinition": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/GroupDefinitionType"
                },
                "Key": {
                    "$ref": "#/$defs/GroupDefinitionKey"
                }
            }
        },
        "GroupDefinitionType": {
            "enum": [
                "DIMENSION",
                "TAG",
                "COST_CATEGORY"
            ]
        },
        "GroupDefinitionKey": {
            "type": "string"
        },
        "ResultsByTime": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResultByTime"
            }
        },
        "ResultByTime": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "Total": {
                    "$ref": "#/$defs/Metrics"
                },
                "Groups": {
                    "$ref": "#/$defs/Groups"
                },
                "Estimated": {
                    "$ref": "#/$defs/Estimated"
                }
            }
        },
        "Metrics": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MetricValue"
            }
        },
        "MetricValue": {
            "type": "object",
            "properties": {
                "Amount": {
                    "$ref": "#/$defs/MetricAmount"
                },
                "Unit": {
                    "$ref": "#/$defs/MetricUnit"
                }
            }
        },
        "MetricAmount": {
            "type": "string"
        },
        "MetricUnit": {
            "type": "string"
        },
        "Groups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Group"
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "Keys": {
                    "$ref": "#/$defs/Keys"
                },
                "Metrics": {
                    "$ref": "#/$defs/Metrics"
                }
            }
        },
        "Keys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Key"
            }
        },
        "Key": {
            "type": "string"
        },
        "Estimated": {
            "type": "boolean"
        },
        "DimensionValuesWithAttributesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DimensionValuesWithAttributes"
            }
        },
        "DimensionValuesWithAttributes": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Value"
                },
                "Attributes": {
                    "$ref": "#/$defs/Attributes"
                }
            }
        },
        "Attributes": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "AttributeValue": {
            "type": "string"
        },
        "GetCostAndUsageRequest": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "Granularity": {
                    "$ref": "#/$defs/Granularity"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "Metrics": {
                    "$ref": "#/$defs/MetricNames"
                },
                "GroupBy": {
                    "$ref": "#/$defs/GroupDefinitions"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "MetricNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricName"
            }
        },
        "MetricName": {
            "type": "string"
        },
        "GetCostAndUsageWithResourcesResponse": {
            "type": "object",
            "properties": {
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "GroupDefinitions": {
                    "$ref": "#/$defs/GroupDefinitions"
                },
                "ResultsByTime": {
                    "$ref": "#/$defs/ResultsByTime"
                },
                "DimensionValueAttributes": {
                    "$ref": "#/$defs/DimensionValuesWithAttributesList"
                }
            }
        },
        "GetCostAndUsageWithResourcesRequest": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "Granularity": {
                    "$ref": "#/$defs/Granularity"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "Metrics": {
                    "$ref": "#/$defs/MetricNames"
                },
                "GroupBy": {
                    "$ref": "#/$defs/GroupDefinitions"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "GetCostCategoriesResponse": {
            "type": "object",
            "properties": {
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "CostCategoryNames": {
                    "$ref": "#/$defs/CostCategoryNamesList"
                },
                "CostCategoryValues": {
                    "$ref": "#/$defs/CostCategoryValuesList"
                },
                "ReturnSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "TotalSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "CostCategoryNamesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CostCategoryName"
            }
        },
        "CostCategoryValuesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CostCategoryValue"
            }
        },
        "GetCostCategoriesRequest": {
            "type": "object",
            "properties": {
                "SearchString": {
                    "$ref": "#/$defs/SearchString"
                },
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "CostCategoryName": {
                    "$ref": "#/$defs/CostCategoryName"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "SortBy": {
                    "$ref": "#/$defs/SortDefinitions"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "SearchString": {
            "type": "string"
        },
        "SortDefinitions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SortDefinition"
            }
        },
        "SortDefinition": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/SortDefinitionKey"
                },
                "SortOrder": {
                    "$ref": "#/$defs/SortOrder"
                }
            }
        },
        "SortDefinitionKey": {
            "type": "string"
        },
        "SortOrder": {
            "enum": [
                "ASCENDING",
                "DESCENDING"
            ]
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetCostForecastResponse": {
            "type": "object",
            "properties": {
                "Total": {
                    "$ref": "#/$defs/MetricValue"
                },
                "ForecastResultsByTime": {
                    "$ref": "#/$defs/ForecastResultsByTime"
                }
            }
        },
        "ForecastResultsByTime": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ForecastResult"
            }
        },
        "ForecastResult": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "MeanValue": {
                    "$ref": "#/$defs/GenericString"
                },
                "PredictionIntervalLowerBound": {
                    "$ref": "#/$defs/GenericString"
                },
                "PredictionIntervalUpperBound": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GetCostForecastRequest": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "Metric": {
                    "$ref": "#/$defs/Metric"
                },
                "Granularity": {
                    "$ref": "#/$defs/Granularity"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "PredictionIntervalLevel": {
                    "$ref": "#/$defs/PredictionIntervalLevel"
                }
            }
        },
        "Metric": {
            "enum": [
                "BLENDED_COST",
                "UNBLENDED_COST",
                "AMORTIZED_COST",
                "NET_UNBLENDED_COST",
                "NET_AMORTIZED_COST",
                "USAGE_QUANTITY",
                "NORMALIZED_USAGE_AMOUNT"
            ]
        },
        "PredictionIntervalLevel": {
            "type": "integer",
            "format": "int32"
        },
        "GetDimensionValuesResponse": {
            "type": "object",
            "properties": {
                "DimensionValues": {
                    "$ref": "#/$defs/DimensionValuesWithAttributesList"
                },
                "ReturnSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "TotalSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "GetDimensionValuesRequest": {
            "type": "object",
            "properties": {
                "SearchString": {
                    "$ref": "#/$defs/SearchString"
                },
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "Dimension": {
                    "$ref": "#/$defs/Dimension"
                },
                "Context": {
                    "$ref": "#/$defs/Context"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "SortBy": {
                    "$ref": "#/$defs/SortDefinitions"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "Context": {
            "enum": [
                "COST_AND_USAGE",
                "RESERVATIONS",
                "SAVINGS_PLANS"
            ]
        },
        "GetReservationCoverageResponse": {
            "type": "object",
            "properties": {
                "CoveragesByTime": {
                    "$ref": "#/$defs/CoveragesByTime"
                },
                "Total": {
                    "$ref": "#/$defs/Coverage"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "CoveragesByTime": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CoverageByTime"
            }
        },
        "CoverageByTime": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "Groups": {
                    "$ref": "#/$defs/ReservationCoverageGroups"
                },
                "Total": {
                    "$ref": "#/$defs/Coverage"
                }
            }
        },
        "ReservationCoverageGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservationCoverageGroup"
            }
        },
        "ReservationCoverageGroup": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "Coverage": {
                    "$ref": "#/$defs/Coverage"
                }
            }
        },
        "Coverage": {
            "type": "object",
            "properties": {
                "CoverageHours": {
                    "$ref": "#/$defs/CoverageHours"
                },
                "CoverageNormalizedUnits": {
                    "$ref": "#/$defs/CoverageNormalizedUnits"
                },
                "CoverageCost": {
                    "$ref": "#/$defs/CoverageCost"
                }
            }
        },
        "CoverageHours": {
            "type": "object",
            "properties": {
                "OnDemandHours": {
                    "$ref": "#/$defs/OnDemandHours"
                },
                "ReservedHours": {
                    "$ref": "#/$defs/ReservedHours"
                },
                "TotalRunningHours": {
                    "$ref": "#/$defs/TotalRunningHours"
                },
                "CoverageHoursPercentage": {
                    "$ref": "#/$defs/CoverageHoursPercentage"
                }
            }
        },
        "OnDemandHours": {
            "type": "string"
        },
        "ReservedHours": {
            "type": "string"
        },
        "TotalRunningHours": {
            "type": "string"
        },
        "CoverageHoursPercentage": {
            "type": "string"
        },
        "CoverageNormalizedUnits": {
            "type": "object",
            "properties": {
                "OnDemandNormalizedUnits": {
                    "$ref": "#/$defs/OnDemandNormalizedUnits"
                },
                "ReservedNormalizedUnits": {
                    "$ref": "#/$defs/ReservedNormalizedUnits"
                },
                "TotalRunningNormalizedUnits": {
                    "$ref": "#/$defs/TotalRunningNormalizedUnits"
                },
                "CoverageNormalizedUnitsPercentage": {
                    "$ref": "#/$defs/CoverageNormalizedUnitsPercentage"
                }
            }
        },
        "OnDemandNormalizedUnits": {
            "type": "string"
        },
        "ReservedNormalizedUnits": {
            "type": "string"
        },
        "TotalRunningNormalizedUnits": {
            "type": "string"
        },
        "CoverageNormalizedUnitsPercentage": {
            "type": "string"
        },
        "CoverageCost": {
            "type": "object",
            "properties": {
                "OnDemandCost": {
                    "$ref": "#/$defs/OnDemandCost"
                }
            }
        },
        "OnDemandCost": {
            "type": "string"
        },
        "GetReservationCoverageRequest": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "GroupBy": {
                    "$ref": "#/$defs/GroupDefinitions"
                },
                "Granularity": {
                    "$ref": "#/$defs/Granularity"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "Metrics": {
                    "$ref": "#/$defs/MetricNames"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "SortBy": {
                    "$ref": "#/$defs/SortDefinition"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "GetReservationPurchaseRecommendationResponse": {
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/$defs/ReservationPurchaseRecommendationMetadata"
                },
                "Recommendations": {
                    "$ref": "#/$defs/ReservationPurchaseRecommendations"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "ReservationPurchaseRecommendationMetadata": {
            "type": "object",
            "properties": {
                "RecommendationId": {
                    "$ref": "#/$defs/GenericString"
                },
                "GenerationTimestamp": {
                    "$ref": "#/$defs/GenericString"
                },
                "AdditionalMetadata": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "ReservationPurchaseRecommendations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservationPurchaseRecommendation"
            }
        },
        "ReservationPurchaseRecommendation": {
            "type": "object",
            "properties": {
                "AccountScope": {
                    "$ref": "#/$defs/AccountScope"
                },
                "LookbackPeriodInDays": {
                    "$ref": "#/$defs/LookbackPeriodInDays"
                },
                "TermInYears": {
                    "$ref": "#/$defs/TermInYears"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/PaymentOption"
                },
                "ServiceSpecification": {
                    "$ref": "#/$defs/ServiceSpecification"
                },
                "RecommendationDetails": {
                    "$ref": "#/$defs/ReservationPurchaseRecommendationDetails"
                },
                "RecommendationSummary": {
                    "$ref": "#/$defs/ReservationPurchaseRecommendationSummary"
                }
            }
        },
        "AccountScope": {
            "enum": [
                "PAYER",
                "LINKED"
            ]
        },
        "LookbackPeriodInDays": {
            "enum": [
                "SEVEN_DAYS",
                "THIRTY_DAYS",
                "SIXTY_DAYS"
            ]
        },
        "TermInYears": {
            "enum": [
                "ONE_YEAR",
                "THREE_YEARS"
            ]
        },
        "PaymentOption": {
            "enum": [
                "NO_UPFRONT",
                "PARTIAL_UPFRONT",
                "ALL_UPFRONT",
                "LIGHT_UTILIZATION",
                "MEDIUM_UTILIZATION",
                "HEAVY_UTILIZATION"
            ]
        },
        "ServiceSpecification": {
            "type": "object",
            "properties": {
                "EC2Specification": {
                    "$ref": "#/$defs/EC2Specification"
                }
            }
        },
        "EC2Specification": {
            "type": "object",
            "properties": {
                "OfferingClass": {
                    "$ref": "#/$defs/OfferingClass"
                }
            }
        },
        "OfferingClass": {
            "enum": [
                "STANDARD",
                "CONVERTIBLE"
            ]
        },
        "ReservationPurchaseRecommendationDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservationPurchaseRecommendationDetail"
            }
        },
        "ReservationPurchaseRecommendationDetail": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/GenericString"
                },
                "InstanceDetails": {
                    "$ref": "#/$defs/InstanceDetails"
                },
                "RecommendedNumberOfInstancesToPurchase": {
                    "$ref": "#/$defs/GenericString"
                },
                "RecommendedNormalizedUnitsToPurchase": {
                    "$ref": "#/$defs/GenericString"
                },
                "MinimumNumberOfInstancesUsedPerHour": {
                    "$ref": "#/$defs/GenericString"
                },
                "MinimumNormalizedUnitsUsedPerHour": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaximumNumberOfInstancesUsedPerHour": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaximumNormalizedUnitsUsedPerHour": {
                    "$ref": "#/$defs/GenericString"
                },
                "AverageNumberOfInstancesUsedPerHour": {
                    "$ref": "#/$defs/GenericString"
                },
                "AverageNormalizedUnitsUsedPerHour": {
                    "$ref": "#/$defs/GenericString"
                },
                "AverageUtilization": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedBreakEvenInMonths": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedMonthlySavingsAmount": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedMonthlySavingsPercentage": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedMonthlyOnDemandCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedReservationCostForLookbackPeriod": {
                    "$ref": "#/$defs/GenericString"
                },
                "UpfrontCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "RecurringStandardMonthlyCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "ReservedCapacityDetails": {
                    "$ref": "#/$defs/ReservedCapacityDetails"
                },
                "RecommendedNumberOfCapacityUnitsToPurchase": {
                    "$ref": "#/$defs/GenericString"
                },
                "MinimumNumberOfCapacityUnitsUsedPerHour": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaximumNumberOfCapacityUnitsUsedPerHour": {
                    "$ref": "#/$defs/GenericString"
                },
                "AverageNumberOfCapacityUnitsUsedPerHour": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "InstanceDetails": {
            "type": "object",
            "properties": {
                "EC2InstanceDetails": {
                    "$ref": "#/$defs/EC2InstanceDetails"
                },
                "RDSInstanceDetails": {
                    "$ref": "#/$defs/RDSInstanceDetails"
                },
                "RedshiftInstanceDetails": {
                    "$ref": "#/$defs/RedshiftInstanceDetails"
                },
                "ElastiCacheInstanceDetails": {
                    "$ref": "#/$defs/ElastiCacheInstanceDetails"
                },
                "ESInstanceDetails": {
                    "$ref": "#/$defs/ESInstanceDetails"
                },
                "MemoryDBInstanceDetails": {
                    "$ref": "#/$defs/MemoryDBInstanceDetails"
                }
            }
        },
        "EC2InstanceDetails": {
            "type": "object",
            "properties": {
                "Family": {
                    "$ref": "#/$defs/GenericString"
                },
                "InstanceType": {
                    "$ref": "#/$defs/GenericString"
                },
                "Region": {
                    "$ref": "#/$defs/GenericString"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/GenericString"
                },
                "Platform": {
                    "$ref": "#/$defs/GenericString"
                },
                "Tenancy": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentGeneration": {
                    "$ref": "#/$defs/GenericBoolean"
                },
                "SizeFlexEligible": {
                    "$ref": "#/$defs/GenericBoolean"
                }
            }
        },
        "GenericBoolean": {
            "type": "boolean"
        },
        "RDSInstanceDetails": {
            "type": "object",
            "properties": {
                "Family": {
                    "$ref": "#/$defs/GenericString"
                },
                "InstanceType": {
                    "$ref": "#/$defs/GenericString"
                },
                "Region": {
                    "$ref": "#/$defs/GenericString"
                },
                "DatabaseEngine": {
                    "$ref": "#/$defs/GenericString"
                },
                "DatabaseEdition": {
                    "$ref": "#/$defs/GenericString"
                },
                "DeploymentOption": {
                    "$ref": "#/$defs/GenericString"
                },
                "LicenseModel": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentGeneration": {
                    "$ref": "#/$defs/GenericBoolean"
                },
                "SizeFlexEligible": {
                    "$ref": "#/$defs/GenericBoolean"
                }
            }
        },
        "RedshiftInstanceDetails": {
            "type": "object",
            "properties": {
                "Family": {
                    "$ref": "#/$defs/GenericString"
                },
                "NodeType": {
                    "$ref": "#/$defs/GenericString"
                },
                "Region": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentGeneration": {
                    "$ref": "#/$defs/GenericBoolean"
                },
                "SizeFlexEligible": {
                    "$ref": "#/$defs/GenericBoolean"
                }
            }
        },
        "ElastiCacheInstanceDetails": {
            "type": "object",
            "properties": {
                "Family": {
                    "$ref": "#/$defs/GenericString"
                },
                "NodeType": {
                    "$ref": "#/$defs/GenericString"
                },
                "Region": {
                    "$ref": "#/$defs/GenericString"
                },
                "ProductDescription": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentGeneration": {
                    "$ref": "#/$defs/GenericBoolean"
                },
                "SizeFlexEligible": {
                    "$ref": "#/$defs/GenericBoolean"
                }
            }
        },
        "ESInstanceDetails": {
            "type": "object",
            "properties": {
                "InstanceClass": {
                    "$ref": "#/$defs/GenericString"
                },
                "InstanceSize": {
                    "$ref": "#/$defs/GenericString"
                },
                "Region": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentGeneration": {
                    "$ref": "#/$defs/GenericBoolean"
                },
                "SizeFlexEligible": {
                    "$ref": "#/$defs/GenericBoolean"
                }
            }
        },
        "MemoryDBInstanceDetails": {
            "type": "object",
            "properties": {
                "Family": {
                    "$ref": "#/$defs/GenericString"
                },
                "NodeType": {
                    "$ref": "#/$defs/GenericString"
                },
                "Region": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentGeneration": {
                    "$ref": "#/$defs/GenericBoolean"
                },
                "SizeFlexEligible": {
                    "$ref": "#/$defs/GenericBoolean"
                }
            }
        },
        "ReservedCapacityDetails": {
            "type": "object",
            "properties": {
                "DynamoDBCapacityDetails": {
                    "$ref": "#/$defs/DynamoDBCapacityDetails"
                }
            }
        },
        "DynamoDBCapacityDetails": {
            "type": "object",
            "properties": {
                "CapacityUnits": {
                    "$ref": "#/$defs/GenericString"
                },
                "Region": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "ReservationPurchaseRecommendationSummary": {
            "type": "object",
            "properties": {
                "TotalEstimatedMonthlySavingsAmount": {
                    "$ref": "#/$defs/GenericString"
                },
                "TotalEstimatedMonthlySavingsPercentage": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GetReservationPurchaseRecommendationRequest": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/GenericString"
                },
                "Service": {
                    "$ref": "#/$defs/GenericString"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "AccountScope": {
                    "$ref": "#/$defs/AccountScope"
                },
                "LookbackPeriodInDays": {
                    "$ref": "#/$defs/LookbackPeriodInDays"
                },
                "TermInYears": {
                    "$ref": "#/$defs/TermInYears"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/PaymentOption"
                },
                "ServiceSpecification": {
                    "$ref": "#/$defs/ServiceSpecification"
                },
                "PageSize": {
                    "$ref": "#/$defs/NonNegativeInteger"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "GetReservationUtilizationResponse": {
            "type": "object",
            "properties": {
                "UtilizationsByTime": {
                    "$ref": "#/$defs/UtilizationsByTime"
                },
                "Total": {
                    "$ref": "#/$defs/ReservationAggregates"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "UtilizationsByTime": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UtilizationByTime"
            }
        },
        "UtilizationByTime": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "Groups": {
                    "$ref": "#/$defs/ReservationUtilizationGroups"
                },
                "Total": {
                    "$ref": "#/$defs/ReservationAggregates"
                }
            }
        },
        "ReservationUtilizationGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservationUtilizationGroup"
            }
        },
        "ReservationUtilizationGroup": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/ReservationGroupKey"
                },
                "Value": {
                    "$ref": "#/$defs/ReservationGroupValue"
                },
                "Attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "Utilization": {
                    "$ref": "#/$defs/ReservationAggregates"
                }
            }
        },
        "ReservationGroupKey": {
            "type": "string"
        },
        "ReservationGroupValue": {
            "type": "string"
        },
        "ReservationAggregates": {
            "type": "object",
            "properties": {
                "UtilizationPercentage": {
                    "$ref": "#/$defs/UtilizationPercentage"
                },
                "UtilizationPercentageInUnits": {
                    "$ref": "#/$defs/UtilizationPercentageInUnits"
                },
                "PurchasedHours": {
                    "$ref": "#/$defs/PurchasedHours"
                },
                "PurchasedUnits": {
                    "$ref": "#/$defs/PurchasedUnits"
                },
                "TotalActualHours": {
                    "$ref": "#/$defs/TotalActualHours"
                },
                "TotalActualUnits": {
                    "$ref": "#/$defs/TotalActualUnits"
                },
                "UnusedHours": {
                    "$ref": "#/$defs/UnusedHours"
                },
                "UnusedUnits": {
                    "$ref": "#/$defs/UnusedUnits"
                },
                "OnDemandCostOfRIHoursUsed": {
                    "$ref": "#/$defs/OnDemandCostOfRIHoursUsed"
                },
                "NetRISavings": {
                    "$ref": "#/$defs/NetRISavings"
                },
                "TotalPotentialRISavings": {
                    "$ref": "#/$defs/TotalPotentialRISavings"
                },
                "AmortizedUpfrontFee": {
                    "$ref": "#/$defs/AmortizedUpfrontFee"
                },
                "AmortizedRecurringFee": {
                    "$ref": "#/$defs/AmortizedRecurringFee"
                },
                "TotalAmortizedFee": {
                    "$ref": "#/$defs/TotalAmortizedFee"
                },
                "RICostForUnusedHours": {
                    "$ref": "#/$defs/RICostForUnusedHours"
                },
                "RealizedSavings": {
                    "$ref": "#/$defs/RealizedSavings"
                },
                "UnrealizedSavings": {
                    "$ref": "#/$defs/UnrealizedSavings"
                }
            }
        },
        "UtilizationPercentage": {
            "type": "string"
        },
        "UtilizationPercentageInUnits": {
            "type": "string"
        },
        "PurchasedHours": {
            "type": "string"
        },
        "PurchasedUnits": {
            "type": "string"
        },
        "TotalActualHours": {
            "type": "string"
        },
        "TotalActualUnits": {
            "type": "string"
        },
        "UnusedHours": {
            "type": "string"
        },
        "UnusedUnits": {
            "type": "string"
        },
        "OnDemandCostOfRIHoursUsed": {
            "type": "string"
        },
        "NetRISavings": {
            "type": "string"
        },
        "TotalPotentialRISavings": {
            "type": "string"
        },
        "AmortizedUpfrontFee": {
            "type": "string"
        },
        "AmortizedRecurringFee": {
            "type": "string"
        },
        "TotalAmortizedFee": {
            "type": "string"
        },
        "RICostForUnusedHours": {
            "type": "string"
        },
        "RealizedSavings": {
            "type": "string"
        },
        "UnrealizedSavings": {
            "type": "string"
        },
        "GetReservationUtilizationRequest": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "GroupBy": {
                    "$ref": "#/$defs/GroupDefinitions"
                },
                "Granularity": {
                    "$ref": "#/$defs/Granularity"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "SortBy": {
                    "$ref": "#/$defs/SortDefinition"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "GetRightsizingRecommendationResponse": {
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/$defs/RightsizingRecommendationMetadata"
                },
                "Summary": {
                    "$ref": "#/$defs/RightsizingRecommendationSummary"
                },
                "RightsizingRecommendations": {
                    "$ref": "#/$defs/RightsizingRecommendationList"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "Configuration": {
                    "$ref": "#/$defs/RightsizingRecommendationConfiguration"
                }
            }
        },
        "RightsizingRecommendationMetadata": {
            "type": "object",
            "properties": {
                "RecommendationId": {
                    "$ref": "#/$defs/GenericString"
                },
                "GenerationTimestamp": {
                    "$ref": "#/$defs/GenericString"
                },
                "LookbackPeriodInDays": {
                    "$ref": "#/$defs/LookbackPeriodInDays"
                },
                "AdditionalMetadata": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "RightsizingRecommendationSummary": {
            "type": "object",
            "properties": {
                "TotalRecommendationCount": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedTotalMonthlySavingsAmount": {
                    "$ref": "#/$defs/GenericString"
                },
                "SavingsCurrencyCode": {
                    "$ref": "#/$defs/GenericString"
                },
                "SavingsPercentage": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "RightsizingRecommendationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RightsizingRecommendation"
            }
        },
        "RightsizingRecommendation": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentInstance": {
                    "$ref": "#/$defs/CurrentInstance"
                },
                "RightsizingType": {
                    "$ref": "#/$defs/RightsizingType"
                },
                "ModifyRecommendationDetail": {
                    "$ref": "#/$defs/ModifyRecommendationDetail"
                },
                "TerminateRecommendationDetail": {
                    "$ref": "#/$defs/TerminateRecommendationDetail"
                },
                "FindingReasonCodes": {
                    "$ref": "#/$defs/FindingReasonCodes"
                }
            }
        },
        "CurrentInstance": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/GenericString"
                },
                "InstanceName": {
                    "$ref": "#/$defs/GenericString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagValuesList"
                },
                "ResourceDetails": {
                    "$ref": "#/$defs/ResourceDetails"
                },
                "ResourceUtilization": {
                    "$ref": "#/$defs/ResourceUtilization"
                },
                "ReservationCoveredHoursInLookbackPeriod": {
                    "$ref": "#/$defs/GenericString"
                },
                "SavingsPlansCoveredHoursInLookbackPeriod": {
                    "$ref": "#/$defs/GenericString"
                },
                "OnDemandHoursInLookbackPeriod": {
                    "$ref": "#/$defs/GenericString"
                },
                "TotalRunningHoursInLookbackPeriod": {
                    "$ref": "#/$defs/GenericString"
                },
                "MonthlyCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "TagValuesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagValues"
            }
        },
        "ResourceDetails": {
            "type": "object",
            "properties": {
                "EC2ResourceDetails": {
                    "$ref": "#/$defs/EC2ResourceDetails"
                }
            }
        },
        "EC2ResourceDetails": {
            "type": "object",
            "properties": {
                "HourlyOnDemandRate": {
                    "$ref": "#/$defs/GenericString"
                },
                "InstanceType": {
                    "$ref": "#/$defs/GenericString"
                },
                "Platform": {
                    "$ref": "#/$defs/GenericString"
                },
                "Region": {
                    "$ref": "#/$defs/GenericString"
                },
                "Sku": {
                    "$ref": "#/$defs/GenericString"
                },
                "Memory": {
                    "$ref": "#/$defs/GenericString"
                },
                "NetworkPerformance": {
                    "$ref": "#/$defs/GenericString"
                },
                "Storage": {
                    "$ref": "#/$defs/GenericString"
                },
                "Vcpu": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "ResourceUtilization": {
            "type": "object",
            "properties": {
                "EC2ResourceUtilization": {
                    "$ref": "#/$defs/EC2ResourceUtilization"
                }
            }
        },
        "EC2ResourceUtilization": {
            "type": "object",
            "properties": {
                "MaxCpuUtilizationPercentage": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaxMemoryUtilizationPercentage": {
                    "$ref": "#/$defs/GenericString"
                },
                "MaxStorageUtilizationPercentage": {
                    "$ref": "#/$defs/GenericString"
                },
                "EBSResourceUtilization": {
                    "$ref": "#/$defs/EBSResourceUtilization"
                },
                "DiskResourceUtilization": {
                    "$ref": "#/$defs/DiskResourceUtilization"
                },
                "NetworkResourceUtilization": {
                    "$ref": "#/$defs/NetworkResourceUtilization"
                }
            }
        },
        "EBSResourceUtilization": {
            "type": "object",
            "properties": {
                "EbsReadOpsPerSecond": {
                    "$ref": "#/$defs/GenericString"
                },
                "EbsWriteOpsPerSecond": {
                    "$ref": "#/$defs/GenericString"
                },
                "EbsReadBytesPerSecond": {
                    "$ref": "#/$defs/GenericString"
                },
                "EbsWriteBytesPerSecond": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "DiskResourceUtilization": {
            "type": "object",
            "properties": {
                "DiskReadOpsPerSecond": {
                    "$ref": "#/$defs/GenericString"
                },
                "DiskWriteOpsPerSecond": {
                    "$ref": "#/$defs/GenericString"
                },
                "DiskReadBytesPerSecond": {
                    "$ref": "#/$defs/GenericString"
                },
                "DiskWriteBytesPerSecond": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "NetworkResourceUtilization": {
            "type": "object",
            "properties": {
                "NetworkInBytesPerSecond": {
                    "$ref": "#/$defs/GenericString"
                },
                "NetworkOutBytesPerSecond": {
                    "$ref": "#/$defs/GenericString"
                },
                "NetworkPacketsInPerSecond": {
                    "$ref": "#/$defs/GenericString"
                },
                "NetworkPacketsOutPerSecond": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "RightsizingType": {
            "enum": [
                "TERMINATE",
                "MODIFY"
            ]
        },
        "ModifyRecommendationDetail": {
            "type": "object",
            "properties": {
                "TargetInstances": {
                    "$ref": "#/$defs/TargetInstancesList"
                }
            }
        },
        "TargetInstancesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetInstance"
            }
        },
        "TargetInstance": {
            "type": "object",
            "properties": {
                "EstimatedMonthlyCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedMonthlySavings": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/GenericString"
                },
                "DefaultTargetInstance": {
                    "$ref": "#/$defs/GenericBoolean"
                },
                "ResourceDetails": {
                    "$ref": "#/$defs/ResourceDetails"
                },
                "ExpectedResourceUtilization": {
                    "$ref": "#/$defs/ResourceUtilization"
                },
                "PlatformDifferences": {
                    "$ref": "#/$defs/PlatformDifferences"
                }
            }
        },
        "PlatformDifferences": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PlatformDifference"
            }
        },
        "PlatformDifference": {
            "enum": [
                "HYPERVISOR",
                "NETWORK_INTERFACE",
                "STORAGE_INTERFACE",
                "INSTANCE_STORE_AVAILABILITY",
                "VIRTUALIZATION_TYPE"
            ]
        },
        "TerminateRecommendationDetail": {
            "type": "object",
            "properties": {
                "EstimatedMonthlySavings": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "FindingReasonCodes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FindingReasonCode"
            }
        },
        "FindingReasonCode": {
            "enum": [
                "CPU_OVER_PROVISIONED",
                "CPU_UNDER_PROVISIONED",
                "MEMORY_OVER_PROVISIONED",
                "MEMORY_UNDER_PROVISIONED",
                "EBS_THROUGHPUT_OVER_PROVISIONED",
                "EBS_THROUGHPUT_UNDER_PROVISIONED",
                "EBS_IOPS_OVER_PROVISIONED",
                "EBS_IOPS_UNDER_PROVISIONED",
                "NETWORK_BANDWIDTH_OVER_PROVISIONED",
                "NETWORK_BANDWIDTH_UNDER_PROVISIONED",
                "NETWORK_PPS_OVER_PROVISIONED",
                "NETWORK_PPS_UNDER_PROVISIONED",
                "DISK_IOPS_OVER_PROVISIONED",
                "DISK_IOPS_UNDER_PROVISIONED",
                "DISK_THROUGHPUT_OVER_PROVISIONED",
                "DISK_THROUGHPUT_UNDER_PROVISIONED"
            ]
        },
        "RightsizingRecommendationConfiguration": {
            "type": "object",
            "properties": {
                "RecommendationTarget": {
                    "$ref": "#/$defs/RecommendationTarget"
                },
                "BenefitsConsidered": {
                    "$ref": "#/$defs/GenericBoolean"
                }
            }
        },
        "RecommendationTarget": {
            "enum": [
                "SAME_INSTANCE_FAMILY",
                "CROSS_INSTANCE_FAMILY"
            ]
        },
        "GetRightsizingRecommendationRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "Configuration": {
                    "$ref": "#/$defs/RightsizingRecommendationConfiguration"
                },
                "Service": {
                    "$ref": "#/$defs/GenericString"
                },
                "PageSize": {
                    "$ref": "#/$defs/NonNegativeInteger"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "GetSavingsPlanPurchaseRecommendationDetailsResponse": {
            "type": "object",
            "properties": {
                "RecommendationDetailId": {
                    "$ref": "#/$defs/RecommendationDetailId"
                },
                "RecommendationDetailData": {
                    "$ref": "#/$defs/RecommendationDetailData"
                }
            }
        },
        "RecommendationDetailId": {
            "type": "string"
        },
        "RecommendationDetailData": {
            "type": "object",
            "properties": {
                "AccountScope": {
                    "$ref": "#/$defs/AccountScope"
                },
                "LookbackPeriodInDays": {
                    "$ref": "#/$defs/LookbackPeriodInDays"
                },
                "SavingsPlansType": {
                    "$ref": "#/$defs/SupportedSavingsPlansType"
                },
                "TermInYears": {
                    "$ref": "#/$defs/TermInYears"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/PaymentOption"
                },
                "AccountId": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/GenericString"
                },
                "InstanceFamily": {
                    "$ref": "#/$defs/GenericString"
                },
                "Region": {
                    "$ref": "#/$defs/GenericString"
                },
                "OfferingId": {
                    "$ref": "#/$defs/GenericString"
                },
                "GenerationTimestamp": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "LatestUsageTimestamp": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "CurrentAverageHourlyOnDemandSpend": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentMaximumHourlyOnDemandSpend": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentMinimumHourlyOnDemandSpend": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedAverageUtilization": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedMonthlySavingsAmount": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedOnDemandCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedOnDemandCostWithCurrentCommitment": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedROI": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedSPCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedSavingsAmount": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedSavingsPercentage": {
                    "$ref": "#/$defs/GenericString"
                },
                "ExistingHourlyCommitment": {
                    "$ref": "#/$defs/GenericString"
                },
                "HourlyCommitmentToPurchase": {
                    "$ref": "#/$defs/GenericString"
                },
                "UpfrontCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentAverageCoverage": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedAverageCoverage": {
                    "$ref": "#/$defs/GenericString"
                },
                "MetricsOverLookbackPeriod": {
                    "$ref": "#/$defs/MetricsOverLookbackPeriod"
                }
            }
        },
        "SupportedSavingsPlansType": {
            "enum": [
                "COMPUTE_SP",
                "EC2_INSTANCE_SP",
                "SAGEMAKER_SP"
            ]
        },
        "MetricsOverLookbackPeriod": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationDetailHourlyMetrics"
            }
        },
        "RecommendationDetailHourlyMetrics": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "EstimatedOnDemandCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentCoverage": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedCoverage": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedNewCommitmentUtilization": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GetSavingsPlanPurchaseRecommendationDetailsRequest": {
            "type": "object",
            "properties": {
                "RecommendationDetailId": {
                    "$ref": "#/$defs/RecommendationDetailId"
                }
            }
        },
        "GetSavingsPlansCoverageResponse": {
            "type": "object",
            "properties": {
                "SavingsPlansCoverages": {
                    "$ref": "#/$defs/SavingsPlansCoverages"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "SavingsPlansCoverages": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SavingsPlansCoverage"
            }
        },
        "SavingsPlansCoverage": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "Coverage": {
                    "$ref": "#/$defs/SavingsPlansCoverageData"
                },
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                }
            }
        },
        "SavingsPlansCoverageData": {
            "type": "object",
            "properties": {
                "SpendCoveredBySavingsPlans": {
                    "$ref": "#/$defs/GenericString"
                },
                "OnDemandCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "TotalCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "CoveragePercentage": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GetSavingsPlansCoverageRequest": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "GroupBy": {
                    "$ref": "#/$defs/GroupDefinitions"
                },
                "Granularity": {
                    "$ref": "#/$defs/Granularity"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "Metrics": {
                    "$ref": "#/$defs/MetricNames"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "SortBy": {
                    "$ref": "#/$defs/SortDefinition"
                }
            }
        },
        "GetSavingsPlansPurchaseRecommendationResponse": {
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/$defs/SavingsPlansPurchaseRecommendationMetadata"
                },
                "SavingsPlansPurchaseRecommendation": {
                    "$ref": "#/$defs/SavingsPlansPurchaseRecommendation"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "SavingsPlansPurchaseRecommendationMetadata": {
            "type": "object",
            "properties": {
                "RecommendationId": {
                    "$ref": "#/$defs/GenericString"
                },
                "GenerationTimestamp": {
                    "$ref": "#/$defs/GenericString"
                },
                "AdditionalMetadata": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "SavingsPlansPurchaseRecommendation": {
            "type": "object",
            "properties": {
                "AccountScope": {
                    "$ref": "#/$defs/AccountScope"
                },
                "SavingsPlansType": {
                    "$ref": "#/$defs/SupportedSavingsPlansType"
                },
                "TermInYears": {
                    "$ref": "#/$defs/TermInYears"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/PaymentOption"
                },
                "LookbackPeriodInDays": {
                    "$ref": "#/$defs/LookbackPeriodInDays"
                },
                "SavingsPlansPurchaseRecommendationDetails": {
                    "$ref": "#/$defs/SavingsPlansPurchaseRecommendationDetailList"
                },
                "SavingsPlansPurchaseRecommendationSummary": {
                    "$ref": "#/$defs/SavingsPlansPurchaseRecommendationSummary"
                }
            }
        },
        "SavingsPlansPurchaseRecommendationDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SavingsPlansPurchaseRecommendationDetail"
            }
        },
        "SavingsPlansPurchaseRecommendationDetail": {
            "type": "object",
            "properties": {
                "SavingsPlansDetails": {
                    "$ref": "#/$defs/SavingsPlansDetails"
                },
                "AccountId": {
                    "$ref": "#/$defs/GenericString"
                },
                "UpfrontCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedROI": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedSPCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedOnDemandCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedOnDemandCostWithCurrentCommitment": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedSavingsAmount": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedSavingsPercentage": {
                    "$ref": "#/$defs/GenericString"
                },
                "HourlyCommitmentToPurchase": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedAverageUtilization": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedMonthlySavingsAmount": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentMinimumHourlyOnDemandSpend": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentMaximumHourlyOnDemandSpend": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentAverageHourlyOnDemandSpend": {
                    "$ref": "#/$defs/GenericString"
                },
                "RecommendationDetailId": {
                    "$ref": "#/$defs/RecommendationDetailId"
                }
            }
        },
        "SavingsPlansDetails": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/GenericString"
                },
                "InstanceFamily": {
                    "$ref": "#/$defs/GenericString"
                },
                "OfferingId": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "SavingsPlansPurchaseRecommendationSummary": {
            "type": "object",
            "properties": {
                "EstimatedROI": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedTotalCost": {
                    "$ref": "#/$defs/GenericString"
                },
                "CurrentOnDemandSpend": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedSavingsAmount": {
                    "$ref": "#/$defs/GenericString"
                },
                "TotalRecommendationCount": {
                    "$ref": "#/$defs/GenericString"
                },
                "DailyCommitmentToPurchase": {
                    "$ref": "#/$defs/GenericString"
                },
                "HourlyCommitmentToPurchase": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedSavingsPercentage": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedMonthlySavingsAmount": {
                    "$ref": "#/$defs/GenericString"
                },
                "EstimatedOnDemandCostWithCurrentCommitment": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "GetSavingsPlansPurchaseRecommendationRequest": {
            "type": "object",
            "properties": {
                "SavingsPlansType": {
                    "$ref": "#/$defs/SupportedSavingsPlansType"
                },
                "TermInYears": {
                    "$ref": "#/$defs/TermInYears"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/PaymentOption"
                },
                "AccountScope": {
                    "$ref": "#/$defs/AccountScope"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/NonNegativeInteger"
                },
                "LookbackPeriodInDays": {
                    "$ref": "#/$defs/LookbackPeriodInDays"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                }
            }
        },
        "GetSavingsPlansUtilizationResponse": {
            "type": "object",
            "properties": {
                "SavingsPlansUtilizationsByTime": {
                    "$ref": "#/$defs/SavingsPlansUtilizationsByTime"
                },
                "Total": {
                    "$ref": "#/$defs/SavingsPlansUtilizationAggregates"
                }
            }
        },
        "SavingsPlansUtilizationsByTime": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SavingsPlansUtilizationByTime"
            }
        },
        "SavingsPlansUtilizationByTime": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "Utilization": {
                    "$ref": "#/$defs/SavingsPlansUtilization"
                },
                "Savings": {
                    "$ref": "#/$defs/SavingsPlansSavings"
                },
                "AmortizedCommitment": {
                    "$ref": "#/$defs/SavingsPlansAmortizedCommitment"
                }
            }
        },
        "SavingsPlansUtilization": {
            "type": "object",
            "properties": {
                "TotalCommitment": {
                    "$ref": "#/$defs/GenericString"
                },
                "UsedCommitment": {
                    "$ref": "#/$defs/GenericString"
                },
                "UnusedCommitment": {
                    "$ref": "#/$defs/GenericString"
                },
                "UtilizationPercentage": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "SavingsPlansSavings": {
            "type": "object",
            "properties": {
                "NetSavings": {
                    "$ref": "#/$defs/GenericString"
                },
                "OnDemandCostEquivalent": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "SavingsPlansAmortizedCommitment": {
            "type": "object",
            "properties": {
                "AmortizedRecurringCommitment": {
                    "$ref": "#/$defs/GenericString"
                },
                "AmortizedUpfrontCommitment": {
                    "$ref": "#/$defs/GenericString"
                },
                "TotalAmortizedCommitment": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "SavingsPlansUtilizationAggregates": {
            "type": "object",
            "properties": {
                "Utilization": {
                    "$ref": "#/$defs/SavingsPlansUtilization"
                },
                "Savings": {
                    "$ref": "#/$defs/SavingsPlansSavings"
                },
                "AmortizedCommitment": {
                    "$ref": "#/$defs/SavingsPlansAmortizedCommitment"
                }
            }
        },
        "GetSavingsPlansUtilizationRequest": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "Granularity": {
                    "$ref": "#/$defs/Granularity"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "SortBy": {
                    "$ref": "#/$defs/SortDefinition"
                }
            }
        },
        "GetSavingsPlansUtilizationDetailsResponse": {
            "type": "object",
            "properties": {
                "SavingsPlansUtilizationDetails": {
                    "$ref": "#/$defs/SavingsPlansUtilizationDetails"
                },
                "Total": {
                    "$ref": "#/$defs/SavingsPlansUtilizationAggregates"
                },
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "SavingsPlansUtilizationDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SavingsPlansUtilizationDetail"
            }
        },
        "SavingsPlansUtilizationDetail": {
            "type": "object",
            "properties": {
                "SavingsPlanArn": {
                    "$ref": "#/$defs/SavingsPlanArn"
                },
                "Attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "Utilization": {
                    "$ref": "#/$defs/SavingsPlansUtilization"
                },
                "Savings": {
                    "$ref": "#/$defs/SavingsPlansSavings"
                },
                "AmortizedCommitment": {
                    "$ref": "#/$defs/SavingsPlansAmortizedCommitment"
                }
            }
        },
        "SavingsPlanArn": {
            "type": "string"
        },
        "GetSavingsPlansUtilizationDetailsRequest": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "DataType": {
                    "$ref": "#/$defs/SavingsPlansDataTypes"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "SortBy": {
                    "$ref": "#/$defs/SortDefinition"
                }
            }
        },
        "SavingsPlansDataTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SavingsPlansDataType"
            }
        },
        "SavingsPlansDataType": {
            "enum": [
                "ATTRIBUTES",
                "UTILIZATION",
                "AMORTIZED_COMMITMENT",
                "SAVINGS"
            ]
        },
        "GetTagsResponse": {
            "type": "object",
            "properties": {
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ReturnSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "TotalSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Entity"
            }
        },
        "Entity": {
            "type": "string"
        },
        "GetTagsRequest": {
            "type": "object",
            "properties": {
                "SearchString": {
                    "$ref": "#/$defs/SearchString"
                },
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "TagKey": {
                    "$ref": "#/$defs/TagKey"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "SortBy": {
                    "$ref": "#/$defs/SortDefinitions"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "GetUsageForecastResponse": {
            "type": "object",
            "properties": {
                "Total": {
                    "$ref": "#/$defs/MetricValue"
                },
                "ForecastResultsByTime": {
                    "$ref": "#/$defs/ForecastResultsByTime"
                }
            }
        },
        "GetUsageForecastRequest": {
            "type": "object",
            "properties": {
                "TimePeriod": {
                    "$ref": "#/$defs/DateInterval"
                },
                "Metric": {
                    "$ref": "#/$defs/Metric"
                },
                "Granularity": {
                    "$ref": "#/$defs/Granularity"
                },
                "Filter": {
                    "$ref": "#/$defs/Expression"
                },
                "PredictionIntervalLevel": {
                    "$ref": "#/$defs/PredictionIntervalLevel"
                }
            }
        },
        "ListCostAllocationTagBackfillHistoryResponse": {
            "type": "object",
            "properties": {
                "BackfillRequests": {
                    "$ref": "#/$defs/CostAllocationTagBackfillRequestList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "CostAllocationTagBackfillRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CostAllocationTagBackfillRequest"
            }
        },
        "CostAllocationTagBackfillRequest": {
            "type": "object",
            "properties": {
                "BackfillFrom": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "RequestedAt": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "CompletedAt": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "BackfillStatus": {
                    "$ref": "#/$defs/CostAllocationTagBackfillStatus"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/ZonedDateTime"
                }
            }
        },
        "CostAllocationTagBackfillStatus": {
            "enum": [
                "SUCCEEDED",
                "PROCESSING",
                "FAILED"
            ]
        },
        "ListCostAllocationTagBackfillHistoryRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/CostAllocationTagsMaxResults"
                }
            }
        },
        "CostAllocationTagsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListCostAllocationTagsResponse": {
            "type": "object",
            "properties": {
                "CostAllocationTags": {
                    "$ref": "#/$defs/CostAllocationTagList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "CostAllocationTagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CostAllocationTag"
            }
        },
        "CostAllocationTag": {
            "type": "object",
            "properties": {
                "TagKey": {
                    "$ref": "#/$defs/TagKey"
                },
                "Type": {
                    "$ref": "#/$defs/CostAllocationTagType"
                },
                "Status": {
                    "$ref": "#/$defs/CostAllocationTagStatus"
                },
                "LastUpdatedDate": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "LastUsedDate": {
                    "$ref": "#/$defs/ZonedDateTime"
                }
            }
        },
        "CostAllocationTagType": {
            "enum": [
                "AWS_GENERATED",
                "USER_DEFINED"
            ]
        },
        "CostAllocationTagStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "ListCostAllocationTagsRequest": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/CostAllocationTagStatus"
                },
                "TagKeys": {
                    "$ref": "#/$defs/CostAllocationTagKeyList"
                },
                "Type": {
                    "$ref": "#/$defs/CostAllocationTagType"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/CostAllocationTagsMaxResults"
                }
            }
        },
        "CostAllocationTagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "ListCostCategoryDefinitionsResponse": {
            "type": "object",
            "properties": {
                "CostCategoryReferences": {
                    "$ref": "#/$defs/CostCategoryReferencesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "CostCategoryReferencesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CostCategoryReference"
            }
        },
        "CostCategoryReference": {
            "type": "object",
            "properties": {
                "CostCategoryArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Name": {
                    "$ref": "#/$defs/CostCategoryName"
                },
                "EffectiveStart": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "EffectiveEnd": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "NumberOfRules": {
                    "$ref": "#/$defs/NonNegativeInteger"
                },
                "ProcessingStatus": {
                    "$ref": "#/$defs/CostCategoryProcessingStatusList"
                },
                "Values": {
                    "$ref": "#/$defs/CostCategoryValuesList"
                },
                "DefaultValue": {
                    "$ref": "#/$defs/CostCategoryValue"
                }
            }
        },
        "ListCostCategoryDefinitionsRequest": {
            "type": "object",
            "properties": {
                "EffectiveOn": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextPageToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/CostCategoryMaxResults"
                }
            }
        },
        "CostCategoryMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListSavingsPlansPurchaseRecommendationGenerationResponse": {
            "type": "object",
            "properties": {
                "GenerationSummaryList": {
                    "$ref": "#/$defs/GenerationSummaryList"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "GenerationSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GenerationSummary"
            }
        },
        "GenerationSummary": {
            "type": "object",
            "properties": {
                "RecommendationId": {
                    "$ref": "#/$defs/RecommendationId"
                },
                "GenerationStatus": {
                    "$ref": "#/$defs/GenerationStatus"
                },
                "GenerationStartedTime": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "GenerationCompletionTime": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "EstimatedCompletionTime": {
                    "$ref": "#/$defs/ZonedDateTime"
                }
            }
        },
        "RecommendationId": {
            "type": "string"
        },
        "GenerationStatus": {
            "enum": [
                "SUCCEEDED",
                "PROCESSING",
                "FAILED"
            ]
        },
        "ListSavingsPlansPurchaseRecommendationGenerationRequest": {
            "type": "object",
            "properties": {
                "GenerationStatus": {
                    "$ref": "#/$defs/GenerationStatus"
                },
                "RecommendationIds": {
                    "$ref": "#/$defs/RecommendationIdList"
                },
                "PageSize": {
                    "$ref": "#/$defs/NonNegativeInteger"
                },
                "NextPageToken": {
                    "$ref": "#/$defs/NextPageToken"
                }
            }
        },
        "RecommendationIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationId"
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTagList"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ProvideAnomalyFeedbackResponse": {
            "type": "object",
            "properties": {
                "AnomalyId": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "ProvideAnomalyFeedbackRequest": {
            "type": "object",
            "properties": {
                "AnomalyId": {
                    "$ref": "#/$defs/GenericString"
                },
                "Feedback": {
                    "$ref": "#/$defs/AnomalyFeedbackType"
                }
            }
        },
        "StartCostAllocationTagBackfillResponse": {
            "type": "object",
            "properties": {
                "BackfillRequest": {
                    "$ref": "#/$defs/CostAllocationTagBackfillRequest"
                }
            }
        },
        "StartCostAllocationTagBackfillRequest": {
            "type": "object",
            "properties": {
                "BackfillFrom": {
                    "$ref": "#/$defs/ZonedDateTime"
                }
            }
        },
        "StartSavingsPlansPurchaseRecommendationGenerationResponse": {
            "type": "object",
            "properties": {
                "RecommendationId": {
                    "$ref": "#/$defs/RecommendationId"
                },
                "GenerationStartedTime": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "EstimatedCompletionTime": {
                    "$ref": "#/$defs/ZonedDateTime"
                }
            }
        },
        "StartSavingsPlansPurchaseRecommendationGenerationRequest": {
            "type": "object",
            "properties": {}
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTagList"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "ResourceTagKeys": {
                    "$ref": "#/$defs/ResourceTagKeyList"
                }
            }
        },
        "ResourceTagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceTagKey"
            }
        },
        "UpdateAnomalyMonitorResponse": {
            "type": "object",
            "properties": {
                "MonitorArn": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "UpdateAnomalyMonitorRequest": {
            "type": "object",
            "properties": {
                "MonitorArn": {
                    "$ref": "#/$defs/GenericString"
                },
                "MonitorName": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "UpdateAnomalySubscriptionResponse": {
            "type": "object",
            "properties": {
                "SubscriptionArn": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "UpdateAnomalySubscriptionRequest": {
            "type": "object",
            "properties": {
                "SubscriptionArn": {
                    "$ref": "#/$defs/GenericString"
                },
                "Threshold": {
                    "$ref": "#/$defs/NullableNonNegativeDouble"
                },
                "Frequency": {
                    "$ref": "#/$defs/AnomalySubscriptionFrequency"
                },
                "MonitorArnList": {
                    "$ref": "#/$defs/MonitorArnList"
                },
                "Subscribers": {
                    "$ref": "#/$defs/Subscribers"
                },
                "SubscriptionName": {
                    "$ref": "#/$defs/GenericString"
                },
                "ThresholdExpression": {
                    "$ref": "#/$defs/Expression"
                }
            }
        },
        "UpdateCostAllocationTagsStatusResponse": {
            "type": "object",
            "properties": {
                "Errors": {
                    "$ref": "#/$defs/UpdateCostAllocationTagsStatusErrors"
                }
            }
        },
        "UpdateCostAllocationTagsStatusErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpdateCostAllocationTagsStatusError"
            }
        },
        "UpdateCostAllocationTagsStatusError": {
            "type": "object",
            "properties": {
                "TagKey": {
                    "$ref": "#/$defs/TagKey"
                },
                "Code": {
                    "$ref": "#/$defs/GenericString"
                },
                "Message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ErrorMessage": {
            "type": "string"
        },
        "UpdateCostAllocationTagsStatusRequest": {
            "type": "object",
            "properties": {
                "CostAllocationTagsStatus": {
                    "$ref": "#/$defs/CostAllocationTagStatusList"
                }
            }
        },
        "CostAllocationTagStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CostAllocationTagStatusEntry"
            }
        },
        "CostAllocationTagStatusEntry": {
            "type": "object",
            "properties": {
                "TagKey": {
                    "$ref": "#/$defs/TagKey"
                },
                "Status": {
                    "$ref": "#/$defs/CostAllocationTagStatus"
                }
            }
        },
        "UpdateCostCategoryDefinitionResponse": {
            "type": "object",
            "properties": {
                "CostCategoryArn": {
                    "$ref": "#/$defs/Arn"
                },
                "EffectiveStart": {
                    "$ref": "#/$defs/ZonedDateTime"
                }
            }
        },
        "UpdateCostCategoryDefinitionRequest": {
            "type": "object",
            "properties": {
                "CostCategoryArn": {
                    "$ref": "#/$defs/Arn"
                },
                "EffectiveStart": {
                    "$ref": "#/$defs/ZonedDateTime"
                },
                "RuleVersion": {
                    "$ref": "#/$defs/CostCategoryRuleVersion"
                },
                "Rules": {
                    "$ref": "#/$defs/CostCategoryRulesList"
                },
                "DefaultValue": {
                    "$ref": "#/$defs/CostCategoryValue"
                },
                "SplitChargeRules": {
                    "$ref": "#/$defs/CostCategorySplitChargeRulesList"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "PartitionResult"
                                                        },
                                                        "name"
                                                    ]
                                                },
                                                "aws"
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                false
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                false
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://ce.us-east-1.amazonaws.com",
                                        "properties": {
                                            "authSchemes": [
                                                {
                                                    "name": "sigv4",
                                                    "signingName": "ce",
                                                    "signingRegion": "us-east-1"
                                                }
                                            ]
                                        },
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "PartitionResult"
                                                        },
                                                        "name"
                                                    ]
                                                },
                                                "aws-cn"
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                false
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                false
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://ce.cn-northwest-1.amazonaws.com.cn",
                                        "properties": {
                                            "authSchemes": [
                                                {
                                                    "name": "sigv4",
                                                    "signingName": "ce",
                                                    "signingRegion": "cn-northwest-1"
                                                }
                                            ]
                                        },
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://ce-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://ce-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://ce.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://ce.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}