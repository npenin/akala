{
    "name": "amplify",
    "commands": [
        {
            "name": "CreateApp",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/apps"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAppResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAppRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateBackendEnvironment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/apps/{appId}/backendenvironments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBackendEnvironmentResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBackendEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateBranch",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/apps/{appId}/branches"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBranchResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBranchRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDeployment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "branchName": "route.branchName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/apps/{appId}/branches/{branchName}/deployments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDeploymentResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.branchName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDeploymentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDomainAssociation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/apps/{appId}/domains"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDomainAssociationResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDomainAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateWebhook",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/apps/{appId}/webhooks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateWebhookResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateWebhookRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteApp",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/apps/{appId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAppResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAppRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteBackendEnvironment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "environmentName": "route.environmentName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/apps/{appId}/backendenvironments/{environmentName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBackendEnvironmentResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.environmentName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBackendEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteBranch",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "branchName": "route.branchName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/apps/{appId}/branches/{branchName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBranchResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.branchName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBranchRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDomainAssociation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "domainName": "route.domainName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/apps/{appId}/domains/{domainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDomainAssociationResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.domainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDomainAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "branchName": "route.branchName",
                            "jobId": "route.jobId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/apps/{appId}/branches/{branchName}/jobs/{jobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteJobResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.branchName",
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteWebhook",
            "config": {
                "http": {
                    "inject": [
                        {
                            "webhookId": "route.webhookId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/webhooks/{webhookId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteWebhookResult"
                    },
                    "inject": [
                        "param.0.webhookId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteWebhookRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GenerateAccessLogs",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/apps/{appId}/accesslogs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GenerateAccessLogsResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GenerateAccessLogsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetApp",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/apps/{appId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAppResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAppRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetArtifactUrl",
            "config": {
                "http": {
                    "inject": [
                        {
                            "artifactId": "route.artifactId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/artifacts/{artifactId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetArtifactUrlResult"
                    },
                    "inject": [
                        "param.0.artifactId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetArtifactUrlRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBackendEnvironment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "environmentName": "route.environmentName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/apps/{appId}/backendenvironments/{environmentName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackendEnvironmentResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.environmentName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBackendEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBranch",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "branchName": "route.branchName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/apps/{appId}/branches/{branchName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBranchResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.branchName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBranchRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDomainAssociation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "domainName": "route.domainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/apps/{appId}/domains/{domainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDomainAssociationResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.domainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDomainAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "branchName": "route.branchName",
                            "jobId": "route.jobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/apps/{appId}/branches/{branchName}/jobs/{jobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetJobResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.branchName",
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWebhook",
            "config": {
                "http": {
                    "inject": [
                        {
                            "webhookId": "route.webhookId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/webhooks/{webhookId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWebhookResult"
                    },
                    "inject": [
                        "param.0.webhookId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWebhookRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListApps",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/apps"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAppsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAppsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListArtifacts",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "branchName": "route.branchName",
                            "jobId": "route.jobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/apps/{appId}/branches/{branchName}/jobs/{jobId}/artifacts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListArtifactsResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.branchName",
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListArtifactsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListBackendEnvironments",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/apps/{appId}/backendenvironments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBackendEnvironmentsResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBackendEnvironmentsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListBranches",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/apps/{appId}/branches"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBranchesResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBranchesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDomainAssociations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/apps/{appId}/domains"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDomainAssociationsResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDomainAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListJobs",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "branchName": "route.branchName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/apps/{appId}/branches/{branchName}/jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListJobsResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.branchName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListWebhooks",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/apps/{appId}/webhooks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListWebhooksResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListWebhooksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartDeployment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "branchName": "route.branchName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/apps/{appId}/branches/{branchName}/deployments/start"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartDeploymentResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.branchName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartDeploymentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "branchName": "route.branchName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/apps/{appId}/branches/{branchName}/jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartJobResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.branchName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "branchName": "route.branchName",
                            "jobId": "route.jobId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/apps/{appId}/branches/{branchName}/jobs/{jobId}/stop"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopJobResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.branchName",
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateApp",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/apps/{appId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAppResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAppRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateBranch",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "branchName": "route.branchName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/apps/{appId}/branches/{branchName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBranchResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.branchName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBranchRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDomainAssociation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "appId": "route.appId",
                            "domainName": "route.domainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/apps/{appId}/domains/{domainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDomainAssociationResult"
                    },
                    "inject": [
                        "param.0.appId",
                        "param.0.domainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDomainAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateWebhook",
            "config": {
                "http": {
                    "inject": [
                        {
                            "webhookId": "route.webhookId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/webhooks/{webhookId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateWebhookResult"
                    },
                    "inject": [
                        "param.0.webhookId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateWebhookRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateAppResult": {
            "type": "object",
            "properties": {
                "app": {
                    "$ref": "#/$defs/App"
                }
            }
        },
        "App": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "appArn": {
                    "$ref": "#/$defs/AppArn"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "repository": {
                    "$ref": "#/$defs/Repository"
                },
                "platform": {
                    "$ref": "#/$defs/Platform"
                },
                "createTime": {
                    "$ref": "#/$defs/CreateTime"
                },
                "updateTime": {
                    "$ref": "#/$defs/UpdateTime"
                },
                "iamServiceRoleArn": {
                    "$ref": "#/$defs/ServiceRoleArn"
                },
                "environmentVariables": {
                    "$ref": "#/$defs/EnvironmentVariables"
                },
                "defaultDomain": {
                    "$ref": "#/$defs/DefaultDomain"
                },
                "enableBranchAutoBuild": {
                    "$ref": "#/$defs/EnableBranchAutoBuild"
                },
                "enableBranchAutoDeletion": {
                    "$ref": "#/$defs/EnableBranchAutoDeletion"
                },
                "enableBasicAuth": {
                    "$ref": "#/$defs/EnableBasicAuth"
                },
                "basicAuthCredentials": {
                    "$ref": "#/$defs/BasicAuthCredentials"
                },
                "customRules": {
                    "$ref": "#/$defs/CustomRules"
                },
                "productionBranch": {
                    "$ref": "#/$defs/ProductionBranch"
                },
                "buildSpec": {
                    "$ref": "#/$defs/BuildSpec"
                },
                "customHeaders": {
                    "$ref": "#/$defs/CustomHeaders"
                },
                "enableAutoBranchCreation": {
                    "$ref": "#/$defs/EnableAutoBranchCreation"
                },
                "autoBranchCreationPatterns": {
                    "$ref": "#/$defs/AutoBranchCreationPatterns"
                },
                "autoBranchCreationConfig": {
                    "$ref": "#/$defs/AutoBranchCreationConfig"
                },
                "repositoryCloneMethod": {
                    "$ref": "#/$defs/RepositoryCloneMethod"
                },
                "cacheConfig": {
                    "$ref": "#/$defs/CacheConfig"
                }
            }
        },
        "AppId": {
            "type": "string"
        },
        "AppArn": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "Repository": {
            "type": "string"
        },
        "Platform": {
            "enum": [
                "WEB",
                "WEB_DYNAMIC",
                "WEB_COMPUTE"
            ]
        },
        "CreateTime": {
            "type": "string",
            "format": "date-time"
        },
        "UpdateTime": {
            "type": "string",
            "format": "date-time"
        },
        "ServiceRoleArn": {
            "type": "string"
        },
        "EnvironmentVariables": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/EnvValue"
            }
        },
        "EnvValue": {
            "type": "string"
        },
        "DefaultDomain": {
            "type": "string"
        },
        "EnableBranchAutoBuild": {
            "type": "boolean"
        },
        "EnableBranchAutoDeletion": {
            "type": "boolean"
        },
        "EnableBasicAuth": {
            "type": "boolean"
        },
        "BasicAuthCredentials": {
            "type": "string"
        },
        "CustomRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomRule"
            }
        },
        "CustomRule": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/Source"
                },
                "target": {
                    "$ref": "#/$defs/Target"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "condition": {
                    "$ref": "#/$defs/Condition"
                }
            }
        },
        "Source": {
            "type": "string"
        },
        "Target": {
            "type": "string"
        },
        "Status": {
            "type": "string"
        },
        "Condition": {
            "type": "string"
        },
        "ProductionBranch": {
            "type": "object",
            "properties": {
                "lastDeployTime": {
                    "$ref": "#/$defs/LastDeployTime"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "thumbnailUrl": {
                    "$ref": "#/$defs/ThumbnailUrl"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                }
            }
        },
        "LastDeployTime": {
            "type": "string",
            "format": "date-time"
        },
        "ThumbnailUrl": {
            "type": "string"
        },
        "BranchName": {
            "type": "string"
        },
        "BuildSpec": {
            "type": "string"
        },
        "CustomHeaders": {
            "type": "string"
        },
        "EnableAutoBranchCreation": {
            "type": "boolean"
        },
        "AutoBranchCreationPatterns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoBranchCreationPattern"
            }
        },
        "AutoBranchCreationPattern": {
            "type": "string"
        },
        "AutoBranchCreationConfig": {
            "type": "object",
            "properties": {
                "stage": {
                    "$ref": "#/$defs/Stage"
                },
                "framework": {
                    "$ref": "#/$defs/Framework"
                },
                "enableAutoBuild": {
                    "$ref": "#/$defs/EnableAutoBuild"
                },
                "environmentVariables": {
                    "$ref": "#/$defs/EnvironmentVariables"
                },
                "basicAuthCredentials": {
                    "$ref": "#/$defs/BasicAuthCredentials"
                },
                "enableBasicAuth": {
                    "$ref": "#/$defs/EnableBasicAuth"
                },
                "enablePerformanceMode": {
                    "$ref": "#/$defs/EnablePerformanceMode"
                },
                "buildSpec": {
                    "$ref": "#/$defs/BuildSpec"
                },
                "enablePullRequestPreview": {
                    "$ref": "#/$defs/EnablePullRequestPreview"
                },
                "pullRequestEnvironmentName": {
                    "$ref": "#/$defs/PullRequestEnvironmentName"
                }
            }
        },
        "Stage": {
            "enum": [
                "PRODUCTION",
                "BETA",
                "DEVELOPMENT",
                "EXPERIMENTAL",
                "PULL_REQUEST"
            ]
        },
        "Framework": {
            "type": "string"
        },
        "EnableAutoBuild": {
            "type": "boolean"
        },
        "EnablePerformanceMode": {
            "type": "boolean"
        },
        "EnablePullRequestPreview": {
            "type": "boolean"
        },
        "PullRequestEnvironmentName": {
            "type": "string"
        },
        "RepositoryCloneMethod": {
            "enum": [
                "SSH",
                "TOKEN",
                "SIGV4"
            ]
        },
        "CacheConfig": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/CacheConfigType"
                }
            }
        },
        "CacheConfigType": {
            "enum": [
                "AMPLIFY_MANAGED",
                "AMPLIFY_MANAGED_NO_COOKIES"
            ]
        },
        "CreateAppRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "repository": {
                    "$ref": "#/$defs/Repository"
                },
                "platform": {
                    "$ref": "#/$defs/Platform"
                },
                "iamServiceRoleArn": {
                    "$ref": "#/$defs/ServiceRoleArn"
                },
                "oauthToken": {
                    "$ref": "#/$defs/OauthToken"
                },
                "accessToken": {
                    "$ref": "#/$defs/AccessToken"
                },
                "environmentVariables": {
                    "$ref": "#/$defs/EnvironmentVariables"
                },
                "enableBranchAutoBuild": {
                    "$ref": "#/$defs/EnableBranchAutoBuild"
                },
                "enableBranchAutoDeletion": {
                    "$ref": "#/$defs/EnableBranchAutoDeletion"
                },
                "enableBasicAuth": {
                    "$ref": "#/$defs/EnableBasicAuth"
                },
                "basicAuthCredentials": {
                    "$ref": "#/$defs/BasicAuthCredentials"
                },
                "customRules": {
                    "$ref": "#/$defs/CustomRules"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "buildSpec": {
                    "$ref": "#/$defs/BuildSpec"
                },
                "customHeaders": {
                    "$ref": "#/$defs/CustomHeaders"
                },
                "enableAutoBranchCreation": {
                    "$ref": "#/$defs/EnableAutoBranchCreation"
                },
                "autoBranchCreationPatterns": {
                    "$ref": "#/$defs/AutoBranchCreationPatterns"
                },
                "autoBranchCreationConfig": {
                    "$ref": "#/$defs/AutoBranchCreationConfig"
                },
                "cacheConfig": {
                    "$ref": "#/$defs/CacheConfig"
                }
            }
        },
        "OauthToken": {
            "type": "string"
        },
        "AccessToken": {
            "type": "string"
        },
        "CreateBackendEnvironmentResult": {
            "type": "object",
            "properties": {
                "backendEnvironment": {
                    "$ref": "#/$defs/BackendEnvironment"
                }
            }
        },
        "BackendEnvironment": {
            "type": "object",
            "properties": {
                "backendEnvironmentArn": {
                    "$ref": "#/$defs/BackendEnvironmentArn"
                },
                "environmentName": {
                    "$ref": "#/$defs/EnvironmentName"
                },
                "stackName": {
                    "$ref": "#/$defs/StackName"
                },
                "deploymentArtifacts": {
                    "$ref": "#/$defs/DeploymentArtifacts"
                },
                "createTime": {
                    "$ref": "#/$defs/CreateTime"
                },
                "updateTime": {
                    "$ref": "#/$defs/UpdateTime"
                }
            }
        },
        "BackendEnvironmentArn": {
            "type": "string"
        },
        "EnvironmentName": {
            "type": "string"
        },
        "StackName": {
            "type": "string"
        },
        "DeploymentArtifacts": {
            "type": "string"
        },
        "CreateBackendEnvironmentRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "environmentName": {
                    "$ref": "#/$defs/EnvironmentName"
                },
                "stackName": {
                    "$ref": "#/$defs/StackName"
                },
                "deploymentArtifacts": {
                    "$ref": "#/$defs/DeploymentArtifacts"
                }
            }
        },
        "CreateBranchResult": {
            "type": "object",
            "properties": {
                "branch": {
                    "$ref": "#/$defs/Branch"
                }
            }
        },
        "Branch": {
            "type": "object",
            "properties": {
                "branchArn": {
                    "$ref": "#/$defs/BranchArn"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "stage": {
                    "$ref": "#/$defs/Stage"
                },
                "displayName": {
                    "$ref": "#/$defs/DisplayName"
                },
                "enableNotification": {
                    "$ref": "#/$defs/EnableNotification"
                },
                "createTime": {
                    "$ref": "#/$defs/CreateTime"
                },
                "updateTime": {
                    "$ref": "#/$defs/UpdateTime"
                },
                "environmentVariables": {
                    "$ref": "#/$defs/EnvironmentVariables"
                },
                "enableAutoBuild": {
                    "$ref": "#/$defs/EnableAutoBuild"
                },
                "customDomains": {
                    "$ref": "#/$defs/CustomDomains"
                },
                "framework": {
                    "$ref": "#/$defs/Framework"
                },
                "activeJobId": {
                    "$ref": "#/$defs/ActiveJobId"
                },
                "totalNumberOfJobs": {
                    "$ref": "#/$defs/TotalNumberOfJobs"
                },
                "enableBasicAuth": {
                    "$ref": "#/$defs/EnableBasicAuth"
                },
                "enablePerformanceMode": {
                    "$ref": "#/$defs/EnablePerformanceMode"
                },
                "thumbnailUrl": {
                    "$ref": "#/$defs/ThumbnailUrl"
                },
                "basicAuthCredentials": {
                    "$ref": "#/$defs/BasicAuthCredentials"
                },
                "buildSpec": {
                    "$ref": "#/$defs/BuildSpec"
                },
                "ttl": {
                    "$ref": "#/$defs/TTL"
                },
                "associatedResources": {
                    "$ref": "#/$defs/AssociatedResources"
                },
                "enablePullRequestPreview": {
                    "$ref": "#/$defs/EnablePullRequestPreview"
                },
                "pullRequestEnvironmentName": {
                    "$ref": "#/$defs/PullRequestEnvironmentName"
                },
                "destinationBranch": {
                    "$ref": "#/$defs/BranchName"
                },
                "sourceBranch": {
                    "$ref": "#/$defs/BranchName"
                },
                "backendEnvironmentArn": {
                    "$ref": "#/$defs/BackendEnvironmentArn"
                },
                "backend": {
                    "$ref": "#/$defs/Backend"
                }
            }
        },
        "BranchArn": {
            "type": "string"
        },
        "DisplayName": {
            "type": "string"
        },
        "EnableNotification": {
            "type": "boolean"
        },
        "CustomDomains": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomDomain"
            }
        },
        "CustomDomain": {
            "type": "string"
        },
        "ActiveJobId": {
            "type": "string"
        },
        "TotalNumberOfJobs": {
            "type": "string"
        },
        "TTL": {
            "type": "string"
        },
        "AssociatedResources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssociatedResource"
            }
        },
        "AssociatedResource": {
            "type": "string"
        },
        "Backend": {
            "type": "object",
            "properties": {
                "stackArn": {
                    "$ref": "#/$defs/StackArn"
                }
            }
        },
        "StackArn": {
            "type": "string"
        },
        "CreateBranchRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "stage": {
                    "$ref": "#/$defs/Stage"
                },
                "framework": {
                    "$ref": "#/$defs/Framework"
                },
                "enableNotification": {
                    "$ref": "#/$defs/EnableNotification"
                },
                "enableAutoBuild": {
                    "$ref": "#/$defs/EnableAutoBuild"
                },
                "environmentVariables": {
                    "$ref": "#/$defs/EnvironmentVariables"
                },
                "basicAuthCredentials": {
                    "$ref": "#/$defs/BasicAuthCredentials"
                },
                "enableBasicAuth": {
                    "$ref": "#/$defs/EnableBasicAuth"
                },
                "enablePerformanceMode": {
                    "$ref": "#/$defs/EnablePerformanceMode"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "buildSpec": {
                    "$ref": "#/$defs/BuildSpec"
                },
                "ttl": {
                    "$ref": "#/$defs/TTL"
                },
                "displayName": {
                    "$ref": "#/$defs/DisplayName"
                },
                "enablePullRequestPreview": {
                    "$ref": "#/$defs/EnablePullRequestPreview"
                },
                "pullRequestEnvironmentName": {
                    "$ref": "#/$defs/PullRequestEnvironmentName"
                },
                "backendEnvironmentArn": {
                    "$ref": "#/$defs/BackendEnvironmentArn"
                },
                "backend": {
                    "$ref": "#/$defs/Backend"
                }
            }
        },
        "CreateDeploymentResult": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "fileUploadUrls": {
                    "$ref": "#/$defs/FileUploadUrls"
                },
                "zipUploadUrl": {
                    "$ref": "#/$defs/UploadUrl"
                }
            }
        },
        "JobId": {
            "type": "string"
        },
        "FileUploadUrls": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/UploadUrl"
            }
        },
        "UploadUrl": {
            "type": "string"
        },
        "CreateDeploymentRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "fileMap": {
                    "$ref": "#/$defs/FileMap"
                }
            }
        },
        "FileMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MD5Hash"
            }
        },
        "MD5Hash": {
            "type": "string"
        },
        "CreateDomainAssociationResult": {
            "type": "object",
            "properties": {
                "domainAssociation": {
                    "$ref": "#/$defs/DomainAssociation"
                }
            }
        },
        "DomainAssociation": {
            "type": "object",
            "properties": {
                "domainAssociationArn": {
                    "$ref": "#/$defs/DomainAssociationArn"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "enableAutoSubDomain": {
                    "$ref": "#/$defs/EnableAutoSubDomain"
                },
                "autoSubDomainCreationPatterns": {
                    "$ref": "#/$defs/AutoSubDomainCreationPatterns"
                },
                "autoSubDomainIAMRole": {
                    "$ref": "#/$defs/AutoSubDomainIAMRole"
                },
                "domainStatus": {
                    "$ref": "#/$defs/DomainStatus"
                },
                "updateStatus": {
                    "$ref": "#/$defs/UpdateStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/StatusReason"
                },
                "certificateVerificationDNSRecord": {
                    "$ref": "#/$defs/CertificateVerificationDNSRecord"
                },
                "subDomains": {
                    "$ref": "#/$defs/SubDomains"
                },
                "certificate": {
                    "$ref": "#/$defs/Certificate"
                }
            }
        },
        "DomainAssociationArn": {
            "type": "string"
        },
        "DomainName": {
            "type": "string"
        },
        "EnableAutoSubDomain": {
            "type": "boolean"
        },
        "AutoSubDomainCreationPatterns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoSubDomainCreationPattern"
            }
        },
        "AutoSubDomainCreationPattern": {
            "type": "string"
        },
        "AutoSubDomainIAMRole": {
            "type": "string"
        },
        "DomainStatus": {
            "enum": [
                "PENDING_VERIFICATION",
                "IN_PROGRESS",
                "AVAILABLE",
                "IMPORTING_CUSTOM_CERTIFICATE",
                "PENDING_DEPLOYMENT",
                "AWAITING_APP_CNAME",
                "FAILED",
                "CREATING",
                "REQUESTING_CERTIFICATE",
                "UPDATING"
            ]
        },
        "UpdateStatus": {
            "enum": [
                "REQUESTING_CERTIFICATE",
                "PENDING_VERIFICATION",
                "IMPORTING_CUSTOM_CERTIFICATE",
                "PENDING_DEPLOYMENT",
                "AWAITING_APP_CNAME",
                "UPDATE_COMPLETE",
                "UPDATE_FAILED"
            ]
        },
        "StatusReason": {
            "type": "string"
        },
        "CertificateVerificationDNSRecord": {
            "type": "string"
        },
        "SubDomains": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubDomain"
            }
        },
        "SubDomain": {
            "type": "object",
            "properties": {
                "subDomainSetting": {
                    "$ref": "#/$defs/SubDomainSetting"
                },
                "verified": {
                    "$ref": "#/$defs/Verified"
                },
                "dnsRecord": {
                    "$ref": "#/$defs/DNSRecord"
                }
            }
        },
        "SubDomainSetting": {
            "type": "object",
            "properties": {
                "prefix": {
                    "$ref": "#/$defs/DomainPrefix"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                }
            }
        },
        "DomainPrefix": {
            "type": "string"
        },
        "Verified": {
            "type": "boolean"
        },
        "DNSRecord": {
            "type": "string"
        },
        "Certificate": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/CertificateType"
                },
                "customCertificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "certificateVerificationDNSRecord": {
                    "$ref": "#/$defs/CertificateVerificationDNSRecord"
                }
            }
        },
        "CertificateType": {
            "enum": [
                "AMPLIFY_MANAGED",
                "CUSTOM"
            ]
        },
        "CertificateArn": {
            "type": "string"
        },
        "CreateDomainAssociationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "enableAutoSubDomain": {
                    "$ref": "#/$defs/EnableAutoSubDomain"
                },
                "subDomainSettings": {
                    "$ref": "#/$defs/SubDomainSettings"
                },
                "autoSubDomainCreationPatterns": {
                    "$ref": "#/$defs/AutoSubDomainCreationPatterns"
                },
                "autoSubDomainIAMRole": {
                    "$ref": "#/$defs/AutoSubDomainIAMRole"
                },
                "certificateSettings": {
                    "$ref": "#/$defs/CertificateSettings"
                }
            }
        },
        "SubDomainSettings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubDomainSetting"
            }
        },
        "CertificateSettings": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/CertificateType"
                },
                "customCertificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                }
            }
        },
        "CreateWebhookResult": {
            "type": "object",
            "properties": {
                "webhook": {
                    "$ref": "#/$defs/Webhook"
                }
            }
        },
        "Webhook": {
            "type": "object",
            "properties": {
                "webhookArn": {
                    "$ref": "#/$defs/WebhookArn"
                },
                "webhookId": {
                    "$ref": "#/$defs/WebhookId"
                },
                "webhookUrl": {
                    "$ref": "#/$defs/WebhookUrl"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "createTime": {
                    "$ref": "#/$defs/CreateTime"
                },
                "updateTime": {
                    "$ref": "#/$defs/UpdateTime"
                }
            }
        },
        "WebhookArn": {
            "type": "string"
        },
        "WebhookId": {
            "type": "string"
        },
        "WebhookUrl": {
            "type": "string"
        },
        "CreateWebhookRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "DeleteAppResult": {
            "type": "object",
            "properties": {
                "app": {
                    "$ref": "#/$defs/App"
                }
            }
        },
        "DeleteAppRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                }
            }
        },
        "DeleteBackendEnvironmentResult": {
            "type": "object",
            "properties": {
                "backendEnvironment": {
                    "$ref": "#/$defs/BackendEnvironment"
                }
            }
        },
        "DeleteBackendEnvironmentRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "environmentName": {
                    "$ref": "#/$defs/EnvironmentName"
                }
            }
        },
        "DeleteBranchResult": {
            "type": "object",
            "properties": {
                "branch": {
                    "$ref": "#/$defs/Branch"
                }
            }
        },
        "DeleteBranchRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                }
            }
        },
        "DeleteDomainAssociationResult": {
            "type": "object",
            "properties": {
                "domainAssociation": {
                    "$ref": "#/$defs/DomainAssociation"
                }
            }
        },
        "DeleteDomainAssociationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "DeleteJobResult": {
            "type": "object",
            "properties": {
                "jobSummary": {
                    "$ref": "#/$defs/JobSummary"
                }
            }
        },
        "JobSummary": {
            "type": "object",
            "properties": {
                "jobArn": {
                    "$ref": "#/$defs/JobArn"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "commitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "commitMessage": {
                    "$ref": "#/$defs/CommitMessage"
                },
                "commitTime": {
                    "$ref": "#/$defs/CommitTime"
                },
                "startTime": {
                    "$ref": "#/$defs/StartTime"
                },
                "status": {
                    "$ref": "#/$defs/JobStatus"
                },
                "endTime": {
                    "$ref": "#/$defs/EndTime"
                },
                "jobType": {
                    "$ref": "#/$defs/JobType"
                }
            }
        },
        "JobArn": {
            "type": "string"
        },
        "CommitId": {
            "type": "string"
        },
        "CommitMessage": {
            "type": "string"
        },
        "CommitTime": {
            "type": "string",
            "format": "date-time"
        },
        "StartTime": {
            "type": "string",
            "format": "date-time"
        },
        "JobStatus": {
            "enum": [
                "PENDING",
                "PROVISIONING",
                "RUNNING",
                "FAILED",
                "SUCCEED",
                "CANCELLING",
                "CANCELLED"
            ]
        },
        "EndTime": {
            "type": "string",
            "format": "date-time"
        },
        "JobType": {
            "enum": [
                "RELEASE",
                "RETRY",
                "MANUAL",
                "WEB_HOOK"
            ]
        },
        "DeleteJobRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "DeleteWebhookResult": {
            "type": "object",
            "properties": {
                "webhook": {
                    "$ref": "#/$defs/Webhook"
                }
            }
        },
        "DeleteWebhookRequest": {
            "type": "object",
            "properties": {
                "webhookId": {
                    "$ref": "#/$defs/WebhookId"
                }
            }
        },
        "GenerateAccessLogsResult": {
            "type": "object",
            "properties": {
                "logUrl": {
                    "$ref": "#/$defs/LogUrl"
                }
            }
        },
        "LogUrl": {
            "type": "string"
        },
        "GenerateAccessLogsRequest": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/StartTime"
                },
                "endTime": {
                    "$ref": "#/$defs/EndTime"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "appId": {
                    "$ref": "#/$defs/AppId"
                }
            }
        },
        "GetAppResult": {
            "type": "object",
            "properties": {
                "app": {
                    "$ref": "#/$defs/App"
                }
            }
        },
        "GetAppRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                }
            }
        },
        "GetArtifactUrlResult": {
            "type": "object",
            "properties": {
                "artifactId": {
                    "$ref": "#/$defs/ArtifactId"
                },
                "artifactUrl": {
                    "$ref": "#/$defs/ArtifactUrl"
                }
            }
        },
        "ArtifactId": {
            "type": "string"
        },
        "ArtifactUrl": {
            "type": "string"
        },
        "GetArtifactUrlRequest": {
            "type": "object",
            "properties": {
                "artifactId": {
                    "$ref": "#/$defs/ArtifactId"
                }
            }
        },
        "GetBackendEnvironmentResult": {
            "type": "object",
            "properties": {
                "backendEnvironment": {
                    "$ref": "#/$defs/BackendEnvironment"
                }
            }
        },
        "GetBackendEnvironmentRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "environmentName": {
                    "$ref": "#/$defs/EnvironmentName"
                }
            }
        },
        "GetBranchResult": {
            "type": "object",
            "properties": {
                "branch": {
                    "$ref": "#/$defs/Branch"
                }
            }
        },
        "GetBranchRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                }
            }
        },
        "GetDomainAssociationResult": {
            "type": "object",
            "properties": {
                "domainAssociation": {
                    "$ref": "#/$defs/DomainAssociation"
                }
            }
        },
        "GetDomainAssociationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "GetJobResult": {
            "type": "object",
            "properties": {
                "job": {
                    "$ref": "#/$defs/Job"
                }
            }
        },
        "Job": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/$defs/JobSummary"
                },
                "steps": {
                    "$ref": "#/$defs/Steps"
                }
            }
        },
        "Steps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Step"
            }
        },
        "Step": {
            "type": "object",
            "properties": {
                "stepName": {
                    "$ref": "#/$defs/StepName"
                },
                "startTime": {
                    "$ref": "#/$defs/StartTime"
                },
                "status": {
                    "$ref": "#/$defs/JobStatus"
                },
                "endTime": {
                    "$ref": "#/$defs/EndTime"
                },
                "logUrl": {
                    "$ref": "#/$defs/LogUrl"
                },
                "artifactsUrl": {
                    "$ref": "#/$defs/ArtifactsUrl"
                },
                "testArtifactsUrl": {
                    "$ref": "#/$defs/TestArtifactsUrl"
                },
                "testConfigUrl": {
                    "$ref": "#/$defs/TestConfigUrl"
                },
                "screenshots": {
                    "$ref": "#/$defs/Screenshots"
                },
                "statusReason": {
                    "$ref": "#/$defs/StatusReason"
                },
                "context": {
                    "$ref": "#/$defs/Context"
                }
            }
        },
        "StepName": {
            "type": "string"
        },
        "ArtifactsUrl": {
            "type": "string"
        },
        "TestArtifactsUrl": {
            "type": "string"
        },
        "TestConfigUrl": {
            "type": "string"
        },
        "Screenshots": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ThumbnailUrl"
            }
        },
        "Context": {
            "type": "string"
        },
        "GetJobRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "GetWebhookResult": {
            "type": "object",
            "properties": {
                "webhook": {
                    "$ref": "#/$defs/Webhook"
                }
            }
        },
        "GetWebhookRequest": {
            "type": "object",
            "properties": {
                "webhookId": {
                    "$ref": "#/$defs/WebhookId"
                }
            }
        },
        "ListAppsResult": {
            "type": "object",
            "properties": {
                "apps": {
                    "$ref": "#/$defs/Apps"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Apps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/App"
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListAppsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResultsForListApps"
                }
            }
        },
        "MaxResultsForListApps": {
            "type": "integer",
            "format": "int32"
        },
        "ListArtifactsResult": {
            "type": "object",
            "properties": {
                "artifacts": {
                    "$ref": "#/$defs/Artifacts"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Artifacts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Artifact"
            }
        },
        "Artifact": {
            "type": "object",
            "properties": {
                "artifactFileName": {
                    "$ref": "#/$defs/ArtifactFileName"
                },
                "artifactId": {
                    "$ref": "#/$defs/ArtifactId"
                }
            }
        },
        "ArtifactFileName": {
            "type": "string"
        },
        "ListArtifactsRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListBackendEnvironmentsResult": {
            "type": "object",
            "properties": {
                "backendEnvironments": {
                    "$ref": "#/$defs/BackendEnvironments"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "BackendEnvironments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackendEnvironment"
            }
        },
        "ListBackendEnvironmentsRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "environmentName": {
                    "$ref": "#/$defs/EnvironmentName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListBranchesResult": {
            "type": "object",
            "properties": {
                "branches": {
                    "$ref": "#/$defs/Branches"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Branches": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Branch"
            }
        },
        "ListBranchesRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListDomainAssociationsResult": {
            "type": "object",
            "properties": {
                "domainAssociations": {
                    "$ref": "#/$defs/DomainAssociations"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DomainAssociations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainAssociation"
            }
        },
        "ListDomainAssociationsRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListJobsResult": {
            "type": "object",
            "properties": {
                "jobSummaries": {
                    "$ref": "#/$defs/JobSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "JobSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobSummary"
            }
        },
        "ListJobsRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "ListWebhooksResult": {
            "type": "object",
            "properties": {
                "webhooks": {
                    "$ref": "#/$defs/Webhooks"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Webhooks": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Webhook"
            }
        },
        "ListWebhooksRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "StartDeploymentResult": {
            "type": "object",
            "properties": {
                "jobSummary": {
                    "$ref": "#/$defs/JobSummary"
                }
            }
        },
        "StartDeploymentRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "sourceUrl": {
                    "$ref": "#/$defs/SourceUrl"
                }
            }
        },
        "SourceUrl": {
            "type": "string"
        },
        "StartJobResult": {
            "type": "object",
            "properties": {
                "jobSummary": {
                    "$ref": "#/$defs/JobSummary"
                }
            }
        },
        "StartJobRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "jobType": {
                    "$ref": "#/$defs/JobType"
                },
                "jobReason": {
                    "$ref": "#/$defs/JobReason"
                },
                "commitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "commitMessage": {
                    "$ref": "#/$defs/CommitMessage"
                },
                "commitTime": {
                    "$ref": "#/$defs/CommitTime"
                }
            }
        },
        "JobReason": {
            "type": "string"
        },
        "StopJobResult": {
            "type": "object",
            "properties": {
                "jobSummary": {
                    "$ref": "#/$defs/JobSummary"
                }
            }
        },
        "StopJobRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UpdateAppResult": {
            "type": "object",
            "properties": {
                "app": {
                    "$ref": "#/$defs/App"
                }
            }
        },
        "UpdateAppRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "platform": {
                    "$ref": "#/$defs/Platform"
                },
                "iamServiceRoleArn": {
                    "$ref": "#/$defs/ServiceRoleArn"
                },
                "environmentVariables": {
                    "$ref": "#/$defs/EnvironmentVariables"
                },
                "enableBranchAutoBuild": {
                    "$ref": "#/$defs/EnableAutoBuild"
                },
                "enableBranchAutoDeletion": {
                    "$ref": "#/$defs/EnableBranchAutoDeletion"
                },
                "enableBasicAuth": {
                    "$ref": "#/$defs/EnableBasicAuth"
                },
                "basicAuthCredentials": {
                    "$ref": "#/$defs/BasicAuthCredentials"
                },
                "customRules": {
                    "$ref": "#/$defs/CustomRules"
                },
                "buildSpec": {
                    "$ref": "#/$defs/BuildSpec"
                },
                "customHeaders": {
                    "$ref": "#/$defs/CustomHeaders"
                },
                "enableAutoBranchCreation": {
                    "$ref": "#/$defs/EnableAutoBranchCreation"
                },
                "autoBranchCreationPatterns": {
                    "$ref": "#/$defs/AutoBranchCreationPatterns"
                },
                "autoBranchCreationConfig": {
                    "$ref": "#/$defs/AutoBranchCreationConfig"
                },
                "repository": {
                    "$ref": "#/$defs/Repository"
                },
                "oauthToken": {
                    "$ref": "#/$defs/OauthToken"
                },
                "accessToken": {
                    "$ref": "#/$defs/AccessToken"
                },
                "cacheConfig": {
                    "$ref": "#/$defs/CacheConfig"
                }
            }
        },
        "UpdateBranchResult": {
            "type": "object",
            "properties": {
                "branch": {
                    "$ref": "#/$defs/Branch"
                }
            }
        },
        "UpdateBranchRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "framework": {
                    "$ref": "#/$defs/Framework"
                },
                "stage": {
                    "$ref": "#/$defs/Stage"
                },
                "enableNotification": {
                    "$ref": "#/$defs/EnableNotification"
                },
                "enableAutoBuild": {
                    "$ref": "#/$defs/EnableAutoBuild"
                },
                "environmentVariables": {
                    "$ref": "#/$defs/EnvironmentVariables"
                },
                "basicAuthCredentials": {
                    "$ref": "#/$defs/BasicAuthCredentials"
                },
                "enableBasicAuth": {
                    "$ref": "#/$defs/EnableBasicAuth"
                },
                "enablePerformanceMode": {
                    "$ref": "#/$defs/EnablePerformanceMode"
                },
                "buildSpec": {
                    "$ref": "#/$defs/BuildSpec"
                },
                "ttl": {
                    "$ref": "#/$defs/TTL"
                },
                "displayName": {
                    "$ref": "#/$defs/DisplayName"
                },
                "enablePullRequestPreview": {
                    "$ref": "#/$defs/EnablePullRequestPreview"
                },
                "pullRequestEnvironmentName": {
                    "$ref": "#/$defs/PullRequestEnvironmentName"
                },
                "backendEnvironmentArn": {
                    "$ref": "#/$defs/BackendEnvironmentArn"
                },
                "backend": {
                    "$ref": "#/$defs/Backend"
                }
            }
        },
        "UpdateDomainAssociationResult": {
            "type": "object",
            "properties": {
                "domainAssociation": {
                    "$ref": "#/$defs/DomainAssociation"
                }
            }
        },
        "UpdateDomainAssociationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "enableAutoSubDomain": {
                    "$ref": "#/$defs/EnableAutoSubDomain"
                },
                "subDomainSettings": {
                    "$ref": "#/$defs/SubDomainSettings"
                },
                "autoSubDomainCreationPatterns": {
                    "$ref": "#/$defs/AutoSubDomainCreationPatterns"
                },
                "autoSubDomainIAMRole": {
                    "$ref": "#/$defs/AutoSubDomainIAMRole"
                },
                "certificateSettings": {
                    "$ref": "#/$defs/CertificateSettings"
                }
            }
        },
        "UpdateWebhookResult": {
            "type": "object",
            "properties": {
                "webhook": {
                    "$ref": "#/$defs/Webhook"
                }
            }
        },
        "UpdateWebhookRequest": {
            "type": "object",
            "properties": {
                "webhookId": {
                    "$ref": "#/$defs/WebhookId"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://amplify-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://amplify-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://amplify.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://amplify.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}