{
    "name": "amplifybackend",
    "commands": [
        {
            "name": "CloneBackend",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/environments/{BackendEnvironmentName}/clone"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CloneBackendResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CloneBackendRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "TargetEnvironmentName": {}
                    }
                }
            }
        },
        {
            "name": "CreateBackend",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/backend"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBackendResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateBackendRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "AppName": {},
                        "BackendEnvironmentName": {},
                        "ResourceConfig": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "CreateBackendAPI",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/api"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBackendAPIResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateBackendAPIRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceConfig": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "CreateBackendAuth",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/auth"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBackendAuthResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateBackendAuthRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceConfig": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "CreateBackendConfig",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/config"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBackendConfigResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateBackendConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendManagerAppId": {}
                    }
                }
            }
        },
        {
            "name": "CreateBackendStorage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/storage"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBackendStorageResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateBackendStorageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceConfig": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "CreateToken",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/challenge"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTokenResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateTokenRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBackend",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/environments/{BackendEnvironmentName}/remove"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBackendResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBackendRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBackendAPI",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/api/{BackendEnvironmentName}/remove"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBackendAPIResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBackendAPIRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceConfig": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBackendAuth",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/auth/{BackendEnvironmentName}/remove"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBackendAuthResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBackendAuthRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBackendStorage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/storage/{BackendEnvironmentName}/remove"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBackendStorageResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBackendStorageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceName": {},
                        "ServiceName": {}
                    }
                }
            }
        },
        {
            "name": "DeleteToken",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "SessionId": "route.SessionId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/challenge/{SessionId}/remove"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTokenResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.SessionId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteTokenRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "SessionId": {}
                    }
                }
            }
        },
        {
            "name": "GenerateBackendAPIModels",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/api/{BackendEnvironmentName}/generateModels"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GenerateBackendAPIModelsResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GenerateBackendAPIModelsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "GetBackend",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/details"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackendResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBackendRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {}
                    }
                }
            }
        },
        {
            "name": "GetBackendAPI",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/api/{BackendEnvironmentName}/details"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackendAPIResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBackendAPIRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceConfig": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "GetBackendAPIModels",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/api/{BackendEnvironmentName}/getModels"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackendAPIModelsResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBackendAPIModelsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "GetBackendAuth",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/auth/{BackendEnvironmentName}/details"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackendAuthResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBackendAuthRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "GetBackendJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "JobId": "route.JobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backend/{AppId}/job/{BackendEnvironmentName}/{JobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackendJobResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0.JobId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBackendJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "JobId": {}
                    }
                }
            }
        },
        {
            "name": "GetBackendStorage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/storage/{BackendEnvironmentName}/details"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackendStorageResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBackendStorageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "GetToken",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "SessionId": "route.SessionId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backend/{AppId}/challenge/{SessionId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTokenResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.SessionId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetTokenRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "SessionId": {}
                    }
                }
            }
        },
        {
            "name": "ImportBackendAuth",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/auth/{BackendEnvironmentName}/import"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportBackendAuthResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ImportBackendAuthRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "IdentityPoolId": {},
                        "NativeClientId": {},
                        "UserPoolId": {},
                        "WebClientId": {}
                    }
                }
            }
        },
        {
            "name": "ImportBackendStorage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/storage/{BackendEnvironmentName}/import"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportBackendStorageResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ImportBackendStorageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "BucketName": {},
                        "ServiceName": {}
                    }
                }
            }
        },
        {
            "name": "ListBackendJobs",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/job/{BackendEnvironmentName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBackendJobsResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListBackendJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "JobId": {},
                        "MaxResults": {},
                        "NextToken": {},
                        "Operation": {},
                        "Status": {}
                    }
                }
            }
        },
        {
            "name": "ListS3Buckets",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/s3Buckets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListS3BucketsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListS3BucketsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "RemoveAllBackends",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/remove"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveAllBackendsResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RemoveAllBackendsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "CleanAmplifyApp": {}
                    }
                }
            }
        },
        {
            "name": "RemoveBackendConfig",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/config/remove"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveBackendConfigResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RemoveBackendConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {}
                    }
                }
            }
        },
        {
            "name": "UpdateBackendAPI",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/api/{BackendEnvironmentName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBackendAPIResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateBackendAPIRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceConfig": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "UpdateBackendAuth",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/auth/{BackendEnvironmentName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBackendAuthResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateBackendAuthRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceConfig": {},
                        "ResourceName": {}
                    }
                }
            }
        },
        {
            "name": "UpdateBackendConfig",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/config/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBackendConfigResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateBackendConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "LoginAuthConfig": {}
                    }
                }
            }
        },
        {
            "name": "UpdateBackendJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "JobId": "route.JobId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/job/{BackendEnvironmentName}/{JobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBackendJobResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0.JobId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateBackendJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "JobId": {},
                        "Operation": {},
                        "Status": {}
                    }
                }
            }
        },
        {
            "name": "UpdateBackendStorage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "AppId": "route.AppId",
                            "BackendEnvironmentName": "route.BackendEnvironmentName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backend/{AppId}/storage/{BackendEnvironmentName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBackendStorageResponse"
                    },
                    "inject": [
                        "params.0.AppId",
                        "params.0.BackendEnvironmentName",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateBackendStorageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AppId": {},
                        "BackendEnvironmentName": {},
                        "ResourceConfig": {},
                        "ResourceName": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CloneBackendRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "TargetEnvironmentName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__string": {
            "type": "string"
        },
        "CloneBackendResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateBackendRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "AppName": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceConfig": {
                    "$ref": "#/$defs/ResourceConfig"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ResourceConfig": {
            "type": "object",
            "properties": {}
        },
        "CreateBackendResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateBackendAPIRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceConfig": {
                    "$ref": "#/$defs/BackendAPIResourceConfig"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "BackendAPIResourceConfig": {
            "type": "object",
            "properties": {
                "AdditionalAuthTypes": {
                    "$ref": "#/$defs/ListOfBackendAPIAuthType"
                },
                "ApiName": {
                    "$ref": "#/$defs/__string"
                },
                "ConflictResolution": {
                    "$ref": "#/$defs/BackendAPIConflictResolution"
                },
                "DefaultAuthType": {
                    "$ref": "#/$defs/BackendAPIAuthType"
                },
                "Service": {
                    "$ref": "#/$defs/__string"
                },
                "TransformSchema": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListOfBackendAPIAuthType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackendAPIAuthType"
            }
        },
        "BackendAPIAuthType": {
            "type": "object",
            "properties": {
                "Mode": {
                    "$ref": "#/$defs/Mode"
                },
                "Settings": {
                    "$ref": "#/$defs/BackendAPIAppSyncAuthSettings"
                }
            }
        },
        "Mode": {
            "enum": [
                "API_KEY",
                "AWS_IAM",
                "AMAZON_COGNITO_USER_POOLS",
                "OPENID_CONNECT"
            ]
        },
        "BackendAPIAppSyncAuthSettings": {
            "type": "object",
            "properties": {
                "CognitoUserPoolId": {
                    "$ref": "#/$defs/__string"
                },
                "Description": {
                    "$ref": "#/$defs/__string"
                },
                "ExpirationTime": {
                    "$ref": "#/$defs/__double"
                },
                "OpenIDAuthTTL": {
                    "$ref": "#/$defs/__string"
                },
                "OpenIDClientId": {
                    "$ref": "#/$defs/__string"
                },
                "OpenIDIatTTL": {
                    "$ref": "#/$defs/__string"
                },
                "OpenIDIssueURL": {
                    "$ref": "#/$defs/__string"
                },
                "OpenIDProviderName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__double": {
            "type": "number",
            "format": "double"
        },
        "BackendAPIConflictResolution": {
            "type": "object",
            "properties": {
                "ResolutionStrategy": {
                    "$ref": "#/$defs/ResolutionStrategy"
                }
            }
        },
        "ResolutionStrategy": {
            "enum": [
                "OPTIMISTIC_CONCURRENCY",
                "LAMBDA",
                "AUTOMERGE",
                "NONE"
            ]
        },
        "CreateBackendAPIResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateBackendAuthRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceConfig": {
                    "$ref": "#/$defs/CreateBackendAuthResourceConfig"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateBackendAuthResourceConfig": {
            "type": "object",
            "properties": {
                "AuthResources": {
                    "$ref": "#/$defs/AuthResources"
                },
                "IdentityPoolConfigs": {
                    "$ref": "#/$defs/CreateBackendAuthIdentityPoolConfig"
                },
                "Service": {
                    "$ref": "#/$defs/Service"
                },
                "UserPoolConfigs": {
                    "$ref": "#/$defs/CreateBackendAuthUserPoolConfig"
                }
            }
        },
        "AuthResources": {
            "enum": [
                "USER_POOL_ONLY",
                "IDENTITY_POOL_AND_USER_POOL"
            ]
        },
        "CreateBackendAuthIdentityPoolConfig": {
            "type": "object",
            "properties": {
                "IdentityPoolName": {
                    "$ref": "#/$defs/__string"
                },
                "UnauthenticatedLogin": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "__boolean": {
            "type": "boolean"
        },
        "Service": {
            "enum": [
                "COGNITO"
            ]
        },
        "CreateBackendAuthUserPoolConfig": {
            "type": "object",
            "properties": {
                "ForgotPassword": {
                    "$ref": "#/$defs/CreateBackendAuthForgotPasswordConfig"
                },
                "Mfa": {
                    "$ref": "#/$defs/CreateBackendAuthMFAConfig"
                },
                "OAuth": {
                    "$ref": "#/$defs/CreateBackendAuthOAuthConfig"
                },
                "PasswordPolicy": {
                    "$ref": "#/$defs/CreateBackendAuthPasswordPolicyConfig"
                },
                "RequiredSignUpAttributes": {
                    "$ref": "#/$defs/ListOfRequiredSignUpAttributesElement"
                },
                "SignInMethod": {
                    "$ref": "#/$defs/SignInMethod"
                },
                "UserPoolName": {
                    "$ref": "#/$defs/__string"
                },
                "VerificationMessage": {
                    "$ref": "#/$defs/CreateBackendAuthVerificationMessageConfig"
                }
            }
        },
        "CreateBackendAuthForgotPasswordConfig": {
            "type": "object",
            "properties": {
                "DeliveryMethod": {
                    "$ref": "#/$defs/DeliveryMethod"
                },
                "EmailSettings": {
                    "$ref": "#/$defs/EmailSettings"
                },
                "SmsSettings": {
                    "$ref": "#/$defs/SmsSettings"
                }
            }
        },
        "DeliveryMethod": {
            "enum": [
                "EMAIL",
                "SMS"
            ]
        },
        "EmailSettings": {
            "type": "object",
            "properties": {
                "EmailMessage": {
                    "$ref": "#/$defs/__string"
                },
                "EmailSubject": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "SmsSettings": {
            "type": "object",
            "properties": {
                "SmsMessage": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateBackendAuthMFAConfig": {
            "type": "object",
            "properties": {
                "MFAMode": {
                    "$ref": "#/$defs/MFAMode"
                },
                "Settings": {
                    "$ref": "#/$defs/Settings"
                }
            }
        },
        "MFAMode": {
            "enum": [
                "ON",
                "OFF",
                "OPTIONAL"
            ]
        },
        "Settings": {
            "type": "object",
            "properties": {
                "MfaTypes": {
                    "$ref": "#/$defs/ListOfMfaTypesElement"
                },
                "SmsMessage": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListOfMfaTypesElement": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MfaTypesElement"
            }
        },
        "MfaTypesElement": {
            "enum": [
                "SMS",
                "TOTP"
            ]
        },
        "CreateBackendAuthOAuthConfig": {
            "type": "object",
            "properties": {
                "DomainPrefix": {
                    "$ref": "#/$defs/__string"
                },
                "OAuthGrantType": {
                    "$ref": "#/$defs/OAuthGrantType"
                },
                "OAuthScopes": {
                    "$ref": "#/$defs/ListOfOAuthScopesElement"
                },
                "RedirectSignInURIs": {
                    "$ref": "#/$defs/ListOf__string"
                },
                "RedirectSignOutURIs": {
                    "$ref": "#/$defs/ListOf__string"
                },
                "SocialProviderSettings": {
                    "$ref": "#/$defs/SocialProviderSettings"
                }
            }
        },
        "OAuthGrantType": {
            "enum": [
                "CODE",
                "IMPLICIT"
            ]
        },
        "ListOfOAuthScopesElement": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OAuthScopesElement"
            }
        },
        "OAuthScopesElement": {
            "enum": [
                "PHONE",
                "EMAIL",
                "OPENID",
                "PROFILE",
                "AWS_COGNITO_SIGNIN_USER_ADMIN"
            ]
        },
        "ListOf__string": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__string"
            }
        },
        "SocialProviderSettings": {
            "type": "object",
            "properties": {
                "Facebook": {
                    "$ref": "#/$defs/BackendAuthSocialProviderConfig"
                },
                "Google": {
                    "$ref": "#/$defs/BackendAuthSocialProviderConfig"
                },
                "LoginWithAmazon": {
                    "$ref": "#/$defs/BackendAuthSocialProviderConfig"
                },
                "SignInWithApple": {
                    "$ref": "#/$defs/BackendAuthAppleProviderConfig"
                }
            }
        },
        "BackendAuthSocialProviderConfig": {
            "type": "object",
            "properties": {
                "ClientId": {
                    "$ref": "#/$defs/__string"
                },
                "ClientSecret": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "BackendAuthAppleProviderConfig": {
            "type": "object",
            "properties": {
                "ClientId": {
                    "$ref": "#/$defs/__string"
                },
                "KeyId": {
                    "$ref": "#/$defs/__string"
                },
                "PrivateKey": {
                    "$ref": "#/$defs/__string"
                },
                "TeamId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateBackendAuthPasswordPolicyConfig": {
            "type": "object",
            "properties": {
                "AdditionalConstraints": {
                    "$ref": "#/$defs/ListOfAdditionalConstraintsElement"
                },
                "MinimumLength": {
                    "$ref": "#/$defs/__double"
                }
            }
        },
        "ListOfAdditionalConstraintsElement": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AdditionalConstraintsElement"
            }
        },
        "AdditionalConstraintsElement": {
            "enum": [
                "REQUIRE_DIGIT",
                "REQUIRE_LOWERCASE",
                "REQUIRE_SYMBOL",
                "REQUIRE_UPPERCASE"
            ]
        },
        "ListOfRequiredSignUpAttributesElement": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RequiredSignUpAttributesElement"
            }
        },
        "RequiredSignUpAttributesElement": {
            "enum": [
                "ADDRESS",
                "BIRTHDATE",
                "EMAIL",
                "FAMILY_NAME",
                "GENDER",
                "GIVEN_NAME",
                "LOCALE",
                "MIDDLE_NAME",
                "NAME",
                "NICKNAME",
                "PHONE_NUMBER",
                "PICTURE",
                "PREFERRED_USERNAME",
                "PROFILE",
                "UPDATED_AT",
                "WEBSITE",
                "ZONE_INFO"
            ]
        },
        "SignInMethod": {
            "enum": [
                "EMAIL",
                "EMAIL_AND_PHONE_NUMBER",
                "PHONE_NUMBER",
                "USERNAME"
            ]
        },
        "CreateBackendAuthVerificationMessageConfig": {
            "type": "object",
            "properties": {
                "DeliveryMethod": {
                    "$ref": "#/$defs/DeliveryMethod"
                },
                "EmailSettings": {
                    "$ref": "#/$defs/EmailSettings"
                },
                "SmsSettings": {
                    "$ref": "#/$defs/SmsSettings"
                }
            }
        },
        "CreateBackendAuthResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateBackendConfigRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendManagerAppId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateBackendConfigResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateBackendStorageRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceConfig": {
                    "$ref": "#/$defs/CreateBackendStorageResourceConfig"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateBackendStorageResourceConfig": {
            "type": "object",
            "properties": {
                "BucketName": {
                    "$ref": "#/$defs/__string"
                },
                "Permissions": {
                    "$ref": "#/$defs/BackendStoragePermissions"
                },
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                }
            }
        },
        "BackendStoragePermissions": {
            "type": "object",
            "properties": {
                "Authenticated": {
                    "$ref": "#/$defs/ListOfAuthenticatedElement"
                },
                "UnAuthenticated": {
                    "$ref": "#/$defs/ListOfUnAuthenticatedElement"
                }
            }
        },
        "ListOfAuthenticatedElement": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuthenticatedElement"
            }
        },
        "AuthenticatedElement": {
            "enum": [
                "READ",
                "CREATE_AND_UPDATE",
                "DELETE"
            ]
        },
        "ListOfUnAuthenticatedElement": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnAuthenticatedElement"
            }
        },
        "UnAuthenticatedElement": {
            "enum": [
                "READ",
                "CREATE_AND_UPDATE",
                "DELETE"
            ]
        },
        "ServiceName": {
            "enum": [
                "S3"
            ]
        },
        "CreateBackendStorageResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateTokenRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateTokenResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "ChallengeCode": {
                    "$ref": "#/$defs/__string"
                },
                "SessionId": {
                    "$ref": "#/$defs/__string"
                },
                "Ttl": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteBackendRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteBackendResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteBackendAPIRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceConfig": {
                    "$ref": "#/$defs/BackendAPIResourceConfig"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteBackendAPIResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteBackendAuthRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteBackendAuthResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteBackendStorageRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                },
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                }
            }
        },
        "DeleteBackendStorageResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteTokenRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "SessionId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteTokenResponse": {
            "type": "object",
            "properties": {
                "IsSuccess": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "GenerateBackendAPIModelsRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GenerateBackendAPIModelsResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBackendRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBackendResponse": {
            "type": "object",
            "properties": {
                "AmplifyFeatureFlags": {
                    "$ref": "#/$defs/__string"
                },
                "AmplifyMetaConfig": {
                    "$ref": "#/$defs/__string"
                },
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "AppName": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentList": {
                    "$ref": "#/$defs/ListOf__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBackendAPIRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceConfig": {
                    "$ref": "#/$defs/BackendAPIResourceConfig"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBackendAPIResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceConfig": {
                    "$ref": "#/$defs/BackendAPIResourceConfig"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBackendAPIModelsRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBackendAPIModelsResponse": {
            "type": "object",
            "properties": {
                "Models": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "ModelIntrospectionSchema": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "Status": {
            "enum": [
                "LATEST",
                "STALE"
            ]
        },
        "GetBackendAuthRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBackendAuthResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceConfig": {
                    "$ref": "#/$defs/CreateBackendAuthResourceConfig"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBackendJobRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBackendJobResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "CreateTime": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBackendStorageRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBackendStorageResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceConfig": {
                    "$ref": "#/$defs/GetBackendStorageResourceConfig"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBackendStorageResourceConfig": {
            "type": "object",
            "properties": {
                "BucketName": {
                    "$ref": "#/$defs/__string"
                },
                "Imported": {
                    "$ref": "#/$defs/__boolean"
                },
                "Permissions": {
                    "$ref": "#/$defs/BackendStoragePermissions"
                },
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                }
            }
        },
        "GetTokenRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "SessionId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetTokenResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "ChallengeCode": {
                    "$ref": "#/$defs/__string"
                },
                "SessionId": {
                    "$ref": "#/$defs/__string"
                },
                "Ttl": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ImportBackendAuthRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "IdentityPoolId": {
                    "$ref": "#/$defs/__string"
                },
                "NativeClientId": {
                    "$ref": "#/$defs/__string"
                },
                "UserPoolId": {
                    "$ref": "#/$defs/__string"
                },
                "WebClientId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ImportBackendAuthResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ImportBackendStorageRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "BucketName": {
                    "$ref": "#/$defs/__string"
                },
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                }
            }
        },
        "ImportBackendStorageResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListBackendJobsRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/__integerMin1Max25"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__integerMin1Max25": {
            "type": "integer",
            "format": "int32"
        },
        "ListBackendJobsResponse": {
            "type": "object",
            "properties": {
                "Jobs": {
                    "$ref": "#/$defs/ListOfBackendJobRespObj"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListOfBackendJobRespObj": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackendJobRespObj"
            }
        },
        "BackendJobRespObj": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "CreateTime": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListS3BucketsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListS3BucketsResponse": {
            "type": "object",
            "properties": {
                "Buckets": {
                    "$ref": "#/$defs/ListOfS3BucketInfo"
                },
                "NextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListOfS3BucketInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/S3BucketInfo"
            }
        },
        "S3BucketInfo": {
            "type": "object",
            "properties": {
                "CreationDate": {
                    "$ref": "#/$defs/__string"
                },
                "Name": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveAllBackendsRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "CleanAmplifyApp": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "RemoveAllBackendsResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveBackendConfigRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "RemoveBackendConfigResponse": {
            "type": "object",
            "properties": {
                "Error": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBackendAPIRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceConfig": {
                    "$ref": "#/$defs/BackendAPIResourceConfig"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBackendAPIResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBackendAuthRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceConfig": {
                    "$ref": "#/$defs/UpdateBackendAuthResourceConfig"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBackendAuthResourceConfig": {
            "type": "object",
            "properties": {
                "AuthResources": {
                    "$ref": "#/$defs/AuthResources"
                },
                "IdentityPoolConfigs": {
                    "$ref": "#/$defs/UpdateBackendAuthIdentityPoolConfig"
                },
                "Service": {
                    "$ref": "#/$defs/Service"
                },
                "UserPoolConfigs": {
                    "$ref": "#/$defs/UpdateBackendAuthUserPoolConfig"
                }
            }
        },
        "UpdateBackendAuthIdentityPoolConfig": {
            "type": "object",
            "properties": {
                "UnauthenticatedLogin": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "UpdateBackendAuthUserPoolConfig": {
            "type": "object",
            "properties": {
                "ForgotPassword": {
                    "$ref": "#/$defs/UpdateBackendAuthForgotPasswordConfig"
                },
                "Mfa": {
                    "$ref": "#/$defs/UpdateBackendAuthMFAConfig"
                },
                "OAuth": {
                    "$ref": "#/$defs/UpdateBackendAuthOAuthConfig"
                },
                "PasswordPolicy": {
                    "$ref": "#/$defs/UpdateBackendAuthPasswordPolicyConfig"
                },
                "VerificationMessage": {
                    "$ref": "#/$defs/UpdateBackendAuthVerificationMessageConfig"
                }
            }
        },
        "UpdateBackendAuthForgotPasswordConfig": {
            "type": "object",
            "properties": {
                "DeliveryMethod": {
                    "$ref": "#/$defs/DeliveryMethod"
                },
                "EmailSettings": {
                    "$ref": "#/$defs/EmailSettings"
                },
                "SmsSettings": {
                    "$ref": "#/$defs/SmsSettings"
                }
            }
        },
        "UpdateBackendAuthMFAConfig": {
            "type": "object",
            "properties": {
                "MFAMode": {
                    "$ref": "#/$defs/MFAMode"
                },
                "Settings": {
                    "$ref": "#/$defs/Settings"
                }
            }
        },
        "UpdateBackendAuthOAuthConfig": {
            "type": "object",
            "properties": {
                "DomainPrefix": {
                    "$ref": "#/$defs/__string"
                },
                "OAuthGrantType": {
                    "$ref": "#/$defs/OAuthGrantType"
                },
                "OAuthScopes": {
                    "$ref": "#/$defs/ListOfOAuthScopesElement"
                },
                "RedirectSignInURIs": {
                    "$ref": "#/$defs/ListOf__string"
                },
                "RedirectSignOutURIs": {
                    "$ref": "#/$defs/ListOf__string"
                },
                "SocialProviderSettings": {
                    "$ref": "#/$defs/SocialProviderSettings"
                }
            }
        },
        "UpdateBackendAuthPasswordPolicyConfig": {
            "type": "object",
            "properties": {
                "AdditionalConstraints": {
                    "$ref": "#/$defs/ListOfAdditionalConstraintsElement"
                },
                "MinimumLength": {
                    "$ref": "#/$defs/__double"
                }
            }
        },
        "UpdateBackendAuthVerificationMessageConfig": {
            "type": "object",
            "properties": {
                "DeliveryMethod": {
                    "$ref": "#/$defs/DeliveryMethod"
                },
                "EmailSettings": {
                    "$ref": "#/$defs/EmailSettings"
                },
                "SmsSettings": {
                    "$ref": "#/$defs/SmsSettings"
                }
            }
        },
        "UpdateBackendAuthResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBackendConfigRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "LoginAuthConfig": {
                    "$ref": "#/$defs/LoginAuthConfigReqObj"
                }
            }
        },
        "LoginAuthConfigReqObj": {
            "type": "object",
            "properties": {
                "AwsCognitoIdentityPoolId": {
                    "$ref": "#/$defs/__string"
                },
                "AwsCognitoRegion": {
                    "$ref": "#/$defs/__string"
                },
                "AwsUserPoolsId": {
                    "$ref": "#/$defs/__string"
                },
                "AwsUserPoolsWebClientId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBackendConfigResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendManagerAppId": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "LoginAuthConfig": {
                    "$ref": "#/$defs/LoginAuthConfigReqObj"
                }
            }
        },
        "UpdateBackendJobRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBackendJobResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "CreateTime": {
                    "$ref": "#/$defs/__string"
                },
                "Error": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Operation": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBackendStorageRequest": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "ResourceConfig": {
                    "$ref": "#/$defs/UpdateBackendStorageResourceConfig"
                },
                "ResourceName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateBackendStorageResourceConfig": {
            "type": "object",
            "properties": {
                "Permissions": {
                    "$ref": "#/$defs/BackendStoragePermissions"
                },
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                }
            }
        },
        "UpdateBackendStorageResponse": {
            "type": "object",
            "properties": {
                "AppId": {
                    "$ref": "#/$defs/__string"
                },
                "BackendEnvironmentName": {
                    "$ref": "#/$defs/__string"
                },
                "JobId": {
                    "$ref": "#/$defs/__string"
                },
                "Status": {
                    "$ref": "#/$defs/__string"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://amplifybackend-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://amplifybackend-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://amplifybackend.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://amplifybackend.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
