{
    "name": "servicequotas",
    "commands": [
        {
            "name": "AssociateServiceQuotaTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.AssociateServiceQuotaTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateServiceQuotaTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AssociateServiceQuotaTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteServiceQuotaIncreaseRequestFromTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.DeleteServiceQuotaIncreaseRequestFromTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteServiceQuotaIncreaseRequestFromTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteServiceQuotaIncreaseRequestFromTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateServiceQuotaTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.DisassociateServiceQuotaTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateServiceQuotaTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisassociateServiceQuotaTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAssociationForServiceQuotaTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.GetAssociationForServiceQuotaTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAssociationForServiceQuotaTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetAssociationForServiceQuotaTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAWSDefaultServiceQuota",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.GetAWSDefaultServiceQuota"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAWSDefaultServiceQuotaResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetAWSDefaultServiceQuotaRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRequestedServiceQuotaChange",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.GetRequestedServiceQuotaChange"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRequestedServiceQuotaChangeResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetRequestedServiceQuotaChangeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetServiceQuota",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.GetServiceQuota"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetServiceQuotaResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetServiceQuotaRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetServiceQuotaIncreaseRequestFromTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.GetServiceQuotaIncreaseRequestFromTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetServiceQuotaIncreaseRequestFromTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetServiceQuotaIncreaseRequestFromTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAWSDefaultServiceQuotas",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.ListAWSDefaultServiceQuotas"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAWSDefaultServiceQuotasResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListAWSDefaultServiceQuotasRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRequestedServiceQuotaChangeHistory",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.ListRequestedServiceQuotaChangeHistory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRequestedServiceQuotaChangeHistoryResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListRequestedServiceQuotaChangeHistoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRequestedServiceQuotaChangeHistoryByQuota",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.ListRequestedServiceQuotaChangeHistoryByQuota"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRequestedServiceQuotaChangeHistoryByQuotaResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListRequestedServiceQuotaChangeHistoryByQuotaRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListServiceQuotaIncreaseRequestsInTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.ListServiceQuotaIncreaseRequestsInTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListServiceQuotaIncreaseRequestsInTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListServiceQuotaIncreaseRequestsInTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListServiceQuotas",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.ListServiceQuotas"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListServiceQuotasResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListServiceQuotasRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListServices",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.ListServices"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListServicesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListServicesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutServiceQuotaIncreaseRequestIntoTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.PutServiceQuotaIncreaseRequestIntoTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutServiceQuotaIncreaseRequestIntoTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutServiceQuotaIncreaseRequestIntoTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RequestServiceQuotaIncrease",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.RequestServiceQuotaIncrease"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RequestServiceQuotaIncreaseResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RequestServiceQuotaIncreaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ServiceQuotasV20190624.UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateServiceQuotaTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "AssociateServiceQuotaTemplateRequest": {
            "type": "object",
            "properties": {}
        },
        "DeleteServiceQuotaIncreaseRequestFromTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteServiceQuotaIncreaseRequestFromTemplateRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "QuotaCode": {
                    "$ref": "#/$defs/QuotaCode"
                },
                "AwsRegion": {
                    "$ref": "#/$defs/AwsRegion"
                }
            }
        },
        "ServiceCode": {
            "type": "string"
        },
        "QuotaCode": {
            "type": "string"
        },
        "AwsRegion": {
            "type": "string"
        },
        "DisassociateServiceQuotaTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateServiceQuotaTemplateRequest": {
            "type": "object",
            "properties": {}
        },
        "GetAssociationForServiceQuotaTemplateResponse": {
            "type": "object",
            "properties": {
                "ServiceQuotaTemplateAssociationStatus": {
                    "$ref": "#/$defs/ServiceQuotaTemplateAssociationStatus"
                }
            }
        },
        "ServiceQuotaTemplateAssociationStatus": {
            "enum": [
                "ASSOCIATED",
                "DISASSOCIATED"
            ]
        },
        "GetAssociationForServiceQuotaTemplateRequest": {
            "type": "object",
            "properties": {}
        },
        "GetAWSDefaultServiceQuotaResponse": {
            "type": "object",
            "properties": {
                "Quota": {
                    "$ref": "#/$defs/ServiceQuota"
                }
            }
        },
        "ServiceQuota": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "QuotaArn": {
                    "$ref": "#/$defs/QuotaArn"
                },
                "QuotaCode": {
                    "$ref": "#/$defs/QuotaCode"
                },
                "QuotaName": {
                    "$ref": "#/$defs/QuotaName"
                },
                "Value": {
                    "$ref": "#/$defs/QuotaValue"
                },
                "Unit": {
                    "$ref": "#/$defs/QuotaUnit"
                },
                "Adjustable": {
                    "$ref": "#/$defs/QuotaAdjustable"
                },
                "GlobalQuota": {
                    "$ref": "#/$defs/GlobalQuota"
                },
                "UsageMetric": {
                    "$ref": "#/$defs/MetricInfo"
                },
                "Period": {
                    "$ref": "#/$defs/QuotaPeriod"
                },
                "ErrorReason": {
                    "$ref": "#/$defs/ErrorReason"
                },
                "QuotaAppliedAtLevel": {
                    "$ref": "#/$defs/AppliedLevelEnum"
                },
                "QuotaContext": {
                    "$ref": "#/$defs/QuotaContextInfo"
                }
            }
        },
        "ServiceName": {
            "type": "string"
        },
        "QuotaArn": {
            "type": "string"
        },
        "QuotaName": {
            "type": "string"
        },
        "QuotaValue": {
            "type": "number",
            "format": "double"
        },
        "QuotaUnit": {
            "type": "string"
        },
        "QuotaAdjustable": {
            "type": "boolean"
        },
        "GlobalQuota": {
            "type": "boolean"
        },
        "MetricInfo": {
            "type": "object",
            "properties": {
                "MetricNamespace": {
                    "$ref": "#/$defs/QuotaMetricNamespace"
                },
                "MetricName": {
                    "$ref": "#/$defs/QuotaMetricName"
                },
                "MetricDimensions": {
                    "$ref": "#/$defs/MetricDimensionsMapDefinition"
                },
                "MetricStatisticRecommendation": {
                    "$ref": "#/$defs/Statistic"
                }
            }
        },
        "QuotaMetricNamespace": {
            "type": "string"
        },
        "QuotaMetricName": {
            "type": "string"
        },
        "MetricDimensionsMapDefinition": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MetricDimensionValue"
            }
        },
        "MetricDimensionValue": {
            "type": "string"
        },
        "Statistic": {
            "type": "string"
        },
        "QuotaPeriod": {
            "type": "object",
            "properties": {
                "PeriodValue": {
                    "$ref": "#/$defs/PeriodValue"
                },
                "PeriodUnit": {
                    "$ref": "#/$defs/PeriodUnit"
                }
            }
        },
        "PeriodValue": {
            "type": "integer",
            "format": "int32"
        },
        "PeriodUnit": {
            "enum": [
                "MICROSECOND",
                "MILLISECOND",
                "SECOND",
                "MINUTE",
                "HOUR",
                "DAY",
                "WEEK"
            ]
        },
        "ErrorReason": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ErrorCode": {
            "enum": [
                "DEPENDENCY_ACCESS_DENIED_ERROR",
                "DEPENDENCY_THROTTLING_ERROR",
                "DEPENDENCY_SERVICE_ERROR",
                "SERVICE_QUOTA_NOT_AVAILABLE_ERROR"
            ]
        },
        "ErrorMessage": {
            "type": "string"
        },
        "AppliedLevelEnum": {
            "enum": [
                "ACCOUNT",
                "RESOURCE",
                "ALL"
            ]
        },
        "QuotaContextInfo": {
            "type": "object",
            "properties": {
                "ContextScope": {
                    "$ref": "#/$defs/QuotaContextScope"
                },
                "ContextScopeType": {
                    "$ref": "#/$defs/QuotaContextScopeType"
                },
                "ContextId": {
                    "$ref": "#/$defs/QuotaContextId"
                }
            }
        },
        "QuotaContextScope": {
            "enum": [
                "RESOURCE",
                "ACCOUNT"
            ]
        },
        "QuotaContextScopeType": {
            "type": "string"
        },
        "QuotaContextId": {
            "type": "string"
        },
        "GetAWSDefaultServiceQuotaRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "QuotaCode": {
                    "$ref": "#/$defs/QuotaCode"
                }
            }
        },
        "GetRequestedServiceQuotaChangeResponse": {
            "type": "object",
            "properties": {
                "RequestedQuota": {
                    "$ref": "#/$defs/RequestedServiceQuotaChange"
                }
            }
        },
        "RequestedServiceQuotaChange": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/RequestId"
                },
                "CaseId": {
                    "$ref": "#/$defs/CustomerServiceEngagementId"
                },
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "QuotaCode": {
                    "$ref": "#/$defs/QuotaCode"
                },
                "QuotaName": {
                    "$ref": "#/$defs/QuotaName"
                },
                "DesiredValue": {
                    "$ref": "#/$defs/QuotaValue"
                },
                "Status": {
                    "$ref": "#/$defs/RequestStatus"
                },
                "Created": {
                    "$ref": "#/$defs/DateTime"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/DateTime"
                },
                "Requester": {
                    "$ref": "#/$defs/Requester"
                },
                "QuotaArn": {
                    "$ref": "#/$defs/QuotaArn"
                },
                "GlobalQuota": {
                    "$ref": "#/$defs/GlobalQuota"
                },
                "Unit": {
                    "$ref": "#/$defs/QuotaUnit"
                },
                "QuotaRequestedAtLevel": {
                    "$ref": "#/$defs/AppliedLevelEnum"
                },
                "QuotaContext": {
                    "$ref": "#/$defs/QuotaContextInfo"
                }
            }
        },
        "RequestId": {
            "type": "string"
        },
        "CustomerServiceEngagementId": {
            "type": "string"
        },
        "RequestStatus": {
            "enum": [
                "PENDING",
                "CASE_OPENED",
                "APPROVED",
                "DENIED",
                "CASE_CLOSED",
                "NOT_APPROVED",
                "INVALID_REQUEST"
            ]
        },
        "DateTime": {
            "type": "string",
            "format": "date-time"
        },
        "Requester": {
            "type": "string"
        },
        "GetRequestedServiceQuotaChangeRequest": {
            "type": "object",
            "properties": {
                "RequestId": {
                    "$ref": "#/$defs/RequestId"
                }
            }
        },
        "GetServiceQuotaResponse": {
            "type": "object",
            "properties": {
                "Quota": {
                    "$ref": "#/$defs/ServiceQuota"
                }
            }
        },
        "GetServiceQuotaRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "QuotaCode": {
                    "$ref": "#/$defs/QuotaCode"
                },
                "ContextId": {
                    "$ref": "#/$defs/QuotaContextId"
                }
            }
        },
        "GetServiceQuotaIncreaseRequestFromTemplateResponse": {
            "type": "object",
            "properties": {
                "ServiceQuotaIncreaseRequestInTemplate": {
                    "$ref": "#/$defs/ServiceQuotaIncreaseRequestInTemplate"
                }
            }
        },
        "ServiceQuotaIncreaseRequestInTemplate": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "QuotaCode": {
                    "$ref": "#/$defs/QuotaCode"
                },
                "QuotaName": {
                    "$ref": "#/$defs/QuotaName"
                },
                "DesiredValue": {
                    "$ref": "#/$defs/QuotaValue"
                },
                "AwsRegion": {
                    "$ref": "#/$defs/AwsRegion"
                },
                "Unit": {
                    "$ref": "#/$defs/QuotaUnit"
                },
                "GlobalQuota": {
                    "$ref": "#/$defs/GlobalQuota"
                }
            }
        },
        "GetServiceQuotaIncreaseRequestFromTemplateRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "QuotaCode": {
                    "$ref": "#/$defs/QuotaCode"
                },
                "AwsRegion": {
                    "$ref": "#/$defs/AwsRegion"
                }
            }
        },
        "ListAWSDefaultServiceQuotasResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Quotas": {
                    "$ref": "#/$defs/ServiceQuotaListDefinition"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ServiceQuotaListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceQuota"
            }
        },
        "ListAWSDefaultServiceQuotasRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListRequestedServiceQuotaChangeHistoryResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "RequestedQuotas": {
                    "$ref": "#/$defs/RequestedServiceQuotaChangeHistoryListDefinition"
                }
            }
        },
        "RequestedServiceQuotaChangeHistoryListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RequestedServiceQuotaChange"
            }
        },
        "ListRequestedServiceQuotaChangeHistoryRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "Status": {
                    "$ref": "#/$defs/RequestStatus"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "QuotaRequestedAtLevel": {
                    "$ref": "#/$defs/AppliedLevelEnum"
                }
            }
        },
        "ListRequestedServiceQuotaChangeHistoryByQuotaResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "RequestedQuotas": {
                    "$ref": "#/$defs/RequestedServiceQuotaChangeHistoryListDefinition"
                }
            }
        },
        "ListRequestedServiceQuotaChangeHistoryByQuotaRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "QuotaCode": {
                    "$ref": "#/$defs/QuotaCode"
                },
                "Status": {
                    "$ref": "#/$defs/RequestStatus"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "QuotaRequestedAtLevel": {
                    "$ref": "#/$defs/AppliedLevelEnum"
                }
            }
        },
        "ListServiceQuotaIncreaseRequestsInTemplateResponse": {
            "type": "object",
            "properties": {
                "ServiceQuotaIncreaseRequestInTemplateList": {
                    "$ref": "#/$defs/ServiceQuotaIncreaseRequestInTemplateList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ServiceQuotaIncreaseRequestInTemplateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceQuotaIncreaseRequestInTemplate"
            }
        },
        "ListServiceQuotaIncreaseRequestsInTemplateRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "AwsRegion": {
                    "$ref": "#/$defs/AwsRegion"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListServiceQuotasResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Quotas": {
                    "$ref": "#/$defs/ServiceQuotaListDefinition"
                }
            }
        },
        "ListServiceQuotasRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "QuotaCode": {
                    "$ref": "#/$defs/QuotaCode"
                },
                "QuotaAppliedAtLevel": {
                    "$ref": "#/$defs/AppliedLevelEnum"
                }
            }
        },
        "ListServicesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Services": {
                    "$ref": "#/$defs/ServiceInfoListDefinition"
                }
            }
        },
        "ServiceInfoListDefinition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceInfo"
            }
        },
        "ServiceInfo": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                }
            }
        },
        "ListServicesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/OutputTags"
                }
            }
        },
        "OutputTags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "AmazonResourceName": {
            "type": "string"
        },
        "PutServiceQuotaIncreaseRequestIntoTemplateResponse": {
            "type": "object",
            "properties": {
                "ServiceQuotaIncreaseRequestInTemplate": {
                    "$ref": "#/$defs/ServiceQuotaIncreaseRequestInTemplate"
                }
            }
        },
        "PutServiceQuotaIncreaseRequestIntoTemplateRequest": {
            "type": "object",
            "properties": {
                "QuotaCode": {
                    "$ref": "#/$defs/QuotaCode"
                },
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "AwsRegion": {
                    "$ref": "#/$defs/AwsRegion"
                },
                "DesiredValue": {
                    "$ref": "#/$defs/QuotaValue"
                }
            }
        },
        "RequestServiceQuotaIncreaseResponse": {
            "type": "object",
            "properties": {
                "RequestedQuota": {
                    "$ref": "#/$defs/RequestedServiceQuotaChange"
                }
            }
        },
        "RequestServiceQuotaIncreaseRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "QuotaCode": {
                    "$ref": "#/$defs/QuotaCode"
                },
                "DesiredValue": {
                    "$ref": "#/$defs/QuotaValue"
                },
                "ContextId": {
                    "$ref": "#/$defs/QuotaContextId"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Tags": {
                    "$ref": "#/$defs/InputTags"
                }
            }
        },
        "InputTags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "TagKeys": {
                    "$ref": "#/$defs/InputTagKeys"
                }
            }
        },
        "InputTagKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://servicequotas-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://servicequotas.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://servicequotas-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://servicequotas.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://servicequotas.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
