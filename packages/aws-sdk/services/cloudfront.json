{
    "name": "cloudfront",
    "commands": [
        {
            "name": "AssociateAlias",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateAlias"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateAliasRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CopyDistribution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CopyDistribution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CopyDistributionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CopyDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCachePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCachePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCachePolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCachePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCloudFrontOriginAccessIdentity",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCloudFrontOriginAccessIdentity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCloudFrontOriginAccessIdentityResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCloudFrontOriginAccessIdentityRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateContinuousDeploymentPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateContinuousDeploymentPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateContinuousDeploymentPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateContinuousDeploymentPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDistribution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDistribution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDistributionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDistributionWithTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDistributionWithTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDistributionWithTagsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDistributionWithTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFieldLevelEncryptionConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateFieldLevelEncryptionConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFieldLevelEncryptionConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFieldLevelEncryptionConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFieldLevelEncryptionProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateFieldLevelEncryptionProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFieldLevelEncryptionProfileResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFieldLevelEncryptionProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFunction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateFunction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFunctionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFunctionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateInvalidation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateInvalidation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateInvalidationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateInvalidationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKeyGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateKeyGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateKeyGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKeyGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKeyValueStore",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateKeyValueStore"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateKeyValueStoreResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKeyValueStoreRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateMonitoringSubscription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateMonitoringSubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMonitoringSubscriptionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMonitoringSubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateOriginAccessControl",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateOriginAccessControl"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateOriginAccessControlResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateOriginAccessControlRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateOriginRequestPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateOriginRequestPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateOriginRequestPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateOriginRequestPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePublicKey",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreatePublicKey"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePublicKeyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePublicKeyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRealtimeLogConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateRealtimeLogConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRealtimeLogConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRealtimeLogConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateResponseHeadersPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateResponseHeadersPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateResponseHeadersPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateResponseHeadersPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateStreamingDistribution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateStreamingDistribution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateStreamingDistributionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateStreamingDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateStreamingDistributionWithTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateStreamingDistributionWithTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateStreamingDistributionWithTagsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateStreamingDistributionWithTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCachePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCachePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCachePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCloudFrontOriginAccessIdentity",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCloudFrontOriginAccessIdentity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCloudFrontOriginAccessIdentityRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteContinuousDeploymentPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteContinuousDeploymentPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteContinuousDeploymentPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDistribution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteDistribution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFieldLevelEncryptionConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteFieldLevelEncryptionConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFieldLevelEncryptionConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFieldLevelEncryptionProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteFieldLevelEncryptionProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFieldLevelEncryptionProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFunction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteFunction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFunctionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKeyGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteKeyGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKeyGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKeyValueStore",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteKeyValueStore"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKeyValueStoreRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteMonitoringSubscription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteMonitoringSubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMonitoringSubscriptionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMonitoringSubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteOriginAccessControl",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteOriginAccessControl"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteOriginAccessControlRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteOriginRequestPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteOriginRequestPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteOriginRequestPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePublicKey",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeletePublicKey"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePublicKeyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRealtimeLogConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteRealtimeLogConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRealtimeLogConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteResponseHeadersPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteResponseHeadersPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteResponseHeadersPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteStreamingDistribution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteStreamingDistribution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteStreamingDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFunction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeFunction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFunctionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFunctionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeKeyValueStore",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeKeyValueStore"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeKeyValueStoreResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeKeyValueStoreRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCachePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCachePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCachePolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCachePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCachePolicyConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCachePolicyConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCachePolicyConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCachePolicyConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCloudFrontOriginAccessIdentity",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCloudFrontOriginAccessIdentity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCloudFrontOriginAccessIdentityResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCloudFrontOriginAccessIdentityRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCloudFrontOriginAccessIdentityConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCloudFrontOriginAccessIdentityConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCloudFrontOriginAccessIdentityConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCloudFrontOriginAccessIdentityConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetContinuousDeploymentPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetContinuousDeploymentPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetContinuousDeploymentPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContinuousDeploymentPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetContinuousDeploymentPolicyConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetContinuousDeploymentPolicyConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetContinuousDeploymentPolicyConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContinuousDeploymentPolicyConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDistribution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDistribution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDistributionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDistributionConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDistributionConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDistributionConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDistributionConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFieldLevelEncryption",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFieldLevelEncryption"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFieldLevelEncryptionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFieldLevelEncryptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFieldLevelEncryptionConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFieldLevelEncryptionConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFieldLevelEncryptionConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFieldLevelEncryptionConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFieldLevelEncryptionProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFieldLevelEncryptionProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFieldLevelEncryptionProfileResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFieldLevelEncryptionProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFieldLevelEncryptionProfileConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFieldLevelEncryptionProfileConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFieldLevelEncryptionProfileConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFieldLevelEncryptionProfileConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFunction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFunction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFunctionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFunctionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInvalidation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetInvalidation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInvalidationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInvalidationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKeyGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetKeyGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKeyGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKeyGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKeyGroupConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetKeyGroupConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKeyGroupConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKeyGroupConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMonitoringSubscription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMonitoringSubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMonitoringSubscriptionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMonitoringSubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetOriginAccessControl",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetOriginAccessControl"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOriginAccessControlResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOriginAccessControlRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetOriginAccessControlConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetOriginAccessControlConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOriginAccessControlConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOriginAccessControlConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetOriginRequestPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetOriginRequestPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOriginRequestPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOriginRequestPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetOriginRequestPolicyConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetOriginRequestPolicyConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOriginRequestPolicyConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOriginRequestPolicyConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPublicKey",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPublicKey"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPublicKeyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPublicKeyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPublicKeyConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPublicKeyConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPublicKeyConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPublicKeyConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRealtimeLogConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetRealtimeLogConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRealtimeLogConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRealtimeLogConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResponseHeadersPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResponseHeadersPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResponseHeadersPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResponseHeadersPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResponseHeadersPolicyConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResponseHeadersPolicyConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResponseHeadersPolicyConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResponseHeadersPolicyConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetStreamingDistribution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetStreamingDistribution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetStreamingDistributionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetStreamingDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetStreamingDistributionConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetStreamingDistributionConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetStreamingDistributionConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetStreamingDistributionConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCachePolicies",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListCachePolicies"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCachePoliciesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCachePoliciesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCloudFrontOriginAccessIdentities",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListCloudFrontOriginAccessIdentities"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCloudFrontOriginAccessIdentitiesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCloudFrontOriginAccessIdentitiesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListConflictingAliases",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListConflictingAliases"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListConflictingAliasesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListConflictingAliasesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListContinuousDeploymentPolicies",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListContinuousDeploymentPolicies"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListContinuousDeploymentPoliciesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListContinuousDeploymentPoliciesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDistributions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDistributions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDistributionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDistributionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDistributionsByCachePolicyId",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDistributionsByCachePolicyId"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDistributionsByCachePolicyIdResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDistributionsByCachePolicyIdRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDistributionsByKeyGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDistributionsByKeyGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDistributionsByKeyGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDistributionsByKeyGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDistributionsByOriginRequestPolicyId",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDistributionsByOriginRequestPolicyId"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDistributionsByOriginRequestPolicyIdResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDistributionsByOriginRequestPolicyIdRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDistributionsByRealtimeLogConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDistributionsByRealtimeLogConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDistributionsByRealtimeLogConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDistributionsByRealtimeLogConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDistributionsByResponseHeadersPolicyId",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDistributionsByResponseHeadersPolicyId"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDistributionsByResponseHeadersPolicyIdResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDistributionsByResponseHeadersPolicyIdRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDistributionsByWebACLId",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDistributionsByWebACLId"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDistributionsByWebACLIdResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDistributionsByWebACLIdRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFieldLevelEncryptionConfigs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListFieldLevelEncryptionConfigs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFieldLevelEncryptionConfigsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFieldLevelEncryptionConfigsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFieldLevelEncryptionProfiles",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListFieldLevelEncryptionProfiles"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFieldLevelEncryptionProfilesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFieldLevelEncryptionProfilesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFunctions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListFunctions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFunctionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFunctionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListInvalidations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListInvalidations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInvalidationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInvalidationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListKeyGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListKeyGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKeyGroupsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKeyGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListKeyValueStores",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListKeyValueStores"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKeyValueStoresResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKeyValueStoresRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListOriginAccessControls",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListOriginAccessControls"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOriginAccessControlsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOriginAccessControlsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListOriginRequestPolicies",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListOriginRequestPolicies"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOriginRequestPoliciesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOriginRequestPoliciesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPublicKeys",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListPublicKeys"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPublicKeysResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPublicKeysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRealtimeLogConfigs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListRealtimeLogConfigs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRealtimeLogConfigsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRealtimeLogConfigsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResponseHeadersPolicies",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResponseHeadersPolicies"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResponseHeadersPoliciesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResponseHeadersPoliciesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListStreamingDistributions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListStreamingDistributions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStreamingDistributionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListStreamingDistributionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PublishFunction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PublishFunction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PublishFunctionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PublishFunctionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TestFunction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TestFunction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestFunctionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestFunctionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCachePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateCachePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCachePolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCachePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCloudFrontOriginAccessIdentity",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateCloudFrontOriginAccessIdentity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCloudFrontOriginAccessIdentityResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCloudFrontOriginAccessIdentityRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateContinuousDeploymentPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateContinuousDeploymentPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateContinuousDeploymentPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateContinuousDeploymentPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDistribution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDistribution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDistributionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDistributionWithStagingConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDistributionWithStagingConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDistributionWithStagingConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDistributionWithStagingConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFieldLevelEncryptionConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateFieldLevelEncryptionConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFieldLevelEncryptionConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFieldLevelEncryptionConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFieldLevelEncryptionProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateFieldLevelEncryptionProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFieldLevelEncryptionProfileResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFieldLevelEncryptionProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFunction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateFunction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFunctionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFunctionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateKeyGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateKeyGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateKeyGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateKeyGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateKeyValueStore",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateKeyValueStore"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateKeyValueStoreResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateKeyValueStoreRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateOriginAccessControl",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateOriginAccessControl"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateOriginAccessControlResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateOriginAccessControlRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateOriginRequestPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateOriginRequestPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateOriginRequestPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateOriginRequestPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePublicKey",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdatePublicKey"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePublicKeyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePublicKeyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRealtimeLogConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateRealtimeLogConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRealtimeLogConfigResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRealtimeLogConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateResponseHeadersPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateResponseHeadersPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResponseHeadersPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResponseHeadersPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateStreamingDistribution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateStreamingDistribution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateStreamingDistributionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateStreamingDistributionRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateAliasRequest": {
            "type": "object",
            "properties": {
                "TargetDistributionId": {
                    "$ref": "#/$defs/string"
                },
                "Alias": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "string": {
            "type": "string"
        },
        "CopyDistributionResult": {
            "type": "object",
            "properties": {
                "Distribution": {
                    "$ref": "#/$defs/Distribution"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "Distribution": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "ARN": {
                    "$ref": "#/$defs/string"
                },
                "Status": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "InProgressInvalidationBatches": {
                    "$ref": "#/$defs/integer"
                },
                "DomainName": {
                    "$ref": "#/$defs/string"
                },
                "ActiveTrustedSigners": {
                    "$ref": "#/$defs/ActiveTrustedSigners"
                },
                "ActiveTrustedKeyGroups": {
                    "$ref": "#/$defs/ActiveTrustedKeyGroups"
                },
                "DistributionConfig": {
                    "$ref": "#/$defs/DistributionConfig"
                },
                "AliasICPRecordals": {
                    "$ref": "#/$defs/AliasICPRecordals"
                }
            }
        },
        "timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "integer": {
            "type": "integer",
            "format": "int32"
        },
        "ActiveTrustedSigners": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/SignerList"
                }
            }
        },
        "boolean": {
            "type": "boolean"
        },
        "SignerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Signer"
            }
        },
        "Signer": {
            "type": "object",
            "properties": {
                "AwsAccountNumber": {
                    "$ref": "#/$defs/string"
                },
                "KeyPairIds": {
                    "$ref": "#/$defs/KeyPairIds"
                }
            }
        },
        "KeyPairIds": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/KeyPairIdList"
                }
            }
        },
        "KeyPairIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "ActiveTrustedKeyGroups": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/KGKeyPairIdsList"
                }
            }
        },
        "KGKeyPairIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KGKeyPairIds"
            }
        },
        "KGKeyPairIds": {
            "type": "object",
            "properties": {
                "KeyGroupId": {
                    "$ref": "#/$defs/string"
                },
                "KeyPairIds": {
                    "$ref": "#/$defs/KeyPairIds"
                }
            }
        },
        "DistributionConfig": {
            "type": "object",
            "properties": {
                "CallerReference": {
                    "$ref": "#/$defs/string"
                },
                "Aliases": {
                    "$ref": "#/$defs/Aliases"
                },
                "DefaultRootObject": {
                    "$ref": "#/$defs/string"
                },
                "Origins": {
                    "$ref": "#/$defs/Origins"
                },
                "OriginGroups": {
                    "$ref": "#/$defs/OriginGroups"
                },
                "DefaultCacheBehavior": {
                    "$ref": "#/$defs/DefaultCacheBehavior"
                },
                "CacheBehaviors": {
                    "$ref": "#/$defs/CacheBehaviors"
                },
                "CustomErrorResponses": {
                    "$ref": "#/$defs/CustomErrorResponses"
                },
                "Comment": {
                    "$ref": "#/$defs/CommentType"
                },
                "Logging": {
                    "$ref": "#/$defs/LoggingConfig"
                },
                "PriceClass": {
                    "$ref": "#/$defs/PriceClass"
                },
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "ViewerCertificate": {
                    "$ref": "#/$defs/ViewerCertificate"
                },
                "Restrictions": {
                    "$ref": "#/$defs/Restrictions"
                },
                "WebACLId": {
                    "$ref": "#/$defs/string"
                },
                "HttpVersion": {
                    "$ref": "#/$defs/HttpVersion"
                },
                "IsIPV6Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "ContinuousDeploymentPolicyId": {
                    "$ref": "#/$defs/string"
                },
                "Staging": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "Aliases": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/AliasList"
                }
            }
        },
        "AliasList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "Origins": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/OriginList"
                }
            }
        },
        "OriginList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Origin"
            }
        },
        "Origin": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "DomainName": {
                    "$ref": "#/$defs/string"
                },
                "OriginPath": {
                    "$ref": "#/$defs/string"
                },
                "CustomHeaders": {
                    "$ref": "#/$defs/CustomHeaders"
                },
                "S3OriginConfig": {
                    "$ref": "#/$defs/S3OriginConfig"
                },
                "CustomOriginConfig": {
                    "$ref": "#/$defs/CustomOriginConfig"
                },
                "ConnectionAttempts": {
                    "$ref": "#/$defs/integer"
                },
                "ConnectionTimeout": {
                    "$ref": "#/$defs/integer"
                },
                "OriginShield": {
                    "$ref": "#/$defs/OriginShield"
                },
                "OriginAccessControlId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CustomHeaders": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/OriginCustomHeadersList"
                }
            }
        },
        "OriginCustomHeadersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OriginCustomHeader"
            }
        },
        "OriginCustomHeader": {
            "type": "object",
            "properties": {
                "HeaderName": {
                    "$ref": "#/$defs/string"
                },
                "HeaderValue": {
                    "$ref": "#/$defs/sensitiveStringType"
                }
            }
        },
        "sensitiveStringType": {
            "type": "string"
        },
        "S3OriginConfig": {
            "type": "object",
            "properties": {
                "OriginAccessIdentity": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CustomOriginConfig": {
            "type": "object",
            "properties": {
                "HTTPPort": {
                    "$ref": "#/$defs/integer"
                },
                "HTTPSPort": {
                    "$ref": "#/$defs/integer"
                },
                "OriginProtocolPolicy": {
                    "$ref": "#/$defs/OriginProtocolPolicy"
                },
                "OriginSslProtocols": {
                    "$ref": "#/$defs/OriginSslProtocols"
                },
                "OriginReadTimeout": {
                    "$ref": "#/$defs/integer"
                },
                "OriginKeepaliveTimeout": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "OriginProtocolPolicy": {
            "enum": [
                "http_only",
                "match_viewer",
                "https_only"
            ]
        },
        "OriginSslProtocols": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/SslProtocolsList"
                }
            }
        },
        "SslProtocolsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SslProtocol"
            }
        },
        "SslProtocol": {
            "enum": [
                "SSLv3",
                "TLSv1",
                "TLSv1_1",
                "TLSv1_2"
            ]
        },
        "OriginShield": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "OriginShieldRegion": {
                    "$ref": "#/$defs/OriginShieldRegion"
                }
            }
        },
        "OriginShieldRegion": {
            "type": "string"
        },
        "OriginGroups": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/OriginGroupList"
                }
            }
        },
        "OriginGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OriginGroup"
            }
        },
        "OriginGroup": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "FailoverCriteria": {
                    "$ref": "#/$defs/OriginGroupFailoverCriteria"
                },
                "Members": {
                    "$ref": "#/$defs/OriginGroupMembers"
                }
            }
        },
        "OriginGroupFailoverCriteria": {
            "type": "object",
            "properties": {
                "StatusCodes": {
                    "$ref": "#/$defs/StatusCodes"
                }
            }
        },
        "StatusCodes": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/StatusCodeList"
                }
            }
        },
        "StatusCodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/integer"
            }
        },
        "OriginGroupMembers": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/OriginGroupMemberList"
                }
            }
        },
        "OriginGroupMemberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OriginGroupMember"
            }
        },
        "OriginGroupMember": {
            "type": "object",
            "properties": {
                "OriginId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DefaultCacheBehavior": {
            "type": "object",
            "properties": {
                "TargetOriginId": {
                    "$ref": "#/$defs/string"
                },
                "TrustedSigners": {
                    "$ref": "#/$defs/TrustedSigners"
                },
                "TrustedKeyGroups": {
                    "$ref": "#/$defs/TrustedKeyGroups"
                },
                "ViewerProtocolPolicy": {
                    "$ref": "#/$defs/ViewerProtocolPolicy"
                },
                "AllowedMethods": {
                    "$ref": "#/$defs/AllowedMethods"
                },
                "SmoothStreaming": {
                    "$ref": "#/$defs/boolean"
                },
                "Compress": {
                    "$ref": "#/$defs/boolean"
                },
                "LambdaFunctionAssociations": {
                    "$ref": "#/$defs/LambdaFunctionAssociations"
                },
                "FunctionAssociations": {
                    "$ref": "#/$defs/FunctionAssociations"
                },
                "FieldLevelEncryptionId": {
                    "$ref": "#/$defs/string"
                },
                "RealtimeLogConfigArn": {
                    "$ref": "#/$defs/string"
                },
                "CachePolicyId": {
                    "$ref": "#/$defs/string"
                },
                "OriginRequestPolicyId": {
                    "$ref": "#/$defs/string"
                },
                "ResponseHeadersPolicyId": {
                    "$ref": "#/$defs/string"
                },
                "ForwardedValues": {
                    "$ref": "#/$defs/ForwardedValues"
                },
                "MinTTL": {
                    "$ref": "#/$defs/long"
                },
                "DefaultTTL": {
                    "$ref": "#/$defs/long"
                },
                "MaxTTL": {
                    "$ref": "#/$defs/long"
                }
            }
        },
        "TrustedSigners": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/AwsAccountNumberList"
                }
            }
        },
        "AwsAccountNumberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "TrustedKeyGroups": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/TrustedKeyGroupIdList"
                }
            }
        },
        "TrustedKeyGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "ViewerProtocolPolicy": {
            "enum": [
                "allow_all",
                "https_only",
                "redirect_to_https"
            ]
        },
        "AllowedMethods": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/MethodsList"
                },
                "CachedMethods": {
                    "$ref": "#/$defs/CachedMethods"
                }
            }
        },
        "MethodsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Method"
            }
        },
        "Method": {
            "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "OPTIONS",
                "DELETE"
            ]
        },
        "CachedMethods": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/MethodsList"
                }
            }
        },
        "LambdaFunctionAssociations": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/LambdaFunctionAssociationList"
                }
            }
        },
        "LambdaFunctionAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LambdaFunctionAssociation"
            }
        },
        "LambdaFunctionAssociation": {
            "type": "object",
            "properties": {
                "LambdaFunctionARN": {
                    "$ref": "#/$defs/LambdaFunctionARN"
                },
                "EventType": {
                    "$ref": "#/$defs/EventType"
                },
                "IncludeBody": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "LambdaFunctionARN": {
            "type": "string"
        },
        "EventType": {
            "enum": [
                "viewer_request",
                "viewer_response",
                "origin_request",
                "origin_response"
            ]
        },
        "FunctionAssociations": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/FunctionAssociationList"
                }
            }
        },
        "FunctionAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FunctionAssociation"
            }
        },
        "FunctionAssociation": {
            "type": "object",
            "properties": {
                "FunctionARN": {
                    "$ref": "#/$defs/FunctionARN"
                },
                "EventType": {
                    "$ref": "#/$defs/EventType"
                }
            }
        },
        "FunctionARN": {
            "type": "string"
        },
        "ForwardedValues": {
            "type": "object",
            "properties": {
                "QueryString": {
                    "$ref": "#/$defs/boolean"
                },
                "Cookies": {
                    "$ref": "#/$defs/CookiePreference"
                },
                "Headers": {
                    "$ref": "#/$defs/Headers"
                },
                "QueryStringCacheKeys": {
                    "$ref": "#/$defs/QueryStringCacheKeys"
                }
            }
        },
        "CookiePreference": {
            "type": "object",
            "properties": {
                "Forward": {
                    "$ref": "#/$defs/ItemSelection"
                },
                "WhitelistedNames": {
                    "$ref": "#/$defs/CookieNames"
                }
            }
        },
        "ItemSelection": {
            "enum": [
                "none",
                "whitelist",
                "all"
            ]
        },
        "CookieNames": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/CookieNameList"
                }
            }
        },
        "CookieNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "Headers": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/HeaderList"
                }
            }
        },
        "HeaderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "QueryStringCacheKeys": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/QueryStringCacheKeysList"
                }
            }
        },
        "QueryStringCacheKeysList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "long": {
            "type": "integer",
            "format": "int64"
        },
        "CacheBehaviors": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/CacheBehaviorList"
                }
            }
        },
        "CacheBehaviorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CacheBehavior"
            }
        },
        "CacheBehavior": {
            "type": "object",
            "properties": {
                "PathPattern": {
                    "$ref": "#/$defs/string"
                },
                "TargetOriginId": {
                    "$ref": "#/$defs/string"
                },
                "TrustedSigners": {
                    "$ref": "#/$defs/TrustedSigners"
                },
                "TrustedKeyGroups": {
                    "$ref": "#/$defs/TrustedKeyGroups"
                },
                "ViewerProtocolPolicy": {
                    "$ref": "#/$defs/ViewerProtocolPolicy"
                },
                "AllowedMethods": {
                    "$ref": "#/$defs/AllowedMethods"
                },
                "SmoothStreaming": {
                    "$ref": "#/$defs/boolean"
                },
                "Compress": {
                    "$ref": "#/$defs/boolean"
                },
                "LambdaFunctionAssociations": {
                    "$ref": "#/$defs/LambdaFunctionAssociations"
                },
                "FunctionAssociations": {
                    "$ref": "#/$defs/FunctionAssociations"
                },
                "FieldLevelEncryptionId": {
                    "$ref": "#/$defs/string"
                },
                "RealtimeLogConfigArn": {
                    "$ref": "#/$defs/string"
                },
                "CachePolicyId": {
                    "$ref": "#/$defs/string"
                },
                "OriginRequestPolicyId": {
                    "$ref": "#/$defs/string"
                },
                "ResponseHeadersPolicyId": {
                    "$ref": "#/$defs/string"
                },
                "ForwardedValues": {
                    "$ref": "#/$defs/ForwardedValues"
                },
                "MinTTL": {
                    "$ref": "#/$defs/long"
                },
                "DefaultTTL": {
                    "$ref": "#/$defs/long"
                },
                "MaxTTL": {
                    "$ref": "#/$defs/long"
                }
            }
        },
        "CustomErrorResponses": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/CustomErrorResponseList"
                }
            }
        },
        "CustomErrorResponseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomErrorResponse"
            }
        },
        "CustomErrorResponse": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "$ref": "#/$defs/integer"
                },
                "ResponsePagePath": {
                    "$ref": "#/$defs/string"
                },
                "ResponseCode": {
                    "$ref": "#/$defs/string"
                },
                "ErrorCachingMinTTL": {
                    "$ref": "#/$defs/long"
                }
            }
        },
        "CommentType": {
            "type": "string"
        },
        "LoggingConfig": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "IncludeCookies": {
                    "$ref": "#/$defs/boolean"
                },
                "Bucket": {
                    "$ref": "#/$defs/string"
                },
                "Prefix": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "PriceClass": {
            "enum": [
                "PriceClass_100",
                "PriceClass_200",
                "PriceClass_All"
            ]
        },
        "ViewerCertificate": {
            "type": "object",
            "properties": {
                "CloudFrontDefaultCertificate": {
                    "$ref": "#/$defs/boolean"
                },
                "IAMCertificateId": {
                    "$ref": "#/$defs/string"
                },
                "ACMCertificateArn": {
                    "$ref": "#/$defs/string"
                },
                "SSLSupportMethod": {
                    "$ref": "#/$defs/SSLSupportMethod"
                },
                "MinimumProtocolVersion": {
                    "$ref": "#/$defs/MinimumProtocolVersion"
                },
                "Certificate": {
                    "$ref": "#/$defs/string"
                },
                "CertificateSource": {
                    "$ref": "#/$defs/CertificateSource"
                }
            }
        },
        "SSLSupportMethod": {
            "enum": [
                "sni_only",
                "vip",
                "static_ip"
            ]
        },
        "MinimumProtocolVersion": {
            "enum": [
                "SSLv3",
                "TLSv1",
                "TLSv1_2016",
                "TLSv1_1_2016",
                "TLSv1_2_2018",
                "TLSv1_2_2019",
                "TLSv1_2_2021"
            ]
        },
        "CertificateSource": {
            "enum": [
                "cloudfront",
                "iam",
                "acm"
            ]
        },
        "Restrictions": {
            "type": "object",
            "properties": {
                "GeoRestriction": {
                    "$ref": "#/$defs/GeoRestriction"
                }
            }
        },
        "GeoRestriction": {
            "type": "object",
            "properties": {
                "RestrictionType": {
                    "$ref": "#/$defs/GeoRestrictionType"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/LocationList"
                }
            }
        },
        "GeoRestrictionType": {
            "enum": [
                "blacklist",
                "whitelist",
                "none"
            ]
        },
        "LocationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "HttpVersion": {
            "enum": [
                "http1_1",
                "http2",
                "http3",
                "http2and3"
            ]
        },
        "AliasICPRecordals": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AliasICPRecordal"
            }
        },
        "AliasICPRecordal": {
            "type": "object",
            "properties": {
                "CNAME": {
                    "$ref": "#/$defs/string"
                },
                "ICPRecordalStatus": {
                    "$ref": "#/$defs/ICPRecordalStatus"
                }
            }
        },
        "ICPRecordalStatus": {
            "enum": [
                "APPROVED",
                "SUSPENDED",
                "PENDING"
            ]
        },
        "CopyDistributionRequest": {
            "type": "object",
            "properties": {
                "PrimaryDistributionId": {
                    "$ref": "#/$defs/string"
                },
                "Staging": {
                    "$ref": "#/$defs/boolean"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                },
                "CallerReference": {
                    "$ref": "#/$defs/string"
                },
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "CreateCachePolicyResult": {
            "type": "object",
            "properties": {
                "CachePolicy": {
                    "$ref": "#/$defs/CachePolicy"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CachePolicy": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "CachePolicyConfig": {
                    "$ref": "#/$defs/CachePolicyConfig"
                }
            }
        },
        "CachePolicyConfig": {
            "type": "object",
            "properties": {
                "Comment": {
                    "$ref": "#/$defs/string"
                },
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "DefaultTTL": {
                    "$ref": "#/$defs/long"
                },
                "MaxTTL": {
                    "$ref": "#/$defs/long"
                },
                "MinTTL": {
                    "$ref": "#/$defs/long"
                },
                "ParametersInCacheKeyAndForwardedToOrigin": {
                    "$ref": "#/$defs/ParametersInCacheKeyAndForwardedToOrigin"
                }
            }
        },
        "ParametersInCacheKeyAndForwardedToOrigin": {
            "type": "object",
            "properties": {
                "EnableAcceptEncodingGzip": {
                    "$ref": "#/$defs/boolean"
                },
                "EnableAcceptEncodingBrotli": {
                    "$ref": "#/$defs/boolean"
                },
                "HeadersConfig": {
                    "$ref": "#/$defs/CachePolicyHeadersConfig"
                },
                "CookiesConfig": {
                    "$ref": "#/$defs/CachePolicyCookiesConfig"
                },
                "QueryStringsConfig": {
                    "$ref": "#/$defs/CachePolicyQueryStringsConfig"
                }
            }
        },
        "CachePolicyHeadersConfig": {
            "type": "object",
            "properties": {
                "HeaderBehavior": {
                    "$ref": "#/$defs/CachePolicyHeaderBehavior"
                },
                "Headers": {
                    "$ref": "#/$defs/Headers"
                }
            }
        },
        "CachePolicyHeaderBehavior": {
            "enum": [
                "none",
                "whitelist"
            ]
        },
        "CachePolicyCookiesConfig": {
            "type": "object",
            "properties": {
                "CookieBehavior": {
                    "$ref": "#/$defs/CachePolicyCookieBehavior"
                },
                "Cookies": {
                    "$ref": "#/$defs/CookieNames"
                }
            }
        },
        "CachePolicyCookieBehavior": {
            "enum": [
                "none",
                "whitelist",
                "allExcept",
                "all"
            ]
        },
        "CachePolicyQueryStringsConfig": {
            "type": "object",
            "properties": {
                "QueryStringBehavior": {
                    "$ref": "#/$defs/CachePolicyQueryStringBehavior"
                },
                "QueryStrings": {
                    "$ref": "#/$defs/QueryStringNames"
                }
            }
        },
        "CachePolicyQueryStringBehavior": {
            "enum": [
                "none",
                "whitelist",
                "allExcept",
                "all"
            ]
        },
        "QueryStringNames": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/QueryStringNamesList"
                }
            }
        },
        "QueryStringNamesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "CreateCachePolicyRequest": {
            "type": "object",
            "properties": {
                "CachePolicyConfig": {
                    "$ref": "#/$defs/CachePolicyConfig"
                }
            }
        },
        "CreateCloudFrontOriginAccessIdentityResult": {
            "type": "object",
            "properties": {
                "CloudFrontOriginAccessIdentity": {
                    "$ref": "#/$defs/CloudFrontOriginAccessIdentity"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CloudFrontOriginAccessIdentity": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "S3CanonicalUserId": {
                    "$ref": "#/$defs/string"
                },
                "CloudFrontOriginAccessIdentityConfig": {
                    "$ref": "#/$defs/CloudFrontOriginAccessIdentityConfig"
                }
            }
        },
        "CloudFrontOriginAccessIdentityConfig": {
            "type": "object",
            "properties": {
                "CallerReference": {
                    "$ref": "#/$defs/string"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreateCloudFrontOriginAccessIdentityRequest": {
            "type": "object",
            "properties": {
                "CloudFrontOriginAccessIdentityConfig": {
                    "$ref": "#/$defs/CloudFrontOriginAccessIdentityConfig"
                }
            }
        },
        "CreateContinuousDeploymentPolicyResult": {
            "type": "object",
            "properties": {
                "ContinuousDeploymentPolicy": {
                    "$ref": "#/$defs/ContinuousDeploymentPolicy"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ContinuousDeploymentPolicy": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "ContinuousDeploymentPolicyConfig": {
                    "$ref": "#/$defs/ContinuousDeploymentPolicyConfig"
                }
            }
        },
        "ContinuousDeploymentPolicyConfig": {
            "type": "object",
            "properties": {
                "StagingDistributionDnsNames": {
                    "$ref": "#/$defs/StagingDistributionDnsNames"
                },
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "TrafficConfig": {
                    "$ref": "#/$defs/TrafficConfig"
                }
            }
        },
        "StagingDistributionDnsNames": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/StagingDistributionDnsNameList"
                }
            }
        },
        "StagingDistributionDnsNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "TrafficConfig": {
            "type": "object",
            "properties": {
                "SingleWeightConfig": {
                    "$ref": "#/$defs/ContinuousDeploymentSingleWeightConfig"
                },
                "SingleHeaderConfig": {
                    "$ref": "#/$defs/ContinuousDeploymentSingleHeaderConfig"
                },
                "Type": {
                    "$ref": "#/$defs/ContinuousDeploymentPolicyType"
                }
            }
        },
        "ContinuousDeploymentSingleWeightConfig": {
            "type": "object",
            "properties": {
                "Weight": {
                    "$ref": "#/$defs/float"
                },
                "SessionStickinessConfig": {
                    "$ref": "#/$defs/SessionStickinessConfig"
                }
            }
        },
        "float": {
            "type": "number",
            "format": "float"
        },
        "SessionStickinessConfig": {
            "type": "object",
            "properties": {
                "IdleTTL": {
                    "$ref": "#/$defs/integer"
                },
                "MaximumTTL": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ContinuousDeploymentSingleHeaderConfig": {
            "type": "object",
            "properties": {
                "Header": {
                    "$ref": "#/$defs/string"
                },
                "Value": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ContinuousDeploymentPolicyType": {
            "enum": [
                "SingleWeight",
                "SingleHeader"
            ]
        },
        "CreateContinuousDeploymentPolicyRequest": {
            "type": "object",
            "properties": {
                "ContinuousDeploymentPolicyConfig": {
                    "$ref": "#/$defs/ContinuousDeploymentPolicyConfig"
                }
            }
        },
        "CreateDistributionResult": {
            "type": "object",
            "properties": {
                "Distribution": {
                    "$ref": "#/$defs/Distribution"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreateDistributionRequest": {
            "type": "object",
            "properties": {
                "DistributionConfig": {
                    "$ref": "#/$defs/DistributionConfig"
                }
            }
        },
        "CreateDistributionWithTagsResult": {
            "type": "object",
            "properties": {
                "Distribution": {
                    "$ref": "#/$defs/Distribution"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreateDistributionWithTagsRequest": {
            "type": "object",
            "properties": {
                "DistributionConfigWithTags": {
                    "$ref": "#/$defs/DistributionConfigWithTags"
                }
            }
        },
        "DistributionConfigWithTags": {
            "type": "object",
            "properties": {
                "DistributionConfig": {
                    "$ref": "#/$defs/DistributionConfig"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "Tags": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateFieldLevelEncryptionConfigResult": {
            "type": "object",
            "properties": {
                "FieldLevelEncryption": {
                    "$ref": "#/$defs/FieldLevelEncryption"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "FieldLevelEncryption": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "FieldLevelEncryptionConfig": {
                    "$ref": "#/$defs/FieldLevelEncryptionConfig"
                }
            }
        },
        "FieldLevelEncryptionConfig": {
            "type": "object",
            "properties": {
                "CallerReference": {
                    "$ref": "#/$defs/string"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                },
                "QueryArgProfileConfig": {
                    "$ref": "#/$defs/QueryArgProfileConfig"
                },
                "ContentTypeProfileConfig": {
                    "$ref": "#/$defs/ContentTypeProfileConfig"
                }
            }
        },
        "QueryArgProfileConfig": {
            "type": "object",
            "properties": {
                "ForwardWhenQueryArgProfileIsUnknown": {
                    "$ref": "#/$defs/boolean"
                },
                "QueryArgProfiles": {
                    "$ref": "#/$defs/QueryArgProfiles"
                }
            }
        },
        "QueryArgProfiles": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/QueryArgProfileList"
                }
            }
        },
        "QueryArgProfileList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/QueryArgProfile"
            }
        },
        "QueryArgProfile": {
            "type": "object",
            "properties": {
                "QueryArg": {
                    "$ref": "#/$defs/string"
                },
                "ProfileId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ContentTypeProfileConfig": {
            "type": "object",
            "properties": {
                "ForwardWhenContentTypeIsUnknown": {
                    "$ref": "#/$defs/boolean"
                },
                "ContentTypeProfiles": {
                    "$ref": "#/$defs/ContentTypeProfiles"
                }
            }
        },
        "ContentTypeProfiles": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/ContentTypeProfileList"
                }
            }
        },
        "ContentTypeProfileList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContentTypeProfile"
            }
        },
        "ContentTypeProfile": {
            "type": "object",
            "properties": {
                "Format": {
                    "$ref": "#/$defs/Format"
                },
                "ProfileId": {
                    "$ref": "#/$defs/string"
                },
                "ContentType": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "Format": {
            "enum": [
                "URLEncoded"
            ]
        },
        "CreateFieldLevelEncryptionConfigRequest": {
            "type": "object",
            "properties": {
                "FieldLevelEncryptionConfig": {
                    "$ref": "#/$defs/FieldLevelEncryptionConfig"
                }
            }
        },
        "CreateFieldLevelEncryptionProfileResult": {
            "type": "object",
            "properties": {
                "FieldLevelEncryptionProfile": {
                    "$ref": "#/$defs/FieldLevelEncryptionProfile"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "FieldLevelEncryptionProfile": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "FieldLevelEncryptionProfileConfig": {
                    "$ref": "#/$defs/FieldLevelEncryptionProfileConfig"
                }
            }
        },
        "FieldLevelEncryptionProfileConfig": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "CallerReference": {
                    "$ref": "#/$defs/string"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                },
                "EncryptionEntities": {
                    "$ref": "#/$defs/EncryptionEntities"
                }
            }
        },
        "EncryptionEntities": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/EncryptionEntityList"
                }
            }
        },
        "EncryptionEntityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EncryptionEntity"
            }
        },
        "EncryptionEntity": {
            "type": "object",
            "properties": {
                "PublicKeyId": {
                    "$ref": "#/$defs/string"
                },
                "ProviderId": {
                    "$ref": "#/$defs/string"
                },
                "FieldPatterns": {
                    "$ref": "#/$defs/FieldPatterns"
                }
            }
        },
        "FieldPatterns": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/FieldPatternList"
                }
            }
        },
        "FieldPatternList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "CreateFieldLevelEncryptionProfileRequest": {
            "type": "object",
            "properties": {
                "FieldLevelEncryptionProfileConfig": {
                    "$ref": "#/$defs/FieldLevelEncryptionProfileConfig"
                }
            }
        },
        "CreateFunctionResult": {
            "type": "object",
            "properties": {
                "FunctionSummary": {
                    "$ref": "#/$defs/FunctionSummary"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "FunctionSummary": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FunctionName"
                },
                "Status": {
                    "$ref": "#/$defs/string"
                },
                "FunctionConfig": {
                    "$ref": "#/$defs/FunctionConfig"
                },
                "FunctionMetadata": {
                    "$ref": "#/$defs/FunctionMetadata"
                }
            }
        },
        "FunctionName": {
            "type": "string"
        },
        "FunctionConfig": {
            "type": "object",
            "properties": {
                "Comment": {
                    "$ref": "#/$defs/string"
                },
                "Runtime": {
                    "$ref": "#/$defs/FunctionRuntime"
                },
                "KeyValueStoreAssociations": {
                    "$ref": "#/$defs/KeyValueStoreAssociations"
                }
            }
        },
        "FunctionRuntime": {
            "enum": [
                "cloudfront_js_1_0",
                "cloudfront_js_2_0"
            ]
        },
        "KeyValueStoreAssociations": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/KeyValueStoreAssociationList"
                }
            }
        },
        "KeyValueStoreAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyValueStoreAssociation"
            }
        },
        "KeyValueStoreAssociation": {
            "type": "object",
            "properties": {
                "KeyValueStoreARN": {
                    "$ref": "#/$defs/KeyValueStoreARN"
                }
            }
        },
        "KeyValueStoreARN": {
            "type": "string"
        },
        "FunctionMetadata": {
            "type": "object",
            "properties": {
                "FunctionARN": {
                    "$ref": "#/$defs/string"
                },
                "Stage": {
                    "$ref": "#/$defs/FunctionStage"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "FunctionStage": {
            "enum": [
                "DEVELOPMENT",
                "LIVE"
            ]
        },
        "CreateFunctionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FunctionName"
                },
                "FunctionConfig": {
                    "$ref": "#/$defs/FunctionConfig"
                },
                "FunctionCode": {
                    "$ref": "#/$defs/FunctionBlob"
                }
            }
        },
        "FunctionBlob": {
            "type": "string",
            "format": "binary"
        },
        "CreateInvalidationResult": {
            "type": "object",
            "properties": {
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "Invalidation": {
                    "$ref": "#/$defs/Invalidation"
                }
            }
        },
        "Invalidation": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "Status": {
                    "$ref": "#/$defs/string"
                },
                "CreateTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "InvalidationBatch": {
                    "$ref": "#/$defs/InvalidationBatch"
                }
            }
        },
        "InvalidationBatch": {
            "type": "object",
            "properties": {
                "Paths": {
                    "$ref": "#/$defs/Paths"
                },
                "CallerReference": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "Paths": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/PathList"
                }
            }
        },
        "PathList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "CreateInvalidationRequest": {
            "type": "object",
            "properties": {
                "DistributionId": {
                    "$ref": "#/$defs/string"
                },
                "InvalidationBatch": {
                    "$ref": "#/$defs/InvalidationBatch"
                }
            }
        },
        "CreateKeyGroupResult": {
            "type": "object",
            "properties": {
                "KeyGroup": {
                    "$ref": "#/$defs/KeyGroup"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "KeyGroup": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "KeyGroupConfig": {
                    "$ref": "#/$defs/KeyGroupConfig"
                }
            }
        },
        "KeyGroupConfig": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "Items": {
                    "$ref": "#/$defs/PublicKeyIdList"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "PublicKeyIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "CreateKeyGroupRequest": {
            "type": "object",
            "properties": {
                "KeyGroupConfig": {
                    "$ref": "#/$defs/KeyGroupConfig"
                }
            }
        },
        "CreateKeyValueStoreResult": {
            "type": "object",
            "properties": {
                "KeyValueStore": {
                    "$ref": "#/$defs/KeyValueStore"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "KeyValueStore": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                },
                "ARN": {
                    "$ref": "#/$defs/string"
                },
                "Status": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "CreateKeyValueStoreRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/KeyValueStoreName"
                },
                "Comment": {
                    "$ref": "#/$defs/KeyValueStoreComment"
                },
                "ImportSource": {
                    "$ref": "#/$defs/ImportSource"
                }
            }
        },
        "KeyValueStoreName": {
            "type": "string"
        },
        "KeyValueStoreComment": {
            "type": "string"
        },
        "ImportSource": {
            "type": "object",
            "properties": {
                "SourceType": {
                    "$ref": "#/$defs/ImportSourceType"
                },
                "SourceARN": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ImportSourceType": {
            "enum": [
                "S3"
            ]
        },
        "CreateMonitoringSubscriptionResult": {
            "type": "object",
            "properties": {
                "MonitoringSubscription": {
                    "$ref": "#/$defs/MonitoringSubscription"
                }
            }
        },
        "MonitoringSubscription": {
            "type": "object",
            "properties": {
                "RealtimeMetricsSubscriptionConfig": {
                    "$ref": "#/$defs/RealtimeMetricsSubscriptionConfig"
                }
            }
        },
        "RealtimeMetricsSubscriptionConfig": {
            "type": "object",
            "properties": {
                "RealtimeMetricsSubscriptionStatus": {
                    "$ref": "#/$defs/RealtimeMetricsSubscriptionStatus"
                }
            }
        },
        "RealtimeMetricsSubscriptionStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "CreateMonitoringSubscriptionRequest": {
            "type": "object",
            "properties": {
                "DistributionId": {
                    "$ref": "#/$defs/string"
                },
                "MonitoringSubscription": {
                    "$ref": "#/$defs/MonitoringSubscription"
                }
            }
        },
        "CreateOriginAccessControlResult": {
            "type": "object",
            "properties": {
                "OriginAccessControl": {
                    "$ref": "#/$defs/OriginAccessControl"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "OriginAccessControl": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "OriginAccessControlConfig": {
                    "$ref": "#/$defs/OriginAccessControlConfig"
                }
            }
        },
        "OriginAccessControlConfig": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "Description": {
                    "$ref": "#/$defs/string"
                },
                "SigningProtocol": {
                    "$ref": "#/$defs/OriginAccessControlSigningProtocols"
                },
                "SigningBehavior": {
                    "$ref": "#/$defs/OriginAccessControlSigningBehaviors"
                },
                "OriginAccessControlOriginType": {
                    "$ref": "#/$defs/OriginAccessControlOriginTypes"
                }
            }
        },
        "OriginAccessControlSigningProtocols": {
            "enum": [
                "sigv4"
            ]
        },
        "OriginAccessControlSigningBehaviors": {
            "enum": [
                "never",
                "always",
                "no_override"
            ]
        },
        "OriginAccessControlOriginTypes": {
            "enum": [
                "s3",
                "mediastore",
                "mediapackagev2",
                "lambda"
            ]
        },
        "CreateOriginAccessControlRequest": {
            "type": "object",
            "properties": {
                "OriginAccessControlConfig": {
                    "$ref": "#/$defs/OriginAccessControlConfig"
                }
            }
        },
        "CreateOriginRequestPolicyResult": {
            "type": "object",
            "properties": {
                "OriginRequestPolicy": {
                    "$ref": "#/$defs/OriginRequestPolicy"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "OriginRequestPolicy": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "OriginRequestPolicyConfig": {
                    "$ref": "#/$defs/OriginRequestPolicyConfig"
                }
            }
        },
        "OriginRequestPolicyConfig": {
            "type": "object",
            "properties": {
                "Comment": {
                    "$ref": "#/$defs/string"
                },
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "HeadersConfig": {
                    "$ref": "#/$defs/OriginRequestPolicyHeadersConfig"
                },
                "CookiesConfig": {
                    "$ref": "#/$defs/OriginRequestPolicyCookiesConfig"
                },
                "QueryStringsConfig": {
                    "$ref": "#/$defs/OriginRequestPolicyQueryStringsConfig"
                }
            }
        },
        "OriginRequestPolicyHeadersConfig": {
            "type": "object",
            "properties": {
                "HeaderBehavior": {
                    "$ref": "#/$defs/OriginRequestPolicyHeaderBehavior"
                },
                "Headers": {
                    "$ref": "#/$defs/Headers"
                }
            }
        },
        "OriginRequestPolicyHeaderBehavior": {
            "enum": [
                "none",
                "whitelist",
                "allViewer",
                "allViewerAndWhitelistCloudFront",
                "allExcept"
            ]
        },
        "OriginRequestPolicyCookiesConfig": {
            "type": "object",
            "properties": {
                "CookieBehavior": {
                    "$ref": "#/$defs/OriginRequestPolicyCookieBehavior"
                },
                "Cookies": {
                    "$ref": "#/$defs/CookieNames"
                }
            }
        },
        "OriginRequestPolicyCookieBehavior": {
            "enum": [
                "none",
                "whitelist",
                "all",
                "allExcept"
            ]
        },
        "OriginRequestPolicyQueryStringsConfig": {
            "type": "object",
            "properties": {
                "QueryStringBehavior": {
                    "$ref": "#/$defs/OriginRequestPolicyQueryStringBehavior"
                },
                "QueryStrings": {
                    "$ref": "#/$defs/QueryStringNames"
                }
            }
        },
        "OriginRequestPolicyQueryStringBehavior": {
            "enum": [
                "none",
                "whitelist",
                "all",
                "allExcept"
            ]
        },
        "CreateOriginRequestPolicyRequest": {
            "type": "object",
            "properties": {
                "OriginRequestPolicyConfig": {
                    "$ref": "#/$defs/OriginRequestPolicyConfig"
                }
            }
        },
        "CreatePublicKeyResult": {
            "type": "object",
            "properties": {
                "PublicKey": {
                    "$ref": "#/$defs/PublicKey"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "PublicKey": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "PublicKeyConfig": {
                    "$ref": "#/$defs/PublicKeyConfig"
                }
            }
        },
        "PublicKeyConfig": {
            "type": "object",
            "properties": {
                "CallerReference": {
                    "$ref": "#/$defs/string"
                },
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "EncodedKey": {
                    "$ref": "#/$defs/string"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreatePublicKeyRequest": {
            "type": "object",
            "properties": {
                "PublicKeyConfig": {
                    "$ref": "#/$defs/PublicKeyConfig"
                }
            }
        },
        "CreateRealtimeLogConfigResult": {
            "type": "object",
            "properties": {
                "RealtimeLogConfig": {
                    "$ref": "#/$defs/RealtimeLogConfig"
                }
            }
        },
        "RealtimeLogConfig": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/string"
                },
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "SamplingRate": {
                    "$ref": "#/$defs/long"
                },
                "EndPoints": {
                    "$ref": "#/$defs/EndPointList"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldList"
                }
            }
        },
        "EndPointList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EndPoint"
            }
        },
        "EndPoint": {
            "type": "object",
            "properties": {
                "StreamType": {
                    "$ref": "#/$defs/string"
                },
                "KinesisStreamConfig": {
                    "$ref": "#/$defs/KinesisStreamConfig"
                }
            }
        },
        "KinesisStreamConfig": {
            "type": "object",
            "properties": {
                "RoleARN": {
                    "$ref": "#/$defs/string"
                },
                "StreamARN": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "FieldList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "CreateRealtimeLogConfigRequest": {
            "type": "object",
            "properties": {
                "EndPoints": {
                    "$ref": "#/$defs/EndPointList"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldList"
                },
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "SamplingRate": {
                    "$ref": "#/$defs/long"
                }
            }
        },
        "CreateResponseHeadersPolicyResult": {
            "type": "object",
            "properties": {
                "ResponseHeadersPolicy": {
                    "$ref": "#/$defs/ResponseHeadersPolicy"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ResponseHeadersPolicy": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "ResponseHeadersPolicyConfig": {
                    "$ref": "#/$defs/ResponseHeadersPolicyConfig"
                }
            }
        },
        "ResponseHeadersPolicyConfig": {
            "type": "object",
            "properties": {
                "Comment": {
                    "$ref": "#/$defs/string"
                },
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "CorsConfig": {
                    "$ref": "#/$defs/ResponseHeadersPolicyCorsConfig"
                },
                "SecurityHeadersConfig": {
                    "$ref": "#/$defs/ResponseHeadersPolicySecurityHeadersConfig"
                },
                "ServerTimingHeadersConfig": {
                    "$ref": "#/$defs/ResponseHeadersPolicyServerTimingHeadersConfig"
                },
                "CustomHeadersConfig": {
                    "$ref": "#/$defs/ResponseHeadersPolicyCustomHeadersConfig"
                },
                "RemoveHeadersConfig": {
                    "$ref": "#/$defs/ResponseHeadersPolicyRemoveHeadersConfig"
                }
            }
        },
        "ResponseHeadersPolicyCorsConfig": {
            "type": "object",
            "properties": {
                "AccessControlAllowOrigins": {
                    "$ref": "#/$defs/ResponseHeadersPolicyAccessControlAllowOrigins"
                },
                "AccessControlAllowHeaders": {
                    "$ref": "#/$defs/ResponseHeadersPolicyAccessControlAllowHeaders"
                },
                "AccessControlAllowMethods": {
                    "$ref": "#/$defs/ResponseHeadersPolicyAccessControlAllowMethods"
                },
                "AccessControlAllowCredentials": {
                    "$ref": "#/$defs/boolean"
                },
                "AccessControlExposeHeaders": {
                    "$ref": "#/$defs/ResponseHeadersPolicyAccessControlExposeHeaders"
                },
                "AccessControlMaxAgeSec": {
                    "$ref": "#/$defs/integer"
                },
                "OriginOverride": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "ResponseHeadersPolicyAccessControlAllowOrigins": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/AccessControlAllowOriginsList"
                }
            }
        },
        "AccessControlAllowOriginsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "ResponseHeadersPolicyAccessControlAllowHeaders": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/AccessControlAllowHeadersList"
                }
            }
        },
        "AccessControlAllowHeadersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "ResponseHeadersPolicyAccessControlAllowMethods": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/AccessControlAllowMethodsList"
                }
            }
        },
        "AccessControlAllowMethodsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResponseHeadersPolicyAccessControlAllowMethodsValues"
            }
        },
        "ResponseHeadersPolicyAccessControlAllowMethodsValues": {
            "enum": [
                "GET",
                "POST",
                "OPTIONS",
                "PUT",
                "DELETE",
                "PATCH",
                "HEAD",
                "ALL"
            ]
        },
        "ResponseHeadersPolicyAccessControlExposeHeaders": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/AccessControlExposeHeadersList"
                }
            }
        },
        "AccessControlExposeHeadersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "ResponseHeadersPolicySecurityHeadersConfig": {
            "type": "object",
            "properties": {
                "XSSProtection": {
                    "$ref": "#/$defs/ResponseHeadersPolicyXSSProtection"
                },
                "FrameOptions": {
                    "$ref": "#/$defs/ResponseHeadersPolicyFrameOptions"
                },
                "ReferrerPolicy": {
                    "$ref": "#/$defs/ResponseHeadersPolicyReferrerPolicy"
                },
                "ContentSecurityPolicy": {
                    "$ref": "#/$defs/ResponseHeadersPolicyContentSecurityPolicy"
                },
                "ContentTypeOptions": {
                    "$ref": "#/$defs/ResponseHeadersPolicyContentTypeOptions"
                },
                "StrictTransportSecurity": {
                    "$ref": "#/$defs/ResponseHeadersPolicyStrictTransportSecurity"
                }
            }
        },
        "ResponseHeadersPolicyXSSProtection": {
            "type": "object",
            "properties": {
                "Override": {
                    "$ref": "#/$defs/boolean"
                },
                "Protection": {
                    "$ref": "#/$defs/boolean"
                },
                "ModeBlock": {
                    "$ref": "#/$defs/boolean"
                },
                "ReportUri": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ResponseHeadersPolicyFrameOptions": {
            "type": "object",
            "properties": {
                "Override": {
                    "$ref": "#/$defs/boolean"
                },
                "FrameOption": {
                    "$ref": "#/$defs/FrameOptionsList"
                }
            }
        },
        "FrameOptionsList": {
            "enum": [
                "DENY",
                "SAMEORIGIN"
            ]
        },
        "ResponseHeadersPolicyReferrerPolicy": {
            "type": "object",
            "properties": {
                "Override": {
                    "$ref": "#/$defs/boolean"
                },
                "ReferrerPolicy": {
                    "$ref": "#/$defs/ReferrerPolicyList"
                }
            }
        },
        "ReferrerPolicyList": {
            "enum": [
                "no_referrer",
                "no_referrer_when_downgrade",
                "origin",
                "origin_when_cross_origin",
                "same_origin",
                "strict_origin",
                "strict_origin_when_cross_origin",
                "unsafe_url"
            ]
        },
        "ResponseHeadersPolicyContentSecurityPolicy": {
            "type": "object",
            "properties": {
                "Override": {
                    "$ref": "#/$defs/boolean"
                },
                "ContentSecurityPolicy": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ResponseHeadersPolicyContentTypeOptions": {
            "type": "object",
            "properties": {
                "Override": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "ResponseHeadersPolicyStrictTransportSecurity": {
            "type": "object",
            "properties": {
                "Override": {
                    "$ref": "#/$defs/boolean"
                },
                "IncludeSubdomains": {
                    "$ref": "#/$defs/boolean"
                },
                "Preload": {
                    "$ref": "#/$defs/boolean"
                },
                "AccessControlMaxAgeSec": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ResponseHeadersPolicyServerTimingHeadersConfig": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "SamplingRate": {
                    "$ref": "#/$defs/SamplingRate"
                }
            }
        },
        "SamplingRate": {
            "type": "number",
            "format": "double"
        },
        "ResponseHeadersPolicyCustomHeadersConfig": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/ResponseHeadersPolicyCustomHeaderList"
                }
            }
        },
        "ResponseHeadersPolicyCustomHeaderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResponseHeadersPolicyCustomHeader"
            }
        },
        "ResponseHeadersPolicyCustomHeader": {
            "type": "object",
            "properties": {
                "Header": {
                    "$ref": "#/$defs/string"
                },
                "Value": {
                    "$ref": "#/$defs/string"
                },
                "Override": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "ResponseHeadersPolicyRemoveHeadersConfig": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/ResponseHeadersPolicyRemoveHeaderList"
                }
            }
        },
        "ResponseHeadersPolicyRemoveHeaderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResponseHeadersPolicyRemoveHeader"
            }
        },
        "ResponseHeadersPolicyRemoveHeader": {
            "type": "object",
            "properties": {
                "Header": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreateResponseHeadersPolicyRequest": {
            "type": "object",
            "properties": {
                "ResponseHeadersPolicyConfig": {
                    "$ref": "#/$defs/ResponseHeadersPolicyConfig"
                }
            }
        },
        "CreateStreamingDistributionResult": {
            "type": "object",
            "properties": {
                "StreamingDistribution": {
                    "$ref": "#/$defs/StreamingDistribution"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "StreamingDistribution": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "ARN": {
                    "$ref": "#/$defs/string"
                },
                "Status": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "DomainName": {
                    "$ref": "#/$defs/string"
                },
                "ActiveTrustedSigners": {
                    "$ref": "#/$defs/ActiveTrustedSigners"
                },
                "StreamingDistributionConfig": {
                    "$ref": "#/$defs/StreamingDistributionConfig"
                }
            }
        },
        "StreamingDistributionConfig": {
            "type": "object",
            "properties": {
                "CallerReference": {
                    "$ref": "#/$defs/string"
                },
                "S3Origin": {
                    "$ref": "#/$defs/S3Origin"
                },
                "Aliases": {
                    "$ref": "#/$defs/Aliases"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                },
                "Logging": {
                    "$ref": "#/$defs/StreamingLoggingConfig"
                },
                "TrustedSigners": {
                    "$ref": "#/$defs/TrustedSigners"
                },
                "PriceClass": {
                    "$ref": "#/$defs/PriceClass"
                },
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "S3Origin": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/string"
                },
                "OriginAccessIdentity": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "StreamingLoggingConfig": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "Bucket": {
                    "$ref": "#/$defs/string"
                },
                "Prefix": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreateStreamingDistributionRequest": {
            "type": "object",
            "properties": {
                "StreamingDistributionConfig": {
                    "$ref": "#/$defs/StreamingDistributionConfig"
                }
            }
        },
        "CreateStreamingDistributionWithTagsResult": {
            "type": "object",
            "properties": {
                "StreamingDistribution": {
                    "$ref": "#/$defs/StreamingDistribution"
                },
                "Location": {
                    "$ref": "#/$defs/string"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreateStreamingDistributionWithTagsRequest": {
            "type": "object",
            "properties": {
                "StreamingDistributionConfigWithTags": {
                    "$ref": "#/$defs/StreamingDistributionConfigWithTags"
                }
            }
        },
        "StreamingDistributionConfigWithTags": {
            "type": "object",
            "properties": {
                "StreamingDistributionConfig": {
                    "$ref": "#/$defs/StreamingDistributionConfig"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DeleteCachePolicyRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteCloudFrontOriginAccessIdentityRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteContinuousDeploymentPolicyRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteDistributionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteFieldLevelEncryptionConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteFieldLevelEncryptionProfileRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteFunctionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteKeyGroupRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteKeyValueStoreRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/KeyValueStoreName"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteMonitoringSubscriptionResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteMonitoringSubscriptionRequest": {
            "type": "object",
            "properties": {
                "DistributionId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteOriginAccessControlRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteOriginRequestPolicyRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeletePublicKeyRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteRealtimeLogConfigRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "ARN": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteResponseHeadersPolicyRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteStreamingDistributionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DescribeFunctionResult": {
            "type": "object",
            "properties": {
                "FunctionSummary": {
                    "$ref": "#/$defs/FunctionSummary"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DescribeFunctionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "Stage": {
                    "$ref": "#/$defs/FunctionStage"
                }
            }
        },
        "DescribeKeyValueStoreResult": {
            "type": "object",
            "properties": {
                "KeyValueStore": {
                    "$ref": "#/$defs/KeyValueStore"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DescribeKeyValueStoreRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/KeyValueStoreName"
                }
            }
        },
        "GetCachePolicyResult": {
            "type": "object",
            "properties": {
                "CachePolicy": {
                    "$ref": "#/$defs/CachePolicy"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetCachePolicyRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetCachePolicyConfigResult": {
            "type": "object",
            "properties": {
                "CachePolicyConfig": {
                    "$ref": "#/$defs/CachePolicyConfig"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetCachePolicyConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetCloudFrontOriginAccessIdentityResult": {
            "type": "object",
            "properties": {
                "CloudFrontOriginAccessIdentity": {
                    "$ref": "#/$defs/CloudFrontOriginAccessIdentity"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetCloudFrontOriginAccessIdentityRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetCloudFrontOriginAccessIdentityConfigResult": {
            "type": "object",
            "properties": {
                "CloudFrontOriginAccessIdentityConfig": {
                    "$ref": "#/$defs/CloudFrontOriginAccessIdentityConfig"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetCloudFrontOriginAccessIdentityConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetContinuousDeploymentPolicyResult": {
            "type": "object",
            "properties": {
                "ContinuousDeploymentPolicy": {
                    "$ref": "#/$defs/ContinuousDeploymentPolicy"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetContinuousDeploymentPolicyRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetContinuousDeploymentPolicyConfigResult": {
            "type": "object",
            "properties": {
                "ContinuousDeploymentPolicyConfig": {
                    "$ref": "#/$defs/ContinuousDeploymentPolicyConfig"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetContinuousDeploymentPolicyConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetDistributionResult": {
            "type": "object",
            "properties": {
                "Distribution": {
                    "$ref": "#/$defs/Distribution"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetDistributionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetDistributionConfigResult": {
            "type": "object",
            "properties": {
                "DistributionConfig": {
                    "$ref": "#/$defs/DistributionConfig"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetDistributionConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetFieldLevelEncryptionResult": {
            "type": "object",
            "properties": {
                "FieldLevelEncryption": {
                    "$ref": "#/$defs/FieldLevelEncryption"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetFieldLevelEncryptionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetFieldLevelEncryptionConfigResult": {
            "type": "object",
            "properties": {
                "FieldLevelEncryptionConfig": {
                    "$ref": "#/$defs/FieldLevelEncryptionConfig"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetFieldLevelEncryptionConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetFieldLevelEncryptionProfileResult": {
            "type": "object",
            "properties": {
                "FieldLevelEncryptionProfile": {
                    "$ref": "#/$defs/FieldLevelEncryptionProfile"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetFieldLevelEncryptionProfileRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetFieldLevelEncryptionProfileConfigResult": {
            "type": "object",
            "properties": {
                "FieldLevelEncryptionProfileConfig": {
                    "$ref": "#/$defs/FieldLevelEncryptionProfileConfig"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetFieldLevelEncryptionProfileConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetFunctionResult": {
            "type": "object",
            "properties": {
                "FunctionCode": {
                    "$ref": "#/$defs/FunctionBlob"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                },
                "ContentType": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetFunctionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "Stage": {
                    "$ref": "#/$defs/FunctionStage"
                }
            }
        },
        "GetInvalidationResult": {
            "type": "object",
            "properties": {
                "Invalidation": {
                    "$ref": "#/$defs/Invalidation"
                }
            }
        },
        "GetInvalidationRequest": {
            "type": "object",
            "properties": {
                "DistributionId": {
                    "$ref": "#/$defs/string"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetKeyGroupResult": {
            "type": "object",
            "properties": {
                "KeyGroup": {
                    "$ref": "#/$defs/KeyGroup"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetKeyGroupRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetKeyGroupConfigResult": {
            "type": "object",
            "properties": {
                "KeyGroupConfig": {
                    "$ref": "#/$defs/KeyGroupConfig"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetKeyGroupConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetMonitoringSubscriptionResult": {
            "type": "object",
            "properties": {
                "MonitoringSubscription": {
                    "$ref": "#/$defs/MonitoringSubscription"
                }
            }
        },
        "GetMonitoringSubscriptionRequest": {
            "type": "object",
            "properties": {
                "DistributionId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetOriginAccessControlResult": {
            "type": "object",
            "properties": {
                "OriginAccessControl": {
                    "$ref": "#/$defs/OriginAccessControl"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetOriginAccessControlRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetOriginAccessControlConfigResult": {
            "type": "object",
            "properties": {
                "OriginAccessControlConfig": {
                    "$ref": "#/$defs/OriginAccessControlConfig"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetOriginAccessControlConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetOriginRequestPolicyResult": {
            "type": "object",
            "properties": {
                "OriginRequestPolicy": {
                    "$ref": "#/$defs/OriginRequestPolicy"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetOriginRequestPolicyRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetOriginRequestPolicyConfigResult": {
            "type": "object",
            "properties": {
                "OriginRequestPolicyConfig": {
                    "$ref": "#/$defs/OriginRequestPolicyConfig"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetOriginRequestPolicyConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetPublicKeyResult": {
            "type": "object",
            "properties": {
                "PublicKey": {
                    "$ref": "#/$defs/PublicKey"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetPublicKeyRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetPublicKeyConfigResult": {
            "type": "object",
            "properties": {
                "PublicKeyConfig": {
                    "$ref": "#/$defs/PublicKeyConfig"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetPublicKeyConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetRealtimeLogConfigResult": {
            "type": "object",
            "properties": {
                "RealtimeLogConfig": {
                    "$ref": "#/$defs/RealtimeLogConfig"
                }
            }
        },
        "GetRealtimeLogConfigRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "ARN": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetResponseHeadersPolicyResult": {
            "type": "object",
            "properties": {
                "ResponseHeadersPolicy": {
                    "$ref": "#/$defs/ResponseHeadersPolicy"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetResponseHeadersPolicyRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetResponseHeadersPolicyConfigResult": {
            "type": "object",
            "properties": {
                "ResponseHeadersPolicyConfig": {
                    "$ref": "#/$defs/ResponseHeadersPolicyConfig"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetResponseHeadersPolicyConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetStreamingDistributionResult": {
            "type": "object",
            "properties": {
                "StreamingDistribution": {
                    "$ref": "#/$defs/StreamingDistribution"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetStreamingDistributionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetStreamingDistributionConfigResult": {
            "type": "object",
            "properties": {
                "StreamingDistributionConfig": {
                    "$ref": "#/$defs/StreamingDistributionConfig"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetStreamingDistributionConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListCachePoliciesResult": {
            "type": "object",
            "properties": {
                "CachePolicyList": {
                    "$ref": "#/$defs/CachePolicyList"
                }
            }
        },
        "CachePolicyList": {
            "type": "object",
            "properties": {
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/CachePolicySummaryList"
                }
            }
        },
        "CachePolicySummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CachePolicySummary"
            }
        },
        "CachePolicySummary": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/CachePolicyType"
                },
                "CachePolicy": {
                    "$ref": "#/$defs/CachePolicy"
                }
            }
        },
        "CachePolicyType": {
            "enum": [
                "managed",
                "custom"
            ]
        },
        "ListCachePoliciesRequest": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/CachePolicyType"
                },
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListCloudFrontOriginAccessIdentitiesResult": {
            "type": "object",
            "properties": {
                "CloudFrontOriginAccessIdentityList": {
                    "$ref": "#/$defs/CloudFrontOriginAccessIdentityList"
                }
            }
        },
        "CloudFrontOriginAccessIdentityList": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "IsTruncated": {
                    "$ref": "#/$defs/boolean"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/CloudFrontOriginAccessIdentitySummaryList"
                }
            }
        },
        "CloudFrontOriginAccessIdentitySummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudFrontOriginAccessIdentitySummary"
            }
        },
        "CloudFrontOriginAccessIdentitySummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "S3CanonicalUserId": {
                    "$ref": "#/$defs/string"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListCloudFrontOriginAccessIdentitiesRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListConflictingAliasesResult": {
            "type": "object",
            "properties": {
                "ConflictingAliasesList": {
                    "$ref": "#/$defs/ConflictingAliasesList"
                }
            }
        },
        "ConflictingAliasesList": {
            "type": "object",
            "properties": {
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/ConflictingAliases"
                }
            }
        },
        "ConflictingAliases": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConflictingAlias"
            }
        },
        "ConflictingAlias": {
            "type": "object",
            "properties": {
                "Alias": {
                    "$ref": "#/$defs/string"
                },
                "DistributionId": {
                    "$ref": "#/$defs/string"
                },
                "AccountId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListConflictingAliasesRequest": {
            "type": "object",
            "properties": {
                "DistributionId": {
                    "$ref": "#/$defs/distributionIdString"
                },
                "Alias": {
                    "$ref": "#/$defs/aliasString"
                },
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/listConflictingAliasesMaxItemsInteger"
                }
            }
        },
        "distributionIdString": {
            "type": "string"
        },
        "aliasString": {
            "type": "string"
        },
        "listConflictingAliasesMaxItemsInteger": {
            "type": "integer",
            "format": "int32"
        },
        "ListContinuousDeploymentPoliciesResult": {
            "type": "object",
            "properties": {
                "ContinuousDeploymentPolicyList": {
                    "$ref": "#/$defs/ContinuousDeploymentPolicyList"
                }
            }
        },
        "ContinuousDeploymentPolicyList": {
            "type": "object",
            "properties": {
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/ContinuousDeploymentPolicySummaryList"
                }
            }
        },
        "ContinuousDeploymentPolicySummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContinuousDeploymentPolicySummary"
            }
        },
        "ContinuousDeploymentPolicySummary": {
            "type": "object",
            "properties": {
                "ContinuousDeploymentPolicy": {
                    "$ref": "#/$defs/ContinuousDeploymentPolicy"
                }
            }
        },
        "ListContinuousDeploymentPoliciesRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListDistributionsResult": {
            "type": "object",
            "properties": {
                "DistributionList": {
                    "$ref": "#/$defs/DistributionList"
                }
            }
        },
        "DistributionList": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "IsTruncated": {
                    "$ref": "#/$defs/boolean"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/DistributionSummaryList"
                }
            }
        },
        "DistributionSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DistributionSummary"
            }
        },
        "DistributionSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "ARN": {
                    "$ref": "#/$defs/string"
                },
                "Status": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "DomainName": {
                    "$ref": "#/$defs/string"
                },
                "Aliases": {
                    "$ref": "#/$defs/Aliases"
                },
                "Origins": {
                    "$ref": "#/$defs/Origins"
                },
                "OriginGroups": {
                    "$ref": "#/$defs/OriginGroups"
                },
                "DefaultCacheBehavior": {
                    "$ref": "#/$defs/DefaultCacheBehavior"
                },
                "CacheBehaviors": {
                    "$ref": "#/$defs/CacheBehaviors"
                },
                "CustomErrorResponses": {
                    "$ref": "#/$defs/CustomErrorResponses"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                },
                "PriceClass": {
                    "$ref": "#/$defs/PriceClass"
                },
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "ViewerCertificate": {
                    "$ref": "#/$defs/ViewerCertificate"
                },
                "Restrictions": {
                    "$ref": "#/$defs/Restrictions"
                },
                "WebACLId": {
                    "$ref": "#/$defs/string"
                },
                "HttpVersion": {
                    "$ref": "#/$defs/HttpVersion"
                },
                "IsIPV6Enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "AliasICPRecordals": {
                    "$ref": "#/$defs/AliasICPRecordals"
                },
                "Staging": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "ListDistributionsRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListDistributionsByCachePolicyIdResult": {
            "type": "object",
            "properties": {
                "DistributionIdList": {
                    "$ref": "#/$defs/DistributionIdList"
                }
            }
        },
        "DistributionIdList": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "IsTruncated": {
                    "$ref": "#/$defs/boolean"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/DistributionIdListSummary"
                }
            }
        },
        "DistributionIdListSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "ListDistributionsByCachePolicyIdRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "CachePolicyId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListDistributionsByKeyGroupResult": {
            "type": "object",
            "properties": {
                "DistributionIdList": {
                    "$ref": "#/$defs/DistributionIdList"
                }
            }
        },
        "ListDistributionsByKeyGroupRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "KeyGroupId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListDistributionsByOriginRequestPolicyIdResult": {
            "type": "object",
            "properties": {
                "DistributionIdList": {
                    "$ref": "#/$defs/DistributionIdList"
                }
            }
        },
        "ListDistributionsByOriginRequestPolicyIdRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "OriginRequestPolicyId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListDistributionsByRealtimeLogConfigResult": {
            "type": "object",
            "properties": {
                "DistributionList": {
                    "$ref": "#/$defs/DistributionList"
                }
            }
        },
        "ListDistributionsByRealtimeLogConfigRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "RealtimeLogConfigName": {
                    "$ref": "#/$defs/string"
                },
                "RealtimeLogConfigArn": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListDistributionsByResponseHeadersPolicyIdResult": {
            "type": "object",
            "properties": {
                "DistributionIdList": {
                    "$ref": "#/$defs/DistributionIdList"
                }
            }
        },
        "ListDistributionsByResponseHeadersPolicyIdRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "ResponseHeadersPolicyId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListDistributionsByWebACLIdResult": {
            "type": "object",
            "properties": {
                "DistributionList": {
                    "$ref": "#/$defs/DistributionList"
                }
            }
        },
        "ListDistributionsByWebACLIdRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "WebACLId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListFieldLevelEncryptionConfigsResult": {
            "type": "object",
            "properties": {
                "FieldLevelEncryptionList": {
                    "$ref": "#/$defs/FieldLevelEncryptionList"
                }
            }
        },
        "FieldLevelEncryptionList": {
            "type": "object",
            "properties": {
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/FieldLevelEncryptionSummaryList"
                }
            }
        },
        "FieldLevelEncryptionSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FieldLevelEncryptionSummary"
            }
        },
        "FieldLevelEncryptionSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                },
                "QueryArgProfileConfig": {
                    "$ref": "#/$defs/QueryArgProfileConfig"
                },
                "ContentTypeProfileConfig": {
                    "$ref": "#/$defs/ContentTypeProfileConfig"
                }
            }
        },
        "ListFieldLevelEncryptionConfigsRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListFieldLevelEncryptionProfilesResult": {
            "type": "object",
            "properties": {
                "FieldLevelEncryptionProfileList": {
                    "$ref": "#/$defs/FieldLevelEncryptionProfileList"
                }
            }
        },
        "FieldLevelEncryptionProfileList": {
            "type": "object",
            "properties": {
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/FieldLevelEncryptionProfileSummaryList"
                }
            }
        },
        "FieldLevelEncryptionProfileSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FieldLevelEncryptionProfileSummary"
            }
        },
        "FieldLevelEncryptionProfileSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "EncryptionEntities": {
                    "$ref": "#/$defs/EncryptionEntities"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListFieldLevelEncryptionProfilesRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListFunctionsResult": {
            "type": "object",
            "properties": {
                "FunctionList": {
                    "$ref": "#/$defs/FunctionList"
                }
            }
        },
        "FunctionList": {
            "type": "object",
            "properties": {
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/FunctionSummaryList"
                }
            }
        },
        "FunctionSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FunctionSummary"
            }
        },
        "ListFunctionsRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Stage": {
                    "$ref": "#/$defs/FunctionStage"
                }
            }
        },
        "ListInvalidationsResult": {
            "type": "object",
            "properties": {
                "InvalidationList": {
                    "$ref": "#/$defs/InvalidationList"
                }
            }
        },
        "InvalidationList": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "IsTruncated": {
                    "$ref": "#/$defs/boolean"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/InvalidationSummaryList"
                }
            }
        },
        "InvalidationSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InvalidationSummary"
            }
        },
        "InvalidationSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "CreateTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListInvalidationsRequest": {
            "type": "object",
            "properties": {
                "DistributionId": {
                    "$ref": "#/$defs/string"
                },
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListKeyGroupsResult": {
            "type": "object",
            "properties": {
                "KeyGroupList": {
                    "$ref": "#/$defs/KeyGroupList"
                }
            }
        },
        "KeyGroupList": {
            "type": "object",
            "properties": {
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/KeyGroupSummaryList"
                }
            }
        },
        "KeyGroupSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyGroupSummary"
            }
        },
        "KeyGroupSummary": {
            "type": "object",
            "properties": {
                "KeyGroup": {
                    "$ref": "#/$defs/KeyGroup"
                }
            }
        },
        "ListKeyGroupsRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListKeyValueStoresResult": {
            "type": "object",
            "properties": {
                "KeyValueStoreList": {
                    "$ref": "#/$defs/KeyValueStoreList"
                }
            }
        },
        "KeyValueStoreList": {
            "type": "object",
            "properties": {
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/KeyValueStoreSummaryList"
                }
            }
        },
        "KeyValueStoreSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyValueStore"
            }
        },
        "ListKeyValueStoresRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Status": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListOriginAccessControlsResult": {
            "type": "object",
            "properties": {
                "OriginAccessControlList": {
                    "$ref": "#/$defs/OriginAccessControlList"
                }
            }
        },
        "OriginAccessControlList": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "IsTruncated": {
                    "$ref": "#/$defs/boolean"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/OriginAccessControlSummaryList"
                }
            }
        },
        "OriginAccessControlSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OriginAccessControlSummary"
            }
        },
        "OriginAccessControlSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "Description": {
                    "$ref": "#/$defs/string"
                },
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "SigningProtocol": {
                    "$ref": "#/$defs/OriginAccessControlSigningProtocols"
                },
                "SigningBehavior": {
                    "$ref": "#/$defs/OriginAccessControlSigningBehaviors"
                },
                "OriginAccessControlOriginType": {
                    "$ref": "#/$defs/OriginAccessControlOriginTypes"
                }
            }
        },
        "ListOriginAccessControlsRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListOriginRequestPoliciesResult": {
            "type": "object",
            "properties": {
                "OriginRequestPolicyList": {
                    "$ref": "#/$defs/OriginRequestPolicyList"
                }
            }
        },
        "OriginRequestPolicyList": {
            "type": "object",
            "properties": {
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/OriginRequestPolicySummaryList"
                }
            }
        },
        "OriginRequestPolicySummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OriginRequestPolicySummary"
            }
        },
        "OriginRequestPolicySummary": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/OriginRequestPolicyType"
                },
                "OriginRequestPolicy": {
                    "$ref": "#/$defs/OriginRequestPolicy"
                }
            }
        },
        "OriginRequestPolicyType": {
            "enum": [
                "managed",
                "custom"
            ]
        },
        "ListOriginRequestPoliciesRequest": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/OriginRequestPolicyType"
                },
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListPublicKeysResult": {
            "type": "object",
            "properties": {
                "PublicKeyList": {
                    "$ref": "#/$defs/PublicKeyList"
                }
            }
        },
        "PublicKeyList": {
            "type": "object",
            "properties": {
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/PublicKeySummaryList"
                }
            }
        },
        "PublicKeySummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PublicKeySummary"
            }
        },
        "PublicKeySummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "EncodedKey": {
                    "$ref": "#/$defs/string"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListPublicKeysRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListRealtimeLogConfigsResult": {
            "type": "object",
            "properties": {
                "RealtimeLogConfigs": {
                    "$ref": "#/$defs/RealtimeLogConfigs"
                }
            }
        },
        "RealtimeLogConfigs": {
            "type": "object",
            "properties": {
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/RealtimeLogConfigList"
                },
                "IsTruncated": {
                    "$ref": "#/$defs/boolean"
                },
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "NextMarker": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RealtimeLogConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RealtimeLogConfig"
            }
        },
        "ListRealtimeLogConfigsRequest": {
            "type": "object",
            "properties": {
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Marker": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListResponseHeadersPoliciesResult": {
            "type": "object",
            "properties": {
                "ResponseHeadersPolicyList": {
                    "$ref": "#/$defs/ResponseHeadersPolicyList"
                }
            }
        },
        "ResponseHeadersPolicyList": {
            "type": "object",
            "properties": {
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/ResponseHeadersPolicySummaryList"
                }
            }
        },
        "ResponseHeadersPolicySummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResponseHeadersPolicySummary"
            }
        },
        "ResponseHeadersPolicySummary": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ResponseHeadersPolicyType"
                },
                "ResponseHeadersPolicy": {
                    "$ref": "#/$defs/ResponseHeadersPolicy"
                }
            }
        },
        "ResponseHeadersPolicyType": {
            "enum": [
                "managed",
                "custom"
            ]
        },
        "ListResponseHeadersPoliciesRequest": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ResponseHeadersPolicyType"
                },
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListStreamingDistributionsResult": {
            "type": "object",
            "properties": {
                "StreamingDistributionList": {
                    "$ref": "#/$defs/StreamingDistributionList"
                }
            }
        },
        "StreamingDistributionList": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "NextMarker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                },
                "IsTruncated": {
                    "$ref": "#/$defs/boolean"
                },
                "Quantity": {
                    "$ref": "#/$defs/integer"
                },
                "Items": {
                    "$ref": "#/$defs/StreamingDistributionSummaryList"
                }
            }
        },
        "StreamingDistributionSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StreamingDistributionSummary"
            }
        },
        "StreamingDistributionSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "ARN": {
                    "$ref": "#/$defs/string"
                },
                "Status": {
                    "$ref": "#/$defs/string"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "DomainName": {
                    "$ref": "#/$defs/string"
                },
                "S3Origin": {
                    "$ref": "#/$defs/S3Origin"
                },
                "Aliases": {
                    "$ref": "#/$defs/Aliases"
                },
                "TrustedSigners": {
                    "$ref": "#/$defs/TrustedSigners"
                },
                "Comment": {
                    "$ref": "#/$defs/string"
                },
                "PriceClass": {
                    "$ref": "#/$defs/PriceClass"
                },
                "Enabled": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "ListStreamingDistributionsRequest": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/string"
                },
                "MaxItems": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListTagsForResourceResult": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "Resource": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "ResourceARN": {
            "type": "string"
        },
        "PublishFunctionResult": {
            "type": "object",
            "properties": {
                "FunctionSummary": {
                    "$ref": "#/$defs/FunctionSummary"
                }
            }
        },
        "PublishFunctionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "Resource": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "TestFunctionResult": {
            "type": "object",
            "properties": {
                "TestResult": {
                    "$ref": "#/$defs/TestResult"
                }
            }
        },
        "TestResult": {
            "type": "object",
            "properties": {
                "FunctionSummary": {
                    "$ref": "#/$defs/FunctionSummary"
                },
                "ComputeUtilization": {
                    "$ref": "#/$defs/string"
                },
                "FunctionExecutionLogs": {
                    "$ref": "#/$defs/FunctionExecutionLogList"
                },
                "FunctionErrorMessage": {
                    "$ref": "#/$defs/sensitiveStringType"
                },
                "FunctionOutput": {
                    "$ref": "#/$defs/sensitiveStringType"
                }
            }
        },
        "FunctionExecutionLogList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "TestFunctionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                },
                "Stage": {
                    "$ref": "#/$defs/FunctionStage"
                },
                "EventObject": {
                    "$ref": "#/$defs/FunctionEventObject"
                }
            }
        },
        "FunctionEventObject": {
            "type": "string",
            "format": "binary"
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "Resource": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "TagKeys": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateCachePolicyResult": {
            "type": "object",
            "properties": {
                "CachePolicy": {
                    "$ref": "#/$defs/CachePolicy"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateCachePolicyRequest": {
            "type": "object",
            "properties": {
                "CachePolicyConfig": {
                    "$ref": "#/$defs/CachePolicyConfig"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateCloudFrontOriginAccessIdentityResult": {
            "type": "object",
            "properties": {
                "CloudFrontOriginAccessIdentity": {
                    "$ref": "#/$defs/CloudFrontOriginAccessIdentity"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateCloudFrontOriginAccessIdentityRequest": {
            "type": "object",
            "properties": {
                "CloudFrontOriginAccessIdentityConfig": {
                    "$ref": "#/$defs/CloudFrontOriginAccessIdentityConfig"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateContinuousDeploymentPolicyResult": {
            "type": "object",
            "properties": {
                "ContinuousDeploymentPolicy": {
                    "$ref": "#/$defs/ContinuousDeploymentPolicy"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateContinuousDeploymentPolicyRequest": {
            "type": "object",
            "properties": {
                "ContinuousDeploymentPolicyConfig": {
                    "$ref": "#/$defs/ContinuousDeploymentPolicyConfig"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateDistributionResult": {
            "type": "object",
            "properties": {
                "Distribution": {
                    "$ref": "#/$defs/Distribution"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateDistributionRequest": {
            "type": "object",
            "properties": {
                "DistributionConfig": {
                    "$ref": "#/$defs/DistributionConfig"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateDistributionWithStagingConfigResult": {
            "type": "object",
            "properties": {
                "Distribution": {
                    "$ref": "#/$defs/Distribution"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateDistributionWithStagingConfigRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "StagingDistributionId": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateFieldLevelEncryptionConfigResult": {
            "type": "object",
            "properties": {
                "FieldLevelEncryption": {
                    "$ref": "#/$defs/FieldLevelEncryption"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateFieldLevelEncryptionConfigRequest": {
            "type": "object",
            "properties": {
                "FieldLevelEncryptionConfig": {
                    "$ref": "#/$defs/FieldLevelEncryptionConfig"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateFieldLevelEncryptionProfileResult": {
            "type": "object",
            "properties": {
                "FieldLevelEncryptionProfile": {
                    "$ref": "#/$defs/FieldLevelEncryptionProfile"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateFieldLevelEncryptionProfileRequest": {
            "type": "object",
            "properties": {
                "FieldLevelEncryptionProfileConfig": {
                    "$ref": "#/$defs/FieldLevelEncryptionProfileConfig"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateFunctionResult": {
            "type": "object",
            "properties": {
                "FunctionSummary": {
                    "$ref": "#/$defs/FunctionSummary"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateFunctionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                },
                "FunctionConfig": {
                    "$ref": "#/$defs/FunctionConfig"
                },
                "FunctionCode": {
                    "$ref": "#/$defs/FunctionBlob"
                }
            }
        },
        "UpdateKeyGroupResult": {
            "type": "object",
            "properties": {
                "KeyGroup": {
                    "$ref": "#/$defs/KeyGroup"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateKeyGroupRequest": {
            "type": "object",
            "properties": {
                "KeyGroupConfig": {
                    "$ref": "#/$defs/KeyGroupConfig"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateKeyValueStoreResult": {
            "type": "object",
            "properties": {
                "KeyValueStore": {
                    "$ref": "#/$defs/KeyValueStore"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateKeyValueStoreRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/KeyValueStoreName"
                },
                "Comment": {
                    "$ref": "#/$defs/KeyValueStoreComment"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateOriginAccessControlResult": {
            "type": "object",
            "properties": {
                "OriginAccessControl": {
                    "$ref": "#/$defs/OriginAccessControl"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateOriginAccessControlRequest": {
            "type": "object",
            "properties": {
                "OriginAccessControlConfig": {
                    "$ref": "#/$defs/OriginAccessControlConfig"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateOriginRequestPolicyResult": {
            "type": "object",
            "properties": {
                "OriginRequestPolicy": {
                    "$ref": "#/$defs/OriginRequestPolicy"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateOriginRequestPolicyRequest": {
            "type": "object",
            "properties": {
                "OriginRequestPolicyConfig": {
                    "$ref": "#/$defs/OriginRequestPolicyConfig"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdatePublicKeyResult": {
            "type": "object",
            "properties": {
                "PublicKey": {
                    "$ref": "#/$defs/PublicKey"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdatePublicKeyRequest": {
            "type": "object",
            "properties": {
                "PublicKeyConfig": {
                    "$ref": "#/$defs/PublicKeyConfig"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateRealtimeLogConfigResult": {
            "type": "object",
            "properties": {
                "RealtimeLogConfig": {
                    "$ref": "#/$defs/RealtimeLogConfig"
                }
            }
        },
        "UpdateRealtimeLogConfigRequest": {
            "type": "object",
            "properties": {
                "EndPoints": {
                    "$ref": "#/$defs/EndPointList"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldList"
                },
                "Name": {
                    "$ref": "#/$defs/string"
                },
                "ARN": {
                    "$ref": "#/$defs/string"
                },
                "SamplingRate": {
                    "$ref": "#/$defs/long"
                }
            }
        },
        "UpdateResponseHeadersPolicyResult": {
            "type": "object",
            "properties": {
                "ResponseHeadersPolicy": {
                    "$ref": "#/$defs/ResponseHeadersPolicy"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateResponseHeadersPolicyRequest": {
            "type": "object",
            "properties": {
                "ResponseHeadersPolicyConfig": {
                    "$ref": "#/$defs/ResponseHeadersPolicyConfig"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateStreamingDistributionResult": {
            "type": "object",
            "properties": {
                "StreamingDistribution": {
                    "$ref": "#/$defs/StreamingDistribution"
                },
                "ETag": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateStreamingDistributionRequest": {
            "type": "object",
            "properties": {
                "StreamingDistributionConfig": {
                    "$ref": "#/$defs/StreamingDistributionConfig"
                },
                "Id": {
                    "$ref": "#/$defs/string"
                },
                "IfMatch": {
                    "$ref": "#/$defs/string"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "stringEquals",
                                        "argv": [
                                            {
                                                "fn": "getAttr",
                                                "argv": [
                                                    {
                                                        "ref": "PartitionResult"
                                                    },
                                                    "name"
                                                ]
                                            },
                                            "aws"
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            false
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            false
                                        ]
                                    }
                                ],
                                "endpoint": {
                                    "url": "https://cloudfront.amazonaws.com",
                                    "properties": {
                                        "authSchemes": [
                                            {
                                                "name": "sigv4",
                                                "signingName": "cloudfront",
                                                "signingRegion": "us-east-1"
                                            }
                                        ]
                                    },
                                    "headers": {}
                                },
                                "type": "endpoint"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "stringEquals",
                                        "argv": [
                                            {
                                                "fn": "getAttr",
                                                "argv": [
                                                    {
                                                        "ref": "PartitionResult"
                                                    },
                                                    "name"
                                                ]
                                            },
                                            "aws"
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            false
                                        ]
                                    }
                                ],
                                "endpoint": {
                                    "url": "https://cloudfront-fips.amazonaws.com",
                                    "properties": {
                                        "authSchemes": [
                                            {
                                                "name": "sigv4",
                                                "signingName": "cloudfront",
                                                "signingRegion": "us-east-1"
                                            }
                                        ]
                                    },
                                    "headers": {}
                                },
                                "type": "endpoint"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "stringEquals",
                                        "argv": [
                                            {
                                                "fn": "getAttr",
                                                "argv": [
                                                    {
                                                        "ref": "PartitionResult"
                                                    },
                                                    "name"
                                                ]
                                            },
                                            "aws-cn"
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            false
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            false
                                        ]
                                    }
                                ],
                                "endpoint": {
                                    "url": "https://cloudfront.cn-northwest-1.amazonaws.com.cn",
                                    "properties": {
                                        "authSchemes": [
                                            {
                                                "name": "sigv4",
                                                "signingName": "cloudfront",
                                                "signingRegion": "cn-northwest-1"
                                            }
                                        ]
                                    },
                                    "headers": {}
                                },
                                "type": "endpoint"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://cloudfront-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://cloudfront-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://cloudfront.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://cloudfront.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}