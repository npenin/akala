{
    "name": "rbin",
    "commands": [
        {
            "name": "CreateRule",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/rules"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRuleResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "RetentionPeriod": {},
                        "Description": {},
                        "Tags": {},
                        "ResourceType": {},
                        "ResourceTags": {},
                        "LockConfiguration": {},
                        "ExcludeResourceTags": {}
                    }
                }
            }
        },
        {
            "name": "DeleteRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/rules/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRuleResponse"
                    },
                    "inject": [
                        "params.0.Identifier",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Identifier": {}
                    }
                }
            }
        },
        {
            "name": "GetRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/rules/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRuleResponse"
                    },
                    "inject": [
                        "params.0.Identifier",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Identifier": {}
                    }
                }
            }
        },
        {
            "name": "ListRules",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/list-rules"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRulesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListRulesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {},
                        "ResourceType": {},
                        "ResourceTags": {},
                        "LockState": {},
                        "ExcludeResourceTags": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "LockRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/rules/{Identifier}/lock"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/LockRuleResponse"
                    },
                    "inject": [
                        "params.0.Identifier",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/LockRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Identifier": {},
                        "LockConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UnlockRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/rules/{Identifier}/unlock"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UnlockRuleResponse"
                    },
                    "inject": [
                        "params.0.Identifier",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UnlockRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Identifier": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "TagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Identifier": "route.Identifier",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/rules/{Identifier}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRuleResponse"
                    },
                    "inject": [
                        "params.0.Identifier",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Identifier": {},
                        "RetentionPeriod": {},
                        "Description": {},
                        "ResourceType": {},
                        "ResourceTags": {},
                        "ExcludeResourceTags": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateRuleRequest": {
            "type": "object",
            "properties": {
                "RetentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTags"
                },
                "LockConfiguration": {
                    "$ref": "#/$defs/LockConfiguration"
                },
                "ExcludeResourceTags": {
                    "$ref": "#/$defs/ExcludeResourceTags"
                }
            }
        },
        "RetentionPeriod": {
            "type": "object",
            "properties": {
                "RetentionPeriodValue": {
                    "$ref": "#/$defs/RetentionPeriodValue"
                },
                "RetentionPeriodUnit": {
                    "$ref": "#/$defs/RetentionPeriodUnit"
                }
            }
        },
        "RetentionPeriodValue": {
            "type": "integer",
            "format": "int32"
        },
        "RetentionPeriodUnit": {
            "enum": [
                "DAYS"
            ]
        },
        "Description": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "ResourceType": {
            "enum": [
                "EBS_SNAPSHOT",
                "EC2_IMAGE"
            ]
        },
        "ResourceTags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceTag"
            }
        },
        "ResourceTag": {
            "type": "object",
            "properties": {
                "ResourceTagKey": {
                    "$ref": "#/$defs/ResourceTagKey"
                },
                "ResourceTagValue": {
                    "$ref": "#/$defs/ResourceTagValue"
                }
            }
        },
        "ResourceTagKey": {
            "type": "string"
        },
        "ResourceTagValue": {
            "type": "string"
        },
        "LockConfiguration": {
            "type": "object",
            "properties": {
                "UnlockDelay": {
                    "$ref": "#/$defs/UnlockDelay"
                }
            }
        },
        "UnlockDelay": {
            "type": "object",
            "properties": {
                "UnlockDelayValue": {
                    "$ref": "#/$defs/UnlockDelayValue"
                },
                "UnlockDelayUnit": {
                    "$ref": "#/$defs/UnlockDelayUnit"
                }
            }
        },
        "UnlockDelayValue": {
            "type": "integer",
            "format": "int32"
        },
        "UnlockDelayUnit": {
            "enum": [
                "DAYS"
            ]
        },
        "ExcludeResourceTags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceTag"
            }
        },
        "CreateRuleResponse": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/RuleIdentifier"
                },
                "RetentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTags"
                },
                "Status": {
                    "$ref": "#/$defs/RuleStatus"
                },
                "LockConfiguration": {
                    "$ref": "#/$defs/LockConfiguration"
                },
                "LockState": {
                    "$ref": "#/$defs/LockState"
                },
                "RuleArn": {
                    "$ref": "#/$defs/RuleArn"
                },
                "ExcludeResourceTags": {
                    "$ref": "#/$defs/ExcludeResourceTags"
                }
            }
        },
        "RuleIdentifier": {
            "type": "string"
        },
        "RuleStatus": {
            "enum": [
                "PENDING",
                "AVAILABLE"
            ]
        },
        "LockState": {
            "enum": [
                "LOCKED",
                "PENDING_UNLOCK",
                "UNLOCKED"
            ]
        },
        "RuleArn": {
            "type": "string"
        },
        "DeleteRuleRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/RuleIdentifier"
                }
            }
        },
        "DeleteRuleResponse": {
            "type": "object",
            "properties": {}
        },
        "GetRuleRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/RuleIdentifier"
                }
            }
        },
        "GetRuleResponse": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/RuleIdentifier"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "RetentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTags"
                },
                "Status": {
                    "$ref": "#/$defs/RuleStatus"
                },
                "LockConfiguration": {
                    "$ref": "#/$defs/LockConfiguration"
                },
                "LockState": {
                    "$ref": "#/$defs/LockState"
                },
                "LockEndTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "RuleArn": {
                    "$ref": "#/$defs/RuleArn"
                },
                "ExcludeResourceTags": {
                    "$ref": "#/$defs/ExcludeResourceTags"
                }
            }
        },
        "TimeStamp": {
            "type": "string",
            "format": "date-time"
        },
        "ListRulesRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTags"
                },
                "LockState": {
                    "$ref": "#/$defs/LockState"
                },
                "ExcludeResourceTags": {
                    "$ref": "#/$defs/ExcludeResourceTags"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "NextToken": {
            "type": "string"
        },
        "ListRulesResponse": {
            "type": "object",
            "properties": {
                "Rules": {
                    "$ref": "#/$defs/RuleSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RuleSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RuleSummary"
            }
        },
        "RuleSummary": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/RuleIdentifier"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "RetentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "LockState": {
                    "$ref": "#/$defs/LockState"
                },
                "RuleArn": {
                    "$ref": "#/$defs/RuleArn"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/RuleArn"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "LockRuleRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/RuleIdentifier"
                },
                "LockConfiguration": {
                    "$ref": "#/$defs/LockConfiguration"
                }
            }
        },
        "LockRuleResponse": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/RuleIdentifier"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "RetentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTags"
                },
                "Status": {
                    "$ref": "#/$defs/RuleStatus"
                },
                "LockConfiguration": {
                    "$ref": "#/$defs/LockConfiguration"
                },
                "LockState": {
                    "$ref": "#/$defs/LockState"
                },
                "RuleArn": {
                    "$ref": "#/$defs/RuleArn"
                },
                "ExcludeResourceTags": {
                    "$ref": "#/$defs/ExcludeResourceTags"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/RuleArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UnlockRuleRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/RuleIdentifier"
                }
            }
        },
        "UnlockRuleResponse": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/RuleIdentifier"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "RetentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTags"
                },
                "Status": {
                    "$ref": "#/$defs/RuleStatus"
                },
                "LockConfiguration": {
                    "$ref": "#/$defs/LockConfiguration"
                },
                "LockState": {
                    "$ref": "#/$defs/LockState"
                },
                "LockEndTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "RuleArn": {
                    "$ref": "#/$defs/RuleArn"
                },
                "ExcludeResourceTags": {
                    "$ref": "#/$defs/ExcludeResourceTags"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/RuleArn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateRuleRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/RuleIdentifier"
                },
                "RetentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTags"
                },
                "ExcludeResourceTags": {
                    "$ref": "#/$defs/ExcludeResourceTags"
                }
            }
        },
        "UpdateRuleResponse": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/RuleIdentifier"
                },
                "RetentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/ResourceTags"
                },
                "Status": {
                    "$ref": "#/$defs/RuleStatus"
                },
                "LockState": {
                    "$ref": "#/$defs/LockState"
                },
                "LockEndTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "RuleArn": {
                    "$ref": "#/$defs/RuleArn"
                },
                "ExcludeResourceTags": {
                    "$ref": "#/$defs/ExcludeResourceTags"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://rbin-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://rbin-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://rbin.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://rbin.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
