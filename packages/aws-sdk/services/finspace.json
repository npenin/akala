{
    "name": "finspace",
    "commands": [
        {
            "name": "CreateEnvironment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateEnvironment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEnvironmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKxChangeset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateKxChangeset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateKxChangesetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKxChangesetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKxCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateKxCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateKxClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKxClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKxDatabase",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateKxDatabase"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateKxDatabaseResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKxDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKxDataview",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateKxDataview"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateKxDataviewResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKxDataviewRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKxEnvironment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateKxEnvironment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateKxEnvironmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKxEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKxScalingGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateKxScalingGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateKxScalingGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKxScalingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKxUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateKxUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateKxUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKxUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKxVolume",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateKxVolume"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateKxVolumeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKxVolumeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteEnvironment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteEnvironment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEnvironmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKxCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteKxCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteKxClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKxClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKxClusterNode",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteKxClusterNode"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteKxClusterNodeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKxClusterNodeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKxDatabase",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteKxDatabase"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteKxDatabaseResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKxDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKxDataview",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteKxDataview"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteKxDataviewResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKxDataviewRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKxEnvironment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteKxEnvironment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteKxEnvironmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKxEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKxScalingGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteKxScalingGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteKxScalingGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKxScalingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKxUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteKxUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteKxUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKxUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKxVolume",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteKxVolume"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteKxVolumeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKxVolumeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEnvironment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetEnvironment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEnvironmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKxChangeset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetKxChangeset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKxChangesetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKxChangesetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKxCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetKxCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKxClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKxClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKxConnectionString",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetKxConnectionString"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKxConnectionStringResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKxConnectionStringRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKxDatabase",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetKxDatabase"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKxDatabaseResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKxDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKxDataview",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetKxDataview"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKxDataviewResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKxDataviewRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKxEnvironment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetKxEnvironment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKxEnvironmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKxEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKxScalingGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetKxScalingGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKxScalingGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKxScalingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKxUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetKxUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKxUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKxUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKxVolume",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetKxVolume"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKxVolumeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKxVolumeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListEnvironments",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListEnvironments"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEnvironmentsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEnvironmentsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListKxChangesets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListKxChangesets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKxChangesetsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKxChangesetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListKxClusterNodes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListKxClusterNodes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKxClusterNodesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKxClusterNodesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListKxClusters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListKxClusters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKxClustersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKxClustersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListKxDatabases",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListKxDatabases"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKxDatabasesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKxDatabasesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListKxDataviews",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListKxDataviews"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKxDataviewsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKxDataviewsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListKxEnvironments",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListKxEnvironments"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKxEnvironmentsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKxEnvironmentsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListKxScalingGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListKxScalingGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKxScalingGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKxScalingGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListKxUsers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListKxUsers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKxUsersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKxUsersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListKxVolumes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListKxVolumes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListKxVolumesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListKxVolumesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateEnvironment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateEnvironment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEnvironmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateKxClusterCodeConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateKxClusterCodeConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateKxClusterCodeConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateKxClusterCodeConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateKxClusterDatabases",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateKxClusterDatabases"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateKxClusterDatabasesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateKxClusterDatabasesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateKxDatabase",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateKxDatabase"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateKxDatabaseResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateKxDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateKxDataview",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateKxDataview"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateKxDataviewResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateKxDataviewRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateKxEnvironment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateKxEnvironment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateKxEnvironmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateKxEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateKxEnvironmentNetwork",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateKxEnvironmentNetwork"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateKxEnvironmentNetworkResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateKxEnvironmentNetworkRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateKxUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateKxUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateKxUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateKxUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateKxVolume",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateKxVolume"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateKxVolumeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateKxVolumeRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateEnvironmentResponse": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "environmentArn": {
                    "$ref": "#/$defs/EnvironmentArn"
                },
                "environmentUrl": {
                    "$ref": "#/$defs/url"
                }
            }
        },
        "IdType": {
            "type": "string"
        },
        "EnvironmentArn": {
            "type": "string"
        },
        "url": {
            "type": "string"
        },
        "CreateEnvironmentRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/EnvironmentName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "federationMode": {
                    "$ref": "#/$defs/FederationMode"
                },
                "federationParameters": {
                    "$ref": "#/$defs/FederationParameters"
                },
                "superuserParameters": {
                    "$ref": "#/$defs/SuperuserParameters"
                },
                "dataBundles": {
                    "$ref": "#/$defs/DataBundleArns"
                }
            }
        },
        "EnvironmentName": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "KmsKeyId": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "FederationMode": {
            "enum": [
                "FEDERATED",
                "LOCAL"
            ]
        },
        "FederationParameters": {
            "type": "object",
            "properties": {
                "samlMetadataDocument": {
                    "$ref": "#/$defs/SamlMetadataDocument"
                },
                "samlMetadataURL": {
                    "$ref": "#/$defs/url"
                },
                "applicationCallBackURL": {
                    "$ref": "#/$defs/url"
                },
                "federationURN": {
                    "$ref": "#/$defs/urn"
                },
                "federationProviderName": {
                    "$ref": "#/$defs/FederationProviderName"
                },
                "attributeMap": {
                    "$ref": "#/$defs/AttributeMap"
                }
            }
        },
        "SamlMetadataDocument": {
            "type": "string"
        },
        "urn": {
            "type": "string"
        },
        "FederationProviderName": {
            "type": "string"
        },
        "AttributeMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/FederationAttributeValue"
            }
        },
        "FederationAttributeValue": {
            "type": "string"
        },
        "SuperuserParameters": {
            "type": "object",
            "properties": {
                "emailAddress": {
                    "$ref": "#/$defs/EmailId"
                },
                "firstName": {
                    "$ref": "#/$defs/NameString"
                },
                "lastName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "EmailId": {
            "type": "string"
        },
        "NameString": {
            "type": "string"
        },
        "DataBundleArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataBundleArn"
            }
        },
        "DataBundleArn": {
            "type": "string"
        },
        "CreateKxChangesetResponse": {
            "type": "object",
            "properties": {
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "changeRequests": {
                    "$ref": "#/$defs/ChangeRequests"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/ChangesetStatus"
                },
                "errorInfo": {
                    "$ref": "#/$defs/ErrorInfo"
                }
            }
        },
        "ChangesetId": {
            "type": "string"
        },
        "DatabaseName": {
            "type": "string"
        },
        "EnvironmentId": {
            "type": "string"
        },
        "ChangeRequests": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChangeRequest"
            }
        },
        "ChangeRequest": {
            "type": "object",
            "properties": {
                "changeType": {
                    "$ref": "#/$defs/ChangeType"
                },
                "s3Path": {
                    "$ref": "#/$defs/S3Path"
                },
                "dbPath": {
                    "$ref": "#/$defs/DbPath"
                }
            }
        },
        "ChangeType": {
            "enum": [
                "PUT",
                "DELETE"
            ]
        },
        "S3Path": {
            "type": "string"
        },
        "DbPath": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "ChangesetStatus": {
            "enum": [
                "PENDING",
                "PROCESSING",
                "FAILED",
                "COMPLETED"
            ]
        },
        "ErrorInfo": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "errorType": {
                    "$ref": "#/$defs/ErrorDetails"
                }
            }
        },
        "ErrorMessage": {
            "type": "string"
        },
        "ErrorDetails": {
            "enum": [
                "VALIDATION",
                "SERVICE_QUOTA_EXCEEDED",
                "ACCESS_DENIED",
                "RESOURCE_NOT_FOUND",
                "THROTTLING",
                "INTERNAL_SERVICE_EXCEPTION",
                "CANCELLED",
                "USER_RECOVERABLE"
            ]
        },
        "CreateKxChangesetRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "changeRequests": {
                    "$ref": "#/$defs/ChangeRequests"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                }
            }
        },
        "ClientTokenString": {
            "type": "string"
        },
        "CreateKxClusterResponse": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "status": {
                    "$ref": "#/$defs/KxClusterStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/KxClusterStatusReason"
                },
                "clusterName": {
                    "$ref": "#/$defs/KxClusterName"
                },
                "clusterType": {
                    "$ref": "#/$defs/KxClusterType"
                },
                "tickerplantLogConfiguration": {
                    "$ref": "#/$defs/TickerplantLogConfiguration"
                },
                "volumes": {
                    "$ref": "#/$defs/Volumes"
                },
                "databases": {
                    "$ref": "#/$defs/KxDatabaseConfigurations"
                },
                "cacheStorageConfigurations": {
                    "$ref": "#/$defs/KxCacheStorageConfigurations"
                },
                "autoScalingConfiguration": {
                    "$ref": "#/$defs/AutoScalingConfiguration"
                },
                "clusterDescription": {
                    "$ref": "#/$defs/KxClusterDescription"
                },
                "capacityConfiguration": {
                    "$ref": "#/$defs/CapacityConfiguration"
                },
                "releaseLabel": {
                    "$ref": "#/$defs/ReleaseLabel"
                },
                "vpcConfiguration": {
                    "$ref": "#/$defs/VpcConfiguration"
                },
                "initializationScript": {
                    "$ref": "#/$defs/InitializationScriptFilePath"
                },
                "commandLineArguments": {
                    "$ref": "#/$defs/KxCommandLineArguments"
                },
                "code": {
                    "$ref": "#/$defs/CodeConfiguration"
                },
                "executionRole": {
                    "$ref": "#/$defs/ExecutionRoleArn"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "savedownStorageConfiguration": {
                    "$ref": "#/$defs/KxSavedownStorageConfiguration"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "scalingGroupConfiguration": {
                    "$ref": "#/$defs/KxScalingGroupConfiguration"
                }
            }
        },
        "KxEnvironmentId": {
            "type": "string"
        },
        "KxClusterStatus": {
            "enum": [
                "PENDING",
                "CREATING",
                "CREATE_FAILED",
                "RUNNING",
                "UPDATING",
                "DELETING",
                "DELETED",
                "DELETE_FAILED"
            ]
        },
        "KxClusterStatusReason": {
            "type": "string"
        },
        "KxClusterName": {
            "type": "string"
        },
        "KxClusterType": {
            "enum": [
                "HDB",
                "RDB",
                "GATEWAY",
                "GP",
                "TICKERPLANT"
            ]
        },
        "TickerplantLogConfiguration": {
            "type": "object",
            "properties": {
                "tickerplantLogVolumes": {
                    "$ref": "#/$defs/TickerplantLogVolumes"
                }
            }
        },
        "TickerplantLogVolumes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeName"
            }
        },
        "VolumeName": {
            "type": "string"
        },
        "Volumes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Volume"
            }
        },
        "Volume": {
            "type": "object",
            "properties": {
                "volumeName": {
                    "$ref": "#/$defs/VolumeName"
                },
                "volumeType": {
                    "$ref": "#/$defs/VolumeType"
                }
            }
        },
        "VolumeType": {
            "enum": [
                "NAS_1"
            ]
        },
        "KxDatabaseConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxDatabaseConfiguration"
            }
        },
        "KxDatabaseConfiguration": {
            "type": "object",
            "properties": {
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "cacheConfigurations": {
                    "$ref": "#/$defs/KxDatabaseCacheConfigurations"
                },
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "dataviewName": {
                    "$ref": "#/$defs/KxDataviewName"
                },
                "dataviewConfiguration": {
                    "$ref": "#/$defs/KxDataviewConfiguration"
                }
            }
        },
        "KxDatabaseCacheConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxDatabaseCacheConfiguration"
            }
        },
        "KxDatabaseCacheConfiguration": {
            "type": "object",
            "properties": {
                "cacheType": {
                    "$ref": "#/$defs/KxCacheStorageType"
                },
                "dbPaths": {
                    "$ref": "#/$defs/DbPaths"
                },
                "dataviewName": {
                    "$ref": "#/$defs/KxDataviewName"
                }
            }
        },
        "KxCacheStorageType": {
            "type": "string"
        },
        "DbPaths": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DbPath"
            }
        },
        "KxDataviewName": {
            "type": "string"
        },
        "KxDataviewConfiguration": {
            "type": "object",
            "properties": {
                "dataviewName": {
                    "$ref": "#/$defs/KxDataviewName"
                },
                "dataviewVersionId": {
                    "$ref": "#/$defs/VersionId"
                },
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "segmentConfigurations": {
                    "$ref": "#/$defs/KxDataviewSegmentConfigurationList"
                }
            }
        },
        "VersionId": {
            "type": "string"
        },
        "KxDataviewSegmentConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxDataviewSegmentConfiguration"
            }
        },
        "KxDataviewSegmentConfiguration": {
            "type": "object",
            "properties": {
                "dbPaths": {
                    "$ref": "#/$defs/SegmentConfigurationDbPathList"
                },
                "volumeName": {
                    "$ref": "#/$defs/KxVolumeName"
                },
                "onDemand": {
                    "$ref": "#/$defs/booleanValue"
                }
            }
        },
        "SegmentConfigurationDbPathList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DbPath"
            }
        },
        "KxVolumeName": {
            "type": "string"
        },
        "booleanValue": {
            "type": "boolean"
        },
        "KxCacheStorageConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxCacheStorageConfiguration"
            }
        },
        "KxCacheStorageConfiguration": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/KxCacheStorageType"
                },
                "size": {
                    "$ref": "#/$defs/KxCacheStorageSize"
                }
            }
        },
        "KxCacheStorageSize": {
            "type": "integer",
            "format": "int32"
        },
        "AutoScalingConfiguration": {
            "type": "object",
            "properties": {
                "minNodeCount": {
                    "$ref": "#/$defs/NodeCount"
                },
                "maxNodeCount": {
                    "$ref": "#/$defs/NodeCount"
                },
                "autoScalingMetric": {
                    "$ref": "#/$defs/AutoScalingMetric"
                },
                "metricTarget": {
                    "$ref": "#/$defs/AutoScalingMetricTarget"
                },
                "scaleInCooldownSeconds": {
                    "$ref": "#/$defs/CooldownTime"
                },
                "scaleOutCooldownSeconds": {
                    "$ref": "#/$defs/CooldownTime"
                }
            }
        },
        "NodeCount": {
            "type": "integer",
            "format": "int32"
        },
        "AutoScalingMetric": {
            "enum": [
                "CPU_UTILIZATION_PERCENTAGE"
            ]
        },
        "AutoScalingMetricTarget": {
            "type": "number",
            "format": "double"
        },
        "CooldownTime": {
            "type": "number",
            "format": "double"
        },
        "KxClusterDescription": {
            "type": "string"
        },
        "CapacityConfiguration": {
            "type": "object",
            "properties": {
                "nodeType": {
                    "$ref": "#/$defs/NodeType"
                },
                "nodeCount": {
                    "$ref": "#/$defs/NodeCount"
                }
            }
        },
        "NodeType": {
            "type": "string"
        },
        "ReleaseLabel": {
            "type": "string"
        },
        "VpcConfiguration": {
            "type": "object",
            "properties": {
                "vpcId": {
                    "$ref": "#/$defs/VpcIdString"
                },
                "securityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdList"
                },
                "subnetIds": {
                    "$ref": "#/$defs/SubnetIdList"
                },
                "ipAddressType": {
                    "$ref": "#/$defs/IPAddressType"
                }
            }
        },
        "VpcIdString": {
            "type": "string"
        },
        "SecurityGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupIdString"
            }
        },
        "SecurityGroupIdString": {
            "type": "string"
        },
        "SubnetIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetIdString"
            }
        },
        "SubnetIdString": {
            "type": "string"
        },
        "IPAddressType": {
            "enum": [
                "IP_V4"
            ]
        },
        "InitializationScriptFilePath": {
            "type": "string"
        },
        "KxCommandLineArguments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxCommandLineArgument"
            }
        },
        "KxCommandLineArgument": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/KxCommandLineArgumentKey"
                },
                "value": {
                    "$ref": "#/$defs/KxCommandLineArgumentValue"
                }
            }
        },
        "KxCommandLineArgumentKey": {
            "type": "string"
        },
        "KxCommandLineArgumentValue": {
            "type": "string"
        },
        "CodeConfiguration": {
            "type": "object",
            "properties": {
                "s3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "s3Key": {
                    "$ref": "#/$defs/S3Key"
                },
                "s3ObjectVersion": {
                    "$ref": "#/$defs/S3ObjectVersion"
                }
            }
        },
        "S3Bucket": {
            "type": "string"
        },
        "S3Key": {
            "type": "string"
        },
        "S3ObjectVersion": {
            "type": "string"
        },
        "ExecutionRoleArn": {
            "type": "string"
        },
        "KxSavedownStorageConfiguration": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/KxSavedownStorageType"
                },
                "size": {
                    "$ref": "#/$defs/KxSavedownStorageSize"
                },
                "volumeName": {
                    "$ref": "#/$defs/KxVolumeName"
                }
            }
        },
        "KxSavedownStorageType": {
            "enum": [
                "SDS01"
            ]
        },
        "KxSavedownStorageSize": {
            "type": "integer",
            "format": "int32"
        },
        "KxAzMode": {
            "enum": [
                "SINGLE",
                "MULTI"
            ]
        },
        "AvailabilityZoneId": {
            "type": "string"
        },
        "KxScalingGroupConfiguration": {
            "type": "object",
            "properties": {
                "scalingGroupName": {
                    "$ref": "#/$defs/KxScalingGroupName"
                },
                "memoryLimit": {
                    "$ref": "#/$defs/MemoryMib"
                },
                "memoryReservation": {
                    "$ref": "#/$defs/MemoryMib"
                },
                "nodeCount": {
                    "$ref": "#/$defs/ClusterNodeCount"
                },
                "cpu": {
                    "$ref": "#/$defs/CpuCount"
                }
            }
        },
        "KxScalingGroupName": {
            "type": "string"
        },
        "MemoryMib": {
            "type": "integer",
            "format": "int32"
        },
        "ClusterNodeCount": {
            "type": "integer",
            "format": "int32"
        },
        "CpuCount": {
            "type": "number",
            "format": "double"
        },
        "CreateKxClusterRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "clusterName": {
                    "$ref": "#/$defs/KxClusterName"
                },
                "clusterType": {
                    "$ref": "#/$defs/KxClusterType"
                },
                "tickerplantLogConfiguration": {
                    "$ref": "#/$defs/TickerplantLogConfiguration"
                },
                "databases": {
                    "$ref": "#/$defs/KxDatabaseConfigurations"
                },
                "cacheStorageConfigurations": {
                    "$ref": "#/$defs/KxCacheStorageConfigurations"
                },
                "autoScalingConfiguration": {
                    "$ref": "#/$defs/AutoScalingConfiguration"
                },
                "clusterDescription": {
                    "$ref": "#/$defs/KxClusterDescription"
                },
                "capacityConfiguration": {
                    "$ref": "#/$defs/CapacityConfiguration"
                },
                "releaseLabel": {
                    "$ref": "#/$defs/ReleaseLabel"
                },
                "vpcConfiguration": {
                    "$ref": "#/$defs/VpcConfiguration"
                },
                "initializationScript": {
                    "$ref": "#/$defs/InitializationScriptFilePath"
                },
                "commandLineArguments": {
                    "$ref": "#/$defs/KxCommandLineArguments"
                },
                "code": {
                    "$ref": "#/$defs/CodeConfiguration"
                },
                "executionRole": {
                    "$ref": "#/$defs/ExecutionRoleArn"
                },
                "savedownStorageConfiguration": {
                    "$ref": "#/$defs/KxSavedownStorageConfiguration"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "scalingGroupConfiguration": {
                    "$ref": "#/$defs/KxScalingGroupConfiguration"
                }
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "CreateKxDatabaseResponse": {
            "type": "object",
            "properties": {
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "databaseArn": {
                    "$ref": "#/$defs/DatabaseArn"
                },
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DatabaseArn": {
            "type": "string"
        },
        "CreateKxDatabaseRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                }
            }
        },
        "CreateKxDataviewResponse": {
            "type": "object",
            "properties": {
                "dataviewName": {
                    "$ref": "#/$defs/KxDataviewName"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "segmentConfigurations": {
                    "$ref": "#/$defs/KxDataviewSegmentConfigurationList"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "autoUpdate": {
                    "$ref": "#/$defs/booleanValue"
                },
                "readWrite": {
                    "$ref": "#/$defs/booleanValue"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/KxDataviewStatus"
                }
            }
        },
        "KxDataviewStatus": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "UPDATING",
                "FAILED",
                "DELETING"
            ]
        },
        "CreateKxDataviewRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "dataviewName": {
                    "$ref": "#/$defs/KxDataviewName"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "segmentConfigurations": {
                    "$ref": "#/$defs/KxDataviewSegmentConfigurationList"
                },
                "autoUpdate": {
                    "$ref": "#/$defs/booleanValue"
                },
                "readWrite": {
                    "$ref": "#/$defs/booleanValue"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                }
            }
        },
        "CreateKxEnvironmentResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/KxEnvironmentName"
                },
                "status": {
                    "$ref": "#/$defs/EnvironmentStatus"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "environmentArn": {
                    "$ref": "#/$defs/EnvironmentArn"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "creationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "KxEnvironmentName": {
            "type": "string"
        },
        "EnvironmentStatus": {
            "enum": [
                "CREATE_REQUESTED",
                "CREATING",
                "CREATED",
                "DELETE_REQUESTED",
                "DELETING",
                "DELETED",
                "FAILED_CREATION",
                "RETRY_DELETION",
                "FAILED_DELETION",
                "UPDATE_NETWORK_REQUESTED",
                "UPDATING_NETWORK",
                "FAILED_UPDATING_NETWORK",
                "SUSPENDED"
            ]
        },
        "CreateKxEnvironmentRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/KxEnvironmentName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyARN"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "KmsKeyARN": {
            "type": "string"
        },
        "CreateKxScalingGroupResponse": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "scalingGroupName": {
                    "$ref": "#/$defs/KxScalingGroupName"
                },
                "hostType": {
                    "$ref": "#/$defs/KxHostType"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "status": {
                    "$ref": "#/$defs/KxScalingGroupStatus"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "KxHostType": {
            "type": "string"
        },
        "KxScalingGroupStatus": {
            "enum": [
                "CREATING",
                "CREATE_FAILED",
                "ACTIVE",
                "DELETING",
                "DELETED",
                "DELETE_FAILED"
            ]
        },
        "CreateKxScalingGroupRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "scalingGroupName": {
                    "$ref": "#/$defs/KxScalingGroupName"
                },
                "hostType": {
                    "$ref": "#/$defs/KxHostType"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CreateKxUserResponse": {
            "type": "object",
            "properties": {
                "userName": {
                    "$ref": "#/$defs/KxUserNameString"
                },
                "userArn": {
                    "$ref": "#/$defs/KxUserArn"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "iamRole": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "KxUserNameString": {
            "type": "string"
        },
        "KxUserArn": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "CreateKxUserRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "userName": {
                    "$ref": "#/$defs/KxUserNameString"
                },
                "iamRole": {
                    "$ref": "#/$defs/RoleArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "CreateKxVolumeResponse": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "volumeName": {
                    "$ref": "#/$defs/KxVolumeName"
                },
                "volumeType": {
                    "$ref": "#/$defs/KxVolumeType"
                },
                "volumeArn": {
                    "$ref": "#/$defs/KxVolumeArn"
                },
                "nas1Configuration": {
                    "$ref": "#/$defs/KxNAS1Configuration"
                },
                "status": {
                    "$ref": "#/$defs/KxVolumeStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/KxVolumeStatusReason"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "availabilityZoneIds": {
                    "$ref": "#/$defs/AvailabilityZoneIds"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "KxVolumeType": {
            "enum": [
                "NAS_1"
            ]
        },
        "KxVolumeArn": {
            "type": "string"
        },
        "KxNAS1Configuration": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/KxNAS1Type"
                },
                "size": {
                    "$ref": "#/$defs/KxNAS1Size"
                }
            }
        },
        "KxNAS1Type": {
            "enum": [
                "SSD_1000",
                "SSD_250",
                "HDD_12"
            ]
        },
        "KxNAS1Size": {
            "type": "integer",
            "format": "int32"
        },
        "KxVolumeStatus": {
            "enum": [
                "CREATING",
                "CREATE_FAILED",
                "ACTIVE",
                "UPDATING",
                "UPDATED",
                "UPDATE_FAILED",
                "DELETING",
                "DELETED",
                "DELETE_FAILED"
            ]
        },
        "KxVolumeStatusReason": {
            "type": "string"
        },
        "AvailabilityZoneIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AvailabilityZoneId"
            }
        },
        "CreateKxVolumeRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "volumeType": {
                    "$ref": "#/$defs/KxVolumeType"
                },
                "volumeName": {
                    "$ref": "#/$defs/KxVolumeName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "nas1Configuration": {
                    "$ref": "#/$defs/KxNAS1Configuration"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneIds": {
                    "$ref": "#/$defs/AvailabilityZoneIds"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "DeleteEnvironmentResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteEnvironmentRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                }
            }
        },
        "DeleteKxClusterResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteKxClusterRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "clusterName": {
                    "$ref": "#/$defs/KxClusterName"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                }
            }
        },
        "DeleteKxClusterNodeResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteKxClusterNodeRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "clusterName": {
                    "$ref": "#/$defs/KxClusterName"
                },
                "nodeId": {
                    "$ref": "#/$defs/KxClusterNodeIdString"
                }
            }
        },
        "KxClusterNodeIdString": {
            "type": "string"
        },
        "DeleteKxDatabaseResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteKxDatabaseRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                }
            }
        },
        "DeleteKxDataviewResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteKxDataviewRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "dataviewName": {
                    "$ref": "#/$defs/KxDataviewName"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                }
            }
        },
        "DeleteKxEnvironmentResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteKxEnvironmentRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DeleteKxScalingGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteKxScalingGroupRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "scalingGroupName": {
                    "$ref": "#/$defs/KxScalingGroupName"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                }
            }
        },
        "DeleteKxUserResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteKxUserRequest": {
            "type": "object",
            "properties": {
                "userName": {
                    "$ref": "#/$defs/KxUserNameString"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DeleteKxVolumeResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteKxVolumeRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "volumeName": {
                    "$ref": "#/$defs/KxVolumeName"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                }
            }
        },
        "GetEnvironmentResponse": {
            "type": "object",
            "properties": {
                "environment": {
                    "$ref": "#/$defs/Environment"
                }
            }
        },
        "Environment": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/EnvironmentName"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "awsAccountId": {
                    "$ref": "#/$defs/IdType"
                },
                "status": {
                    "$ref": "#/$defs/EnvironmentStatus"
                },
                "environmentUrl": {
                    "$ref": "#/$defs/url"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "environmentArn": {
                    "$ref": "#/$defs/EnvironmentArn"
                },
                "sageMakerStudioDomainUrl": {
                    "$ref": "#/$defs/SmsDomainUrl"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "dedicatedServiceAccountId": {
                    "$ref": "#/$defs/IdType"
                },
                "federationMode": {
                    "$ref": "#/$defs/FederationMode"
                },
                "federationParameters": {
                    "$ref": "#/$defs/FederationParameters"
                }
            }
        },
        "SmsDomainUrl": {
            "type": "string"
        },
        "GetEnvironmentRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                }
            }
        },
        "GetKxChangesetResponse": {
            "type": "object",
            "properties": {
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "changeRequests": {
                    "$ref": "#/$defs/ChangeRequests"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "activeFromTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/ChangesetStatus"
                },
                "errorInfo": {
                    "$ref": "#/$defs/ErrorInfo"
                }
            }
        },
        "GetKxChangesetRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                }
            }
        },
        "GetKxClusterResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/KxClusterStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/KxClusterStatusReason"
                },
                "clusterName": {
                    "$ref": "#/$defs/KxClusterName"
                },
                "clusterType": {
                    "$ref": "#/$defs/KxClusterType"
                },
                "tickerplantLogConfiguration": {
                    "$ref": "#/$defs/TickerplantLogConfiguration"
                },
                "volumes": {
                    "$ref": "#/$defs/Volumes"
                },
                "databases": {
                    "$ref": "#/$defs/KxDatabaseConfigurations"
                },
                "cacheStorageConfigurations": {
                    "$ref": "#/$defs/KxCacheStorageConfigurations"
                },
                "autoScalingConfiguration": {
                    "$ref": "#/$defs/AutoScalingConfiguration"
                },
                "clusterDescription": {
                    "$ref": "#/$defs/KxClusterDescription"
                },
                "capacityConfiguration": {
                    "$ref": "#/$defs/CapacityConfiguration"
                },
                "releaseLabel": {
                    "$ref": "#/$defs/ReleaseLabel"
                },
                "vpcConfiguration": {
                    "$ref": "#/$defs/VpcConfiguration"
                },
                "initializationScript": {
                    "$ref": "#/$defs/InitializationScriptFilePath"
                },
                "commandLineArguments": {
                    "$ref": "#/$defs/KxCommandLineArguments"
                },
                "code": {
                    "$ref": "#/$defs/CodeConfiguration"
                },
                "executionRole": {
                    "$ref": "#/$defs/ExecutionRoleArn"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "savedownStorageConfiguration": {
                    "$ref": "#/$defs/KxSavedownStorageConfiguration"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "scalingGroupConfiguration": {
                    "$ref": "#/$defs/KxScalingGroupConfiguration"
                }
            }
        },
        "GetKxClusterRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "clusterName": {
                    "$ref": "#/$defs/KxClusterName"
                }
            }
        },
        "GetKxConnectionStringResponse": {
            "type": "object",
            "properties": {
                "signedConnectionString": {
                    "$ref": "#/$defs/SignedKxConnectionString"
                }
            }
        },
        "SignedKxConnectionString": {
            "type": "string"
        },
        "GetKxConnectionStringRequest": {
            "type": "object",
            "properties": {
                "userArn": {
                    "$ref": "#/$defs/KxUserArn"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "clusterName": {
                    "$ref": "#/$defs/KxClusterName"
                }
            }
        },
        "GetKxDatabaseResponse": {
            "type": "object",
            "properties": {
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "databaseArn": {
                    "$ref": "#/$defs/DatabaseArn"
                },
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastCompletedChangesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "numBytes": {
                    "$ref": "#/$defs/numBytes"
                },
                "numChangesets": {
                    "$ref": "#/$defs/numChangesets"
                },
                "numFiles": {
                    "$ref": "#/$defs/numFiles"
                }
            }
        },
        "numBytes": {
            "type": "integer",
            "format": "int64"
        },
        "numChangesets": {
            "type": "integer",
            "format": "int32"
        },
        "numFiles": {
            "type": "integer",
            "format": "int32"
        },
        "GetKxDatabaseRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                }
            }
        },
        "GetKxDataviewResponse": {
            "type": "object",
            "properties": {
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "dataviewName": {
                    "$ref": "#/$defs/KxDataviewName"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "segmentConfigurations": {
                    "$ref": "#/$defs/KxDataviewSegmentConfigurationList"
                },
                "activeVersions": {
                    "$ref": "#/$defs/KxDataviewActiveVersionList"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "autoUpdate": {
                    "$ref": "#/$defs/booleanValue"
                },
                "readWrite": {
                    "$ref": "#/$defs/booleanValue"
                },
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/KxDataviewStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/KxDataviewStatusReason"
                }
            }
        },
        "KxDataviewActiveVersionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxDataviewActiveVersion"
            }
        },
        "KxDataviewActiveVersion": {
            "type": "object",
            "properties": {
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "segmentConfigurations": {
                    "$ref": "#/$defs/KxDataviewSegmentConfigurationList"
                },
                "attachedClusters": {
                    "$ref": "#/$defs/AttachedClusterList"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "versionId": {
                    "$ref": "#/$defs/VersionId"
                }
            }
        },
        "AttachedClusterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxClusterName"
            }
        },
        "KxDataviewStatusReason": {
            "type": "string"
        },
        "GetKxDataviewRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "dataviewName": {
                    "$ref": "#/$defs/KxDataviewName"
                }
            }
        },
        "GetKxEnvironmentResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/KxEnvironmentName"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "awsAccountId": {
                    "$ref": "#/$defs/IdType"
                },
                "status": {
                    "$ref": "#/$defs/EnvironmentStatus"
                },
                "tgwStatus": {
                    "$ref": "#/$defs/tgwStatus"
                },
                "dnsStatus": {
                    "$ref": "#/$defs/dnsStatus"
                },
                "errorMessage": {
                    "$ref": "#/$defs/EnvironmentErrorMessage"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "environmentArn": {
                    "$ref": "#/$defs/EnvironmentArn"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "dedicatedServiceAccountId": {
                    "$ref": "#/$defs/IdType"
                },
                "transitGatewayConfiguration": {
                    "$ref": "#/$defs/TransitGatewayConfiguration"
                },
                "customDNSConfiguration": {
                    "$ref": "#/$defs/CustomDNSConfiguration"
                },
                "creationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "availabilityZoneIds": {
                    "$ref": "#/$defs/AvailabilityZoneIds"
                },
                "certificateAuthorityArn": {
                    "$ref": "#/$defs/stringValueLength1to255"
                }
            }
        },
        "tgwStatus": {
            "enum": [
                "NONE",
                "UPDATE_REQUESTED",
                "UPDATING",
                "FAILED_UPDATE",
                "SUCCESSFULLY_UPDATED"
            ]
        },
        "dnsStatus": {
            "enum": [
                "NONE",
                "UPDATE_REQUESTED",
                "UPDATING",
                "FAILED_UPDATE",
                "SUCCESSFULLY_UPDATED"
            ]
        },
        "EnvironmentErrorMessage": {
            "type": "string"
        },
        "TransitGatewayConfiguration": {
            "type": "object",
            "properties": {
                "transitGatewayID": {
                    "$ref": "#/$defs/TransitGatewayID"
                },
                "routableCIDRSpace": {
                    "$ref": "#/$defs/ValidCIDRSpace"
                },
                "attachmentNetworkAclConfiguration": {
                    "$ref": "#/$defs/NetworkACLConfiguration"
                }
            }
        },
        "TransitGatewayID": {
            "type": "string"
        },
        "ValidCIDRSpace": {
            "type": "string"
        },
        "NetworkACLConfiguration": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkACLEntry"
            }
        },
        "NetworkACLEntry": {
            "type": "object",
            "properties": {
                "ruleNumber": {
                    "$ref": "#/$defs/RuleNumber"
                },
                "protocol": {
                    "$ref": "#/$defs/Protocol"
                },
                "ruleAction": {
                    "$ref": "#/$defs/RuleAction"
                },
                "portRange": {
                    "$ref": "#/$defs/PortRange"
                },
                "icmpTypeCode": {
                    "$ref": "#/$defs/IcmpTypeCode"
                },
                "cidrBlock": {
                    "$ref": "#/$defs/ValidCIDRBlock"
                }
            }
        },
        "RuleNumber": {
            "type": "integer",
            "format": "int32"
        },
        "Protocol": {
            "type": "string"
        },
        "RuleAction": {
            "enum": [
                "ALLOW",
                "DENY"
            ]
        },
        "PortRange": {
            "type": "object",
            "properties": {
                "from": {
                    "$ref": "#/$defs/Port"
                },
                "to": {
                    "$ref": "#/$defs/Port"
                }
            }
        },
        "Port": {
            "type": "integer",
            "format": "int32"
        },
        "IcmpTypeCode": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/IcmpTypeOrCode"
                },
                "code": {
                    "$ref": "#/$defs/IcmpTypeOrCode"
                }
            }
        },
        "IcmpTypeOrCode": {
            "type": "integer",
            "format": "int32"
        },
        "ValidCIDRBlock": {
            "type": "string"
        },
        "CustomDNSConfiguration": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomDNSServer"
            }
        },
        "CustomDNSServer": {
            "type": "object",
            "properties": {
                "customDNSServerName": {
                    "$ref": "#/$defs/ValidHostname"
                },
                "customDNSServerIP": {
                    "$ref": "#/$defs/ValidIPAddress"
                }
            }
        },
        "ValidHostname": {
            "type": "string"
        },
        "ValidIPAddress": {
            "type": "string"
        },
        "stringValueLength1to255": {
            "type": "string"
        },
        "GetKxEnvironmentRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                }
            }
        },
        "GetKxScalingGroupResponse": {
            "type": "object",
            "properties": {
                "scalingGroupName": {
                    "$ref": "#/$defs/KxScalingGroupName"
                },
                "scalingGroupArn": {
                    "$ref": "#/$defs/arn"
                },
                "hostType": {
                    "$ref": "#/$defs/KxHostType"
                },
                "clusters": {
                    "$ref": "#/$defs/KxClusterNameList"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "status": {
                    "$ref": "#/$defs/KxScalingGroupStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/KxClusterStatusReason"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "arn": {
            "type": "string"
        },
        "KxClusterNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxClusterName"
            }
        },
        "GetKxScalingGroupRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "scalingGroupName": {
                    "$ref": "#/$defs/KxScalingGroupName"
                }
            }
        },
        "GetKxUserResponse": {
            "type": "object",
            "properties": {
                "userName": {
                    "$ref": "#/$defs/IdType"
                },
                "userArn": {
                    "$ref": "#/$defs/KxUserArn"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "iamRole": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "GetKxUserRequest": {
            "type": "object",
            "properties": {
                "userName": {
                    "$ref": "#/$defs/KxUserNameString"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                }
            }
        },
        "GetKxVolumeResponse": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "volumeName": {
                    "$ref": "#/$defs/KxVolumeName"
                },
                "volumeType": {
                    "$ref": "#/$defs/KxVolumeType"
                },
                "volumeArn": {
                    "$ref": "#/$defs/KxVolumeArn"
                },
                "nas1Configuration": {
                    "$ref": "#/$defs/KxNAS1Configuration"
                },
                "status": {
                    "$ref": "#/$defs/KxVolumeStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/KxVolumeStatusReason"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneIds": {
                    "$ref": "#/$defs/AvailabilityZoneIds"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "attachedClusters": {
                    "$ref": "#/$defs/KxAttachedClusters"
                }
            }
        },
        "KxAttachedClusters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxAttachedCluster"
            }
        },
        "KxAttachedCluster": {
            "type": "object",
            "properties": {
                "clusterName": {
                    "$ref": "#/$defs/KxClusterName"
                },
                "clusterType": {
                    "$ref": "#/$defs/KxClusterType"
                },
                "clusterStatus": {
                    "$ref": "#/$defs/KxClusterStatus"
                }
            }
        },
        "GetKxVolumeRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "volumeName": {
                    "$ref": "#/$defs/KxVolumeName"
                }
            }
        },
        "ListEnvironmentsResponse": {
            "type": "object",
            "properties": {
                "environments": {
                    "$ref": "#/$defs/EnvironmentList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "EnvironmentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Environment"
            }
        },
        "PaginationToken": {
            "type": "string"
        },
        "ListEnvironmentsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ResultLimit"
                }
            }
        },
        "ResultLimit": {
            "type": "integer",
            "format": "int32"
        },
        "ListKxChangesetsResponse": {
            "type": "object",
            "properties": {
                "kxChangesets": {
                    "$ref": "#/$defs/KxChangesets"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "KxChangesets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxChangesetListEntry"
            }
        },
        "KxChangesetListEntry": {
            "type": "object",
            "properties": {
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "activeFromTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/ChangesetStatus"
                }
            }
        },
        "ListKxChangesetsRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListKxClusterNodesResponse": {
            "type": "object",
            "properties": {
                "nodes": {
                    "$ref": "#/$defs/KxNodeSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "KxNodeSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxNode"
            }
        },
        "KxNode": {
            "type": "object",
            "properties": {
                "nodeId": {
                    "$ref": "#/$defs/KxClusterNodeIdString"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "launchTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/KxNodeStatus"
                }
            }
        },
        "KxNodeStatus": {
            "enum": [
                "RUNNING",
                "PROVISIONING"
            ]
        },
        "ListKxClusterNodesRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "clusterName": {
                    "$ref": "#/$defs/KxClusterName"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ResultLimit"
                }
            }
        },
        "ListKxClustersResponse": {
            "type": "object",
            "properties": {
                "kxClusterSummaries": {
                    "$ref": "#/$defs/KxClusters"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "KxClusters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxCluster"
            }
        },
        "KxCluster": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/KxClusterStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/KxClusterStatusReason"
                },
                "clusterName": {
                    "$ref": "#/$defs/KxClusterName"
                },
                "clusterType": {
                    "$ref": "#/$defs/KxClusterType"
                },
                "clusterDescription": {
                    "$ref": "#/$defs/KxClusterDescription"
                },
                "releaseLabel": {
                    "$ref": "#/$defs/ReleaseLabel"
                },
                "volumes": {
                    "$ref": "#/$defs/Volumes"
                },
                "initializationScript": {
                    "$ref": "#/$defs/InitializationScriptFilePath"
                },
                "executionRole": {
                    "$ref": "#/$defs/ExecutionRoleArn"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListKxClustersRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "clusterType": {
                    "$ref": "#/$defs/KxClusterType"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ListKxDatabasesResponse": {
            "type": "object",
            "properties": {
                "kxDatabases": {
                    "$ref": "#/$defs/KxDatabases"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "KxDatabases": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxDatabaseListEntry"
            }
        },
        "KxDatabaseListEntry": {
            "type": "object",
            "properties": {
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListKxDatabasesRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListKxDataviewsResponse": {
            "type": "object",
            "properties": {
                "kxDataviews": {
                    "$ref": "#/$defs/KxDataviews"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "KxDataviews": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxDataviewListEntry"
            }
        },
        "KxDataviewListEntry": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "dataviewName": {
                    "$ref": "#/$defs/KxDataviewName"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "segmentConfigurations": {
                    "$ref": "#/$defs/KxDataviewSegmentConfigurationList"
                },
                "activeVersions": {
                    "$ref": "#/$defs/KxDataviewActiveVersionList"
                },
                "status": {
                    "$ref": "#/$defs/KxDataviewStatus"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "autoUpdate": {
                    "$ref": "#/$defs/booleanValue"
                },
                "readWrite": {
                    "$ref": "#/$defs/booleanValue"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "statusReason": {
                    "$ref": "#/$defs/KxDataviewStatusReason"
                }
            }
        },
        "ListKxDataviewsRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListKxEnvironmentsResponse": {
            "type": "object",
            "properties": {
                "environments": {
                    "$ref": "#/$defs/KxEnvironmentList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "KxEnvironmentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxEnvironment"
            }
        },
        "KxEnvironment": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/KxEnvironmentName"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "awsAccountId": {
                    "$ref": "#/$defs/IdType"
                },
                "status": {
                    "$ref": "#/$defs/EnvironmentStatus"
                },
                "tgwStatus": {
                    "$ref": "#/$defs/tgwStatus"
                },
                "dnsStatus": {
                    "$ref": "#/$defs/dnsStatus"
                },
                "errorMessage": {
                    "$ref": "#/$defs/EnvironmentErrorMessage"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "environmentArn": {
                    "$ref": "#/$defs/EnvironmentArn"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "dedicatedServiceAccountId": {
                    "$ref": "#/$defs/IdType"
                },
                "transitGatewayConfiguration": {
                    "$ref": "#/$defs/TransitGatewayConfiguration"
                },
                "customDNSConfiguration": {
                    "$ref": "#/$defs/CustomDNSConfiguration"
                },
                "creationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "availabilityZoneIds": {
                    "$ref": "#/$defs/AvailabilityZoneIds"
                },
                "certificateAuthorityArn": {
                    "$ref": "#/$defs/stringValueLength1to255"
                }
            }
        },
        "ListKxEnvironmentsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "BoxedInteger": {
            "type": "integer",
            "format": "int32"
        },
        "ListKxScalingGroupsResponse": {
            "type": "object",
            "properties": {
                "scalingGroups": {
                    "$ref": "#/$defs/KxScalingGroupList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "KxScalingGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxScalingGroup"
            }
        },
        "KxScalingGroup": {
            "type": "object",
            "properties": {
                "scalingGroupName": {
                    "$ref": "#/$defs/KxScalingGroupName"
                },
                "hostType": {
                    "$ref": "#/$defs/KxHostType"
                },
                "clusters": {
                    "$ref": "#/$defs/KxClusterNameList"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "status": {
                    "$ref": "#/$defs/KxScalingGroupStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/KxClusterStatusReason"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListKxScalingGroupsRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ListKxUsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "$ref": "#/$defs/KxUserList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "KxUserList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxUser"
            }
        },
        "KxUser": {
            "type": "object",
            "properties": {
                "userArn": {
                    "$ref": "#/$defs/KxUserArn"
                },
                "userName": {
                    "$ref": "#/$defs/KxUserNameString"
                },
                "iamRole": {
                    "$ref": "#/$defs/RoleArn"
                },
                "createTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListKxUsersRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ResultLimit"
                }
            }
        },
        "ListKxVolumesResponse": {
            "type": "object",
            "properties": {
                "kxVolumeSummaries": {
                    "$ref": "#/$defs/KxVolumes"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "KxVolumes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KxVolume"
            }
        },
        "KxVolume": {
            "type": "object",
            "properties": {
                "volumeName": {
                    "$ref": "#/$defs/KxVolumeName"
                },
                "volumeType": {
                    "$ref": "#/$defs/KxVolumeType"
                },
                "status": {
                    "$ref": "#/$defs/KxVolumeStatus"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "statusReason": {
                    "$ref": "#/$defs/KxVolumeStatusReason"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneIds": {
                    "$ref": "#/$defs/AvailabilityZoneIds"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListKxVolumesRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "volumeType": {
                    "$ref": "#/$defs/KxVolumeType"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/FinSpaceTaggableArn"
                }
            }
        },
        "FinSpaceTaggableArn": {
            "type": "string"
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/FinSpaceTaggableArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/FinSpaceTaggableArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UpdateEnvironmentResponse": {
            "type": "object",
            "properties": {
                "environment": {
                    "$ref": "#/$defs/Environment"
                }
            }
        },
        "UpdateEnvironmentRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "name": {
                    "$ref": "#/$defs/EnvironmentName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "federationMode": {
                    "$ref": "#/$defs/FederationMode"
                },
                "federationParameters": {
                    "$ref": "#/$defs/FederationParameters"
                }
            }
        },
        "UpdateKxClusterCodeConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateKxClusterCodeConfigurationRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "clusterName": {
                    "$ref": "#/$defs/KxClusterName"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                },
                "code": {
                    "$ref": "#/$defs/CodeConfiguration"
                },
                "initializationScript": {
                    "$ref": "#/$defs/InitializationScriptFilePath"
                },
                "commandLineArguments": {
                    "$ref": "#/$defs/KxCommandLineArguments"
                },
                "deploymentConfiguration": {
                    "$ref": "#/$defs/KxClusterCodeDeploymentConfiguration"
                }
            }
        },
        "KxClusterCodeDeploymentConfiguration": {
            "type": "object",
            "properties": {
                "deploymentStrategy": {
                    "$ref": "#/$defs/KxClusterCodeDeploymentStrategy"
                }
            }
        },
        "KxClusterCodeDeploymentStrategy": {
            "enum": [
                "NO_RESTART",
                "ROLLING",
                "FORCE"
            ]
        },
        "UpdateKxClusterDatabasesResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateKxClusterDatabasesRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "clusterName": {
                    "$ref": "#/$defs/KxClusterName"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                },
                "databases": {
                    "$ref": "#/$defs/KxDatabaseConfigurations"
                },
                "deploymentConfiguration": {
                    "$ref": "#/$defs/KxDeploymentConfiguration"
                }
            }
        },
        "KxDeploymentConfiguration": {
            "type": "object",
            "properties": {
                "deploymentStrategy": {
                    "$ref": "#/$defs/KxDeploymentStrategy"
                }
            }
        },
        "KxDeploymentStrategy": {
            "enum": [
                "NO_RESTART",
                "ROLLING"
            ]
        },
        "UpdateKxDatabaseResponse": {
            "type": "object",
            "properties": {
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "UpdateKxDatabaseRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                }
            }
        },
        "UpdateKxDataviewResponse": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "dataviewName": {
                    "$ref": "#/$defs/KxDataviewName"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "segmentConfigurations": {
                    "$ref": "#/$defs/KxDataviewSegmentConfigurationList"
                },
                "activeVersions": {
                    "$ref": "#/$defs/KxDataviewActiveVersionList"
                },
                "status": {
                    "$ref": "#/$defs/KxDataviewStatus"
                },
                "autoUpdate": {
                    "$ref": "#/$defs/booleanValue"
                },
                "readWrite": {
                    "$ref": "#/$defs/booleanValue"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "UpdateKxDataviewRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "databaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "dataviewName": {
                    "$ref": "#/$defs/KxDataviewName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "segmentConfigurations": {
                    "$ref": "#/$defs/KxDataviewSegmentConfigurationList"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                }
            }
        },
        "UpdateKxEnvironmentResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/KxEnvironmentName"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "awsAccountId": {
                    "$ref": "#/$defs/IdType"
                },
                "status": {
                    "$ref": "#/$defs/EnvironmentStatus"
                },
                "tgwStatus": {
                    "$ref": "#/$defs/tgwStatus"
                },
                "dnsStatus": {
                    "$ref": "#/$defs/dnsStatus"
                },
                "errorMessage": {
                    "$ref": "#/$defs/EnvironmentErrorMessage"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "environmentArn": {
                    "$ref": "#/$defs/EnvironmentArn"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "dedicatedServiceAccountId": {
                    "$ref": "#/$defs/IdType"
                },
                "transitGatewayConfiguration": {
                    "$ref": "#/$defs/TransitGatewayConfiguration"
                },
                "customDNSConfiguration": {
                    "$ref": "#/$defs/CustomDNSConfiguration"
                },
                "creationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "availabilityZoneIds": {
                    "$ref": "#/$defs/AvailabilityZoneIds"
                }
            }
        },
        "UpdateKxEnvironmentRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "name": {
                    "$ref": "#/$defs/KxEnvironmentName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "UpdateKxEnvironmentNetworkResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/KxEnvironmentName"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "awsAccountId": {
                    "$ref": "#/$defs/IdType"
                },
                "status": {
                    "$ref": "#/$defs/EnvironmentStatus"
                },
                "tgwStatus": {
                    "$ref": "#/$defs/tgwStatus"
                },
                "dnsStatus": {
                    "$ref": "#/$defs/dnsStatus"
                },
                "errorMessage": {
                    "$ref": "#/$defs/EnvironmentErrorMessage"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "environmentArn": {
                    "$ref": "#/$defs/EnvironmentArn"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "dedicatedServiceAccountId": {
                    "$ref": "#/$defs/IdType"
                },
                "transitGatewayConfiguration": {
                    "$ref": "#/$defs/TransitGatewayConfiguration"
                },
                "customDNSConfiguration": {
                    "$ref": "#/$defs/CustomDNSConfiguration"
                },
                "creationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "availabilityZoneIds": {
                    "$ref": "#/$defs/AvailabilityZoneIds"
                }
            }
        },
        "UpdateKxEnvironmentNetworkRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "transitGatewayConfiguration": {
                    "$ref": "#/$defs/TransitGatewayConfiguration"
                },
                "customDNSConfiguration": {
                    "$ref": "#/$defs/CustomDNSConfiguration"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "UpdateKxUserResponse": {
            "type": "object",
            "properties": {
                "userName": {
                    "$ref": "#/$defs/KxUserNameString"
                },
                "userArn": {
                    "$ref": "#/$defs/KxUserArn"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "iamRole": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "UpdateKxUserRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                },
                "userName": {
                    "$ref": "#/$defs/KxUserNameString"
                },
                "iamRole": {
                    "$ref": "#/$defs/RoleArn"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "UpdateKxVolumeResponse": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "volumeName": {
                    "$ref": "#/$defs/KxVolumeName"
                },
                "volumeType": {
                    "$ref": "#/$defs/KxVolumeType"
                },
                "volumeArn": {
                    "$ref": "#/$defs/KxVolumeArn"
                },
                "nas1Configuration": {
                    "$ref": "#/$defs/KxNAS1Configuration"
                },
                "status": {
                    "$ref": "#/$defs/KxVolumeStatus"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "statusReason": {
                    "$ref": "#/$defs/KxVolumeStatusReason"
                },
                "createdTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "azMode": {
                    "$ref": "#/$defs/KxAzMode"
                },
                "availabilityZoneIds": {
                    "$ref": "#/$defs/AvailabilityZoneIds"
                },
                "lastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "attachedClusters": {
                    "$ref": "#/$defs/KxAttachedClusters"
                }
            }
        },
        "UpdateKxVolumeRequest": {
            "type": "object",
            "properties": {
                "environmentId": {
                    "$ref": "#/$defs/KxEnvironmentId"
                },
                "volumeName": {
                    "$ref": "#/$defs/KxVolumeName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientTokenString"
                },
                "nas1Configuration": {
                    "$ref": "#/$defs/KxNAS1Configuration"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://finspace-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://finspace-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://finspace.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://finspace.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}