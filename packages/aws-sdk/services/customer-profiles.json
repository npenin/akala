{
    "name": "profile",
    "commands": [
        {
            "name": "AddProfileKey",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/profiles/keys"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddProfileKeyResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddProfileKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateCalculatedAttributeDefinition",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "CalculatedAttributeName": "route.CalculatedAttributeName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/calculated-attributes/{CalculatedAttributeName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCalculatedAttributeDefinitionResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.CalculatedAttributeName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCalculatedAttributeDefinitionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateDomain",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDomainResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateEventStream",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "EventStreamName": "route.EventStreamName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/event-streams/{EventStreamName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEventStreamResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.EventStreamName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateEventStreamRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateIntegrationWorkflow",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/workflows/integrations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateIntegrationWorkflowResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateIntegrationWorkflowRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/profiles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateProfileResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateProfileRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteCalculatedAttributeDefinition",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "CalculatedAttributeName": "route.CalculatedAttributeName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/domains/{DomainName}/calculated-attributes/{CalculatedAttributeName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCalculatedAttributeDefinitionResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.CalculatedAttributeName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCalculatedAttributeDefinitionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDomain",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/domains/{DomainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDomainResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteEventStream",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "EventStreamName": "route.EventStreamName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/domains/{DomainName}/event-streams/{EventStreamName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEventStreamResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.EventStreamName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEventStreamRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteIntegration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/integrations/delete"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteIntegrationResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteIntegrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/profiles/delete"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteProfileResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteProfileRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteProfileKey",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/profiles/keys/delete"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteProfileKeyResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteProfileKeyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteProfileObject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/profiles/objects/delete"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteProfileObjectResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteProfileObjectRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteProfileObjectType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "ObjectTypeName": "route.ObjectTypeName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/domains/{DomainName}/object-types/{ObjectTypeName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteProfileObjectTypeResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.ObjectTypeName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteProfileObjectTypeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteWorkflow",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "WorkflowId": "route.WorkflowId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/domains/{DomainName}/workflows/{WorkflowId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteWorkflowResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.WorkflowId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteWorkflowRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DetectProfileObjectType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/detect/object-types"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetectProfileObjectTypeResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetectProfileObjectTypeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetAutoMergingPreview",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/identity-resolution-jobs/auto-merging-preview"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAutoMergingPreviewResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAutoMergingPreviewRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetCalculatedAttributeDefinition",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "CalculatedAttributeName": "route.CalculatedAttributeName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/calculated-attributes/{CalculatedAttributeName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCalculatedAttributeDefinitionResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.CalculatedAttributeName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCalculatedAttributeDefinitionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetCalculatedAttributeForProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "ProfileId": "route.ProfileId",
                            "CalculatedAttributeName": "route.CalculatedAttributeName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/profile/{ProfileId}/calculated-attributes/{CalculatedAttributeName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCalculatedAttributeForProfileResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.ProfileId",
                        "param.0.CalculatedAttributeName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCalculatedAttributeForProfileRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDomain",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDomainResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetEventStream",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "EventStreamName": "route.EventStreamName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/event-streams/{EventStreamName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEventStreamResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.EventStreamName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEventStreamRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetIdentityResolutionJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "JobId": "route.JobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/identity-resolution-jobs/{JobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIdentityResolutionJobResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.JobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIdentityResolutionJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetIntegration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/integrations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIntegrationResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIntegrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetMatches",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/matches"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMatchesResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMatchesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetProfileObjectType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "ObjectTypeName": "route.ObjectTypeName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/object-types/{ObjectTypeName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetProfileObjectTypeResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.ObjectTypeName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetProfileObjectTypeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetProfileObjectTypeTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "TemplateId": "route.TemplateId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/templates/{TemplateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetProfileObjectTypeTemplateResponse"
                    },
                    "inject": [
                        "param.0.TemplateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetProfileObjectTypeTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetSimilarProfiles",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/matches"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSimilarProfilesResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSimilarProfilesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetWorkflow",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "WorkflowId": "route.WorkflowId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/workflows/{WorkflowId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWorkflowResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.WorkflowId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWorkflowRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetWorkflowSteps",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "WorkflowId": "route.WorkflowId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/workflows/{WorkflowId}/steps"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWorkflowStepsResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.WorkflowId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWorkflowStepsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListAccountIntegrations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/integrations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAccountIntegrationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAccountIntegrationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCalculatedAttributeDefinitions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/calculated-attributes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCalculatedAttributeDefinitionsResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCalculatedAttributeDefinitionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCalculatedAttributesForProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "ProfileId": "route.ProfileId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/profile/{ProfileId}/calculated-attributes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCalculatedAttributesForProfileResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.ProfileId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCalculatedAttributesForProfileRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListDomains",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/domains"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDomainsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDomainsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListEventStreams",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/event-streams"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEventStreamsResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEventStreamsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListIdentityResolutionJobs",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/identity-resolution-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListIdentityResolutionJobsResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListIdentityResolutionJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListIntegrations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/integrations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListIntegrationsResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListIntegrationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListProfileObjects",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/profiles/objects"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProfileObjectsResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListProfileObjectsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListProfileObjectTypes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/object-types"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProfileObjectTypesResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListProfileObjectTypesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListProfileObjectTypeTemplates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProfileObjectTypeTemplatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListProfileObjectTypeTemplatesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListRuleBasedMatches",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domains/{DomainName}/profiles/ruleBasedMatches"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRuleBasedMatchesResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRuleBasedMatchesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListWorkflows",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/workflows"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListWorkflowsResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListWorkflowsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "MergeProfiles",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/profiles/objects/merge"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MergeProfilesResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/MergeProfilesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutIntegration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/domains/{DomainName}/integrations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutIntegrationResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutIntegrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutProfileObject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/domains/{DomainName}/profiles/objects"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutProfileObjectResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutProfileObjectRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutProfileObjectType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "ObjectTypeName": "route.ObjectTypeName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/domains/{DomainName}/object-types/{ObjectTypeName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutProfileObjectTypeResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.ObjectTypeName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutProfileObjectTypeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "SearchProfiles",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domains/{DomainName}/profiles/search"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchProfilesResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchProfilesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateCalculatedAttributeDefinition",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "CalculatedAttributeName": "route.CalculatedAttributeName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/domains/{DomainName}/calculated-attributes/{CalculatedAttributeName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCalculatedAttributeDefinitionResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0.CalculatedAttributeName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCalculatedAttributeDefinitionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDomain",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/domains/{DomainName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDomainResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDomainRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DomainName": "route.DomainName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/domains/{DomainName}/profiles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateProfileResponse"
                    },
                    "inject": [
                        "param.0.DomainName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateProfileRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AddProfileKeyResponse": {
            "type": "object",
            "properties": {
                "KeyName": {
                    "$ref": "#/$defs/name"
                },
                "Values": {
                    "$ref": "#/$defs/requestValueList"
                }
            }
        },
        "name": {
            "type": "string"
        },
        "requestValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string1To255"
            }
        },
        "string1To255": {
            "type": "string"
        },
        "AddProfileKeyRequest": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "$ref": "#/$defs/uuid"
                },
                "KeyName": {
                    "$ref": "#/$defs/name"
                },
                "Values": {
                    "$ref": "#/$defs/requestValueList"
                },
                "DomainName": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "uuid": {
            "type": "string"
        },
        "CreateCalculatedAttributeDefinitionResponse": {
            "type": "object",
            "properties": {
                "CalculatedAttributeName": {
                    "$ref": "#/$defs/typeName"
                },
                "DisplayName": {
                    "$ref": "#/$defs/displayName"
                },
                "Description": {
                    "$ref": "#/$defs/sensitiveText"
                },
                "AttributeDetails": {
                    "$ref": "#/$defs/AttributeDetails"
                },
                "Conditions": {
                    "$ref": "#/$defs/Conditions"
                },
                "Statistic": {
                    "$ref": "#/$defs/Statistic"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "typeName": {
            "type": "string"
        },
        "displayName": {
            "type": "string"
        },
        "sensitiveText": {
            "type": "string"
        },
        "AttributeDetails": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/AttributeList"
                },
                "Expression": {
                    "$ref": "#/$defs/string1To255"
                }
            }
        },
        "AttributeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeItem"
            }
        },
        "AttributeItem": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/attributeName"
                }
            }
        },
        "attributeName": {
            "type": "string"
        },
        "Conditions": {
            "type": "object",
            "properties": {
                "Range": {
                    "$ref": "#/$defs/Range"
                },
                "ObjectCount": {
                    "$ref": "#/$defs/ObjectCount"
                },
                "Threshold": {
                    "$ref": "#/$defs/Threshold"
                }
            }
        },
        "Range": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Value"
                },
                "Unit": {
                    "$ref": "#/$defs/Unit"
                }
            }
        },
        "Value": {
            "type": "integer",
            "format": "int32"
        },
        "Unit": {
            "enum": [
                "DAYS"
            ]
        },
        "ObjectCount": {
            "type": "integer",
            "format": "int32"
        },
        "Threshold": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/string1To255"
                },
                "Operator": {
                    "$ref": "#/$defs/Operator"
                }
            }
        },
        "Operator": {
            "enum": [
                "EQUAL_TO",
                "GREATER_THAN",
                "LESS_THAN",
                "NOT_EQUAL_TO"
            ]
        },
        "Statistic": {
            "enum": [
                "FIRST_OCCURRENCE",
                "LAST_OCCURRENCE",
                "COUNT",
                "SUM",
                "MINIMUM",
                "MAXIMUM",
                "AVERAGE",
                "MAX_OCCURRENCE"
            ]
        },
        "timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "CreateCalculatedAttributeDefinitionRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "CalculatedAttributeName": {
                    "$ref": "#/$defs/typeName"
                },
                "DisplayName": {
                    "$ref": "#/$defs/displayName"
                },
                "Description": {
                    "$ref": "#/$defs/sensitiveText"
                },
                "AttributeDetails": {
                    "$ref": "#/$defs/AttributeDetails"
                },
                "Conditions": {
                    "$ref": "#/$defs/Conditions"
                },
                "Statistic": {
                    "$ref": "#/$defs/Statistic"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CreateDomainResponse": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "DefaultExpirationDays": {
                    "$ref": "#/$defs/expirationDaysInteger"
                },
                "DefaultEncryptionKey": {
                    "$ref": "#/$defs/encryptionKey"
                },
                "DeadLetterQueueUrl": {
                    "$ref": "#/$defs/sqsQueueUrl"
                },
                "Matching": {
                    "$ref": "#/$defs/MatchingResponse"
                },
                "RuleBasedMatching": {
                    "$ref": "#/$defs/RuleBasedMatchingResponse"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "expirationDaysInteger": {
            "type": "integer",
            "format": "int32"
        },
        "encryptionKey": {
            "type": "string"
        },
        "sqsQueueUrl": {
            "type": "string"
        },
        "MatchingResponse": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/optionalBoolean"
                },
                "JobSchedule": {
                    "$ref": "#/$defs/JobSchedule"
                },
                "AutoMerging": {
                    "$ref": "#/$defs/AutoMerging"
                },
                "ExportingConfig": {
                    "$ref": "#/$defs/ExportingConfig"
                }
            }
        },
        "optionalBoolean": {
            "type": "boolean"
        },
        "JobSchedule": {
            "type": "object",
            "properties": {
                "DayOfTheWeek": {
                    "$ref": "#/$defs/JobScheduleDayOfTheWeek"
                },
                "Time": {
                    "$ref": "#/$defs/JobScheduleTime"
                }
            }
        },
        "JobScheduleDayOfTheWeek": {
            "enum": [
                "SUNDAY",
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY"
            ]
        },
        "JobScheduleTime": {
            "type": "string"
        },
        "AutoMerging": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/optionalBoolean"
                },
                "Consolidation": {
                    "$ref": "#/$defs/Consolidation"
                },
                "ConflictResolution": {
                    "$ref": "#/$defs/ConflictResolution"
                },
                "MinAllowedConfidenceScoreForMerging": {
                    "$ref": "#/$defs/Double0To1"
                }
            }
        },
        "Consolidation": {
            "type": "object",
            "properties": {
                "MatchingAttributesList": {
                    "$ref": "#/$defs/MatchingAttributesList"
                }
            }
        },
        "MatchingAttributesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MatchingAttributes"
            }
        },
        "MatchingAttributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string1To255"
            }
        },
        "ConflictResolution": {
            "type": "object",
            "properties": {
                "ConflictResolvingModel": {
                    "$ref": "#/$defs/ConflictResolvingModel"
                },
                "SourceName": {
                    "$ref": "#/$defs/string1To255"
                }
            }
        },
        "ConflictResolvingModel": {
            "enum": [
                "RECENCY",
                "SOURCE"
            ]
        },
        "Double0To1": {
            "type": "number",
            "format": "double"
        },
        "ExportingConfig": {
            "type": "object",
            "properties": {
                "S3Exporting": {
                    "$ref": "#/$defs/S3ExportingConfig"
                }
            }
        },
        "S3ExportingConfig": {
            "type": "object",
            "properties": {
                "S3BucketName": {
                    "$ref": "#/$defs/s3BucketName"
                },
                "S3KeyName": {
                    "$ref": "#/$defs/s3KeyNameCustomerOutputConfig"
                }
            }
        },
        "s3BucketName": {
            "type": "string"
        },
        "s3KeyNameCustomerOutputConfig": {
            "type": "string"
        },
        "RuleBasedMatchingResponse": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/optionalBoolean"
                },
                "MatchingRules": {
                    "$ref": "#/$defs/MatchingRules"
                },
                "Status": {
                    "$ref": "#/$defs/RuleBasedMatchingStatus"
                },
                "MaxAllowedRuleLevelForMerging": {
                    "$ref": "#/$defs/MaxAllowedRuleLevelForMerging"
                },
                "MaxAllowedRuleLevelForMatching": {
                    "$ref": "#/$defs/MaxAllowedRuleLevelForMatching"
                },
                "AttributeTypesSelector": {
                    "$ref": "#/$defs/AttributeTypesSelector"
                },
                "ConflictResolution": {
                    "$ref": "#/$defs/ConflictResolution"
                },
                "ExportingConfig": {
                    "$ref": "#/$defs/ExportingConfig"
                }
            }
        },
        "MatchingRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MatchingRule"
            }
        },
        "MatchingRule": {
            "type": "object",
            "properties": {
                "Rule": {
                    "$ref": "#/$defs/MatchingRuleAttributeList"
                }
            }
        },
        "MatchingRuleAttributeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string1To255"
            }
        },
        "RuleBasedMatchingStatus": {
            "enum": [
                "PENDING",
                "IN_PROGRESS",
                "ACTIVE"
            ]
        },
        "MaxAllowedRuleLevelForMerging": {
            "type": "integer",
            "format": "int32"
        },
        "MaxAllowedRuleLevelForMatching": {
            "type": "integer",
            "format": "int32"
        },
        "AttributeTypesSelector": {
            "type": "object",
            "properties": {
                "AttributeMatchingModel": {
                    "$ref": "#/$defs/AttributeMatchingModel"
                },
                "Address": {
                    "$ref": "#/$defs/AddressList"
                },
                "PhoneNumber": {
                    "$ref": "#/$defs/PhoneNumberList"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/EmailList"
                }
            }
        },
        "AttributeMatchingModel": {
            "enum": [
                "ONE_TO_ONE",
                "MANY_TO_MANY"
            ]
        },
        "AddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string1To255"
            }
        },
        "PhoneNumberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string1To255"
            }
        },
        "EmailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string1To255"
            }
        },
        "CreateDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "DefaultExpirationDays": {
                    "$ref": "#/$defs/expirationDaysInteger"
                },
                "DefaultEncryptionKey": {
                    "$ref": "#/$defs/encryptionKey"
                },
                "DeadLetterQueueUrl": {
                    "$ref": "#/$defs/sqsQueueUrl"
                },
                "Matching": {
                    "$ref": "#/$defs/MatchingRequest"
                },
                "RuleBasedMatching": {
                    "$ref": "#/$defs/RuleBasedMatchingRequest"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "MatchingRequest": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/optionalBoolean"
                },
                "JobSchedule": {
                    "$ref": "#/$defs/JobSchedule"
                },
                "AutoMerging": {
                    "$ref": "#/$defs/AutoMerging"
                },
                "ExportingConfig": {
                    "$ref": "#/$defs/ExportingConfig"
                }
            }
        },
        "RuleBasedMatchingRequest": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/optionalBoolean"
                },
                "MatchingRules": {
                    "$ref": "#/$defs/MatchingRules"
                },
                "MaxAllowedRuleLevelForMerging": {
                    "$ref": "#/$defs/MaxAllowedRuleLevelForMerging"
                },
                "MaxAllowedRuleLevelForMatching": {
                    "$ref": "#/$defs/MaxAllowedRuleLevelForMatching"
                },
                "AttributeTypesSelector": {
                    "$ref": "#/$defs/AttributeTypesSelector"
                },
                "ConflictResolution": {
                    "$ref": "#/$defs/ConflictResolution"
                },
                "ExportingConfig": {
                    "$ref": "#/$defs/ExportingConfig"
                }
            }
        },
        "CreateEventStreamResponse": {
            "type": "object",
            "properties": {
                "EventStreamArn": {
                    "$ref": "#/$defs/string1To255"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CreateEventStreamRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "Uri": {
                    "$ref": "#/$defs/string1To255"
                },
                "EventStreamName": {
                    "$ref": "#/$defs/name"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CreateIntegrationWorkflowResponse": {
            "type": "object",
            "properties": {
                "WorkflowId": {
                    "$ref": "#/$defs/uuid"
                },
                "Message": {
                    "$ref": "#/$defs/string1To255"
                }
            }
        },
        "CreateIntegrationWorkflowRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "WorkflowType": {
                    "$ref": "#/$defs/WorkflowType"
                },
                "IntegrationConfig": {
                    "$ref": "#/$defs/IntegrationConfig"
                },
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "WorkflowType": {
            "enum": [
                "APPFLOW_INTEGRATION"
            ]
        },
        "IntegrationConfig": {
            "type": "object",
            "properties": {
                "AppflowIntegration": {
                    "$ref": "#/$defs/AppflowIntegration"
                }
            }
        },
        "AppflowIntegration": {
            "type": "object",
            "properties": {
                "FlowDefinition": {
                    "$ref": "#/$defs/FlowDefinition"
                },
                "Batches": {
                    "$ref": "#/$defs/Batches"
                }
            }
        },
        "FlowDefinition": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/FlowDescription"
                },
                "FlowName": {
                    "$ref": "#/$defs/FlowName"
                },
                "KmsArn": {
                    "$ref": "#/$defs/KmsArn"
                },
                "SourceFlowConfig": {
                    "$ref": "#/$defs/SourceFlowConfig"
                },
                "Tasks": {
                    "$ref": "#/$defs/Tasks"
                },
                "TriggerConfig": {
                    "$ref": "#/$defs/TriggerConfig"
                }
            }
        },
        "FlowDescription": {
            "type": "string"
        },
        "FlowName": {
            "type": "string"
        },
        "KmsArn": {
            "type": "string"
        },
        "SourceFlowConfig": {
            "type": "object",
            "properties": {
                "ConnectorProfileName": {
                    "$ref": "#/$defs/ConnectorProfileName"
                },
                "ConnectorType": {
                    "$ref": "#/$defs/SourceConnectorType"
                },
                "IncrementalPullConfig": {
                    "$ref": "#/$defs/IncrementalPullConfig"
                },
                "SourceConnectorProperties": {
                    "$ref": "#/$defs/SourceConnectorProperties"
                }
            }
        },
        "ConnectorProfileName": {
            "type": "string"
        },
        "SourceConnectorType": {
            "enum": [
                "SALESFORCE",
                "MARKETO",
                "ZENDESK",
                "SERVICENOW",
                "S3"
            ]
        },
        "IncrementalPullConfig": {
            "type": "object",
            "properties": {
                "DatetimeTypeFieldName": {
                    "$ref": "#/$defs/DatetimeTypeFieldName"
                }
            }
        },
        "DatetimeTypeFieldName": {
            "type": "string"
        },
        "SourceConnectorProperties": {
            "type": "object",
            "properties": {
                "Marketo": {
                    "$ref": "#/$defs/MarketoSourceProperties"
                },
                "S3": {
                    "$ref": "#/$defs/S3SourceProperties"
                },
                "Salesforce": {
                    "$ref": "#/$defs/SalesforceSourceProperties"
                },
                "ServiceNow": {
                    "$ref": "#/$defs/ServiceNowSourceProperties"
                },
                "Zendesk": {
                    "$ref": "#/$defs/ZendeskSourceProperties"
                }
            }
        },
        "MarketoSourceProperties": {
            "type": "object",
            "properties": {
                "Object": {
                    "$ref": "#/$defs/Object"
                }
            }
        },
        "Object": {
            "type": "string"
        },
        "S3SourceProperties": {
            "type": "object",
            "properties": {
                "BucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "BucketPrefix": {
                    "$ref": "#/$defs/BucketPrefix"
                }
            }
        },
        "BucketName": {
            "type": "string"
        },
        "BucketPrefix": {
            "type": "string"
        },
        "SalesforceSourceProperties": {
            "type": "object",
            "properties": {
                "Object": {
                    "$ref": "#/$defs/Object"
                },
                "EnableDynamicFieldUpdate": {
                    "$ref": "#/$defs/boolean"
                },
                "IncludeDeletedRecords": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "boolean": {
            "type": "boolean"
        },
        "ServiceNowSourceProperties": {
            "type": "object",
            "properties": {
                "Object": {
                    "$ref": "#/$defs/Object"
                }
            }
        },
        "ZendeskSourceProperties": {
            "type": "object",
            "properties": {
                "Object": {
                    "$ref": "#/$defs/Object"
                }
            }
        },
        "Tasks": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Task"
            }
        },
        "Task": {
            "type": "object",
            "properties": {
                "ConnectorOperator": {
                    "$ref": "#/$defs/ConnectorOperator"
                },
                "DestinationField": {
                    "$ref": "#/$defs/DestinationField"
                },
                "SourceFields": {
                    "$ref": "#/$defs/SourceFields"
                },
                "TaskProperties": {
                    "$ref": "#/$defs/TaskPropertiesMap"
                },
                "TaskType": {
                    "$ref": "#/$defs/TaskType"
                }
            }
        },
        "ConnectorOperator": {
            "type": "object",
            "properties": {
                "Marketo": {
                    "$ref": "#/$defs/MarketoConnectorOperator"
                },
                "S3": {
                    "$ref": "#/$defs/S3ConnectorOperator"
                },
                "Salesforce": {
                    "$ref": "#/$defs/SalesforceConnectorOperator"
                },
                "ServiceNow": {
                    "$ref": "#/$defs/ServiceNowConnectorOperator"
                },
                "Zendesk": {
                    "$ref": "#/$defs/ZendeskConnectorOperator"
                }
            }
        },
        "MarketoConnectorOperator": {
            "enum": [
                "PROJECTION",
                "LESS_THAN",
                "GREATER_THAN",
                "BETWEEN",
                "ADDITION",
                "MULTIPLICATION",
                "DIVISION",
                "SUBTRACTION",
                "MASK_ALL",
                "MASK_FIRST_N",
                "MASK_LAST_N",
                "VALIDATE_NON_NULL",
                "VALIDATE_NON_ZERO",
                "VALIDATE_NON_NEGATIVE",
                "VALIDATE_NUMERIC",
                "NO_OP"
            ]
        },
        "S3ConnectorOperator": {
            "enum": [
                "PROJECTION",
                "LESS_THAN",
                "GREATER_THAN",
                "BETWEEN",
                "LESS_THAN_OR_EQUAL_TO",
                "GREATER_THAN_OR_EQUAL_TO",
                "EQUAL_TO",
                "NOT_EQUAL_TO",
                "ADDITION",
                "MULTIPLICATION",
                "DIVISION",
                "SUBTRACTION",
                "MASK_ALL",
                "MASK_FIRST_N",
                "MASK_LAST_N",
                "VALIDATE_NON_NULL",
                "VALIDATE_NON_ZERO",
                "VALIDATE_NON_NEGATIVE",
                "VALIDATE_NUMERIC",
                "NO_OP"
            ]
        },
        "SalesforceConnectorOperator": {
            "enum": [
                "PROJECTION",
                "LESS_THAN",
                "CONTAINS",
                "GREATER_THAN",
                "BETWEEN",
                "LESS_THAN_OR_EQUAL_TO",
                "GREATER_THAN_OR_EQUAL_TO",
                "EQUAL_TO",
                "NOT_EQUAL_TO",
                "ADDITION",
                "MULTIPLICATION",
                "DIVISION",
                "SUBTRACTION",
                "MASK_ALL",
                "MASK_FIRST_N",
                "MASK_LAST_N",
                "VALIDATE_NON_NULL",
                "VALIDATE_NON_ZERO",
                "VALIDATE_NON_NEGATIVE",
                "VALIDATE_NUMERIC",
                "NO_OP"
            ]
        },
        "ServiceNowConnectorOperator": {
            "enum": [
                "PROJECTION",
                "CONTAINS",
                "LESS_THAN",
                "GREATER_THAN",
                "BETWEEN",
                "LESS_THAN_OR_EQUAL_TO",
                "GREATER_THAN_OR_EQUAL_TO",
                "EQUAL_TO",
                "NOT_EQUAL_TO",
                "ADDITION",
                "MULTIPLICATION",
                "DIVISION",
                "SUBTRACTION",
                "MASK_ALL",
                "MASK_FIRST_N",
                "MASK_LAST_N",
                "VALIDATE_NON_NULL",
                "VALIDATE_NON_ZERO",
                "VALIDATE_NON_NEGATIVE",
                "VALIDATE_NUMERIC",
                "NO_OP"
            ]
        },
        "ZendeskConnectorOperator": {
            "enum": [
                "PROJECTION",
                "GREATER_THAN",
                "ADDITION",
                "MULTIPLICATION",
                "DIVISION",
                "SUBTRACTION",
                "MASK_ALL",
                "MASK_FIRST_N",
                "MASK_LAST_N",
                "VALIDATE_NON_NULL",
                "VALIDATE_NON_ZERO",
                "VALIDATE_NON_NEGATIVE",
                "VALIDATE_NUMERIC",
                "NO_OP"
            ]
        },
        "DestinationField": {
            "type": "string"
        },
        "SourceFields": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/stringTo2048"
            }
        },
        "stringTo2048": {
            "type": "string"
        },
        "TaskPropertiesMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Property"
            }
        },
        "Property": {
            "type": "string"
        },
        "TaskType": {
            "enum": [
                "ARITHMETIC",
                "FILTER",
                "MAP",
                "MASK",
                "MERGE",
                "TRUNCATE",
                "VALIDATE"
            ]
        },
        "TriggerConfig": {
            "type": "object",
            "properties": {
                "TriggerType": {
                    "$ref": "#/$defs/TriggerType"
                },
                "TriggerProperties": {
                    "$ref": "#/$defs/TriggerProperties"
                }
            }
        },
        "TriggerType": {
            "enum": [
                "SCHEDULED",
                "EVENT",
                "ONDEMAND"
            ]
        },
        "TriggerProperties": {
            "type": "object",
            "properties": {
                "Scheduled": {
                    "$ref": "#/$defs/ScheduledTriggerProperties"
                }
            }
        },
        "ScheduledTriggerProperties": {
            "type": "object",
            "properties": {
                "ScheduleExpression": {
                    "$ref": "#/$defs/ScheduleExpression"
                },
                "DataPullMode": {
                    "$ref": "#/$defs/DataPullMode"
                },
                "ScheduleStartTime": {
                    "$ref": "#/$defs/Date"
                },
                "ScheduleEndTime": {
                    "$ref": "#/$defs/Date"
                },
                "Timezone": {
                    "$ref": "#/$defs/Timezone"
                },
                "ScheduleOffset": {
                    "$ref": "#/$defs/ScheduleOffset"
                },
                "FirstExecutionFrom": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "ScheduleExpression": {
            "type": "string"
        },
        "DataPullMode": {
            "enum": [
                "INCREMENTAL",
                "COMPLETE"
            ]
        },
        "Date": {
            "type": "string",
            "format": "date-time"
        },
        "Timezone": {
            "type": "string"
        },
        "ScheduleOffset": {
            "type": "integer",
            "format": "int64"
        },
        "Batches": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Batch"
            }
        },
        "Batch": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "RoleArn": {
            "type": "string"
        },
        "CreateProfileResponse": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "$ref": "#/$defs/uuid"
                }
            }
        },
        "CreateProfileRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "AccountNumber": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "AdditionalInformation": {
                    "$ref": "#/$defs/sensitiveString1To1000"
                },
                "PartyType": {
                    "$ref": "#/$defs/PartyType"
                },
                "BusinessName": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "FirstName": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "MiddleName": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "LastName": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "BirthDate": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "Gender": {
                    "$ref": "#/$defs/Gender"
                },
                "PhoneNumber": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "MobilePhoneNumber": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "HomePhoneNumber": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "BusinessPhoneNumber": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "PersonalEmailAddress": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "BusinessEmailAddress": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "Address": {
                    "$ref": "#/$defs/Address"
                },
                "ShippingAddress": {
                    "$ref": "#/$defs/Address"
                },
                "MailingAddress": {
                    "$ref": "#/$defs/Address"
                },
                "BillingAddress": {
                    "$ref": "#/$defs/Address"
                },
                "Attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "PartyTypeString": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "GenderString": {
                    "$ref": "#/$defs/sensitiveString1To255"
                }
            }
        },
        "sensitiveString1To255": {
            "type": "string"
        },
        "sensitiveString1To1000": {
            "type": "string"
        },
        "PartyType": {
            "enum": [
                "INDIVIDUAL",
                "BUSINESS",
                "OTHER"
            ]
        },
        "Gender": {
            "enum": [
                "MALE",
                "FEMALE",
                "UNSPECIFIED"
            ]
        },
        "Address": {
            "type": "object",
            "properties": {
                "Address1": {
                    "$ref": "#/$defs/string1To255"
                },
                "Address2": {
                    "$ref": "#/$defs/string1To255"
                },
                "Address3": {
                    "$ref": "#/$defs/string1To255"
                },
                "Address4": {
                    "$ref": "#/$defs/string1To255"
                },
                "City": {
                    "$ref": "#/$defs/string1To255"
                },
                "County": {
                    "$ref": "#/$defs/string1To255"
                },
                "State": {
                    "$ref": "#/$defs/string1To255"
                },
                "Province": {
                    "$ref": "#/$defs/string1To255"
                },
                "Country": {
                    "$ref": "#/$defs/string1To255"
                },
                "PostalCode": {
                    "$ref": "#/$defs/string1To255"
                }
            }
        },
        "Attributes": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/string1To255"
            }
        },
        "DeleteCalculatedAttributeDefinitionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteCalculatedAttributeDefinitionRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "CalculatedAttributeName": {
                    "$ref": "#/$defs/typeName"
                }
            }
        },
        "DeleteDomainResponse": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/message"
                }
            }
        },
        "message": {
            "type": "string"
        },
        "DeleteDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "DeleteEventStreamResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteEventStreamRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "EventStreamName": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "DeleteIntegrationResponse": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/message"
                }
            }
        },
        "DeleteIntegrationRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "Uri": {
                    "$ref": "#/$defs/string1To255"
                }
            }
        },
        "DeleteProfileResponse": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/message"
                }
            }
        },
        "DeleteProfileRequest": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "$ref": "#/$defs/uuid"
                },
                "DomainName": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "DeleteProfileKeyResponse": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/message"
                }
            }
        },
        "DeleteProfileKeyRequest": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "$ref": "#/$defs/uuid"
                },
                "KeyName": {
                    "$ref": "#/$defs/name"
                },
                "Values": {
                    "$ref": "#/$defs/requestValueList"
                },
                "DomainName": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "DeleteProfileObjectResponse": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/message"
                }
            }
        },
        "DeleteProfileObjectRequest": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "$ref": "#/$defs/uuid"
                },
                "ProfileObjectUniqueKey": {
                    "$ref": "#/$defs/string1To255"
                },
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "DomainName": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "DeleteProfileObjectTypeResponse": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/message"
                }
            }
        },
        "DeleteProfileObjectTypeRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                }
            }
        },
        "DeleteWorkflowResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteWorkflowRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "WorkflowId": {
                    "$ref": "#/$defs/string1To255"
                }
            }
        },
        "DetectProfileObjectTypeResponse": {
            "type": "object",
            "properties": {
                "DetectedProfileObjectTypes": {
                    "$ref": "#/$defs/DetectedProfileObjectTypes"
                }
            }
        },
        "DetectedProfileObjectTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectedProfileObjectType"
            }
        },
        "DetectedProfileObjectType": {
            "type": "object",
            "properties": {
                "SourceLastUpdatedTimestampFormat": {
                    "$ref": "#/$defs/string1To255"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldMap"
                },
                "Keys": {
                    "$ref": "#/$defs/KeyMap"
                }
            }
        },
        "FieldMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ObjectTypeField"
            }
        },
        "ObjectTypeField": {
            "type": "object",
            "properties": {
                "Source": {
                    "$ref": "#/$defs/text"
                },
                "Target": {
                    "$ref": "#/$defs/text"
                },
                "ContentType": {
                    "$ref": "#/$defs/FieldContentType"
                }
            }
        },
        "text": {
            "type": "string"
        },
        "FieldContentType": {
            "enum": [
                "STRING",
                "NUMBER",
                "PHONE_NUMBER",
                "EMAIL_ADDRESS",
                "NAME"
            ]
        },
        "KeyMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ObjectTypeKeyList"
            }
        },
        "ObjectTypeKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ObjectTypeKey"
            }
        },
        "ObjectTypeKey": {
            "type": "object",
            "properties": {
                "StandardIdentifiers": {
                    "$ref": "#/$defs/StandardIdentifierList"
                },
                "FieldNames": {
                    "$ref": "#/$defs/FieldNameList"
                }
            }
        },
        "StandardIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StandardIdentifier"
            }
        },
        "StandardIdentifier": {
            "enum": [
                "PROFILE",
                "ASSET",
                "CASE",
                "UNIQUE",
                "SECONDARY",
                "LOOKUP_ONLY",
                "NEW_ONLY",
                "ORDER"
            ]
        },
        "FieldNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/name"
            }
        },
        "DetectProfileObjectTypeRequest": {
            "type": "object",
            "properties": {
                "Objects": {
                    "$ref": "#/$defs/Objects"
                },
                "DomainName": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "Objects": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/stringifiedJson"
            }
        },
        "stringifiedJson": {
            "type": "string"
        },
        "GetAutoMergingPreviewResponse": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "NumberOfMatchesInSample": {
                    "$ref": "#/$defs/long"
                },
                "NumberOfProfilesInSample": {
                    "$ref": "#/$defs/long"
                },
                "NumberOfProfilesWillBeMerged": {
                    "$ref": "#/$defs/long"
                }
            }
        },
        "long": {
            "type": "integer",
            "format": "int64"
        },
        "GetAutoMergingPreviewRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "Consolidation": {
                    "$ref": "#/$defs/Consolidation"
                },
                "ConflictResolution": {
                    "$ref": "#/$defs/ConflictResolution"
                },
                "MinAllowedConfidenceScoreForMerging": {
                    "$ref": "#/$defs/Double0To1"
                }
            }
        },
        "GetCalculatedAttributeDefinitionResponse": {
            "type": "object",
            "properties": {
                "CalculatedAttributeName": {
                    "$ref": "#/$defs/typeName"
                },
                "DisplayName": {
                    "$ref": "#/$defs/displayName"
                },
                "Description": {
                    "$ref": "#/$defs/sensitiveText"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Statistic": {
                    "$ref": "#/$defs/Statistic"
                },
                "Conditions": {
                    "$ref": "#/$defs/Conditions"
                },
                "AttributeDetails": {
                    "$ref": "#/$defs/AttributeDetails"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetCalculatedAttributeDefinitionRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "CalculatedAttributeName": {
                    "$ref": "#/$defs/typeName"
                }
            }
        },
        "GetCalculatedAttributeForProfileResponse": {
            "type": "object",
            "properties": {
                "CalculatedAttributeName": {
                    "$ref": "#/$defs/typeName"
                },
                "DisplayName": {
                    "$ref": "#/$defs/displayName"
                },
                "IsDataPartial": {
                    "$ref": "#/$defs/string1To255"
                },
                "Value": {
                    "$ref": "#/$defs/string1To255"
                }
            }
        },
        "GetCalculatedAttributeForProfileRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "ProfileId": {
                    "$ref": "#/$defs/uuid"
                },
                "CalculatedAttributeName": {
                    "$ref": "#/$defs/typeName"
                }
            }
        },
        "GetDomainResponse": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "DefaultExpirationDays": {
                    "$ref": "#/$defs/expirationDaysInteger"
                },
                "DefaultEncryptionKey": {
                    "$ref": "#/$defs/encryptionKey"
                },
                "DeadLetterQueueUrl": {
                    "$ref": "#/$defs/sqsQueueUrl"
                },
                "Stats": {
                    "$ref": "#/$defs/DomainStats"
                },
                "Matching": {
                    "$ref": "#/$defs/MatchingResponse"
                },
                "RuleBasedMatching": {
                    "$ref": "#/$defs/RuleBasedMatchingResponse"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "DomainStats": {
            "type": "object",
            "properties": {
                "ProfileCount": {
                    "$ref": "#/$defs/long"
                },
                "MeteringProfileCount": {
                    "$ref": "#/$defs/long"
                },
                "ObjectCount": {
                    "$ref": "#/$defs/long"
                },
                "TotalSize": {
                    "$ref": "#/$defs/long"
                }
            }
        },
        "GetDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "GetEventStreamResponse": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "EventStreamArn": {
                    "$ref": "#/$defs/string1To255"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "State": {
                    "$ref": "#/$defs/EventStreamState"
                },
                "StoppedSince": {
                    "$ref": "#/$defs/timestamp"
                },
                "DestinationDetails": {
                    "$ref": "#/$defs/EventStreamDestinationDetails"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "EventStreamState": {
            "enum": [
                "RUNNING",
                "STOPPED"
            ]
        },
        "EventStreamDestinationDetails": {
            "type": "object",
            "properties": {
                "Uri": {
                    "$ref": "#/$defs/string1To255"
                },
                "Status": {
                    "$ref": "#/$defs/EventStreamDestinationStatus"
                },
                "UnhealthySince": {
                    "$ref": "#/$defs/timestamp"
                },
                "Message": {
                    "$ref": "#/$defs/string1To1000"
                }
            }
        },
        "EventStreamDestinationStatus": {
            "enum": [
                "HEALTHY",
                "UNHEALTHY"
            ]
        },
        "string1To1000": {
            "type": "string"
        },
        "GetEventStreamRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "EventStreamName": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "GetIdentityResolutionJobResponse": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "JobId": {
                    "$ref": "#/$defs/uuid"
                },
                "Status": {
                    "$ref": "#/$defs/IdentityResolutionJobStatus"
                },
                "Message": {
                    "$ref": "#/$defs/stringTo2048"
                },
                "JobStartTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "JobEndTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "JobExpirationTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "AutoMerging": {
                    "$ref": "#/$defs/AutoMerging"
                },
                "ExportingLocation": {
                    "$ref": "#/$defs/ExportingLocation"
                },
                "JobStats": {
                    "$ref": "#/$defs/JobStats"
                }
            }
        },
        "IdentityResolutionJobStatus": {
            "enum": [
                "PENDING",
                "PREPROCESSING",
                "FIND_MATCHING",
                "MERGING",
                "COMPLETED",
                "PARTIAL_SUCCESS",
                "FAILED"
            ]
        },
        "ExportingLocation": {
            "type": "object",
            "properties": {
                "S3Exporting": {
                    "$ref": "#/$defs/S3ExportingLocation"
                }
            }
        },
        "S3ExportingLocation": {
            "type": "object",
            "properties": {
                "S3BucketName": {
                    "$ref": "#/$defs/s3BucketName"
                },
                "S3KeyName": {
                    "$ref": "#/$defs/s3KeyName"
                }
            }
        },
        "s3KeyName": {
            "type": "string"
        },
        "JobStats": {
            "type": "object",
            "properties": {
                "NumberOfProfilesReviewed": {
                    "$ref": "#/$defs/long"
                },
                "NumberOfMatchesFound": {
                    "$ref": "#/$defs/long"
                },
                "NumberOfMergesDone": {
                    "$ref": "#/$defs/long"
                }
            }
        },
        "GetIdentityResolutionJobRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "JobId": {
                    "$ref": "#/$defs/uuid"
                }
            }
        },
        "GetIntegrationResponse": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "Uri": {
                    "$ref": "#/$defs/string1To255"
                },
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "ObjectTypeNames": {
                    "$ref": "#/$defs/ObjectTypeNames"
                },
                "WorkflowId": {
                    "$ref": "#/$defs/string1To255"
                },
                "IsUnstructured": {
                    "$ref": "#/$defs/optionalBoolean"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "ObjectTypeNames": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/typeName"
            }
        },
        "GetIntegrationRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "Uri": {
                    "$ref": "#/$defs/string1To255"
                }
            }
        },
        "GetMatchesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MatchGenerationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "PotentialMatches": {
                    "$ref": "#/$defs/matchesNumber"
                },
                "Matches": {
                    "$ref": "#/$defs/MatchesList"
                }
            }
        },
        "token": {
            "type": "string"
        },
        "matchesNumber": {
            "type": "integer",
            "format": "int32"
        },
        "MatchesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MatchItem"
            }
        },
        "MatchItem": {
            "type": "object",
            "properties": {
                "MatchId": {
                    "$ref": "#/$defs/string1To255"
                },
                "ProfileIds": {
                    "$ref": "#/$defs/ProfileIdList"
                },
                "ConfidenceScore": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "ProfileIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/uuid"
            }
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "GetMatchesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                },
                "DomainName": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "maxSize100": {
            "type": "integer",
            "format": "int32"
        },
        "GetProfileObjectTypeResponse": {
            "type": "object",
            "properties": {
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "Description": {
                    "$ref": "#/$defs/sensitiveText"
                },
                "TemplateId": {
                    "$ref": "#/$defs/name"
                },
                "ExpirationDays": {
                    "$ref": "#/$defs/expirationDaysInteger"
                },
                "EncryptionKey": {
                    "$ref": "#/$defs/encryptionKey"
                },
                "AllowProfileCreation": {
                    "$ref": "#/$defs/boolean"
                },
                "SourceLastUpdatedTimestampFormat": {
                    "$ref": "#/$defs/string1To255"
                },
                "MaxAvailableProfileObjectCount": {
                    "$ref": "#/$defs/minSize0"
                },
                "MaxProfileObjectCount": {
                    "$ref": "#/$defs/minSize1"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldMap"
                },
                "Keys": {
                    "$ref": "#/$defs/KeyMap"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "minSize0": {
            "type": "integer",
            "format": "int32"
        },
        "minSize1": {
            "type": "integer",
            "format": "int32"
        },
        "GetProfileObjectTypeRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                }
            }
        },
        "GetProfileObjectTypeTemplateResponse": {
            "type": "object",
            "properties": {
                "TemplateId": {
                    "$ref": "#/$defs/name"
                },
                "SourceName": {
                    "$ref": "#/$defs/name"
                },
                "SourceObject": {
                    "$ref": "#/$defs/name"
                },
                "AllowProfileCreation": {
                    "$ref": "#/$defs/boolean"
                },
                "SourceLastUpdatedTimestampFormat": {
                    "$ref": "#/$defs/string1To255"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldMap"
                },
                "Keys": {
                    "$ref": "#/$defs/KeyMap"
                }
            }
        },
        "GetProfileObjectTypeTemplateRequest": {
            "type": "object",
            "properties": {
                "TemplateId": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "GetSimilarProfilesResponse": {
            "type": "object",
            "properties": {
                "ProfileIds": {
                    "$ref": "#/$defs/ProfileIdList"
                },
                "MatchId": {
                    "$ref": "#/$defs/string1To255"
                },
                "MatchType": {
                    "$ref": "#/$defs/MatchType"
                },
                "RuleLevel": {
                    "$ref": "#/$defs/RuleLevel"
                },
                "ConfidenceScore": {
                    "$ref": "#/$defs/Double"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "MatchType": {
            "enum": [
                "RULE_BASED_MATCHING",
                "ML_BASED_MATCHING"
            ]
        },
        "RuleLevel": {
            "type": "integer",
            "format": "int32"
        },
        "GetSimilarProfilesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                },
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "MatchType": {
                    "$ref": "#/$defs/MatchType"
                },
                "SearchKey": {
                    "$ref": "#/$defs/string1To255"
                },
                "SearchValue": {
                    "$ref": "#/$defs/string1To255"
                }
            }
        },
        "GetWorkflowResponse": {
            "type": "object",
            "properties": {
                "WorkflowId": {
                    "$ref": "#/$defs/uuid"
                },
                "WorkflowType": {
                    "$ref": "#/$defs/WorkflowType"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "ErrorDescription": {
                    "$ref": "#/$defs/string1To255"
                },
                "StartDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Attributes": {
                    "$ref": "#/$defs/WorkflowAttributes"
                },
                "Metrics": {
                    "$ref": "#/$defs/WorkflowMetrics"
                }
            }
        },
        "Status": {
            "enum": [
                "NOT_STARTED",
                "IN_PROGRESS",
                "COMPLETE",
                "FAILED",
                "SPLIT",
                "RETRY",
                "CANCELLED"
            ]
        },
        "WorkflowAttributes": {
            "type": "object",
            "properties": {
                "AppflowIntegration": {
                    "$ref": "#/$defs/AppflowIntegrationWorkflowAttributes"
                }
            }
        },
        "AppflowIntegrationWorkflowAttributes": {
            "type": "object",
            "properties": {
                "SourceConnectorType": {
                    "$ref": "#/$defs/SourceConnectorType"
                },
                "ConnectorProfileName": {
                    "$ref": "#/$defs/ConnectorProfileName"
                },
                "RoleArn": {
                    "$ref": "#/$defs/string1To255"
                }
            }
        },
        "WorkflowMetrics": {
            "type": "object",
            "properties": {
                "AppflowIntegration": {
                    "$ref": "#/$defs/AppflowIntegrationWorkflowMetrics"
                }
            }
        },
        "AppflowIntegrationWorkflowMetrics": {
            "type": "object",
            "properties": {
                "RecordsProcessed": {
                    "$ref": "#/$defs/long"
                },
                "StepsCompleted": {
                    "$ref": "#/$defs/long"
                },
                "TotalSteps": {
                    "$ref": "#/$defs/long"
                }
            }
        },
        "GetWorkflowRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "WorkflowId": {
                    "$ref": "#/$defs/uuid"
                }
            }
        },
        "GetWorkflowStepsResponse": {
            "type": "object",
            "properties": {
                "WorkflowId": {
                    "$ref": "#/$defs/uuid"
                },
                "WorkflowType": {
                    "$ref": "#/$defs/WorkflowType"
                },
                "Items": {
                    "$ref": "#/$defs/WorkflowStepsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "WorkflowStepsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WorkflowStepItem"
            }
        },
        "WorkflowStepItem": {
            "type": "object",
            "properties": {
                "AppflowIntegration": {
                    "$ref": "#/$defs/AppflowIntegrationWorkflowStep"
                }
            }
        },
        "AppflowIntegrationWorkflowStep": {
            "type": "object",
            "properties": {
                "FlowName": {
                    "$ref": "#/$defs/FlowName"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "ExecutionMessage": {
                    "$ref": "#/$defs/string1To255"
                },
                "RecordsProcessed": {
                    "$ref": "#/$defs/long"
                },
                "BatchRecordsStartTime": {
                    "$ref": "#/$defs/string1To255"
                },
                "BatchRecordsEndTime": {
                    "$ref": "#/$defs/string1To255"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "GetWorkflowStepsRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "WorkflowId": {
                    "$ref": "#/$defs/uuid"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                }
            }
        },
        "ListAccountIntegrationsResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/IntegrationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "IntegrationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListIntegrationItem"
            }
        },
        "ListIntegrationItem": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "Uri": {
                    "$ref": "#/$defs/string1To255"
                },
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "ObjectTypeNames": {
                    "$ref": "#/$defs/ObjectTypeNames"
                },
                "WorkflowId": {
                    "$ref": "#/$defs/string1To255"
                },
                "IsUnstructured": {
                    "$ref": "#/$defs/optionalBoolean"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "ListAccountIntegrationsRequest": {
            "type": "object",
            "properties": {
                "Uri": {
                    "$ref": "#/$defs/string1To255"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                },
                "IncludeHidden": {
                    "$ref": "#/$defs/optionalBoolean"
                }
            }
        },
        "ListCalculatedAttributeDefinitionsResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/CalculatedAttributeDefinitionsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "CalculatedAttributeDefinitionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListCalculatedAttributeDefinitionItem"
            }
        },
        "ListCalculatedAttributeDefinitionItem": {
            "type": "object",
            "properties": {
                "CalculatedAttributeName": {
                    "$ref": "#/$defs/typeName"
                },
                "DisplayName": {
                    "$ref": "#/$defs/displayName"
                },
                "Description": {
                    "$ref": "#/$defs/sensitiveText"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListCalculatedAttributeDefinitionsRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                }
            }
        },
        "ListCalculatedAttributesForProfileResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/CalculatedAttributesForProfileList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "CalculatedAttributesForProfileList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListCalculatedAttributeForProfileItem"
            }
        },
        "ListCalculatedAttributeForProfileItem": {
            "type": "object",
            "properties": {
                "CalculatedAttributeName": {
                    "$ref": "#/$defs/typeName"
                },
                "DisplayName": {
                    "$ref": "#/$defs/displayName"
                },
                "IsDataPartial": {
                    "$ref": "#/$defs/string1To255"
                },
                "Value": {
                    "$ref": "#/$defs/string1To255"
                }
            }
        },
        "ListCalculatedAttributesForProfileRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                },
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "ProfileId": {
                    "$ref": "#/$defs/uuid"
                }
            }
        },
        "ListDomainsResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/DomainList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "DomainList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListDomainItem"
            }
        },
        "ListDomainItem": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListDomainsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                }
            }
        },
        "ListEventStreamsResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/EventStreamSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "EventStreamSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventStreamSummary"
            }
        },
        "EventStreamSummary": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "EventStreamName": {
                    "$ref": "#/$defs/name"
                },
                "EventStreamArn": {
                    "$ref": "#/$defs/string1To255"
                },
                "State": {
                    "$ref": "#/$defs/EventStreamState"
                },
                "StoppedSince": {
                    "$ref": "#/$defs/timestamp"
                },
                "DestinationSummary": {
                    "$ref": "#/$defs/DestinationSummary"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "DestinationSummary": {
            "type": "object",
            "properties": {
                "Uri": {
                    "$ref": "#/$defs/string1To255"
                },
                "Status": {
                    "$ref": "#/$defs/EventStreamDestinationStatus"
                },
                "UnhealthySince": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "ListEventStreamsRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                }
            }
        },
        "ListIdentityResolutionJobsResponse": {
            "type": "object",
            "properties": {
                "IdentityResolutionJobsList": {
                    "$ref": "#/$defs/IdentityResolutionJobsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "IdentityResolutionJobsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdentityResolutionJob"
            }
        },
        "IdentityResolutionJob": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "JobId": {
                    "$ref": "#/$defs/uuid"
                },
                "Status": {
                    "$ref": "#/$defs/IdentityResolutionJobStatus"
                },
                "JobStartTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "JobEndTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "JobStats": {
                    "$ref": "#/$defs/JobStats"
                },
                "ExportingLocation": {
                    "$ref": "#/$defs/ExportingLocation"
                },
                "Message": {
                    "$ref": "#/$defs/stringTo2048"
                }
            }
        },
        "ListIdentityResolutionJobsRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                }
            }
        },
        "ListIntegrationsResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/IntegrationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "ListIntegrationsRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                },
                "IncludeHidden": {
                    "$ref": "#/$defs/optionalBoolean"
                }
            }
        },
        "ListProfileObjectsResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/ProfileObjectList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "ProfileObjectList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListProfileObjectsItem"
            }
        },
        "ListProfileObjectsItem": {
            "type": "object",
            "properties": {
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "ProfileObjectUniqueKey": {
                    "$ref": "#/$defs/string1To255"
                },
                "Object": {
                    "$ref": "#/$defs/stringifiedJson"
                }
            }
        },
        "ListProfileObjectsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                },
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "ProfileId": {
                    "$ref": "#/$defs/uuid"
                },
                "ObjectFilter": {
                    "$ref": "#/$defs/ObjectFilter"
                }
            }
        },
        "ObjectFilter": {
            "type": "object",
            "properties": {
                "KeyName": {
                    "$ref": "#/$defs/name"
                },
                "Values": {
                    "$ref": "#/$defs/requestValueList"
                }
            }
        },
        "ListProfileObjectTypesResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/ProfileObjectTypeList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "ProfileObjectTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListProfileObjectTypeItem"
            }
        },
        "ListProfileObjectTypeItem": {
            "type": "object",
            "properties": {
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "Description": {
                    "$ref": "#/$defs/text"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "MaxProfileObjectCount": {
                    "$ref": "#/$defs/minSize1"
                },
                "MaxAvailableProfileObjectCount": {
                    "$ref": "#/$defs/minSize0"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListProfileObjectTypesRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                }
            }
        },
        "ListProfileObjectTypeTemplatesResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/ProfileObjectTypeTemplateList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "ProfileObjectTypeTemplateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListProfileObjectTypeTemplateItem"
            }
        },
        "ListProfileObjectTypeTemplateItem": {
            "type": "object",
            "properties": {
                "TemplateId": {
                    "$ref": "#/$defs/name"
                },
                "SourceName": {
                    "$ref": "#/$defs/name"
                },
                "SourceObject": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "ListProfileObjectTypeTemplatesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                }
            }
        },
        "ListRuleBasedMatchesResponse": {
            "type": "object",
            "properties": {
                "MatchIds": {
                    "$ref": "#/$defs/MatchIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "MatchIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string1To255"
            }
        },
        "ListRuleBasedMatchesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                },
                "DomainName": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/TagArn"
                }
            }
        },
        "TagArn": {
            "type": "string"
        },
        "ListWorkflowsResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/WorkflowList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "WorkflowList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListWorkflowsItem"
            }
        },
        "ListWorkflowsItem": {
            "type": "object",
            "properties": {
                "WorkflowType": {
                    "$ref": "#/$defs/WorkflowType"
                },
                "WorkflowId": {
                    "$ref": "#/$defs/string1To255"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "StatusDescription": {
                    "$ref": "#/$defs/string1To255"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "ListWorkflowsRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "WorkflowType": {
                    "$ref": "#/$defs/WorkflowType"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "QueryStartDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "QueryEndDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                }
            }
        },
        "MergeProfilesResponse": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/message"
                }
            }
        },
        "MergeProfilesRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "MainProfileId": {
                    "$ref": "#/$defs/uuid"
                },
                "ProfileIdsToBeMerged": {
                    "$ref": "#/$defs/ProfileIdToBeMergedList"
                },
                "FieldSourceProfileIds": {
                    "$ref": "#/$defs/FieldSourceProfileIds"
                }
            }
        },
        "ProfileIdToBeMergedList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/uuid"
            }
        },
        "FieldSourceProfileIds": {
            "type": "object",
            "properties": {
                "AccountNumber": {
                    "$ref": "#/$defs/uuid"
                },
                "AdditionalInformation": {
                    "$ref": "#/$defs/uuid"
                },
                "PartyType": {
                    "$ref": "#/$defs/uuid"
                },
                "BusinessName": {
                    "$ref": "#/$defs/uuid"
                },
                "FirstName": {
                    "$ref": "#/$defs/uuid"
                },
                "MiddleName": {
                    "$ref": "#/$defs/uuid"
                },
                "LastName": {
                    "$ref": "#/$defs/uuid"
                },
                "BirthDate": {
                    "$ref": "#/$defs/uuid"
                },
                "Gender": {
                    "$ref": "#/$defs/uuid"
                },
                "PhoneNumber": {
                    "$ref": "#/$defs/uuid"
                },
                "MobilePhoneNumber": {
                    "$ref": "#/$defs/uuid"
                },
                "HomePhoneNumber": {
                    "$ref": "#/$defs/uuid"
                },
                "BusinessPhoneNumber": {
                    "$ref": "#/$defs/uuid"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/uuid"
                },
                "PersonalEmailAddress": {
                    "$ref": "#/$defs/uuid"
                },
                "BusinessEmailAddress": {
                    "$ref": "#/$defs/uuid"
                },
                "Address": {
                    "$ref": "#/$defs/uuid"
                },
                "ShippingAddress": {
                    "$ref": "#/$defs/uuid"
                },
                "MailingAddress": {
                    "$ref": "#/$defs/uuid"
                },
                "BillingAddress": {
                    "$ref": "#/$defs/uuid"
                },
                "Attributes": {
                    "$ref": "#/$defs/AttributeSourceIdMap"
                }
            }
        },
        "AttributeSourceIdMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/uuid"
            }
        },
        "PutIntegrationResponse": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "Uri": {
                    "$ref": "#/$defs/string1To255"
                },
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "ObjectTypeNames": {
                    "$ref": "#/$defs/ObjectTypeNames"
                },
                "WorkflowId": {
                    "$ref": "#/$defs/string1To255"
                },
                "IsUnstructured": {
                    "$ref": "#/$defs/optionalBoolean"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "PutIntegrationRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "Uri": {
                    "$ref": "#/$defs/string1To255"
                },
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "FlowDefinition": {
                    "$ref": "#/$defs/FlowDefinition"
                },
                "ObjectTypeNames": {
                    "$ref": "#/$defs/ObjectTypeNames"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "PutProfileObjectResponse": {
            "type": "object",
            "properties": {
                "ProfileObjectUniqueKey": {
                    "$ref": "#/$defs/string1To255"
                }
            }
        },
        "PutProfileObjectRequest": {
            "type": "object",
            "properties": {
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "Object": {
                    "$ref": "#/$defs/stringifiedJson"
                },
                "DomainName": {
                    "$ref": "#/$defs/name"
                }
            }
        },
        "PutProfileObjectTypeResponse": {
            "type": "object",
            "properties": {
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "Description": {
                    "$ref": "#/$defs/sensitiveText"
                },
                "TemplateId": {
                    "$ref": "#/$defs/name"
                },
                "ExpirationDays": {
                    "$ref": "#/$defs/expirationDaysInteger"
                },
                "EncryptionKey": {
                    "$ref": "#/$defs/encryptionKey"
                },
                "AllowProfileCreation": {
                    "$ref": "#/$defs/boolean"
                },
                "SourceLastUpdatedTimestampFormat": {
                    "$ref": "#/$defs/string1To255"
                },
                "MaxProfileObjectCount": {
                    "$ref": "#/$defs/minSize1"
                },
                "MaxAvailableProfileObjectCount": {
                    "$ref": "#/$defs/minSize0"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldMap"
                },
                "Keys": {
                    "$ref": "#/$defs/KeyMap"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "PutProfileObjectTypeRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "ObjectTypeName": {
                    "$ref": "#/$defs/typeName"
                },
                "Description": {
                    "$ref": "#/$defs/sensitiveText"
                },
                "TemplateId": {
                    "$ref": "#/$defs/name"
                },
                "ExpirationDays": {
                    "$ref": "#/$defs/expirationDaysInteger"
                },
                "EncryptionKey": {
                    "$ref": "#/$defs/encryptionKey"
                },
                "AllowProfileCreation": {
                    "$ref": "#/$defs/boolean"
                },
                "SourceLastUpdatedTimestampFormat": {
                    "$ref": "#/$defs/string1To255"
                },
                "MaxProfileObjectCount": {
                    "$ref": "#/$defs/minSize1"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldMap"
                },
                "Keys": {
                    "$ref": "#/$defs/KeyMap"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "SearchProfilesResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/ProfileList"
                },
                "NextToken": {
                    "$ref": "#/$defs/token"
                }
            }
        },
        "ProfileList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Profile"
            }
        },
        "Profile": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "$ref": "#/$defs/uuid"
                },
                "AccountNumber": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "AdditionalInformation": {
                    "$ref": "#/$defs/sensitiveString1To1000"
                },
                "PartyType": {
                    "$ref": "#/$defs/PartyType"
                },
                "BusinessName": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "FirstName": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "MiddleName": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "LastName": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "BirthDate": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "Gender": {
                    "$ref": "#/$defs/Gender"
                },
                "PhoneNumber": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "MobilePhoneNumber": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "HomePhoneNumber": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "BusinessPhoneNumber": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "PersonalEmailAddress": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "BusinessEmailAddress": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "Address": {
                    "$ref": "#/$defs/Address"
                },
                "ShippingAddress": {
                    "$ref": "#/$defs/Address"
                },
                "MailingAddress": {
                    "$ref": "#/$defs/Address"
                },
                "BillingAddress": {
                    "$ref": "#/$defs/Address"
                },
                "Attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "FoundByItems": {
                    "$ref": "#/$defs/foundByList"
                },
                "PartyTypeString": {
                    "$ref": "#/$defs/sensitiveString1To255"
                },
                "GenderString": {
                    "$ref": "#/$defs/sensitiveString1To255"
                }
            }
        },
        "foundByList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FoundByKeyValue"
            }
        },
        "FoundByKeyValue": {
            "type": "object",
            "properties": {
                "KeyName": {
                    "$ref": "#/$defs/name"
                },
                "Values": {
                    "$ref": "#/$defs/requestValueList"
                }
            }
        },
        "SearchProfilesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/maxSize100"
                },
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "KeyName": {
                    "$ref": "#/$defs/name"
                },
                "Values": {
                    "$ref": "#/$defs/requestValueList"
                },
                "AdditionalSearchKeys": {
                    "$ref": "#/$defs/additionalSearchKeysList"
                },
                "LogicalOperator": {
                    "$ref": "#/$defs/logicalOperator"
                }
            }
        },
        "additionalSearchKeysList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AdditionalSearchKey"
            }
        },
        "AdditionalSearchKey": {
            "type": "object",
            "properties": {
                "KeyName": {
                    "$ref": "#/$defs/name"
                },
                "Values": {
                    "$ref": "#/$defs/requestValueList"
                }
            }
        },
        "logicalOperator": {
            "enum": [
                "AND",
                "OR"
            ]
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/TagArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/TagArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UpdateCalculatedAttributeDefinitionResponse": {
            "type": "object",
            "properties": {
                "CalculatedAttributeName": {
                    "$ref": "#/$defs/typeName"
                },
                "DisplayName": {
                    "$ref": "#/$defs/displayName"
                },
                "Description": {
                    "$ref": "#/$defs/sensitiveText"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Statistic": {
                    "$ref": "#/$defs/Statistic"
                },
                "Conditions": {
                    "$ref": "#/$defs/Conditions"
                },
                "AttributeDetails": {
                    "$ref": "#/$defs/AttributeDetails"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UpdateCalculatedAttributeDefinitionRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "CalculatedAttributeName": {
                    "$ref": "#/$defs/typeName"
                },
                "DisplayName": {
                    "$ref": "#/$defs/displayName"
                },
                "Description": {
                    "$ref": "#/$defs/sensitiveText"
                },
                "Conditions": {
                    "$ref": "#/$defs/Conditions"
                }
            }
        },
        "UpdateDomainResponse": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "DefaultExpirationDays": {
                    "$ref": "#/$defs/expirationDaysInteger"
                },
                "DefaultEncryptionKey": {
                    "$ref": "#/$defs/encryptionKey"
                },
                "DeadLetterQueueUrl": {
                    "$ref": "#/$defs/sqsQueueUrl"
                },
                "Matching": {
                    "$ref": "#/$defs/MatchingResponse"
                },
                "RuleBasedMatching": {
                    "$ref": "#/$defs/RuleBasedMatchingResponse"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UpdateDomainRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "DefaultExpirationDays": {
                    "$ref": "#/$defs/expirationDaysInteger"
                },
                "DefaultEncryptionKey": {
                    "$ref": "#/$defs/encryptionKey"
                },
                "DeadLetterQueueUrl": {
                    "$ref": "#/$defs/sqsQueueUrl"
                },
                "Matching": {
                    "$ref": "#/$defs/MatchingRequest"
                },
                "RuleBasedMatching": {
                    "$ref": "#/$defs/RuleBasedMatchingRequest"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UpdateProfileResponse": {
            "type": "object",
            "properties": {
                "ProfileId": {
                    "$ref": "#/$defs/uuid"
                }
            }
        },
        "UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "DomainName": {
                    "$ref": "#/$defs/name"
                },
                "ProfileId": {
                    "$ref": "#/$defs/uuid"
                },
                "AdditionalInformation": {
                    "$ref": "#/$defs/sensitiveString0To1000"
                },
                "AccountNumber": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "PartyType": {
                    "$ref": "#/$defs/PartyType"
                },
                "BusinessName": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "FirstName": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "MiddleName": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "LastName": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "BirthDate": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "Gender": {
                    "$ref": "#/$defs/Gender"
                },
                "PhoneNumber": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "MobilePhoneNumber": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "HomePhoneNumber": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "BusinessPhoneNumber": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "PersonalEmailAddress": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "BusinessEmailAddress": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "Address": {
                    "$ref": "#/$defs/UpdateAddress"
                },
                "ShippingAddress": {
                    "$ref": "#/$defs/UpdateAddress"
                },
                "MailingAddress": {
                    "$ref": "#/$defs/UpdateAddress"
                },
                "BillingAddress": {
                    "$ref": "#/$defs/UpdateAddress"
                },
                "Attributes": {
                    "$ref": "#/$defs/UpdateAttributes"
                },
                "PartyTypeString": {
                    "$ref": "#/$defs/sensitiveString0To255"
                },
                "GenderString": {
                    "$ref": "#/$defs/sensitiveString0To255"
                }
            }
        },
        "sensitiveString0To1000": {
            "type": "string"
        },
        "sensitiveString0To255": {
            "type": "string"
        },
        "UpdateAddress": {
            "type": "object",
            "properties": {
                "Address1": {
                    "$ref": "#/$defs/string0To255"
                },
                "Address2": {
                    "$ref": "#/$defs/string0To255"
                },
                "Address3": {
                    "$ref": "#/$defs/string0To255"
                },
                "Address4": {
                    "$ref": "#/$defs/string0To255"
                },
                "City": {
                    "$ref": "#/$defs/string0To255"
                },
                "County": {
                    "$ref": "#/$defs/string0To255"
                },
                "State": {
                    "$ref": "#/$defs/string0To255"
                },
                "Province": {
                    "$ref": "#/$defs/string0To255"
                },
                "Country": {
                    "$ref": "#/$defs/string0To255"
                },
                "PostalCode": {
                    "$ref": "#/$defs/string0To255"
                }
            }
        },
        "string0To255": {
            "type": "string"
        },
        "UpdateAttributes": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/string0To255"
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://profile-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://profile-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://profile.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://profile.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}