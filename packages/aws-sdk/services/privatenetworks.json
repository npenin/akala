{
    "name": "private-networks",
    "commands": [
        {
            "name": "AcknowledgeOrderReceipt",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/orders/acknowledge"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcknowledgeOrderReceiptResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AcknowledgeOrderReceiptRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "orderArn": {}
                    }
                }
            }
        },
        {
            "name": "ActivateDeviceIdentifier",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/device-identifiers/activate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ActivateDeviceIdentifierResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ActivateDeviceIdentifierRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "deviceIdentifierArn": {},
                        "clientToken": {}
                    }
                }
            }
        },
        {
            "name": "ActivateNetworkSite",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/network-sites/activate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ActivateNetworkSiteResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ActivateNetworkSiteRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "networkSiteArn": {},
                        "shippingAddress": {},
                        "clientToken": {},
                        "commitmentConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "ConfigureAccessPoint",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/network-resources/configure"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ConfigureAccessPointResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ConfigureAccessPointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "accessPointArn": {},
                        "position": {},
                        "cpiUsername": {},
                        "cpiUserId": {},
                        "cpiUserPassword": {},
                        "cpiSecretKey": {}
                    }
                }
            }
        },
        {
            "name": "CreateNetwork",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/networks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNetworkResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateNetworkRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "networkName": {},
                        "description": {},
                        "clientToken": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateNetworkSite",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/network-sites"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNetworkSiteResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateNetworkSiteRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "networkSiteName": {},
                        "description": {},
                        "networkArn": {},
                        "pendingPlan": {},
                        "clientToken": {},
                        "availabilityZone": {},
                        "availabilityZoneId": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "DeactivateDeviceIdentifier",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/device-identifiers/deactivate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeactivateDeviceIdentifierResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeactivateDeviceIdentifierRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "deviceIdentifierArn": {},
                        "clientToken": {}
                    }
                }
            }
        },
        {
            "name": "DeleteNetwork",
            "config": {
                "http": {
                    "inject": [
                        {
                            "networkArn": "route.networkArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/networks/{networkArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNetworkResponse"
                    },
                    "inject": [
                        "params.0.networkArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteNetworkRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "networkArn": {},
                        "clientToken": {}
                    }
                }
            }
        },
        {
            "name": "DeleteNetworkSite",
            "config": {
                "http": {
                    "inject": [
                        {
                            "networkSiteArn": "route.networkSiteArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/network-sites/{networkSiteArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNetworkSiteResponse"
                    },
                    "inject": [
                        "params.0.networkSiteArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteNetworkSiteRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "networkSiteArn": {},
                        "clientToken": {}
                    }
                }
            }
        },
        {
            "name": "GetDeviceIdentifier",
            "config": {
                "http": {
                    "inject": [
                        {
                            "deviceIdentifierArn": "route.deviceIdentifierArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/device-identifiers/{deviceIdentifierArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDeviceIdentifierResponse"
                    },
                    "inject": [
                        "params.0.deviceIdentifierArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetDeviceIdentifierRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "deviceIdentifierArn": {}
                    }
                }
            }
        },
        {
            "name": "GetNetwork",
            "config": {
                "http": {
                    "inject": [
                        {
                            "networkArn": "route.networkArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/networks/{networkArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetNetworkResponse"
                    },
                    "inject": [
                        "params.0.networkArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetNetworkRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "networkArn": {}
                    }
                }
            }
        },
        {
            "name": "GetNetworkResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "networkResourceArn": "route.networkResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/network-resources/{networkResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetNetworkResourceResponse"
                    },
                    "inject": [
                        "params.0.networkResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetNetworkResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "networkResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "GetNetworkSite",
            "config": {
                "http": {
                    "inject": [
                        {
                            "networkSiteArn": "route.networkSiteArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/network-sites/{networkSiteArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetNetworkSiteResponse"
                    },
                    "inject": [
                        "params.0.networkSiteArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetNetworkSiteRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "networkSiteArn": {}
                    }
                }
            }
        },
        {
            "name": "GetOrder",
            "config": {
                "http": {
                    "inject": [
                        {
                            "orderArn": "route.orderArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/orders/{orderArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOrderResponse"
                    },
                    "inject": [
                        "params.0.orderArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetOrderRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "orderArn": {}
                    }
                }
            }
        },
        {
            "name": "ListDeviceIdentifiers",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/device-identifiers/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDeviceIdentifiersResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListDeviceIdentifiersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "filters": {},
                        "networkArn": {},
                        "startToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListNetworkResources",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/network-resources"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNetworkResourcesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListNetworkResourcesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "filters": {},
                        "networkArn": {},
                        "startToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListNetworks",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/networks/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNetworksResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListNetworksRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "filters": {},
                        "startToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListNetworkSites",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/network-sites/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNetworkSitesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListNetworkSitesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "filters": {},
                        "networkArn": {},
                        "startToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListOrders",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/orders/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOrdersResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListOrdersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "networkArn": {},
                        "startToken": {},
                        "maxResults": {},
                        "filters": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0.resourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {}
                    }
                }
            }
        },
        {
            "name": "Ping",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/ping"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PingResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "StartNetworkResourceUpdate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/network-resources/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartNetworkResourceUpdateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartNetworkResourceUpdateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "networkResourceArn": {},
                        "updateType": {},
                        "shippingAddress": {},
                        "returnReason": {},
                        "commitmentConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0.resourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0.resourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateNetworkSite",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/v1/network-sites/site"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateNetworkSiteResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateNetworkSiteRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "networkSiteArn": {},
                        "clientToken": {},
                        "description": {}
                    }
                }
            }
        },
        {
            "name": "UpdateNetworkSitePlan",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/v1/network-sites/plan"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateNetworkSiteResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateNetworkSitePlanRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "networkSiteArn": {},
                        "pendingPlan": {},
                        "clientToken": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AcknowledgeOrderReceiptRequest": {
            "type": "object",
            "properties": {
                "orderArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "Arn": {
            "type": "string"
        },
        "AcknowledgeOrderReceiptResponse": {
            "type": "object",
            "properties": {
                "order": {
                    "$ref": "#/$defs/Order"
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "orderArn": {
                    "$ref": "#/$defs/Arn"
                },
                "shippingAddress": {
                    "$ref": "#/$defs/Address"
                },
                "networkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "networkSiteArn": {
                    "$ref": "#/$defs/Arn"
                },
                "trackingInformation": {
                    "$ref": "#/$defs/TrackingInformationList"
                },
                "acknowledgmentStatus": {
                    "$ref": "#/$defs/AcknowledgmentStatus"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "orderedResources": {
                    "$ref": "#/$defs/OrderedResourceDefinitions"
                }
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "city": {
                    "$ref": "#/$defs/AddressContent"
                },
                "company": {
                    "$ref": "#/$defs/AddressContent"
                },
                "country": {
                    "$ref": "#/$defs/AddressContent"
                },
                "name": {
                    "$ref": "#/$defs/AddressContent"
                },
                "phoneNumber": {
                    "$ref": "#/$defs/AddressContent"
                },
                "postalCode": {
                    "$ref": "#/$defs/AddressContent"
                },
                "stateOrProvince": {
                    "$ref": "#/$defs/AddressContent"
                },
                "street1": {
                    "$ref": "#/$defs/AddressContent"
                },
                "street2": {
                    "$ref": "#/$defs/AddressContent"
                },
                "street3": {
                    "$ref": "#/$defs/AddressContent"
                },
                "emailAddress": {
                    "$ref": "#/$defs/AddressContent"
                }
            }
        },
        "AddressContent": {
            "type": "string"
        },
        "TrackingInformationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrackingInformation"
            }
        },
        "TrackingInformation": {
            "type": "object",
            "properties": {
                "trackingNumber": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "AcknowledgmentStatus": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "OrderedResourceDefinitions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrderedResourceDefinition"
            }
        },
        "OrderedResourceDefinition": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/NetworkResourceDefinitionType"
                },
                "count": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "commitmentConfiguration": {
                    "$ref": "#/$defs/CommitmentConfiguration"
                }
            }
        },
        "NetworkResourceDefinitionType": {
            "type": "string"
        },
        "CommitmentConfiguration": {
            "type": "object",
            "properties": {
                "commitmentLength": {
                    "$ref": "#/$defs/CommitmentLength"
                },
                "automaticRenewal": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "CommitmentLength": {
            "type": "string"
        },
        "ActivateDeviceIdentifierRequest": {
            "type": "object",
            "properties": {
                "deviceIdentifierArn": {
                    "$ref": "#/$defs/Arn"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "ActivateDeviceIdentifierResponse": {
            "type": "object",
            "properties": {
                "deviceIdentifier": {
                    "$ref": "#/$defs/DeviceIdentifier"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "DeviceIdentifier": {
            "type": "object",
            "properties": {
                "deviceIdentifierArn": {
                    "$ref": "#/$defs/Arn"
                },
                "trafficGroupArn": {
                    "$ref": "#/$defs/Arn"
                },
                "networkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "imsi": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "iccid": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "vendor": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "status": {
                    "$ref": "#/$defs/DeviceIdentifierStatus"
                },
                "orderArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "SensitiveString": {
            "type": "string"
        },
        "DeviceIdentifierStatus": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "ActivateNetworkSiteRequest": {
            "type": "object",
            "properties": {
                "networkSiteArn": {
                    "$ref": "#/$defs/Arn"
                },
                "shippingAddress": {
                    "$ref": "#/$defs/Address"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "commitmentConfiguration": {
                    "$ref": "#/$defs/CommitmentConfiguration"
                }
            }
        },
        "ActivateNetworkSiteResponse": {
            "type": "object",
            "properties": {
                "networkSite": {
                    "$ref": "#/$defs/NetworkSite"
                }
            }
        },
        "NetworkSite": {
            "type": "object",
            "properties": {
                "networkSiteArn": {
                    "$ref": "#/$defs/Arn"
                },
                "networkSiteName": {
                    "$ref": "#/$defs/Name"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "status": {
                    "$ref": "#/$defs/NetworkSiteStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "networkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "pendingPlan": {
                    "$ref": "#/$defs/SitePlan"
                },
                "currentPlan": {
                    "$ref": "#/$defs/SitePlan"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "availabilityZone": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "Name": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "NetworkSiteStatus": {
            "type": "string"
        },
        "SitePlan": {
            "type": "object",
            "properties": {
                "resourceDefinitions": {
                    "$ref": "#/$defs/NetworkResourceDefinitions"
                },
                "options": {
                    "$ref": "#/$defs/Options"
                }
            }
        },
        "NetworkResourceDefinitions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkResourceDefinition"
            }
        },
        "NetworkResourceDefinition": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/NetworkResourceDefinitionType"
                },
                "options": {
                    "$ref": "#/$defs/Options"
                },
                "count": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "Options": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameValuePair"
            }
        },
        "NameValuePair": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "value": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ConfigureAccessPointRequest": {
            "type": "object",
            "properties": {
                "accessPointArn": {
                    "$ref": "#/$defs/Arn"
                },
                "position": {
                    "$ref": "#/$defs/Position"
                },
                "cpiUsername": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "cpiUserId": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "cpiUserPassword": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "cpiSecretKey": {
                    "$ref": "#/$defs/SensitiveString"
                }
            }
        },
        "Position": {
            "type": "object",
            "properties": {
                "latitude": {
                    "$ref": "#/$defs/smithy.api#Double"
                },
                "longitude": {
                    "$ref": "#/$defs/smithy.api#Double"
                },
                "elevation": {
                    "$ref": "#/$defs/smithy.api#Double"
                },
                "elevationUnit": {
                    "$ref": "#/$defs/ElevationUnit"
                },
                "elevationReference": {
                    "$ref": "#/$defs/ElevationReference"
                }
            }
        },
        "ElevationUnit": {
            "type": "string"
        },
        "ElevationReference": {
            "type": "string"
        },
        "ConfigureAccessPointResponse": {
            "type": "object",
            "properties": {
                "accessPoint": {
                    "$ref": "#/$defs/NetworkResource"
                }
            }
        },
        "NetworkResource": {
            "type": "object",
            "properties": {
                "networkResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "type": {
                    "$ref": "#/$defs/NetworkResourceType"
                },
                "status": {
                    "$ref": "#/$defs/NetworkResourceStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "vendor": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "model": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "serialNumber": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "health": {
                    "$ref": "#/$defs/HealthStatus"
                },
                "networkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "networkSiteArn": {
                    "$ref": "#/$defs/Arn"
                },
                "orderArn": {
                    "$ref": "#/$defs/Arn"
                },
                "attributes": {
                    "$ref": "#/$defs/NameValuePairs"
                },
                "position": {
                    "$ref": "#/$defs/Position"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "returnInformation": {
                    "$ref": "#/$defs/ReturnInformation"
                },
                "commitmentInformation": {
                    "$ref": "#/$defs/CommitmentInformation"
                }
            }
        },
        "NetworkResourceType": {
            "type": "string"
        },
        "NetworkResourceStatus": {
            "type": "string"
        },
        "HealthStatus": {
            "type": "string"
        },
        "NameValuePairs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameValuePair"
            }
        },
        "ReturnInformation": {
            "type": "object",
            "properties": {
                "shippingAddress": {
                    "$ref": "#/$defs/Address"
                },
                "returnReason": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "replacementOrderArn": {
                    "$ref": "#/$defs/Arn"
                },
                "shippingLabel": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "CommitmentInformation": {
            "type": "object",
            "properties": {
                "commitmentConfiguration": {
                    "$ref": "#/$defs/CommitmentConfiguration"
                },
                "startAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "expiresOn": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "CreateNetworkRequest": {
            "type": "object",
            "properties": {
                "networkName": {
                    "$ref": "#/$defs/Name"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CreateNetworkResponse": {
            "type": "object",
            "properties": {
                "network": {
                    "$ref": "#/$defs/Network"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "Network": {
            "type": "object",
            "properties": {
                "networkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "networkName": {
                    "$ref": "#/$defs/Name"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "status": {
                    "$ref": "#/$defs/NetworkStatus"
                },
                "statusReason": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "NetworkStatus": {
            "type": "string"
        },
        "CreateNetworkSiteRequest": {
            "type": "object",
            "properties": {
                "networkSiteName": {
                    "$ref": "#/$defs/Name"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "networkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "pendingPlan": {
                    "$ref": "#/$defs/SitePlan"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "availabilityZone": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "availabilityZoneId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CreateNetworkSiteResponse": {
            "type": "object",
            "properties": {
                "networkSite": {
                    "$ref": "#/$defs/NetworkSite"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "DeactivateDeviceIdentifierRequest": {
            "type": "object",
            "properties": {
                "deviceIdentifierArn": {
                    "$ref": "#/$defs/Arn"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DeactivateDeviceIdentifierResponse": {
            "type": "object",
            "properties": {
                "deviceIdentifier": {
                    "$ref": "#/$defs/DeviceIdentifier"
                }
            }
        },
        "DeleteNetworkRequest": {
            "type": "object",
            "properties": {
                "networkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DeleteNetworkResponse": {
            "type": "object",
            "properties": {
                "network": {
                    "$ref": "#/$defs/Network"
                }
            }
        },
        "DeleteNetworkSiteRequest": {
            "type": "object",
            "properties": {
                "networkSiteArn": {
                    "$ref": "#/$defs/Arn"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DeleteNetworkSiteResponse": {
            "type": "object",
            "properties": {
                "networkSite": {
                    "$ref": "#/$defs/NetworkSite"
                }
            }
        },
        "GetDeviceIdentifierRequest": {
            "type": "object",
            "properties": {
                "deviceIdentifierArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "GetDeviceIdentifierResponse": {
            "type": "object",
            "properties": {
                "deviceIdentifier": {
                    "$ref": "#/$defs/DeviceIdentifier"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetNetworkRequest": {
            "type": "object",
            "properties": {
                "networkArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "GetNetworkResponse": {
            "type": "object",
            "properties": {
                "network": {
                    "$ref": "#/$defs/Network"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetNetworkResourceRequest": {
            "type": "object",
            "properties": {
                "networkResourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "GetNetworkResourceResponse": {
            "type": "object",
            "properties": {
                "networkResource": {
                    "$ref": "#/$defs/NetworkResource"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetNetworkSiteRequest": {
            "type": "object",
            "properties": {
                "networkSiteArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "GetNetworkSiteResponse": {
            "type": "object",
            "properties": {
                "networkSite": {
                    "$ref": "#/$defs/NetworkSite"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetOrderRequest": {
            "type": "object",
            "properties": {
                "orderArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "GetOrderResponse": {
            "type": "object",
            "properties": {
                "order": {
                    "$ref": "#/$defs/Order"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListDeviceIdentifiersRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/$defs/DeviceIdentifierFilters"
                },
                "networkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "startToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "DeviceIdentifierFilters": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DeviceIdentifierFilterValues"
            }
        },
        "DeviceIdentifierFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "PaginationToken": {
            "type": "string"
        },
        "ListDeviceIdentifiersResponse": {
            "type": "object",
            "properties": {
                "deviceIdentifiers": {
                    "$ref": "#/$defs/DeviceIdentifierList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "DeviceIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeviceIdentifier"
            }
        },
        "ListNetworkResourcesRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/$defs/NetworkResourceFilters"
                },
                "networkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "startToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "NetworkResourceFilters": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/NetworkResourceFilterValues"
            }
        },
        "NetworkResourceFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "ListNetworkResourcesResponse": {
            "type": "object",
            "properties": {
                "networkResources": {
                    "$ref": "#/$defs/NetworkResourceList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "NetworkResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkResource"
            }
        },
        "ListNetworksRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/$defs/NetworkFilters"
                },
                "startToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "NetworkFilters": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/NetworkFilterValues"
            }
        },
        "NetworkFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "ListNetworksResponse": {
            "type": "object",
            "properties": {
                "networks": {
                    "$ref": "#/$defs/NetworkList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "NetworkList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Network"
            }
        },
        "ListNetworkSitesRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/$defs/NetworkSiteFilters"
                },
                "networkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "startToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "NetworkSiteFilters": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/NetworkSiteFilterValues"
            }
        },
        "NetworkSiteFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "ListNetworkSitesResponse": {
            "type": "object",
            "properties": {
                "networkSites": {
                    "$ref": "#/$defs/NetworkSiteList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "NetworkSiteList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkSite"
            }
        },
        "ListOrdersRequest": {
            "type": "object",
            "properties": {
                "networkArn": {
                    "$ref": "#/$defs/Arn"
                },
                "startToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "filters": {
                    "$ref": "#/$defs/OrderFilters"
                }
            }
        },
        "OrderFilters": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/OrderFilterValues"
            }
        },
        "OrderFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "ListOrdersResponse": {
            "type": "object",
            "properties": {
                "orders": {
                    "$ref": "#/$defs/OrderList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "OrderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Order"
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "PingResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "StartNetworkResourceUpdateRequest": {
            "type": "object",
            "properties": {
                "networkResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "updateType": {
                    "$ref": "#/$defs/UpdateType"
                },
                "shippingAddress": {
                    "$ref": "#/$defs/Address"
                },
                "returnReason": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "commitmentConfiguration": {
                    "$ref": "#/$defs/CommitmentConfiguration"
                }
            }
        },
        "UpdateType": {
            "type": "string"
        },
        "StartNetworkResourceUpdateResponse": {
            "type": "object",
            "properties": {
                "networkResource": {
                    "$ref": "#/$defs/NetworkResource"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateNetworkSiteRequest": {
            "type": "object",
            "properties": {
                "networkSiteArn": {
                    "$ref": "#/$defs/Arn"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "UpdateNetworkSiteResponse": {
            "type": "object",
            "properties": {
                "networkSite": {
                    "$ref": "#/$defs/NetworkSite"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UpdateNetworkSitePlanRequest": {
            "type": "object",
            "properties": {
                "networkSiteArn": {
                    "$ref": "#/$defs/Arn"
                },
                "pendingPlan": {
                    "$ref": "#/$defs/SitePlan"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://private-networks-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://private-networks-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://private-networks.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://private-networks.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
