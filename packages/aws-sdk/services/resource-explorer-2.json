{
    "name": "resource-explorer-2",
    "commands": [
        {
            "name": "BatchGetView",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/BatchGetView"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetViewOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetViewInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ViewArns": {}
                    }
                }
            }
        },
        {
            "name": "DisassociateDefaultView",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DisassociateDefaultView"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetAccountLevelServiceConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetAccountLevelServiceConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAccountLevelServiceConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetDefaultView",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetDefaultView"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDefaultViewOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetIndex",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetIndex"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIndexOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetManagedView",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetManagedView"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetManagedViewOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetManagedViewInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ManagedViewArn": {}
                    }
                }
            }
        },
        {
            "name": "ListIndexesForMembers",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListIndexesForMembers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListIndexesForMembersOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListIndexesForMembersInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AccountIdList": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListManagedViews",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListManagedViews"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListManagedViewsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListManagedViewsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {},
                        "ServicePrincipal": {}
                    }
                }
            }
        },
        {
            "name": "ListResources",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListResources"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResourcesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResourcesInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Filters": {},
                        "MaxResults": {},
                        "ViewArn": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListSupportedResourceTypes",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListSupportedResourceTypes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSupportedResourceTypesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSupportedResourceTypesInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceOutput"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {}
                    }
                }
            }
        },
        {
            "name": "Search",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/Search"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "QueryString": {},
                        "MaxResults": {},
                        "ViewArn": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceOutput"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceOutput"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tagKeys": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchGetViewInput": {
            "type": "object",
            "properties": {
                "ViewArns": {
                    "$ref": "#/$defs/ViewArnList"
                }
            }
        },
        "ViewArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "BatchGetViewOutput": {
            "type": "object",
            "properties": {
                "Views": {
                    "$ref": "#/$defs/ViewList"
                },
                "Errors": {
                    "$ref": "#/$defs/BatchGetViewErrors"
                }
            }
        },
        "ViewList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/View"
            }
        },
        "View": {
            "type": "object",
            "properties": {
                "ViewArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Owner": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "Scope": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "IncludedProperties": {
                    "$ref": "#/$defs/IncludedPropertyList"
                },
                "Filters": {
                    "$ref": "#/$defs/SearchFilter"
                }
            }
        },
        "IncludedPropertyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IncludedProperty"
            }
        },
        "IncludedProperty": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "SearchFilter": {
            "type": "object",
            "properties": {
                "FilterString": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "BatchGetViewErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetViewError"
            }
        },
        "BatchGetViewError": {
            "type": "object",
            "properties": {
                "ViewArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "GetAccountLevelServiceConfigurationOutput": {
            "type": "object",
            "properties": {
                "OrgConfiguration": {
                    "$ref": "#/$defs/OrgConfiguration"
                }
            }
        },
        "OrgConfiguration": {
            "type": "object",
            "properties": {
                "AWSServiceAccessStatus": {
                    "$ref": "#/$defs/AWSServiceAccessStatus"
                },
                "ServiceLinkedRole": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "AWSServiceAccessStatus": {
            "type": "string"
        },
        "GetDefaultViewOutput": {
            "type": "object",
            "properties": {
                "ViewArn": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "GetIndexOutput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Type": {
                    "$ref": "#/$defs/IndexType"
                },
                "State": {
                    "$ref": "#/$defs/IndexState"
                },
                "ReplicatingFrom": {
                    "$ref": "#/$defs/RegionList"
                },
                "ReplicatingTo": {
                    "$ref": "#/$defs/RegionList"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "IndexType": {
            "type": "string"
        },
        "IndexState": {
            "type": "string"
        },
        "RegionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "GetManagedViewInput": {
            "type": "object",
            "properties": {
                "ManagedViewArn": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "GetManagedViewOutput": {
            "type": "object",
            "properties": {
                "ManagedView": {
                    "$ref": "#/$defs/ManagedView"
                }
            }
        },
        "ManagedView": {
            "type": "object",
            "properties": {
                "ManagedViewArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ManagedViewName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "TrustedService": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "Owner": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Scope": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "IncludedProperties": {
                    "$ref": "#/$defs/IncludedPropertyList"
                },
                "Filters": {
                    "$ref": "#/$defs/SearchFilter"
                },
                "ResourcePolicy": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Version": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListIndexesForMembersInput": {
            "type": "object",
            "properties": {
                "AccountIdList": {
                    "$ref": "#/$defs/AccountIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "AccountIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountId"
            }
        },
        "AccountId": {
            "type": "string"
        },
        "ListIndexesForMembersOutput": {
            "type": "object",
            "properties": {
                "Indexes": {
                    "$ref": "#/$defs/MemberIndexList"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "MemberIndexList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MemberIndex"
            }
        },
        "MemberIndex": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Region": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Arn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Type": {
                    "$ref": "#/$defs/IndexType"
                }
            }
        },
        "ListManagedViewsInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ServicePrincipal": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListManagedViewsOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ManagedViews": {
                    "$ref": "#/$defs/ManagedViewArnList"
                }
            }
        },
        "ManagedViewArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "ListResourcesInput": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/SearchFilter"
                },
                "MaxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "ViewArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListResourcesOutput": {
            "type": "object",
            "properties": {
                "Resources": {
                    "$ref": "#/$defs/ResourceList"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ViewArn": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Resource"
            }
        },
        "Resource": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "OwningAccountId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Region": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Service": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "LastReportedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "Properties": {
                    "$ref": "#/$defs/ResourcePropertyList"
                }
            }
        },
        "ResourcePropertyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceProperty"
            }
        },
        "ResourceProperty": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "LastReportedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "Data": {
                    "$ref": "#/$defs/smithy.api#Document"
                }
            }
        },
        "ListSupportedResourceTypesInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "ListSupportedResourceTypesOutput": {
            "type": "object",
            "properties": {
                "ResourceTypes": {
                    "$ref": "#/$defs/ResourceTypeList"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ResourceTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SupportedResourceType"
            }
        },
        "SupportedResourceType": {
            "type": "object",
            "properties": {
                "Service": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListTagsForResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListTagsForResourceOutput": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "SearchInput": {
            "type": "object",
            "properties": {
                "QueryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "ViewArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "QueryString": {
            "type": "string"
        },
        "SearchOutput": {
            "type": "object",
            "properties": {
                "Resources": {
                    "$ref": "#/$defs/ResourceList"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ViewArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Count": {
                    "$ref": "#/$defs/ResourceCount"
                }
            }
        },
        "ResourceCount": {
            "type": "object",
            "properties": {
                "TotalResources": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "Complete": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "TagResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "tagKeys": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "UntagResourceOutput": {
            "type": "object",
            "properties": {}
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://resource-explorer-2-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://resource-explorer-2-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://resource-explorer-2.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://resource-explorer-2.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}