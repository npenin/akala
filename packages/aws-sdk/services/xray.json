{
    "name": "xray",
    "commands": [
        {
            "name": "BatchGetTraces",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/Traces"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetTracesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/BatchGetTracesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TraceIds": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "CancelTraceRetrieval",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CancelTraceRetrieval"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelTraceRetrievalResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CancelTraceRetrievalRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "RetrievalToken": {}
                    }
                }
            }
        },
        {
            "name": "CreateGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CreateGroup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateGroupResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "GroupName": {},
                        "FilterExpression": {},
                        "InsightsConfiguration": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateSamplingRule",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CreateSamplingRule"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSamplingRuleResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSamplingRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SamplingRule": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "DeleteGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteGroup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteGroupResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "GroupName": {},
                        "GroupARN": {}
                    }
                }
            }
        },
        {
            "name": "DeleteResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteResourcePolicy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteResourcePolicyResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteResourcePolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PolicyName": {},
                        "PolicyRevisionId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSamplingRule",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteSamplingRule"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSamplingRuleResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteSamplingRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "RuleName": {},
                        "RuleARN": {}
                    }
                }
            }
        },
        {
            "name": "GetEncryptionConfig",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/EncryptionConfig"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEncryptionConfigResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetEncryptionConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetGroup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetGroupResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "GroupName": {},
                        "GroupARN": {}
                    }
                }
            }
        },
        {
            "name": "GetGroups",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/Groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetGroupsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetGroupsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetIndexingRules",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetIndexingRules"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIndexingRulesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetIndexingRulesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetInsight",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/Insight"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInsightResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetInsightRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "InsightId": {}
                    }
                }
            }
        },
        {
            "name": "GetInsightEvents",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/InsightEvents"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInsightEventsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetInsightEventsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "InsightId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetInsightImpactGraph",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/InsightImpactGraph"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInsightImpactGraphResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetInsightImpactGraphRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "InsightId": {},
                        "StartTime": {},
                        "EndTime": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetInsightSummaries",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/InsightSummaries"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInsightSummariesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetInsightSummariesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "States": {},
                        "GroupARN": {},
                        "GroupName": {},
                        "StartTime": {},
                        "EndTime": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetRetrievedTracesGraph",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetRetrievedTracesGraph"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRetrievedTracesGraphResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetRetrievedTracesGraphRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "RetrievalToken": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetSamplingRules",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetSamplingRules"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSamplingRulesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSamplingRulesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetSamplingStatisticSummaries",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/SamplingStatisticSummaries"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSamplingStatisticSummariesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSamplingStatisticSummariesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetSamplingTargets",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/SamplingTargets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSamplingTargetsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSamplingTargetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SamplingStatisticsDocuments": {}
                    }
                }
            }
        },
        {
            "name": "GetServiceGraph",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ServiceGraph"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetServiceGraphResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetServiceGraphRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StartTime": {},
                        "EndTime": {},
                        "GroupName": {},
                        "GroupARN": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetTimeSeriesServiceStatistics",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/TimeSeriesServiceStatistics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTimeSeriesServiceStatisticsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetTimeSeriesServiceStatisticsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StartTime": {},
                        "EndTime": {},
                        "GroupName": {},
                        "GroupARN": {},
                        "EntitySelectorExpression": {},
                        "Period": {},
                        "ForecastStatistics": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetTraceGraph",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/TraceGraph"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTraceGraphResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetTraceGraphRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TraceIds": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetTraceSegmentDestination",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetTraceSegmentDestination"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTraceSegmentDestinationResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetTraceSegmentDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetTraceSummaries",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/TraceSummaries"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTraceSummariesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetTraceSummariesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "StartTime": {},
                        "EndTime": {},
                        "TimeRangeType": {},
                        "Sampling": {},
                        "SamplingStrategy": {},
                        "FilterExpression": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListResourcePolicies",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListResourcePolicies"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResourcePoliciesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListResourcePoliciesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListRetrievedTraces",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListRetrievedTraces"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRetrievedTracesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListRetrievedTracesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "RetrievalToken": {},
                        "TraceFormat": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListTagsForResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceARN": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "PutEncryptionConfig",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/PutEncryptionConfig"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEncryptionConfigResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutEncryptionConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "KeyId": {},
                        "Type": {}
                    }
                }
            }
        },
        {
            "name": "PutResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/PutResourcePolicy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutResourcePolicyResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutResourcePolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PolicyName": {},
                        "PolicyDocument": {},
                        "PolicyRevisionId": {},
                        "BypassPolicyLockoutCheck": {}
                    }
                }
            }
        },
        {
            "name": "PutTelemetryRecords",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/TelemetryRecords"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutTelemetryRecordsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutTelemetryRecordsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TelemetryRecords": {},
                        "EC2InstanceId": {},
                        "Hostname": {},
                        "ResourceARN": {}
                    }
                }
            }
        },
        {
            "name": "PutTraceSegments",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/TraceSegments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutTraceSegmentsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutTraceSegmentsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TraceSegmentDocuments": {}
                    }
                }
            }
        },
        {
            "name": "StartTraceRetrieval",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/StartTraceRetrieval"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartTraceRetrievalResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartTraceRetrievalRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TraceIds": {},
                        "StartTime": {},
                        "EndTime": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/TagResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceARN": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UntagResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceARN": {},
                        "TagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateGroup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateGroupResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateGroupRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "GroupName": {},
                        "GroupARN": {},
                        "FilterExpression": {},
                        "InsightsConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "UpdateIndexingRule",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateIndexingRule"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateIndexingRuleResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateIndexingRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Rule": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSamplingRule",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateSamplingRule"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSamplingRuleResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateSamplingRuleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SamplingRuleUpdate": {}
                    }
                }
            }
        },
        {
            "name": "UpdateTraceSegmentDestination",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateTraceSegmentDestination"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTraceSegmentDestinationResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateTraceSegmentDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Destination": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchGetTracesRequest": {
            "type": "object",
            "properties": {
                "TraceIds": {
                    "$ref": "#/$defs/TraceIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TraceIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TraceId"
            }
        },
        "TraceId": {
            "type": "string"
        },
        "String": {
            "type": "string"
        },
        "BatchGetTracesResult": {
            "type": "object",
            "properties": {
                "Traces": {
                    "$ref": "#/$defs/TraceList"
                },
                "UnprocessedTraceIds": {
                    "$ref": "#/$defs/UnprocessedTraceIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TraceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Trace"
            }
        },
        "Trace": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/TraceId"
                },
                "Duration": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "LimitExceeded": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "Segments": {
                    "$ref": "#/$defs/SegmentList"
                }
            }
        },
        "NullableDouble": {
            "type": "number",
            "format": "double"
        },
        "NullableBoolean": {
            "type": "boolean"
        },
        "SegmentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Segment"
            }
        },
        "Segment": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/SegmentId"
                },
                "Document": {
                    "$ref": "#/$defs/SegmentDocument"
                }
            }
        },
        "SegmentId": {
            "type": "string"
        },
        "SegmentDocument": {
            "type": "string"
        },
        "UnprocessedTraceIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TraceId"
            }
        },
        "CancelTraceRetrievalRequest": {
            "type": "object",
            "properties": {
                "RetrievalToken": {
                    "$ref": "#/$defs/RetrievalToken"
                }
            }
        },
        "RetrievalToken": {
            "type": "string"
        },
        "CancelTraceRetrievalResult": {
            "type": "object",
            "properties": {}
        },
        "CreateGroupRequest": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "FilterExpression": {
                    "$ref": "#/$defs/FilterExpression"
                },
                "InsightsConfiguration": {
                    "$ref": "#/$defs/InsightsConfiguration"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "GroupName": {
            "type": "string"
        },
        "FilterExpression": {
            "type": "string"
        },
        "InsightsConfiguration": {
            "type": "object",
            "properties": {
                "InsightsEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "NotificationsEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateGroupResult": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/Group"
                }
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "GroupARN": {
                    "$ref": "#/$defs/String"
                },
                "FilterExpression": {
                    "$ref": "#/$defs/String"
                },
                "InsightsConfiguration": {
                    "$ref": "#/$defs/InsightsConfiguration"
                }
            }
        },
        "CreateSamplingRuleRequest": {
            "type": "object",
            "properties": {
                "SamplingRule": {
                    "$ref": "#/$defs/SamplingRule"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "SamplingRule": {
            "type": "object",
            "properties": {
                "RuleName": {
                    "$ref": "#/$defs/RuleName"
                },
                "RuleARN": {
                    "$ref": "#/$defs/String"
                },
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "Priority": {
                    "$ref": "#/$defs/Priority"
                },
                "FixedRate": {
                    "$ref": "#/$defs/FixedRate"
                },
                "ReservoirSize": {
                    "$ref": "#/$defs/ReservoirSize"
                },
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "Host": {
                    "$ref": "#/$defs/Host"
                },
                "HTTPMethod": {
                    "$ref": "#/$defs/HTTPMethod"
                },
                "URLPath": {
                    "$ref": "#/$defs/URLPath"
                },
                "Version": {
                    "$ref": "#/$defs/Version"
                },
                "Attributes": {
                    "$ref": "#/$defs/AttributeMap"
                }
            }
        },
        "RuleName": {
            "type": "string"
        },
        "ResourceARN": {
            "type": "string"
        },
        "Priority": {
            "type": "integer",
            "format": "int32"
        },
        "FixedRate": {
            "type": "number",
            "format": "double"
        },
        "ReservoirSize": {
            "type": "integer",
            "format": "int32"
        },
        "ServiceName": {
            "type": "string"
        },
        "ServiceType": {
            "type": "string"
        },
        "Host": {
            "type": "string"
        },
        "HTTPMethod": {
            "type": "string"
        },
        "URLPath": {
            "type": "string"
        },
        "Version": {
            "type": "integer",
            "format": "int32"
        },
        "AttributeMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "AttributeValue": {
            "type": "string"
        },
        "CreateSamplingRuleResult": {
            "type": "object",
            "properties": {
                "SamplingRuleRecord": {
                    "$ref": "#/$defs/SamplingRuleRecord"
                }
            }
        },
        "SamplingRuleRecord": {
            "type": "object",
            "properties": {
                "SamplingRule": {
                    "$ref": "#/$defs/SamplingRule"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "DeleteGroupRequest": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "GroupARN": {
                    "$ref": "#/$defs/GroupARN"
                }
            }
        },
        "GroupARN": {
            "type": "string"
        },
        "DeleteGroupResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "PolicyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "PolicyRevisionId": {
                    "$ref": "#/$defs/PolicyRevisionId"
                }
            }
        },
        "PolicyName": {
            "type": "string"
        },
        "PolicyRevisionId": {
            "type": "string"
        },
        "DeleteResourcePolicyResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteSamplingRuleRequest": {
            "type": "object",
            "properties": {
                "RuleName": {
                    "$ref": "#/$defs/String"
                },
                "RuleARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteSamplingRuleResult": {
            "type": "object",
            "properties": {
                "SamplingRuleRecord": {
                    "$ref": "#/$defs/SamplingRuleRecord"
                }
            }
        },
        "GetEncryptionConfigRequest": {
            "type": "object",
            "properties": {}
        },
        "GetEncryptionConfigResult": {
            "type": "object",
            "properties": {
                "EncryptionConfig": {
                    "$ref": "#/$defs/EncryptionConfig"
                }
            }
        },
        "EncryptionConfig": {
            "type": "object",
            "properties": {
                "KeyId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/EncryptionStatus"
                },
                "Type": {
                    "$ref": "#/$defs/EncryptionType"
                }
            }
        },
        "EncryptionStatus": {
            "enum": [
                "UPDATING",
                "ACTIVE"
            ]
        },
        "EncryptionType": {
            "enum": [
                "NONE",
                "KMS"
            ]
        },
        "GetGroupRequest": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "GroupARN": {
                    "$ref": "#/$defs/GroupARN"
                }
            }
        },
        "GetGroupResult": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/Group"
                }
            }
        },
        "GetGroupsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/GetGroupsNextToken"
                }
            }
        },
        "GetGroupsNextToken": {
            "type": "string"
        },
        "GetGroupsResult": {
            "type": "object",
            "properties": {
                "Groups": {
                    "$ref": "#/$defs/GroupSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GroupSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupSummary"
            }
        },
        "GroupSummary": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "GroupARN": {
                    "$ref": "#/$defs/String"
                },
                "FilterExpression": {
                    "$ref": "#/$defs/String"
                },
                "InsightsConfiguration": {
                    "$ref": "#/$defs/InsightsConfiguration"
                }
            }
        },
        "GetIndexingRulesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetIndexingRulesResult": {
            "type": "object",
            "properties": {
                "IndexingRules": {
                    "$ref": "#/$defs/IndexingRuleList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IndexingRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IndexingRule"
            }
        },
        "IndexingRule": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RuleName"
                },
                "ModifiedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Rule": {
                    "$ref": "#/$defs/IndexingRuleValue"
                }
            }
        },
        "IndexingRuleValue": {
            "type": "object",
            "properties": {
                "Probabilistic": {
                    "$ref": "#/$defs/ProbabilisticRuleValue"
                }
            }
        },
        "ProbabilisticRuleValue": {
            "type": "object",
            "properties": {
                "DesiredSamplingPercentage": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "ActualSamplingPercentage": {
                    "$ref": "#/$defs/NullableDouble"
                }
            }
        },
        "GetInsightRequest": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/InsightId"
                }
            }
        },
        "InsightId": {
            "type": "string"
        },
        "GetInsightResult": {
            "type": "object",
            "properties": {
                "Insight": {
                    "$ref": "#/$defs/Insight"
                }
            }
        },
        "Insight": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "GroupARN": {
                    "$ref": "#/$defs/GroupARN"
                },
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "RootCauseServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "Categories": {
                    "$ref": "#/$defs/InsightCategoryList"
                },
                "State": {
                    "$ref": "#/$defs/InsightState"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Summary": {
                    "$ref": "#/$defs/InsightSummaryText"
                },
                "ClientRequestImpactStatistics": {
                    "$ref": "#/$defs/RequestImpactStatistics"
                },
                "RootCauseServiceRequestImpactStatistics": {
                    "$ref": "#/$defs/RequestImpactStatistics"
                },
                "TopAnomalousServices": {
                    "$ref": "#/$defs/AnomalousServiceList"
                }
            }
        },
        "ServiceId": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Names": {
                    "$ref": "#/$defs/ServiceNames"
                },
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "InsightCategoryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InsightCategory"
            }
        },
        "InsightCategory": {
            "enum": [
                "FAULT"
            ]
        },
        "InsightState": {
            "enum": [
                "ACTIVE",
                "CLOSED"
            ]
        },
        "InsightSummaryText": {
            "type": "string"
        },
        "RequestImpactStatistics": {
            "type": "object",
            "properties": {
                "FaultCount": {
                    "$ref": "#/$defs/NullableLong"
                },
                "OkCount": {
                    "$ref": "#/$defs/NullableLong"
                },
                "TotalCount": {
                    "$ref": "#/$defs/NullableLong"
                }
            }
        },
        "NullableLong": {
            "type": "integer",
            "format": "int64"
        },
        "AnomalousServiceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnomalousService"
            }
        },
        "AnomalousService": {
            "type": "object",
            "properties": {
                "ServiceId": {
                    "$ref": "#/$defs/ServiceId"
                }
            }
        },
        "GetInsightEventsRequest": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/GetInsightEventsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetInsightEventsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "Token": {
            "type": "string"
        },
        "GetInsightEventsResult": {
            "type": "object",
            "properties": {
                "InsightEvents": {
                    "$ref": "#/$defs/InsightEventList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "InsightEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InsightEvent"
            }
        },
        "InsightEvent": {
            "type": "object",
            "properties": {
                "Summary": {
                    "$ref": "#/$defs/EventSummaryText"
                },
                "EventTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ClientRequestImpactStatistics": {
                    "$ref": "#/$defs/RequestImpactStatistics"
                },
                "RootCauseServiceRequestImpactStatistics": {
                    "$ref": "#/$defs/RequestImpactStatistics"
                },
                "TopAnomalousServices": {
                    "$ref": "#/$defs/AnomalousServiceList"
                }
            }
        },
        "EventSummaryText": {
            "type": "string"
        },
        "GetInsightImpactGraphRequest": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "GetInsightImpactGraphResult": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ServiceGraphStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ServiceGraphEndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Services": {
                    "$ref": "#/$defs/InsightImpactGraphServiceList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "InsightImpactGraphServiceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InsightImpactGraphService"
            }
        },
        "InsightImpactGraphService": {
            "type": "object",
            "properties": {
                "ReferenceId": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Names": {
                    "$ref": "#/$defs/ServiceNames"
                },
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "Edges": {
                    "$ref": "#/$defs/InsightImpactGraphEdgeList"
                }
            }
        },
        "NullableInteger": {
            "type": "integer",
            "format": "int32"
        },
        "InsightImpactGraphEdgeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InsightImpactGraphEdge"
            }
        },
        "InsightImpactGraphEdge": {
            "type": "object",
            "properties": {
                "ReferenceId": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "GetInsightSummariesRequest": {
            "type": "object",
            "properties": {
                "States": {
                    "$ref": "#/$defs/InsightStateList"
                },
                "GroupARN": {
                    "$ref": "#/$defs/GroupARN"
                },
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "MaxResults": {
                    "$ref": "#/$defs/GetInsightSummariesMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "InsightStateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InsightState"
            }
        },
        "GetInsightSummariesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetInsightSummariesResult": {
            "type": "object",
            "properties": {
                "InsightSummaries": {
                    "$ref": "#/$defs/InsightSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "InsightSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InsightSummary"
            }
        },
        "InsightSummary": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/InsightId"
                },
                "GroupARN": {
                    "$ref": "#/$defs/GroupARN"
                },
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "RootCauseServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "Categories": {
                    "$ref": "#/$defs/InsightCategoryList"
                },
                "State": {
                    "$ref": "#/$defs/InsightState"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Summary": {
                    "$ref": "#/$defs/InsightSummaryText"
                },
                "ClientRequestImpactStatistics": {
                    "$ref": "#/$defs/RequestImpactStatistics"
                },
                "RootCauseServiceRequestImpactStatistics": {
                    "$ref": "#/$defs/RequestImpactStatistics"
                },
                "TopAnomalousServices": {
                    "$ref": "#/$defs/AnomalousServiceList"
                },
                "LastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "GetRetrievedTracesGraphRequest": {
            "type": "object",
            "properties": {
                "RetrievalToken": {
                    "$ref": "#/$defs/RetrievalToken"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetRetrievedTracesGraphResult": {
            "type": "object",
            "properties": {
                "RetrievalStatus": {
                    "$ref": "#/$defs/RetrievalStatus"
                },
                "Services": {
                    "$ref": "#/$defs/RetrievedServicesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RetrievalStatus": {
            "enum": [
                "SCHEDULED",
                "RUNNING",
                "COMPLETE",
                "FAILED",
                "CANCELLED",
                "TIMEOUT"
            ]
        },
        "RetrievedServicesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RetrievedService"
            }
        },
        "RetrievedService": {
            "type": "object",
            "properties": {
                "Service": {
                    "$ref": "#/$defs/Service"
                },
                "Links": {
                    "$ref": "#/$defs/LinksList"
                }
            }
        },
        "Service": {
            "type": "object",
            "properties": {
                "ReferenceId": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Names": {
                    "$ref": "#/$defs/ServiceNames"
                },
                "Root": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Edges": {
                    "$ref": "#/$defs/EdgeList"
                },
                "SummaryStatistics": {
                    "$ref": "#/$defs/ServiceStatistics"
                },
                "DurationHistogram": {
                    "$ref": "#/$defs/Histogram"
                },
                "ResponseTimeHistogram": {
                    "$ref": "#/$defs/Histogram"
                }
            }
        },
        "EdgeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Edge"
            }
        },
        "Edge": {
            "type": "object",
            "properties": {
                "ReferenceId": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "SummaryStatistics": {
                    "$ref": "#/$defs/EdgeStatistics"
                },
                "ResponseTimeHistogram": {
                    "$ref": "#/$defs/Histogram"
                },
                "Aliases": {
                    "$ref": "#/$defs/AliasList"
                },
                "EdgeType": {
                    "$ref": "#/$defs/String"
                },
                "ReceivedEventAgeHistogram": {
                    "$ref": "#/$defs/Histogram"
                }
            }
        },
        "EdgeStatistics": {
            "type": "object",
            "properties": {
                "OkCount": {
                    "$ref": "#/$defs/NullableLong"
                },
                "ErrorStatistics": {
                    "$ref": "#/$defs/ErrorStatistics"
                },
                "FaultStatistics": {
                    "$ref": "#/$defs/FaultStatistics"
                },
                "TotalCount": {
                    "$ref": "#/$defs/NullableLong"
                },
                "TotalResponseTime": {
                    "$ref": "#/$defs/NullableDouble"
                }
            }
        },
        "ErrorStatistics": {
            "type": "object",
            "properties": {
                "ThrottleCount": {
                    "$ref": "#/$defs/NullableLong"
                },
                "OtherCount": {
                    "$ref": "#/$defs/NullableLong"
                },
                "TotalCount": {
                    "$ref": "#/$defs/NullableLong"
                }
            }
        },
        "FaultStatistics": {
            "type": "object",
            "properties": {
                "OtherCount": {
                    "$ref": "#/$defs/NullableLong"
                },
                "TotalCount": {
                    "$ref": "#/$defs/NullableLong"
                }
            }
        },
        "Histogram": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HistogramEntry"
            }
        },
        "HistogramEntry": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Double"
                },
                "Count": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "AliasList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Alias"
            }
        },
        "Alias": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Names": {
                    "$ref": "#/$defs/AliasNames"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AliasNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ServiceStatistics": {
            "type": "object",
            "properties": {
                "OkCount": {
                    "$ref": "#/$defs/NullableLong"
                },
                "ErrorStatistics": {
                    "$ref": "#/$defs/ErrorStatistics"
                },
                "FaultStatistics": {
                    "$ref": "#/$defs/FaultStatistics"
                },
                "TotalCount": {
                    "$ref": "#/$defs/NullableLong"
                },
                "TotalResponseTime": {
                    "$ref": "#/$defs/NullableDouble"
                }
            }
        },
        "LinksList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GraphLink"
            }
        },
        "GraphLink": {
            "type": "object",
            "properties": {
                "ReferenceType": {
                    "$ref": "#/$defs/String"
                },
                "SourceTraceId": {
                    "$ref": "#/$defs/String"
                },
                "DestinationTraceIds": {
                    "$ref": "#/$defs/TraceIdList"
                }
            }
        },
        "GetSamplingRulesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetSamplingRulesResult": {
            "type": "object",
            "properties": {
                "SamplingRuleRecords": {
                    "$ref": "#/$defs/SamplingRuleRecordList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SamplingRuleRecordList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SamplingRuleRecord"
            }
        },
        "GetSamplingStatisticSummariesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetSamplingStatisticSummariesResult": {
            "type": "object",
            "properties": {
                "SamplingStatisticSummaries": {
                    "$ref": "#/$defs/SamplingStatisticSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SamplingStatisticSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SamplingStatisticSummary"
            }
        },
        "SamplingStatisticSummary": {
            "type": "object",
            "properties": {
                "RuleName": {
                    "$ref": "#/$defs/String"
                },
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "RequestCount": {
                    "$ref": "#/$defs/Integer"
                },
                "BorrowCount": {
                    "$ref": "#/$defs/Integer"
                },
                "SampledCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GetSamplingTargetsRequest": {
            "type": "object",
            "properties": {
                "SamplingStatisticsDocuments": {
                    "$ref": "#/$defs/SamplingStatisticsDocumentList"
                }
            }
        },
        "SamplingStatisticsDocumentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SamplingStatisticsDocument"
            }
        },
        "SamplingStatisticsDocument": {
            "type": "object",
            "properties": {
                "RuleName": {
                    "$ref": "#/$defs/RuleName"
                },
                "ClientID": {
                    "$ref": "#/$defs/ClientID"
                },
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "RequestCount": {
                    "$ref": "#/$defs/RequestCount"
                },
                "SampledCount": {
                    "$ref": "#/$defs/SampledCount"
                },
                "BorrowCount": {
                    "$ref": "#/$defs/BorrowCount"
                }
            }
        },
        "ClientID": {
            "type": "string"
        },
        "RequestCount": {
            "type": "integer",
            "format": "int32"
        },
        "SampledCount": {
            "type": "integer",
            "format": "int32"
        },
        "BorrowCount": {
            "type": "integer",
            "format": "int32"
        },
        "GetSamplingTargetsResult": {
            "type": "object",
            "properties": {
                "SamplingTargetDocuments": {
                    "$ref": "#/$defs/SamplingTargetDocumentList"
                },
                "LastRuleModification": {
                    "$ref": "#/$defs/Timestamp"
                },
                "UnprocessedStatistics": {
                    "$ref": "#/$defs/UnprocessedStatisticsList"
                }
            }
        },
        "SamplingTargetDocumentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SamplingTargetDocument"
            }
        },
        "SamplingTargetDocument": {
            "type": "object",
            "properties": {
                "RuleName": {
                    "$ref": "#/$defs/String"
                },
                "FixedRate": {
                    "$ref": "#/$defs/Double"
                },
                "ReservoirQuota": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "ReservoirQuotaTTL": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Interval": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "UnprocessedStatisticsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnprocessedStatistics"
            }
        },
        "UnprocessedStatistics": {
            "type": "object",
            "properties": {
                "RuleName": {
                    "$ref": "#/$defs/String"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetServiceGraphRequest": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "GroupARN": {
                    "$ref": "#/$defs/GroupARN"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetServiceGraphResult": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Services": {
                    "$ref": "#/$defs/ServiceList"
                },
                "ContainsOldGroupVersions": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Service"
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "GetTimeSeriesServiceStatisticsRequest": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "GroupARN": {
                    "$ref": "#/$defs/GroupARN"
                },
                "EntitySelectorExpression": {
                    "$ref": "#/$defs/EntitySelectorExpression"
                },
                "Period": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "ForecastStatistics": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EntitySelectorExpression": {
            "type": "string"
        },
        "GetTimeSeriesServiceStatisticsResult": {
            "type": "object",
            "properties": {
                "TimeSeriesServiceStatistics": {
                    "$ref": "#/$defs/TimeSeriesServiceStatisticsList"
                },
                "ContainsOldGroupVersions": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TimeSeriesServiceStatisticsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TimeSeriesServiceStatistics"
            }
        },
        "TimeSeriesServiceStatistics": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EdgeSummaryStatistics": {
                    "$ref": "#/$defs/EdgeStatistics"
                },
                "ServiceSummaryStatistics": {
                    "$ref": "#/$defs/ServiceStatistics"
                },
                "ServiceForecastStatistics": {
                    "$ref": "#/$defs/ForecastStatistics"
                },
                "ResponseTimeHistogram": {
                    "$ref": "#/$defs/Histogram"
                }
            }
        },
        "ForecastStatistics": {
            "type": "object",
            "properties": {
                "FaultCountHigh": {
                    "$ref": "#/$defs/NullableLong"
                },
                "FaultCountLow": {
                    "$ref": "#/$defs/NullableLong"
                }
            }
        },
        "GetTraceGraphRequest": {
            "type": "object",
            "properties": {
                "TraceIds": {
                    "$ref": "#/$defs/TraceIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetTraceGraphResult": {
            "type": "object",
            "properties": {
                "Services": {
                    "$ref": "#/$defs/ServiceList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetTraceSegmentDestinationRequest": {
            "type": "object",
            "properties": {}
        },
        "GetTraceSegmentDestinationResult": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/TraceSegmentDestination"
                },
                "Status": {
                    "$ref": "#/$defs/TraceSegmentDestinationStatus"
                }
            }
        },
        "TraceSegmentDestination": {
            "enum": [
                "XRay",
                "CloudWatchLogs"
            ]
        },
        "TraceSegmentDestinationStatus": {
            "enum": [
                "PENDING",
                "ACTIVE"
            ]
        },
        "GetTraceSummariesRequest": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "TimeRangeType": {
                    "$ref": "#/$defs/TimeRangeType"
                },
                "Sampling": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "SamplingStrategy": {
                    "$ref": "#/$defs/SamplingStrategy"
                },
                "FilterExpression": {
                    "$ref": "#/$defs/FilterExpression"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TimeRangeType": {
            "enum": [
                "TraceId",
                "Event",
                "Service"
            ]
        },
        "SamplingStrategy": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/SamplingStrategyName"
                },
                "Value": {
                    "$ref": "#/$defs/NullableDouble"
                }
            }
        },
        "SamplingStrategyName": {
            "enum": [
                "PartialScan",
                "FixedRate"
            ]
        },
        "GetTraceSummariesResult": {
            "type": "object",
            "properties": {
                "TraceSummaries": {
                    "$ref": "#/$defs/TraceSummaryList"
                },
                "ApproximateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "TracesProcessedCount": {
                    "$ref": "#/$defs/NullableLong"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TraceSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TraceSummary"
            }
        },
        "TraceSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/TraceId"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Duration": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "ResponseTime": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "HasFault": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "HasError": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "HasThrottle": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "IsPartial": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "Http": {
                    "$ref": "#/$defs/Http"
                },
                "Annotations": {
                    "$ref": "#/$defs/Annotations"
                },
                "Users": {
                    "$ref": "#/$defs/TraceUsers"
                },
                "ServiceIds": {
                    "$ref": "#/$defs/ServiceIds"
                },
                "ResourceARNs": {
                    "$ref": "#/$defs/TraceResourceARNs"
                },
                "InstanceIds": {
                    "$ref": "#/$defs/TraceInstanceIds"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/TraceAvailabilityZones"
                },
                "EntryPoint": {
                    "$ref": "#/$defs/ServiceId"
                },
                "FaultRootCauses": {
                    "$ref": "#/$defs/FaultRootCauses"
                },
                "ErrorRootCauses": {
                    "$ref": "#/$defs/ErrorRootCauses"
                },
                "ResponseTimeRootCauses": {
                    "$ref": "#/$defs/ResponseTimeRootCauses"
                },
                "Revision": {
                    "$ref": "#/$defs/Integer"
                },
                "MatchedEventTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Http": {
            "type": "object",
            "properties": {
                "HttpURL": {
                    "$ref": "#/$defs/String"
                },
                "HttpStatus": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "HttpMethod": {
                    "$ref": "#/$defs/String"
                },
                "UserAgent": {
                    "$ref": "#/$defs/String"
                },
                "ClientIp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Annotations": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ValuesWithServiceIds"
            }
        },
        "ValuesWithServiceIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValueWithServiceIds"
            }
        },
        "ValueWithServiceIds": {
            "type": "object",
            "properties": {
                "AnnotationValue": {
                    "$ref": "#/$defs/AnnotationValue"
                },
                "ServiceIds": {
                    "$ref": "#/$defs/ServiceIds"
                }
            }
        },
        "AnnotationValue": {
            "type": "object",
            "properties": {
                "NumberValue": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "BooleanValue": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "StringValue": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceId"
            }
        },
        "TraceUsers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TraceUser"
            }
        },
        "TraceUser": {
            "type": "object",
            "properties": {
                "UserName": {
                    "$ref": "#/$defs/String"
                },
                "ServiceIds": {
                    "$ref": "#/$defs/ServiceIds"
                }
            }
        },
        "TraceResourceARNs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceARNDetail"
            }
        },
        "ResourceARNDetail": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TraceInstanceIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceIdDetail"
            }
        },
        "InstanceIdDetail": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TraceAvailabilityZones": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AvailabilityZoneDetail"
            }
        },
        "AvailabilityZoneDetail": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FaultRootCauses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FaultRootCause"
            }
        },
        "FaultRootCause": {
            "type": "object",
            "properties": {
                "Services": {
                    "$ref": "#/$defs/FaultRootCauseServices"
                },
                "ClientImpacting": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "FaultRootCauseServices": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FaultRootCauseService"
            }
        },
        "FaultRootCauseService": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Names": {
                    "$ref": "#/$defs/ServiceNames"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "EntityPath": {
                    "$ref": "#/$defs/FaultRootCauseEntityPath"
                },
                "Inferred": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "FaultRootCauseEntityPath": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FaultRootCauseEntity"
            }
        },
        "FaultRootCauseEntity": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Exceptions": {
                    "$ref": "#/$defs/RootCauseExceptions"
                },
                "Remote": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "RootCauseExceptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RootCauseException"
            }
        },
        "RootCauseException": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ErrorRootCauses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ErrorRootCause"
            }
        },
        "ErrorRootCause": {
            "type": "object",
            "properties": {
                "Services": {
                    "$ref": "#/$defs/ErrorRootCauseServices"
                },
                "ClientImpacting": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "ErrorRootCauseServices": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ErrorRootCauseService"
            }
        },
        "ErrorRootCauseService": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Names": {
                    "$ref": "#/$defs/ServiceNames"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "EntityPath": {
                    "$ref": "#/$defs/ErrorRootCauseEntityPath"
                },
                "Inferred": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "ErrorRootCauseEntityPath": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ErrorRootCauseEntity"
            }
        },
        "ErrorRootCauseEntity": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Exceptions": {
                    "$ref": "#/$defs/RootCauseExceptions"
                },
                "Remote": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "ResponseTimeRootCauses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResponseTimeRootCause"
            }
        },
        "ResponseTimeRootCause": {
            "type": "object",
            "properties": {
                "Services": {
                    "$ref": "#/$defs/ResponseTimeRootCauseServices"
                },
                "ClientImpacting": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "ResponseTimeRootCauseServices": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResponseTimeRootCauseService"
            }
        },
        "ResponseTimeRootCauseService": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Names": {
                    "$ref": "#/$defs/ServiceNames"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "EntityPath": {
                    "$ref": "#/$defs/ResponseTimeRootCauseEntityPath"
                },
                "Inferred": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "ResponseTimeRootCauseEntityPath": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResponseTimeRootCauseEntity"
            }
        },
        "ResponseTimeRootCauseEntity": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Coverage": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "Remote": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "ListResourcePoliciesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/ResourcePolicyNextToken"
                }
            }
        },
        "ResourcePolicyNextToken": {
            "type": "string"
        },
        "ListResourcePoliciesResult": {
            "type": "object",
            "properties": {
                "ResourcePolicies": {
                    "$ref": "#/$defs/ResourcePolicyList"
                },
                "NextToken": {
                    "$ref": "#/$defs/ResourcePolicyNextToken"
                }
            }
        },
        "ResourcePolicyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourcePolicy"
            }
        },
        "ResourcePolicy": {
            "type": "object",
            "properties": {
                "PolicyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "PolicyRevisionId": {
                    "$ref": "#/$defs/PolicyRevisionId"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "PolicyDocument": {
            "type": "string"
        },
        "ListRetrievedTracesRequest": {
            "type": "object",
            "properties": {
                "RetrievalToken": {
                    "$ref": "#/$defs/RetrievalToken"
                },
                "TraceFormat": {
                    "$ref": "#/$defs/TraceFormatType"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TraceFormatType": {
            "enum": [
                "XRAY",
                "OTEL"
            ]
        },
        "ListRetrievedTracesResult": {
            "type": "object",
            "properties": {
                "RetrievalStatus": {
                    "$ref": "#/$defs/RetrievalStatus"
                },
                "TraceFormat": {
                    "$ref": "#/$defs/TraceFormatType"
                },
                "Traces": {
                    "$ref": "#/$defs/TraceSpanList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TraceSpanList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RetrievedTrace"
            }
        },
        "RetrievedTrace": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/TraceId"
                },
                "Duration": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "Spans": {
                    "$ref": "#/$defs/SpanList"
                }
            }
        },
        "SpanList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Span"
            }
        },
        "Span": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/SpanId"
                },
                "Document": {
                    "$ref": "#/$defs/SpanDocument"
                }
            }
        },
        "SpanId": {
            "type": "string"
        },
        "SpanDocument": {
            "type": "string"
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AmazonResourceName": {
            "type": "string"
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PutEncryptionConfigRequest": {
            "type": "object",
            "properties": {
                "KeyId": {
                    "$ref": "#/$defs/EncryptionKeyId"
                },
                "Type": {
                    "$ref": "#/$defs/EncryptionType"
                }
            }
        },
        "EncryptionKeyId": {
            "type": "string"
        },
        "PutEncryptionConfigResult": {
            "type": "object",
            "properties": {
                "EncryptionConfig": {
                    "$ref": "#/$defs/EncryptionConfig"
                }
            }
        },
        "PutResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "PolicyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "PolicyRevisionId": {
                    "$ref": "#/$defs/PolicyRevisionId"
                },
                "BypassPolicyLockoutCheck": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "PutResourcePolicyResult": {
            "type": "object",
            "properties": {
                "ResourcePolicy": {
                    "$ref": "#/$defs/ResourcePolicy"
                }
            }
        },
        "PutTelemetryRecordsRequest": {
            "type": "object",
            "properties": {
                "TelemetryRecords": {
                    "$ref": "#/$defs/TelemetryRecordList"
                },
                "EC2InstanceId": {
                    "$ref": "#/$defs/EC2InstanceId"
                },
                "Hostname": {
                    "$ref": "#/$defs/Hostname"
                },
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "TelemetryRecordList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TelemetryRecord"
            }
        },
        "TelemetryRecord": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "SegmentsReceivedCount": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "SegmentsSentCount": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "SegmentsSpilloverCount": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "SegmentsRejectedCount": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "BackendConnectionErrors": {
                    "$ref": "#/$defs/BackendConnectionErrors"
                }
            }
        },
        "BackendConnectionErrors": {
            "type": "object",
            "properties": {
                "TimeoutCount": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "ConnectionRefusedCount": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "HTTPCode4XXCount": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "HTTPCode5XXCount": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "UnknownHostCount": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "OtherCount": {
                    "$ref": "#/$defs/NullableInteger"
                }
            }
        },
        "EC2InstanceId": {
            "type": "string"
        },
        "Hostname": {
            "type": "string"
        },
        "PutTelemetryRecordsResult": {
            "type": "object",
            "properties": {}
        },
        "PutTraceSegmentsRequest": {
            "type": "object",
            "properties": {
                "TraceSegmentDocuments": {
                    "$ref": "#/$defs/TraceSegmentDocumentList"
                }
            }
        },
        "TraceSegmentDocumentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TraceSegmentDocument"
            }
        },
        "TraceSegmentDocument": {
            "type": "string"
        },
        "PutTraceSegmentsResult": {
            "type": "object",
            "properties": {
                "UnprocessedTraceSegments": {
                    "$ref": "#/$defs/UnprocessedTraceSegmentList"
                }
            }
        },
        "UnprocessedTraceSegmentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnprocessedTraceSegment"
            }
        },
        "UnprocessedTraceSegment": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StartTraceRetrievalRequest": {
            "type": "object",
            "properties": {
                "TraceIds": {
                    "$ref": "#/$defs/TraceIdListForRetrieval"
                },
                "StartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "TraceIdListForRetrieval": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TraceId"
            }
        },
        "StartTraceRetrievalResult": {
            "type": "object",
            "properties": {
                "RetrievalToken": {
                    "$ref": "#/$defs/RetrievalToken"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateGroupRequest": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "GroupARN": {
                    "$ref": "#/$defs/GroupARN"
                },
                "FilterExpression": {
                    "$ref": "#/$defs/FilterExpression"
                },
                "InsightsConfiguration": {
                    "$ref": "#/$defs/InsightsConfiguration"
                }
            }
        },
        "UpdateGroupResult": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/Group"
                }
            }
        },
        "UpdateIndexingRuleRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Rule": {
                    "$ref": "#/$defs/IndexingRuleValueUpdate"
                }
            }
        },
        "IndexingRuleValueUpdate": {
            "type": "object",
            "properties": {
                "Probabilistic": {
                    "$ref": "#/$defs/ProbabilisticRuleValueUpdate"
                }
            }
        },
        "ProbabilisticRuleValueUpdate": {
            "type": "object",
            "properties": {
                "DesiredSamplingPercentage": {
                    "$ref": "#/$defs/NullableDouble"
                }
            }
        },
        "UpdateIndexingRuleResult": {
            "type": "object",
            "properties": {
                "IndexingRule": {
                    "$ref": "#/$defs/IndexingRule"
                }
            }
        },
        "UpdateSamplingRuleRequest": {
            "type": "object",
            "properties": {
                "SamplingRuleUpdate": {
                    "$ref": "#/$defs/SamplingRuleUpdate"
                }
            }
        },
        "SamplingRuleUpdate": {
            "type": "object",
            "properties": {
                "RuleName": {
                    "$ref": "#/$defs/RuleName"
                },
                "RuleARN": {
                    "$ref": "#/$defs/String"
                },
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "Priority": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "FixedRate": {
                    "$ref": "#/$defs/NullableDouble"
                },
                "ReservoirSize": {
                    "$ref": "#/$defs/NullableInteger"
                },
                "Host": {
                    "$ref": "#/$defs/Host"
                },
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "HTTPMethod": {
                    "$ref": "#/$defs/HTTPMethod"
                },
                "URLPath": {
                    "$ref": "#/$defs/URLPath"
                },
                "Attributes": {
                    "$ref": "#/$defs/AttributeMap"
                }
            }
        },
        "UpdateSamplingRuleResult": {
            "type": "object",
            "properties": {
                "SamplingRuleRecord": {
                    "$ref": "#/$defs/SamplingRuleRecord"
                }
            }
        },
        "UpdateTraceSegmentDestinationRequest": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/TraceSegmentDestination"
                }
            }
        },
        "UpdateTraceSegmentDestinationResult": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/TraceSegmentDestination"
                },
                "Status": {
                    "$ref": "#/$defs/TraceSegmentDestinationStatus"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://xray-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://xray-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://xray.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://xray.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
