{
    "name": "elasticmapreduce",
    "commands": [
        {
            "name": "AddInstanceFleet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.AddInstanceFleet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddInstanceFleetOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddInstanceFleetInput"
                        }
                    }
                }
            }
        },
        {
            "name": "AddInstanceGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.AddInstanceGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddInstanceGroupsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddInstanceGroupsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "AddJobFlowSteps",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.AddJobFlowSteps"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddJobFlowStepsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddJobFlowStepsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "AddTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.AddTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddTagsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddTagsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelSteps",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.CancelSteps"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelStepsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelStepsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSecurityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.CreateSecurityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSecurityConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSecurityConfigurationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateStudio",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.CreateStudio"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateStudioOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateStudioInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateStudioSessionMapping",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.CreateStudioSessionMapping"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateStudioSessionMappingInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSecurityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.DeleteSecurityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSecurityConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSecurityConfigurationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteStudio",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.DeleteStudio"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteStudioInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteStudioSessionMapping",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.DeleteStudioSessionMapping"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteStudioSessionMappingInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.DescribeCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClusterOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClusterInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeJobFlows",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.DescribeJobFlows"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeJobFlowsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeJobFlowsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeNotebookExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.DescribeNotebookExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNotebookExecutionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNotebookExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReleaseLabel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.DescribeReleaseLabel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReleaseLabelOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReleaseLabelInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSecurityConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.DescribeSecurityConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSecurityConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSecurityConfigurationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeStep",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.DescribeStep"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStepOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeStepInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeStudio",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.DescribeStudio"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStudioOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeStudioInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAutoTerminationPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.GetAutoTerminationPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAutoTerminationPolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAutoTerminationPolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBlockPublicAccessConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.GetBlockPublicAccessConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBlockPublicAccessConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBlockPublicAccessConfigurationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetClusterSessionCredentials",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.GetClusterSessionCredentials"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetClusterSessionCredentialsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetClusterSessionCredentialsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetManagedScalingPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.GetManagedScalingPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetManagedScalingPolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetManagedScalingPolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetStudioSessionMapping",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.GetStudioSessionMapping"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetStudioSessionMappingOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetStudioSessionMappingInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListBootstrapActions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ListBootstrapActions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBootstrapActionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBootstrapActionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListClusters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ListClusters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListClustersOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListClustersInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListInstanceFleets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ListInstanceFleets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInstanceFleetsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInstanceFleetsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListInstanceGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ListInstanceGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInstanceGroupsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInstanceGroupsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ListInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInstancesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInstancesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListNotebookExecutions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ListNotebookExecutions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNotebookExecutionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListNotebookExecutionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListReleaseLabels",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ListReleaseLabels"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListReleaseLabelsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListReleaseLabelsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSecurityConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ListSecurityConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSecurityConfigurationsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSecurityConfigurationsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSteps",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ListSteps"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStepsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListStepsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListStudios",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ListStudios"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStudiosOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListStudiosInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListStudioSessionMappings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ListStudioSessionMappings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStudioSessionMappingsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListStudioSessionMappingsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSupportedInstanceTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ListSupportedInstanceTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSupportedInstanceTypesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSupportedInstanceTypesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ModifyCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyClusterOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyClusterInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstanceFleet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ModifyInstanceFleet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstanceFleetInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstanceGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.ModifyInstanceGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstanceGroupsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutAutoScalingPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.PutAutoScalingPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAutoScalingPolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAutoScalingPolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutAutoTerminationPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.PutAutoTerminationPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAutoTerminationPolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAutoTerminationPolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutBlockPublicAccessConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.PutBlockPublicAccessConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutBlockPublicAccessConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutBlockPublicAccessConfigurationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutManagedScalingPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.PutManagedScalingPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutManagedScalingPolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutManagedScalingPolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveAutoScalingPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.RemoveAutoScalingPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveAutoScalingPolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveAutoScalingPolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveAutoTerminationPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.RemoveAutoTerminationPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveAutoTerminationPolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveAutoTerminationPolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveManagedScalingPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.RemoveManagedScalingPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveManagedScalingPolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveManagedScalingPolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.RemoveTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveTagsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveTagsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RunJobFlow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.RunJobFlow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RunJobFlowOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RunJobFlowInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SetKeepJobFlowAliveWhenNoSteps",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.SetKeepJobFlowAliveWhenNoSteps"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetKeepJobFlowAliveWhenNoStepsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SetTerminationProtection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.SetTerminationProtection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetTerminationProtectionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SetUnhealthyNodeReplacement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.SetUnhealthyNodeReplacement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetUnhealthyNodeReplacementInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SetVisibleToAllUsers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.SetVisibleToAllUsers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetVisibleToAllUsersInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StartNotebookExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.StartNotebookExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartNotebookExecutionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartNotebookExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StopNotebookExecution",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.StopNotebookExecution"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopNotebookExecutionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TerminateJobFlows",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.TerminateJobFlows"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TerminateJobFlowsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateStudio",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.UpdateStudio"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateStudioInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateStudioSessionMapping",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticMapReduce.UpdateStudioSessionMapping"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateStudioSessionMappingInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AddInstanceFleetOutput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "InstanceFleetId": {
                    "$ref": "#/$defs/InstanceFleetId"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/ArnType"
                }
            }
        },
        "XmlStringMaxLen256": {
            "type": "string"
        },
        "InstanceFleetId": {
            "type": "string"
        },
        "ArnType": {
            "type": "string"
        },
        "AddInstanceFleetInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "InstanceFleet": {
                    "$ref": "#/$defs/InstanceFleetConfig"
                }
            }
        },
        "InstanceFleetConfig": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "InstanceFleetType": {
                    "$ref": "#/$defs/InstanceFleetType"
                },
                "TargetOnDemandCapacity": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "TargetSpotCapacity": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "InstanceTypeConfigs": {
                    "$ref": "#/$defs/InstanceTypeConfigList"
                },
                "LaunchSpecifications": {
                    "$ref": "#/$defs/InstanceFleetProvisioningSpecifications"
                },
                "ResizeSpecifications": {
                    "$ref": "#/$defs/InstanceFleetResizingSpecifications"
                }
            }
        },
        "InstanceFleetType": {
            "enum": [
                "MASTER",
                "CORE",
                "TASK"
            ]
        },
        "WholeNumber": {
            "type": "integer",
            "format": "int32"
        },
        "InstanceTypeConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceTypeConfig"
            }
        },
        "InstanceTypeConfig": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "WeightedCapacity": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "BidPrice": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "BidPriceAsPercentageOfOnDemandPrice": {
                    "$ref": "#/$defs/NonNegativeDouble"
                },
                "EbsConfiguration": {
                    "$ref": "#/$defs/EbsConfiguration"
                },
                "Configurations": {
                    "$ref": "#/$defs/ConfigurationList"
                },
                "CustomAmiId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Priority": {
                    "$ref": "#/$defs/NonNegativeDouble"
                }
            }
        },
        "InstanceType": {
            "type": "string"
        },
        "NonNegativeDouble": {
            "type": "number",
            "format": "double"
        },
        "EbsConfiguration": {
            "type": "object",
            "properties": {
                "EbsBlockDeviceConfigs": {
                    "$ref": "#/$defs/EbsBlockDeviceConfigList"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/BooleanObject"
                }
            }
        },
        "EbsBlockDeviceConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EbsBlockDeviceConfig"
            }
        },
        "EbsBlockDeviceConfig": {
            "type": "object",
            "properties": {
                "VolumeSpecification": {
                    "$ref": "#/$defs/VolumeSpecification"
                },
                "VolumesPerInstance": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "VolumeSpecification": {
            "type": "object",
            "properties": {
                "VolumeType": {
                    "$ref": "#/$defs/String"
                },
                "Iops": {
                    "$ref": "#/$defs/Integer"
                },
                "SizeInGB": {
                    "$ref": "#/$defs/Integer"
                },
                "Throughput": {
                    "$ref": "#/$defs/ThroughputVal"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "ThroughputVal": {
            "type": "integer",
            "format": "int32"
        },
        "BooleanObject": {
            "type": "boolean"
        },
        "ConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Configuration"
            }
        },
        "Configuration": {
            "type": "object",
            "properties": {
                "Classification": {
                    "$ref": "#/$defs/String"
                },
                "Configurations": {
                    "$ref": "#/$defs/ConfigurationList"
                },
                "Properties": {
                    "$ref": "#/$defs/StringMap"
                }
            }
        },
        "StringMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "InstanceFleetProvisioningSpecifications": {
            "type": "object",
            "properties": {
                "SpotSpecification": {
                    "$ref": "#/$defs/SpotProvisioningSpecification"
                },
                "OnDemandSpecification": {
                    "$ref": "#/$defs/OnDemandProvisioningSpecification"
                }
            }
        },
        "SpotProvisioningSpecification": {
            "type": "object",
            "properties": {
                "TimeoutDurationMinutes": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "TimeoutAction": {
                    "$ref": "#/$defs/SpotProvisioningTimeoutAction"
                },
                "BlockDurationMinutes": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "AllocationStrategy": {
                    "$ref": "#/$defs/SpotProvisioningAllocationStrategy"
                }
            }
        },
        "SpotProvisioningTimeoutAction": {
            "enum": [
                "SWITCH_TO_ON_DEMAND",
                "TERMINATE_CLUSTER"
            ]
        },
        "SpotProvisioningAllocationStrategy": {
            "enum": [
                "CAPACITY_OPTIMIZED",
                "PRICE_CAPACITY_OPTIMIZED",
                "LOWEST_PRICE",
                "DIVERSIFIED",
                "CAPACITY_OPTIMIZED_PRIORITIZED"
            ]
        },
        "OnDemandProvisioningSpecification": {
            "type": "object",
            "properties": {
                "AllocationStrategy": {
                    "$ref": "#/$defs/OnDemandProvisioningAllocationStrategy"
                },
                "CapacityReservationOptions": {
                    "$ref": "#/$defs/OnDemandCapacityReservationOptions"
                }
            }
        },
        "OnDemandProvisioningAllocationStrategy": {
            "enum": [
                "LOWEST_PRICE",
                "PRIORITIZED"
            ]
        },
        "OnDemandCapacityReservationOptions": {
            "type": "object",
            "properties": {
                "UsageStrategy": {
                    "$ref": "#/$defs/OnDemandCapacityReservationUsageStrategy"
                },
                "CapacityReservationPreference": {
                    "$ref": "#/$defs/OnDemandCapacityReservationPreference"
                },
                "CapacityReservationResourceGroupArn": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "OnDemandCapacityReservationUsageStrategy": {
            "enum": [
                "USE_CAPACITY_RESERVATIONS_FIRST"
            ]
        },
        "OnDemandCapacityReservationPreference": {
            "enum": [
                "OPEN",
                "NONE"
            ]
        },
        "InstanceFleetResizingSpecifications": {
            "type": "object",
            "properties": {
                "SpotResizeSpecification": {
                    "$ref": "#/$defs/SpotResizingSpecification"
                },
                "OnDemandResizeSpecification": {
                    "$ref": "#/$defs/OnDemandResizingSpecification"
                }
            }
        },
        "SpotResizingSpecification": {
            "type": "object",
            "properties": {
                "TimeoutDurationMinutes": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "AllocationStrategy": {
                    "$ref": "#/$defs/SpotProvisioningAllocationStrategy"
                }
            }
        },
        "OnDemandResizingSpecification": {
            "type": "object",
            "properties": {
                "TimeoutDurationMinutes": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "AllocationStrategy": {
                    "$ref": "#/$defs/OnDemandProvisioningAllocationStrategy"
                },
                "CapacityReservationOptions": {
                    "$ref": "#/$defs/OnDemandCapacityReservationOptions"
                }
            }
        },
        "AddInstanceGroupsOutput": {
            "type": "object",
            "properties": {
                "JobFlowId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "InstanceGroupIds": {
                    "$ref": "#/$defs/InstanceGroupIdsList"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/ArnType"
                }
            }
        },
        "InstanceGroupIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen256"
            }
        },
        "AddInstanceGroupsInput": {
            "type": "object",
            "properties": {
                "InstanceGroups": {
                    "$ref": "#/$defs/InstanceGroupConfigList"
                },
                "JobFlowId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "InstanceGroupConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceGroupConfig"
            }
        },
        "InstanceGroupConfig": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Market": {
                    "$ref": "#/$defs/MarketType"
                },
                "InstanceRole": {
                    "$ref": "#/$defs/InstanceRoleType"
                },
                "BidPrice": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Configurations": {
                    "$ref": "#/$defs/ConfigurationList"
                },
                "EbsConfiguration": {
                    "$ref": "#/$defs/EbsConfiguration"
                },
                "AutoScalingPolicy": {
                    "$ref": "#/$defs/AutoScalingPolicy"
                },
                "CustomAmiId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "MarketType": {
            "enum": [
                "ON_DEMAND",
                "SPOT"
            ]
        },
        "InstanceRoleType": {
            "enum": [
                "MASTER",
                "CORE",
                "TASK"
            ]
        },
        "AutoScalingPolicy": {
            "type": "object",
            "properties": {
                "Constraints": {
                    "$ref": "#/$defs/ScalingConstraints"
                },
                "Rules": {
                    "$ref": "#/$defs/ScalingRuleList"
                }
            }
        },
        "ScalingConstraints": {
            "type": "object",
            "properties": {
                "MinCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ScalingRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScalingRule"
            }
        },
        "ScalingRule": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Action": {
                    "$ref": "#/$defs/ScalingAction"
                },
                "Trigger": {
                    "$ref": "#/$defs/ScalingTrigger"
                }
            }
        },
        "ScalingAction": {
            "type": "object",
            "properties": {
                "Market": {
                    "$ref": "#/$defs/MarketType"
                },
                "SimpleScalingPolicyConfiguration": {
                    "$ref": "#/$defs/SimpleScalingPolicyConfiguration"
                }
            }
        },
        "SimpleScalingPolicyConfiguration": {
            "type": "object",
            "properties": {
                "AdjustmentType": {
                    "$ref": "#/$defs/AdjustmentType"
                },
                "ScalingAdjustment": {
                    "$ref": "#/$defs/Integer"
                },
                "CoolDown": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "AdjustmentType": {
            "enum": [
                "CHANGE_IN_CAPACITY",
                "PERCENT_CHANGE_IN_CAPACITY",
                "EXACT_CAPACITY"
            ]
        },
        "ScalingTrigger": {
            "type": "object",
            "properties": {
                "CloudWatchAlarmDefinition": {
                    "$ref": "#/$defs/CloudWatchAlarmDefinition"
                }
            }
        },
        "CloudWatchAlarmDefinition": {
            "type": "object",
            "properties": {
                "ComparisonOperator": {
                    "$ref": "#/$defs/ComparisonOperator"
                },
                "EvaluationPeriods": {
                    "$ref": "#/$defs/Integer"
                },
                "MetricName": {
                    "$ref": "#/$defs/String"
                },
                "Namespace": {
                    "$ref": "#/$defs/String"
                },
                "Period": {
                    "$ref": "#/$defs/Integer"
                },
                "Statistic": {
                    "$ref": "#/$defs/Statistic"
                },
                "Threshold": {
                    "$ref": "#/$defs/NonNegativeDouble"
                },
                "Unit": {
                    "$ref": "#/$defs/Unit"
                },
                "Dimensions": {
                    "$ref": "#/$defs/MetricDimensionList"
                }
            }
        },
        "ComparisonOperator": {
            "enum": [
                "GREATER_THAN_OR_EQUAL",
                "GREATER_THAN",
                "LESS_THAN",
                "LESS_THAN_OR_EQUAL"
            ]
        },
        "Statistic": {
            "enum": [
                "SAMPLE_COUNT",
                "AVERAGE",
                "SUM",
                "MINIMUM",
                "MAXIMUM"
            ]
        },
        "Unit": {
            "enum": [
                "NONE",
                "SECONDS",
                "MICRO_SECONDS",
                "MILLI_SECONDS",
                "BYTES",
                "KILO_BYTES",
                "MEGA_BYTES",
                "GIGA_BYTES",
                "TERA_BYTES",
                "BITS",
                "KILO_BITS",
                "MEGA_BITS",
                "GIGA_BITS",
                "TERA_BITS",
                "PERCENT",
                "COUNT",
                "BYTES_PER_SECOND",
                "KILO_BYTES_PER_SECOND",
                "MEGA_BYTES_PER_SECOND",
                "GIGA_BYTES_PER_SECOND",
                "TERA_BYTES_PER_SECOND",
                "BITS_PER_SECOND",
                "KILO_BITS_PER_SECOND",
                "MEGA_BITS_PER_SECOND",
                "GIGA_BITS_PER_SECOND",
                "TERA_BITS_PER_SECOND",
                "COUNT_PER_SECOND"
            ]
        },
        "MetricDimensionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricDimension"
            }
        },
        "MetricDimension": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AddJobFlowStepsOutput": {
            "type": "object",
            "properties": {
                "StepIds": {
                    "$ref": "#/$defs/StepIdsList"
                }
            }
        },
        "StepIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen256"
            }
        },
        "AddJobFlowStepsInput": {
            "type": "object",
            "properties": {
                "JobFlowId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Steps": {
                    "$ref": "#/$defs/StepConfigList"
                },
                "ExecutionRoleArn": {
                    "$ref": "#/$defs/ArnType"
                }
            }
        },
        "StepConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StepConfig"
            }
        },
        "StepConfig": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "ActionOnFailure": {
                    "$ref": "#/$defs/ActionOnFailure"
                },
                "HadoopJarStep": {
                    "$ref": "#/$defs/HadoopJarStepConfig"
                }
            }
        },
        "ActionOnFailure": {
            "enum": [
                "TERMINATE_JOB_FLOW",
                "TERMINATE_CLUSTER",
                "CANCEL_AND_WAIT",
                "CONTINUE"
            ]
        },
        "HadoopJarStepConfig": {
            "type": "object",
            "properties": {
                "Properties": {
                    "$ref": "#/$defs/KeyValueList"
                },
                "Jar": {
                    "$ref": "#/$defs/XmlString"
                },
                "MainClass": {
                    "$ref": "#/$defs/XmlString"
                },
                "Args": {
                    "$ref": "#/$defs/XmlStringList"
                }
            }
        },
        "KeyValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyValue"
            }
        },
        "KeyValue": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/XmlString"
                },
                "Value": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "XmlString": {
            "type": "string"
        },
        "XmlStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlString"
            }
        },
        "AddTagsOutput": {
            "type": "object",
            "properties": {}
        },
        "AddTagsInput": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ResourceId": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CancelStepsOutput": {
            "type": "object",
            "properties": {
                "CancelStepsInfoList": {
                    "$ref": "#/$defs/CancelStepsInfoList"
                }
            }
        },
        "CancelStepsInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CancelStepsInfo"
            }
        },
        "CancelStepsInfo": {
            "type": "object",
            "properties": {
                "StepId": {
                    "$ref": "#/$defs/StepId"
                },
                "Status": {
                    "$ref": "#/$defs/CancelStepsRequestStatus"
                },
                "Reason": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StepId": {
            "type": "string"
        },
        "CancelStepsRequestStatus": {
            "enum": [
                "SUBMITTED",
                "FAILED"
            ]
        },
        "CancelStepsInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "StepIds": {
                    "$ref": "#/$defs/StepIdsList"
                },
                "StepCancellationOption": {
                    "$ref": "#/$defs/StepCancellationOption"
                }
            }
        },
        "StepCancellationOption": {
            "enum": [
                "SEND_INTERRUPT",
                "TERMINATE_PROCESS"
            ]
        },
        "CreateSecurityConfigurationOutput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlString"
                },
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "Date": {
            "type": "string",
            "format": "date-time"
        },
        "CreateSecurityConfigurationInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlString"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateStudioOutput": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Url": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "CreateStudioInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Description": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "AuthMode": {
                    "$ref": "#/$defs/AuthMode"
                },
                "VpcId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIdList"
                },
                "ServiceRole": {
                    "$ref": "#/$defs/XmlString"
                },
                "UserRole": {
                    "$ref": "#/$defs/XmlString"
                },
                "WorkspaceSecurityGroupId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "EngineSecurityGroupId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "DefaultS3Location": {
                    "$ref": "#/$defs/XmlString"
                },
                "IdpAuthUrl": {
                    "$ref": "#/$defs/XmlString"
                },
                "IdpRelayStateParameterName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "TrustedIdentityPropagationEnabled": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "IdcUserAssignment": {
                    "$ref": "#/$defs/IdcUserAssignment"
                },
                "IdcInstanceArn": {
                    "$ref": "#/$defs/ArnType"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "AuthMode": {
            "enum": [
                "SSO",
                "IAM"
            ]
        },
        "SubnetIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "IdcUserAssignment": {
            "enum": [
                "REQUIRED",
                "OPTIONAL"
            ]
        },
        "CreateStudioSessionMappingInput": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                },
                "SessionPolicyArn": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "IdentityType": {
            "enum": [
                "USER",
                "GROUP"
            ]
        },
        "DeleteSecurityConfigurationOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteSecurityConfigurationInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "DeleteStudioInput": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "DeleteStudioSessionMappingInput": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                }
            }
        },
        "DescribeClusterOutput": {
            "type": "object",
            "properties": {
                "Cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "Cluster": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ClusterId"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ClusterStatus"
                },
                "Ec2InstanceAttributes": {
                    "$ref": "#/$defs/Ec2InstanceAttributes"
                },
                "InstanceCollectionType": {
                    "$ref": "#/$defs/InstanceCollectionType"
                },
                "LogUri": {
                    "$ref": "#/$defs/String"
                },
                "LogEncryptionKmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "RequestedAmiVersion": {
                    "$ref": "#/$defs/String"
                },
                "RunningAmiVersion": {
                    "$ref": "#/$defs/String"
                },
                "ReleaseLabel": {
                    "$ref": "#/$defs/String"
                },
                "AutoTerminate": {
                    "$ref": "#/$defs/Boolean"
                },
                "TerminationProtected": {
                    "$ref": "#/$defs/Boolean"
                },
                "UnhealthyNodeReplacement": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "VisibleToAllUsers": {
                    "$ref": "#/$defs/Boolean"
                },
                "Applications": {
                    "$ref": "#/$defs/ApplicationList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ServiceRole": {
                    "$ref": "#/$defs/String"
                },
                "NormalizedInstanceHours": {
                    "$ref": "#/$defs/Integer"
                },
                "MasterPublicDnsName": {
                    "$ref": "#/$defs/String"
                },
                "Configurations": {
                    "$ref": "#/$defs/ConfigurationList"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/XmlString"
                },
                "AutoScalingRole": {
                    "$ref": "#/$defs/XmlString"
                },
                "ScaleDownBehavior": {
                    "$ref": "#/$defs/ScaleDownBehavior"
                },
                "CustomAmiId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "EbsRootVolumeSize": {
                    "$ref": "#/$defs/Integer"
                },
                "RepoUpgradeOnBoot": {
                    "$ref": "#/$defs/RepoUpgradeOnBoot"
                },
                "KerberosAttributes": {
                    "$ref": "#/$defs/KerberosAttributes"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/ArnType"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/OptionalArnType"
                },
                "StepConcurrencyLevel": {
                    "$ref": "#/$defs/Integer"
                },
                "PlacementGroups": {
                    "$ref": "#/$defs/PlacementGroupConfigList"
                },
                "OSReleaseLabel": {
                    "$ref": "#/$defs/String"
                },
                "EbsRootVolumeIops": {
                    "$ref": "#/$defs/Integer"
                },
                "EbsRootVolumeThroughput": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ClusterId": {
            "type": "string"
        },
        "ClusterStatus": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/ClusterState"
                },
                "StateChangeReason": {
                    "$ref": "#/$defs/ClusterStateChangeReason"
                },
                "Timeline": {
                    "$ref": "#/$defs/ClusterTimeline"
                },
                "ErrorDetails": {
                    "$ref": "#/$defs/ErrorDetailList"
                }
            }
        },
        "ClusterState": {
            "enum": [
                "STARTING",
                "BOOTSTRAPPING",
                "RUNNING",
                "WAITING",
                "TERMINATING",
                "TERMINATED",
                "TERMINATED_WITH_ERRORS"
            ]
        },
        "ClusterStateChangeReason": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/ClusterStateChangeReasonCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClusterStateChangeReasonCode": {
            "enum": [
                "INTERNAL_ERROR",
                "VALIDATION_ERROR",
                "INSTANCE_FAILURE",
                "INSTANCE_FLEET_TIMEOUT",
                "BOOTSTRAP_FAILURE",
                "USER_REQUEST",
                "STEP_FAILURE",
                "ALL_STEPS_COMPLETED"
            ]
        },
        "ClusterTimeline": {
            "type": "object",
            "properties": {
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "ReadyDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "EndDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "ErrorDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ErrorDetail"
            }
        },
        "ErrorDetail": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "$ref": "#/$defs/String"
                },
                "ErrorData": {
                    "$ref": "#/$defs/ErrorData"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ErrorData": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StringMap"
            }
        },
        "Ec2InstanceAttributes": {
            "type": "object",
            "properties": {
                "Ec2KeyName": {
                    "$ref": "#/$defs/String"
                },
                "Ec2SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "RequestedEc2SubnetIds": {
                    "$ref": "#/$defs/XmlStringMaxLen256List"
                },
                "Ec2AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "RequestedEc2AvailabilityZones": {
                    "$ref": "#/$defs/XmlStringMaxLen256List"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/String"
                },
                "EmrManagedMasterSecurityGroup": {
                    "$ref": "#/$defs/String"
                },
                "EmrManagedSlaveSecurityGroup": {
                    "$ref": "#/$defs/String"
                },
                "ServiceAccessSecurityGroup": {
                    "$ref": "#/$defs/String"
                },
                "AdditionalMasterSecurityGroups": {
                    "$ref": "#/$defs/StringList"
                },
                "AdditionalSlaveSecurityGroups": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "XmlStringMaxLen256List": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen256"
            }
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "InstanceCollectionType": {
            "enum": [
                "INSTANCE_FLEET",
                "INSTANCE_GROUP"
            ]
        },
        "Boolean": {
            "type": "boolean"
        },
        "ApplicationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Application"
            }
        },
        "Application": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Version": {
                    "$ref": "#/$defs/String"
                },
                "Args": {
                    "$ref": "#/$defs/StringList"
                },
                "AdditionalInfo": {
                    "$ref": "#/$defs/StringMap"
                }
            }
        },
        "ScaleDownBehavior": {
            "enum": [
                "TERMINATE_AT_INSTANCE_HOUR",
                "TERMINATE_AT_TASK_COMPLETION"
            ]
        },
        "RepoUpgradeOnBoot": {
            "enum": [
                "SECURITY",
                "NONE"
            ]
        },
        "KerberosAttributes": {
            "type": "object",
            "properties": {
                "Realm": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "KdcAdminPassword": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "CrossRealmTrustPrincipalPassword": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "ADDomainJoinUser": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "ADDomainJoinPassword": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "OptionalArnType": {
            "type": "string"
        },
        "PlacementGroupConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PlacementGroupConfig"
            }
        },
        "PlacementGroupConfig": {
            "type": "object",
            "properties": {
                "InstanceRole": {
                    "$ref": "#/$defs/InstanceRoleType"
                },
                "PlacementStrategy": {
                    "$ref": "#/$defs/PlacementGroupStrategy"
                }
            }
        },
        "PlacementGroupStrategy": {
            "enum": [
                "SPREAD",
                "PARTITION",
                "CLUSTER",
                "NONE"
            ]
        },
        "DescribeClusterInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                }
            }
        },
        "DescribeJobFlowsOutput": {
            "type": "object",
            "properties": {
                "JobFlows": {
                    "$ref": "#/$defs/JobFlowDetailList"
                }
            }
        },
        "JobFlowDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobFlowDetail"
            }
        },
        "JobFlowDetail": {
            "type": "object",
            "properties": {
                "JobFlowId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "LogUri": {
                    "$ref": "#/$defs/XmlString"
                },
                "LogEncryptionKmsKeyId": {
                    "$ref": "#/$defs/XmlString"
                },
                "AmiVersion": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "ExecutionStatusDetail": {
                    "$ref": "#/$defs/JobFlowExecutionStatusDetail"
                },
                "Instances": {
                    "$ref": "#/$defs/JobFlowInstancesDetail"
                },
                "Steps": {
                    "$ref": "#/$defs/StepDetailList"
                },
                "BootstrapActions": {
                    "$ref": "#/$defs/BootstrapActionDetailList"
                },
                "SupportedProducts": {
                    "$ref": "#/$defs/SupportedProductsList"
                },
                "VisibleToAllUsers": {
                    "$ref": "#/$defs/Boolean"
                },
                "JobFlowRole": {
                    "$ref": "#/$defs/XmlString"
                },
                "ServiceRole": {
                    "$ref": "#/$defs/XmlString"
                },
                "AutoScalingRole": {
                    "$ref": "#/$defs/XmlString"
                },
                "ScaleDownBehavior": {
                    "$ref": "#/$defs/ScaleDownBehavior"
                }
            }
        },
        "JobFlowExecutionStatusDetail": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/JobFlowExecutionState"
                },
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "StartDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "ReadyDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "EndDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "LastStateChangeReason": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "JobFlowExecutionState": {
            "enum": [
                "STARTING",
                "BOOTSTRAPPING",
                "RUNNING",
                "WAITING",
                "SHUTTING_DOWN",
                "TERMINATED",
                "COMPLETED",
                "FAILED"
            ]
        },
        "JobFlowInstancesDetail": {
            "type": "object",
            "properties": {
                "MasterInstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "MasterPublicDnsName": {
                    "$ref": "#/$defs/XmlString"
                },
                "MasterInstanceId": {
                    "$ref": "#/$defs/XmlString"
                },
                "SlaveInstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "InstanceGroups": {
                    "$ref": "#/$defs/InstanceGroupDetailList"
                },
                "NormalizedInstanceHours": {
                    "$ref": "#/$defs/Integer"
                },
                "Ec2KeyName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Ec2SubnetId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Placement": {
                    "$ref": "#/$defs/PlacementType"
                },
                "KeepJobFlowAliveWhenNoSteps": {
                    "$ref": "#/$defs/Boolean"
                },
                "TerminationProtected": {
                    "$ref": "#/$defs/Boolean"
                },
                "UnhealthyNodeReplacement": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "HadoopVersion": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "InstanceGroupDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceGroupDetail"
            }
        },
        "InstanceGroupDetail": {
            "type": "object",
            "properties": {
                "InstanceGroupId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Market": {
                    "$ref": "#/$defs/MarketType"
                },
                "InstanceRole": {
                    "$ref": "#/$defs/InstanceRoleType"
                },
                "BidPrice": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "InstanceRequestCount": {
                    "$ref": "#/$defs/Integer"
                },
                "InstanceRunningCount": {
                    "$ref": "#/$defs/Integer"
                },
                "State": {
                    "$ref": "#/$defs/InstanceGroupState"
                },
                "LastStateChangeReason": {
                    "$ref": "#/$defs/XmlString"
                },
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "StartDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "ReadyDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "EndDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "CustomAmiId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "InstanceGroupState": {
            "enum": [
                "PROVISIONING",
                "BOOTSTRAPPING",
                "RUNNING",
                "RECONFIGURING",
                "RESIZING",
                "SUSPENDED",
                "TERMINATING",
                "TERMINATED",
                "ARRESTED",
                "SHUTTING_DOWN",
                "ENDED"
            ]
        },
        "PlacementType": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/XmlString"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/XmlStringMaxLen256List"
                }
            }
        },
        "StepDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StepDetail"
            }
        },
        "StepDetail": {
            "type": "object",
            "properties": {
                "StepConfig": {
                    "$ref": "#/$defs/StepConfig"
                },
                "ExecutionStatusDetail": {
                    "$ref": "#/$defs/StepExecutionStatusDetail"
                }
            }
        },
        "StepExecutionStatusDetail": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/StepExecutionState"
                },
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "StartDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "EndDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "LastStateChangeReason": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "StepExecutionState": {
            "enum": [
                "PENDING",
                "RUNNING",
                "CONTINUE",
                "COMPLETED",
                "CANCELLED",
                "FAILED",
                "INTERRUPTED"
            ]
        },
        "BootstrapActionDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BootstrapActionDetail"
            }
        },
        "BootstrapActionDetail": {
            "type": "object",
            "properties": {
                "BootstrapActionConfig": {
                    "$ref": "#/$defs/BootstrapActionConfig"
                }
            }
        },
        "BootstrapActionConfig": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "ScriptBootstrapAction": {
                    "$ref": "#/$defs/ScriptBootstrapActionConfig"
                }
            }
        },
        "ScriptBootstrapActionConfig": {
            "type": "object",
            "properties": {
                "Path": {
                    "$ref": "#/$defs/XmlString"
                },
                "Args": {
                    "$ref": "#/$defs/XmlStringList"
                }
            }
        },
        "SupportedProductsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen256"
            }
        },
        "DescribeJobFlowsInput": {
            "type": "object",
            "properties": {
                "CreatedAfter": {
                    "$ref": "#/$defs/Date"
                },
                "CreatedBefore": {
                    "$ref": "#/$defs/Date"
                },
                "JobFlowIds": {
                    "$ref": "#/$defs/XmlStringList"
                },
                "JobFlowStates": {
                    "$ref": "#/$defs/JobFlowExecutionStateList"
                }
            }
        },
        "JobFlowExecutionStateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobFlowExecutionState"
            }
        },
        "DescribeNotebookExecutionOutput": {
            "type": "object",
            "properties": {
                "NotebookExecution": {
                    "$ref": "#/$defs/NotebookExecution"
                }
            }
        },
        "NotebookExecution": {
            "type": "object",
            "properties": {
                "NotebookExecutionId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "EditorId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "ExecutionEngine": {
                    "$ref": "#/$defs/ExecutionEngineConfig"
                },
                "NotebookExecutionName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "NotebookParams": {
                    "$ref": "#/$defs/XmlString"
                },
                "Status": {
                    "$ref": "#/$defs/NotebookExecutionStatus"
                },
                "StartTime": {
                    "$ref": "#/$defs/Date"
                },
                "EndTime": {
                    "$ref": "#/$defs/Date"
                },
                "Arn": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "OutputNotebookURI": {
                    "$ref": "#/$defs/XmlString"
                },
                "LastStateChangeReason": {
                    "$ref": "#/$defs/XmlString"
                },
                "NotebookInstanceSecurityGroupId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "NotebookS3Location": {
                    "$ref": "#/$defs/NotebookS3LocationForOutput"
                },
                "OutputNotebookS3Location": {
                    "$ref": "#/$defs/OutputNotebookS3LocationForOutput"
                },
                "OutputNotebookFormat": {
                    "$ref": "#/$defs/OutputNotebookFormat"
                },
                "EnvironmentVariables": {
                    "$ref": "#/$defs/EnvironmentVariablesMap"
                }
            }
        },
        "ExecutionEngineConfig": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Type": {
                    "$ref": "#/$defs/ExecutionEngineType"
                },
                "MasterInstanceSecurityGroupId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "ExecutionRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                }
            }
        },
        "ExecutionEngineType": {
            "enum": [
                "EMR"
            ]
        },
        "IAMRoleArn": {
            "type": "string"
        },
        "NotebookExecutionStatus": {
            "enum": [
                "START_PENDING",
                "STARTING",
                "RUNNING",
                "FINISHING",
                "FINISHED",
                "FAILING",
                "FAILED",
                "STOP_PENDING",
                "STOPPING",
                "STOPPED"
            ]
        },
        "NotebookS3LocationForOutput": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Key": {
                    "$ref": "#/$defs/UriString"
                }
            }
        },
        "UriString": {
            "type": "string"
        },
        "OutputNotebookS3LocationForOutput": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Key": {
                    "$ref": "#/$defs/UriString"
                }
            }
        },
        "OutputNotebookFormat": {
            "enum": [
                "HTML"
            ]
        },
        "EnvironmentVariablesMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/XmlString"
            }
        },
        "DescribeNotebookExecutionInput": {
            "type": "object",
            "properties": {
                "NotebookExecutionId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "DescribeReleaseLabelOutput": {
            "type": "object",
            "properties": {
                "ReleaseLabel": {
                    "$ref": "#/$defs/String"
                },
                "Applications": {
                    "$ref": "#/$defs/SimplifiedApplicationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "AvailableOSReleases": {
                    "$ref": "#/$defs/OSReleaseList"
                }
            }
        },
        "SimplifiedApplicationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SimplifiedApplication"
            }
        },
        "SimplifiedApplication": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Version": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "OSReleaseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OSRelease"
            }
        },
        "OSRelease": {
            "type": "object",
            "properties": {
                "Label": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeReleaseLabelInput": {
            "type": "object",
            "properties": {
                "ReleaseLabel": {
                    "$ref": "#/$defs/String"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsNumber"
                }
            }
        },
        "MaxResultsNumber": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeSecurityConfigurationOutput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlString"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/String"
                },
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "DescribeSecurityConfigurationInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "DescribeStepOutput": {
            "type": "object",
            "properties": {
                "Step": {
                    "$ref": "#/$defs/Step"
                }
            }
        },
        "Step": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/StepId"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Config": {
                    "$ref": "#/$defs/HadoopStepConfig"
                },
                "ActionOnFailure": {
                    "$ref": "#/$defs/ActionOnFailure"
                },
                "Status": {
                    "$ref": "#/$defs/StepStatus"
                },
                "ExecutionRoleArn": {
                    "$ref": "#/$defs/OptionalArnType"
                }
            }
        },
        "HadoopStepConfig": {
            "type": "object",
            "properties": {
                "Jar": {
                    "$ref": "#/$defs/String"
                },
                "Properties": {
                    "$ref": "#/$defs/StringMap"
                },
                "MainClass": {
                    "$ref": "#/$defs/String"
                },
                "Args": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "StepStatus": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/StepState"
                },
                "StateChangeReason": {
                    "$ref": "#/$defs/StepStateChangeReason"
                },
                "FailureDetails": {
                    "$ref": "#/$defs/FailureDetails"
                },
                "Timeline": {
                    "$ref": "#/$defs/StepTimeline"
                }
            }
        },
        "StepState": {
            "enum": [
                "PENDING",
                "CANCEL_PENDING",
                "RUNNING",
                "COMPLETED",
                "CANCELLED",
                "FAILED",
                "INTERRUPTED"
            ]
        },
        "StepStateChangeReason": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/StepStateChangeReasonCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StepStateChangeReasonCode": {
            "enum": [
                "NONE"
            ]
        },
        "FailureDetails": {
            "type": "object",
            "properties": {
                "Reason": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                },
                "LogFile": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StepTimeline": {
            "type": "object",
            "properties": {
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "StartDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "EndDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "DescribeStepInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "StepId": {
                    "$ref": "#/$defs/StepId"
                }
            }
        },
        "DescribeStudioOutput": {
            "type": "object",
            "properties": {
                "Studio": {
                    "$ref": "#/$defs/Studio"
                }
            }
        },
        "Studio": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "StudioArn": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Description": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "AuthMode": {
                    "$ref": "#/$defs/AuthMode"
                },
                "VpcId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIdList"
                },
                "ServiceRole": {
                    "$ref": "#/$defs/XmlString"
                },
                "UserRole": {
                    "$ref": "#/$defs/XmlString"
                },
                "WorkspaceSecurityGroupId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "EngineSecurityGroupId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Url": {
                    "$ref": "#/$defs/XmlString"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Date"
                },
                "DefaultS3Location": {
                    "$ref": "#/$defs/XmlString"
                },
                "IdpAuthUrl": {
                    "$ref": "#/$defs/XmlString"
                },
                "IdpRelayStateParameterName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "IdcInstanceArn": {
                    "$ref": "#/$defs/ArnType"
                },
                "TrustedIdentityPropagationEnabled": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "IdcUserAssignment": {
                    "$ref": "#/$defs/IdcUserAssignment"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "DescribeStudioInput": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "GetAutoTerminationPolicyOutput": {
            "type": "object",
            "properties": {
                "AutoTerminationPolicy": {
                    "$ref": "#/$defs/AutoTerminationPolicy"
                }
            }
        },
        "AutoTerminationPolicy": {
            "type": "object",
            "properties": {
                "IdleTimeout": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "GetAutoTerminationPolicyInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                }
            }
        },
        "GetBlockPublicAccessConfigurationOutput": {
            "type": "object",
            "properties": {
                "BlockPublicAccessConfiguration": {
                    "$ref": "#/$defs/BlockPublicAccessConfiguration"
                },
                "BlockPublicAccessConfigurationMetadata": {
                    "$ref": "#/$defs/BlockPublicAccessConfigurationMetadata"
                }
            }
        },
        "BlockPublicAccessConfiguration": {
            "type": "object",
            "properties": {
                "BlockPublicSecurityGroupRules": {
                    "$ref": "#/$defs/Boolean"
                },
                "PermittedPublicSecurityGroupRuleRanges": {
                    "$ref": "#/$defs/PortRanges"
                },
                "Classification": {
                    "$ref": "#/$defs/String"
                },
                "Configurations": {
                    "$ref": "#/$defs/ConfigurationList"
                },
                "Properties": {
                    "$ref": "#/$defs/StringMap"
                }
            }
        },
        "PortRanges": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PortRange"
            }
        },
        "PortRange": {
            "type": "object",
            "properties": {
                "MinRange": {
                    "$ref": "#/$defs/Port"
                },
                "MaxRange": {
                    "$ref": "#/$defs/Port"
                }
            }
        },
        "Port": {
            "type": "integer",
            "format": "int32"
        },
        "BlockPublicAccessConfigurationMetadata": {
            "type": "object",
            "properties": {
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "CreatedByArn": {
                    "$ref": "#/$defs/ArnType"
                }
            }
        },
        "GetBlockPublicAccessConfigurationInput": {
            "type": "object",
            "properties": {}
        },
        "GetClusterSessionCredentialsOutput": {
            "type": "object",
            "properties": {
                "Credentials": {
                    "$ref": "#/$defs/Credentials"
                },
                "ExpiresAt": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "Credentials": {
            "type": "object",
            "properties": {
                "UsernamePassword": {
                    "$ref": "#/$defs/UsernamePassword"
                }
            }
        },
        "UsernamePassword": {
            "type": "object",
            "properties": {
                "Username": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Password": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "GetClusterSessionCredentialsInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "ExecutionRoleArn": {
                    "$ref": "#/$defs/ArnType"
                }
            }
        },
        "GetManagedScalingPolicyOutput": {
            "type": "object",
            "properties": {
                "ManagedScalingPolicy": {
                    "$ref": "#/$defs/ManagedScalingPolicy"
                }
            }
        },
        "ManagedScalingPolicy": {
            "type": "object",
            "properties": {
                "ComputeLimits": {
                    "$ref": "#/$defs/ComputeLimits"
                }
            }
        },
        "ComputeLimits": {
            "type": "object",
            "properties": {
                "UnitType": {
                    "$ref": "#/$defs/ComputeLimitsUnitType"
                },
                "MinimumCapacityUnits": {
                    "$ref": "#/$defs/Integer"
                },
                "MaximumCapacityUnits": {
                    "$ref": "#/$defs/Integer"
                },
                "MaximumOnDemandCapacityUnits": {
                    "$ref": "#/$defs/Integer"
                },
                "MaximumCoreCapacityUnits": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ComputeLimitsUnitType": {
            "enum": [
                "InstanceFleetUnits",
                "Instances",
                "VCPU"
            ]
        },
        "GetManagedScalingPolicyInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                }
            }
        },
        "GetStudioSessionMappingOutput": {
            "type": "object",
            "properties": {
                "SessionMapping": {
                    "$ref": "#/$defs/SessionMappingDetail"
                }
            }
        },
        "SessionMappingDetail": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                },
                "SessionPolicyArn": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Date"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "GetStudioSessionMappingInput": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                }
            }
        },
        "ListBootstrapActionsOutput": {
            "type": "object",
            "properties": {
                "BootstrapActions": {
                    "$ref": "#/$defs/CommandList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "CommandList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Command"
            }
        },
        "Command": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "ScriptPath": {
                    "$ref": "#/$defs/String"
                },
                "Args": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "Marker": {
            "type": "string"
        },
        "ListBootstrapActionsInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "ListClustersOutput": {
            "type": "object",
            "properties": {
                "Clusters": {
                    "$ref": "#/$defs/ClusterSummaryList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "ClusterSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClusterSummary"
            }
        },
        "ClusterSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ClusterId"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ClusterStatus"
                },
                "NormalizedInstanceHours": {
                    "$ref": "#/$defs/Integer"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/ArnType"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/OptionalArnType"
                }
            }
        },
        "ListClustersInput": {
            "type": "object",
            "properties": {
                "CreatedAfter": {
                    "$ref": "#/$defs/Date"
                },
                "CreatedBefore": {
                    "$ref": "#/$defs/Date"
                },
                "ClusterStates": {
                    "$ref": "#/$defs/ClusterStateList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "ClusterStateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClusterState"
            }
        },
        "ListInstanceFleetsOutput": {
            "type": "object",
            "properties": {
                "InstanceFleets": {
                    "$ref": "#/$defs/InstanceFleetList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "InstanceFleetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceFleet"
            }
        },
        "InstanceFleet": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/InstanceFleetId"
                },
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Status": {
                    "$ref": "#/$defs/InstanceFleetStatus"
                },
                "InstanceFleetType": {
                    "$ref": "#/$defs/InstanceFleetType"
                },
                "TargetOnDemandCapacity": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "TargetSpotCapacity": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "ProvisionedOnDemandCapacity": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "ProvisionedSpotCapacity": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "InstanceTypeSpecifications": {
                    "$ref": "#/$defs/InstanceTypeSpecificationList"
                },
                "LaunchSpecifications": {
                    "$ref": "#/$defs/InstanceFleetProvisioningSpecifications"
                },
                "ResizeSpecifications": {
                    "$ref": "#/$defs/InstanceFleetResizingSpecifications"
                }
            }
        },
        "InstanceFleetStatus": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/InstanceFleetState"
                },
                "StateChangeReason": {
                    "$ref": "#/$defs/InstanceFleetStateChangeReason"
                },
                "Timeline": {
                    "$ref": "#/$defs/InstanceFleetTimeline"
                }
            }
        },
        "InstanceFleetState": {
            "enum": [
                "PROVISIONING",
                "BOOTSTRAPPING",
                "RUNNING",
                "RESIZING",
                "SUSPENDED",
                "TERMINATING",
                "TERMINATED"
            ]
        },
        "InstanceFleetStateChangeReason": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/InstanceFleetStateChangeReasonCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceFleetStateChangeReasonCode": {
            "enum": [
                "INTERNAL_ERROR",
                "VALIDATION_ERROR",
                "INSTANCE_FAILURE",
                "CLUSTER_TERMINATED"
            ]
        },
        "InstanceFleetTimeline": {
            "type": "object",
            "properties": {
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "ReadyDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "EndDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "InstanceTypeSpecificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceTypeSpecification"
            }
        },
        "InstanceTypeSpecification": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "WeightedCapacity": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "BidPrice": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "BidPriceAsPercentageOfOnDemandPrice": {
                    "$ref": "#/$defs/NonNegativeDouble"
                },
                "Configurations": {
                    "$ref": "#/$defs/ConfigurationList"
                },
                "EbsBlockDevices": {
                    "$ref": "#/$defs/EbsBlockDeviceList"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "CustomAmiId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Priority": {
                    "$ref": "#/$defs/NonNegativeDouble"
                }
            }
        },
        "EbsBlockDeviceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EbsBlockDevice"
            }
        },
        "EbsBlockDevice": {
            "type": "object",
            "properties": {
                "VolumeSpecification": {
                    "$ref": "#/$defs/VolumeSpecification"
                },
                "Device": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListInstanceFleetsInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "ListInstanceGroupsOutput": {
            "type": "object",
            "properties": {
                "InstanceGroups": {
                    "$ref": "#/$defs/InstanceGroupList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "InstanceGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceGroup"
            }
        },
        "InstanceGroup": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/InstanceGroupId"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Market": {
                    "$ref": "#/$defs/MarketType"
                },
                "InstanceGroupType": {
                    "$ref": "#/$defs/InstanceGroupType"
                },
                "BidPrice": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "RequestedInstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "RunningInstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Status": {
                    "$ref": "#/$defs/InstanceGroupStatus"
                },
                "Configurations": {
                    "$ref": "#/$defs/ConfigurationList"
                },
                "ConfigurationsVersion": {
                    "$ref": "#/$defs/Long"
                },
                "LastSuccessfullyAppliedConfigurations": {
                    "$ref": "#/$defs/ConfigurationList"
                },
                "LastSuccessfullyAppliedConfigurationsVersion": {
                    "$ref": "#/$defs/Long"
                },
                "EbsBlockDevices": {
                    "$ref": "#/$defs/EbsBlockDeviceList"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "ShrinkPolicy": {
                    "$ref": "#/$defs/ShrinkPolicy"
                },
                "AutoScalingPolicy": {
                    "$ref": "#/$defs/AutoScalingPolicyDescription"
                },
                "CustomAmiId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "InstanceGroupId": {
            "type": "string"
        },
        "InstanceGroupType": {
            "enum": [
                "MASTER",
                "CORE",
                "TASK"
            ]
        },
        "InstanceGroupStatus": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/InstanceGroupState"
                },
                "StateChangeReason": {
                    "$ref": "#/$defs/InstanceGroupStateChangeReason"
                },
                "Timeline": {
                    "$ref": "#/$defs/InstanceGroupTimeline"
                }
            }
        },
        "InstanceGroupStateChangeReason": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/InstanceGroupStateChangeReasonCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceGroupStateChangeReasonCode": {
            "enum": [
                "INTERNAL_ERROR",
                "VALIDATION_ERROR",
                "INSTANCE_FAILURE",
                "CLUSTER_TERMINATED"
            ]
        },
        "InstanceGroupTimeline": {
            "type": "object",
            "properties": {
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "ReadyDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "EndDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "ShrinkPolicy": {
            "type": "object",
            "properties": {
                "DecommissionTimeout": {
                    "$ref": "#/$defs/Integer"
                },
                "InstanceResizePolicy": {
                    "$ref": "#/$defs/InstanceResizePolicy"
                }
            }
        },
        "InstanceResizePolicy": {
            "type": "object",
            "properties": {
                "InstancesToTerminate": {
                    "$ref": "#/$defs/EC2InstanceIdsList"
                },
                "InstancesToProtect": {
                    "$ref": "#/$defs/EC2InstanceIdsList"
                },
                "InstanceTerminationTimeout": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "EC2InstanceIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceId"
            }
        },
        "InstanceId": {
            "type": "string"
        },
        "AutoScalingPolicyDescription": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/AutoScalingPolicyStatus"
                },
                "Constraints": {
                    "$ref": "#/$defs/ScalingConstraints"
                },
                "Rules": {
                    "$ref": "#/$defs/ScalingRuleList"
                }
            }
        },
        "AutoScalingPolicyStatus": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/AutoScalingPolicyState"
                },
                "StateChangeReason": {
                    "$ref": "#/$defs/AutoScalingPolicyStateChangeReason"
                }
            }
        },
        "AutoScalingPolicyState": {
            "enum": [
                "PENDING",
                "ATTACHING",
                "ATTACHED",
                "DETACHING",
                "DETACHED",
                "FAILED"
            ]
        },
        "AutoScalingPolicyStateChangeReason": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/AutoScalingPolicyStateChangeReasonCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AutoScalingPolicyStateChangeReasonCode": {
            "enum": [
                "USER_REQUEST",
                "PROVISION_FAILURE",
                "CLEANUP_FAILURE"
            ]
        },
        "ListInstanceGroupsInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "ListInstancesOutput": {
            "type": "object",
            "properties": {
                "Instances": {
                    "$ref": "#/$defs/InstanceList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "InstanceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Instance"
            }
        },
        "Instance": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/InstanceId"
                },
                "Ec2InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "PublicDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PublicIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/InstanceStatus"
                },
                "InstanceGroupId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceFleetId": {
                    "$ref": "#/$defs/InstanceFleetId"
                },
                "Market": {
                    "$ref": "#/$defs/MarketType"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "EbsVolumes": {
                    "$ref": "#/$defs/EbsVolumeList"
                }
            }
        },
        "InstanceStatus": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/InstanceState"
                },
                "StateChangeReason": {
                    "$ref": "#/$defs/InstanceStateChangeReason"
                },
                "Timeline": {
                    "$ref": "#/$defs/InstanceTimeline"
                }
            }
        },
        "InstanceState": {
            "enum": [
                "AWAITING_FULFILLMENT",
                "PROVISIONING",
                "BOOTSTRAPPING",
                "RUNNING",
                "TERMINATED"
            ]
        },
        "InstanceStateChangeReason": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/InstanceStateChangeReasonCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceStateChangeReasonCode": {
            "enum": [
                "INTERNAL_ERROR",
                "VALIDATION_ERROR",
                "INSTANCE_FAILURE",
                "BOOTSTRAP_FAILURE",
                "CLUSTER_TERMINATED"
            ]
        },
        "InstanceTimeline": {
            "type": "object",
            "properties": {
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "ReadyDateTime": {
                    "$ref": "#/$defs/Date"
                },
                "EndDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "EbsVolumeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EbsVolume"
            }
        },
        "EbsVolume": {
            "type": "object",
            "properties": {
                "Device": {
                    "$ref": "#/$defs/String"
                },
                "VolumeId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListInstancesInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "InstanceGroupId": {
                    "$ref": "#/$defs/InstanceGroupId"
                },
                "InstanceGroupTypes": {
                    "$ref": "#/$defs/InstanceGroupTypeList"
                },
                "InstanceFleetId": {
                    "$ref": "#/$defs/InstanceFleetId"
                },
                "InstanceFleetType": {
                    "$ref": "#/$defs/InstanceFleetType"
                },
                "InstanceStates": {
                    "$ref": "#/$defs/InstanceStateList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "InstanceGroupTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceGroupType"
            }
        },
        "InstanceStateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceState"
            }
        },
        "ListNotebookExecutionsOutput": {
            "type": "object",
            "properties": {
                "NotebookExecutions": {
                    "$ref": "#/$defs/NotebookExecutionSummaryList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "NotebookExecutionSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NotebookExecutionSummary"
            }
        },
        "NotebookExecutionSummary": {
            "type": "object",
            "properties": {
                "NotebookExecutionId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "EditorId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "NotebookExecutionName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Status": {
                    "$ref": "#/$defs/NotebookExecutionStatus"
                },
                "StartTime": {
                    "$ref": "#/$defs/Date"
                },
                "EndTime": {
                    "$ref": "#/$defs/Date"
                },
                "NotebookS3Location": {
                    "$ref": "#/$defs/NotebookS3LocationForOutput"
                },
                "ExecutionEngineId": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "ListNotebookExecutionsInput": {
            "type": "object",
            "properties": {
                "EditorId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Status": {
                    "$ref": "#/$defs/NotebookExecutionStatus"
                },
                "From": {
                    "$ref": "#/$defs/Date"
                },
                "To": {
                    "$ref": "#/$defs/Date"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "ExecutionEngineId": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "ListReleaseLabelsOutput": {
            "type": "object",
            "properties": {
                "ReleaseLabels": {
                    "$ref": "#/$defs/StringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListReleaseLabelsInput": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/ReleaseLabelFilter"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsNumber"
                }
            }
        },
        "ReleaseLabelFilter": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/String"
                },
                "Application": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListSecurityConfigurationsOutput": {
            "type": "object",
            "properties": {
                "SecurityConfigurations": {
                    "$ref": "#/$defs/SecurityConfigurationList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "SecurityConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityConfigurationSummary"
            }
        },
        "SecurityConfigurationSummary": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlString"
                },
                "CreationDateTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "ListSecurityConfigurationsInput": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "ListStepsOutput": {
            "type": "object",
            "properties": {
                "Steps": {
                    "$ref": "#/$defs/StepSummaryList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "StepSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StepSummary"
            }
        },
        "StepSummary": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/StepId"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Config": {
                    "$ref": "#/$defs/HadoopStepConfig"
                },
                "ActionOnFailure": {
                    "$ref": "#/$defs/ActionOnFailure"
                },
                "Status": {
                    "$ref": "#/$defs/StepStatus"
                }
            }
        },
        "ListStepsInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "StepStates": {
                    "$ref": "#/$defs/StepStateList"
                },
                "StepIds": {
                    "$ref": "#/$defs/XmlStringList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "StepStateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StepState"
            }
        },
        "ListStudiosOutput": {
            "type": "object",
            "properties": {
                "Studios": {
                    "$ref": "#/$defs/StudioSummaryList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "StudioSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StudioSummary"
            }
        },
        "StudioSummary": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "VpcId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Description": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Url": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "AuthMode": {
                    "$ref": "#/$defs/AuthMode"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "ListStudiosInput": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "ListStudioSessionMappingsOutput": {
            "type": "object",
            "properties": {
                "SessionMappings": {
                    "$ref": "#/$defs/SessionMappingSummaryList"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "SessionMappingSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SessionMappingSummary"
            }
        },
        "SessionMappingSummary": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                },
                "SessionPolicyArn": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "ListStudioSessionMappingsInput": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "ListSupportedInstanceTypesOutput": {
            "type": "object",
            "properties": {
                "SupportedInstanceTypes": {
                    "$ref": "#/$defs/SupportedInstanceTypesList"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SupportedInstanceTypesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SupportedInstanceType"
            }
        },
        "SupportedInstanceType": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "MemoryGB": {
                    "$ref": "#/$defs/Float"
                },
                "StorageGB": {
                    "$ref": "#/$defs/Integer"
                },
                "VCPU": {
                    "$ref": "#/$defs/Integer"
                },
                "Is64BitsOnly": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceFamilyId": {
                    "$ref": "#/$defs/String"
                },
                "EbsOptimizedAvailable": {
                    "$ref": "#/$defs/Boolean"
                },
                "EbsOptimizedByDefault": {
                    "$ref": "#/$defs/Boolean"
                },
                "NumberOfDisks": {
                    "$ref": "#/$defs/Integer"
                },
                "EbsStorageOnly": {
                    "$ref": "#/$defs/Boolean"
                },
                "Architecture": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Float": {
            "type": "number",
            "format": "float"
        },
        "ListSupportedInstanceTypesInput": {
            "type": "object",
            "properties": {
                "ReleaseLabel": {
                    "$ref": "#/$defs/String"
                },
                "Marker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyClusterOutput": {
            "type": "object",
            "properties": {
                "StepConcurrencyLevel": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ModifyClusterInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/String"
                },
                "StepConcurrencyLevel": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ModifyInstanceFleetInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "InstanceFleet": {
                    "$ref": "#/$defs/InstanceFleetModifyConfig"
                }
            }
        },
        "InstanceFleetModifyConfig": {
            "type": "object",
            "properties": {
                "InstanceFleetId": {
                    "$ref": "#/$defs/InstanceFleetId"
                },
                "TargetOnDemandCapacity": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "TargetSpotCapacity": {
                    "$ref": "#/$defs/WholeNumber"
                },
                "ResizeSpecifications": {
                    "$ref": "#/$defs/InstanceFleetResizingSpecifications"
                },
                "InstanceTypeConfigs": {
                    "$ref": "#/$defs/InstanceTypeConfigList"
                }
            }
        },
        "ModifyInstanceGroupsInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "InstanceGroups": {
                    "$ref": "#/$defs/InstanceGroupModifyConfigList"
                }
            }
        },
        "InstanceGroupModifyConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceGroupModifyConfig"
            }
        },
        "InstanceGroupModifyConfig": {
            "type": "object",
            "properties": {
                "InstanceGroupId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "EC2InstanceIdsToTerminate": {
                    "$ref": "#/$defs/EC2InstanceIdsToTerminateList"
                },
                "ShrinkPolicy": {
                    "$ref": "#/$defs/ShrinkPolicy"
                },
                "ReconfigurationType": {
                    "$ref": "#/$defs/ReconfigurationType"
                },
                "Configurations": {
                    "$ref": "#/$defs/ConfigurationList"
                }
            }
        },
        "EC2InstanceIdsToTerminateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceId"
            }
        },
        "ReconfigurationType": {
            "enum": [
                "OVERWRITE",
                "MERGE"
            ]
        },
        "PutAutoScalingPolicyOutput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "InstanceGroupId": {
                    "$ref": "#/$defs/InstanceGroupId"
                },
                "AutoScalingPolicy": {
                    "$ref": "#/$defs/AutoScalingPolicyDescription"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/ArnType"
                }
            }
        },
        "PutAutoScalingPolicyInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "InstanceGroupId": {
                    "$ref": "#/$defs/InstanceGroupId"
                },
                "AutoScalingPolicy": {
                    "$ref": "#/$defs/AutoScalingPolicy"
                }
            }
        },
        "PutAutoTerminationPolicyOutput": {
            "type": "object",
            "properties": {}
        },
        "PutAutoTerminationPolicyInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "AutoTerminationPolicy": {
                    "$ref": "#/$defs/AutoTerminationPolicy"
                }
            }
        },
        "PutBlockPublicAccessConfigurationOutput": {
            "type": "object",
            "properties": {}
        },
        "PutBlockPublicAccessConfigurationInput": {
            "type": "object",
            "properties": {
                "BlockPublicAccessConfiguration": {
                    "$ref": "#/$defs/BlockPublicAccessConfiguration"
                }
            }
        },
        "PutManagedScalingPolicyOutput": {
            "type": "object",
            "properties": {}
        },
        "PutManagedScalingPolicyInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "ManagedScalingPolicy": {
                    "$ref": "#/$defs/ManagedScalingPolicy"
                }
            }
        },
        "RemoveAutoScalingPolicyOutput": {
            "type": "object",
            "properties": {}
        },
        "RemoveAutoScalingPolicyInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "InstanceGroupId": {
                    "$ref": "#/$defs/InstanceGroupId"
                }
            }
        },
        "RemoveAutoTerminationPolicyOutput": {
            "type": "object",
            "properties": {}
        },
        "RemoveAutoTerminationPolicyInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                }
            }
        },
        "RemoveManagedScalingPolicyOutput": {
            "type": "object",
            "properties": {}
        },
        "RemoveManagedScalingPolicyInput": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                }
            }
        },
        "RemoveTagsOutput": {
            "type": "object",
            "properties": {}
        },
        "RemoveTagsInput": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "TagKeys": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "RunJobFlowOutput": {
            "type": "object",
            "properties": {
                "JobFlowId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "ClusterArn": {
                    "$ref": "#/$defs/ArnType"
                }
            }
        },
        "RunJobFlowInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "LogUri": {
                    "$ref": "#/$defs/XmlString"
                },
                "LogEncryptionKmsKeyId": {
                    "$ref": "#/$defs/XmlString"
                },
                "AdditionalInfo": {
                    "$ref": "#/$defs/XmlString"
                },
                "AmiVersion": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "ReleaseLabel": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Instances": {
                    "$ref": "#/$defs/JobFlowInstancesConfig"
                },
                "Steps": {
                    "$ref": "#/$defs/StepConfigList"
                },
                "BootstrapActions": {
                    "$ref": "#/$defs/BootstrapActionConfigList"
                },
                "SupportedProducts": {
                    "$ref": "#/$defs/SupportedProductsList"
                },
                "NewSupportedProducts": {
                    "$ref": "#/$defs/NewSupportedProductsList"
                },
                "Applications": {
                    "$ref": "#/$defs/ApplicationList"
                },
                "Configurations": {
                    "$ref": "#/$defs/ConfigurationList"
                },
                "VisibleToAllUsers": {
                    "$ref": "#/$defs/Boolean"
                },
                "JobFlowRole": {
                    "$ref": "#/$defs/XmlString"
                },
                "ServiceRole": {
                    "$ref": "#/$defs/XmlString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SecurityConfiguration": {
                    "$ref": "#/$defs/XmlString"
                },
                "AutoScalingRole": {
                    "$ref": "#/$defs/XmlString"
                },
                "ScaleDownBehavior": {
                    "$ref": "#/$defs/ScaleDownBehavior"
                },
                "CustomAmiId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "EbsRootVolumeSize": {
                    "$ref": "#/$defs/Integer"
                },
                "RepoUpgradeOnBoot": {
                    "$ref": "#/$defs/RepoUpgradeOnBoot"
                },
                "KerberosAttributes": {
                    "$ref": "#/$defs/KerberosAttributes"
                },
                "StepConcurrencyLevel": {
                    "$ref": "#/$defs/Integer"
                },
                "ManagedScalingPolicy": {
                    "$ref": "#/$defs/ManagedScalingPolicy"
                },
                "PlacementGroupConfigs": {
                    "$ref": "#/$defs/PlacementGroupConfigList"
                },
                "AutoTerminationPolicy": {
                    "$ref": "#/$defs/AutoTerminationPolicy"
                },
                "OSReleaseLabel": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "EbsRootVolumeIops": {
                    "$ref": "#/$defs/Integer"
                },
                "EbsRootVolumeThroughput": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "JobFlowInstancesConfig": {
            "type": "object",
            "properties": {
                "MasterInstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "SlaveInstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "InstanceGroups": {
                    "$ref": "#/$defs/InstanceGroupConfigList"
                },
                "InstanceFleets": {
                    "$ref": "#/$defs/InstanceFleetConfigList"
                },
                "Ec2KeyName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Placement": {
                    "$ref": "#/$defs/PlacementType"
                },
                "KeepJobFlowAliveWhenNoSteps": {
                    "$ref": "#/$defs/Boolean"
                },
                "TerminationProtected": {
                    "$ref": "#/$defs/Boolean"
                },
                "UnhealthyNodeReplacement": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "HadoopVersion": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Ec2SubnetId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Ec2SubnetIds": {
                    "$ref": "#/$defs/XmlStringMaxLen256List"
                },
                "EmrManagedMasterSecurityGroup": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "EmrManagedSlaveSecurityGroup": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "ServiceAccessSecurityGroup": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "AdditionalMasterSecurityGroups": {
                    "$ref": "#/$defs/SecurityGroupsList"
                },
                "AdditionalSlaveSecurityGroups": {
                    "$ref": "#/$defs/SecurityGroupsList"
                }
            }
        },
        "InstanceFleetConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceFleetConfig"
            }
        },
        "SecurityGroupsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen256"
            }
        },
        "BootstrapActionConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BootstrapActionConfig"
            }
        },
        "NewSupportedProductsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SupportedProductConfig"
            }
        },
        "SupportedProductConfig": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Args": {
                    "$ref": "#/$defs/XmlStringList"
                }
            }
        },
        "SetKeepJobFlowAliveWhenNoStepsInput": {
            "type": "object",
            "properties": {
                "JobFlowIds": {
                    "$ref": "#/$defs/XmlStringList"
                },
                "KeepJobFlowAliveWhenNoSteps": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SetTerminationProtectionInput": {
            "type": "object",
            "properties": {
                "JobFlowIds": {
                    "$ref": "#/$defs/XmlStringList"
                },
                "TerminationProtected": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SetUnhealthyNodeReplacementInput": {
            "type": "object",
            "properties": {
                "JobFlowIds": {
                    "$ref": "#/$defs/XmlStringList"
                },
                "UnhealthyNodeReplacement": {
                    "$ref": "#/$defs/BooleanObject"
                }
            }
        },
        "SetVisibleToAllUsersInput": {
            "type": "object",
            "properties": {
                "JobFlowIds": {
                    "$ref": "#/$defs/XmlStringList"
                },
                "VisibleToAllUsers": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "StartNotebookExecutionOutput": {
            "type": "object",
            "properties": {
                "NotebookExecutionId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "StartNotebookExecutionInput": {
            "type": "object",
            "properties": {
                "EditorId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "RelativePath": {
                    "$ref": "#/$defs/XmlString"
                },
                "NotebookExecutionName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "NotebookParams": {
                    "$ref": "#/$defs/XmlString"
                },
                "ExecutionEngine": {
                    "$ref": "#/$defs/ExecutionEngineConfig"
                },
                "ServiceRole": {
                    "$ref": "#/$defs/XmlString"
                },
                "NotebookInstanceSecurityGroupId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "NotebookS3Location": {
                    "$ref": "#/$defs/NotebookS3LocationFromInput"
                },
                "OutputNotebookS3Location": {
                    "$ref": "#/$defs/OutputNotebookS3LocationFromInput"
                },
                "OutputNotebookFormat": {
                    "$ref": "#/$defs/OutputNotebookFormat"
                },
                "EnvironmentVariables": {
                    "$ref": "#/$defs/EnvironmentVariablesMap"
                }
            }
        },
        "NotebookS3LocationFromInput": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Key": {
                    "$ref": "#/$defs/UriString"
                }
            }
        },
        "OutputNotebookS3LocationFromInput": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Key": {
                    "$ref": "#/$defs/UriString"
                }
            }
        },
        "StopNotebookExecutionInput": {
            "type": "object",
            "properties": {
                "NotebookExecutionId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        },
        "TerminateJobFlowsInput": {
            "type": "object",
            "properties": {
                "JobFlowIds": {
                    "$ref": "#/$defs/XmlStringList"
                }
            }
        },
        "UpdateStudioInput": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Name": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "Description": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIdList"
                },
                "DefaultS3Location": {
                    "$ref": "#/$defs/XmlString"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "UpdateStudioSessionMappingInput": {
            "type": "object",
            "properties": {
                "StudioId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityId": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityName": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                },
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                },
                "SessionPolicyArn": {
                    "$ref": "#/$defs/XmlStringMaxLen256"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://elasticmapreduce-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://elasticmapreduce.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://elasticmapreduce-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://elasticmapreduce.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://elasticmapreduce.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}