{
    "name": "managedblockchain-query",
    "commands": [
        {
            "name": "BatchGetTokenBalance",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/batch-get-token-balance"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetTokenBalanceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetTokenBalanceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAssetContract",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/get-asset-contract"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAssetContractOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAssetContractInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTokenBalance",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/get-token-balance"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTokenBalanceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTokenBalanceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTransaction",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/get-transaction"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTransactionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTransactionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAssetContracts",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/list-asset-contracts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAssetContractsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAssetContractsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFilteredTransactionEvents",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/list-filtered-transaction-events"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFilteredTransactionEventsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFilteredTransactionEventsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTokenBalances",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/list-token-balances"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTokenBalancesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTokenBalancesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTransactionEvents",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/list-transaction-events"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTransactionEventsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTransactionEventsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTransactions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/list-transactions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTransactionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTransactionsInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchGetTokenBalanceOutput": {
            "type": "object",
            "properties": {
                "tokenBalances": {
                    "$ref": "#/$defs/BatchGetTokenBalanceOutputList"
                },
                "errors": {
                    "$ref": "#/$defs/BatchGetTokenBalanceErrors"
                }
            }
        },
        "BatchGetTokenBalanceOutputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetTokenBalanceOutputItem"
            }
        },
        "BatchGetTokenBalanceOutputItem": {
            "type": "object",
            "properties": {
                "ownerIdentifier": {
                    "$ref": "#/$defs/OwnerIdentifier"
                },
                "tokenIdentifier": {
                    "$ref": "#/$defs/TokenIdentifier"
                },
                "balance": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "atBlockchainInstant": {
                    "$ref": "#/$defs/BlockchainInstant"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/BlockchainInstant"
                }
            }
        },
        "OwnerIdentifier": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/$defs/ChainAddress"
                }
            }
        },
        "ChainAddress": {
            "type": "string"
        },
        "TokenIdentifier": {
            "type": "object",
            "properties": {
                "network": {
                    "$ref": "#/$defs/QueryNetwork"
                },
                "contractAddress": {
                    "$ref": "#/$defs/ChainAddress"
                },
                "tokenId": {
                    "$ref": "#/$defs/QueryTokenId"
                }
            }
        },
        "QueryNetwork": {
            "type": "string"
        },
        "QueryTokenId": {
            "type": "string"
        },
        "BlockchainInstant": {
            "type": "object",
            "properties": {
                "time": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                }
            }
        },
        "BatchGetTokenBalanceErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetTokenBalanceErrorItem"
            }
        },
        "BatchGetTokenBalanceErrorItem": {
            "type": "object",
            "properties": {
                "tokenIdentifier": {
                    "$ref": "#/$defs/TokenIdentifier"
                },
                "ownerIdentifier": {
                    "$ref": "#/$defs/OwnerIdentifier"
                },
                "atBlockchainInstant": {
                    "$ref": "#/$defs/BlockchainInstant"
                },
                "errorCode": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "errorMessage": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "errorType": {
                    "$ref": "#/$defs/ErrorType"
                }
            }
        },
        "ErrorType": {
            "type": "string"
        },
        "BatchGetTokenBalanceInput": {
            "type": "object",
            "properties": {
                "getTokenBalanceInputs": {
                    "$ref": "#/$defs/GetTokenBalanceInputList"
                }
            }
        },
        "GetTokenBalanceInputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetTokenBalanceInputItem"
            }
        },
        "BatchGetTokenBalanceInputItem": {
            "type": "object",
            "properties": {
                "tokenIdentifier": {
                    "$ref": "#/$defs/TokenIdentifier"
                },
                "ownerIdentifier": {
                    "$ref": "#/$defs/OwnerIdentifier"
                },
                "atBlockchainInstant": {
                    "$ref": "#/$defs/BlockchainInstant"
                }
            }
        },
        "GetAssetContractOutput": {
            "type": "object",
            "properties": {
                "contractIdentifier": {
                    "$ref": "#/$defs/ContractIdentifier"
                },
                "tokenStandard": {
                    "$ref": "#/$defs/QueryTokenStandard"
                },
                "deployerAddress": {
                    "$ref": "#/$defs/ChainAddress"
                },
                "metadata": {
                    "$ref": "#/$defs/ContractMetadata"
                }
            }
        },
        "ContractIdentifier": {
            "type": "object",
            "properties": {
                "network": {
                    "$ref": "#/$defs/QueryNetwork"
                },
                "contractAddress": {
                    "$ref": "#/$defs/ChainAddress"
                }
            }
        },
        "QueryTokenStandard": {
            "type": "string"
        },
        "ContractMetadata": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "symbol": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "decimals": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "GetAssetContractInput": {
            "type": "object",
            "properties": {
                "contractIdentifier": {
                    "$ref": "#/$defs/ContractIdentifier"
                }
            }
        },
        "GetTokenBalanceOutput": {
            "type": "object",
            "properties": {
                "ownerIdentifier": {
                    "$ref": "#/$defs/OwnerIdentifier"
                },
                "tokenIdentifier": {
                    "$ref": "#/$defs/TokenIdentifier"
                },
                "balance": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "atBlockchainInstant": {
                    "$ref": "#/$defs/BlockchainInstant"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/BlockchainInstant"
                }
            }
        },
        "GetTokenBalanceInput": {
            "type": "object",
            "properties": {
                "tokenIdentifier": {
                    "$ref": "#/$defs/TokenIdentifier"
                },
                "ownerIdentifier": {
                    "$ref": "#/$defs/OwnerIdentifier"
                },
                "atBlockchainInstant": {
                    "$ref": "#/$defs/BlockchainInstant"
                }
            }
        },
        "GetTransactionOutput": {
            "type": "object",
            "properties": {
                "transaction": {
                    "$ref": "#/$defs/Transaction"
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "network": {
                    "$ref": "#/$defs/QueryNetwork"
                },
                "blockHash": {
                    "$ref": "#/$defs/BlockHash"
                },
                "transactionHash": {
                    "$ref": "#/$defs/QueryTransactionHash"
                },
                "blockNumber": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "transactionTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "transactionIndex": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "numberOfTransactions": {
                    "$ref": "#/$defs/smithy.api#Long"
                },
                "to": {
                    "$ref": "#/$defs/ChainAddress"
                },
                "from": {
                    "$ref": "#/$defs/ChainAddress"
                },
                "contractAddress": {
                    "$ref": "#/$defs/ChainAddress"
                },
                "gasUsed": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "cumulativeGasUsed": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "effectiveGasPrice": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "signatureV": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "signatureR": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "signatureS": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "transactionFee": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "transactionId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "confirmationStatus": {
                    "$ref": "#/$defs/ConfirmationStatus"
                },
                "executionStatus": {
                    "$ref": "#/$defs/ExecutionStatus"
                }
            }
        },
        "BlockHash": {
            "type": "string"
        },
        "QueryTransactionHash": {
            "type": "string"
        },
        "ConfirmationStatus": {
            "type": "string"
        },
        "ExecutionStatus": {
            "type": "string"
        },
        "GetTransactionInput": {
            "type": "object",
            "properties": {
                "transactionHash": {
                    "$ref": "#/$defs/QueryTransactionHash"
                },
                "transactionId": {
                    "$ref": "#/$defs/QueryTransactionId"
                },
                "network": {
                    "$ref": "#/$defs/QueryNetwork"
                }
            }
        },
        "QueryTransactionId": {
            "type": "string"
        },
        "ListAssetContractsOutput": {
            "type": "object",
            "properties": {
                "contracts": {
                    "$ref": "#/$defs/AssetContractList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AssetContractList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssetContract"
            }
        },
        "AssetContract": {
            "type": "object",
            "properties": {
                "contractIdentifier": {
                    "$ref": "#/$defs/ContractIdentifier"
                },
                "tokenStandard": {
                    "$ref": "#/$defs/QueryTokenStandard"
                },
                "deployerAddress": {
                    "$ref": "#/$defs/ChainAddress"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListAssetContractsInput": {
            "type": "object",
            "properties": {
                "contractFilter": {
                    "$ref": "#/$defs/ContractFilter"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "ContractFilter": {
            "type": "object",
            "properties": {
                "network": {
                    "$ref": "#/$defs/QueryNetwork"
                },
                "tokenStandard": {
                    "$ref": "#/$defs/QueryTokenStandard"
                },
                "deployerAddress": {
                    "$ref": "#/$defs/ChainAddress"
                }
            }
        },
        "ListFilteredTransactionEventsOutput": {
            "type": "object",
            "properties": {
                "events": {
                    "$ref": "#/$defs/TransactionEventList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TransactionEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransactionEvent"
            }
        },
        "TransactionEvent": {
            "type": "object",
            "properties": {
                "network": {
                    "$ref": "#/$defs/QueryNetwork"
                },
                "transactionHash": {
                    "$ref": "#/$defs/QueryTransactionHash"
                },
                "eventType": {
                    "$ref": "#/$defs/QueryTransactionEventType"
                },
                "from": {
                    "$ref": "#/$defs/ChainAddress"
                },
                "to": {
                    "$ref": "#/$defs/ChainAddress"
                },
                "value": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "contractAddress": {
                    "$ref": "#/$defs/ChainAddress"
                },
                "tokenId": {
                    "$ref": "#/$defs/QueryTokenId"
                },
                "transactionId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "voutIndex": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "voutSpent": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "spentVoutTransactionId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "spentVoutTransactionHash": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "spentVoutIndex": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "blockchainInstant": {
                    "$ref": "#/$defs/BlockchainInstant"
                },
                "confirmationStatus": {
                    "$ref": "#/$defs/ConfirmationStatus"
                }
            }
        },
        "QueryTransactionEventType": {
            "type": "string"
        },
        "ListFilteredTransactionEventsInput": {
            "type": "object",
            "properties": {
                "network": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "addressIdentifierFilter": {
                    "$ref": "#/$defs/AddressIdentifierFilter"
                },
                "timeFilter": {
                    "$ref": "#/$defs/TimeFilter"
                },
                "voutFilter": {
                    "$ref": "#/$defs/VoutFilter"
                },
                "confirmationStatusFilter": {
                    "$ref": "#/$defs/ConfirmationStatusFilter"
                },
                "sort": {
                    "$ref": "#/$defs/ListFilteredTransactionEventsSort"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "AddressIdentifierFilter": {
            "type": "object",
            "properties": {
                "transactionEventToAddress": {
                    "$ref": "#/$defs/ChainAddresses"
                }
            }
        },
        "ChainAddresses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChainAddress"
            }
        },
        "TimeFilter": {
            "type": "object",
            "properties": {
                "from": {
                    "$ref": "#/$defs/BlockchainInstant"
                },
                "to": {
                    "$ref": "#/$defs/BlockchainInstant"
                }
            }
        },
        "VoutFilter": {
            "type": "object",
            "properties": {
                "voutSpent": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "ConfirmationStatusFilter": {
            "type": "object",
            "properties": {
                "include": {
                    "$ref": "#/$defs/ConfirmationStatusIncludeList"
                }
            }
        },
        "ConfirmationStatusIncludeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConfirmationStatus"
            }
        },
        "ListFilteredTransactionEventsSort": {
            "type": "object",
            "properties": {
                "sortBy": {
                    "$ref": "#/$defs/ListFilteredTransactionEventsSortBy"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                }
            }
        },
        "ListFilteredTransactionEventsSortBy": {
            "type": "string"
        },
        "SortOrder": {
            "type": "string"
        },
        "ListTokenBalancesOutput": {
            "type": "object",
            "properties": {
                "tokenBalances": {
                    "$ref": "#/$defs/TokenBalanceList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TokenBalanceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TokenBalance"
            }
        },
        "TokenBalance": {
            "type": "object",
            "properties": {
                "ownerIdentifier": {
                    "$ref": "#/$defs/OwnerIdentifier"
                },
                "tokenIdentifier": {
                    "$ref": "#/$defs/TokenIdentifier"
                },
                "balance": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "atBlockchainInstant": {
                    "$ref": "#/$defs/BlockchainInstant"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/BlockchainInstant"
                }
            }
        },
        "ListTokenBalancesInput": {
            "type": "object",
            "properties": {
                "ownerFilter": {
                    "$ref": "#/$defs/OwnerFilter"
                },
                "tokenFilter": {
                    "$ref": "#/$defs/TokenFilter"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "OwnerFilter": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/$defs/ChainAddress"
                }
            }
        },
        "TokenFilter": {
            "type": "object",
            "properties": {
                "network": {
                    "$ref": "#/$defs/QueryNetwork"
                },
                "contractAddress": {
                    "$ref": "#/$defs/ChainAddress"
                },
                "tokenId": {
                    "$ref": "#/$defs/QueryTokenId"
                }
            }
        },
        "ListTransactionEventsOutput": {
            "type": "object",
            "properties": {
                "events": {
                    "$ref": "#/$defs/TransactionEventList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTransactionEventsInput": {
            "type": "object",
            "properties": {
                "transactionHash": {
                    "$ref": "#/$defs/QueryTransactionHash"
                },
                "transactionId": {
                    "$ref": "#/$defs/QueryTransactionId"
                },
                "network": {
                    "$ref": "#/$defs/QueryNetwork"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "ListTransactionsOutput": {
            "type": "object",
            "properties": {
                "transactions": {
                    "$ref": "#/$defs/TransactionOutputList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TransactionOutputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransactionOutputItem"
            }
        },
        "TransactionOutputItem": {
            "type": "object",
            "properties": {
                "transactionHash": {
                    "$ref": "#/$defs/QueryTransactionHash"
                },
                "transactionId": {
                    "$ref": "#/$defs/QueryTransactionId"
                },
                "network": {
                    "$ref": "#/$defs/QueryNetwork"
                },
                "transactionTimestamp": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "confirmationStatus": {
                    "$ref": "#/$defs/ConfirmationStatus"
                }
            }
        },
        "ListTransactionsInput": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/$defs/ChainAddress"
                },
                "network": {
                    "$ref": "#/$defs/QueryNetwork"
                },
                "fromBlockchainInstant": {
                    "$ref": "#/$defs/BlockchainInstant"
                },
                "toBlockchainInstant": {
                    "$ref": "#/$defs/BlockchainInstant"
                },
                "sort": {
                    "$ref": "#/$defs/ListTransactionsSort"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "confirmationStatusFilter": {
                    "$ref": "#/$defs/ConfirmationStatusFilter"
                }
            }
        },
        "ListTransactionsSort": {
            "type": "object",
            "properties": {
                "sortBy": {
                    "$ref": "#/$defs/ListTransactionsSortBy"
                },
                "sortOrder": {
                    "$ref": "#/$defs/SortOrder"
                }
            }
        },
        "ListTransactionsSortBy": {
            "type": "string"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://managedblockchain-query-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://managedblockchain-query-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://managedblockchain-query.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://managedblockchain-query.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                }
            ]
        }
    }
}