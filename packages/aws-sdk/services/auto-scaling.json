{
    "name": "autoscaling",
    "commands": [
        {
            "name": "AttachInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AttachInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachInstancesQuery"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachLoadBalancers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AttachLoadBalancers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachLoadBalancersResultType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachLoadBalancersType"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachLoadBalancerTargetGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AttachLoadBalancerTargetGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachLoadBalancerTargetGroupsResultType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachLoadBalancerTargetGroupsType"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachTrafficSources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AttachTrafficSources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachTrafficSourcesResultType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachTrafficSourcesType"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchDeleteScheduledAction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchDeleteScheduledAction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeleteScheduledActionAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDeleteScheduledActionType"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchPutScheduledUpdateGroupAction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchPutScheduledUpdateGroupAction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchPutScheduledUpdateGroupActionAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchPutScheduledUpdateGroupActionType"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelInstanceRefresh",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelInstanceRefresh"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelInstanceRefreshAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelInstanceRefreshType"
                        }
                    }
                }
            }
        },
        {
            "name": "CompleteLifecycleAction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CompleteLifecycleAction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CompleteLifecycleActionAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CompleteLifecycleActionType"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateAutoScalingGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateAutoScalingGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAutoScalingGroupType"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLaunchConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateLaunchConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLaunchConfigurationType"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateOrUpdateTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateOrUpdateTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateOrUpdateTagsType"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAutoScalingGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteAutoScalingGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAutoScalingGroupType"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLaunchConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteLaunchConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/LaunchConfigurationNameType"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLifecycleHook",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteLifecycleHook"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLifecycleHookAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLifecycleHookType"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNotificationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteNotificationConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNotificationConfigurationType"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeletePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePolicyType"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteScheduledAction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteScheduledAction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteScheduledActionType"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTagsType"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteWarmPool",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteWarmPool"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteWarmPoolAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteWarmPoolType"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAccountLimits",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeAccountLimits"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAccountLimitsAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAdjustmentTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeAdjustmentTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAdjustmentTypesAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAutoScalingGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeAutoScalingGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AutoScalingGroupsType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AutoScalingGroupNamesType"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAutoScalingInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeAutoScalingInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AutoScalingInstancesType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAutoScalingInstancesType"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAutoScalingNotificationTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeAutoScalingNotificationTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAutoScalingNotificationTypesAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstanceRefreshes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeInstanceRefreshes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInstanceRefreshesAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstanceRefreshesType"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLaunchConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeLaunchConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/LaunchConfigurationsType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/LaunchConfigurationNamesType"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLifecycleHooks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeLifecycleHooks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLifecycleHooksAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLifecycleHooksType"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLifecycleHookTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeLifecycleHookTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLifecycleHookTypesAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLoadBalancers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeLoadBalancers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLoadBalancersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLoadBalancersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLoadBalancerTargetGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeLoadBalancerTargetGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLoadBalancerTargetGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLoadBalancerTargetGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeMetricCollectionTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeMetricCollectionTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMetricCollectionTypesAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeNotificationConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeNotificationConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNotificationConfigurationsAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNotificationConfigurationsType"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribePolicies",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribePolicies"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PoliciesType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePoliciesType"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeScalingActivities",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeScalingActivities"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ActivitiesType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeScalingActivitiesType"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeScalingProcessTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeScalingProcessTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ProcessesType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeScheduledActions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeScheduledActions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ScheduledActionsType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeScheduledActionsType"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagsType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTagsType"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTerminationPolicyTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeTerminationPolicyTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTerminationPolicyTypesAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTrafficSources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeTrafficSources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTrafficSourcesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTrafficSourcesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeWarmPool",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeWarmPool"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeWarmPoolAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeWarmPoolType"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DetachInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetachInstancesAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachInstancesQuery"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachLoadBalancers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DetachLoadBalancers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetachLoadBalancersResultType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachLoadBalancersType"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachLoadBalancerTargetGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DetachLoadBalancerTargetGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetachLoadBalancerTargetGroupsResultType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachLoadBalancerTargetGroupsType"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachTrafficSources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DetachTrafficSources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetachTrafficSourcesResultType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachTrafficSourcesType"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableMetricsCollection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisableMetricsCollection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableMetricsCollectionQuery"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableMetricsCollection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "EnableMetricsCollection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableMetricsCollectionQuery"
                        }
                    }
                }
            }
        },
        {
            "name": "EnterStandby",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "EnterStandby"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnterStandbyAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnterStandbyQuery"
                        }
                    }
                }
            }
        },
        {
            "name": "ExecutePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExecutePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExecutePolicyType"
                        }
                    }
                }
            }
        },
        {
            "name": "ExitStandby",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExitStandby"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExitStandbyAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExitStandbyQuery"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPredictiveScalingForecast",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPredictiveScalingForecast"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPredictiveScalingForecastAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPredictiveScalingForecastType"
                        }
                    }
                }
            }
        },
        {
            "name": "PutLifecycleHook",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutLifecycleHook"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutLifecycleHookAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutLifecycleHookType"
                        }
                    }
                }
            }
        },
        {
            "name": "PutNotificationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutNotificationConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutNotificationConfigurationType"
                        }
                    }
                }
            }
        },
        {
            "name": "PutScalingPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutScalingPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PolicyARNType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutScalingPolicyType"
                        }
                    }
                }
            }
        },
        {
            "name": "PutScheduledUpdateGroupAction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutScheduledUpdateGroupAction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutScheduledUpdateGroupActionType"
                        }
                    }
                }
            }
        },
        {
            "name": "PutWarmPool",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutWarmPool"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutWarmPoolAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutWarmPoolType"
                        }
                    }
                }
            }
        },
        {
            "name": "RecordLifecycleActionHeartbeat",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RecordLifecycleActionHeartbeat"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RecordLifecycleActionHeartbeatAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RecordLifecycleActionHeartbeatType"
                        }
                    }
                }
            }
        },
        {
            "name": "ResumeProcesses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResumeProcesses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ScalingProcessQuery"
                        }
                    }
                }
            }
        },
        {
            "name": "RollbackInstanceRefresh",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RollbackInstanceRefresh"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RollbackInstanceRefreshAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RollbackInstanceRefreshType"
                        }
                    }
                }
            }
        },
        {
            "name": "SetDesiredCapacity",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SetDesiredCapacity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetDesiredCapacityType"
                        }
                    }
                }
            }
        },
        {
            "name": "SetInstanceHealth",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SetInstanceHealth"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetInstanceHealthQuery"
                        }
                    }
                }
            }
        },
        {
            "name": "SetInstanceProtection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SetInstanceProtection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SetInstanceProtectionAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetInstanceProtectionQuery"
                        }
                    }
                }
            }
        },
        {
            "name": "StartInstanceRefresh",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartInstanceRefresh"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartInstanceRefreshAnswer"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartInstanceRefreshType"
                        }
                    }
                }
            }
        },
        {
            "name": "SuspendProcesses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SuspendProcesses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ScalingProcessQuery"
                        }
                    }
                }
            }
        },
        {
            "name": "TerminateInstanceInAutoScalingGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TerminateInstanceInAutoScalingGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ActivityType"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TerminateInstanceInAutoScalingGroupType"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateAutoScalingGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateAutoScalingGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAutoScalingGroupType"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AttachInstancesQuery": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIds"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "InstanceIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen19"
            }
        },
        "XmlStringMaxLen19": {
            "type": "string"
        },
        "XmlStringMaxLen255": {
            "type": "string"
        },
        "AttachLoadBalancersResultType": {
            "type": "object",
            "properties": {}
        },
        "AttachLoadBalancersType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LoadBalancerNames": {
                    "$ref": "#/$defs/LoadBalancerNames"
                }
            }
        },
        "LoadBalancerNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen255"
            }
        },
        "AttachLoadBalancerTargetGroupsResultType": {
            "type": "object",
            "properties": {}
        },
        "AttachLoadBalancerTargetGroupsType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "TargetGroupARNs": {
                    "$ref": "#/$defs/TargetGroupARNs"
                }
            }
        },
        "TargetGroupARNs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen511"
            }
        },
        "XmlStringMaxLen511": {
            "type": "string"
        },
        "AttachTrafficSourcesResultType": {
            "type": "object",
            "properties": {}
        },
        "AttachTrafficSourcesType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "TrafficSources": {
                    "$ref": "#/$defs/TrafficSources"
                }
            }
        },
        "TrafficSources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficSourceIdentifier"
            }
        },
        "TrafficSourceIdentifier": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/XmlStringMaxLen511"
                },
                "Type": {
                    "$ref": "#/$defs/XmlStringMaxLen511"
                }
            }
        },
        "BatchDeleteScheduledActionAnswer": {
            "type": "object",
            "properties": {
                "FailedScheduledActions": {
                    "$ref": "#/$defs/FailedScheduledUpdateGroupActionRequests"
                }
            }
        },
        "FailedScheduledUpdateGroupActionRequests": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FailedScheduledUpdateGroupActionRequest"
            }
        },
        "FailedScheduledUpdateGroupActionRequest": {
            "type": "object",
            "properties": {
                "ScheduledActionName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/XmlStringMaxLen64"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "XmlStringMaxLen64": {
            "type": "string"
        },
        "XmlString": {
            "type": "string"
        },
        "BatchDeleteScheduledActionType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ScheduledActionNames": {
                    "$ref": "#/$defs/ScheduledActionNames"
                }
            }
        },
        "ScheduledActionNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen255"
            }
        },
        "BatchPutScheduledUpdateGroupActionAnswer": {
            "type": "object",
            "properties": {
                "FailedScheduledUpdateGroupActions": {
                    "$ref": "#/$defs/FailedScheduledUpdateGroupActionRequests"
                }
            }
        },
        "BatchPutScheduledUpdateGroupActionType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ScheduledUpdateGroupActions": {
                    "$ref": "#/$defs/ScheduledUpdateGroupActionRequests"
                }
            }
        },
        "ScheduledUpdateGroupActionRequests": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledUpdateGroupActionRequest"
            }
        },
        "ScheduledUpdateGroupActionRequest": {
            "type": "object",
            "properties": {
                "ScheduledActionName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "StartTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "EndTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "Recurrence": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "MinSize": {
                    "$ref": "#/$defs/AutoScalingGroupMinSize"
                },
                "MaxSize": {
                    "$ref": "#/$defs/AutoScalingGroupMaxSize"
                },
                "DesiredCapacity": {
                    "$ref": "#/$defs/AutoScalingGroupDesiredCapacity"
                },
                "TimeZone": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "TimestampType": {
            "type": "string",
            "format": "date-time"
        },
        "AutoScalingGroupMinSize": {
            "type": "integer",
            "format": "int32"
        },
        "AutoScalingGroupMaxSize": {
            "type": "integer",
            "format": "int32"
        },
        "AutoScalingGroupDesiredCapacity": {
            "type": "integer",
            "format": "int32"
        },
        "CancelInstanceRefreshAnswer": {
            "type": "object",
            "properties": {
                "InstanceRefreshId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "CancelInstanceRefreshType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "CompleteLifecycleActionAnswer": {
            "type": "object",
            "properties": {}
        },
        "CompleteLifecycleActionType": {
            "type": "object",
            "properties": {
                "LifecycleHookName": {
                    "$ref": "#/$defs/AsciiStringMaxLen255"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "LifecycleActionToken": {
                    "$ref": "#/$defs/LifecycleActionToken"
                },
                "LifecycleActionResult": {
                    "$ref": "#/$defs/LifecycleActionResult"
                },
                "InstanceId": {
                    "$ref": "#/$defs/XmlStringMaxLen19"
                }
            }
        },
        "AsciiStringMaxLen255": {
            "type": "string"
        },
        "ResourceName": {
            "type": "string"
        },
        "LifecycleActionToken": {
            "type": "string"
        },
        "LifecycleActionResult": {
            "type": "string"
        },
        "CreateAutoScalingGroupType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LaunchConfigurationName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LaunchTemplate": {
                    "$ref": "#/$defs/LaunchTemplateSpecification"
                },
                "MixedInstancesPolicy": {
                    "$ref": "#/$defs/MixedInstancesPolicy"
                },
                "InstanceId": {
                    "$ref": "#/$defs/XmlStringMaxLen19"
                },
                "MinSize": {
                    "$ref": "#/$defs/AutoScalingGroupMinSize"
                },
                "MaxSize": {
                    "$ref": "#/$defs/AutoScalingGroupMaxSize"
                },
                "DesiredCapacity": {
                    "$ref": "#/$defs/AutoScalingGroupDesiredCapacity"
                },
                "DefaultCooldown": {
                    "$ref": "#/$defs/Cooldown"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZones"
                },
                "LoadBalancerNames": {
                    "$ref": "#/$defs/LoadBalancerNames"
                },
                "TargetGroupARNs": {
                    "$ref": "#/$defs/TargetGroupARNs"
                },
                "HealthCheckType": {
                    "$ref": "#/$defs/XmlStringMaxLen32"
                },
                "HealthCheckGracePeriod": {
                    "$ref": "#/$defs/HealthCheckGracePeriod"
                },
                "PlacementGroup": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "VPCZoneIdentifier": {
                    "$ref": "#/$defs/XmlStringMaxLen5000"
                },
                "TerminationPolicies": {
                    "$ref": "#/$defs/TerminationPolicies"
                },
                "NewInstancesProtectedFromScaleIn": {
                    "$ref": "#/$defs/InstanceProtected"
                },
                "CapacityRebalance": {
                    "$ref": "#/$defs/CapacityRebalanceEnabled"
                },
                "LifecycleHookSpecificationList": {
                    "$ref": "#/$defs/LifecycleHookSpecifications"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "ServiceLinkedRoleARN": {
                    "$ref": "#/$defs/ResourceName"
                },
                "MaxInstanceLifetime": {
                    "$ref": "#/$defs/MaxInstanceLifetime"
                },
                "Context": {
                    "$ref": "#/$defs/Context"
                },
                "DesiredCapacityType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "DefaultInstanceWarmup": {
                    "$ref": "#/$defs/DefaultInstanceWarmup"
                },
                "TrafficSources": {
                    "$ref": "#/$defs/TrafficSources"
                },
                "InstanceMaintenancePolicy": {
                    "$ref": "#/$defs/InstanceMaintenancePolicy"
                }
            }
        },
        "LaunchTemplateSpecification": {
            "type": "object",
            "properties": {
                "LaunchTemplateId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/LaunchTemplateName"
                },
                "Version": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "LaunchTemplateName": {
            "type": "string"
        },
        "MixedInstancesPolicy": {
            "type": "object",
            "properties": {
                "LaunchTemplate": {
                    "$ref": "#/$defs/LaunchTemplate"
                },
                "InstancesDistribution": {
                    "$ref": "#/$defs/InstancesDistribution"
                }
            }
        },
        "LaunchTemplate": {
            "type": "object",
            "properties": {
                "LaunchTemplateSpecification": {
                    "$ref": "#/$defs/LaunchTemplateSpecification"
                },
                "Overrides": {
                    "$ref": "#/$defs/Overrides"
                }
            }
        },
        "Overrides": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateOverrides"
            }
        },
        "LaunchTemplateOverrides": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "WeightedCapacity": {
                    "$ref": "#/$defs/XmlStringMaxLen32"
                },
                "LaunchTemplateSpecification": {
                    "$ref": "#/$defs/LaunchTemplateSpecification"
                },
                "InstanceRequirements": {
                    "$ref": "#/$defs/InstanceRequirements"
                }
            }
        },
        "XmlStringMaxLen32": {
            "type": "string"
        },
        "InstanceRequirements": {
            "type": "object",
            "properties": {
                "VCpuCount": {
                    "$ref": "#/$defs/VCpuCountRequest"
                },
                "MemoryMiB": {
                    "$ref": "#/$defs/MemoryMiBRequest"
                },
                "CpuManufacturers": {
                    "$ref": "#/$defs/CpuManufacturers"
                },
                "MemoryGiBPerVCpu": {
                    "$ref": "#/$defs/MemoryGiBPerVCpuRequest"
                },
                "ExcludedInstanceTypes": {
                    "$ref": "#/$defs/ExcludedInstanceTypes"
                },
                "InstanceGenerations": {
                    "$ref": "#/$defs/InstanceGenerations"
                },
                "SpotMaxPricePercentageOverLowestPrice": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                },
                "MaxSpotPriceAsPercentageOfOptimalOnDemandPrice": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                },
                "OnDemandMaxPricePercentageOverLowestPrice": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                },
                "BareMetal": {
                    "$ref": "#/$defs/BareMetal"
                },
                "BurstablePerformance": {
                    "$ref": "#/$defs/BurstablePerformance"
                },
                "RequireHibernateSupport": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "NetworkInterfaceCount": {
                    "$ref": "#/$defs/NetworkInterfaceCountRequest"
                },
                "LocalStorage": {
                    "$ref": "#/$defs/LocalStorage"
                },
                "LocalStorageTypes": {
                    "$ref": "#/$defs/LocalStorageTypes"
                },
                "TotalLocalStorageGB": {
                    "$ref": "#/$defs/TotalLocalStorageGBRequest"
                },
                "BaselineEbsBandwidthMbps": {
                    "$ref": "#/$defs/BaselineEbsBandwidthMbpsRequest"
                },
                "AcceleratorTypes": {
                    "$ref": "#/$defs/AcceleratorTypes"
                },
                "AcceleratorCount": {
                    "$ref": "#/$defs/AcceleratorCountRequest"
                },
                "AcceleratorManufacturers": {
                    "$ref": "#/$defs/AcceleratorManufacturers"
                },
                "AcceleratorNames": {
                    "$ref": "#/$defs/AcceleratorNames"
                },
                "AcceleratorTotalMemoryMiB": {
                    "$ref": "#/$defs/AcceleratorTotalMemoryMiBRequest"
                },
                "NetworkBandwidthGbps": {
                    "$ref": "#/$defs/NetworkBandwidthGbpsRequest"
                },
                "AllowedInstanceTypes": {
                    "$ref": "#/$defs/AllowedInstanceTypes"
                }
            }
        },
        "VCpuCountRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                },
                "Max": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                }
            }
        },
        "NullablePositiveInteger": {
            "type": "integer",
            "format": "int32"
        },
        "MemoryMiBRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                },
                "Max": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                }
            }
        },
        "CpuManufacturers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CpuManufacturer"
            }
        },
        "CpuManufacturer": {
            "enum": [
                "INTEL",
                "AMD",
                "AMAZON_WEB_SERVICES"
            ]
        },
        "MemoryGiBPerVCpuRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/NullablePositiveDouble"
                },
                "Max": {
                    "$ref": "#/$defs/NullablePositiveDouble"
                }
            }
        },
        "NullablePositiveDouble": {
            "type": "number",
            "format": "double"
        },
        "ExcludedInstanceTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExcludedInstance"
            }
        },
        "ExcludedInstance": {
            "type": "string"
        },
        "InstanceGenerations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceGeneration"
            }
        },
        "InstanceGeneration": {
            "enum": [
                "CURRENT",
                "PREVIOUS"
            ]
        },
        "BareMetal": {
            "enum": [
                "INCLUDED",
                "EXCLUDED",
                "REQUIRED"
            ]
        },
        "BurstablePerformance": {
            "enum": [
                "INCLUDED",
                "EXCLUDED",
                "REQUIRED"
            ]
        },
        "NullableBoolean": {
            "type": "boolean"
        },
        "NetworkInterfaceCountRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                },
                "Max": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                }
            }
        },
        "LocalStorage": {
            "enum": [
                "INCLUDED",
                "EXCLUDED",
                "REQUIRED"
            ]
        },
        "LocalStorageTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalStorageType"
            }
        },
        "LocalStorageType": {
            "enum": [
                "HDD",
                "SSD"
            ]
        },
        "TotalLocalStorageGBRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/NullablePositiveDouble"
                },
                "Max": {
                    "$ref": "#/$defs/NullablePositiveDouble"
                }
            }
        },
        "BaselineEbsBandwidthMbpsRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                },
                "Max": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                }
            }
        },
        "AcceleratorTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AcceleratorType"
            }
        },
        "AcceleratorType": {
            "enum": [
                "GPU",
                "FPGA",
                "INFERENCE"
            ]
        },
        "AcceleratorCountRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                },
                "Max": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                }
            }
        },
        "AcceleratorManufacturers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AcceleratorManufacturer"
            }
        },
        "AcceleratorManufacturer": {
            "enum": [
                "NVIDIA",
                "AMD",
                "AMAZON_WEB_SERVICES",
                "XILINX"
            ]
        },
        "AcceleratorNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AcceleratorName"
            }
        },
        "AcceleratorName": {
            "enum": [
                "A100",
                "V100",
                "K80",
                "T4",
                "M60",
                "RADEON_PRO_V520",
                "VU9P"
            ]
        },
        "AcceleratorTotalMemoryMiBRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                },
                "Max": {
                    "$ref": "#/$defs/NullablePositiveInteger"
                }
            }
        },
        "NetworkBandwidthGbpsRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/NullablePositiveDouble"
                },
                "Max": {
                    "$ref": "#/$defs/NullablePositiveDouble"
                }
            }
        },
        "AllowedInstanceTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllowedInstanceType"
            }
        },
        "AllowedInstanceType": {
            "type": "string"
        },
        "InstancesDistribution": {
            "type": "object",
            "properties": {
                "OnDemandAllocationStrategy": {
                    "$ref": "#/$defs/XmlString"
                },
                "OnDemandBaseCapacity": {
                    "$ref": "#/$defs/OnDemandBaseCapacity"
                },
                "OnDemandPercentageAboveBaseCapacity": {
                    "$ref": "#/$defs/OnDemandPercentageAboveBaseCapacity"
                },
                "SpotAllocationStrategy": {
                    "$ref": "#/$defs/XmlString"
                },
                "SpotInstancePools": {
                    "$ref": "#/$defs/SpotInstancePools"
                },
                "SpotMaxPrice": {
                    "$ref": "#/$defs/MixedInstanceSpotPrice"
                }
            }
        },
        "OnDemandBaseCapacity": {
            "type": "integer",
            "format": "int32"
        },
        "OnDemandPercentageAboveBaseCapacity": {
            "type": "integer",
            "format": "int32"
        },
        "SpotInstancePools": {
            "type": "integer",
            "format": "int32"
        },
        "MixedInstanceSpotPrice": {
            "type": "string"
        },
        "Cooldown": {
            "type": "integer",
            "format": "int32"
        },
        "AvailabilityZones": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen255"
            }
        },
        "HealthCheckGracePeriod": {
            "type": "integer",
            "format": "int32"
        },
        "XmlStringMaxLen5000": {
            "type": "string"
        },
        "TerminationPolicies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen1600"
            }
        },
        "XmlStringMaxLen1600": {
            "type": "string"
        },
        "InstanceProtected": {
            "type": "boolean"
        },
        "CapacityRebalanceEnabled": {
            "type": "boolean"
        },
        "LifecycleHookSpecifications": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LifecycleHookSpecification"
            }
        },
        "LifecycleHookSpecification": {
            "type": "object",
            "properties": {
                "LifecycleHookName": {
                    "$ref": "#/$defs/AsciiStringMaxLen255"
                },
                "LifecycleTransition": {
                    "$ref": "#/$defs/LifecycleTransition"
                },
                "NotificationMetadata": {
                    "$ref": "#/$defs/AnyPrintableAsciiStringMaxLen4000"
                },
                "HeartbeatTimeout": {
                    "$ref": "#/$defs/HeartbeatTimeout"
                },
                "DefaultResult": {
                    "$ref": "#/$defs/LifecycleActionResult"
                },
                "NotificationTargetARN": {
                    "$ref": "#/$defs/NotificationTargetResourceName"
                },
                "RoleARN": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "LifecycleTransition": {
            "type": "string"
        },
        "AnyPrintableAsciiStringMaxLen4000": {
            "type": "string"
        },
        "HeartbeatTimeout": {
            "type": "integer",
            "format": "int32"
        },
        "NotificationTargetResourceName": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/XmlString"
                },
                "ResourceType": {
                    "$ref": "#/$defs/XmlString"
                },
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                },
                "PropagateAtLaunch": {
                    "$ref": "#/$defs/PropagateAtLaunch"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "PropagateAtLaunch": {
            "type": "boolean"
        },
        "MaxInstanceLifetime": {
            "type": "integer",
            "format": "int32"
        },
        "Context": {
            "type": "string"
        },
        "DefaultInstanceWarmup": {
            "type": "integer",
            "format": "int32"
        },
        "InstanceMaintenancePolicy": {
            "type": "object",
            "properties": {
                "MinHealthyPercentage": {
                    "$ref": "#/$defs/IntPercentResettable"
                },
                "MaxHealthyPercentage": {
                    "$ref": "#/$defs/IntPercent100To200Resettable"
                }
            }
        },
        "IntPercentResettable": {
            "type": "integer",
            "format": "int32"
        },
        "IntPercent100To200Resettable": {
            "type": "integer",
            "format": "int32"
        },
        "CreateLaunchConfigurationType": {
            "type": "object",
            "properties": {
                "LaunchConfigurationName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ImageId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "KeyName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroups"
                },
                "ClassicLinkVPCId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ClassicLinkVPCSecurityGroups": {
                    "$ref": "#/$defs/ClassicLinkVPCSecurityGroups"
                },
                "UserData": {
                    "$ref": "#/$defs/XmlStringUserData"
                },
                "InstanceId": {
                    "$ref": "#/$defs/XmlStringMaxLen19"
                },
                "InstanceType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "KernelId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "RamdiskId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/BlockDeviceMappings"
                },
                "InstanceMonitoring": {
                    "$ref": "#/$defs/InstanceMonitoring"
                },
                "SpotPrice": {
                    "$ref": "#/$defs/SpotPrice"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/XmlStringMaxLen1600"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/EbsOptimized"
                },
                "AssociatePublicIpAddress": {
                    "$ref": "#/$defs/AssociatePublicIpAddress"
                },
                "PlacementTenancy": {
                    "$ref": "#/$defs/XmlStringMaxLen64"
                },
                "MetadataOptions": {
                    "$ref": "#/$defs/InstanceMetadataOptions"
                }
            }
        },
        "SecurityGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlString"
            }
        },
        "ClassicLinkVPCSecurityGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen255"
            }
        },
        "XmlStringUserData": {
            "type": "string"
        },
        "BlockDeviceMappings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BlockDeviceMapping"
            }
        },
        "BlockDeviceMapping": {
            "type": "object",
            "properties": {
                "VirtualName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "DeviceName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "Ebs": {
                    "$ref": "#/$defs/Ebs"
                },
                "NoDevice": {
                    "$ref": "#/$defs/NoDevice"
                }
            }
        },
        "Ebs": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/BlockDeviceEbsVolumeSize"
                },
                "VolumeType": {
                    "$ref": "#/$defs/BlockDeviceEbsVolumeType"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/BlockDeviceEbsDeleteOnTermination"
                },
                "Iops": {
                    "$ref": "#/$defs/BlockDeviceEbsIops"
                },
                "Encrypted": {
                    "$ref": "#/$defs/BlockDeviceEbsEncrypted"
                },
                "Throughput": {
                    "$ref": "#/$defs/BlockDeviceEbsThroughput"
                }
            }
        },
        "BlockDeviceEbsVolumeSize": {
            "type": "integer",
            "format": "int32"
        },
        "BlockDeviceEbsVolumeType": {
            "type": "string"
        },
        "BlockDeviceEbsDeleteOnTermination": {
            "type": "boolean"
        },
        "BlockDeviceEbsIops": {
            "type": "integer",
            "format": "int32"
        },
        "BlockDeviceEbsEncrypted": {
            "type": "boolean"
        },
        "BlockDeviceEbsThroughput": {
            "type": "integer",
            "format": "int32"
        },
        "NoDevice": {
            "type": "boolean"
        },
        "InstanceMonitoring": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/MonitoringEnabled"
                }
            }
        },
        "MonitoringEnabled": {
            "type": "boolean"
        },
        "SpotPrice": {
            "type": "string"
        },
        "EbsOptimized": {
            "type": "boolean"
        },
        "AssociatePublicIpAddress": {
            "type": "boolean"
        },
        "InstanceMetadataOptions": {
            "type": "object",
            "properties": {
                "HttpTokens": {
                    "$ref": "#/$defs/InstanceMetadataHttpTokensState"
                },
                "HttpPutResponseHopLimit": {
                    "$ref": "#/$defs/InstanceMetadataHttpPutResponseHopLimit"
                },
                "HttpEndpoint": {
                    "$ref": "#/$defs/InstanceMetadataEndpointState"
                }
            }
        },
        "InstanceMetadataHttpTokensState": {
            "enum": [
                "Optional",
                "Required"
            ]
        },
        "InstanceMetadataHttpPutResponseHopLimit": {
            "type": "integer",
            "format": "int32"
        },
        "InstanceMetadataEndpointState": {
            "enum": [
                "Disabled",
                "Enabled"
            ]
        },
        "CreateOrUpdateTagsType": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DeleteAutoScalingGroupType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ForceDelete": {
                    "$ref": "#/$defs/ForceDelete"
                }
            }
        },
        "ForceDelete": {
            "type": "boolean"
        },
        "LaunchConfigurationNameType": {
            "type": "object",
            "properties": {
                "LaunchConfigurationName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "DeleteLifecycleHookAnswer": {
            "type": "object",
            "properties": {}
        },
        "DeleteLifecycleHookType": {
            "type": "object",
            "properties": {
                "LifecycleHookName": {
                    "$ref": "#/$defs/AsciiStringMaxLen255"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "DeleteNotificationConfigurationType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "TopicARN": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "DeletePolicyType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "PolicyName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DeleteScheduledActionType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ScheduledActionName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "DeleteTagsType": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "DeleteWarmPoolAnswer": {
            "type": "object",
            "properties": {}
        },
        "DeleteWarmPoolType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ForceDelete": {
                    "$ref": "#/$defs/ForceDelete"
                }
            }
        },
        "DescribeAccountLimitsAnswer": {
            "type": "object",
            "properties": {
                "MaxNumberOfAutoScalingGroups": {
                    "$ref": "#/$defs/MaxNumberOfAutoScalingGroups"
                },
                "MaxNumberOfLaunchConfigurations": {
                    "$ref": "#/$defs/MaxNumberOfLaunchConfigurations"
                },
                "NumberOfAutoScalingGroups": {
                    "$ref": "#/$defs/NumberOfAutoScalingGroups"
                },
                "NumberOfLaunchConfigurations": {
                    "$ref": "#/$defs/NumberOfLaunchConfigurations"
                }
            }
        },
        "MaxNumberOfAutoScalingGroups": {
            "type": "integer",
            "format": "int32"
        },
        "MaxNumberOfLaunchConfigurations": {
            "type": "integer",
            "format": "int32"
        },
        "NumberOfAutoScalingGroups": {
            "type": "integer",
            "format": "int32"
        },
        "NumberOfLaunchConfigurations": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeAdjustmentTypesAnswer": {
            "type": "object",
            "properties": {
                "AdjustmentTypes": {
                    "$ref": "#/$defs/AdjustmentTypes"
                }
            }
        },
        "AdjustmentTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AdjustmentType"
            }
        },
        "AdjustmentType": {
            "type": "object",
            "properties": {
                "AdjustmentType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "AutoScalingGroupsType": {
            "type": "object",
            "properties": {
                "AutoScalingGroups": {
                    "$ref": "#/$defs/AutoScalingGroups"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "AutoScalingGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoScalingGroup"
            }
        },
        "AutoScalingGroup": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "AutoScalingGroupARN": {
                    "$ref": "#/$defs/ResourceName"
                },
                "LaunchConfigurationName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LaunchTemplate": {
                    "$ref": "#/$defs/LaunchTemplateSpecification"
                },
                "MixedInstancesPolicy": {
                    "$ref": "#/$defs/MixedInstancesPolicy"
                },
                "MinSize": {
                    "$ref": "#/$defs/AutoScalingGroupMinSize"
                },
                "MaxSize": {
                    "$ref": "#/$defs/AutoScalingGroupMaxSize"
                },
                "DesiredCapacity": {
                    "$ref": "#/$defs/AutoScalingGroupDesiredCapacity"
                },
                "PredictedCapacity": {
                    "$ref": "#/$defs/AutoScalingGroupPredictedCapacity"
                },
                "DefaultCooldown": {
                    "$ref": "#/$defs/Cooldown"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZones"
                },
                "LoadBalancerNames": {
                    "$ref": "#/$defs/LoadBalancerNames"
                },
                "TargetGroupARNs": {
                    "$ref": "#/$defs/TargetGroupARNs"
                },
                "HealthCheckType": {
                    "$ref": "#/$defs/XmlStringMaxLen32"
                },
                "HealthCheckGracePeriod": {
                    "$ref": "#/$defs/HealthCheckGracePeriod"
                },
                "Instances": {
                    "$ref": "#/$defs/Instances"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "SuspendedProcesses": {
                    "$ref": "#/$defs/SuspendedProcesses"
                },
                "PlacementGroup": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "VPCZoneIdentifier": {
                    "$ref": "#/$defs/XmlStringMaxLen5000"
                },
                "EnabledMetrics": {
                    "$ref": "#/$defs/EnabledMetrics"
                },
                "Status": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "Tags": {
                    "$ref": "#/$defs/TagDescriptionList"
                },
                "TerminationPolicies": {
                    "$ref": "#/$defs/TerminationPolicies"
                },
                "NewInstancesProtectedFromScaleIn": {
                    "$ref": "#/$defs/InstanceProtected"
                },
                "ServiceLinkedRoleARN": {
                    "$ref": "#/$defs/ResourceName"
                },
                "MaxInstanceLifetime": {
                    "$ref": "#/$defs/MaxInstanceLifetime"
                },
                "CapacityRebalance": {
                    "$ref": "#/$defs/CapacityRebalanceEnabled"
                },
                "WarmPoolConfiguration": {
                    "$ref": "#/$defs/WarmPoolConfiguration"
                },
                "WarmPoolSize": {
                    "$ref": "#/$defs/WarmPoolSize"
                },
                "Context": {
                    "$ref": "#/$defs/Context"
                },
                "DesiredCapacityType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "DefaultInstanceWarmup": {
                    "$ref": "#/$defs/DefaultInstanceWarmup"
                },
                "TrafficSources": {
                    "$ref": "#/$defs/TrafficSources"
                },
                "InstanceMaintenancePolicy": {
                    "$ref": "#/$defs/InstanceMaintenancePolicy"
                }
            }
        },
        "AutoScalingGroupPredictedCapacity": {
            "type": "integer",
            "format": "int32"
        },
        "Instances": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Instance"
            }
        },
        "Instance": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/XmlStringMaxLen19"
                },
                "InstanceType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LifecycleState": {
                    "$ref": "#/$defs/LifecycleState"
                },
                "HealthStatus": {
                    "$ref": "#/$defs/XmlStringMaxLen32"
                },
                "LaunchConfigurationName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LaunchTemplate": {
                    "$ref": "#/$defs/LaunchTemplateSpecification"
                },
                "ProtectedFromScaleIn": {
                    "$ref": "#/$defs/InstanceProtected"
                },
                "WeightedCapacity": {
                    "$ref": "#/$defs/XmlStringMaxLen32"
                }
            }
        },
        "LifecycleState": {
            "enum": [
                "PENDING",
                "PENDING_WAIT",
                "PENDING_PROCEED",
                "QUARANTINED",
                "IN_SERVICE",
                "TERMINATING",
                "TERMINATING_WAIT",
                "TERMINATING_PROCEED",
                "TERMINATED",
                "DETACHING",
                "DETACHED",
                "ENTERING_STANDBY",
                "STANDBY",
                "WARMED_PENDING",
                "WARMED_PENDING_WAIT",
                "WARMED_PENDING_PROCEED",
                "WARMED_TERMINATING",
                "WARMED_TERMINATING_WAIT",
                "WARMED_TERMINATING_PROCEED",
                "WARMED_TERMINATED",
                "WARMED_STOPPED",
                "WARMED_RUNNING",
                "WARMED_HIBERNATED"
            ]
        },
        "SuspendedProcesses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SuspendedProcess"
            }
        },
        "SuspendedProcess": {
            "type": "object",
            "properties": {
                "ProcessName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "SuspensionReason": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "EnabledMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnabledMetric"
            }
        },
        "EnabledMetric": {
            "type": "object",
            "properties": {
                "Metric": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "Granularity": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "TagDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagDescription"
            }
        },
        "TagDescription": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/XmlString"
                },
                "ResourceType": {
                    "$ref": "#/$defs/XmlString"
                },
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                },
                "PropagateAtLaunch": {
                    "$ref": "#/$defs/PropagateAtLaunch"
                }
            }
        },
        "WarmPoolConfiguration": {
            "type": "object",
            "properties": {
                "MaxGroupPreparedCapacity": {
                    "$ref": "#/$defs/MaxGroupPreparedCapacity"
                },
                "MinSize": {
                    "$ref": "#/$defs/WarmPoolMinSize"
                },
                "PoolState": {
                    "$ref": "#/$defs/WarmPoolState"
                },
                "Status": {
                    "$ref": "#/$defs/WarmPoolStatus"
                },
                "InstanceReusePolicy": {
                    "$ref": "#/$defs/InstanceReusePolicy"
                }
            }
        },
        "MaxGroupPreparedCapacity": {
            "type": "integer",
            "format": "int32"
        },
        "WarmPoolMinSize": {
            "type": "integer",
            "format": "int32"
        },
        "WarmPoolState": {
            "enum": [
                "Stopped",
                "Running",
                "Hibernated"
            ]
        },
        "WarmPoolStatus": {
            "enum": [
                "PendingDelete"
            ]
        },
        "InstanceReusePolicy": {
            "type": "object",
            "properties": {
                "ReuseOnScaleIn": {
                    "$ref": "#/$defs/ReuseOnScaleIn"
                }
            }
        },
        "ReuseOnScaleIn": {
            "type": "boolean"
        },
        "WarmPoolSize": {
            "type": "integer",
            "format": "int32"
        },
        "AutoScalingGroupNamesType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupNames": {
                    "$ref": "#/$defs/AutoScalingGroupNames"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                },
                "Filters": {
                    "$ref": "#/$defs/Filters"
                }
            }
        },
        "AutoScalingGroupNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen255"
            }
        },
        "MaxRecords": {
            "type": "integer",
            "format": "int32"
        },
        "Filters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/XmlString"
                },
                "Values": {
                    "$ref": "#/$defs/Values"
                }
            }
        },
        "Values": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlString"
            }
        },
        "AutoScalingInstancesType": {
            "type": "object",
            "properties": {
                "AutoScalingInstances": {
                    "$ref": "#/$defs/AutoScalingInstances"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "AutoScalingInstances": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoScalingInstanceDetails"
            }
        },
        "AutoScalingInstanceDetails": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/XmlStringMaxLen19"
                },
                "InstanceType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LifecycleState": {
                    "$ref": "#/$defs/XmlStringMaxLen32"
                },
                "HealthStatus": {
                    "$ref": "#/$defs/XmlStringMaxLen32"
                },
                "LaunchConfigurationName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LaunchTemplate": {
                    "$ref": "#/$defs/LaunchTemplateSpecification"
                },
                "ProtectedFromScaleIn": {
                    "$ref": "#/$defs/InstanceProtected"
                },
                "WeightedCapacity": {
                    "$ref": "#/$defs/XmlStringMaxLen32"
                }
            }
        },
        "DescribeAutoScalingInstancesType": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIds"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "DescribeAutoScalingNotificationTypesAnswer": {
            "type": "object",
            "properties": {
                "AutoScalingNotificationTypes": {
                    "$ref": "#/$defs/AutoScalingNotificationTypes"
                }
            }
        },
        "AutoScalingNotificationTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen255"
            }
        },
        "DescribeInstanceRefreshesAnswer": {
            "type": "object",
            "properties": {
                "InstanceRefreshes": {
                    "$ref": "#/$defs/InstanceRefreshes"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "InstanceRefreshes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceRefresh"
            }
        },
        "InstanceRefresh": {
            "type": "object",
            "properties": {
                "InstanceRefreshId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "Status": {
                    "$ref": "#/$defs/InstanceRefreshStatus"
                },
                "StatusReason": {
                    "$ref": "#/$defs/XmlStringMaxLen1023"
                },
                "StartTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "EndTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "PercentageComplete": {
                    "$ref": "#/$defs/IntPercent"
                },
                "InstancesToUpdate": {
                    "$ref": "#/$defs/InstancesToUpdate"
                },
                "ProgressDetails": {
                    "$ref": "#/$defs/InstanceRefreshProgressDetails"
                },
                "Preferences": {
                    "$ref": "#/$defs/RefreshPreferences"
                },
                "DesiredConfiguration": {
                    "$ref": "#/$defs/DesiredConfiguration"
                },
                "RollbackDetails": {
                    "$ref": "#/$defs/RollbackDetails"
                }
            }
        },
        "InstanceRefreshStatus": {
            "enum": [
                "Pending",
                "InProgress",
                "Successful",
                "Failed",
                "Cancelling",
                "Cancelled",
                "RollbackInProgress",
                "RollbackFailed",
                "RollbackSuccessful"
            ]
        },
        "XmlStringMaxLen1023": {
            "type": "string"
        },
        "IntPercent": {
            "type": "integer",
            "format": "int32"
        },
        "InstancesToUpdate": {
            "type": "integer",
            "format": "int32"
        },
        "InstanceRefreshProgressDetails": {
            "type": "object",
            "properties": {
                "LivePoolProgress": {
                    "$ref": "#/$defs/InstanceRefreshLivePoolProgress"
                },
                "WarmPoolProgress": {
                    "$ref": "#/$defs/InstanceRefreshWarmPoolProgress"
                }
            }
        },
        "InstanceRefreshLivePoolProgress": {
            "type": "object",
            "properties": {
                "PercentageComplete": {
                    "$ref": "#/$defs/IntPercent"
                },
                "InstancesToUpdate": {
                    "$ref": "#/$defs/InstancesToUpdate"
                }
            }
        },
        "InstanceRefreshWarmPoolProgress": {
            "type": "object",
            "properties": {
                "PercentageComplete": {
                    "$ref": "#/$defs/IntPercent"
                },
                "InstancesToUpdate": {
                    "$ref": "#/$defs/InstancesToUpdate"
                }
            }
        },
        "RefreshPreferences": {
            "type": "object",
            "properties": {
                "MinHealthyPercentage": {
                    "$ref": "#/$defs/IntPercent"
                },
                "InstanceWarmup": {
                    "$ref": "#/$defs/RefreshInstanceWarmup"
                },
                "CheckpointPercentages": {
                    "$ref": "#/$defs/CheckpointPercentages"
                },
                "CheckpointDelay": {
                    "$ref": "#/$defs/CheckpointDelay"
                },
                "SkipMatching": {
                    "$ref": "#/$defs/SkipMatching"
                },
                "AutoRollback": {
                    "$ref": "#/$defs/AutoRollback"
                },
                "ScaleInProtectedInstances": {
                    "$ref": "#/$defs/ScaleInProtectedInstances"
                },
                "StandbyInstances": {
                    "$ref": "#/$defs/StandbyInstances"
                },
                "AlarmSpecification": {
                    "$ref": "#/$defs/AlarmSpecification"
                },
                "MaxHealthyPercentage": {
                    "$ref": "#/$defs/IntPercent100To200"
                }
            }
        },
        "RefreshInstanceWarmup": {
            "type": "integer",
            "format": "int32"
        },
        "CheckpointPercentages": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonZeroIntPercent"
            }
        },
        "NonZeroIntPercent": {
            "type": "integer",
            "format": "int32"
        },
        "CheckpointDelay": {
            "type": "integer",
            "format": "int32"
        },
        "SkipMatching": {
            "type": "boolean"
        },
        "AutoRollback": {
            "type": "boolean"
        },
        "ScaleInProtectedInstances": {
            "enum": [
                "Refresh",
                "Ignore",
                "Wait"
            ]
        },
        "StandbyInstances": {
            "enum": [
                "Terminate",
                "Ignore",
                "Wait"
            ]
        },
        "AlarmSpecification": {
            "type": "object",
            "properties": {
                "Alarms": {
                    "$ref": "#/$defs/AlarmList"
                }
            }
        },
        "AlarmList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen255"
            }
        },
        "IntPercent100To200": {
            "type": "integer",
            "format": "int32"
        },
        "DesiredConfiguration": {
            "type": "object",
            "properties": {
                "LaunchTemplate": {
                    "$ref": "#/$defs/LaunchTemplateSpecification"
                },
                "MixedInstancesPolicy": {
                    "$ref": "#/$defs/MixedInstancesPolicy"
                }
            }
        },
        "RollbackDetails": {
            "type": "object",
            "properties": {
                "RollbackReason": {
                    "$ref": "#/$defs/XmlStringMaxLen1023"
                },
                "RollbackStartTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "PercentageCompleteOnRollback": {
                    "$ref": "#/$defs/IntPercent"
                },
                "InstancesToUpdateOnRollback": {
                    "$ref": "#/$defs/InstancesToUpdate"
                },
                "ProgressDetailsOnRollback": {
                    "$ref": "#/$defs/InstanceRefreshProgressDetails"
                }
            }
        },
        "DescribeInstanceRefreshesType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "InstanceRefreshIds": {
                    "$ref": "#/$defs/InstanceRefreshIds"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                }
            }
        },
        "InstanceRefreshIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen255"
            }
        },
        "LaunchConfigurationsType": {
            "type": "object",
            "properties": {
                "LaunchConfigurations": {
                    "$ref": "#/$defs/LaunchConfigurations"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "LaunchConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchConfiguration"
            }
        },
        "LaunchConfiguration": {
            "type": "object",
            "properties": {
                "LaunchConfigurationName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LaunchConfigurationARN": {
                    "$ref": "#/$defs/ResourceName"
                },
                "ImageId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "KeyName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroups"
                },
                "ClassicLinkVPCId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ClassicLinkVPCSecurityGroups": {
                    "$ref": "#/$defs/ClassicLinkVPCSecurityGroups"
                },
                "UserData": {
                    "$ref": "#/$defs/XmlStringUserData"
                },
                "InstanceType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "KernelId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "RamdiskId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/BlockDeviceMappings"
                },
                "InstanceMonitoring": {
                    "$ref": "#/$defs/InstanceMonitoring"
                },
                "SpotPrice": {
                    "$ref": "#/$defs/SpotPrice"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/XmlStringMaxLen1600"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/EbsOptimized"
                },
                "AssociatePublicIpAddress": {
                    "$ref": "#/$defs/AssociatePublicIpAddress"
                },
                "PlacementTenancy": {
                    "$ref": "#/$defs/XmlStringMaxLen64"
                },
                "MetadataOptions": {
                    "$ref": "#/$defs/InstanceMetadataOptions"
                }
            }
        },
        "LaunchConfigurationNamesType": {
            "type": "object",
            "properties": {
                "LaunchConfigurationNames": {
                    "$ref": "#/$defs/LaunchConfigurationNames"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                }
            }
        },
        "LaunchConfigurationNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen255"
            }
        },
        "DescribeLifecycleHooksAnswer": {
            "type": "object",
            "properties": {
                "LifecycleHooks": {
                    "$ref": "#/$defs/LifecycleHooks"
                }
            }
        },
        "LifecycleHooks": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LifecycleHook"
            }
        },
        "LifecycleHook": {
            "type": "object",
            "properties": {
                "LifecycleHookName": {
                    "$ref": "#/$defs/AsciiStringMaxLen255"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LifecycleTransition": {
                    "$ref": "#/$defs/LifecycleTransition"
                },
                "NotificationTargetARN": {
                    "$ref": "#/$defs/NotificationTargetResourceName"
                },
                "RoleARN": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "NotificationMetadata": {
                    "$ref": "#/$defs/AnyPrintableAsciiStringMaxLen4000"
                },
                "HeartbeatTimeout": {
                    "$ref": "#/$defs/HeartbeatTimeout"
                },
                "GlobalTimeout": {
                    "$ref": "#/$defs/GlobalTimeout"
                },
                "DefaultResult": {
                    "$ref": "#/$defs/LifecycleActionResult"
                }
            }
        },
        "GlobalTimeout": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeLifecycleHooksType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LifecycleHookNames": {
                    "$ref": "#/$defs/LifecycleHookNames"
                }
            }
        },
        "LifecycleHookNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AsciiStringMaxLen255"
            }
        },
        "DescribeLifecycleHookTypesAnswer": {
            "type": "object",
            "properties": {
                "LifecycleHookTypes": {
                    "$ref": "#/$defs/AutoScalingNotificationTypes"
                }
            }
        },
        "DescribeLoadBalancersResponse": {
            "type": "object",
            "properties": {
                "LoadBalancers": {
                    "$ref": "#/$defs/LoadBalancerStates"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "LoadBalancerStates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancerState"
            }
        },
        "LoadBalancerState": {
            "type": "object",
            "properties": {
                "LoadBalancerName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "State": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "DescribeLoadBalancersRequest": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                }
            }
        },
        "DescribeLoadBalancerTargetGroupsResponse": {
            "type": "object",
            "properties": {
                "LoadBalancerTargetGroups": {
                    "$ref": "#/$defs/LoadBalancerTargetGroupStates"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "LoadBalancerTargetGroupStates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancerTargetGroupState"
            }
        },
        "LoadBalancerTargetGroupState": {
            "type": "object",
            "properties": {
                "LoadBalancerTargetGroupARN": {
                    "$ref": "#/$defs/XmlStringMaxLen511"
                },
                "State": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "DescribeLoadBalancerTargetGroupsRequest": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                }
            }
        },
        "DescribeMetricCollectionTypesAnswer": {
            "type": "object",
            "properties": {
                "Metrics": {
                    "$ref": "#/$defs/MetricCollectionTypes"
                },
                "Granularities": {
                    "$ref": "#/$defs/MetricGranularityTypes"
                }
            }
        },
        "MetricCollectionTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricCollectionType"
            }
        },
        "MetricCollectionType": {
            "type": "object",
            "properties": {
                "Metric": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "MetricGranularityTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricGranularityType"
            }
        },
        "MetricGranularityType": {
            "type": "object",
            "properties": {
                "Granularity": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "DescribeNotificationConfigurationsAnswer": {
            "type": "object",
            "properties": {
                "NotificationConfigurations": {
                    "$ref": "#/$defs/NotificationConfigurations"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "NotificationConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NotificationConfiguration"
            }
        },
        "NotificationConfiguration": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "TopicARN": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "NotificationType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "DescribeNotificationConfigurationsType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupNames": {
                    "$ref": "#/$defs/AutoScalingGroupNames"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                }
            }
        },
        "PoliciesType": {
            "type": "object",
            "properties": {
                "ScalingPolicies": {
                    "$ref": "#/$defs/ScalingPolicies"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "ScalingPolicies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScalingPolicy"
            }
        },
        "ScalingPolicy": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "PolicyName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "PolicyARN": {
                    "$ref": "#/$defs/ResourceName"
                },
                "PolicyType": {
                    "$ref": "#/$defs/XmlStringMaxLen64"
                },
                "AdjustmentType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "MinAdjustmentStep": {
                    "$ref": "#/$defs/MinAdjustmentStep"
                },
                "MinAdjustmentMagnitude": {
                    "$ref": "#/$defs/MinAdjustmentMagnitude"
                },
                "ScalingAdjustment": {
                    "$ref": "#/$defs/PolicyIncrement"
                },
                "Cooldown": {
                    "$ref": "#/$defs/Cooldown"
                },
                "StepAdjustments": {
                    "$ref": "#/$defs/StepAdjustments"
                },
                "MetricAggregationType": {
                    "$ref": "#/$defs/XmlStringMaxLen32"
                },
                "EstimatedInstanceWarmup": {
                    "$ref": "#/$defs/EstimatedInstanceWarmup"
                },
                "Alarms": {
                    "$ref": "#/$defs/Alarms"
                },
                "TargetTrackingConfiguration": {
                    "$ref": "#/$defs/TargetTrackingConfiguration"
                },
                "Enabled": {
                    "$ref": "#/$defs/ScalingPolicyEnabled"
                },
                "PredictiveScalingConfiguration": {
                    "$ref": "#/$defs/PredictiveScalingConfiguration"
                }
            }
        },
        "MinAdjustmentStep": {
            "type": "integer",
            "format": "int32"
        },
        "MinAdjustmentMagnitude": {
            "type": "integer",
            "format": "int32"
        },
        "PolicyIncrement": {
            "type": "integer",
            "format": "int32"
        },
        "StepAdjustments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StepAdjustment"
            }
        },
        "StepAdjustment": {
            "type": "object",
            "properties": {
                "MetricIntervalLowerBound": {
                    "$ref": "#/$defs/MetricScale"
                },
                "MetricIntervalUpperBound": {
                    "$ref": "#/$defs/MetricScale"
                },
                "ScalingAdjustment": {
                    "$ref": "#/$defs/PolicyIncrement"
                }
            }
        },
        "MetricScale": {
            "type": "number",
            "format": "double"
        },
        "EstimatedInstanceWarmup": {
            "type": "integer",
            "format": "int32"
        },
        "Alarms": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Alarm"
            }
        },
        "Alarm": {
            "type": "object",
            "properties": {
                "AlarmName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "AlarmARN": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "TargetTrackingConfiguration": {
            "type": "object",
            "properties": {
                "PredefinedMetricSpecification": {
                    "$ref": "#/$defs/PredefinedMetricSpecification"
                },
                "CustomizedMetricSpecification": {
                    "$ref": "#/$defs/CustomizedMetricSpecification"
                },
                "TargetValue": {
                    "$ref": "#/$defs/MetricScale"
                },
                "DisableScaleIn": {
                    "$ref": "#/$defs/DisableScaleIn"
                }
            }
        },
        "PredefinedMetricSpecification": {
            "type": "object",
            "properties": {
                "PredefinedMetricType": {
                    "$ref": "#/$defs/MetricType"
                },
                "ResourceLabel": {
                    "$ref": "#/$defs/XmlStringMaxLen1023"
                }
            }
        },
        "MetricType": {
            "enum": [
                "ASGAverageCPUUtilization",
                "ASGAverageNetworkIn",
                "ASGAverageNetworkOut",
                "ALBRequestCountPerTarget"
            ]
        },
        "CustomizedMetricSpecification": {
            "type": "object",
            "properties": {
                "MetricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "Namespace": {
                    "$ref": "#/$defs/MetricNamespace"
                },
                "Dimensions": {
                    "$ref": "#/$defs/MetricDimensions"
                },
                "Statistic": {
                    "$ref": "#/$defs/MetricStatistic"
                },
                "Unit": {
                    "$ref": "#/$defs/MetricUnit"
                },
                "Metrics": {
                    "$ref": "#/$defs/TargetTrackingMetricDataQueries"
                }
            }
        },
        "MetricName": {
            "type": "string"
        },
        "MetricNamespace": {
            "type": "string"
        },
        "MetricDimensions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricDimension"
            }
        },
        "MetricDimension": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/MetricDimensionName"
                },
                "Value": {
                    "$ref": "#/$defs/MetricDimensionValue"
                }
            }
        },
        "MetricDimensionName": {
            "type": "string"
        },
        "MetricDimensionValue": {
            "type": "string"
        },
        "MetricStatistic": {
            "enum": [
                "Average",
                "Minimum",
                "Maximum",
                "SampleCount",
                "Sum"
            ]
        },
        "MetricUnit": {
            "type": "string"
        },
        "TargetTrackingMetricDataQueries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetTrackingMetricDataQuery"
            }
        },
        "TargetTrackingMetricDataQuery": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/XmlStringMaxLen64"
                },
                "Expression": {
                    "$ref": "#/$defs/XmlStringMaxLen2047"
                },
                "MetricStat": {
                    "$ref": "#/$defs/TargetTrackingMetricStat"
                },
                "Label": {
                    "$ref": "#/$defs/XmlStringMetricLabel"
                },
                "ReturnData": {
                    "$ref": "#/$defs/ReturnData"
                }
            }
        },
        "XmlStringMaxLen2047": {
            "type": "string"
        },
        "TargetTrackingMetricStat": {
            "type": "object",
            "properties": {
                "Metric": {
                    "$ref": "#/$defs/Metric"
                },
                "Stat": {
                    "$ref": "#/$defs/XmlStringMetricStat"
                },
                "Unit": {
                    "$ref": "#/$defs/MetricUnit"
                }
            }
        },
        "Metric": {
            "type": "object",
            "properties": {
                "Namespace": {
                    "$ref": "#/$defs/MetricNamespace"
                },
                "MetricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "Dimensions": {
                    "$ref": "#/$defs/MetricDimensions"
                }
            }
        },
        "XmlStringMetricStat": {
            "type": "string"
        },
        "XmlStringMetricLabel": {
            "type": "string"
        },
        "ReturnData": {
            "type": "boolean"
        },
        "DisableScaleIn": {
            "type": "boolean"
        },
        "ScalingPolicyEnabled": {
            "type": "boolean"
        },
        "PredictiveScalingConfiguration": {
            "type": "object",
            "properties": {
                "MetricSpecifications": {
                    "$ref": "#/$defs/PredictiveScalingMetricSpecifications"
                },
                "Mode": {
                    "$ref": "#/$defs/PredictiveScalingMode"
                },
                "SchedulingBufferTime": {
                    "$ref": "#/$defs/PredictiveScalingSchedulingBufferTime"
                },
                "MaxCapacityBreachBehavior": {
                    "$ref": "#/$defs/PredictiveScalingMaxCapacityBreachBehavior"
                },
                "MaxCapacityBuffer": {
                    "$ref": "#/$defs/PredictiveScalingMaxCapacityBuffer"
                }
            }
        },
        "PredictiveScalingMetricSpecifications": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PredictiveScalingMetricSpecification"
            }
        },
        "PredictiveScalingMetricSpecification": {
            "type": "object",
            "properties": {
                "TargetValue": {
                    "$ref": "#/$defs/MetricScale"
                },
                "PredefinedMetricPairSpecification": {
                    "$ref": "#/$defs/PredictiveScalingPredefinedMetricPair"
                },
                "PredefinedScalingMetricSpecification": {
                    "$ref": "#/$defs/PredictiveScalingPredefinedScalingMetric"
                },
                "PredefinedLoadMetricSpecification": {
                    "$ref": "#/$defs/PredictiveScalingPredefinedLoadMetric"
                },
                "CustomizedScalingMetricSpecification": {
                    "$ref": "#/$defs/PredictiveScalingCustomizedScalingMetric"
                },
                "CustomizedLoadMetricSpecification": {
                    "$ref": "#/$defs/PredictiveScalingCustomizedLoadMetric"
                },
                "CustomizedCapacityMetricSpecification": {
                    "$ref": "#/$defs/PredictiveScalingCustomizedCapacityMetric"
                }
            }
        },
        "PredictiveScalingPredefinedMetricPair": {
            "type": "object",
            "properties": {
                "PredefinedMetricType": {
                    "$ref": "#/$defs/PredefinedMetricPairType"
                },
                "ResourceLabel": {
                    "$ref": "#/$defs/XmlStringMaxLen1023"
                }
            }
        },
        "PredefinedMetricPairType": {
            "enum": [
                "ASGCPUUtilization",
                "ASGNetworkIn",
                "ASGNetworkOut",
                "ALBRequestCount"
            ]
        },
        "PredictiveScalingPredefinedScalingMetric": {
            "type": "object",
            "properties": {
                "PredefinedMetricType": {
                    "$ref": "#/$defs/PredefinedScalingMetricType"
                },
                "ResourceLabel": {
                    "$ref": "#/$defs/XmlStringMaxLen1023"
                }
            }
        },
        "PredefinedScalingMetricType": {
            "enum": [
                "ASGAverageCPUUtilization",
                "ASGAverageNetworkIn",
                "ASGAverageNetworkOut",
                "ALBRequestCountPerTarget"
            ]
        },
        "PredictiveScalingPredefinedLoadMetric": {
            "type": "object",
            "properties": {
                "PredefinedMetricType": {
                    "$ref": "#/$defs/PredefinedLoadMetricType"
                },
                "ResourceLabel": {
                    "$ref": "#/$defs/XmlStringMaxLen1023"
                }
            }
        },
        "PredefinedLoadMetricType": {
            "enum": [
                "ASGTotalCPUUtilization",
                "ASGTotalNetworkIn",
                "ASGTotalNetworkOut",
                "ALBTargetGroupRequestCount"
            ]
        },
        "PredictiveScalingCustomizedScalingMetric": {
            "type": "object",
            "properties": {
                "MetricDataQueries": {
                    "$ref": "#/$defs/MetricDataQueries"
                }
            }
        },
        "MetricDataQueries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricDataQuery"
            }
        },
        "MetricDataQuery": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "Expression": {
                    "$ref": "#/$defs/XmlStringMaxLen1023"
                },
                "MetricStat": {
                    "$ref": "#/$defs/MetricStat"
                },
                "Label": {
                    "$ref": "#/$defs/XmlStringMetricLabel"
                },
                "ReturnData": {
                    "$ref": "#/$defs/ReturnData"
                }
            }
        },
        "MetricStat": {
            "type": "object",
            "properties": {
                "Metric": {
                    "$ref": "#/$defs/Metric"
                },
                "Stat": {
                    "$ref": "#/$defs/XmlStringMetricStat"
                },
                "Unit": {
                    "$ref": "#/$defs/MetricUnit"
                }
            }
        },
        "PredictiveScalingCustomizedLoadMetric": {
            "type": "object",
            "properties": {
                "MetricDataQueries": {
                    "$ref": "#/$defs/MetricDataQueries"
                }
            }
        },
        "PredictiveScalingCustomizedCapacityMetric": {
            "type": "object",
            "properties": {
                "MetricDataQueries": {
                    "$ref": "#/$defs/MetricDataQueries"
                }
            }
        },
        "PredictiveScalingMode": {
            "enum": [
                "ForecastAndScale",
                "ForecastOnly"
            ]
        },
        "PredictiveScalingSchedulingBufferTime": {
            "type": "integer",
            "format": "int32"
        },
        "PredictiveScalingMaxCapacityBreachBehavior": {
            "enum": [
                "HonorMaxCapacity",
                "IncreaseMaxCapacity"
            ]
        },
        "PredictiveScalingMaxCapacityBuffer": {
            "type": "integer",
            "format": "int32"
        },
        "DescribePoliciesType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "PolicyNames": {
                    "$ref": "#/$defs/PolicyNames"
                },
                "PolicyTypes": {
                    "$ref": "#/$defs/PolicyTypes"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                }
            }
        },
        "PolicyNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceName"
            }
        },
        "PolicyTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen64"
            }
        },
        "ActivitiesType": {
            "type": "object",
            "properties": {
                "Activities": {
                    "$ref": "#/$defs/Activities"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "Activities": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Activity"
            }
        },
        "Activity": {
            "type": "object",
            "properties": {
                "ActivityId": {
                    "$ref": "#/$defs/XmlString"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "Description": {
                    "$ref": "#/$defs/XmlString"
                },
                "Cause": {
                    "$ref": "#/$defs/XmlStringMaxLen1023"
                },
                "StartTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "EndTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "StatusCode": {
                    "$ref": "#/$defs/ScalingActivityStatusCode"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "Progress": {
                    "$ref": "#/$defs/Progress"
                },
                "Details": {
                    "$ref": "#/$defs/XmlString"
                },
                "AutoScalingGroupState": {
                    "$ref": "#/$defs/AutoScalingGroupState"
                },
                "AutoScalingGroupARN": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "ScalingActivityStatusCode": {
            "enum": [
                "PendingSpotBidPlacement",
                "WaitingForSpotInstanceRequestId",
                "WaitingForSpotInstanceId",
                "WaitingForInstanceId",
                "PreInService",
                "InProgress",
                "WaitingForELBConnectionDraining",
                "MidLifecycleAction",
                "WaitingForInstanceWarmup",
                "Successful",
                "Failed",
                "Cancelled",
                "WaitingForConnectionDraining"
            ]
        },
        "Progress": {
            "type": "integer",
            "format": "int32"
        },
        "AutoScalingGroupState": {
            "type": "string"
        },
        "DescribeScalingActivitiesType": {
            "type": "object",
            "properties": {
                "ActivityIds": {
                    "$ref": "#/$defs/ActivityIds"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "IncludeDeletedGroups": {
                    "$ref": "#/$defs/IncludeDeletedGroups"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "ActivityIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlString"
            }
        },
        "IncludeDeletedGroups": {
            "type": "boolean"
        },
        "ProcessesType": {
            "type": "object",
            "properties": {
                "Processes": {
                    "$ref": "#/$defs/Processes"
                }
            }
        },
        "Processes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProcessType"
            }
        },
        "ProcessType": {
            "type": "object",
            "properties": {
                "ProcessName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "ScheduledActionsType": {
            "type": "object",
            "properties": {
                "ScheduledUpdateGroupActions": {
                    "$ref": "#/$defs/ScheduledUpdateGroupActions"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "ScheduledUpdateGroupActions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledUpdateGroupAction"
            }
        },
        "ScheduledUpdateGroupAction": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ScheduledActionName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ScheduledActionARN": {
                    "$ref": "#/$defs/ResourceName"
                },
                "Time": {
                    "$ref": "#/$defs/TimestampType"
                },
                "StartTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "EndTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "Recurrence": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "MinSize": {
                    "$ref": "#/$defs/AutoScalingGroupMinSize"
                },
                "MaxSize": {
                    "$ref": "#/$defs/AutoScalingGroupMaxSize"
                },
                "DesiredCapacity": {
                    "$ref": "#/$defs/AutoScalingGroupDesiredCapacity"
                },
                "TimeZone": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "DescribeScheduledActionsType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ScheduledActionNames": {
                    "$ref": "#/$defs/ScheduledActionNames"
                },
                "StartTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "EndTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                }
            }
        },
        "TagsType": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagDescriptionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "DescribeTagsType": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/Filters"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                }
            }
        },
        "DescribeTerminationPolicyTypesAnswer": {
            "type": "object",
            "properties": {
                "TerminationPolicyTypes": {
                    "$ref": "#/$defs/TerminationPolicies"
                }
            }
        },
        "DescribeTrafficSourcesResponse": {
            "type": "object",
            "properties": {
                "TrafficSources": {
                    "$ref": "#/$defs/TrafficSourceStates"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "TrafficSourceStates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficSourceState"
            }
        },
        "TrafficSourceState": {
            "type": "object",
            "properties": {
                "TrafficSource": {
                    "$ref": "#/$defs/XmlStringMaxLen511"
                },
                "State": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "Identifier": {
                    "$ref": "#/$defs/XmlStringMaxLen511"
                },
                "Type": {
                    "$ref": "#/$defs/XmlStringMaxLen511"
                }
            }
        },
        "DescribeTrafficSourcesRequest": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "TrafficSourceType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                }
            }
        },
        "DescribeWarmPoolAnswer": {
            "type": "object",
            "properties": {
                "WarmPoolConfiguration": {
                    "$ref": "#/$defs/WarmPoolConfiguration"
                },
                "Instances": {
                    "$ref": "#/$defs/Instances"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "DescribeWarmPoolType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "MaxRecords": {
                    "$ref": "#/$defs/MaxRecords"
                },
                "NextToken": {
                    "$ref": "#/$defs/XmlString"
                }
            }
        },
        "DetachInstancesAnswer": {
            "type": "object",
            "properties": {
                "Activities": {
                    "$ref": "#/$defs/Activities"
                }
            }
        },
        "DetachInstancesQuery": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIds"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ShouldDecrementDesiredCapacity": {
                    "$ref": "#/$defs/ShouldDecrementDesiredCapacity"
                }
            }
        },
        "ShouldDecrementDesiredCapacity": {
            "type": "boolean"
        },
        "DetachLoadBalancersResultType": {
            "type": "object",
            "properties": {}
        },
        "DetachLoadBalancersType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LoadBalancerNames": {
                    "$ref": "#/$defs/LoadBalancerNames"
                }
            }
        },
        "DetachLoadBalancerTargetGroupsResultType": {
            "type": "object",
            "properties": {}
        },
        "DetachLoadBalancerTargetGroupsType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "TargetGroupARNs": {
                    "$ref": "#/$defs/TargetGroupARNs"
                }
            }
        },
        "DetachTrafficSourcesResultType": {
            "type": "object",
            "properties": {}
        },
        "DetachTrafficSourcesType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "TrafficSources": {
                    "$ref": "#/$defs/TrafficSources"
                }
            }
        },
        "DisableMetricsCollectionQuery": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "Metrics": {
                    "$ref": "#/$defs/Metrics"
                }
            }
        },
        "Metrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen255"
            }
        },
        "EnableMetricsCollectionQuery": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "Metrics": {
                    "$ref": "#/$defs/Metrics"
                },
                "Granularity": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "EnterStandbyAnswer": {
            "type": "object",
            "properties": {
                "Activities": {
                    "$ref": "#/$defs/Activities"
                }
            }
        },
        "EnterStandbyQuery": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIds"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ShouldDecrementDesiredCapacity": {
                    "$ref": "#/$defs/ShouldDecrementDesiredCapacity"
                }
            }
        },
        "ExecutePolicyType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "PolicyName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "HonorCooldown": {
                    "$ref": "#/$defs/HonorCooldown"
                },
                "MetricValue": {
                    "$ref": "#/$defs/MetricScale"
                },
                "BreachThreshold": {
                    "$ref": "#/$defs/MetricScale"
                }
            }
        },
        "HonorCooldown": {
            "type": "boolean"
        },
        "ExitStandbyAnswer": {
            "type": "object",
            "properties": {
                "Activities": {
                    "$ref": "#/$defs/Activities"
                }
            }
        },
        "ExitStandbyQuery": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIds"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "GetPredictiveScalingForecastAnswer": {
            "type": "object",
            "properties": {
                "LoadForecast": {
                    "$ref": "#/$defs/LoadForecasts"
                },
                "CapacityForecast": {
                    "$ref": "#/$defs/CapacityForecast"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/TimestampType"
                }
            }
        },
        "LoadForecasts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadForecast"
            }
        },
        "LoadForecast": {
            "type": "object",
            "properties": {
                "Timestamps": {
                    "$ref": "#/$defs/PredictiveScalingForecastTimestamps"
                },
                "Values": {
                    "$ref": "#/$defs/PredictiveScalingForecastValues"
                },
                "MetricSpecification": {
                    "$ref": "#/$defs/PredictiveScalingMetricSpecification"
                }
            }
        },
        "PredictiveScalingForecastTimestamps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TimestampType"
            }
        },
        "PredictiveScalingForecastValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricScale"
            }
        },
        "CapacityForecast": {
            "type": "object",
            "properties": {
                "Timestamps": {
                    "$ref": "#/$defs/PredictiveScalingForecastTimestamps"
                },
                "Values": {
                    "$ref": "#/$defs/PredictiveScalingForecastValues"
                }
            }
        },
        "GetPredictiveScalingForecastType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "PolicyName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "StartTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "EndTime": {
                    "$ref": "#/$defs/TimestampType"
                }
            }
        },
        "PutLifecycleHookAnswer": {
            "type": "object",
            "properties": {}
        },
        "PutLifecycleHookType": {
            "type": "object",
            "properties": {
                "LifecycleHookName": {
                    "$ref": "#/$defs/AsciiStringMaxLen255"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LifecycleTransition": {
                    "$ref": "#/$defs/LifecycleTransition"
                },
                "RoleARN": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "NotificationTargetARN": {
                    "$ref": "#/$defs/NotificationTargetResourceName"
                },
                "NotificationMetadata": {
                    "$ref": "#/$defs/AnyPrintableAsciiStringMaxLen4000"
                },
                "HeartbeatTimeout": {
                    "$ref": "#/$defs/HeartbeatTimeout"
                },
                "DefaultResult": {
                    "$ref": "#/$defs/LifecycleActionResult"
                }
            }
        },
        "PutNotificationConfigurationType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "TopicARN": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "NotificationTypes": {
                    "$ref": "#/$defs/AutoScalingNotificationTypes"
                }
            }
        },
        "PolicyARNType": {
            "type": "object",
            "properties": {
                "PolicyARN": {
                    "$ref": "#/$defs/ResourceName"
                },
                "Alarms": {
                    "$ref": "#/$defs/Alarms"
                }
            }
        },
        "PutScalingPolicyType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "PolicyName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "PolicyType": {
                    "$ref": "#/$defs/XmlStringMaxLen64"
                },
                "AdjustmentType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "MinAdjustmentStep": {
                    "$ref": "#/$defs/MinAdjustmentStep"
                },
                "MinAdjustmentMagnitude": {
                    "$ref": "#/$defs/MinAdjustmentMagnitude"
                },
                "ScalingAdjustment": {
                    "$ref": "#/$defs/PolicyIncrement"
                },
                "Cooldown": {
                    "$ref": "#/$defs/Cooldown"
                },
                "MetricAggregationType": {
                    "$ref": "#/$defs/XmlStringMaxLen32"
                },
                "StepAdjustments": {
                    "$ref": "#/$defs/StepAdjustments"
                },
                "EstimatedInstanceWarmup": {
                    "$ref": "#/$defs/EstimatedInstanceWarmup"
                },
                "TargetTrackingConfiguration": {
                    "$ref": "#/$defs/TargetTrackingConfiguration"
                },
                "Enabled": {
                    "$ref": "#/$defs/ScalingPolicyEnabled"
                },
                "PredictiveScalingConfiguration": {
                    "$ref": "#/$defs/PredictiveScalingConfiguration"
                }
            }
        },
        "PutScheduledUpdateGroupActionType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ScheduledActionName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "Time": {
                    "$ref": "#/$defs/TimestampType"
                },
                "StartTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "EndTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "Recurrence": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "MinSize": {
                    "$ref": "#/$defs/AutoScalingGroupMinSize"
                },
                "MaxSize": {
                    "$ref": "#/$defs/AutoScalingGroupMaxSize"
                },
                "DesiredCapacity": {
                    "$ref": "#/$defs/AutoScalingGroupDesiredCapacity"
                },
                "TimeZone": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "PutWarmPoolAnswer": {
            "type": "object",
            "properties": {}
        },
        "PutWarmPoolType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "MaxGroupPreparedCapacity": {
                    "$ref": "#/$defs/MaxGroupPreparedCapacity"
                },
                "MinSize": {
                    "$ref": "#/$defs/WarmPoolMinSize"
                },
                "PoolState": {
                    "$ref": "#/$defs/WarmPoolState"
                },
                "InstanceReusePolicy": {
                    "$ref": "#/$defs/InstanceReusePolicy"
                }
            }
        },
        "RecordLifecycleActionHeartbeatAnswer": {
            "type": "object",
            "properties": {}
        },
        "RecordLifecycleActionHeartbeatType": {
            "type": "object",
            "properties": {
                "LifecycleHookName": {
                    "$ref": "#/$defs/AsciiStringMaxLen255"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "LifecycleActionToken": {
                    "$ref": "#/$defs/LifecycleActionToken"
                },
                "InstanceId": {
                    "$ref": "#/$defs/XmlStringMaxLen19"
                }
            }
        },
        "ScalingProcessQuery": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ScalingProcesses": {
                    "$ref": "#/$defs/ProcessNames"
                }
            }
        },
        "ProcessNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/XmlStringMaxLen255"
            }
        },
        "RollbackInstanceRefreshAnswer": {
            "type": "object",
            "properties": {
                "InstanceRefreshId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "RollbackInstanceRefreshType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "SetDesiredCapacityType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "DesiredCapacity": {
                    "$ref": "#/$defs/AutoScalingGroupDesiredCapacity"
                },
                "HonorCooldown": {
                    "$ref": "#/$defs/HonorCooldown"
                }
            }
        },
        "SetInstanceHealthQuery": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/XmlStringMaxLen19"
                },
                "HealthStatus": {
                    "$ref": "#/$defs/XmlStringMaxLen32"
                },
                "ShouldRespectGracePeriod": {
                    "$ref": "#/$defs/ShouldRespectGracePeriod"
                }
            }
        },
        "ShouldRespectGracePeriod": {
            "type": "boolean"
        },
        "SetInstanceProtectionAnswer": {
            "type": "object",
            "properties": {}
        },
        "SetInstanceProtectionQuery": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIds"
                },
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "ProtectedFromScaleIn": {
                    "$ref": "#/$defs/ProtectedFromScaleIn"
                }
            }
        },
        "ProtectedFromScaleIn": {
            "type": "boolean"
        },
        "StartInstanceRefreshAnswer": {
            "type": "object",
            "properties": {
                "InstanceRefreshId": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                }
            }
        },
        "StartInstanceRefreshType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "Strategy": {
                    "$ref": "#/$defs/RefreshStrategy"
                },
                "DesiredConfiguration": {
                    "$ref": "#/$defs/DesiredConfiguration"
                },
                "Preferences": {
                    "$ref": "#/$defs/RefreshPreferences"
                }
            }
        },
        "RefreshStrategy": {
            "enum": [
                "Rolling"
            ]
        },
        "ActivityType": {
            "type": "object",
            "properties": {
                "Activity": {
                    "$ref": "#/$defs/Activity"
                }
            }
        },
        "TerminateInstanceInAutoScalingGroupType": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/XmlStringMaxLen19"
                },
                "ShouldDecrementDesiredCapacity": {
                    "$ref": "#/$defs/ShouldDecrementDesiredCapacity"
                }
            }
        },
        "UpdateAutoScalingGroupType": {
            "type": "object",
            "properties": {
                "AutoScalingGroupName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LaunchConfigurationName": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "LaunchTemplate": {
                    "$ref": "#/$defs/LaunchTemplateSpecification"
                },
                "MixedInstancesPolicy": {
                    "$ref": "#/$defs/MixedInstancesPolicy"
                },
                "MinSize": {
                    "$ref": "#/$defs/AutoScalingGroupMinSize"
                },
                "MaxSize": {
                    "$ref": "#/$defs/AutoScalingGroupMaxSize"
                },
                "DesiredCapacity": {
                    "$ref": "#/$defs/AutoScalingGroupDesiredCapacity"
                },
                "DefaultCooldown": {
                    "$ref": "#/$defs/Cooldown"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZones"
                },
                "HealthCheckType": {
                    "$ref": "#/$defs/XmlStringMaxLen32"
                },
                "HealthCheckGracePeriod": {
                    "$ref": "#/$defs/HealthCheckGracePeriod"
                },
                "PlacementGroup": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "VPCZoneIdentifier": {
                    "$ref": "#/$defs/XmlStringMaxLen5000"
                },
                "TerminationPolicies": {
                    "$ref": "#/$defs/TerminationPolicies"
                },
                "NewInstancesProtectedFromScaleIn": {
                    "$ref": "#/$defs/InstanceProtected"
                },
                "ServiceLinkedRoleARN": {
                    "$ref": "#/$defs/ResourceName"
                },
                "MaxInstanceLifetime": {
                    "$ref": "#/$defs/MaxInstanceLifetime"
                },
                "CapacityRebalance": {
                    "$ref": "#/$defs/CapacityRebalanceEnabled"
                },
                "Context": {
                    "$ref": "#/$defs/Context"
                },
                "DesiredCapacityType": {
                    "$ref": "#/$defs/XmlStringMaxLen255"
                },
                "DefaultInstanceWarmup": {
                    "$ref": "#/$defs/DefaultInstanceWarmup"
                },
                "InstanceMaintenancePolicy": {
                    "$ref": "#/$defs/InstanceMaintenancePolicy"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://autoscaling-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "stringEquals",
                                                        "argv": [
                                                            {
                                                                "fn": "getAttr",
                                                                "argv": [
                                                                    {
                                                                        "ref": "PartitionResult"
                                                                    },
                                                                    "name"
                                                                ]
                                                            },
                                                            "aws-us-gov"
                                                        ]
                                                    }
                                                ],
                                                "endpoint": {
                                                    "url": "https://autoscaling.{Region}.amazonaws.com",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            },
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://autoscaling-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://autoscaling.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://autoscaling.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}