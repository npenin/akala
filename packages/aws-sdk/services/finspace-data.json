{
    "name": "finspace-api",
    "commands": [
        {
            "name": "AssociateUserToPermissionGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateUserToPermissionGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateUserToPermissionGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateUserToPermissionGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateChangeset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateChangeset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateChangesetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateChangesetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDataset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDataset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDatasetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDatasetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDataView",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDataView"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDataViewResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDataViewRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePermissionGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreatePermissionGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePermissionGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePermissionGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDataset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteDataset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDatasetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDatasetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePermissionGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeletePermissionGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePermissionGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePermissionGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisableUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateUserFromPermissionGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateUserFromPermissionGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateUserFromPermissionGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateUserFromPermissionGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "EnableUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetChangeset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetChangeset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetChangesetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetChangesetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDataset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDatasetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDatasetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataView",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDataView"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataViewResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataViewRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetExternalDataViewAccessDetails",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetExternalDataViewAccessDetails"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetExternalDataViewAccessDetailsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetExternalDataViewAccessDetailsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPermissionGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPermissionGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPermissionGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPermissionGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetProgrammaticAccessCredentials",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetProgrammaticAccessCredentials"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetProgrammaticAccessCredentialsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetProgrammaticAccessCredentialsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWorkingLocation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWorkingLocation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWorkingLocationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWorkingLocationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListChangesets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListChangesets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListChangesetsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListChangesetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDatasets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDatasets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDatasetsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDatasetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDataViews",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDataViews"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDataViewsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDataViewsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPermissionGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListPermissionGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPermissionGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPermissionGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPermissionGroupsByUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListPermissionGroupsByUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPermissionGroupsByUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPermissionGroupsByUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListUsers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListUsers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListUsersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListUsersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListUsersByPermissionGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListUsersByPermissionGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListUsersByPermissionGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListUsersByPermissionGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetUserPassword",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResetUserPassword"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetUserPasswordResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetUserPasswordRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateChangeset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateChangeset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateChangesetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateChangesetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDataset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDataset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDatasetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDatasetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePermissionGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdatePermissionGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePermissionGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePermissionGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateUserRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateUserToPermissionGroupResponse": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                }
            }
        },
        "StatusCode": {
            "type": "integer",
            "format": "int32"
        },
        "AssociateUserToPermissionGroupRequest": {
            "type": "object",
            "properties": {
                "permissionGroupId": {
                    "$ref": "#/$defs/PermissionGroupId"
                },
                "userId": {
                    "$ref": "#/$defs/UserId"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "PermissionGroupId": {
            "type": "string"
        },
        "UserId": {
            "type": "string"
        },
        "ClientToken": {
            "type": "string"
        },
        "CreateChangesetResponse": {
            "type": "object",
            "properties": {
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                }
            }
        },
        "DatasetId": {
            "type": "string"
        },
        "ChangesetId": {
            "type": "string"
        },
        "CreateChangesetRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "changeType": {
                    "$ref": "#/$defs/ChangeType"
                },
                "sourceParams": {
                    "$ref": "#/$defs/SourceParams"
                },
                "formatParams": {
                    "$ref": "#/$defs/FormatParams"
                }
            }
        },
        "ChangeType": {
            "enum": [
                "REPLACE",
                "APPEND",
                "MODIFY"
            ]
        },
        "SourceParams": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/StringMapValue"
            }
        },
        "StringMapValue": {
            "type": "string"
        },
        "FormatParams": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/StringMapValue"
            }
        },
        "CreateDatasetResponse": {
            "type": "object",
            "properties": {
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                }
            }
        },
        "CreateDatasetRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "datasetTitle": {
                    "$ref": "#/$defs/DatasetTitle"
                },
                "kind": {
                    "$ref": "#/$defs/DatasetKind"
                },
                "datasetDescription": {
                    "$ref": "#/$defs/DatasetDescription"
                },
                "ownerInfo": {
                    "$ref": "#/$defs/DatasetOwnerInfo"
                },
                "permissionGroupParams": {
                    "$ref": "#/$defs/PermissionGroupParams"
                },
                "alias": {
                    "$ref": "#/$defs/AliasString"
                },
                "schemaDefinition": {
                    "$ref": "#/$defs/SchemaUnion"
                }
            }
        },
        "DatasetTitle": {
            "type": "string"
        },
        "DatasetKind": {
            "enum": [
                "TABULAR",
                "NON_TABULAR"
            ]
        },
        "DatasetDescription": {
            "type": "string"
        },
        "DatasetOwnerInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/OwnerName"
                },
                "phoneNumber": {
                    "$ref": "#/$defs/PhoneNumber"
                },
                "email": {
                    "$ref": "#/$defs/Email"
                }
            }
        },
        "OwnerName": {
            "type": "string"
        },
        "PhoneNumber": {
            "type": "string"
        },
        "Email": {
            "type": "string"
        },
        "PermissionGroupParams": {
            "type": "object",
            "properties": {
                "permissionGroupId": {
                    "$ref": "#/$defs/PermissionGroupId"
                },
                "datasetPermissions": {
                    "$ref": "#/$defs/ResourcePermissionsList"
                }
            }
        },
        "ResourcePermissionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourcePermission"
            }
        },
        "ResourcePermission": {
            "type": "object",
            "properties": {
                "permission": {
                    "$ref": "#/$defs/StringValueLength1to250"
                }
            }
        },
        "StringValueLength1to250": {
            "type": "string"
        },
        "AliasString": {
            "type": "string"
        },
        "SchemaUnion": {
            "type": "object",
            "properties": {
                "tabularSchemaConfig": {
                    "$ref": "#/$defs/SchemaDefinition"
                }
            }
        },
        "SchemaDefinition": {
            "type": "object",
            "properties": {
                "columns": {
                    "$ref": "#/$defs/ColumnList"
                },
                "primaryKeyColumns": {
                    "$ref": "#/$defs/ColumnNameList"
                }
            }
        },
        "ColumnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnDefinition"
            }
        },
        "ColumnDefinition": {
            "type": "object",
            "properties": {
                "dataType": {
                    "$ref": "#/$defs/ColumnDataType"
                },
                "columnName": {
                    "$ref": "#/$defs/ColumnName"
                },
                "columnDescription": {
                    "$ref": "#/$defs/ColumnDescription"
                }
            }
        },
        "ColumnDataType": {
            "enum": [
                "STRING",
                "CHAR",
                "INTEGER",
                "TINYINT",
                "SMALLINT",
                "BIGINT",
                "FLOAT",
                "DOUBLE",
                "DATE",
                "DATETIME",
                "BOOLEAN",
                "BINARY"
            ]
        },
        "ColumnName": {
            "type": "string"
        },
        "ColumnDescription": {
            "type": "string"
        },
        "ColumnNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnName"
            }
        },
        "CreateDataViewResponse": {
            "type": "object",
            "properties": {
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "dataViewId": {
                    "$ref": "#/$defs/DataViewId"
                }
            }
        },
        "DataViewId": {
            "type": "string"
        },
        "CreateDataViewRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "autoUpdate": {
                    "$ref": "#/$defs/Boolean"
                },
                "sortColumns": {
                    "$ref": "#/$defs/SortColumnList"
                },
                "partitionColumns": {
                    "$ref": "#/$defs/PartitionColumnList"
                },
                "asOfTimestamp": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "destinationTypeParams": {
                    "$ref": "#/$defs/DataViewDestinationTypeParams"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "SortColumnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StringValueLength1to255"
            }
        },
        "StringValueLength1to255": {
            "type": "string"
        },
        "PartitionColumnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StringValueLength1to255"
            }
        },
        "TimestampEpoch": {
            "type": "integer",
            "format": "int64"
        },
        "DataViewDestinationTypeParams": {
            "type": "object",
            "properties": {
                "destinationType": {
                    "$ref": "#/$defs/DataViewDestinationType"
                },
                "s3DestinationExportFileFormat": {
                    "$ref": "#/$defs/ExportFileFormat"
                },
                "s3DestinationExportFileFormatOptions": {
                    "$ref": "#/$defs/S3DestinationFormatOptions"
                }
            }
        },
        "DataViewDestinationType": {
            "type": "string"
        },
        "ExportFileFormat": {
            "enum": [
                "PARQUET",
                "DELIMITED_TEXT"
            ]
        },
        "S3DestinationFormatOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/StringMapValue"
            }
        },
        "CreatePermissionGroupResponse": {
            "type": "object",
            "properties": {
                "permissionGroupId": {
                    "$ref": "#/$defs/PermissionGroupId"
                }
            }
        },
        "CreatePermissionGroupRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/PermissionGroupName"
                },
                "description": {
                    "$ref": "#/$defs/PermissionGroupDescription"
                },
                "applicationPermissions": {
                    "$ref": "#/$defs/ApplicationPermissionList"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "PermissionGroupName": {
            "type": "string"
        },
        "PermissionGroupDescription": {
            "type": "string"
        },
        "ApplicationPermissionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationPermission"
            }
        },
        "ApplicationPermission": {
            "enum": [
                "CreateDataset",
                "ManageClusters",
                "ManageUsersAndGroups",
                "ManageAttributeSets",
                "ViewAuditData",
                "AccessNotebooks",
                "GetTemporaryCredentials"
            ]
        },
        "CreateUserResponse": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                }
            }
        },
        "CreateUserRequest": {
            "type": "object",
            "properties": {
                "emailAddress": {
                    "$ref": "#/$defs/Email"
                },
                "type": {
                    "$ref": "#/$defs/UserType"
                },
                "firstName": {
                    "$ref": "#/$defs/FirstName"
                },
                "lastName": {
                    "$ref": "#/$defs/LastName"
                },
                "apiAccess": {
                    "$ref": "#/$defs/ApiAccess"
                },
                "apiAccessPrincipalArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "UserType": {
            "enum": [
                "SUPER_USER",
                "APP_USER"
            ]
        },
        "FirstName": {
            "type": "string"
        },
        "LastName": {
            "type": "string"
        },
        "ApiAccess": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "RoleArn": {
            "type": "string"
        },
        "DeleteDatasetResponse": {
            "type": "object",
            "properties": {
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                }
            }
        },
        "DeleteDatasetRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                }
            }
        },
        "DeletePermissionGroupResponse": {
            "type": "object",
            "properties": {
                "permissionGroupId": {
                    "$ref": "#/$defs/PermissionGroupId"
                }
            }
        },
        "DeletePermissionGroupRequest": {
            "type": "object",
            "properties": {
                "permissionGroupId": {
                    "$ref": "#/$defs/PermissionGroupId"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DisableUserResponse": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                }
            }
        },
        "DisableUserRequest": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DisassociateUserFromPermissionGroupResponse": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "$ref": "#/$defs/StatusCode"
                }
            }
        },
        "DisassociateUserFromPermissionGroupRequest": {
            "type": "object",
            "properties": {
                "permissionGroupId": {
                    "$ref": "#/$defs/PermissionGroupId"
                },
                "userId": {
                    "$ref": "#/$defs/UserId"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "EnableUserResponse": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                }
            }
        },
        "EnableUserRequest": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "GetChangesetResponse": {
            "type": "object",
            "properties": {
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "changesetArn": {
                    "$ref": "#/$defs/ChangesetArn"
                },
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "changeType": {
                    "$ref": "#/$defs/ChangeType"
                },
                "sourceParams": {
                    "$ref": "#/$defs/SourceParams"
                },
                "formatParams": {
                    "$ref": "#/$defs/FormatParams"
                },
                "createTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "status": {
                    "$ref": "#/$defs/IngestionStatus"
                },
                "errorInfo": {
                    "$ref": "#/$defs/ChangesetErrorInfo"
                },
                "activeUntilTimestamp": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "activeFromTimestamp": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "updatesChangesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "updatedByChangesetId": {
                    "$ref": "#/$defs/ChangesetId"
                }
            }
        },
        "ChangesetArn": {
            "type": "string"
        },
        "IngestionStatus": {
            "enum": [
                "PENDING",
                "FAILED",
                "SUCCESS",
                "RUNNING",
                "STOP_REQUESTED"
            ]
        },
        "ChangesetErrorInfo": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "errorCategory": {
                    "$ref": "#/$defs/ErrorCategory"
                }
            }
        },
        "ErrorMessage": {
            "type": "string"
        },
        "ErrorCategory": {
            "enum": [
                "VALIDATION",
                "SERVICE_QUOTA_EXCEEDED",
                "ACCESS_DENIED",
                "RESOURCE_NOT_FOUND",
                "THROTTLING",
                "INTERNAL_SERVICE_EXCEPTION",
                "CANCELLED",
                "USER_RECOVERABLE"
            ]
        },
        "GetChangesetRequest": {
            "type": "object",
            "properties": {
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                }
            }
        },
        "GetDatasetResponse": {
            "type": "object",
            "properties": {
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "datasetArn": {
                    "$ref": "#/$defs/DatasetArn"
                },
                "datasetTitle": {
                    "$ref": "#/$defs/DatasetTitle"
                },
                "kind": {
                    "$ref": "#/$defs/DatasetKind"
                },
                "datasetDescription": {
                    "$ref": "#/$defs/DatasetDescription"
                },
                "createTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "lastModifiedTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "schemaDefinition": {
                    "$ref": "#/$defs/SchemaUnion"
                },
                "alias": {
                    "$ref": "#/$defs/AliasString"
                },
                "status": {
                    "$ref": "#/$defs/DatasetStatus"
                }
            }
        },
        "DatasetArn": {
            "type": "string"
        },
        "DatasetStatus": {
            "enum": [
                "PENDING",
                "FAILED",
                "SUCCESS",
                "RUNNING"
            ]
        },
        "GetDatasetRequest": {
            "type": "object",
            "properties": {
                "datasetId": {
                    "$ref": "#/$defs/StringValueLength1to255"
                }
            }
        },
        "GetDataViewResponse": {
            "type": "object",
            "properties": {
                "autoUpdate": {
                    "$ref": "#/$defs/Boolean"
                },
                "partitionColumns": {
                    "$ref": "#/$defs/PartitionColumnList"
                },
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "asOfTimestamp": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "errorInfo": {
                    "$ref": "#/$defs/DataViewErrorInfo"
                },
                "lastModifiedTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "createTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "sortColumns": {
                    "$ref": "#/$defs/SortColumnList"
                },
                "dataViewId": {
                    "$ref": "#/$defs/DataViewId"
                },
                "dataViewArn": {
                    "$ref": "#/$defs/DataViewArn"
                },
                "destinationTypeParams": {
                    "$ref": "#/$defs/DataViewDestinationTypeParams"
                },
                "status": {
                    "$ref": "#/$defs/DataViewStatus"
                }
            }
        },
        "DataViewErrorInfo": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "errorCategory": {
                    "$ref": "#/$defs/ErrorCategory"
                }
            }
        },
        "DataViewArn": {
            "type": "string"
        },
        "DataViewStatus": {
            "enum": [
                "RUNNING",
                "STARTING",
                "FAILED",
                "CANCELLED",
                "TIMEOUT",
                "SUCCESS",
                "PENDING",
                "FAILED_CLEANUP_FAILED"
            ]
        },
        "GetDataViewRequest": {
            "type": "object",
            "properties": {
                "dataViewId": {
                    "$ref": "#/$defs/DataViewId"
                },
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                }
            }
        },
        "GetExternalDataViewAccessDetailsResponse": {
            "type": "object",
            "properties": {
                "credentials": {
                    "$ref": "#/$defs/AwsCredentials"
                },
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "AwsCredentials": {
            "type": "object",
            "properties": {
                "accessKeyId": {
                    "$ref": "#/$defs/AccessKeyId"
                },
                "secretAccessKey": {
                    "$ref": "#/$defs/SecretAccessKey"
                },
                "sessionToken": {
                    "$ref": "#/$defs/SessionToken"
                },
                "expiration": {
                    "$ref": "#/$defs/TimestampEpoch"
                }
            }
        },
        "AccessKeyId": {
            "type": "string"
        },
        "SecretAccessKey": {
            "type": "string"
        },
        "SessionToken": {
            "type": "string"
        },
        "S3Location": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "key": {
                    "$ref": "#/$defs/S3Key"
                }
            }
        },
        "S3BucketName": {
            "type": "string"
        },
        "S3Key": {
            "type": "string"
        },
        "GetExternalDataViewAccessDetailsRequest": {
            "type": "object",
            "properties": {
                "dataViewId": {
                    "$ref": "#/$defs/DataViewId"
                },
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                }
            }
        },
        "GetPermissionGroupResponse": {
            "type": "object",
            "properties": {
                "permissionGroup": {
                    "$ref": "#/$defs/PermissionGroup"
                }
            }
        },
        "PermissionGroup": {
            "type": "object",
            "properties": {
                "permissionGroupId": {
                    "$ref": "#/$defs/PermissionGroupId"
                },
                "name": {
                    "$ref": "#/$defs/PermissionGroupName"
                },
                "description": {
                    "$ref": "#/$defs/PermissionGroupDescription"
                },
                "applicationPermissions": {
                    "$ref": "#/$defs/ApplicationPermissionList"
                },
                "createTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "lastModifiedTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "membershipStatus": {
                    "$ref": "#/$defs/PermissionGroupMembershipStatus"
                }
            }
        },
        "PermissionGroupMembershipStatus": {
            "enum": [
                "ADDITION_IN_PROGRESS",
                "ADDITION_SUCCESS",
                "REMOVAL_IN_PROGRESS"
            ]
        },
        "GetPermissionGroupRequest": {
            "type": "object",
            "properties": {
                "permissionGroupId": {
                    "$ref": "#/$defs/PermissionGroupId"
                }
            }
        },
        "GetProgrammaticAccessCredentialsResponse": {
            "type": "object",
            "properties": {
                "credentials": {
                    "$ref": "#/$defs/Credentials"
                },
                "durationInMinutes": {
                    "$ref": "#/$defs/SessionDuration"
                }
            }
        },
        "Credentials": {
            "type": "object",
            "properties": {
                "accessKeyId": {
                    "$ref": "#/$defs/StringValueLength1to2552"
                },
                "secretAccessKey": {
                    "$ref": "#/$defs/stringValueMaxLength1000"
                },
                "sessionToken": {
                    "$ref": "#/$defs/stringValueMaxLength1000"
                }
            }
        },
        "StringValueLength1to2552": {
            "type": "string"
        },
        "stringValueMaxLength1000": {
            "type": "string"
        },
        "SessionDuration": {
            "type": "integer",
            "format": "int64"
        },
        "GetProgrammaticAccessCredentialsRequest": {
            "type": "object",
            "properties": {
                "durationInMinutes": {
                    "$ref": "#/$defs/SessionDuration"
                },
                "environmentId": {
                    "$ref": "#/$defs/IdType"
                }
            }
        },
        "IdType": {
            "type": "string"
        },
        "GetUserResponse": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                },
                "status": {
                    "$ref": "#/$defs/UserStatus"
                },
                "firstName": {
                    "$ref": "#/$defs/FirstName"
                },
                "lastName": {
                    "$ref": "#/$defs/LastName"
                },
                "emailAddress": {
                    "$ref": "#/$defs/Email"
                },
                "type": {
                    "$ref": "#/$defs/UserType"
                },
                "apiAccess": {
                    "$ref": "#/$defs/ApiAccess"
                },
                "apiAccessPrincipalArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "createTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "lastEnabledTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "lastDisabledTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "lastModifiedTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "lastLoginTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                }
            }
        },
        "UserStatus": {
            "enum": [
                "CREATING",
                "ENABLED",
                "DISABLED"
            ]
        },
        "GetUserRequest": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                }
            }
        },
        "GetWorkingLocationResponse": {
            "type": "object",
            "properties": {
                "s3Uri": {
                    "$ref": "#/$defs/stringValueLength1to1024"
                },
                "s3Path": {
                    "$ref": "#/$defs/stringValueLength1to1024"
                },
                "s3Bucket": {
                    "$ref": "#/$defs/stringValueLength1to63"
                }
            }
        },
        "stringValueLength1to1024": {
            "type": "string"
        },
        "stringValueLength1to63": {
            "type": "string"
        },
        "GetWorkingLocationRequest": {
            "type": "object",
            "properties": {
                "locationType": {
                    "$ref": "#/$defs/locationType"
                }
            }
        },
        "locationType": {
            "enum": [
                "INGESTION",
                "SAGEMAKER"
            ]
        },
        "ListChangesetsResponse": {
            "type": "object",
            "properties": {
                "changesets": {
                    "$ref": "#/$defs/ChangesetList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ChangesetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChangesetSummary"
            }
        },
        "ChangesetSummary": {
            "type": "object",
            "properties": {
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "changesetArn": {
                    "$ref": "#/$defs/ChangesetArn"
                },
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "changeType": {
                    "$ref": "#/$defs/ChangeType"
                },
                "sourceParams": {
                    "$ref": "#/$defs/SourceParams"
                },
                "formatParams": {
                    "$ref": "#/$defs/FormatParams"
                },
                "createTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "status": {
                    "$ref": "#/$defs/IngestionStatus"
                },
                "errorInfo": {
                    "$ref": "#/$defs/ChangesetErrorInfo"
                },
                "activeUntilTimestamp": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "activeFromTimestamp": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "updatesChangesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "updatedByChangesetId": {
                    "$ref": "#/$defs/ChangesetId"
                }
            }
        },
        "PaginationToken": {
            "type": "string"
        },
        "ListChangesetsRequest": {
            "type": "object",
            "properties": {
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "maxResults": {
                    "$ref": "#/$defs/ResultLimit"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ResultLimit": {
            "type": "integer",
            "format": "int32"
        },
        "ListDatasetsResponse": {
            "type": "object",
            "properties": {
                "datasets": {
                    "$ref": "#/$defs/DatasetList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "DatasetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Dataset"
            }
        },
        "Dataset": {
            "type": "object",
            "properties": {
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "datasetArn": {
                    "$ref": "#/$defs/DatasetArn"
                },
                "datasetTitle": {
                    "$ref": "#/$defs/DatasetTitle"
                },
                "kind": {
                    "$ref": "#/$defs/DatasetKind"
                },
                "datasetDescription": {
                    "$ref": "#/$defs/DatasetDescription"
                },
                "ownerInfo": {
                    "$ref": "#/$defs/DatasetOwnerInfo"
                },
                "createTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "lastModifiedTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "schemaDefinition": {
                    "$ref": "#/$defs/SchemaUnion"
                },
                "alias": {
                    "$ref": "#/$defs/AliasString"
                }
            }
        },
        "ListDatasetsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ResultLimit"
                }
            }
        },
        "ListDataViewsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "dataViews": {
                    "$ref": "#/$defs/DataViewList"
                }
            }
        },
        "DataViewList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataViewSummary"
            }
        },
        "DataViewSummary": {
            "type": "object",
            "properties": {
                "dataViewId": {
                    "$ref": "#/$defs/DataViewId"
                },
                "dataViewArn": {
                    "$ref": "#/$defs/DataViewArn"
                },
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "asOfTimestamp": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "partitionColumns": {
                    "$ref": "#/$defs/PartitionColumnList"
                },
                "sortColumns": {
                    "$ref": "#/$defs/SortColumnList"
                },
                "status": {
                    "$ref": "#/$defs/DataViewStatus"
                },
                "errorInfo": {
                    "$ref": "#/$defs/DataViewErrorInfo"
                },
                "destinationTypeProperties": {
                    "$ref": "#/$defs/DataViewDestinationTypeParams"
                },
                "autoUpdate": {
                    "$ref": "#/$defs/Boolean"
                },
                "createTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "lastModifiedTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                }
            }
        },
        "ListDataViewsRequest": {
            "type": "object",
            "properties": {
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ResultLimit"
                }
            }
        },
        "ListPermissionGroupsResponse": {
            "type": "object",
            "properties": {
                "permissionGroups": {
                    "$ref": "#/$defs/PermissionGroupList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "PermissionGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PermissionGroup"
            }
        },
        "ListPermissionGroupsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ResultLimit"
                }
            }
        },
        "ListPermissionGroupsByUserResponse": {
            "type": "object",
            "properties": {
                "permissionGroups": {
                    "$ref": "#/$defs/PermissionGroupByUserList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "PermissionGroupByUserList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PermissionGroupByUser"
            }
        },
        "PermissionGroupByUser": {
            "type": "object",
            "properties": {
                "permissionGroupId": {
                    "$ref": "#/$defs/PermissionGroupId"
                },
                "name": {
                    "$ref": "#/$defs/PermissionGroupName"
                },
                "membershipStatus": {
                    "$ref": "#/$defs/PermissionGroupMembershipStatus"
                }
            }
        },
        "ListPermissionGroupsByUserRequest": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ResultLimit"
                }
            }
        },
        "ListUsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "$ref": "#/$defs/UserList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "UserList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/User"
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                },
                "status": {
                    "$ref": "#/$defs/UserStatus"
                },
                "firstName": {
                    "$ref": "#/$defs/FirstName"
                },
                "lastName": {
                    "$ref": "#/$defs/LastName"
                },
                "emailAddress": {
                    "$ref": "#/$defs/Email"
                },
                "type": {
                    "$ref": "#/$defs/UserType"
                },
                "apiAccess": {
                    "$ref": "#/$defs/ApiAccess"
                },
                "apiAccessPrincipalArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "createTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "lastEnabledTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "lastDisabledTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "lastModifiedTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                },
                "lastLoginTime": {
                    "$ref": "#/$defs/TimestampEpoch"
                }
            }
        },
        "ListUsersRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ResultLimit"
                }
            }
        },
        "ListUsersByPermissionGroupResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "$ref": "#/$defs/UserByPermissionGroupList"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "UserByPermissionGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserByPermissionGroup"
            }
        },
        "UserByPermissionGroup": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                },
                "status": {
                    "$ref": "#/$defs/UserStatus"
                },
                "firstName": {
                    "$ref": "#/$defs/FirstName"
                },
                "lastName": {
                    "$ref": "#/$defs/LastName"
                },
                "emailAddress": {
                    "$ref": "#/$defs/Email"
                },
                "type": {
                    "$ref": "#/$defs/UserType"
                },
                "apiAccess": {
                    "$ref": "#/$defs/ApiAccess"
                },
                "apiAccessPrincipalArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "membershipStatus": {
                    "$ref": "#/$defs/PermissionGroupMembershipStatus"
                }
            }
        },
        "ListUsersByPermissionGroupRequest": {
            "type": "object",
            "properties": {
                "permissionGroupId": {
                    "$ref": "#/$defs/PermissionGroupId"
                },
                "nextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ResultLimit"
                }
            }
        },
        "ResetUserPasswordResponse": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                },
                "temporaryPassword": {
                    "$ref": "#/$defs/Password"
                }
            }
        },
        "Password": {
            "type": "string"
        },
        "ResetUserPasswordRequest": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "UpdateChangesetResponse": {
            "type": "object",
            "properties": {
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                }
            }
        },
        "UpdateChangesetRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "changesetId": {
                    "$ref": "#/$defs/ChangesetId"
                },
                "sourceParams": {
                    "$ref": "#/$defs/SourceParams"
                },
                "formatParams": {
                    "$ref": "#/$defs/FormatParams"
                }
            }
        },
        "UpdateDatasetResponse": {
            "type": "object",
            "properties": {
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                }
            }
        },
        "UpdateDatasetRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "datasetId": {
                    "$ref": "#/$defs/DatasetId"
                },
                "datasetTitle": {
                    "$ref": "#/$defs/DatasetTitle"
                },
                "kind": {
                    "$ref": "#/$defs/DatasetKind"
                },
                "datasetDescription": {
                    "$ref": "#/$defs/DatasetDescription"
                },
                "alias": {
                    "$ref": "#/$defs/AliasString"
                },
                "schemaDefinition": {
                    "$ref": "#/$defs/SchemaUnion"
                }
            }
        },
        "UpdatePermissionGroupResponse": {
            "type": "object",
            "properties": {
                "permissionGroupId": {
                    "$ref": "#/$defs/PermissionGroupId"
                }
            }
        },
        "UpdatePermissionGroupRequest": {
            "type": "object",
            "properties": {
                "permissionGroupId": {
                    "$ref": "#/$defs/PermissionGroupId"
                },
                "name": {
                    "$ref": "#/$defs/PermissionGroupName"
                },
                "description": {
                    "$ref": "#/$defs/PermissionGroupDescription"
                },
                "applicationPermissions": {
                    "$ref": "#/$defs/ApplicationPermissionList"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "UpdateUserResponse": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                }
            }
        },
        "UpdateUserRequest": {
            "type": "object",
            "properties": {
                "userId": {
                    "$ref": "#/$defs/UserId"
                },
                "type": {
                    "$ref": "#/$defs/UserType"
                },
                "firstName": {
                    "$ref": "#/$defs/FirstName"
                },
                "lastName": {
                    "$ref": "#/$defs/LastName"
                },
                "apiAccess": {
                    "$ref": "#/$defs/ApiAccess"
                },
                "apiAccessPrincipalArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://finspace-api-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://finspace-api-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://finspace-api.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://finspace-api.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}