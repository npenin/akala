{
    "name": "refactor-spaces",
    "commands": [
        {
            "name": "CreateApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateApplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateEnvironment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateEnvironment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEnvironmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRouteResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteApplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteEnvironment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteEnvironment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEnvironmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteResourcePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteResourcePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRouteResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetApplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEnvironment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetEnvironment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEnvironmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEnvironmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourcePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourcePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRouteResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetService",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetService"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetServiceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListApplications",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListApplications"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApplicationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListApplicationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListEnvironments",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListEnvironments"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEnvironmentsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEnvironmentsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListEnvironmentVpcs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListEnvironmentVpcs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEnvironmentVpcsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEnvironmentVpcsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRoutes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListRoutes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRoutesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRoutesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListServices",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListServices"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListServicesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListServicesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutResourcePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutResourcePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRouteResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRouteRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateApplicationResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedByAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "ProxyType": {
                    "$ref": "#/$defs/ProxyType"
                },
                "ApiGatewayProxy": {
                    "$ref": "#/$defs/ApiGatewayProxyInput"
                },
                "State": {
                    "$ref": "#/$defs/ApplicationState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ApplicationName": {
            "type": "string"
        },
        "ResourceArn": {
            "type": "string"
        },
        "AccountId": {
            "type": "string"
        },
        "ApplicationId": {
            "type": "string"
        },
        "EnvironmentId": {
            "type": "string"
        },
        "VpcId": {
            "type": "string"
        },
        "ProxyType": {
            "type": "string"
        },
        "ApiGatewayProxyInput": {
            "type": "object",
            "properties": {
                "EndpointType": {
                    "$ref": "#/$defs/ApiGatewayEndpointType"
                },
                "StageName": {
                    "$ref": "#/$defs/StageName"
                }
            }
        },
        "ApiGatewayEndpointType": {
            "type": "string"
        },
        "StageName": {
            "type": "string"
        },
        "ApplicationState": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "String": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "CreateApplicationRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "ProxyType": {
                    "$ref": "#/$defs/ProxyType"
                },
                "ApiGatewayProxy": {
                    "$ref": "#/$defs/ApiGatewayProxyInput"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "CreateEnvironmentResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/EnvironmentName"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "NetworkFabricType": {
                    "$ref": "#/$defs/NetworkFabricType"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "State": {
                    "$ref": "#/$defs/EnvironmentState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "EnvironmentName": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "NetworkFabricType": {
            "type": "string"
        },
        "EnvironmentState": {
            "type": "string"
        },
        "CreateEnvironmentRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/EnvironmentName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "NetworkFabricType": {
                    "$ref": "#/$defs/NetworkFabricType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "CreateRouteResponse": {
            "type": "object",
            "properties": {
                "RouteId": {
                    "$ref": "#/$defs/RouteId"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedByAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "RouteType": {
                    "$ref": "#/$defs/RouteType"
                },
                "ServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "UriPathRoute": {
                    "$ref": "#/$defs/UriPathRouteInput"
                },
                "State": {
                    "$ref": "#/$defs/RouteState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "RouteId": {
            "type": "string"
        },
        "RouteType": {
            "type": "string"
        },
        "ServiceId": {
            "type": "string"
        },
        "UriPathRouteInput": {
            "type": "object",
            "properties": {
                "SourcePath": {
                    "$ref": "#/$defs/UriPath"
                },
                "ActivationState": {
                    "$ref": "#/$defs/RouteActivationState"
                },
                "Methods": {
                    "$ref": "#/$defs/HttpMethods"
                },
                "IncludeChildPaths": {
                    "$ref": "#/$defs/Boolean"
                },
                "AppendSourcePath": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UriPath": {
            "type": "string"
        },
        "RouteActivationState": {
            "type": "string"
        },
        "HttpMethods": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HttpMethod"
            }
        },
        "HttpMethod": {
            "type": "string"
        },
        "Boolean": {
            "type": "boolean"
        },
        "RouteState": {
            "type": "string"
        },
        "CreateRouteRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationIdentifier": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "ServiceIdentifier": {
                    "$ref": "#/$defs/ServiceId"
                },
                "RouteType": {
                    "$ref": "#/$defs/RouteType"
                },
                "DefaultRoute": {
                    "$ref": "#/$defs/DefaultRouteInput"
                },
                "UriPathRoute": {
                    "$ref": "#/$defs/UriPathRouteInput"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DefaultRouteInput": {
            "type": "object",
            "properties": {
                "ActivationState": {
                    "$ref": "#/$defs/RouteActivationState"
                }
            }
        },
        "CreateServiceResponse": {
            "type": "object",
            "properties": {
                "ServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "Name": {
                    "$ref": "#/$defs/ServiceName"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedByAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "EndpointType": {
                    "$ref": "#/$defs/ServiceEndpointType"
                },
                "UrlEndpoint": {
                    "$ref": "#/$defs/UrlEndpointInput"
                },
                "LambdaEndpoint": {
                    "$ref": "#/$defs/LambdaEndpointInput"
                },
                "State": {
                    "$ref": "#/$defs/ServiceState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ServiceName": {
            "type": "string"
        },
        "ServiceEndpointType": {
            "type": "string"
        },
        "UrlEndpointInput": {
            "type": "object",
            "properties": {
                "Url": {
                    "$ref": "#/$defs/Uri"
                },
                "HealthUrl": {
                    "$ref": "#/$defs/Uri"
                }
            }
        },
        "Uri": {
            "type": "string"
        },
        "LambdaEndpointInput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/LambdaArn"
                }
            }
        },
        "LambdaArn": {
            "type": "string"
        },
        "ServiceState": {
            "type": "string"
        },
        "CreateServiceRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ServiceName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationIdentifier": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "EndpointType": {
                    "$ref": "#/$defs/ServiceEndpointType"
                },
                "UrlEndpoint": {
                    "$ref": "#/$defs/UrlEndpointInput"
                },
                "LambdaEndpoint": {
                    "$ref": "#/$defs/LambdaEndpointInput"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DeleteApplicationResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "State": {
                    "$ref": "#/$defs/ApplicationState"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DeleteApplicationRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationIdentifier": {
                    "$ref": "#/$defs/ApplicationId"
                }
            }
        },
        "DeleteEnvironmentResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/EnvironmentName"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "State": {
                    "$ref": "#/$defs/EnvironmentState"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DeleteEnvironmentRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                }
            }
        },
        "DeleteResourcePolicyResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/ResourcePolicyIdentifier"
                }
            }
        },
        "ResourcePolicyIdentifier": {
            "type": "string"
        },
        "DeleteRouteResponse": {
            "type": "object",
            "properties": {
                "RouteId": {
                    "$ref": "#/$defs/RouteId"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "ServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "State": {
                    "$ref": "#/$defs/RouteState"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DeleteRouteRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationIdentifier": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "RouteIdentifier": {
                    "$ref": "#/$defs/RouteId"
                }
            }
        },
        "DeleteServiceResponse": {
            "type": "object",
            "properties": {
                "ServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "Name": {
                    "$ref": "#/$defs/ServiceName"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "State": {
                    "$ref": "#/$defs/ServiceState"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DeleteServiceRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationIdentifier": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "ServiceIdentifier": {
                    "$ref": "#/$defs/ServiceId"
                }
            }
        },
        "GetApplicationResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedByAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "ProxyType": {
                    "$ref": "#/$defs/ProxyType"
                },
                "ApiGatewayProxy": {
                    "$ref": "#/$defs/ApiGatewayProxyConfig"
                },
                "State": {
                    "$ref": "#/$defs/ApplicationState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorResponse"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ApiGatewayProxyConfig": {
            "type": "object",
            "properties": {
                "ProxyUrl": {
                    "$ref": "#/$defs/Uri"
                },
                "ApiGatewayId": {
                    "$ref": "#/$defs/ApiGatewayId"
                },
                "VpcLinkId": {
                    "$ref": "#/$defs/VpcLinkId"
                },
                "NlbArn": {
                    "$ref": "#/$defs/NlbArn"
                },
                "NlbName": {
                    "$ref": "#/$defs/NlbName"
                },
                "EndpointType": {
                    "$ref": "#/$defs/ApiGatewayEndpointType"
                },
                "StageName": {
                    "$ref": "#/$defs/StageName"
                }
            }
        },
        "ApiGatewayId": {
            "type": "string"
        },
        "VpcLinkId": {
            "type": "string"
        },
        "NlbArn": {
            "type": "string"
        },
        "NlbName": {
            "type": "string"
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "Message": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ResourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ErrorResourceType"
                },
                "AdditionalDetails": {
                    "$ref": "#/$defs/AdditionalDetails"
                }
            }
        },
        "ErrorCode": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "ResourceIdentifier": {
            "type": "string"
        },
        "ErrorResourceType": {
            "type": "string"
        },
        "AdditionalDetails": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AdditionalDetailsValue"
            }
        },
        "AdditionalDetailsValue": {
            "type": "string"
        },
        "GetApplicationRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationIdentifier": {
                    "$ref": "#/$defs/ApplicationId"
                }
            }
        },
        "GetEnvironmentResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/EnvironmentName"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "NetworkFabricType": {
                    "$ref": "#/$defs/NetworkFabricType"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "State": {
                    "$ref": "#/$defs/EnvironmentState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorResponse"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "TransitGatewayId": {
            "type": "string"
        },
        "GetEnvironmentRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                }
            }
        },
        "GetResourcePolicyResponse": {
            "type": "object",
            "properties": {
                "Policy": {
                    "$ref": "#/$defs/PolicyString"
                }
            }
        },
        "PolicyString": {
            "type": "string"
        },
        "GetResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/ResourcePolicyIdentifier"
                }
            }
        },
        "GetRouteResponse": {
            "type": "object",
            "properties": {
                "RouteId": {
                    "$ref": "#/$defs/RouteId"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedByAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "RouteType": {
                    "$ref": "#/$defs/RouteType"
                },
                "ServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "SourcePath": {
                    "$ref": "#/$defs/UriPath"
                },
                "Methods": {
                    "$ref": "#/$defs/HttpMethods"
                },
                "IncludeChildPaths": {
                    "$ref": "#/$defs/Boolean"
                },
                "PathResourceToId": {
                    "$ref": "#/$defs/PathResourceToId"
                },
                "State": {
                    "$ref": "#/$defs/RouteState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorResponse"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "AppendSourcePath": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "PathResourceToId": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/PathResourceToIdValue"
            }
        },
        "PathResourceToIdValue": {
            "type": "string"
        },
        "GetRouteRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationIdentifier": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "RouteIdentifier": {
                    "$ref": "#/$defs/RouteId"
                }
            }
        },
        "GetServiceResponse": {
            "type": "object",
            "properties": {
                "ServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "Name": {
                    "$ref": "#/$defs/ServiceName"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedByAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "EndpointType": {
                    "$ref": "#/$defs/ServiceEndpointType"
                },
                "UrlEndpoint": {
                    "$ref": "#/$defs/UrlEndpointConfig"
                },
                "LambdaEndpoint": {
                    "$ref": "#/$defs/LambdaEndpointConfig"
                },
                "State": {
                    "$ref": "#/$defs/ServiceState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorResponse"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "UrlEndpointConfig": {
            "type": "object",
            "properties": {
                "Url": {
                    "$ref": "#/$defs/Uri"
                },
                "HealthUrl": {
                    "$ref": "#/$defs/Uri"
                }
            }
        },
        "LambdaEndpointConfig": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/LambdaArn"
                }
            }
        },
        "GetServiceRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationIdentifier": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "ServiceIdentifier": {
                    "$ref": "#/$defs/ServiceId"
                }
            }
        },
        "ListApplicationsResponse": {
            "type": "object",
            "properties": {
                "ApplicationSummaryList": {
                    "$ref": "#/$defs/ApplicationSummaries"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ApplicationSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationSummary"
            }
        },
        "ApplicationSummary": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedByAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "ProxyType": {
                    "$ref": "#/$defs/ProxyType"
                },
                "ApiGatewayProxy": {
                    "$ref": "#/$defs/ApiGatewayProxySummary"
                },
                "State": {
                    "$ref": "#/$defs/ApplicationState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorResponse"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ApiGatewayProxySummary": {
            "type": "object",
            "properties": {
                "ProxyUrl": {
                    "$ref": "#/$defs/Uri"
                },
                "ApiGatewayId": {
                    "$ref": "#/$defs/ApiGatewayId"
                },
                "VpcLinkId": {
                    "$ref": "#/$defs/VpcLinkId"
                },
                "NlbArn": {
                    "$ref": "#/$defs/NlbArn"
                },
                "NlbName": {
                    "$ref": "#/$defs/NlbName"
                },
                "EndpointType": {
                    "$ref": "#/$defs/ApiGatewayEndpointType"
                },
                "StageName": {
                    "$ref": "#/$defs/StageName"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListApplicationsRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListEnvironmentsResponse": {
            "type": "object",
            "properties": {
                "EnvironmentSummaryList": {
                    "$ref": "#/$defs/EnvironmentSummaries"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "EnvironmentSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnvironmentSummary"
            }
        },
        "EnvironmentSummary": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/EnvironmentName"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "NetworkFabricType": {
                    "$ref": "#/$defs/NetworkFabricType"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "State": {
                    "$ref": "#/$defs/EnvironmentState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorResponse"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListEnvironmentsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListEnvironmentVpcsResponse": {
            "type": "object",
            "properties": {
                "EnvironmentVpcList": {
                    "$ref": "#/$defs/EnvironmentVpcs"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "EnvironmentVpcs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnvironmentVpc"
            }
        },
        "EnvironmentVpc": {
            "type": "object",
            "properties": {
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CidrBlocks": {
                    "$ref": "#/$defs/CidrBlocks"
                },
                "VpcName": {
                    "$ref": "#/$defs/Ec2TagValue"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "CidrBlocks": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CidrBlock"
            }
        },
        "CidrBlock": {
            "type": "string"
        },
        "Ec2TagValue": {
            "type": "string"
        },
        "ListEnvironmentVpcsRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListRoutesResponse": {
            "type": "object",
            "properties": {
                "RouteSummaryList": {
                    "$ref": "#/$defs/RouteSummaries"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RouteSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RouteSummary"
            }
        },
        "RouteSummary": {
            "type": "object",
            "properties": {
                "RouteId": {
                    "$ref": "#/$defs/RouteId"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedByAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "RouteType": {
                    "$ref": "#/$defs/RouteType"
                },
                "ServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "SourcePath": {
                    "$ref": "#/$defs/UriPath"
                },
                "Methods": {
                    "$ref": "#/$defs/HttpMethods"
                },
                "IncludeChildPaths": {
                    "$ref": "#/$defs/Boolean"
                },
                "PathResourceToId": {
                    "$ref": "#/$defs/PathResourceToId"
                },
                "State": {
                    "$ref": "#/$defs/RouteState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorResponse"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "AppendSourcePath": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ListRoutesRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationIdentifier": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListServicesResponse": {
            "type": "object",
            "properties": {
                "ServiceSummaryList": {
                    "$ref": "#/$defs/ServiceSummaries"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ServiceSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceSummary"
            }
        },
        "ServiceSummary": {
            "type": "object",
            "properties": {
                "ServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "Name": {
                    "$ref": "#/$defs/ServiceName"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedByAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "EnvironmentId": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "EndpointType": {
                    "$ref": "#/$defs/ServiceEndpointType"
                },
                "UrlEndpoint": {
                    "$ref": "#/$defs/UrlEndpointSummary"
                },
                "LambdaEndpoint": {
                    "$ref": "#/$defs/LambdaEndpointSummary"
                },
                "State": {
                    "$ref": "#/$defs/ServiceState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorResponse"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "UrlEndpointSummary": {
            "type": "object",
            "properties": {
                "Url": {
                    "$ref": "#/$defs/Uri"
                },
                "HealthUrl": {
                    "$ref": "#/$defs/Uri"
                }
            }
        },
        "LambdaEndpointSummary": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/LambdaArn"
                }
            }
        },
        "ListServicesRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationIdentifier": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PutResourcePolicyResponse": {
            "type": "object",
            "properties": {}
        },
        "PutResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "Policy": {
                    "$ref": "#/$defs/PolicyString"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/String"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "TagKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "UpdateRouteResponse": {
            "type": "object",
            "properties": {
                "RouteId": {
                    "$ref": "#/$defs/RouteId"
                },
                "Arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "ServiceId": {
                    "$ref": "#/$defs/ServiceId"
                },
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "State": {
                    "$ref": "#/$defs/RouteState"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "UpdateRouteRequest": {
            "type": "object",
            "properties": {
                "EnvironmentIdentifier": {
                    "$ref": "#/$defs/EnvironmentId"
                },
                "ApplicationIdentifier": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "RouteIdentifier": {
                    "$ref": "#/$defs/RouteId"
                },
                "ActivationState": {
                    "$ref": "#/$defs/RouteActivationState"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://refactor-spaces-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://refactor-spaces-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://refactor-spaces.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://refactor-spaces.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}