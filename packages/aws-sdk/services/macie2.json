{
    "name": "macie2",
    "commands": [
        {
            "name": "AcceptInvitation",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/invitations/accept"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptInvitationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AcceptInvitationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "administratorAccountId": {},
                        "invitationId": {},
                        "masterAccount": {}
                    }
                }
            }
        },
        {
            "name": "BatchGetCustomDataIdentifiers",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/custom-data-identifiers/get"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetCustomDataIdentifiersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetCustomDataIdentifiersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ids": {}
                    }
                }
            }
        },
        {
            "name": "BatchUpdateAutomatedDiscoveryAccounts",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PATCH",
                    "route": "/automated-discovery/accounts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchUpdateAutomatedDiscoveryAccountsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchUpdateAutomatedDiscoveryAccountsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "accounts": {}
                    }
                }
            }
        },
        {
            "name": "CreateAllowList",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/allow-lists"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAllowListResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAllowListRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientToken": {},
                        "criteria": {},
                        "description": {},
                        "name": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateClassificationJob",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateClassificationJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateClassificationJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "allowListIds": {},
                        "clientToken": {},
                        "customDataIdentifierIds": {},
                        "description": {},
                        "initialRun": {},
                        "jobType": {},
                        "managedDataIdentifierIds": {},
                        "managedDataIdentifierSelector": {},
                        "name": {},
                        "s3JobDefinition": {},
                        "samplingPercentage": {},
                        "scheduleFrequency": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateCustomDataIdentifier",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/custom-data-identifiers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCustomDataIdentifierResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCustomDataIdentifierRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientToken": {},
                        "description": {},
                        "ignoreWords": {},
                        "keywords": {},
                        "maximumMatchDistance": {},
                        "name": {},
                        "regex": {},
                        "severityLevels": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateFindingsFilter",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/findingsfilters"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFindingsFilterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFindingsFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "action": {},
                        "clientToken": {},
                        "description": {},
                        "findingCriteria": {},
                        "name": {},
                        "position": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateInvitations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/invitations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateInvitationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateInvitationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "accountIds": {},
                        "disableEmailNotification": {},
                        "message": {}
                    }
                }
            }
        },
        {
            "name": "CreateMember",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/members"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMemberResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMemberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "account": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateSampleFindings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/findings/sample"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSampleFindingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSampleFindingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "findingTypes": {}
                    }
                }
            }
        },
        {
            "name": "DeclineInvitations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/invitations/decline"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeclineInvitationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeclineInvitationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "accountIds": {}
                    }
                }
            }
        },
        {
            "name": "DeleteAllowList",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/allow-lists/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAllowListResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAllowListRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {},
                        "ignoreJobChecks": {}
                    }
                }
            }
        },
        {
            "name": "DeleteCustomDataIdentifier",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/custom-data-identifiers/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCustomDataIdentifierResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCustomDataIdentifierRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "DeleteFindingsFilter",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/findingsfilters/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFindingsFilterResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFindingsFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "DeleteInvitations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/invitations/delete"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteInvitationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteInvitationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "accountIds": {}
                    }
                }
            }
        },
        {
            "name": "DeleteMember",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/members/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMemberResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMemberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "DescribeBuckets",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/datasources/s3"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeBucketsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeBucketsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "criteria": {},
                        "maxResults": {},
                        "nextToken": {},
                        "sortCriteria": {}
                    }
                }
            }
        },
        {
            "name": "DescribeClassificationJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobId": "route.jobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/jobs/{jobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClassificationJobResponse"
                    },
                    "inject": [
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClassificationJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "jobId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeOrganizationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/admin/configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeOrganizationConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeOrganizationConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "DisableMacie",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/macie"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableMacieResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableMacieRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "DisableOrganizationAdminAccount",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/admin"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableOrganizationAdminAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableOrganizationAdminAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "adminAccountId": {}
                    }
                }
            }
        },
        {
            "name": "DisassociateFromAdministratorAccount",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/administrator/disassociate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateFromAdministratorAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateFromAdministratorAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "DisassociateFromMasterAccount",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/master/disassociate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateFromMasterAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateFromMasterAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "DisassociateMember",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/members/disassociate/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateMemberResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateMemberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "EnableMacie",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/macie"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableMacieResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableMacieRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientToken": {},
                        "findingPublishingFrequency": {},
                        "status": {}
                    }
                }
            }
        },
        {
            "name": "EnableOrganizationAdminAccount",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/admin"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableOrganizationAdminAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableOrganizationAdminAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "adminAccountId": {},
                        "clientToken": {}
                    }
                }
            }
        },
        {
            "name": "GetAdministratorAccount",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/administrator"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAdministratorAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAdministratorAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetAllowList",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/allow-lists/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAllowListResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAllowListRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetAutomatedDiscoveryConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/automated-discovery/configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAutomatedDiscoveryConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAutomatedDiscoveryConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetBucketStatistics",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/datasources/s3/statistics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketStatisticsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBucketStatisticsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "accountId": {}
                    }
                }
            }
        },
        {
            "name": "GetClassificationExportConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/classification-export-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetClassificationExportConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetClassificationExportConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetClassificationScope",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/classification-scopes/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetClassificationScopeResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetClassificationScopeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetCustomDataIdentifier",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/custom-data-identifiers/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCustomDataIdentifierResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCustomDataIdentifierRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetFindings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/findings/describe"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFindingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFindingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "findingIds": {},
                        "sortCriteria": {}
                    }
                }
            }
        },
        {
            "name": "GetFindingsFilter",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/findingsfilters/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFindingsFilterResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFindingsFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetFindingsPublicationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/findings-publication-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFindingsPublicationConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFindingsPublicationConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetFindingStatistics",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/findings/statistics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFindingStatisticsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFindingStatisticsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "findingCriteria": {},
                        "groupBy": {},
                        "size": {},
                        "sortCriteria": {}
                    }
                }
            }
        },
        {
            "name": "GetInvitationsCount",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/invitations/count"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInvitationsCountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInvitationsCountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetMacieSession",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/macie"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMacieSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMacieSessionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetMasterAccount",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/master"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMasterAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMasterAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetMember",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/members/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMemberResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMemberRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetResourceProfile",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/resource-profiles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourceProfileResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourceProfileRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {}
                    }
                }
            }
        },
        {
            "name": "GetRevealConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/reveal-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRevealConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRevealConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetSensitiveDataOccurrences",
            "config": {
                "http": {
                    "inject": [
                        {
                            "findingId": "route.findingId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/findings/{findingId}/reveal"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSensitiveDataOccurrencesResponse"
                    },
                    "inject": [
                        "param.0.findingId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSensitiveDataOccurrencesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "findingId": {}
                    }
                }
            }
        },
        {
            "name": "GetSensitiveDataOccurrencesAvailability",
            "config": {
                "http": {
                    "inject": [
                        {
                            "findingId": "route.findingId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/findings/{findingId}/reveal/availability"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSensitiveDataOccurrencesAvailabilityResponse"
                    },
                    "inject": [
                        "param.0.findingId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSensitiveDataOccurrencesAvailabilityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "findingId": {}
                    }
                }
            }
        },
        {
            "name": "GetSensitivityInspectionTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/templates/sensitivity-inspections/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSensitivityInspectionTemplateResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSensitivityInspectionTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {}
                    }
                }
            }
        },
        {
            "name": "GetUsageStatistics",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/usage/statistics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUsageStatisticsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUsageStatisticsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "filterBy": {},
                        "maxResults": {},
                        "nextToken": {},
                        "sortBy": {},
                        "timeRange": {}
                    }
                }
            }
        },
        {
            "name": "GetUsageTotals",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/usage"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUsageTotalsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetUsageTotalsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "timeRange": {}
                    }
                }
            }
        },
        {
            "name": "ListAllowLists",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/allow-lists"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAllowListsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAllowListsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListAutomatedDiscoveryAccounts",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/automated-discovery/accounts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAutomatedDiscoveryAccountsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAutomatedDiscoveryAccountsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "accountIds": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListClassificationJobs",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/jobs/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListClassificationJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListClassificationJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "filterCriteria": {},
                        "maxResults": {},
                        "nextToken": {},
                        "sortCriteria": {}
                    }
                }
            }
        },
        {
            "name": "ListClassificationScopes",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/classification-scopes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListClassificationScopesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListClassificationScopesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "name": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListCustomDataIdentifiers",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/custom-data-identifiers/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCustomDataIdentifiersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCustomDataIdentifiersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListFindings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/findings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFindingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFindingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "findingCriteria": {},
                        "maxResults": {},
                        "nextToken": {},
                        "sortCriteria": {}
                    }
                }
            }
        },
        {
            "name": "ListFindingsFilters",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/findingsfilters"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFindingsFiltersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFindingsFiltersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListInvitations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/invitations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListInvitationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListInvitationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListManagedDataIdentifiers",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/managed-data-identifiers/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListManagedDataIdentifiersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListManagedDataIdentifiersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListMembers",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/members"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMembersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMembersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {},
                        "onlyAssociated": {}
                    }
                }
            }
        },
        {
            "name": "ListOrganizationAdminAccounts",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/admin"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOrganizationAdminAccountsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOrganizationAdminAccountsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListResourceProfileArtifacts",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/resource-profiles/artifacts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResourceProfileArtifactsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResourceProfileArtifactsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "nextToken": {},
                        "resourceArn": {}
                    }
                }
            }
        },
        {
            "name": "ListResourceProfileDetections",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/resource-profiles/detections"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResourceProfileDetectionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResourceProfileDetectionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {},
                        "resourceArn": {}
                    }
                }
            }
        },
        {
            "name": "ListSensitivityInspectionTemplates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/templates/sensitivity-inspections"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSensitivityInspectionTemplatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSensitivityInspectionTemplatesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {}
                    }
                }
            }
        },
        {
            "name": "PutClassificationExportConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/classification-export-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutClassificationExportConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutClassificationExportConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "configuration": {}
                    }
                }
            }
        },
        {
            "name": "PutFindingsPublicationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/findings-publication-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutFindingsPublicationConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutFindingsPublicationConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "clientToken": {},
                        "securityHubConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "SearchResources",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/datasources/search-resources"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchResourcesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchResourcesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "bucketCriteria": {},
                        "maxResults": {},
                        "nextToken": {},
                        "sortCriteria": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "TestCustomDataIdentifier",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/custom-data-identifiers/test"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestCustomDataIdentifierResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestCustomDataIdentifierRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ignoreWords": {},
                        "keywords": {},
                        "maximumMatchDistance": {},
                        "regex": {},
                        "sampleText": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateAllowList",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/allow-lists/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAllowListResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAllowListRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "criteria": {},
                        "description": {},
                        "id": {},
                        "name": {}
                    }
                }
            }
        },
        {
            "name": "UpdateAutomatedDiscoveryConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/automated-discovery/configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAutomatedDiscoveryConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAutomatedDiscoveryConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "autoEnableOrganizationMembers": {},
                        "status": {}
                    }
                }
            }
        },
        {
            "name": "UpdateClassificationJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobId": "route.jobId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/jobs/{jobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateClassificationJobResponse"
                    },
                    "inject": [
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateClassificationJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "jobId": {},
                        "jobStatus": {}
                    }
                }
            }
        },
        {
            "name": "UpdateClassificationScope",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/classification-scopes/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateClassificationScopeResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateClassificationScopeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {},
                        "s3": {}
                    }
                }
            }
        },
        {
            "name": "UpdateFindingsFilter",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/findingsfilters/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFindingsFilterResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFindingsFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "action": {},
                        "clientToken": {},
                        "description": {},
                        "findingCriteria": {},
                        "id": {},
                        "name": {},
                        "position": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMacieSession",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PATCH",
                    "route": "/macie"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMacieSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMacieSessionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "findingPublishingFrequency": {},
                        "status": {}
                    }
                }
            }
        },
        {
            "name": "UpdateMemberSession",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/macie/members/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMemberSessionResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMemberSessionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "id": {},
                        "status": {}
                    }
                }
            }
        },
        {
            "name": "UpdateOrganizationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PATCH",
                    "route": "/admin/configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateOrganizationConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateOrganizationConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "autoEnable": {}
                    }
                }
            }
        },
        {
            "name": "UpdateResourceProfile",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PATCH",
                    "route": "/resource-profiles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResourceProfileResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResourceProfileRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "sensitivityScoreOverride": {}
                    }
                }
            }
        },
        {
            "name": "UpdateResourceProfileDetections",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PATCH",
                    "route": "/resource-profiles/detections"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResourceProfileDetectionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResourceProfileDetectionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "suppressDataIdentifiers": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRevealConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/reveal-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRevealConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRevealConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "configuration": {},
                        "retrievalConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSensitivityInspectionTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/templates/sensitivity-inspections/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSensitivityInspectionTemplateResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSensitivityInspectionTemplateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "description": {},
                        "excludes": {},
                        "id": {},
                        "includes": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AcceptInvitationRequest": {
            "type": "object",
            "properties": {
                "administratorAccountId": {
                    "$ref": "#/$defs/__string"
                },
                "invitationId": {
                    "$ref": "#/$defs/__string"
                },
                "masterAccount": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__string": {
            "type": "string"
        },
        "AcceptInvitationResponse": {
            "type": "object",
            "properties": {}
        },
        "BatchGetCustomDataIdentifiersRequest": {
            "type": "object",
            "properties": {
                "ids": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "__listOf__string": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/__string"
            }
        },
        "BatchGetCustomDataIdentifiersResponse": {
            "type": "object",
            "properties": {
                "customDataIdentifiers": {
                    "$ref": "#/$defs/__listOfBatchGetCustomDataIdentifierSummary"
                },
                "notFoundIdentifierIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "__listOfBatchGetCustomDataIdentifierSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetCustomDataIdentifierSummary"
            }
        },
        "BatchGetCustomDataIdentifierSummary": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "createdAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "deleted": {
                    "$ref": "#/$defs/__boolean"
                },
                "description": {
                    "$ref": "#/$defs/__string"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__timestampIso8601": {
            "type": "string",
            "format": "date-time"
        },
        "__boolean": {
            "type": "boolean"
        },
        "BatchUpdateAutomatedDiscoveryAccountsRequest": {
            "type": "object",
            "properties": {
                "accounts": {
                    "$ref": "#/$defs/__listOfAutomatedDiscoveryAccountUpdate"
                }
            }
        },
        "__listOfAutomatedDiscoveryAccountUpdate": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutomatedDiscoveryAccountUpdate"
            }
        },
        "AutomatedDiscoveryAccountUpdate": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "status": {
                    "$ref": "#/$defs/AutomatedDiscoveryAccountStatus"
                }
            }
        },
        "AutomatedDiscoveryAccountStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "BatchUpdateAutomatedDiscoveryAccountsResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "$ref": "#/$defs/__listOfAutomatedDiscoveryAccountUpdateError"
                }
            }
        },
        "__listOfAutomatedDiscoveryAccountUpdateError": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutomatedDiscoveryAccountUpdateError"
            }
        },
        "AutomatedDiscoveryAccountUpdateError": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "errorCode": {
                    "$ref": "#/$defs/AutomatedDiscoveryAccountUpdateErrorCode"
                }
            }
        },
        "AutomatedDiscoveryAccountUpdateErrorCode": {
            "enum": [
                "ACCOUNT_PAUSED",
                "ACCOUNT_NOT_FOUND"
            ]
        },
        "CreateAllowListRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/__string"
                },
                "criteria": {
                    "$ref": "#/$defs/AllowListCriteria"
                },
                "description": {
                    "$ref": "#/$defs/__stringMin1Max512PatternSS"
                },
                "name": {
                    "$ref": "#/$defs/__stringMin1Max128Pattern"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "AllowListCriteria": {
            "type": "object",
            "properties": {
                "regex": {
                    "$ref": "#/$defs/__stringMin1Max512PatternSS"
                },
                "s3WordsList": {
                    "$ref": "#/$defs/S3WordsList"
                }
            }
        },
        "__stringMin1Max512PatternSS": {
            "type": "string"
        },
        "S3WordsList": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/__stringMin3Max255PatternAZaZ093255"
                },
                "objectKey": {
                    "$ref": "#/$defs/__stringMin1Max1024PatternSS"
                }
            }
        },
        "__stringMin3Max255PatternAZaZ093255": {
            "type": "string"
        },
        "__stringMin1Max1024PatternSS": {
            "type": "string"
        },
        "__stringMin1Max128Pattern": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/__string"
            }
        },
        "CreateAllowListResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922"
                },
                "id": {
                    "$ref": "#/$defs/__stringMin22Max22PatternAZ0922"
                }
            }
        },
        "__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922": {
            "type": "string"
        },
        "__stringMin22Max22PatternAZ0922": {
            "type": "string"
        },
        "CreateClassificationJobRequest": {
            "type": "object",
            "properties": {
                "allowListIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "clientToken": {
                    "$ref": "#/$defs/__string"
                },
                "customDataIdentifierIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "description": {
                    "$ref": "#/$defs/__string"
                },
                "initialRun": {
                    "$ref": "#/$defs/__boolean"
                },
                "jobType": {
                    "$ref": "#/$defs/JobType"
                },
                "managedDataIdentifierIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "managedDataIdentifierSelector": {
                    "$ref": "#/$defs/ManagedDataIdentifierSelector"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "s3JobDefinition": {
                    "$ref": "#/$defs/S3JobDefinition"
                },
                "samplingPercentage": {
                    "$ref": "#/$defs/__integer"
                },
                "scheduleFrequency": {
                    "$ref": "#/$defs/JobScheduleFrequency"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "JobType": {
            "enum": [
                "ONE_TIME",
                "SCHEDULED"
            ]
        },
        "ManagedDataIdentifierSelector": {
            "enum": [
                "ALL",
                "EXCLUDE",
                "INCLUDE",
                "NONE",
                "RECOMMENDED"
            ]
        },
        "S3JobDefinition": {
            "type": "object",
            "properties": {
                "bucketCriteria": {
                    "$ref": "#/$defs/S3BucketCriteriaForJob"
                },
                "bucketDefinitions": {
                    "$ref": "#/$defs/__listOfS3BucketDefinitionForJob"
                },
                "scoping": {
                    "$ref": "#/$defs/Scoping"
                }
            }
        },
        "S3BucketCriteriaForJob": {
            "type": "object",
            "properties": {
                "excludes": {
                    "$ref": "#/$defs/CriteriaBlockForJob"
                },
                "includes": {
                    "$ref": "#/$defs/CriteriaBlockForJob"
                }
            }
        },
        "CriteriaBlockForJob": {
            "type": "object",
            "properties": {
                "and": {
                    "$ref": "#/$defs/__listOfCriteriaForJob"
                }
            }
        },
        "__listOfCriteriaForJob": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CriteriaForJob"
            }
        },
        "CriteriaForJob": {
            "type": "object",
            "properties": {
                "simpleCriterion": {
                    "$ref": "#/$defs/SimpleCriterionForJob"
                },
                "tagCriterion": {
                    "$ref": "#/$defs/TagCriterionForJob"
                }
            }
        },
        "SimpleCriterionForJob": {
            "type": "object",
            "properties": {
                "comparator": {
                    "$ref": "#/$defs/JobComparator"
                },
                "key": {
                    "$ref": "#/$defs/SimpleCriterionKeyForJob"
                },
                "values": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "JobComparator": {
            "enum": [
                "EQ",
                "GT",
                "GTE",
                "LT",
                "LTE",
                "NE",
                "CONTAINS",
                "STARTS_WITH"
            ]
        },
        "SimpleCriterionKeyForJob": {
            "enum": [
                "ACCOUNT_ID",
                "S3_BUCKET_NAME",
                "S3_BUCKET_EFFECTIVE_PERMISSION",
                "S3_BUCKET_SHARED_ACCESS"
            ]
        },
        "TagCriterionForJob": {
            "type": "object",
            "properties": {
                "comparator": {
                    "$ref": "#/$defs/JobComparator"
                },
                "tagValues": {
                    "$ref": "#/$defs/__listOfTagCriterionPairForJob"
                }
            }
        },
        "__listOfTagCriterionPairForJob": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagCriterionPairForJob"
            }
        },
        "TagCriterionPairForJob": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/__string"
                },
                "value": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfS3BucketDefinitionForJob": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/S3BucketDefinitionForJob"
            }
        },
        "S3BucketDefinitionForJob": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "buckets": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "Scoping": {
            "type": "object",
            "properties": {
                "excludes": {
                    "$ref": "#/$defs/JobScopingBlock"
                },
                "includes": {
                    "$ref": "#/$defs/JobScopingBlock"
                }
            }
        },
        "JobScopingBlock": {
            "type": "object",
            "properties": {
                "and": {
                    "$ref": "#/$defs/__listOfJobScopeTerm"
                }
            }
        },
        "__listOfJobScopeTerm": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobScopeTerm"
            }
        },
        "JobScopeTerm": {
            "type": "object",
            "properties": {
                "simpleScopeTerm": {
                    "$ref": "#/$defs/SimpleScopeTerm"
                },
                "tagScopeTerm": {
                    "$ref": "#/$defs/TagScopeTerm"
                }
            }
        },
        "SimpleScopeTerm": {
            "type": "object",
            "properties": {
                "comparator": {
                    "$ref": "#/$defs/JobComparator"
                },
                "key": {
                    "$ref": "#/$defs/ScopeFilterKey"
                },
                "values": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "ScopeFilterKey": {
            "enum": [
                "OBJECT_EXTENSION",
                "OBJECT_LAST_MODIFIED_DATE",
                "OBJECT_SIZE",
                "OBJECT_KEY"
            ]
        },
        "TagScopeTerm": {
            "type": "object",
            "properties": {
                "comparator": {
                    "$ref": "#/$defs/JobComparator"
                },
                "key": {
                    "$ref": "#/$defs/__string"
                },
                "tagValues": {
                    "$ref": "#/$defs/__listOfTagValuePair"
                },
                "target": {
                    "$ref": "#/$defs/TagTarget"
                }
            }
        },
        "__listOfTagValuePair": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagValuePair"
            }
        },
        "TagValuePair": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/__string"
                },
                "value": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "TagTarget": {
            "enum": [
                "S3_OBJECT"
            ]
        },
        "__integer": {
            "type": "integer",
            "format": "int32"
        },
        "JobScheduleFrequency": {
            "type": "object",
            "properties": {
                "dailySchedule": {
                    "$ref": "#/$defs/DailySchedule"
                },
                "monthlySchedule": {
                    "$ref": "#/$defs/MonthlySchedule"
                },
                "weeklySchedule": {
                    "$ref": "#/$defs/WeeklySchedule"
                }
            }
        },
        "DailySchedule": {
            "type": "object",
            "properties": {}
        },
        "MonthlySchedule": {
            "type": "object",
            "properties": {
                "dayOfMonth": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "WeeklySchedule": {
            "type": "object",
            "properties": {
                "dayOfWeek": {
                    "$ref": "#/$defs/DayOfWeek"
                }
            }
        },
        "DayOfWeek": {
            "enum": [
                "SUNDAY",
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY"
            ]
        },
        "CreateClassificationJobResponse": {
            "type": "object",
            "properties": {
                "jobArn": {
                    "$ref": "#/$defs/__string"
                },
                "jobId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateCustomDataIdentifierRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/__string"
                },
                "description": {
                    "$ref": "#/$defs/__string"
                },
                "ignoreWords": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "keywords": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "maximumMatchDistance": {
                    "$ref": "#/$defs/__integer"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "regex": {
                    "$ref": "#/$defs/__string"
                },
                "severityLevels": {
                    "$ref": "#/$defs/SeverityLevelList"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "SeverityLevelList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SeverityLevel"
            }
        },
        "SeverityLevel": {
            "type": "object",
            "properties": {
                "occurrencesThreshold": {
                    "$ref": "#/$defs/__long"
                },
                "severity": {
                    "$ref": "#/$defs/DataIdentifierSeverity"
                }
            }
        },
        "__long": {
            "type": "integer",
            "format": "int64"
        },
        "DataIdentifierSeverity": {
            "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
            ]
        },
        "CreateCustomDataIdentifierResponse": {
            "type": "object",
            "properties": {
                "customDataIdentifierId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateFindingsFilterRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/$defs/FindingsFilterAction"
                },
                "clientToken": {
                    "$ref": "#/$defs/__string"
                },
                "description": {
                    "$ref": "#/$defs/__string"
                },
                "findingCriteria": {
                    "$ref": "#/$defs/FindingCriteria"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "position": {
                    "$ref": "#/$defs/__integer"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "FindingsFilterAction": {
            "enum": [
                "ARCHIVE",
                "NOOP"
            ]
        },
        "FindingCriteria": {
            "type": "object",
            "properties": {
                "criterion": {
                    "$ref": "#/$defs/Criterion"
                }
            }
        },
        "Criterion": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/CriterionAdditionalProperties"
            }
        },
        "CriterionAdditionalProperties": {
            "type": "object",
            "properties": {
                "eq": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "eqExactMatch": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "gt": {
                    "$ref": "#/$defs/__long"
                },
                "gte": {
                    "$ref": "#/$defs/__long"
                },
                "lt": {
                    "$ref": "#/$defs/__long"
                },
                "lte": {
                    "$ref": "#/$defs/__long"
                },
                "neq": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "CreateFindingsFilterResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateInvitationsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "disableEmailNotification": {
                    "$ref": "#/$defs/__boolean"
                },
                "message": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateInvitationsResponse": {
            "type": "object",
            "properties": {
                "unprocessedAccounts": {
                    "$ref": "#/$defs/__listOfUnprocessedAccount"
                }
            }
        },
        "__listOfUnprocessedAccount": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnprocessedAccount"
            }
        },
        "UnprocessedAccount": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "errorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ErrorCode": {
            "enum": [
                "ClientError",
                "InternalError"
            ]
        },
        "CreateMemberRequest": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/$defs/AccountDetail"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "AccountDetail": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "email": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateMemberResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "CreateSampleFindingsRequest": {
            "type": "object",
            "properties": {
                "findingTypes": {
                    "$ref": "#/$defs/__listOfFindingType"
                }
            }
        },
        "__listOfFindingType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FindingType"
            }
        },
        "FindingType": {
            "enum": [
                "SensitiveData_S3Object_Multiple",
                "SensitiveData_S3Object_Financial",
                "SensitiveData_S3Object_Personal",
                "SensitiveData_S3Object_Credentials",
                "SensitiveData_S3Object_CustomIdentifier",
                "Policy_IAMUser_S3BucketPublic",
                "Policy_IAMUser_S3BucketSharedExternally",
                "Policy_IAMUser_S3BucketReplicatedExternally",
                "Policy_IAMUser_S3BucketEncryptionDisabled",
                "Policy_IAMUser_S3BlockPublicAccessDisabled",
                "Policy_IAMUser_S3BucketSharedWithCloudFront"
            ]
        },
        "CreateSampleFindingsResponse": {
            "type": "object",
            "properties": {}
        },
        "DeclineInvitationsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "DeclineInvitationsResponse": {
            "type": "object",
            "properties": {
                "unprocessedAccounts": {
                    "$ref": "#/$defs/__listOfUnprocessedAccount"
                }
            }
        },
        "DeleteAllowListRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "ignoreJobChecks": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteAllowListResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteCustomDataIdentifierRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteCustomDataIdentifierResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteFindingsFilterRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteFindingsFilterResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteInvitationsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "DeleteInvitationsResponse": {
            "type": "object",
            "properties": {
                "unprocessedAccounts": {
                    "$ref": "#/$defs/__listOfUnprocessedAccount"
                }
            }
        },
        "DeleteMemberRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DeleteMemberResponse": {
            "type": "object",
            "properties": {}
        },
        "DescribeBucketsRequest": {
            "type": "object",
            "properties": {
                "criteria": {
                    "$ref": "#/$defs/BucketCriteria"
                },
                "maxResults": {
                    "$ref": "#/$defs/__integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                },
                "sortCriteria": {
                    "$ref": "#/$defs/BucketSortCriteria"
                }
            }
        },
        "BucketCriteria": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/BucketCriteriaAdditionalProperties"
            }
        },
        "BucketCriteriaAdditionalProperties": {
            "type": "object",
            "properties": {
                "eq": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "gt": {
                    "$ref": "#/$defs/__long"
                },
                "gte": {
                    "$ref": "#/$defs/__long"
                },
                "lt": {
                    "$ref": "#/$defs/__long"
                },
                "lte": {
                    "$ref": "#/$defs/__long"
                },
                "neq": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "prefix": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "BucketSortCriteria": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "$ref": "#/$defs/__string"
                },
                "orderBy": {
                    "$ref": "#/$defs/OrderBy"
                }
            }
        },
        "OrderBy": {
            "enum": [
                "ASC",
                "DESC"
            ]
        },
        "DescribeBucketsResponse": {
            "type": "object",
            "properties": {
                "buckets": {
                    "$ref": "#/$defs/__listOfBucketMetadata"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfBucketMetadata": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BucketMetadata"
            }
        },
        "BucketMetadata": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "allowsUnencryptedObjectUploads": {
                    "$ref": "#/$defs/AllowsUnencryptedObjectUploads"
                },
                "automatedDiscoveryMonitoringStatus": {
                    "$ref": "#/$defs/AutomatedDiscoveryMonitoringStatus"
                },
                "bucketArn": {
                    "$ref": "#/$defs/__string"
                },
                "bucketCreatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "bucketName": {
                    "$ref": "#/$defs/__string"
                },
                "classifiableObjectCount": {
                    "$ref": "#/$defs/__long"
                },
                "classifiableSizeInBytes": {
                    "$ref": "#/$defs/__long"
                },
                "errorCode": {
                    "$ref": "#/$defs/BucketMetadataErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/__string"
                },
                "jobDetails": {
                    "$ref": "#/$defs/JobDetails"
                },
                "lastAutomatedDiscoveryTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "lastUpdated": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "objectCount": {
                    "$ref": "#/$defs/__long"
                },
                "objectCountByEncryptionType": {
                    "$ref": "#/$defs/ObjectCountByEncryptionType"
                },
                "publicAccess": {
                    "$ref": "#/$defs/BucketPublicAccess"
                },
                "region": {
                    "$ref": "#/$defs/__string"
                },
                "replicationDetails": {
                    "$ref": "#/$defs/ReplicationDetails"
                },
                "sensitivityScore": {
                    "$ref": "#/$defs/__integer"
                },
                "serverSideEncryption": {
                    "$ref": "#/$defs/BucketServerSideEncryption"
                },
                "sharedAccess": {
                    "$ref": "#/$defs/SharedAccess"
                },
                "sizeInBytes": {
                    "$ref": "#/$defs/__long"
                },
                "sizeInBytesCompressed": {
                    "$ref": "#/$defs/__long"
                },
                "tags": {
                    "$ref": "#/$defs/__listOfKeyValuePair"
                },
                "unclassifiableObjectCount": {
                    "$ref": "#/$defs/ObjectLevelStatistics"
                },
                "unclassifiableObjectSizeInBytes": {
                    "$ref": "#/$defs/ObjectLevelStatistics"
                },
                "versioning": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "AllowsUnencryptedObjectUploads": {
            "enum": [
                "TRUE",
                "FALSE",
                "UNKNOWN"
            ]
        },
        "AutomatedDiscoveryMonitoringStatus": {
            "enum": [
                "MONITORED",
                "NOT_MONITORED"
            ]
        },
        "BucketMetadataErrorCode": {
            "enum": [
                "ACCESS_DENIED",
                "BUCKET_COUNT_EXCEEDS_QUOTA"
            ]
        },
        "JobDetails": {
            "type": "object",
            "properties": {
                "isDefinedInJob": {
                    "$ref": "#/$defs/IsDefinedInJob"
                },
                "isMonitoredByJob": {
                    "$ref": "#/$defs/IsMonitoredByJob"
                },
                "lastJobId": {
                    "$ref": "#/$defs/__string"
                },
                "lastJobRunTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "IsDefinedInJob": {
            "enum": [
                "TRUE",
                "FALSE",
                "UNKNOWN"
            ]
        },
        "IsMonitoredByJob": {
            "enum": [
                "TRUE",
                "FALSE",
                "UNKNOWN"
            ]
        },
        "ObjectCountByEncryptionType": {
            "type": "object",
            "properties": {
                "customerManaged": {
                    "$ref": "#/$defs/__long"
                },
                "kmsManaged": {
                    "$ref": "#/$defs/__long"
                },
                "s3Managed": {
                    "$ref": "#/$defs/__long"
                },
                "unencrypted": {
                    "$ref": "#/$defs/__long"
                },
                "unknown": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "BucketPublicAccess": {
            "type": "object",
            "properties": {
                "effectivePermission": {
                    "$ref": "#/$defs/EffectivePermission"
                },
                "permissionConfiguration": {
                    "$ref": "#/$defs/BucketPermissionConfiguration"
                }
            }
        },
        "EffectivePermission": {
            "enum": [
                "PUBLIC",
                "NOT_PUBLIC",
                "UNKNOWN"
            ]
        },
        "BucketPermissionConfiguration": {
            "type": "object",
            "properties": {
                "accountLevelPermissions": {
                    "$ref": "#/$defs/AccountLevelPermissions"
                },
                "bucketLevelPermissions": {
                    "$ref": "#/$defs/BucketLevelPermissions"
                }
            }
        },
        "AccountLevelPermissions": {
            "type": "object",
            "properties": {
                "blockPublicAccess": {
                    "$ref": "#/$defs/BlockPublicAccess"
                }
            }
        },
        "BlockPublicAccess": {
            "type": "object",
            "properties": {
                "blockPublicAcls": {
                    "$ref": "#/$defs/__boolean"
                },
                "blockPublicPolicy": {
                    "$ref": "#/$defs/__boolean"
                },
                "ignorePublicAcls": {
                    "$ref": "#/$defs/__boolean"
                },
                "restrictPublicBuckets": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "BucketLevelPermissions": {
            "type": "object",
            "properties": {
                "accessControlList": {
                    "$ref": "#/$defs/AccessControlList"
                },
                "blockPublicAccess": {
                    "$ref": "#/$defs/BlockPublicAccess"
                },
                "bucketPolicy": {
                    "$ref": "#/$defs/BucketPolicy"
                }
            }
        },
        "AccessControlList": {
            "type": "object",
            "properties": {
                "allowsPublicReadAccess": {
                    "$ref": "#/$defs/__boolean"
                },
                "allowsPublicWriteAccess": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "BucketPolicy": {
            "type": "object",
            "properties": {
                "allowsPublicReadAccess": {
                    "$ref": "#/$defs/__boolean"
                },
                "allowsPublicWriteAccess": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "ReplicationDetails": {
            "type": "object",
            "properties": {
                "replicated": {
                    "$ref": "#/$defs/__boolean"
                },
                "replicatedExternally": {
                    "$ref": "#/$defs/__boolean"
                },
                "replicationAccounts": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "BucketServerSideEncryption": {
            "type": "object",
            "properties": {
                "kmsMasterKeyId": {
                    "$ref": "#/$defs/__string"
                },
                "type": {
                    "$ref": "#/$defs/Type"
                }
            }
        },
        "Type": {
            "enum": [
                "NONE",
                "AES256",
                "aws_kms",
                "aws_kms_dsse"
            ]
        },
        "SharedAccess": {
            "enum": [
                "EXTERNAL",
                "INTERNAL",
                "NOT_SHARED",
                "UNKNOWN"
            ]
        },
        "__listOfKeyValuePair": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyValuePair"
            }
        },
        "KeyValuePair": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/__string"
                },
                "value": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ObjectLevelStatistics": {
            "type": "object",
            "properties": {
                "fileType": {
                    "$ref": "#/$defs/__long"
                },
                "storageClass": {
                    "$ref": "#/$defs/__long"
                },
                "total": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "DescribeClassificationJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DescribeClassificationJobResponse": {
            "type": "object",
            "properties": {
                "allowListIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "clientToken": {
                    "$ref": "#/$defs/__string"
                },
                "createdAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "customDataIdentifierIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "description": {
                    "$ref": "#/$defs/__string"
                },
                "initialRun": {
                    "$ref": "#/$defs/__boolean"
                },
                "jobArn": {
                    "$ref": "#/$defs/__string"
                },
                "jobId": {
                    "$ref": "#/$defs/__string"
                },
                "jobStatus": {
                    "$ref": "#/$defs/JobStatus"
                },
                "jobType": {
                    "$ref": "#/$defs/JobType"
                },
                "lastRunErrorStatus": {
                    "$ref": "#/$defs/LastRunErrorStatus"
                },
                "lastRunTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "managedDataIdentifierIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "managedDataIdentifierSelector": {
                    "$ref": "#/$defs/ManagedDataIdentifierSelector"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "s3JobDefinition": {
                    "$ref": "#/$defs/S3JobDefinition"
                },
                "samplingPercentage": {
                    "$ref": "#/$defs/__integer"
                },
                "scheduleFrequency": {
                    "$ref": "#/$defs/JobScheduleFrequency"
                },
                "statistics": {
                    "$ref": "#/$defs/Statistics"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "userPausedDetails": {
                    "$ref": "#/$defs/UserPausedDetails"
                }
            }
        },
        "JobStatus": {
            "enum": [
                "RUNNING",
                "PAUSED",
                "CANCELLED",
                "COMPLETE",
                "IDLE",
                "USER_PAUSED"
            ]
        },
        "LastRunErrorStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/LastRunErrorStatusCode"
                }
            }
        },
        "LastRunErrorStatusCode": {
            "enum": [
                "NONE",
                "ERROR"
            ]
        },
        "Statistics": {
            "type": "object",
            "properties": {
                "approximateNumberOfObjectsToProcess": {
                    "$ref": "#/$defs/__double"
                },
                "numberOfRuns": {
                    "$ref": "#/$defs/__double"
                }
            }
        },
        "__double": {
            "type": "number",
            "format": "double"
        },
        "UserPausedDetails": {
            "type": "object",
            "properties": {
                "jobExpiresAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "jobImminentExpirationHealthEventArn": {
                    "$ref": "#/$defs/__string"
                },
                "jobPausedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "DescribeOrganizationConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "DescribeOrganizationConfigurationResponse": {
            "type": "object",
            "properties": {
                "autoEnable": {
                    "$ref": "#/$defs/__boolean"
                },
                "maxAccountLimitReached": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "DisableMacieRequest": {
            "type": "object",
            "properties": {}
        },
        "DisableMacieResponse": {
            "type": "object",
            "properties": {}
        },
        "DisableOrganizationAdminAccountRequest": {
            "type": "object",
            "properties": {
                "adminAccountId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DisableOrganizationAdminAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateFromAdministratorAccountRequest": {
            "type": "object",
            "properties": {}
        },
        "DisassociateFromAdministratorAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateFromMasterAccountRequest": {
            "type": "object",
            "properties": {}
        },
        "DisassociateFromMasterAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateMemberRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "DisassociateMemberResponse": {
            "type": "object",
            "properties": {}
        },
        "EnableMacieRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/__string"
                },
                "findingPublishingFrequency": {
                    "$ref": "#/$defs/FindingPublishingFrequency"
                },
                "status": {
                    "$ref": "#/$defs/MacieStatus"
                }
            }
        },
        "FindingPublishingFrequency": {
            "enum": [
                "FIFTEEN_MINUTES",
                "ONE_HOUR",
                "SIX_HOURS"
            ]
        },
        "MacieStatus": {
            "enum": [
                "PAUSED",
                "ENABLED"
            ]
        },
        "EnableMacieResponse": {
            "type": "object",
            "properties": {}
        },
        "EnableOrganizationAdminAccountRequest": {
            "type": "object",
            "properties": {
                "adminAccountId": {
                    "$ref": "#/$defs/__string"
                },
                "clientToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "EnableOrganizationAdminAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "GetAdministratorAccountRequest": {
            "type": "object",
            "properties": {}
        },
        "GetAdministratorAccountResponse": {
            "type": "object",
            "properties": {
                "administrator": {
                    "$ref": "#/$defs/Invitation"
                }
            }
        },
        "Invitation": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "invitationId": {
                    "$ref": "#/$defs/__string"
                },
                "invitedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "relationshipStatus": {
                    "$ref": "#/$defs/RelationshipStatus"
                }
            }
        },
        "RelationshipStatus": {
            "enum": [
                "Enabled",
                "Paused",
                "Invited",
                "Created",
                "Removed",
                "Resigned",
                "EmailVerificationInProgress",
                "EmailVerificationFailed",
                "RegionDisabled",
                "AccountSuspended"
            ]
        },
        "GetAllowListRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetAllowListResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922"
                },
                "createdAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "criteria": {
                    "$ref": "#/$defs/AllowListCriteria"
                },
                "description": {
                    "$ref": "#/$defs/__stringMin1Max512PatternSS"
                },
                "id": {
                    "$ref": "#/$defs/__stringMin22Max22PatternAZ0922"
                },
                "name": {
                    "$ref": "#/$defs/__stringMin1Max128Pattern"
                },
                "status": {
                    "$ref": "#/$defs/AllowListStatus"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "updatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "AllowListStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/AllowListStatusCode"
                },
                "description": {
                    "$ref": "#/$defs/__stringMin1Max1024PatternSS"
                }
            }
        },
        "AllowListStatusCode": {
            "enum": [
                "OK",
                "S3_OBJECT_NOT_FOUND",
                "S3_USER_ACCESS_DENIED",
                "S3_OBJECT_ACCESS_DENIED",
                "S3_THROTTLED",
                "S3_OBJECT_OVERSIZE",
                "S3_OBJECT_EMPTY",
                "UNKNOWN_ERROR"
            ]
        },
        "GetAutomatedDiscoveryConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "GetAutomatedDiscoveryConfigurationResponse": {
            "type": "object",
            "properties": {
                "autoEnableOrganizationMembers": {
                    "$ref": "#/$defs/AutoEnableMode"
                },
                "classificationScopeId": {
                    "$ref": "#/$defs/ClassificationScopeId"
                },
                "disabledAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "firstEnabledAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "sensitivityInspectionTemplateId": {
                    "$ref": "#/$defs/SensitivityInspectionTemplateId"
                },
                "status": {
                    "$ref": "#/$defs/AutomatedDiscoveryStatus"
                }
            }
        },
        "AutoEnableMode": {
            "enum": [
                "ALL",
                "NEW",
                "NONE"
            ]
        },
        "ClassificationScopeId": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "SensitivityInspectionTemplateId": {
            "type": "string"
        },
        "AutomatedDiscoveryStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "GetBucketStatisticsRequest": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetBucketStatisticsResponse": {
            "type": "object",
            "properties": {
                "bucketCount": {
                    "$ref": "#/$defs/__long"
                },
                "bucketCountByEffectivePermission": {
                    "$ref": "#/$defs/BucketCountByEffectivePermission"
                },
                "bucketCountByEncryptionType": {
                    "$ref": "#/$defs/BucketCountByEncryptionType"
                },
                "bucketCountByObjectEncryptionRequirement": {
                    "$ref": "#/$defs/BucketCountPolicyAllowsUnencryptedObjectUploads"
                },
                "bucketCountBySharedAccessType": {
                    "$ref": "#/$defs/BucketCountBySharedAccessType"
                },
                "bucketStatisticsBySensitivity": {
                    "$ref": "#/$defs/BucketStatisticsBySensitivity"
                },
                "classifiableObjectCount": {
                    "$ref": "#/$defs/__long"
                },
                "classifiableSizeInBytes": {
                    "$ref": "#/$defs/__long"
                },
                "lastUpdated": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "objectCount": {
                    "$ref": "#/$defs/__long"
                },
                "sizeInBytes": {
                    "$ref": "#/$defs/__long"
                },
                "sizeInBytesCompressed": {
                    "$ref": "#/$defs/__long"
                },
                "unclassifiableObjectCount": {
                    "$ref": "#/$defs/ObjectLevelStatistics"
                },
                "unclassifiableObjectSizeInBytes": {
                    "$ref": "#/$defs/ObjectLevelStatistics"
                }
            }
        },
        "BucketCountByEffectivePermission": {
            "type": "object",
            "properties": {
                "publiclyAccessible": {
                    "$ref": "#/$defs/__long"
                },
                "publiclyReadable": {
                    "$ref": "#/$defs/__long"
                },
                "publiclyWritable": {
                    "$ref": "#/$defs/__long"
                },
                "unknown": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "BucketCountByEncryptionType": {
            "type": "object",
            "properties": {
                "kmsManaged": {
                    "$ref": "#/$defs/__long"
                },
                "s3Managed": {
                    "$ref": "#/$defs/__long"
                },
                "unencrypted": {
                    "$ref": "#/$defs/__long"
                },
                "unknown": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "BucketCountPolicyAllowsUnencryptedObjectUploads": {
            "type": "object",
            "properties": {
                "allowsUnencryptedObjectUploads": {
                    "$ref": "#/$defs/__long"
                },
                "deniesUnencryptedObjectUploads": {
                    "$ref": "#/$defs/__long"
                },
                "unknown": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "BucketCountBySharedAccessType": {
            "type": "object",
            "properties": {
                "external": {
                    "$ref": "#/$defs/__long"
                },
                "internal": {
                    "$ref": "#/$defs/__long"
                },
                "notShared": {
                    "$ref": "#/$defs/__long"
                },
                "unknown": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "BucketStatisticsBySensitivity": {
            "type": "object",
            "properties": {
                "classificationError": {
                    "$ref": "#/$defs/SensitivityAggregations"
                },
                "notClassified": {
                    "$ref": "#/$defs/SensitivityAggregations"
                },
                "notSensitive": {
                    "$ref": "#/$defs/SensitivityAggregations"
                },
                "sensitive": {
                    "$ref": "#/$defs/SensitivityAggregations"
                }
            }
        },
        "SensitivityAggregations": {
            "type": "object",
            "properties": {
                "classifiableSizeInBytes": {
                    "$ref": "#/$defs/__long"
                },
                "publiclyAccessibleCount": {
                    "$ref": "#/$defs/__long"
                },
                "totalCount": {
                    "$ref": "#/$defs/__long"
                },
                "totalSizeInBytes": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "GetClassificationExportConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "GetClassificationExportConfigurationResponse": {
            "type": "object",
            "properties": {
                "configuration": {
                    "$ref": "#/$defs/ClassificationExportConfiguration"
                }
            }
        },
        "ClassificationExportConfiguration": {
            "type": "object",
            "properties": {
                "s3Destination": {
                    "$ref": "#/$defs/S3Destination"
                }
            }
        },
        "S3Destination": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/__string"
                },
                "keyPrefix": {
                    "$ref": "#/$defs/__string"
                },
                "kmsKeyArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetClassificationScopeRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetClassificationScopeResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ClassificationScopeId"
                },
                "name": {
                    "$ref": "#/$defs/ClassificationScopeName"
                },
                "s3": {
                    "$ref": "#/$defs/S3ClassificationScope"
                }
            }
        },
        "ClassificationScopeName": {
            "type": "string"
        },
        "S3ClassificationScope": {
            "type": "object",
            "properties": {
                "excludes": {
                    "$ref": "#/$defs/S3ClassificationScopeExclusion"
                }
            }
        },
        "S3ClassificationScopeExclusion": {
            "type": "object",
            "properties": {
                "bucketNames": {
                    "$ref": "#/$defs/__listOfS3BucketName"
                }
            }
        },
        "__listOfS3BucketName": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/S3BucketName"
            }
        },
        "S3BucketName": {
            "type": "string"
        },
        "GetCustomDataIdentifierRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetCustomDataIdentifierResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "createdAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "deleted": {
                    "$ref": "#/$defs/__boolean"
                },
                "description": {
                    "$ref": "#/$defs/__string"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "ignoreWords": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "keywords": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "maximumMatchDistance": {
                    "$ref": "#/$defs/__integer"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "regex": {
                    "$ref": "#/$defs/__string"
                },
                "severityLevels": {
                    "$ref": "#/$defs/SeverityLevelList"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetFindingsRequest": {
            "type": "object",
            "properties": {
                "findingIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "sortCriteria": {
                    "$ref": "#/$defs/SortCriteria"
                }
            }
        },
        "SortCriteria": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "$ref": "#/$defs/__string"
                },
                "orderBy": {
                    "$ref": "#/$defs/OrderBy"
                }
            }
        },
        "GetFindingsResponse": {
            "type": "object",
            "properties": {
                "findings": {
                    "$ref": "#/$defs/__listOfFinding"
                }
            }
        },
        "__listOfFinding": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Finding"
            }
        },
        "Finding": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "archived": {
                    "$ref": "#/$defs/__boolean"
                },
                "category": {
                    "$ref": "#/$defs/FindingCategory"
                },
                "classificationDetails": {
                    "$ref": "#/$defs/ClassificationDetails"
                },
                "count": {
                    "$ref": "#/$defs/__long"
                },
                "createdAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "description": {
                    "$ref": "#/$defs/__string"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "partition": {
                    "$ref": "#/$defs/__string"
                },
                "policyDetails": {
                    "$ref": "#/$defs/PolicyDetails"
                },
                "region": {
                    "$ref": "#/$defs/__string"
                },
                "resourcesAffected": {
                    "$ref": "#/$defs/ResourcesAffected"
                },
                "sample": {
                    "$ref": "#/$defs/__boolean"
                },
                "schemaVersion": {
                    "$ref": "#/$defs/__string"
                },
                "severity": {
                    "$ref": "#/$defs/Severity"
                },
                "title": {
                    "$ref": "#/$defs/__string"
                },
                "type": {
                    "$ref": "#/$defs/FindingType"
                },
                "updatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "FindingCategory": {
            "enum": [
                "CLASSIFICATION",
                "POLICY"
            ]
        },
        "ClassificationDetails": {
            "type": "object",
            "properties": {
                "detailedResultsLocation": {
                    "$ref": "#/$defs/__string"
                },
                "jobArn": {
                    "$ref": "#/$defs/__string"
                },
                "jobId": {
                    "$ref": "#/$defs/__string"
                },
                "originType": {
                    "$ref": "#/$defs/OriginType"
                },
                "result": {
                    "$ref": "#/$defs/ClassificationResult"
                }
            }
        },
        "OriginType": {
            "enum": [
                "SENSITIVE_DATA_DISCOVERY_JOB",
                "AUTOMATED_SENSITIVE_DATA_DISCOVERY"
            ]
        },
        "ClassificationResult": {
            "type": "object",
            "properties": {
                "additionalOccurrences": {
                    "$ref": "#/$defs/__boolean"
                },
                "customDataIdentifiers": {
                    "$ref": "#/$defs/CustomDataIdentifiers"
                },
                "mimeType": {
                    "$ref": "#/$defs/__string"
                },
                "sensitiveData": {
                    "$ref": "#/$defs/SensitiveData"
                },
                "sizeClassified": {
                    "$ref": "#/$defs/__long"
                },
                "status": {
                    "$ref": "#/$defs/ClassificationResultStatus"
                }
            }
        },
        "CustomDataIdentifiers": {
            "type": "object",
            "properties": {
                "detections": {
                    "$ref": "#/$defs/CustomDetections"
                },
                "totalCount": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "CustomDetections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomDetection"
            }
        },
        "CustomDetection": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "count": {
                    "$ref": "#/$defs/__long"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "occurrences": {
                    "$ref": "#/$defs/Occurrences"
                }
            }
        },
        "Occurrences": {
            "type": "object",
            "properties": {
                "cells": {
                    "$ref": "#/$defs/Cells"
                },
                "lineRanges": {
                    "$ref": "#/$defs/Ranges"
                },
                "offsetRanges": {
                    "$ref": "#/$defs/Ranges"
                },
                "pages": {
                    "$ref": "#/$defs/Pages"
                },
                "records": {
                    "$ref": "#/$defs/Records"
                }
            }
        },
        "Cells": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Cell"
            }
        },
        "Cell": {
            "type": "object",
            "properties": {
                "cellReference": {
                    "$ref": "#/$defs/__string"
                },
                "column": {
                    "$ref": "#/$defs/__long"
                },
                "columnName": {
                    "$ref": "#/$defs/__string"
                },
                "row": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "Ranges": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Range"
            }
        },
        "Range": {
            "type": "object",
            "properties": {
                "end": {
                    "$ref": "#/$defs/__long"
                },
                "start": {
                    "$ref": "#/$defs/__long"
                },
                "startColumn": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "Pages": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Page"
            }
        },
        "Page": {
            "type": "object",
            "properties": {
                "lineRange": {
                    "$ref": "#/$defs/Range"
                },
                "offsetRange": {
                    "$ref": "#/$defs/Range"
                },
                "pageNumber": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "Records": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Record"
            }
        },
        "Record": {
            "type": "object",
            "properties": {
                "jsonPath": {
                    "$ref": "#/$defs/__string"
                },
                "recordIndex": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "SensitiveData": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SensitiveDataItem"
            }
        },
        "SensitiveDataItem": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/$defs/SensitiveDataItemCategory"
                },
                "detections": {
                    "$ref": "#/$defs/DefaultDetections"
                },
                "totalCount": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "SensitiveDataItemCategory": {
            "enum": [
                "FINANCIAL_INFORMATION",
                "PERSONAL_INFORMATION",
                "CREDENTIALS",
                "CUSTOM_IDENTIFIER"
            ]
        },
        "DefaultDetections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DefaultDetection"
            }
        },
        "DefaultDetection": {
            "type": "object",
            "properties": {
                "count": {
                    "$ref": "#/$defs/__long"
                },
                "occurrences": {
                    "$ref": "#/$defs/Occurrences"
                },
                "type": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ClassificationResultStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/__string"
                },
                "reason": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "PolicyDetails": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/$defs/FindingAction"
                },
                "actor": {
                    "$ref": "#/$defs/FindingActor"
                }
            }
        },
        "FindingAction": {
            "type": "object",
            "properties": {
                "actionType": {
                    "$ref": "#/$defs/FindingActionType"
                },
                "apiCallDetails": {
                    "$ref": "#/$defs/ApiCallDetails"
                }
            }
        },
        "FindingActionType": {
            "enum": [
                "AWS_API_CALL"
            ]
        },
        "ApiCallDetails": {
            "type": "object",
            "properties": {
                "api": {
                    "$ref": "#/$defs/__string"
                },
                "apiServiceName": {
                    "$ref": "#/$defs/__string"
                },
                "firstSeen": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "lastSeen": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "FindingActor": {
            "type": "object",
            "properties": {
                "domainDetails": {
                    "$ref": "#/$defs/DomainDetails"
                },
                "ipAddressDetails": {
                    "$ref": "#/$defs/IpAddressDetails"
                },
                "userIdentity": {
                    "$ref": "#/$defs/UserIdentity"
                }
            }
        },
        "DomainDetails": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "IpAddressDetails": {
            "type": "object",
            "properties": {
                "ipAddressV4": {
                    "$ref": "#/$defs/__string"
                },
                "ipCity": {
                    "$ref": "#/$defs/IpCity"
                },
                "ipCountry": {
                    "$ref": "#/$defs/IpCountry"
                },
                "ipGeoLocation": {
                    "$ref": "#/$defs/IpGeoLocation"
                },
                "ipOwner": {
                    "$ref": "#/$defs/IpOwner"
                }
            }
        },
        "IpCity": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "IpCountry": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/__string"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "IpGeoLocation": {
            "type": "object",
            "properties": {
                "lat": {
                    "$ref": "#/$defs/__double"
                },
                "lon": {
                    "$ref": "#/$defs/__double"
                }
            }
        },
        "IpOwner": {
            "type": "object",
            "properties": {
                "asn": {
                    "$ref": "#/$defs/__string"
                },
                "asnOrg": {
                    "$ref": "#/$defs/__string"
                },
                "isp": {
                    "$ref": "#/$defs/__string"
                },
                "org": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UserIdentity": {
            "type": "object",
            "properties": {
                "assumedRole": {
                    "$ref": "#/$defs/AssumedRole"
                },
                "awsAccount": {
                    "$ref": "#/$defs/AwsAccount"
                },
                "awsService": {
                    "$ref": "#/$defs/AwsService"
                },
                "federatedUser": {
                    "$ref": "#/$defs/FederatedUser"
                },
                "iamUser": {
                    "$ref": "#/$defs/IamUser"
                },
                "root": {
                    "$ref": "#/$defs/UserIdentityRoot"
                },
                "type": {
                    "$ref": "#/$defs/UserIdentityType"
                }
            }
        },
        "AssumedRole": {
            "type": "object",
            "properties": {
                "accessKeyId": {
                    "$ref": "#/$defs/__string"
                },
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "principalId": {
                    "$ref": "#/$defs/__string"
                },
                "sessionContext": {
                    "$ref": "#/$defs/SessionContext"
                }
            }
        },
        "SessionContext": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/$defs/SessionContextAttributes"
                },
                "sessionIssuer": {
                    "$ref": "#/$defs/SessionIssuer"
                }
            }
        },
        "SessionContextAttributes": {
            "type": "object",
            "properties": {
                "creationDate": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "mfaAuthenticated": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "SessionIssuer": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "principalId": {
                    "$ref": "#/$defs/__string"
                },
                "type": {
                    "$ref": "#/$defs/__string"
                },
                "userName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "AwsAccount": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "principalId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "AwsService": {
            "type": "object",
            "properties": {
                "invokedBy": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "FederatedUser": {
            "type": "object",
            "properties": {
                "accessKeyId": {
                    "$ref": "#/$defs/__string"
                },
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "principalId": {
                    "$ref": "#/$defs/__string"
                },
                "sessionContext": {
                    "$ref": "#/$defs/SessionContext"
                }
            }
        },
        "IamUser": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "principalId": {
                    "$ref": "#/$defs/__string"
                },
                "userName": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UserIdentityRoot": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "principalId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UserIdentityType": {
            "enum": [
                "AssumedRole",
                "IAMUser",
                "FederatedUser",
                "Root",
                "AWSAccount",
                "AWSService"
            ]
        },
        "ResourcesAffected": {
            "type": "object",
            "properties": {
                "s3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "s3Object": {
                    "$ref": "#/$defs/S3Object"
                }
            }
        },
        "S3Bucket": {
            "type": "object",
            "properties": {
                "allowsUnencryptedObjectUploads": {
                    "$ref": "#/$defs/AllowsUnencryptedObjectUploads"
                },
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "createdAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "defaultServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "owner": {
                    "$ref": "#/$defs/S3BucketOwner"
                },
                "publicAccess": {
                    "$ref": "#/$defs/BucketPublicAccess"
                },
                "tags": {
                    "$ref": "#/$defs/KeyValuePairList"
                }
            }
        },
        "ServerSideEncryption": {
            "type": "object",
            "properties": {
                "encryptionType": {
                    "$ref": "#/$defs/EncryptionType"
                },
                "kmsMasterKeyId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "EncryptionType": {
            "enum": [
                "NONE",
                "AES256",
                "aws_kms",
                "UNKNOWN",
                "aws_kms_dsse"
            ]
        },
        "S3BucketOwner": {
            "type": "object",
            "properties": {
                "displayName": {
                    "$ref": "#/$defs/__string"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "KeyValuePairList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyValuePair"
            }
        },
        "S3Object": {
            "type": "object",
            "properties": {
                "bucketArn": {
                    "$ref": "#/$defs/__string"
                },
                "eTag": {
                    "$ref": "#/$defs/__string"
                },
                "extension": {
                    "$ref": "#/$defs/__string"
                },
                "key": {
                    "$ref": "#/$defs/__string"
                },
                "lastModified": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "path": {
                    "$ref": "#/$defs/__string"
                },
                "publicAccess": {
                    "$ref": "#/$defs/__boolean"
                },
                "serverSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "size": {
                    "$ref": "#/$defs/__long"
                },
                "storageClass": {
                    "$ref": "#/$defs/StorageClass"
                },
                "tags": {
                    "$ref": "#/$defs/KeyValuePairList"
                },
                "versionId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "StorageClass": {
            "enum": [
                "STANDARD",
                "REDUCED_REDUNDANCY",
                "STANDARD_IA",
                "INTELLIGENT_TIERING",
                "DEEP_ARCHIVE",
                "ONEZONE_IA",
                "GLACIER",
                "GLACIER_IR",
                "OUTPOSTS"
            ]
        },
        "Severity": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/SeverityDescription"
                },
                "score": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "SeverityDescription": {
            "enum": [
                "Low",
                "Medium",
                "High"
            ]
        },
        "GetFindingsFilterRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetFindingsFilterResponse": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/$defs/FindingsFilterAction"
                },
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "description": {
                    "$ref": "#/$defs/__string"
                },
                "findingCriteria": {
                    "$ref": "#/$defs/FindingCriteria"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "position": {
                    "$ref": "#/$defs/__integer"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "GetFindingsPublicationConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "GetFindingsPublicationConfigurationResponse": {
            "type": "object",
            "properties": {
                "securityHubConfiguration": {
                    "$ref": "#/$defs/SecurityHubConfiguration"
                }
            }
        },
        "SecurityHubConfiguration": {
            "type": "object",
            "properties": {
                "publishClassificationFindings": {
                    "$ref": "#/$defs/__boolean"
                },
                "publishPolicyFindings": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "GetFindingStatisticsRequest": {
            "type": "object",
            "properties": {
                "findingCriteria": {
                    "$ref": "#/$defs/FindingCriteria"
                },
                "groupBy": {
                    "$ref": "#/$defs/GroupBy"
                },
                "size": {
                    "$ref": "#/$defs/__integer"
                },
                "sortCriteria": {
                    "$ref": "#/$defs/FindingStatisticsSortCriteria"
                }
            }
        },
        "GroupBy": {
            "enum": [
                "resourcesAffected_s3Bucket_name",
                "type",
                "classificationDetails_jobId",
                "severity_description"
            ]
        },
        "FindingStatisticsSortCriteria": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "$ref": "#/$defs/FindingStatisticsSortAttributeName"
                },
                "orderBy": {
                    "$ref": "#/$defs/OrderBy"
                }
            }
        },
        "FindingStatisticsSortAttributeName": {
            "enum": [
                "groupKey",
                "count"
            ]
        },
        "GetFindingStatisticsResponse": {
            "type": "object",
            "properties": {
                "countsByGroup": {
                    "$ref": "#/$defs/__listOfGroupCount"
                }
            }
        },
        "__listOfGroupCount": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupCount"
            }
        },
        "GroupCount": {
            "type": "object",
            "properties": {
                "count": {
                    "$ref": "#/$defs/__long"
                },
                "groupKey": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetInvitationsCountRequest": {
            "type": "object",
            "properties": {}
        },
        "GetInvitationsCountResponse": {
            "type": "object",
            "properties": {
                "invitationsCount": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "GetMacieSessionRequest": {
            "type": "object",
            "properties": {}
        },
        "GetMacieSessionResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "findingPublishingFrequency": {
                    "$ref": "#/$defs/FindingPublishingFrequency"
                },
                "serviceRole": {
                    "$ref": "#/$defs/__string"
                },
                "status": {
                    "$ref": "#/$defs/MacieStatus"
                },
                "updatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "GetMasterAccountRequest": {
            "type": "object",
            "properties": {}
        },
        "GetMasterAccountResponse": {
            "type": "object",
            "properties": {
                "master": {
                    "$ref": "#/$defs/Invitation"
                }
            }
        },
        "GetMemberRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetMemberResponse": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "administratorAccountId": {
                    "$ref": "#/$defs/__string"
                },
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "email": {
                    "$ref": "#/$defs/__string"
                },
                "invitedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "masterAccountId": {
                    "$ref": "#/$defs/__string"
                },
                "relationshipStatus": {
                    "$ref": "#/$defs/RelationshipStatus"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "updatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "GetResourceProfileRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetResourceProfileResponse": {
            "type": "object",
            "properties": {
                "profileUpdatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "sensitivityScore": {
                    "$ref": "#/$defs/__integer"
                },
                "sensitivityScoreOverridden": {
                    "$ref": "#/$defs/__boolean"
                },
                "statistics": {
                    "$ref": "#/$defs/ResourceStatistics"
                }
            }
        },
        "ResourceStatistics": {
            "type": "object",
            "properties": {
                "totalBytesClassified": {
                    "$ref": "#/$defs/__long"
                },
                "totalDetections": {
                    "$ref": "#/$defs/__long"
                },
                "totalDetectionsSuppressed": {
                    "$ref": "#/$defs/__long"
                },
                "totalItemsClassified": {
                    "$ref": "#/$defs/__long"
                },
                "totalItemsSensitive": {
                    "$ref": "#/$defs/__long"
                },
                "totalItemsSkipped": {
                    "$ref": "#/$defs/__long"
                },
                "totalItemsSkippedInvalidEncryption": {
                    "$ref": "#/$defs/__long"
                },
                "totalItemsSkippedInvalidKms": {
                    "$ref": "#/$defs/__long"
                },
                "totalItemsSkippedPermissionDenied": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "GetRevealConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "GetRevealConfigurationResponse": {
            "type": "object",
            "properties": {
                "configuration": {
                    "$ref": "#/$defs/RevealConfiguration"
                },
                "retrievalConfiguration": {
                    "$ref": "#/$defs/RetrievalConfiguration"
                }
            }
        },
        "RevealConfiguration": {
            "type": "object",
            "properties": {
                "kmsKeyId": {
                    "$ref": "#/$defs/__stringMin1Max2048"
                },
                "status": {
                    "$ref": "#/$defs/RevealStatus"
                }
            }
        },
        "__stringMin1Max2048": {
            "type": "string"
        },
        "RevealStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "RetrievalConfiguration": {
            "type": "object",
            "properties": {
                "externalId": {
                    "$ref": "#/$defs/__string"
                },
                "retrievalMode": {
                    "$ref": "#/$defs/RetrievalMode"
                },
                "roleName": {
                    "$ref": "#/$defs/__stringMin1Max64PatternW"
                }
            }
        },
        "RetrievalMode": {
            "enum": [
                "CALLER_CREDENTIALS",
                "ASSUME_ROLE"
            ]
        },
        "__stringMin1Max64PatternW": {
            "type": "string"
        },
        "GetSensitiveDataOccurrencesRequest": {
            "type": "object",
            "properties": {
                "findingId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetSensitiveDataOccurrencesResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/$defs/__string"
                },
                "sensitiveDataOccurrences": {
                    "$ref": "#/$defs/SensitiveDataOccurrences"
                },
                "status": {
                    "$ref": "#/$defs/RevealRequestStatus"
                }
            }
        },
        "SensitiveDataOccurrences": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/__listOfDetectedDataDetails"
            }
        },
        "__listOfDetectedDataDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectedDataDetails"
            }
        },
        "DetectedDataDetails": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/$defs/__stringMin1Max128"
                }
            }
        },
        "__stringMin1Max128": {
            "type": "string"
        },
        "RevealRequestStatus": {
            "enum": [
                "SUCCESS",
                "PROCESSING",
                "ERROR"
            ]
        },
        "GetSensitiveDataOccurrencesAvailabilityRequest": {
            "type": "object",
            "properties": {
                "findingId": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetSensitiveDataOccurrencesAvailabilityResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/AvailabilityCode"
                },
                "reasons": {
                    "$ref": "#/$defs/__listOfUnavailabilityReasonCode"
                }
            }
        },
        "AvailabilityCode": {
            "enum": [
                "AVAILABLE",
                "UNAVAILABLE"
            ]
        },
        "__listOfUnavailabilityReasonCode": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnavailabilityReasonCode"
            }
        },
        "UnavailabilityReasonCode": {
            "enum": [
                "OBJECT_EXCEEDS_SIZE_QUOTA",
                "UNSUPPORTED_OBJECT_TYPE",
                "UNSUPPORTED_FINDING_TYPE",
                "INVALID_CLASSIFICATION_RESULT",
                "OBJECT_UNAVAILABLE",
                "ACCOUNT_NOT_IN_ORGANIZATION",
                "MISSING_GET_MEMBER_PERMISSION",
                "ROLE_TOO_PERMISSIVE",
                "MEMBER_ROLE_TOO_PERMISSIVE",
                "INVALID_RESULT_SIGNATURE",
                "RESULT_NOT_SIGNED"
            ]
        },
        "GetSensitivityInspectionTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetSensitivityInspectionTemplateResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/__string"
                },
                "excludes": {
                    "$ref": "#/$defs/SensitivityInspectionTemplateExcludes"
                },
                "includes": {
                    "$ref": "#/$defs/SensitivityInspectionTemplateIncludes"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "sensitivityInspectionTemplateId": {
                    "$ref": "#/$defs/SensitivityInspectionTemplateId"
                }
            }
        },
        "SensitivityInspectionTemplateExcludes": {
            "type": "object",
            "properties": {
                "managedDataIdentifierIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "SensitivityInspectionTemplateIncludes": {
            "type": "object",
            "properties": {
                "allowListIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "customDataIdentifierIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "managedDataIdentifierIds": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "GetUsageStatisticsRequest": {
            "type": "object",
            "properties": {
                "filterBy": {
                    "$ref": "#/$defs/__listOfUsageStatisticsFilter"
                },
                "maxResults": {
                    "$ref": "#/$defs/__integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                },
                "sortBy": {
                    "$ref": "#/$defs/UsageStatisticsSortBy"
                },
                "timeRange": {
                    "$ref": "#/$defs/TimeRange"
                }
            }
        },
        "__listOfUsageStatisticsFilter": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageStatisticsFilter"
            }
        },
        "UsageStatisticsFilter": {
            "type": "object",
            "properties": {
                "comparator": {
                    "$ref": "#/$defs/UsageStatisticsFilterComparator"
                },
                "key": {
                    "$ref": "#/$defs/UsageStatisticsFilterKey"
                },
                "values": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "UsageStatisticsFilterComparator": {
            "enum": [
                "GT",
                "GTE",
                "LT",
                "LTE",
                "EQ",
                "NE",
                "CONTAINS"
            ]
        },
        "UsageStatisticsFilterKey": {
            "enum": [
                "accountId",
                "serviceLimit",
                "freeTrialStartDate",
                "total"
            ]
        },
        "UsageStatisticsSortBy": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/UsageStatisticsSortKey"
                },
                "orderBy": {
                    "$ref": "#/$defs/OrderBy"
                }
            }
        },
        "UsageStatisticsSortKey": {
            "enum": [
                "accountId",
                "total",
                "serviceLimitValue",
                "freeTrialStartDate"
            ]
        },
        "TimeRange": {
            "enum": [
                "MONTH_TO_DATE",
                "PAST_30_DAYS"
            ]
        },
        "GetUsageStatisticsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/__string"
                },
                "records": {
                    "$ref": "#/$defs/__listOfUsageRecord"
                },
                "timeRange": {
                    "$ref": "#/$defs/TimeRange"
                }
            }
        },
        "__listOfUsageRecord": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageRecord"
            }
        },
        "UsageRecord": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "automatedDiscoveryFreeTrialStartDate": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "freeTrialStartDate": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "usage": {
                    "$ref": "#/$defs/__listOfUsageByAccount"
                }
            }
        },
        "__listOfUsageByAccount": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageByAccount"
            }
        },
        "UsageByAccount": {
            "type": "object",
            "properties": {
                "currency": {
                    "$ref": "#/$defs/Currency"
                },
                "estimatedCost": {
                    "$ref": "#/$defs/__string"
                },
                "serviceLimit": {
                    "$ref": "#/$defs/ServiceLimit"
                },
                "type": {
                    "$ref": "#/$defs/UsageType"
                }
            }
        },
        "Currency": {
            "enum": [
                "USD"
            ]
        },
        "ServiceLimit": {
            "type": "object",
            "properties": {
                "isServiceLimited": {
                    "$ref": "#/$defs/__boolean"
                },
                "unit": {
                    "$ref": "#/$defs/Unit"
                },
                "value": {
                    "$ref": "#/$defs/__long"
                }
            }
        },
        "Unit": {
            "enum": [
                "TERABYTES"
            ]
        },
        "UsageType": {
            "enum": [
                "DATA_INVENTORY_EVALUATION",
                "SENSITIVE_DATA_DISCOVERY",
                "AUTOMATED_SENSITIVE_DATA_DISCOVERY",
                "AUTOMATED_OBJECT_MONITORING"
            ]
        },
        "GetUsageTotalsRequest": {
            "type": "object",
            "properties": {
                "timeRange": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "GetUsageTotalsResponse": {
            "type": "object",
            "properties": {
                "timeRange": {
                    "$ref": "#/$defs/TimeRange"
                },
                "usageTotals": {
                    "$ref": "#/$defs/__listOfUsageTotal"
                }
            }
        },
        "__listOfUsageTotal": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageTotal"
            }
        },
        "UsageTotal": {
            "type": "object",
            "properties": {
                "currency": {
                    "$ref": "#/$defs/Currency"
                },
                "estimatedCost": {
                    "$ref": "#/$defs/__string"
                },
                "type": {
                    "$ref": "#/$defs/UsageType"
                }
            }
        },
        "ListAllowListsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListAllowListsResponse": {
            "type": "object",
            "properties": {
                "allowLists": {
                    "$ref": "#/$defs/__listOfAllowListSummary"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfAllowListSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllowListSummary"
            }
        },
        "AllowListSummary": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922"
                },
                "createdAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "description": {
                    "$ref": "#/$defs/__stringMin1Max512PatternSS"
                },
                "id": {
                    "$ref": "#/$defs/__stringMin22Max22PatternAZ0922"
                },
                "name": {
                    "$ref": "#/$defs/__stringMin1Max128Pattern"
                },
                "updatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "ListAutomatedDiscoveryAccountsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListAutomatedDiscoveryAccountsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/__listOfAutomatedDiscoveryAccount"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfAutomatedDiscoveryAccount": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutomatedDiscoveryAccount"
            }
        },
        "AutomatedDiscoveryAccount": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "status": {
                    "$ref": "#/$defs/AutomatedDiscoveryAccountStatus"
                }
            }
        },
        "ListClassificationJobsRequest": {
            "type": "object",
            "properties": {
                "filterCriteria": {
                    "$ref": "#/$defs/ListJobsFilterCriteria"
                },
                "maxResults": {
                    "$ref": "#/$defs/__integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                },
                "sortCriteria": {
                    "$ref": "#/$defs/ListJobsSortCriteria"
                }
            }
        },
        "ListJobsFilterCriteria": {
            "type": "object",
            "properties": {
                "excludes": {
                    "$ref": "#/$defs/__listOfListJobsFilterTerm"
                },
                "includes": {
                    "$ref": "#/$defs/__listOfListJobsFilterTerm"
                }
            }
        },
        "__listOfListJobsFilterTerm": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListJobsFilterTerm"
            }
        },
        "ListJobsFilterTerm": {
            "type": "object",
            "properties": {
                "comparator": {
                    "$ref": "#/$defs/JobComparator"
                },
                "key": {
                    "$ref": "#/$defs/ListJobsFilterKey"
                },
                "values": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "ListJobsFilterKey": {
            "enum": [
                "jobType",
                "jobStatus",
                "createdAt",
                "name"
            ]
        },
        "ListJobsSortCriteria": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "$ref": "#/$defs/ListJobsSortAttributeName"
                },
                "orderBy": {
                    "$ref": "#/$defs/OrderBy"
                }
            }
        },
        "ListJobsSortAttributeName": {
            "enum": [
                "createdAt",
                "jobStatus",
                "name",
                "jobType"
            ]
        },
        "ListClassificationJobsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/__listOfJobSummary"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfJobSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobSummary"
            }
        },
        "JobSummary": {
            "type": "object",
            "properties": {
                "bucketCriteria": {
                    "$ref": "#/$defs/S3BucketCriteriaForJob"
                },
                "bucketDefinitions": {
                    "$ref": "#/$defs/__listOfS3BucketDefinitionForJob"
                },
                "createdAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "jobId": {
                    "$ref": "#/$defs/__string"
                },
                "jobStatus": {
                    "$ref": "#/$defs/JobStatus"
                },
                "jobType": {
                    "$ref": "#/$defs/JobType"
                },
                "lastRunErrorStatus": {
                    "$ref": "#/$defs/LastRunErrorStatus"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "userPausedDetails": {
                    "$ref": "#/$defs/UserPausedDetails"
                }
            }
        },
        "ListClassificationScopesRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListClassificationScopesResponse": {
            "type": "object",
            "properties": {
                "classificationScopes": {
                    "$ref": "#/$defs/__listOfClassificationScopeSummary"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "__listOfClassificationScopeSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClassificationScopeSummary"
            }
        },
        "ClassificationScopeSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ClassificationScopeId"
                },
                "name": {
                    "$ref": "#/$defs/ClassificationScopeName"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListCustomDataIdentifiersRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/__integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListCustomDataIdentifiersResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/__listOfCustomDataIdentifierSummary"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfCustomDataIdentifierSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomDataIdentifierSummary"
            }
        },
        "CustomDataIdentifierSummary": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "createdAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "description": {
                    "$ref": "#/$defs/__string"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListFindingsRequest": {
            "type": "object",
            "properties": {
                "findingCriteria": {
                    "$ref": "#/$defs/FindingCriteria"
                },
                "maxResults": {
                    "$ref": "#/$defs/__integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                },
                "sortCriteria": {
                    "$ref": "#/$defs/SortCriteria"
                }
            }
        },
        "ListFindingsResponse": {
            "type": "object",
            "properties": {
                "findingIds": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListFindingsFiltersRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListFindingsFiltersResponse": {
            "type": "object",
            "properties": {
                "findingsFilterListItems": {
                    "$ref": "#/$defs/__listOfFindingsFilterListItem"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfFindingsFilterListItem": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FindingsFilterListItem"
            }
        },
        "FindingsFilterListItem": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/$defs/FindingsFilterAction"
                },
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListInvitationsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListInvitationsResponse": {
            "type": "object",
            "properties": {
                "invitations": {
                    "$ref": "#/$defs/__listOfInvitation"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfInvitation": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Invitation"
            }
        },
        "ListManagedDataIdentifiersRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListManagedDataIdentifiersResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "$ref": "#/$defs/__listOfManagedDataIdentifierSummary"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfManagedDataIdentifierSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ManagedDataIdentifierSummary"
            }
        },
        "ManagedDataIdentifierSummary": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/$defs/SensitiveDataItemCategory"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListMembersRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                },
                "onlyAssociated": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListMembersResponse": {
            "type": "object",
            "properties": {
                "members": {
                    "$ref": "#/$defs/__listOfMember"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfMember": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Member"
            }
        },
        "Member": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "administratorAccountId": {
                    "$ref": "#/$defs/__string"
                },
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "email": {
                    "$ref": "#/$defs/__string"
                },
                "invitedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "masterAccountId": {
                    "$ref": "#/$defs/__string"
                },
                "relationshipStatus": {
                    "$ref": "#/$defs/RelationshipStatus"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "updatedAt": {
                    "$ref": "#/$defs/__timestampIso8601"
                }
            }
        },
        "ListOrganizationAdminAccountsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListOrganizationAdminAccountsResponse": {
            "type": "object",
            "properties": {
                "adminAccounts": {
                    "$ref": "#/$defs/__listOfAdminAccount"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfAdminAccount": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AdminAccount"
            }
        },
        "AdminAccount": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "status": {
                    "$ref": "#/$defs/AdminStatus"
                }
            }
        },
        "AdminStatus": {
            "enum": [
                "ENABLED",
                "DISABLING_IN_PROGRESS"
            ]
        },
        "ListResourceProfileArtifactsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/__string"
                },
                "resourceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListResourceProfileArtifactsResponse": {
            "type": "object",
            "properties": {
                "artifacts": {
                    "$ref": "#/$defs/__listOfResourceProfileArtifact"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfResourceProfileArtifact": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceProfileArtifact"
            }
        },
        "ResourceProfileArtifact": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "classificationResultStatus": {
                    "$ref": "#/$defs/__string"
                },
                "sensitive": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "ListResourceProfileDetectionsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                },
                "resourceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListResourceProfileDetectionsResponse": {
            "type": "object",
            "properties": {
                "detections": {
                    "$ref": "#/$defs/__listOfDetection"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfDetection": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Detection"
            }
        },
        "Detection": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "count": {
                    "$ref": "#/$defs/__long"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "suppressed": {
                    "$ref": "#/$defs/__boolean"
                },
                "type": {
                    "$ref": "#/$defs/DataIdentifierType"
                }
            }
        },
        "DataIdentifierType": {
            "enum": [
                "CUSTOM",
                "MANAGED"
            ]
        },
        "ListSensitivityInspectionTemplatesRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListSensitivityInspectionTemplatesResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/__string"
                },
                "sensitivityInspectionTemplates": {
                    "$ref": "#/$defs/__listOfSensitivityInspectionTemplatesEntry"
                }
            }
        },
        "__listOfSensitivityInspectionTemplatesEntry": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SensitivityInspectionTemplatesEntry"
            }
        },
        "SensitivityInspectionTemplatesEntry": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "PutClassificationExportConfigurationRequest": {
            "type": "object",
            "properties": {
                "configuration": {
                    "$ref": "#/$defs/ClassificationExportConfiguration"
                }
            }
        },
        "PutClassificationExportConfigurationResponse": {
            "type": "object",
            "properties": {
                "configuration": {
                    "$ref": "#/$defs/ClassificationExportConfiguration"
                }
            }
        },
        "PutFindingsPublicationConfigurationRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/__string"
                },
                "securityHubConfiguration": {
                    "$ref": "#/$defs/SecurityHubConfiguration"
                }
            }
        },
        "PutFindingsPublicationConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "SearchResourcesRequest": {
            "type": "object",
            "properties": {
                "bucketCriteria": {
                    "$ref": "#/$defs/SearchResourcesBucketCriteria"
                },
                "maxResults": {
                    "$ref": "#/$defs/__integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                },
                "sortCriteria": {
                    "$ref": "#/$defs/SearchResourcesSortCriteria"
                }
            }
        },
        "SearchResourcesBucketCriteria": {
            "type": "object",
            "properties": {
                "excludes": {
                    "$ref": "#/$defs/SearchResourcesCriteriaBlock"
                },
                "includes": {
                    "$ref": "#/$defs/SearchResourcesCriteriaBlock"
                }
            }
        },
        "SearchResourcesCriteriaBlock": {
            "type": "object",
            "properties": {
                "and": {
                    "$ref": "#/$defs/__listOfSearchResourcesCriteria"
                }
            }
        },
        "__listOfSearchResourcesCriteria": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SearchResourcesCriteria"
            }
        },
        "SearchResourcesCriteria": {
            "type": "object",
            "properties": {
                "simpleCriterion": {
                    "$ref": "#/$defs/SearchResourcesSimpleCriterion"
                },
                "tagCriterion": {
                    "$ref": "#/$defs/SearchResourcesTagCriterion"
                }
            }
        },
        "SearchResourcesSimpleCriterion": {
            "type": "object",
            "properties": {
                "comparator": {
                    "$ref": "#/$defs/SearchResourcesComparator"
                },
                "key": {
                    "$ref": "#/$defs/SearchResourcesSimpleCriterionKey"
                },
                "values": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "SearchResourcesComparator": {
            "enum": [
                "EQ",
                "NE"
            ]
        },
        "SearchResourcesSimpleCriterionKey": {
            "enum": [
                "ACCOUNT_ID",
                "S3_BUCKET_NAME",
                "S3_BUCKET_EFFECTIVE_PERMISSION",
                "S3_BUCKET_SHARED_ACCESS",
                "AUTOMATED_DISCOVERY_MONITORING_STATUS"
            ]
        },
        "SearchResourcesTagCriterion": {
            "type": "object",
            "properties": {
                "comparator": {
                    "$ref": "#/$defs/SearchResourcesComparator"
                },
                "tagValues": {
                    "$ref": "#/$defs/__listOfSearchResourcesTagCriterionPair"
                }
            }
        },
        "__listOfSearchResourcesTagCriterionPair": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SearchResourcesTagCriterionPair"
            }
        },
        "SearchResourcesTagCriterionPair": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/__string"
                },
                "value": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "SearchResourcesSortCriteria": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "$ref": "#/$defs/SearchResourcesSortAttributeName"
                },
                "orderBy": {
                    "$ref": "#/$defs/OrderBy"
                }
            }
        },
        "SearchResourcesSortAttributeName": {
            "enum": [
                "ACCOUNT_ID",
                "RESOURCE_NAME",
                "S3_CLASSIFIABLE_OBJECT_COUNT",
                "S3_CLASSIFIABLE_SIZE_IN_BYTES"
            ]
        },
        "SearchResourcesResponse": {
            "type": "object",
            "properties": {
                "matchingResources": {
                    "$ref": "#/$defs/__listOfMatchingResource"
                },
                "nextToken": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "__listOfMatchingResource": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MatchingResource"
            }
        },
        "MatchingResource": {
            "type": "object",
            "properties": {
                "matchingBucket": {
                    "$ref": "#/$defs/MatchingBucket"
                }
            }
        },
        "MatchingBucket": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/__string"
                },
                "automatedDiscoveryMonitoringStatus": {
                    "$ref": "#/$defs/AutomatedDiscoveryMonitoringStatus"
                },
                "bucketName": {
                    "$ref": "#/$defs/__string"
                },
                "classifiableObjectCount": {
                    "$ref": "#/$defs/__long"
                },
                "classifiableSizeInBytes": {
                    "$ref": "#/$defs/__long"
                },
                "errorCode": {
                    "$ref": "#/$defs/BucketMetadataErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/__string"
                },
                "jobDetails": {
                    "$ref": "#/$defs/JobDetails"
                },
                "lastAutomatedDiscoveryTime": {
                    "$ref": "#/$defs/__timestampIso8601"
                },
                "objectCount": {
                    "$ref": "#/$defs/__long"
                },
                "objectCountByEncryptionType": {
                    "$ref": "#/$defs/ObjectCountByEncryptionType"
                },
                "sensitivityScore": {
                    "$ref": "#/$defs/__integer"
                },
                "sizeInBytes": {
                    "$ref": "#/$defs/__long"
                },
                "sizeInBytesCompressed": {
                    "$ref": "#/$defs/__long"
                },
                "unclassifiableObjectCount": {
                    "$ref": "#/$defs/ObjectLevelStatistics"
                },
                "unclassifiableObjectSizeInBytes": {
                    "$ref": "#/$defs/ObjectLevelStatistics"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TestCustomDataIdentifierRequest": {
            "type": "object",
            "properties": {
                "ignoreWords": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "keywords": {
                    "$ref": "#/$defs/__listOf__string"
                },
                "maximumMatchDistance": {
                    "$ref": "#/$defs/__integer"
                },
                "regex": {
                    "$ref": "#/$defs/__string"
                },
                "sampleText": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "TestCustomDataIdentifierResponse": {
            "type": "object",
            "properties": {
                "matchCount": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "tagKeys": {
                    "$ref": "#/$defs/__listOf__string"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateAllowListRequest": {
            "type": "object",
            "properties": {
                "criteria": {
                    "$ref": "#/$defs/AllowListCriteria"
                },
                "description": {
                    "$ref": "#/$defs/__stringMin1Max512PatternSS"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "name": {
                    "$ref": "#/$defs/__stringMin1Max128Pattern"
                }
            }
        },
        "UpdateAllowListResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__stringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922"
                },
                "id": {
                    "$ref": "#/$defs/__stringMin22Max22PatternAZ0922"
                }
            }
        },
        "UpdateAutomatedDiscoveryConfigurationRequest": {
            "type": "object",
            "properties": {
                "autoEnableOrganizationMembers": {
                    "$ref": "#/$defs/AutoEnableMode"
                },
                "status": {
                    "$ref": "#/$defs/AutomatedDiscoveryStatus"
                }
            }
        },
        "UpdateAutomatedDiscoveryConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateClassificationJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/__string"
                },
                "jobStatus": {
                    "$ref": "#/$defs/JobStatus"
                }
            }
        },
        "UpdateClassificationJobResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateClassificationScopeRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "s3": {
                    "$ref": "#/$defs/S3ClassificationScopeUpdate"
                }
            }
        },
        "S3ClassificationScopeUpdate": {
            "type": "object",
            "properties": {
                "excludes": {
                    "$ref": "#/$defs/S3ClassificationScopeExclusionUpdate"
                }
            }
        },
        "S3ClassificationScopeExclusionUpdate": {
            "type": "object",
            "properties": {
                "bucketNames": {
                    "$ref": "#/$defs/__listOfS3BucketName"
                },
                "operation": {
                    "$ref": "#/$defs/ClassificationScopeUpdateOperation"
                }
            }
        },
        "ClassificationScopeUpdateOperation": {
            "enum": [
                "ADD",
                "REPLACE",
                "REMOVE"
            ]
        },
        "UpdateClassificationScopeResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateFindingsFilterRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/$defs/FindingsFilterAction"
                },
                "clientToken": {
                    "$ref": "#/$defs/__string"
                },
                "description": {
                    "$ref": "#/$defs/__string"
                },
                "findingCriteria": {
                    "$ref": "#/$defs/FindingCriteria"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "name": {
                    "$ref": "#/$defs/__string"
                },
                "position": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "UpdateFindingsFilterResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/__string"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                }
            }
        },
        "UpdateMacieSessionRequest": {
            "type": "object",
            "properties": {
                "findingPublishingFrequency": {
                    "$ref": "#/$defs/FindingPublishingFrequency"
                },
                "status": {
                    "$ref": "#/$defs/MacieStatus"
                }
            }
        },
        "UpdateMacieSessionResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateMemberSessionRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "status": {
                    "$ref": "#/$defs/MacieStatus"
                }
            }
        },
        "UpdateMemberSessionResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateOrganizationConfigurationRequest": {
            "type": "object",
            "properties": {
                "autoEnable": {
                    "$ref": "#/$defs/__boolean"
                }
            }
        },
        "UpdateOrganizationConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateResourceProfileRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "sensitivityScoreOverride": {
                    "$ref": "#/$defs/__integer"
                }
            }
        },
        "UpdateResourceProfileResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateResourceProfileDetectionsRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/__string"
                },
                "suppressDataIdentifiers": {
                    "$ref": "#/$defs/__listOfSuppressDataIdentifier"
                }
            }
        },
        "__listOfSuppressDataIdentifier": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SuppressDataIdentifier"
            }
        },
        "SuppressDataIdentifier": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "type": {
                    "$ref": "#/$defs/DataIdentifierType"
                }
            }
        },
        "UpdateResourceProfileDetectionsResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateRevealConfigurationRequest": {
            "type": "object",
            "properties": {
                "configuration": {
                    "$ref": "#/$defs/RevealConfiguration"
                },
                "retrievalConfiguration": {
                    "$ref": "#/$defs/UpdateRetrievalConfiguration"
                }
            }
        },
        "UpdateRetrievalConfiguration": {
            "type": "object",
            "properties": {
                "retrievalMode": {
                    "$ref": "#/$defs/RetrievalMode"
                },
                "roleName": {
                    "$ref": "#/$defs/__stringMin1Max64PatternW"
                }
            }
        },
        "UpdateRevealConfigurationResponse": {
            "type": "object",
            "properties": {
                "configuration": {
                    "$ref": "#/$defs/RevealConfiguration"
                },
                "retrievalConfiguration": {
                    "$ref": "#/$defs/RetrievalConfiguration"
                }
            }
        },
        "UpdateSensitivityInspectionTemplateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/__string"
                },
                "excludes": {
                    "$ref": "#/$defs/SensitivityInspectionTemplateExcludes"
                },
                "id": {
                    "$ref": "#/$defs/__string"
                },
                "includes": {
                    "$ref": "#/$defs/SensitivityInspectionTemplateIncludes"
                }
            }
        },
        "UpdateSensitivityInspectionTemplateResponse": {
            "type": "object",
            "properties": {}
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://macie2-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://macie2-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://macie2.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://macie2.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}